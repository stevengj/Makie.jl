~~~
<div id="6943b043-3013-460c-a18d-0686053a4271" data-jscall-id="subsession-application-dom">
  <div>
    <div>
      <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var Hc = "157", zx = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vx = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, kd = 0, rl = 1, Hd = 2, kx = 3, Hx = 0, cd = 1, Gd = 2, pn = 3, Bn = 0, Ft = 1, gn = 2, Gx = 2, Dn = 0, Wi = 1, al = 2, ol = 3, cl = 4, Wd = 5, Bi = 100, Xd = 101, qd = 102, ll = 103, hl = 104, Yd = 200, Zd = 201, Jd = 202, $d = 203, ld = 204, hd = 205, Kd = 206, Qd = 207, jd = 208, ef = 209, tf = 210, nf = 0, sf = 1, rf = 2, uo = 3, af = 4, of = 5, cf = 6, lf = 7, xa = 0, hf = 1, uf = 2, Nn = 0, df = 1, ff = 2, pf = 3, mf = 4, gf = 5, Gc = 300, zn = 301, ci = 302, Ir = 303, Ur = 304, Vs = 306, Dr = 1e3, It = 1001, Nr = 1002, pt = 1003, fo = 1004, Wx = 1004, Lr = 1005, Xx = 1005, mt = 1006, ud = 1007, qx = 1007, li = 1008, Yx = 1008, On = 1009, _f = 1010, xf = 1011, Wc = 1012, dd = 1013, Ln = 1014, xn = 1015, Ts = 1016, fd = 1017, pd = 1018, ii = 1020, vf = 1021, Wt = 1023, yf = 1024, Mf = 1025, si = 1026, Yi = 1027, Sf = 1028, md = 1029, bf = 1030, gd = 1031, _d = 1033, wa = 33776, Aa = 33777, Ra = 33778, Ca = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, Ef = 36196, ml = 37492, gl = 37496, _l = 37808, xl = 37809, vl = 37810, yl = 37811, Ml = 37812, Sl = 37813, bl = 37814, El = 37815, Tl = 37816, wl = 37817, Al = 37818, Rl = 37819, Cl = 37820, Pl = 37821, Pa = 36492, Ll = 36494, Il = 36495, Tf = 36283, Ul = 36284, Dl = 36285, Nl = 36286, wf = 2200, Af = 2201, Rf = 2202, Or = 2300, Fr = 2301, La = 2302, zi = 2400, Vi = 2401, Br = 2402, Xc = 2500, xd = 2501, Zx = 0, Jx = 1, $x = 2, vd = 3e3, ri = 3001, Cf = 3200, Pf = 3201, mi = 0, Lf = 1, Xt = "", vt = "srgb", Mn = "srgb-linear", qc = "display-p3", va = "display-p3-linear", zr = "linear", nt = "srgb", Vr = "rec709", kr = "p3", Kx = 0, Ia = 7680, Qx = 7681, jx = 7682, ev = 7683, tv = 34055, nv = 34056, iv = 5386, sv = 512, rv = 513, av = 514, ov = 515, cv = 516, lv = 517, hv = 518, If = 519, Uf = 512, Df = 513, Nf = 514, Of = 515, Ff = 516, Bf = 517, zf = 518, Vf = 519, Hr = 35044, uv = 35048, dv = 35040, fv = 35045, pv = 35049, mv = 35041, gv = 35046, _v = 35050, xv = 35042, vv = "100", Ol = "300 es", po = 1035, vn = 2e3, Gr = 2001, sn = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, a = i.length; r < a; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, Et = [
    "00",
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "0a",
    "0b",
    "0c",
    "0d",
    "0e",
    "0f",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "1a",
    "1b",
    "1c",
    "1d",
    "1e",
    "1f",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "2a",
    "2b",
    "2c",
    "2d",
    "2e",
    "2f",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "3a",
    "3b",
    "3c",
    "3d",
    "3e",
    "3f",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "4a",
    "4b",
    "4c",
    "4d",
    "4e",
    "4f",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "5a",
    "5b",
    "5c",
    "5d",
    "5e",
    "5f",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "6a",
    "6b",
    "6c",
    "6d",
    "6e",
    "6f",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "7a",
    "7b",
    "7c",
    "7d",
    "7e",
    "7f",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87",
    "88",
    "89",
    "8a",
    "8b",
    "8c",
    "8d",
    "8e",
    "8f",
    "90",
    "91",
    "92",
    "93",
    "94",
    "95",
    "96",
    "97",
    "98",
    "99",
    "9a",
    "9b",
    "9c",
    "9d",
    "9e",
    "9f",
    "a0",
    "a1",
    "a2",
    "a3",
    "a4",
    "a5",
    "a6",
    "a7",
    "a8",
    "a9",
    "aa",
    "ab",
    "ac",
    "ad",
    "ae",
    "af",
    "b0",
    "b1",
    "b2",
    "b3",
    "b4",
    "b5",
    "b6",
    "b7",
    "b8",
    "b9",
    "ba",
    "bb",
    "bc",
    "bd",
    "be",
    "bf",
    "c0",
    "c1",
    "c2",
    "c3",
    "c4",
    "c5",
    "c6",
    "c7",
    "c8",
    "c9",
    "ca",
    "cb",
    "cc",
    "cd",
    "ce",
    "cf",
    "d0",
    "d1",
    "d2",
    "d3",
    "d4",
    "d5",
    "d6",
    "d7",
    "d8",
    "d9",
    "da",
    "db",
    "dc",
    "dd",
    "de",
    "df",
    "e0",
    "e1",
    "e2",
    "e3",
    "e4",
    "e5",
    "e6",
    "e7",
    "e8",
    "e9",
    "ea",
    "eb",
    "ec",
    "ed",
    "ee",
    "ef",
    "f0",
    "f1",
    "f2",
    "f3",
    "f4",
    "f5",
    "f6",
    "f7",
    "f8",
    "f9",
    "fa",
    "fb",
    "fc",
    "fd",
    "fe",
    "ff"
], Fl = 1234567, ai = Math.PI / 180, Zi = 180 / Math.PI;
function kt() {
    let s1 = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (Et[s1 & 255] + Et[s1 >> 8 & 255] + Et[s1 >> 16 & 255] + Et[s1 >> 24 & 255] + "-" + Et[e & 255] + Et[e >> 8 & 255] + "-" + Et[e >> 16 & 15 | 64] + Et[e >> 24 & 255] + "-" + Et[t & 63 | 128] + Et[t >> 8 & 255] + "-" + Et[t >> 16 & 255] + Et[t >> 24 & 255] + Et[n & 255] + Et[n >> 8 & 255] + Et[n >> 16 & 255] + Et[n >> 24 & 255]).toLowerCase();
}
function ct(s1, e, t) {
    return Math.max(e, Math.min(t, s1));
}
function Yc(s1, e) {
    return (s1 % e + e) % e;
}
function kf(s1, e, t, n, i) {
    return n + (s1 - e) * (i - n) / (t - e);
}
function Hf(s1, e, t) {
    return s1 !== e ? (t - s1) / (e - s1) : 0;
}
function ys(s1, e, t) {
    return (1 - t) * s1 + t * e;
}
function Gf(s1, e, t, n) {
    return ys(s1, e, 1 - Math.exp(-t * n));
}
function Wf(s1, e = 1) {
    return e - Math.abs(Yc(s1, e * 2) - e);
}
function Xf(s1, e, t) {
    return s1 <= e ? 0 : s1 >= t ? 1 : (s1 = (s1 - e) / (t - e), s1 * s1 * (3 - 2 * s1));
}
function qf(s1, e, t) {
    return s1 <= e ? 0 : s1 >= t ? 1 : (s1 = (s1 - e) / (t - e), s1 * s1 * s1 * (s1 * (s1 * 6 - 15) + 10));
}
function Yf(s1, e) {
    return s1 + Math.floor(Math.random() * (e - s1 + 1));
}
function Zf(s1, e) {
    return s1 + Math.random() * (e - s1);
}
function Jf(s1) {
    return s1 * (.5 - Math.random());
}
function $f(s1) {
    s1 !== void 0 && (Fl = s1);
    let e = Fl += 1831565813;
    return e = Math.imul(e ^ e >>> 15, e | 1), e ^= e + Math.imul(e ^ e >>> 7, e | 61), ((e ^ e >>> 14) >>> 0) / 4294967296;
}
function Kf(s1) {
    return s1 * ai;
}
function Qf(s1) {
    return s1 * Zi;
}
function mo(s1) {
    return (s1 & s1 - 1) === 0 && s1 !== 0;
}
function yd(s1) {
    return Math.pow(2, Math.ceil(Math.log(s1) / Math.LN2));
}
function Wr(s1) {
    return Math.pow(2, Math.floor(Math.log(s1) / Math.LN2));
}
function jf(s1, e, t, n, i) {
    let r = Math.cos, a = Math.sin, o = r(t / 2), c = a(t / 2), l = r((e + n) / 2), h = a((e + n) / 2), u = r((e - n) / 2), d = a((e - n) / 2), f = r((n - e) / 2), m = a((n - e) / 2);
    switch(i){
        case "XYX":
            s1.set(o * h, c * u, c * d, o * l);
            break;
        case "YZY":
            s1.set(c * d, o * h, c * u, o * l);
            break;
        case "ZXZ":
            s1.set(c * u, c * d, o * h, o * l);
            break;
        case "XZX":
            s1.set(o * h, c * m, c * f, o * l);
            break;
        case "YXY":
            s1.set(c * f, o * h, c * m, o * l);
            break;
        case "ZYZ":
            s1.set(c * m, c * f, o * h, o * l);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
function Ot(s1, e) {
    switch(e.constructor){
        case Float32Array:
            return s1;
        case Uint32Array:
            return s1 / 4294967295;
        case Uint16Array:
            return s1 / 65535;
        case Uint8Array:
            return s1 / 255;
        case Int32Array:
            return Math.max(s1 / 2147483647, -1);
        case Int16Array:
            return Math.max(s1 / 32767, -1);
        case Int8Array:
            return Math.max(s1 / 127, -1);
        default:
            throw new Error("Invalid component type.");
    }
}
function Be(s1, e) {
    switch(e.constructor){
        case Float32Array:
            return s1;
        case Uint32Array:
            return Math.round(s1 * 4294967295);
        case Uint16Array:
            return Math.round(s1 * 65535);
        case Uint8Array:
            return Math.round(s1 * 255);
        case Int32Array:
            return Math.round(s1 * 2147483647);
        case Int16Array:
            return Math.round(s1 * 32767);
        case Int8Array:
            return Math.round(s1 * 127);
        default:
            throw new Error("Invalid component type.");
    }
}
var yv = {
    DEG2RAD: ai,
    RAD2DEG: Zi,
    generateUUID: kt,
    clamp: ct,
    euclideanModulo: Yc,
    mapLinear: kf,
    inverseLerp: Hf,
    lerp: ys,
    damp: Gf,
    pingpong: Wf,
    smoothstep: Xf,
    smootherstep: qf,
    randInt: Yf,
    randFloat: Zf,
    randFloatSpread: Jf,
    seededRandom: $f,
    degToRad: Kf,
    radToDeg: Qf,
    isPowerOfTwo: mo,
    ceilPowerOfTwo: yd,
    floorPowerOfTwo: Wr,
    setQuaternionFromProperEuler: jf,
    normalize: Be,
    denormalize: Ot
}, Z = class s1 {
    constructor(e = 0, t = 0){
        s1.prototype.isVector2 = !0, this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e) {
        return this.x += e.x, this.y += e.y, this;
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e) {
        return this.x -= e.x, this.y -= e.y, this;
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(ct(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t) {
        return this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, a = this.y - e.y;
        return this.x = r * n - a * i + e.x, this.y = r * i + a * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
}, He = class s1 {
    constructor(e, t, n, i, r, a, o, c, l){
        s1.prototype.isMatrix3 = !0, this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], e !== void 0 && this.set(e, t, n, i, r, a, o, c, l);
    }
    set(e, t, n, i, r, a, o, c, l) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = o, h[3] = t, h[4] = r, h[5] = c, h[6] = n, h[7] = a, h[8] = l, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, a = n[0], o = n[3], c = n[6], l = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], _ = i[0], g = i[3], p = i[6], v = i[1], x = i[4], y = i[7], b = i[2], w = i[5], R = i[8];
        return r[0] = a * _ + o * v + c * b, r[3] = a * g + o * x + c * w, r[6] = a * p + o * y + c * R, r[1] = l * _ + h * v + u * b, r[4] = l * g + h * x + u * w, r[7] = l * p + h * y + u * R, r[2] = d * _ + f * v + m * b, r[5] = d * g + f * x + m * w, r[8] = d * p + f * y + m * R, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], a = e[4], o = e[5], c = e[6], l = e[7], h = e[8];
        return t * a * h - t * o * l - n * r * h + n * o * c + i * r * l - i * a * c;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], a = e[4], o = e[5], c = e[6], l = e[7], h = e[8], u = h * a - o * l, d = o * c - h * r, f = l * r - a * c, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let _ = 1 / m;
        return e[0] = u * _, e[1] = (i * l - h * n) * _, e[2] = (o * n - i * a) * _, e[3] = d * _, e[4] = (h * t - i * c) * _, e[5] = (i * r - o * t) * _, e[6] = f * _, e[7] = (n * c - l * t) * _, e[8] = (a * t - n * r) * _, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, a, o) {
        let c = Math.cos(r), l = Math.sin(r);
        return this.set(n * c, n * l, -n * (c * a + l * o) + a + e, -i * l, i * c, -i * (-l * a + c * o) + o + t, 0, 0, 1), this;
    }
    scale(e, t) {
        return this.premultiply(Ua.makeScale(e, t)), this;
    }
    rotate(e) {
        return this.premultiply(Ua.makeRotation(-e)), this;
    }
    translate(e, t) {
        return this.premultiply(Ua.makeTranslation(e, t)), this;
    }
    makeTranslation(e, t) {
        return e.isVector2 ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1) : this.set(1, 0, e, 0, 1, t, 0, 0, 1), this;
    }
    makeRotation(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, n, t, 0, 0, 0, 1), this;
    }
    makeScale(e, t) {
        return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
}, Ua = new He;
function Md(s1) {
    for(let e = s1.length - 1; e >= 0; --e)if (s1[e] >= 65535) return !0;
    return !1;
}
var ep = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function ki(s1, e) {
    return new ep[s1](e);
}
function ws(s1) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s1);
}
function tp() {
    let s1 = ws("canvas");
    return s1.style.display = "block", s1;
}
var Bl = {};
function Ms(s1) {
    s1 in Bl || (Bl[s1] = !0, console.warn(s1));
}
var zl = new He().set(.8224621, .177538, 0, .0331941, .9668058, 0, .0170827, .0723974, .9105199), Vl = new He().set(1.2249401, -.2249404, 0, -.0420569, 1.0420571, 0, -.0196376, -.0786361, 1.0982735), Gs = {
    [Mn]: {
        transfer: zr,
        primaries: Vr,
        toReference: (s1)=>s1,
        fromReference: (s1)=>s1
    },
    [vt]: {
        transfer: nt,
        primaries: Vr,
        toReference: (s1)=>s1.convertSRGBToLinear(),
        fromReference: (s1)=>s1.convertLinearToSRGB()
    },
    [va]: {
        transfer: zr,
        primaries: kr,
        toReference: (s1)=>s1.applyMatrix3(Vl),
        fromReference: (s1)=>s1.applyMatrix3(zl)
    },
    [qc]: {
        transfer: nt,
        primaries: kr,
        toReference: (s1)=>s1.convertSRGBToLinear().applyMatrix3(Vl),
        fromReference: (s1)=>s1.applyMatrix3(zl).convertLinearToSRGB()
    }
}, np = new Set([
    Mn,
    va
]), Qe = {
    enabled: !0,
    _workingColorSpace: Mn,
    get legacyMode () {
        return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."), !this.enabled;
    },
    set legacyMode (s){
        console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."), this.enabled = !s;
    },
    get workingColorSpace () {
        return this._workingColorSpace;
    },
    set workingColorSpace (s){
        if (!np.has(s)) throw new Error(`Unsupported working color space, "${s}".`);
        this._workingColorSpace = s;
    },
    convert: function(s1, e, t) {
        if (this.enabled === !1 || e === t || !e || !t) return s1;
        let n = Gs[e].toReference, i = Gs[t].fromReference;
        return i(n(s1));
    },
    fromWorkingColorSpace: function(s1, e) {
        return this.convert(s1, this._workingColorSpace, e);
    },
    toWorkingColorSpace: function(s1, e) {
        return this.convert(s1, e, this._workingColorSpace);
    },
    getPrimaries: function(s1) {
        return Gs[s1].primaries;
    },
    getTransfer: function(s1) {
        return s1 === Xt ? zr : Gs[s1].transfer;
    }
};
function Xi(s1) {
    return s1 < .04045 ? s1 * .0773993808 : Math.pow(s1 * .9478672986 + .0521327014, 2.4);
}
function Da(s1) {
    return s1 < .0031308 ? s1 * 12.92 : 1.055 * Math.pow(s1, .41666) - .055;
}
var gi, Xr = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            gi === void 0 && (gi = ws("canvas")), gi.width = e.width, gi.height = e.height;
            let n = gi.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = gi;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
    static sRGBToLinear(e) {
        if (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && e instanceof ImageBitmap) {
            let t = ws("canvas");
            t.width = e.width, t.height = e.height;
            let n = t.getContext("2d");
            n.drawImage(e, 0, 0, e.width, e.height);
            let i = n.getImageData(0, 0, e.width, e.height), r = i.data;
            for(let a = 0; a < r.length; a++)r[a] = Xi(r[a] / 255) * 255;
            return n.putImageData(i, 0, 0), t;
        } else if (e.data) {
            let t = e.data.slice(0);
            for(let n = 0; n < t.length; n++)t instanceof Uint8Array || t instanceof Uint8ClampedArray ? t[n] = Math.floor(Xi(t[n] / 255) * 255) : t[n] = Xi(t[n]);
            return {
                data: t,
                width: e.width,
                height: e.height
            };
        } else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), e;
    }
}, ip = 0, In = class {
    constructor(e = null){
        this.isSource = !0, Object.defineProperty(this, "id", {
            value: ip++
        }), this.uuid = kt(), this.data = e, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.images[this.uuid] !== void 0) return e.images[this.uuid];
        let n = {
            uuid: this.uuid,
            url: ""
        }, i = this.data;
        if (i !== null) {
            let r;
            if (Array.isArray(i)) {
                r = [];
                for(let a = 0, o = i.length; a < o; a++)i[a].isDataTexture ? r.push(Na(i[a].image)) : r.push(Na(i[a]));
            } else r = Na(i);
            n.url = r;
        }
        return t || (e.images[this.uuid] = n), n;
    }
};
function Na(s1) {
    return typeof HTMLImageElement < "u" && s1 instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s1 instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s1 instanceof ImageBitmap ? Xr.getDataURL(s1) : s1.data ? {
        data: Array.from(s1.data),
        width: s1.width,
        height: s1.height,
        type: s1.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var sp = 0, St = class s1 extends sn {
    constructor(e = s1.DEFAULT_IMAGE, t = s1.DEFAULT_MAPPING, n = It, i = It, r = mt, a = li, o = Wt, c = On, l = s1.DEFAULT_ANISOTROPY, h = Xt){
        super(), this.isTexture = !0, Object.defineProperty(this, "id", {
            value: sp++
        }), this.uuid = kt(), this.name = "", this.source = new In(e), this.mipmaps = [], this.mapping = t, this.channel = 0, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = a, this.anisotropy = l, this.format = o, this.internalFormat = null, this.type = c, this.offset = new Z(0, 0), this.repeat = new Z(1, 1), this.center = new Z(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new He, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, typeof h == "string" ? this.colorSpace = h : (Ms("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace = h === ri ? vt : Xt), this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1, this.needsPMREMUpdate = !1;
    }
    get image() {
        return this.source.data;
    }
    set image(e = null) {
        this.source.data = e;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.source = e.source, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.channel = e.channel, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.colorSpace = e.colorSpace, this.userData = JSON.parse(JSON.stringify(e.userData)), this.needsUpdate = !0, this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.6,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            image: this.source.toJSON(e).uuid,
            mapping: this.mapping,
            channel: this.channel,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            internalFormat: this.internalFormat,
            type: this.type,
            colorSpace: this.colorSpace,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            generateMipmaps: this.generateMipmaps,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        return Object.keys(this.userData).length > 0 && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== Gc) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Dr:
                e.x = e.x - Math.floor(e.x);
                break;
            case It:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Nr:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Dr:
                e.y = e.y - Math.floor(e.y);
                break;
            case It:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Nr:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && (this.version++, this.source.needsUpdate = !0);
    }
    get encoding() {
        return Ms("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace === vt ? ri : vd;
    }
    set encoding(e) {
        Ms("THREE.Texture: Property .encoding has been replaced by .colorSpace."), this.colorSpace = e === ri ? vt : Xt;
    }
};
St.DEFAULT_IMAGE = null;
St.DEFAULT_MAPPING = Gc;
St.DEFAULT_ANISOTROPY = 1;
var je = class s1 {
    constructor(e = 0, t = 0, n = 0, i = 1){
        s1.prototype.isVector4 = !0, this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e) {
        return this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this;
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e) {
        return this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this;
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, a = e.elements;
        return this.x = a[0] * t + a[4] * n + a[8] * i + a[12] * r, this.y = a[1] * t + a[5] * n + a[9] * i + a[13] * r, this.z = a[2] * t + a[6] * n + a[10] * i + a[14] * r, this.w = a[3] * t + a[7] * n + a[11] * i + a[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, c = e.elements, l = c[0], h = c[4], u = c[8], d = c[1], f = c[5], m = c[9], _ = c[2], g = c[6], p = c[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - _) < .01 && Math.abs(m - g) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + _) < .1 && Math.abs(m + g) < .1 && Math.abs(l + f + p - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let x = (l + 1) / 2, y = (f + 1) / 2, b = (p + 1) / 2, w = (h + d) / 4, R = (u + _) / 4, I = (m + g) / 4;
            return x > y && x > b ? x < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(x), i = w / n, r = R / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = w / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = R / r, i = I / r), this.set(n, i, r, t), this;
        }
        let v = Math.sqrt((g - m) * (g - m) + (u - _) * (u - _) + (d - h) * (d - h));
        return Math.abs(v) < .001 && (v = 1), this.x = (g - m) / v, this.y = (u - _) / v, this.z = (d - h) / v, this.w = Math.acos((l + f + p - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this.w = Math.trunc(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t) {
        return this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
}, go = class extends sn {
    constructor(e = 1, t = 1, n = {}){
        super(), this.isRenderTarget = !0, this.width = e, this.height = t, this.depth = 1, this.scissor = new je(0, 0, e, t), this.scissorTest = !1, this.viewport = new je(0, 0, e, t);
        let i = {
            width: e,
            height: t,
            depth: 1
        };
        n.encoding !== void 0 && (Ms("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."), n.colorSpace = n.encoding === ri ? vt : Xt), n = Object.assign({
            generateMipmaps: !1,
            internalFormat: null,
            minFilter: mt,
            depthBuffer: !0,
            stencilBuffer: !1,
            depthTexture: null,
            samples: 0
        }, n), this.texture = new St(i, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.flipY = !1, this.texture.generateMipmaps = n.generateMipmaps, this.texture.internalFormat = n.internalFormat, this.depthBuffer = n.depthBuffer, this.stencilBuffer = n.stencilBuffer, this.depthTexture = n.depthTexture, this.samples = n.samples;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.isRenderTargetTexture = !0;
        let t = Object.assign({}, e.texture.image);
        return this.texture.source = new In(t), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.samples = e.samples, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
}, qt = class extends go {
    constructor(e = 1, t = 1, n = {}){
        super(e, t, n), this.isWebGLRenderTarget = !0;
    }
}, As = class extends St {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null), this.isDataArrayTexture = !0, this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = pt, this.minFilter = pt, this.wrapR = It, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
}, kl = class extends qt {
    constructor(e = 1, t = 1, n = 1){
        super(e, t), this.isWebGLArrayRenderTarget = !0, this.depth = n, this.texture = new As(null, e, t, n), this.texture.isRenderTargetTexture = !0;
    }
}, qr = class extends St {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null), this.isData3DTexture = !0, this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = pt, this.minFilter = pt, this.wrapR = It, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
}, Hl = class extends qt {
    constructor(e = 1, t = 1, n = 1){
        super(e, t), this.isWebGL3DRenderTarget = !0, this.depth = n, this.texture = new qr(null, e, t, n), this.texture.isRenderTargetTexture = !0;
    }
}, Gl = class extends qt {
    constructor(e = 1, t = 1, n = 1, i = {}){
        super(e, t, i), this.isWebGLMultipleRenderTargets = !0;
        let r = this.texture;
        this.texture = [];
        for(let a = 0; a < n; a++)this.texture[a] = r.clone(), this.texture[a].isRenderTargetTexture = !0;
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone(), this.texture[t].isRenderTargetTexture = !0;
        return this;
    }
}, Ut = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.isQuaternion = !0, this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerpFlat(e, t, n, i, r, a, o) {
        let c = n[i + 0], l = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[a + 0], f = r[a + 1], m = r[a + 2], _ = r[a + 3];
        if (o === 0) {
            e[t + 0] = c, e[t + 1] = l, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (o === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = _;
            return;
        }
        if (u !== _ || c !== d || l !== f || h !== m) {
            let g = 1 - o, p = c * d + l * f + h * m + u * _, v = p >= 0 ? 1 : -1, x = 1 - p * p;
            if (x > Number.EPSILON) {
                let b = Math.sqrt(x), w = Math.atan2(b, p * v);
                g = Math.sin(g * w) / b, o = Math.sin(o * w) / b;
            }
            let y = o * v;
            if (c = c * g + d * y, l = l * g + f * y, h = h * g + m * y, u = u * g + _ * y, g === 1 - o) {
                let b = 1 / Math.sqrt(c * c + l * l + h * h + u * u);
                c *= b, l *= b, h *= b, u *= b;
            }
        }
        e[t] = c, e[t + 1] = l, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, a) {
        let o = n[i], c = n[i + 1], l = n[i + 2], h = n[i + 3], u = r[a], d = r[a + 1], f = r[a + 2], m = r[a + 3];
        return e[t] = o * m + h * u + c * f - l * d, e[t + 1] = c * m + h * d + l * u - o * f, e[t + 2] = l * m + h * f + o * d - c * u, e[t + 3] = h * m - o * u - c * d - l * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        let n = e._x, i = e._y, r = e._z, a = e._order, o = Math.cos, c = Math.sin, l = o(n / 2), h = o(i / 2), u = o(r / 2), d = c(n / 2), f = c(i / 2), m = c(r / 2);
        switch(a){
            case "XYZ":
                this._x = d * h * u + l * f * m, this._y = l * f * u - d * h * m, this._z = l * h * m + d * f * u, this._w = l * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + l * f * m, this._y = l * f * u - d * h * m, this._z = l * h * m - d * f * u, this._w = l * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - l * f * m, this._y = l * f * u + d * h * m, this._z = l * h * m + d * f * u, this._w = l * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - l * f * m, this._y = l * f * u + d * h * m, this._z = l * h * m - d * f * u, this._w = l * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + l * f * m, this._y = l * f * u + d * h * m, this._z = l * h * m - d * f * u, this._w = l * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - l * f * m, this._y = l * f * u - d * h * m, this._z = l * h * m + d * f * u, this._w = l * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + a);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], a = t[1], o = t[5], c = t[9], l = t[2], h = t[6], u = t[10], d = n + o + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - c) * f, this._y = (r - l) * f, this._z = (a - i) * f;
        } else if (n > o && n > u) {
            let f = 2 * Math.sqrt(1 + n - o - u);
            this._w = (h - c) / f, this._x = .25 * f, this._y = (i + a) / f, this._z = (r + l) / f;
        } else if (o > u) {
            let f = 2 * Math.sqrt(1 + o - n - u);
            this._w = (r - l) / f, this._x = (i + a) / f, this._y = .25 * f, this._z = (c + h) / f;
        } else {
            let f = 2 * Math.sqrt(1 + u - n - o);
            this._w = (a - i) / f, this._x = (r + l) / f, this._y = (c + h) / f, this._z = .25 * f;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(ct(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e) {
        return this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, a = e._w, o = t._x, c = t._y, l = t._z, h = t._w;
        return this._x = n * h + a * o + i * l - r * c, this._y = i * h + a * c + r * o - n * l, this._z = r * h + a * l + n * c - i * o, this._w = a * h - n * o - i * c - r * l, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, a = this._w, o = a * e._w + n * e._x + i * e._y + r * e._z;
        if (o < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, o = -o) : this.copy(e), o >= 1) return this._w = a, this._x = n, this._y = i, this._z = r, this;
        let c = 1 - o * o;
        if (c <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * a + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let l = Math.sqrt(c), h = Math.atan2(l, o), u = Math.sin((1 - t) * h) / l, d = Math.sin(t * h) / l;
        return this._w = a * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        return this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    toJSON() {
        return this.toArray();
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
    *[Symbol.iterator]() {
        yield this._x, yield this._y, yield this._z, yield this._w;
    }
}, A = class s1 {
    constructor(e = 0, t = 0, n = 0){
        s1.prototype.isVector3 = !0, this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e) {
        return this.x += e.x, this.y += e.y, this.z += e.z, this;
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e) {
        return this.x -= e.x, this.y -= e.y, this.z -= e.z, this;
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return this.applyQuaternion(Wl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(Wl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, a = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * a, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * a, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * a, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, a = e.y, o = e.z, c = e.w, l = c * t + a * i - o * n, h = c * n + o * t - r * i, u = c * i + r * n - a * t, d = -r * t - a * n - o * i;
        return this.x = l * c + d * -r + h * -o - u * -a, this.y = h * c + d * -a + u * -r - l * -o, this.z = u * c + d * -o + l * -a - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e) {
        return this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, a = t.x, o = t.y, c = t.z;
        return this.x = i * c - r * o, this.y = r * a - n * c, this.z = n * o - i * a, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Oa.copy(this).projectOnVector(e), this.sub(Oa);
    }
    reflect(e) {
        return this.sub(Oa.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(ct(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    setFromEuler(e) {
        return this.x = e._x, this.y = e._y, this.z = e._z, this;
    }
    setFromColor(e) {
        return this.x = e.r, this.y = e.g, this.z = e.b, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t) {
        return this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
}, Oa = new A, Wl = new Ut, Qt = class {
    constructor(e = new A(1 / 0, 1 / 0, 1 / 0), t = new A(-1 / 0, -1 / 0, -1 / 0)){
        this.isBox3 = !0, this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t += 3)this.expandByPoint(cn.fromArray(e, t));
        return this;
    }
    setFromBufferAttribute(e) {
        this.makeEmpty();
        for(let t = 0, n = e.count; t < n; t++)this.expandByPoint(cn.fromBufferAttribute(e, t));
        return this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = cn.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e, t = !1) {
        return this.makeEmpty(), this.expandByObject(e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e, t = !1) {
        if (e.updateWorldMatrix(!1, !1), e.boundingBox !== void 0) e.boundingBox === null && e.computeBoundingBox(), _i.copy(e.boundingBox), _i.applyMatrix4(e.matrixWorld), this.union(_i);
        else {
            let i = e.geometry;
            if (i !== void 0) if (t && i.attributes !== void 0 && i.attributes.position !== void 0) {
                let r = i.attributes.position;
                for(let a = 0, o = r.count; a < o; a++)cn.fromBufferAttribute(r, a).applyMatrix4(e.matrixWorld), this.expandByPoint(cn);
            } else i.boundingBox === null && i.computeBoundingBox(), _i.copy(i.boundingBox), _i.applyMatrix4(e.matrixWorld), this.union(_i);
        }
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i], t);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, cn), cn.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(cs), Ws.subVectors(this.max, cs), xi.subVectors(e.a, cs), vi.subVectors(e.b, cs), yi.subVectors(e.c, cs), Tn.subVectors(vi, xi), wn.subVectors(yi, vi), Wn.subVectors(xi, yi);
        let t = [
            0,
            -Tn.z,
            Tn.y,
            0,
            -wn.z,
            wn.y,
            0,
            -Wn.z,
            Wn.y,
            Tn.z,
            0,
            -Tn.x,
            wn.z,
            0,
            -wn.x,
            Wn.z,
            0,
            -Wn.x,
            -Tn.y,
            Tn.x,
            0,
            -wn.y,
            wn.x,
            0,
            -Wn.y,
            Wn.x,
            0
        ];
        return !Fa(t, xi, vi, yi, Ws) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !Fa(t, xi, vi, yi, Ws)) ? !1 : (Xs.crossVectors(Tn, wn), t = [
            Xs.x,
            Xs.y,
            Xs.z
        ], Fa(t, xi, vi, yi, Ws));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return this.clampPoint(e, cn).distanceTo(e);
    }
    getBoundingSphere(e) {
        return this.isEmpty() ? e.makeEmpty() : (this.getCenter(e.center), e.radius = this.getSize(cn).length() * .5), e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : (on[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), on[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), on[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), on[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), on[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), on[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), on[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), on[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(on), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
}, on = [
    new A,
    new A,
    new A,
    new A,
    new A,
    new A,
    new A,
    new A
], cn = new A, _i = new Qt, xi = new A, vi = new A, yi = new A, Tn = new A, wn = new A, Wn = new A, cs = new A, Ws = new A, Xs = new A, Xn = new A;
function Fa(s1, e, t, n, i) {
    for(let r = 0, a = s1.length - 3; r <= a; r += 3){
        Xn.fromArray(s1, r);
        let o = i.x * Math.abs(Xn.x) + i.y * Math.abs(Xn.y) + i.z * Math.abs(Xn.z), c = e.dot(Xn), l = t.dot(Xn), h = n.dot(Xn);
        if (Math.max(-Math.max(c, l, h), Math.min(c, l, h)) > o) return !1;
    }
    return !0;
}
var rp = new Qt, ls = new A, Ba = new A, Yt = class {
    constructor(e = new A, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : rp.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, a = e.length; r < a; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        if (this.isEmpty()) return this.center.copy(e), this.radius = 0, this;
        ls.subVectors(e, this.center);
        let t = ls.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.addScaledVector(ls, i / n), this.radius += i;
        }
        return this;
    }
    union(e) {
        return e.isEmpty() ? this : this.isEmpty() ? (this.copy(e), this) : (this.center.equals(e.center) === !0 ? this.radius = Math.max(this.radius, e.radius) : (Ba.subVectors(e.center, this.center).setLength(e.radius), this.expandByPoint(ls.copy(e.center).add(Ba)), this.expandByPoint(ls.copy(e.center).sub(Ba))), this);
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, ln = new A, za = new A, qs = new A, An = new A, Va = new A, Ys = new A, ka = new A, hi = class {
    constructor(e = new A, t = new A(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.origin).addScaledVector(this.direction, e);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, ln)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.origin).addScaledVector(this.direction, n);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = ln.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (ln.copy(this.origin).addScaledVector(this.direction, t), ln.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        za.copy(e).add(t).multiplyScalar(.5), qs.copy(t).sub(e).normalize(), An.copy(this.origin).sub(za);
        let r = e.distanceTo(t) * .5, a = -this.direction.dot(qs), o = An.dot(this.direction), c = -An.dot(qs), l = An.lengthSq(), h = Math.abs(1 - a * a), u, d, f, m;
        if (h > 0) if (u = a * c - o, d = a * o - c, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let _ = 1 / h;
            u *= _, d *= _, f = u * (u + a * d + 2 * o) + d * (a * u + d + 2 * c) + l;
        } else d = r, u = Math.max(0, -(a * d + o)), f = -u * u + d * (d + 2 * c) + l;
        else d = -r, u = Math.max(0, -(a * d + o)), f = -u * u + d * (d + 2 * c) + l;
        else d <= -m ? (u = Math.max(0, -(-a * r + o)), d = u > 0 ? -r : Math.min(Math.max(-r, -c), r), f = -u * u + d * (d + 2 * c) + l) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -c), r), f = d * (d + 2 * c) + l) : (u = Math.max(0, -(a * r + o)), d = u > 0 ? r : Math.min(Math.max(-r, -c), r), f = -u * u + d * (d + 2 * c) + l);
        else d = a > 0 ? -r : r, u = Math.max(0, -(a * d + o)), f = -u * u + d * (d + 2 * c) + l;
        return n && n.copy(this.origin).addScaledVector(this.direction, u), i && i.copy(za).addScaledVector(qs, d), f;
    }
    intersectSphere(e, t) {
        ln.subVectors(e.center, this.origin);
        let n = ln.dot(this.direction), i = ln.dot(ln) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let a = Math.sqrt(r - i), o = n - a, c = n + a;
        return c < 0 ? null : o < 0 ? this.at(c, t) : this.at(o, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, a, o, c, l = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return l >= 0 ? (n = (e.min.x - d.x) * l, i = (e.max.x - d.x) * l) : (n = (e.max.x - d.x) * l, i = (e.min.x - d.x) * l), h >= 0 ? (r = (e.min.y - d.y) * h, a = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, a = (e.min.y - d.y) * h), n > a || r > i || ((r > n || isNaN(n)) && (n = r), (a < i || isNaN(i)) && (i = a), u >= 0 ? (o = (e.min.z - d.z) * u, c = (e.max.z - d.z) * u) : (o = (e.max.z - d.z) * u, c = (e.min.z - d.z) * u), n > c || o > i) || ((o > n || n !== n) && (n = o), (c < i || i !== i) && (i = c), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, ln) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Va.subVectors(t, e), Ys.subVectors(n, e), ka.crossVectors(Va, Ys);
        let a = this.direction.dot(ka), o;
        if (a > 0) {
            if (i) return null;
            o = 1;
        } else if (a < 0) o = -1, a = -a;
        else return null;
        An.subVectors(this.origin, e);
        let c = o * this.direction.dot(Ys.crossVectors(An, Ys));
        if (c < 0) return null;
        let l = o * this.direction.dot(Va.cross(An));
        if (l < 0 || c + l > a) return null;
        let h = -o * An.dot(ka);
        return h < 0 ? null : this.at(h / a, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, ze = class s1 {
    constructor(e, t, n, i, r, a, o, c, l, h, u, d, f, m, _, g){
        s1.prototype.isMatrix4 = !0, this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], e !== void 0 && this.set(e, t, n, i, r, a, o, c, l, h, u, d, f, m, _, g);
    }
    set(e, t, n, i, r, a, o, c, l, h, u, d, f, m, _, g) {
        let p = this.elements;
        return p[0] = e, p[4] = t, p[8] = n, p[12] = i, p[1] = r, p[5] = a, p[9] = o, p[13] = c, p[2] = l, p[6] = h, p[10] = u, p[14] = d, p[3] = f, p[7] = m, p[11] = _, p[15] = g, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new s1().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / Mi.setFromMatrixColumn(e, 0).length(), r = 1 / Mi.setFromMatrixColumn(e, 1).length(), a = 1 / Mi.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * a, t[9] = n[9] * a, t[10] = n[10] * a, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z, a = Math.cos(n), o = Math.sin(n), c = Math.cos(i), l = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = a * h, f = a * u, m = o * h, _ = o * u;
            t[0] = c * h, t[4] = -c * u, t[8] = l, t[1] = f + m * l, t[5] = d - _ * l, t[9] = -o * c, t[2] = _ - d * l, t[6] = m + f * l, t[10] = a * c;
        } else if (e.order === "YXZ") {
            let d = c * h, f = c * u, m = l * h, _ = l * u;
            t[0] = d + _ * o, t[4] = m * o - f, t[8] = a * l, t[1] = a * u, t[5] = a * h, t[9] = -o, t[2] = f * o - m, t[6] = _ + d * o, t[10] = a * c;
        } else if (e.order === "ZXY") {
            let d = c * h, f = c * u, m = l * h, _ = l * u;
            t[0] = d - _ * o, t[4] = -a * u, t[8] = m + f * o, t[1] = f + m * o, t[5] = a * h, t[9] = _ - d * o, t[2] = -a * l, t[6] = o, t[10] = a * c;
        } else if (e.order === "ZYX") {
            let d = a * h, f = a * u, m = o * h, _ = o * u;
            t[0] = c * h, t[4] = m * l - f, t[8] = d * l + _, t[1] = c * u, t[5] = _ * l + d, t[9] = f * l - m, t[2] = -l, t[6] = o * c, t[10] = a * c;
        } else if (e.order === "YZX") {
            let d = a * c, f = a * l, m = o * c, _ = o * l;
            t[0] = c * h, t[4] = _ - d * u, t[8] = m * u + f, t[1] = u, t[5] = a * h, t[9] = -o * h, t[2] = -l * h, t[6] = f * u + m, t[10] = d - _ * u;
        } else if (e.order === "XZY") {
            let d = a * c, f = a * l, m = o * c, _ = o * l;
            t[0] = c * h, t[4] = -u, t[8] = l * h, t[1] = d * u + _, t[5] = a * h, t[9] = f * u - m, t[2] = m * u - f, t[6] = o * h, t[10] = _ * u + d;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(ap, e, op);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return zt.subVectors(e, t), zt.lengthSq() === 0 && (zt.z = 1), zt.normalize(), Rn.crossVectors(n, zt), Rn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? zt.x += 1e-4 : zt.z += 1e-4, zt.normalize(), Rn.crossVectors(n, zt)), Rn.normalize(), Zs.crossVectors(zt, Rn), i[0] = Rn.x, i[4] = Zs.x, i[8] = zt.x, i[1] = Rn.y, i[5] = Zs.y, i[9] = zt.y, i[2] = Rn.z, i[6] = Zs.z, i[10] = zt.z, this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, a = n[0], o = n[4], c = n[8], l = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], _ = n[6], g = n[10], p = n[14], v = n[3], x = n[7], y = n[11], b = n[15], w = i[0], R = i[4], I = i[8], M = i[12], T = i[1], O = i[5], Y = i[9], $ = i[13], U = i[2], z = i[6], q = i[10], H = i[14], ne = i[3], W = i[7], K = i[11], D = i[15];
        return r[0] = a * w + o * T + c * U + l * ne, r[4] = a * R + o * O + c * z + l * W, r[8] = a * I + o * Y + c * q + l * K, r[12] = a * M + o * $ + c * H + l * D, r[1] = h * w + u * T + d * U + f * ne, r[5] = h * R + u * O + d * z + f * W, r[9] = h * I + u * Y + d * q + f * K, r[13] = h * M + u * $ + d * H + f * D, r[2] = m * w + _ * T + g * U + p * ne, r[6] = m * R + _ * O + g * z + p * W, r[10] = m * I + _ * Y + g * q + p * K, r[14] = m * M + _ * $ + g * H + p * D, r[3] = v * w + x * T + y * U + b * ne, r[7] = v * R + x * O + y * z + b * W, r[11] = v * I + x * Y + y * q + b * K, r[15] = v * M + x * $ + y * H + b * D, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], a = e[1], o = e[5], c = e[9], l = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], _ = e[7], g = e[11], p = e[15];
        return m * (+r * c * u - i * l * u - r * o * d + n * l * d + i * o * f - n * c * f) + _ * (+t * c * f - t * l * d + r * a * d - i * a * f + i * l * h - r * c * h) + g * (+t * l * u - t * o * f - r * a * u + n * a * f + r * o * h - n * l * h) + p * (-i * o * h - t * c * u + t * o * d + i * a * u - n * a * d + n * c * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], a = e[4], o = e[5], c = e[6], l = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], _ = e[13], g = e[14], p = e[15], v = u * g * l - _ * d * l + _ * c * f - o * g * f - u * c * p + o * d * p, x = m * d * l - h * g * l - m * c * f + a * g * f + h * c * p - a * d * p, y = h * _ * l - m * u * l + m * o * f - a * _ * f - h * o * p + a * u * p, b = m * u * c - h * _ * c - m * o * d + a * _ * d + h * o * g - a * u * g, w = t * v + n * x + i * y + r * b;
        if (w === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let R = 1 / w;
        return e[0] = v * R, e[1] = (_ * d * r - u * g * r - _ * i * f + n * g * f + u * i * p - n * d * p) * R, e[2] = (o * g * r - _ * c * r + _ * i * l - n * g * l - o * i * p + n * c * p) * R, e[3] = (u * c * r - o * d * r - u * i * l + n * d * l + o * i * f - n * c * f) * R, e[4] = x * R, e[5] = (h * g * r - m * d * r + m * i * f - t * g * f - h * i * p + t * d * p) * R, e[6] = (m * c * r - a * g * r - m * i * l + t * g * l + a * i * p - t * c * p) * R, e[7] = (a * d * r - h * c * r + h * i * l - t * d * l - a * i * f + t * c * f) * R, e[8] = y * R, e[9] = (m * u * r - h * _ * r - m * n * f + t * _ * f + h * n * p - t * u * p) * R, e[10] = (a * _ * r - m * o * r + m * n * l - t * _ * l - a * n * p + t * o * p) * R, e[11] = (h * o * r - a * u * r - h * n * l + t * u * l + a * n * f - t * o * f) * R, e[12] = b * R, e[13] = (h * _ * i - m * u * i + m * n * d - t * _ * d - h * n * g + t * u * g) * R, e[14] = (m * o * i - a * _ * i - m * n * c + t * _ * c + a * n * g - t * o * g) * R, e[15] = (a * u * i - h * o * i + h * n * c - t * u * c - a * n * d + t * o * d) * R, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return e.isVector3 ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1) : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, a = e.x, o = e.y, c = e.z, l = r * a, h = r * o;
        return this.set(l * a + n, l * o - i * c, l * c + i * o, 0, l * o + i * c, h * o + n, h * c - i * a, 0, l * c - i * o, h * c + i * a, r * c * c + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, a) {
        return this.set(1, n, r, 0, e, 1, a, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, a = t._y, o = t._z, c = t._w, l = r + r, h = a + a, u = o + o, d = r * l, f = r * h, m = r * u, _ = a * h, g = a * u, p = o * u, v = c * l, x = c * h, y = c * u, b = n.x, w = n.y, R = n.z;
        return i[0] = (1 - (_ + p)) * b, i[1] = (f + y) * b, i[2] = (m - x) * b, i[3] = 0, i[4] = (f - y) * w, i[5] = (1 - (d + p)) * w, i[6] = (g + v) * w, i[7] = 0, i[8] = (m + x) * R, i[9] = (g - v) * R, i[10] = (1 - (d + _)) * R, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = Mi.set(i[0], i[1], i[2]).length(), a = Mi.set(i[4], i[5], i[6]).length(), o = Mi.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], $t.copy(this);
        let l = 1 / r, h = 1 / a, u = 1 / o;
        return $t.elements[0] *= l, $t.elements[1] *= l, $t.elements[2] *= l, $t.elements[4] *= h, $t.elements[5] *= h, $t.elements[6] *= h, $t.elements[8] *= u, $t.elements[9] *= u, $t.elements[10] *= u, t.setFromRotationMatrix($t), n.x = r, n.y = a, n.z = o, this;
    }
    makePerspective(e, t, n, i, r, a, o = vn) {
        let c = this.elements, l = 2 * r / (t - e), h = 2 * r / (n - i), u = (t + e) / (t - e), d = (n + i) / (n - i), f, m;
        if (o === vn) f = -(a + r) / (a - r), m = -2 * a * r / (a - r);
        else if (o === Gr) f = -a / (a - r), m = -a * r / (a - r);
        else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: " + o);
        return c[0] = l, c[4] = 0, c[8] = u, c[12] = 0, c[1] = 0, c[5] = h, c[9] = d, c[13] = 0, c[2] = 0, c[6] = 0, c[10] = f, c[14] = m, c[3] = 0, c[7] = 0, c[11] = -1, c[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, a, o = vn) {
        let c = this.elements, l = 1 / (t - e), h = 1 / (n - i), u = 1 / (a - r), d = (t + e) * l, f = (n + i) * h, m, _;
        if (o === vn) m = (a + r) * u, _ = -2 * u;
        else if (o === Gr) m = r * u, _ = -1 * u;
        else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + o);
        return c[0] = 2 * l, c[4] = 0, c[8] = 0, c[12] = -d, c[1] = 0, c[5] = 2 * h, c[9] = 0, c[13] = -f, c[2] = 0, c[6] = 0, c[10] = _, c[14] = -m, c[3] = 0, c[7] = 0, c[11] = 0, c[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
}, Mi = new A, $t = new ze, ap = new A(0, 0, 0), op = new A(1, 1, 1), Rn = new A, Zs = new A, zt = new A, Xl = new ze, ql = new Ut, Yr = class s1 {
    constructor(e = 0, t = 0, n = 0, i = s1.DEFAULT_ORDER){
        this.isEuler = !0, this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], a = i[4], o = i[8], c = i[1], l = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(ct(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-a, r)) : (this._x = Math.atan2(d, l), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-ct(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(o, f), this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(ct(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-a, l)) : (this._y = 0, this._z = Math.atan2(c, r));
                break;
            case "ZYX":
                this._y = Math.asin(-ct(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(c, r)) : (this._x = 0, this._z = Math.atan2(-a, l));
                break;
            case "YZX":
                this._z = Math.asin(ct(c, -1, 1)), Math.abs(c) < .9999999 ? (this._x = Math.atan2(-h, l), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(o, f));
                break;
            case "XZY":
                this._z = Math.asin(-ct(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(d, l), this._y = Math.atan2(o, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return Xl.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Xl, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return ql.setFromEuler(this), this.setFromQuaternion(ql, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
    *[Symbol.iterator]() {
        yield this._x, yield this._y, yield this._z, yield this._order;
    }
};
Yr.DEFAULT_ORDER = "XYZ";
var Rs = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, cp = 0, Yl = new A, Si = new Ut, hn = new ze, Js = new A, hs = new A, lp = new A, hp = new Ut, Zl = new A(1, 0, 0), Jl = new A(0, 1, 0), $l = new A(0, 0, 1), up = {
    type: "added"
}, dp = {
    type: "removed"
}, Je = class s1 extends sn {
    constructor(){
        super(), this.isObject3D = !0, Object.defineProperty(this, "id", {
            value: cp++
        }), this.uuid = kt(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = s1.DEFAULT_UP.clone();
        let e = new A, t = new Yr, n = new Ut, i = new A(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function a() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(a), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new ze
            },
            normalMatrix: {
                value: new He
            }
        }), this.matrix = new ze, this.matrixWorld = new ze, this.matrixAutoUpdate = s1.DEFAULT_MATRIX_AUTO_UPDATE, this.matrixWorldNeedsUpdate = !1, this.matrixWorldAutoUpdate = s1.DEFAULT_MATRIX_WORLD_AUTO_UPDATE, this.layers = new Rs, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return Si.setFromAxisAngle(e, t), this.quaternion.multiply(Si), this;
    }
    rotateOnWorldAxis(e, t) {
        return Si.setFromAxisAngle(e, t), this.quaternion.premultiply(Si), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(Zl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Jl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis($l, e);
    }
    translateOnAxis(e, t) {
        return Yl.copy(e).applyQuaternion(this.quaternion), this.position.add(Yl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(Zl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Jl, e);
    }
    translateZ(e) {
        return this.translateOnAxis($l, e);
    }
    localToWorld(e) {
        return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return this.updateWorldMatrix(!0, !1), e.applyMatrix4(hn.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? Js.copy(e) : Js.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), hs.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? hn.lookAt(hs, Js, this.up) : hn.lookAt(Js, hs, this.up), this.quaternion.setFromRotationMatrix(hn), i && (hn.extractRotation(i.matrixWorld), Si.setFromRotationMatrix(hn), this.quaternion.premultiply(Si.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(up)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(dp)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        return this.remove(...this.children);
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), hn.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), hn.multiply(e.parent.matrixWorld)), e.applyMatrix4(hn), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let a = this.children[n].getObjectByProperty(e, t);
            if (a !== void 0) return a;
        }
    }
    getObjectsByProperty(e, t) {
        let n = [];
        this[e] === t && n.push(this);
        for(let i = 0, r = this.children.length; i < r; i++){
            let a = this.children[i].getObjectsByProperty(e, t);
            a.length > 0 && (n = n.concat(a));
        }
        return n;
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(hs, e, lp), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(hs, hp, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            (r.matrixWorldAutoUpdate === !0 || e === !0) && r.updateMatrixWorld(e);
        }
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.matrixWorldAutoUpdate === !0 && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, a = i.length; r < a; r++){
                let o = i[r];
                o.matrixWorldAutoUpdate === !0 && o.updateWorldMatrix(!1, !0);
            }
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {},
            nodes: {}
        }, n.metadata = {
            version: 4.6,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), Object.keys(this.userData).length > 0 && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), i.up = this.up.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(o, c) {
            return o[c.uuid] === void 0 && (o[c.uuid] = c.toJSON(e)), c.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== !0 && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let o = this.geometry.parameters;
            if (o !== void 0 && o.shapes !== void 0) {
                let c = o.shapes;
                if (Array.isArray(c)) for(let l = 0, h = c.length; l < h; l++){
                    let u = c[l];
                    r(e.shapes, u);
                }
                else r(e.shapes, c);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let o = [];
            for(let c = 0, l = this.material.length; c < l; c++)o.push(r(e.materials, this.material[c]));
            i.material = o;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let o = 0; o < this.children.length; o++)i.children.push(this.children[o].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let o = 0; o < this.animations.length; o++){
                let c = this.animations[o];
                i.animations.push(r(e.animations, c));
            }
        }
        if (t) {
            let o = a(e.geometries), c = a(e.materials), l = a(e.textures), h = a(e.images), u = a(e.shapes), d = a(e.skeletons), f = a(e.animations), m = a(e.nodes);
            o.length > 0 && (n.geometries = o), c.length > 0 && (n.materials = c), l.length > 0 && (n.textures = l), h.length > 0 && (n.images = h), u.length > 0 && (n.shapes = u), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f), m.length > 0 && (n.nodes = m);
        }
        return n.object = i, n;
        function a(o) {
            let c = [];
            for(let l in o){
                let h = o[l];
                delete h.metadata, c.push(h);
            }
            return c;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.animations = e.animations.slice(), this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Je.DEFAULT_UP = new A(0, 1, 0);
Je.DEFAULT_MATRIX_AUTO_UPDATE = !0;
Je.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
var Kt = new A, un = new A, Ha = new A, dn = new A, bi = new A, Ei = new A, Kl = new A, Ga = new A, Wa = new A, Xa = new A, $s = !1, Un = class s1 {
    constructor(e = new A, t = new A, n = new A){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Kt.subVectors(e, t), i.cross(Kt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Kt.subVectors(i, t), un.subVectors(n, t), Ha.subVectors(e, t);
        let a = Kt.dot(Kt), o = Kt.dot(un), c = Kt.dot(Ha), l = un.dot(un), h = un.dot(Ha), u = a * l - o * o;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (l * c - o * h) * d, m = (a * h - o * c) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, dn), dn.x >= 0 && dn.y >= 0 && dn.x + dn.y <= 1;
    }
    static getUV(e, t, n, i, r, a, o, c) {
        return $s === !1 && (console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."), $s = !0), this.getInterpolation(e, t, n, i, r, a, o, c);
    }
    static getInterpolation(e, t, n, i, r, a, o, c) {
        return this.getBarycoord(e, t, n, i, dn), c.setScalar(0), c.addScaledVector(r, dn.x), c.addScaledVector(a, dn.y), c.addScaledVector(o, dn.z), c;
    }
    static isFrontFacing(e, t, n, i) {
        return Kt.subVectors(n, t), un.subVectors(e, t), Kt.cross(un).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Kt.subVectors(this.c, this.b), un.subVectors(this.a, this.b), Kt.cross(un).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return s1.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return s1.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return $s === !1 && (console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."), $s = !0), s1.getInterpolation(e, this.a, this.b, this.c, t, n, i, r);
    }
    getInterpolation(e, t, n, i, r) {
        return s1.getInterpolation(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return s1.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return s1.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, a, o;
        bi.subVectors(i, n), Ei.subVectors(r, n), Ga.subVectors(e, n);
        let c = bi.dot(Ga), l = Ei.dot(Ga);
        if (c <= 0 && l <= 0) return t.copy(n);
        Wa.subVectors(e, i);
        let h = bi.dot(Wa), u = Ei.dot(Wa);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = c * u - h * l;
        if (d <= 0 && c >= 0 && h <= 0) return a = c / (c - h), t.copy(n).addScaledVector(bi, a);
        Xa.subVectors(e, r);
        let f = bi.dot(Xa), m = Ei.dot(Xa);
        if (m >= 0 && f <= m) return t.copy(r);
        let _ = f * l - c * m;
        if (_ <= 0 && l >= 0 && m <= 0) return o = l / (l - m), t.copy(n).addScaledVector(Ei, o);
        let g = h * m - f * u;
        if (g <= 0 && u - h >= 0 && f - m >= 0) return Kl.subVectors(r, i), o = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Kl, o);
        let p = 1 / (g + _ + d);
        return a = _ * p, o = d * p, t.copy(n).addScaledVector(bi, a).addScaledVector(Ei, o);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, fp = 0, bt = class extends sn {
    constructor(){
        super(), this.isMaterial = !0, Object.defineProperty(this, "id", {
            value: fp++
        }), this.uuid = kt(), this.name = "", this.type = "Material", this.blending = Wi, this.side = Bn, this.vertexColors = !1, this.opacity = 1, this.transparent = !1, this.alphaHash = !1, this.blendSrc = ld, this.blendDst = hd, this.blendEquation = Bi, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = uo, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = If, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = Ia, this.stencilZFail = Ia, this.stencilZPass = Ia, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.forceSinglePass = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.6,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.iridescence !== void 0 && (n.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (n.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (n.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (n.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid), this.anisotropy !== void 0 && (n.anisotropy = this.anisotropy), this.anisotropyRotation !== void 0 && (n.anisotropyRotation = this.anisotropyRotation), this.anisotropyMap && this.anisotropyMap.isTexture && (n.anisotropyMap = this.anisotropyMap.toJSON(e).uuid), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && this.attenuationDistance !== 1 / 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== Wi && (n.blending = this.blending), this.side !== Bn && (n.side = this.side), this.vertexColors === !0 && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.transparent === !0 && (n.transparent = !0), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation !== void 0 && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaHash === !0 && (n.alphaHash = !0), this.alphaToCoverage === !0 && (n.alphaToCoverage = !0), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = !0), this.forceSinglePass === !0 && (n.forceSinglePass = !0), this.wireframe === !0 && (n.wireframe = !0), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = !0), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), this.fog === !1 && (n.fog = !1), Object.keys(this.userData).length > 0 && (n.userData = this.userData);
        function i(r) {
            let a = [];
            for(let o in r){
                let c = r[o];
                delete c.metadata, a.push(c);
            }
            return a;
        }
        if (t) {
            let r = i(e.textures), a = i(e.images);
            r.length > 0 && (n.textures = r), a.length > 0 && (n.images = a);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaHash = e.alphaHash, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.forceSinglePass = e.forceSinglePass, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
}, Sd = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Cn = {
    h: 0,
    s: 0,
    l: 0
}, Ks = {
    h: 0,
    s: 0,
    l: 0
};
function qa(s1, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s1 + (e - s1) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s1 + (e - s1) * 6 * (2 / 3 - t) : s1;
}
var pe = class {
    constructor(e, t, n){
        return this.isColor = !0, this.r = 1, this.g = 1, this.b = 1, this.set(e, t, n);
    }
    set(e, t, n) {
        if (t === void 0 && n === void 0) {
            let i = e;
            i && i.isColor ? this.copy(i) : typeof i == "number" ? this.setHex(i) : typeof i == "string" && this.setStyle(i);
        } else this.setRGB(e, t, n);
        return this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e, t = vt) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, Qe.toWorkingColorSpace(this, t), this;
    }
    setRGB(e, t, n, i = Qe.workingColorSpace) {
        return this.r = e, this.g = t, this.b = n, Qe.toWorkingColorSpace(this, i), this;
    }
    setHSL(e, t, n, i = Qe.workingColorSpace) {
        if (e = Yc(e, 1), t = ct(t, 0, 1), n = ct(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let r = n <= .5 ? n * (1 + t) : n + t - n * t, a = 2 * n - r;
            this.r = qa(a, r, e + 1 / 3), this.g = qa(a, r, e), this.b = qa(a, r, e - 1 / 3);
        }
        return Qe.toWorkingColorSpace(this, i), this;
    }
    setStyle(e, t = vt) {
        function n(r) {
            r !== void 0 && parseFloat(r) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let i;
        if (i = /^(\w+)\(([^\)]*)\)/.exec(e)) {
            let r, a = i[1], o = i[2];
            switch(a){
                case "rgb":
                case "rgba":
                    if (r = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return n(r[4]), this.setRGB(Math.min(255, parseInt(r[1], 10)) / 255, Math.min(255, parseInt(r[2], 10)) / 255, Math.min(255, parseInt(r[3], 10)) / 255, t);
                    if (r = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return n(r[4]), this.setRGB(Math.min(100, parseInt(r[1], 10)) / 100, Math.min(100, parseInt(r[2], 10)) / 100, Math.min(100, parseInt(r[3], 10)) / 100, t);
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return n(r[4]), this.setHSL(parseFloat(r[1]) / 360, parseFloat(r[2]) / 100, parseFloat(r[3]) / 100, t);
                    break;
                default:
                    console.warn("THREE.Color: Unknown color model " + e);
            }
        } else if (i = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let r = i[1], a = r.length;
            if (a === 3) return this.setRGB(parseInt(r.charAt(0), 16) / 15, parseInt(r.charAt(1), 16) / 15, parseInt(r.charAt(2), 16) / 15, t);
            if (a === 6) return this.setHex(parseInt(r, 16), t);
            console.warn("THREE.Color: Invalid hex color " + e);
        } else if (e && e.length > 0) return this.setColorName(e, t);
        return this;
    }
    setColorName(e, t = vt) {
        let n = Sd[e.toLowerCase()];
        return n !== void 0 ? this.setHex(n, t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Xi(e.r), this.g = Xi(e.g), this.b = Xi(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Da(e.r), this.g = Da(e.g), this.b = Da(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex(e = vt) {
        return Qe.fromWorkingColorSpace(Tt.copy(this), e), Math.round(ct(Tt.r * 255, 0, 255)) * 65536 + Math.round(ct(Tt.g * 255, 0, 255)) * 256 + Math.round(ct(Tt.b * 255, 0, 255));
    }
    getHexString(e = vt) {
        return ("000000" + this.getHex(e).toString(16)).slice(-6);
    }
    getHSL(e, t = Qe.workingColorSpace) {
        Qe.fromWorkingColorSpace(Tt.copy(this), t);
        let n = Tt.r, i = Tt.g, r = Tt.b, a = Math.max(n, i, r), o = Math.min(n, i, r), c, l, h = (o + a) / 2;
        if (o === a) c = 0, l = 0;
        else {
            let u = a - o;
            switch(l = h <= .5 ? u / (a + o) : u / (2 - a - o), a){
                case n:
                    c = (i - r) / u + (i < r ? 6 : 0);
                    break;
                case i:
                    c = (r - n) / u + 2;
                    break;
                case r:
                    c = (n - i) / u + 4;
                    break;
            }
            c /= 6;
        }
        return e.h = c, e.s = l, e.l = h, e;
    }
    getRGB(e, t = Qe.workingColorSpace) {
        return Qe.fromWorkingColorSpace(Tt.copy(this), t), e.r = Tt.r, e.g = Tt.g, e.b = Tt.b, e;
    }
    getStyle(e = vt) {
        Qe.fromWorkingColorSpace(Tt.copy(this), e);
        let t = Tt.r, n = Tt.g, i = Tt.b;
        return e !== vt ? `color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})` : `rgb(${Math.round(t * 255)},${Math.round(n * 255)},${Math.round(i * 255)})`;
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Cn), this.setHSL(Cn.h + e, Cn.s + t, Cn.l + n);
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Cn), e.getHSL(Ks);
        let n = ys(Cn.h, Ks.h, t), i = ys(Cn.s, Ks.s, t), r = ys(Cn.l, Ks.l, t);
        return this.setHSL(n, i, r), this;
    }
    setFromVector3(e) {
        return this.r = e.x, this.g = e.y, this.b = e.z, this;
    }
    applyMatrix3(e) {
        let t = this.r, n = this.g, i = this.b, r = e.elements;
        return this.r = r[0] * t + r[3] * n + r[6] * i, this.g = r[1] * t + r[4] * n + r[7] * i, this.b = r[2] * t + r[5] * n + r[8] * i, this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), this;
    }
    toJSON() {
        return this.getHex();
    }
    *[Symbol.iterator]() {
        yield this.r, yield this.g, yield this.b;
    }
}, Tt = new pe;
pe.NAMES = Sd;
var Sn = class extends bt {
    constructor(e){
        super(), this.isMeshBasicMaterial = !0, this.type = "MeshBasicMaterial", this.color = new pe(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = xa, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
    }
}, _n = pp();
function pp() {
    let s1 = new ArrayBuffer(4), e = new Float32Array(s1), t = new Uint32Array(s1), n = new Uint32Array(512), i = new Uint32Array(512);
    for(let c = 0; c < 256; ++c){
        let l = c - 127;
        l < -27 ? (n[c] = 0, n[c | 256] = 32768, i[c] = 24, i[c | 256] = 24) : l < -14 ? (n[c] = 1024 >> -l - 14, n[c | 256] = 1024 >> -l - 14 | 32768, i[c] = -l - 1, i[c | 256] = -l - 1) : l <= 15 ? (n[c] = l + 15 << 10, n[c | 256] = l + 15 << 10 | 32768, i[c] = 13, i[c | 256] = 13) : l < 128 ? (n[c] = 31744, n[c | 256] = 64512, i[c] = 24, i[c | 256] = 24) : (n[c] = 31744, n[c | 256] = 64512, i[c] = 13, i[c | 256] = 13);
    }
    let r = new Uint32Array(2048), a = new Uint32Array(64), o = new Uint32Array(64);
    for(let c = 1; c < 1024; ++c){
        let l = c << 13, h = 0;
        for(; !(l & 8388608);)l <<= 1, h -= 8388608;
        l &= -8388609, h += 947912704, r[c] = l | h;
    }
    for(let c = 1024; c < 2048; ++c)r[c] = 939524096 + (c - 1024 << 13);
    for(let c = 1; c < 31; ++c)a[c] = c << 23;
    a[31] = 1199570944, a[32] = 2147483648;
    for(let c = 33; c < 63; ++c)a[c] = 2147483648 + (c - 32 << 23);
    a[63] = 3347054592;
    for(let c = 1; c < 64; ++c)c !== 32 && (o[c] = 1024);
    return {
        floatView: e,
        uint32View: t,
        baseTable: n,
        shiftTable: i,
        mantissaTable: r,
        exponentTable: a,
        offsetTable: o
    };
}
function Nt(s1) {
    Math.abs(s1) > 65504 && console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."), s1 = ct(s1, -65504, 65504), _n.floatView[0] = s1;
    let e = _n.uint32View[0], t = e >> 23 & 511;
    return _n.baseTable[t] + ((e & 8388607) >> _n.shiftTable[t]);
}
function xs(s1) {
    let e = s1 >> 10;
    return _n.uint32View[0] = _n.mantissaTable[_n.offsetTable[e] + (s1 & 1023)] + _n.exponentTable[e], _n.floatView[0];
}
var Mv = {
    toHalfFloat: Nt,
    fromHalfFloat: xs
}, ft = new A, Qs = new Z, et = class {
    constructor(e, t, n = !1){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.isBufferAttribute = !0, this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n, this.usage = Hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.gpuType = xn, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this.gpuType = e.gpuType, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qs.fromBufferAttribute(this, t), Qs.applyMatrix3(e), this.setXY(t, Qs.x, Qs.y);
        else if (this.itemSize === 3) for(let t = 0, n = this.count; t < n; t++)ft.fromBufferAttribute(this, t), ft.applyMatrix3(e), this.setXYZ(t, ft.x, ft.y, ft.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)ft.fromBufferAttribute(this, t), ft.applyMatrix4(e), this.setXYZ(t, ft.x, ft.y, ft.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)ft.fromBufferAttribute(this, t), ft.applyNormalMatrix(e), this.setXYZ(t, ft.x, ft.y, ft.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)ft.fromBufferAttribute(this, t), ft.transformDirection(e), this.setXYZ(t, ft.x, ft.y, ft.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getComponent(e, t) {
        let n = this.array[e * this.itemSize + t];
        return this.normalized && (n = Ot(n, this.array)), n;
    }
    setComponent(e, t, n) {
        return this.normalized && (n = Be(n, this.array)), this.array[e * this.itemSize + t] = n, this;
    }
    getX(e) {
        let t = this.array[e * this.itemSize];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setX(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        let t = this.array[e * this.itemSize + 1];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setY(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        let t = this.array[e * this.itemSize + 2];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setZ(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        let t = this.array[e * this.itemSize + 3];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setW(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array)), this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array)), this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array), r = Be(r, this.array)), this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.from(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== Hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
}, Ql = class extends et {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, jl = class extends et {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, eh = class extends et {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, th = class extends et {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Zr = class extends et {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, nh = class extends et {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Jr = class extends et {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, ih = class extends et {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n), this.isFloat16BufferAttribute = !0;
    }
    getX(e) {
        let t = xs(this.array[e * this.itemSize]);
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setX(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize] = Nt(t), this;
    }
    getY(e) {
        let t = xs(this.array[e * this.itemSize + 1]);
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setY(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 1] = Nt(t), this;
    }
    getZ(e) {
        let t = xs(this.array[e * this.itemSize + 2]);
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setZ(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 2] = Nt(t), this;
    }
    getW(e) {
        let t = xs(this.array[e * this.itemSize + 3]);
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setW(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.array[e * this.itemSize + 3] = Nt(t), this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array)), this.array[e + 0] = Nt(t), this.array[e + 1] = Nt(n), this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array)), this.array[e + 0] = Nt(t), this.array[e + 1] = Nt(n), this.array[e + 2] = Nt(i), this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array), r = Be(r, this.array)), this.array[e + 0] = Nt(t), this.array[e + 1] = Nt(n), this.array[e + 2] = Nt(i), this.array[e + 3] = Nt(r), this;
    }
}, ve = class extends et {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, sh = class extends et {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, mp = 0, Gt = new ze, Ya = new Je, Ti = new A, Vt = new Qt, us = new Qt, xt = new A, Ge = class s1 extends sn {
    constructor(){
        super(), this.isBufferGeometry = !0, Object.defineProperty(this, "id", {
            value: mp++
        }), this.uuid = kt(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Md(e) ? Jr : Zr)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new He().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Gt.makeRotationFromQuaternion(e), this.applyMatrix4(Gt), this;
    }
    rotateX(e) {
        return Gt.makeRotationX(e), this.applyMatrix4(Gt), this;
    }
    rotateY(e) {
        return Gt.makeRotationY(e), this.applyMatrix4(Gt), this;
    }
    rotateZ(e) {
        return Gt.makeRotationZ(e), this.applyMatrix4(Gt), this;
    }
    translate(e, t, n) {
        return Gt.makeTranslation(e, t, n), this.applyMatrix4(Gt), this;
    }
    scale(e, t, n) {
        return Gt.makeScale(e, t, n), this.applyMatrix4(Gt), this;
    }
    lookAt(e) {
        return Ya.lookAt(e), Ya.updateMatrix(), this.applyMatrix4(Ya.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(Ti).negate(), this.translate(Ti.x, Ti.y, Ti.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new ve(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Qt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new A(-1 / 0, -1 / 0, -1 / 0), new A(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Vt.setFromBufferAttribute(r), this.morphTargetsRelative ? (xt.addVectors(this.boundingBox.min, Vt.min), this.boundingBox.expandByPoint(xt), xt.addVectors(this.boundingBox.max, Vt.max), this.boundingBox.expandByPoint(xt)) : (this.boundingBox.expandByPoint(Vt.min), this.boundingBox.expandByPoint(Vt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new Yt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new A, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Vt.setFromBufferAttribute(e), t) for(let r = 0, a = t.length; r < a; r++){
                let o = t[r];
                us.setFromBufferAttribute(o), this.morphTargetsRelative ? (xt.addVectors(Vt.min, us.min), Vt.expandByPoint(xt), xt.addVectors(Vt.max, us.max), Vt.expandByPoint(xt)) : (Vt.expandByPoint(us.min), Vt.expandByPoint(us.max));
            }
            Vt.getCenter(n);
            let i = 0;
            for(let r = 0, a = e.count; r < a; r++)xt.fromBufferAttribute(e, r), i = Math.max(i, n.distanceToSquared(xt));
            if (t) for(let r = 0, a = t.length; r < a; r++){
                let o = t[r], c = this.morphTargetsRelative;
                for(let l = 0, h = o.count; l < h; l++)xt.fromBufferAttribute(o, l), c && (Ti.fromBufferAttribute(e, l), xt.add(Ti)), i = Math.max(i, n.distanceToSquared(xt));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, a = t.uv.array, o = i.length / 3;
        this.hasAttribute("tangent") === !1 && this.setAttribute("tangent", new et(new Float32Array(4 * o), 4));
        let c = this.getAttribute("tangent").array, l = [], h = [];
        for(let T = 0; T < o; T++)l[T] = new A, h[T] = new A;
        let u = new A, d = new A, f = new A, m = new Z, _ = new Z, g = new Z, p = new A, v = new A;
        function x(T, O, Y) {
            u.fromArray(i, T * 3), d.fromArray(i, O * 3), f.fromArray(i, Y * 3), m.fromArray(a, T * 2), _.fromArray(a, O * 2), g.fromArray(a, Y * 2), d.sub(u), f.sub(u), _.sub(m), g.sub(m);
            let $ = 1 / (_.x * g.y - g.x * _.y);
            isFinite($) && (p.copy(d).multiplyScalar(g.y).addScaledVector(f, -_.y).multiplyScalar($), v.copy(f).multiplyScalar(_.x).addScaledVector(d, -g.x).multiplyScalar($), l[T].add(p), l[O].add(p), l[Y].add(p), h[T].add(v), h[O].add(v), h[Y].add(v));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let T = 0, O = y.length; T < O; ++T){
            let Y = y[T], $ = Y.start, U = Y.count;
            for(let z = $, q = $ + U; z < q; z += 3)x(n[z + 0], n[z + 1], n[z + 2]);
        }
        let b = new A, w = new A, R = new A, I = new A;
        function M(T) {
            R.fromArray(r, T * 3), I.copy(R);
            let O = l[T];
            b.copy(O), b.sub(R.multiplyScalar(R.dot(O))).normalize(), w.crossVectors(I, O);
            let $ = w.dot(h[T]) < 0 ? -1 : 1;
            c[T * 4] = b.x, c[T * 4 + 1] = b.y, c[T * 4 + 2] = b.z, c[T * 4 + 3] = $;
        }
        for(let T = 0, O = y.length; T < O; ++T){
            let Y = y[T], $ = Y.start, U = Y.count;
            for(let z = $, q = $ + U; z < q; z += 3)M(n[z + 0]), M(n[z + 1]), M(n[z + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new et(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new A, r = new A, a = new A, o = new A, c = new A, l = new A, h = new A, u = new A;
            if (e) for(let d = 0, f = e.count; d < f; d += 3){
                let m = e.getX(d + 0), _ = e.getX(d + 1), g = e.getX(d + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, _), a.fromBufferAttribute(t, g), h.subVectors(a, r), u.subVectors(i, r), h.cross(u), o.fromBufferAttribute(n, m), c.fromBufferAttribute(n, _), l.fromBufferAttribute(n, g), o.add(h), c.add(h), l.add(h), n.setXYZ(m, o.x, o.y, o.z), n.setXYZ(_, c.x, c.y, c.z), n.setXYZ(g, l.x, l.y, l.z);
            }
            else for(let d = 0, f = t.count; d < f; d += 3)i.fromBufferAttribute(t, d + 0), r.fromBufferAttribute(t, d + 1), a.fromBufferAttribute(t, d + 2), h.subVectors(a, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d + 0, h.x, h.y, h.z), n.setXYZ(d + 1, h.x, h.y, h.z), n.setXYZ(d + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)xt.fromBufferAttribute(e, t), xt.normalize(), e.setXYZ(t, xt.x, xt.y, xt.z);
    }
    toNonIndexed() {
        function e(o, c) {
            let l = o.array, h = o.itemSize, u = o.normalized, d = new l.constructor(c.length * h), f = 0, m = 0;
            for(let _ = 0, g = c.length; _ < g; _++){
                o.isInterleavedBufferAttribute ? f = c[_] * o.data.stride + o.offset : f = c[_] * h;
                for(let p = 0; p < h; p++)d[m++] = l[f++];
            }
            return new et(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new s1, n = this.index.array, i = this.attributes;
        for(let o in i){
            let c = i[o], l = e(c, n);
            t.setAttribute(o, l);
        }
        let r = this.morphAttributes;
        for(let o in r){
            let c = [], l = r[o];
            for(let h = 0, u = l.length; h < u; h++){
                let d = l[h], f = e(d, n);
                c.push(f);
            }
            t.morphAttributes[o] = c;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let a = this.groups;
        for(let o = 0, c = a.length; o < c; o++){
            let l = a[o];
            t.addGroup(l.start, l.count, l.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.6,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let c = this.parameters;
            for(let l in c)c[l] !== void 0 && (e[l] = c[l]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let c in n){
            let l = n[c];
            e.data.attributes[c] = l.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let c in this.morphAttributes){
            let l = this.morphAttributes[c], h = [];
            for(let u = 0, d = l.length; u < d; u++){
                let f = l[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[c] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let a = this.groups;
        a.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(a)));
        let o = this.boundingSphere;
        return o !== null && (e.data.boundingSphere = {
            center: o.center.toArray(),
            radius: o.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let l in i){
            let h = i[l];
            this.setAttribute(l, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let l in r){
            let h = [], u = r[l];
            for(let d = 0, f = u.length; d < f; d++)h.push(u[d].clone(t));
            this.morphAttributes[l] = h;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let a = e.groups;
        for(let l = 0, h = a.length; l < h; l++){
            let u = a[l];
            this.addGroup(u.start, u.count, u.materialIndex);
        }
        let o = e.boundingBox;
        o !== null && (this.boundingBox = o.clone());
        let c = e.boundingSphere;
        return c !== null && (this.boundingSphere = c.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
}, rh = new ze, qn = new hi, js = new Yt, ah = new A, wi = new A, Ai = new A, Ri = new A, Za = new A, er = new A, tr = new Z, nr = new Z, ir = new Z, oh = new A, ch = new A, lh = new A, sr = new A, rr = new A, Mt = class extends Je {
    constructor(e = new Ge, t = new Sn){
        super(), this.isMesh = !0, this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e, t) {
        return super.copy(e, t), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let t = this.geometry.morphAttributes, n = Object.keys(t);
        if (n.length > 0) {
            let i = t[n[0]];
            if (i !== void 0) {
                this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                for(let r = 0, a = i.length; r < a; r++){
                    let o = i[r].name || String(r);
                    this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = r;
                }
            }
        }
    }
    getVertexPosition(e, t) {
        let n = this.geometry, i = n.attributes.position, r = n.morphAttributes.position, a = n.morphTargetsRelative;
        t.fromBufferAttribute(i, e);
        let o = this.morphTargetInfluences;
        if (r && o) {
            er.set(0, 0, 0);
            for(let c = 0, l = r.length; c < l; c++){
                let h = o[c], u = r[c];
                h !== 0 && (Za.fromBufferAttribute(u, e), a ? er.addScaledVector(Za, h) : er.addScaledVector(Za.sub(t), h));
            }
            t.add(er);
        }
        return t;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        i !== void 0 && (n.boundingSphere === null && n.computeBoundingSphere(), js.copy(n.boundingSphere), js.applyMatrix4(r), qn.copy(e.ray).recast(e.near), !(js.containsPoint(qn.origin) === !1 && (qn.intersectSphere(js, ah) === null || qn.origin.distanceToSquared(ah) > (e.far - e.near) ** 2)) && (rh.copy(r).invert(), qn.copy(e.ray).applyMatrix4(rh), !(n.boundingBox !== null && qn.intersectsBox(n.boundingBox) === !1) && this._computeIntersections(e, t, qn)));
    }
    _computeIntersections(e, t, n) {
        let i, r = this.geometry, a = this.material, o = r.index, c = r.attributes.position, l = r.attributes.uv, h = r.attributes.uv1, u = r.attributes.normal, d = r.groups, f = r.drawRange;
        if (o !== null) if (Array.isArray(a)) for(let m = 0, _ = d.length; m < _; m++){
            let g = d[m], p = a[g.materialIndex], v = Math.max(g.start, f.start), x = Math.min(o.count, Math.min(g.start + g.count, f.start + f.count));
            for(let y = v, b = x; y < b; y += 3){
                let w = o.getX(y), R = o.getX(y + 1), I = o.getX(y + 2);
                i = ar(this, p, e, n, l, h, u, w, R, I), i && (i.faceIndex = Math.floor(y / 3), i.face.materialIndex = g.materialIndex, t.push(i));
            }
        }
        else {
            let m = Math.max(0, f.start), _ = Math.min(o.count, f.start + f.count);
            for(let g = m, p = _; g < p; g += 3){
                let v = o.getX(g), x = o.getX(g + 1), y = o.getX(g + 2);
                i = ar(this, a, e, n, l, h, u, v, x, y), i && (i.faceIndex = Math.floor(g / 3), t.push(i));
            }
        }
        else if (c !== void 0) if (Array.isArray(a)) for(let m = 0, _ = d.length; m < _; m++){
            let g = d[m], p = a[g.materialIndex], v = Math.max(g.start, f.start), x = Math.min(c.count, Math.min(g.start + g.count, f.start + f.count));
            for(let y = v, b = x; y < b; y += 3){
                let w = y, R = y + 1, I = y + 2;
                i = ar(this, p, e, n, l, h, u, w, R, I), i && (i.faceIndex = Math.floor(y / 3), i.face.materialIndex = g.materialIndex, t.push(i));
            }
        }
        else {
            let m = Math.max(0, f.start), _ = Math.min(c.count, f.start + f.count);
            for(let g = m, p = _; g < p; g += 3){
                let v = g, x = g + 1, y = g + 2;
                i = ar(this, a, e, n, l, h, u, v, x, y), i && (i.faceIndex = Math.floor(g / 3), t.push(i));
            }
        }
    }
};
function gp(s1, e, t, n, i, r, a, o) {
    let c;
    if (e.side === Ft ? c = n.intersectTriangle(a, r, i, !0, o) : c = n.intersectTriangle(i, r, a, e.side === Bn, o), c === null) return null;
    rr.copy(o), rr.applyMatrix4(s1.matrixWorld);
    let l = t.ray.origin.distanceTo(rr);
    return l < t.near || l > t.far ? null : {
        distance: l,
        point: rr.clone(),
        object: s1
    };
}
function ar(s1, e, t, n, i, r, a, o, c, l) {
    s1.getVertexPosition(o, wi), s1.getVertexPosition(c, Ai), s1.getVertexPosition(l, Ri);
    let h = gp(s1, e, t, n, wi, Ai, Ri, sr);
    if (h) {
        i && (tr.fromBufferAttribute(i, o), nr.fromBufferAttribute(i, c), ir.fromBufferAttribute(i, l), h.uv = Un.getInterpolation(sr, wi, Ai, Ri, tr, nr, ir, new Z)), r && (tr.fromBufferAttribute(r, o), nr.fromBufferAttribute(r, c), ir.fromBufferAttribute(r, l), h.uv1 = Un.getInterpolation(sr, wi, Ai, Ri, tr, nr, ir, new Z), h.uv2 = h.uv1), a && (oh.fromBufferAttribute(a, o), ch.fromBufferAttribute(a, c), lh.fromBufferAttribute(a, l), h.normal = Un.getInterpolation(sr, wi, Ai, Ri, oh, ch, lh, new A), h.normal.dot(n.direction) > 0 && h.normal.multiplyScalar(-1));
        let u = {
            a: o,
            b: c,
            c: l,
            normal: new A,
            materialIndex: 0
        };
        Un.getNormal(wi, Ai, Ri, u.normal), h.face = u;
    }
    return h;
}
var Ji = class s1 extends Ge {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, a = 1){
        super(), this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: a
        };
        let o = this;
        i = Math.floor(i), r = Math.floor(r), a = Math.floor(a);
        let c = [], l = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, a, r, 0), m("z", "y", "x", 1, -1, n, t, -e, a, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, a, 2), m("x", "z", "y", 1, -1, e, n, -t, i, a, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(c), this.setAttribute("position", new ve(l, 3)), this.setAttribute("normal", new ve(h, 3)), this.setAttribute("uv", new ve(u, 2));
        function m(_, g, p, v, x, y, b, w, R, I, M) {
            let T = y / R, O = b / I, Y = y / 2, $ = b / 2, U = w / 2, z = R + 1, q = I + 1, H = 0, ne = 0, W = new A;
            for(let K = 0; K < q; K++){
                let D = K * O - $;
                for(let G = 0; G < z; G++){
                    let he = G * T - Y;
                    W[_] = he * v, W[g] = D * x, W[p] = U, l.push(W.x, W.y, W.z), W[_] = 0, W[g] = 0, W[p] = w > 0 ? 1 : -1, h.push(W.x, W.y, W.z), u.push(G / R), u.push(1 - K / I), H += 1;
                }
            }
            for(let K = 0; K < I; K++)for(let D = 0; D < R; D++){
                let G = d + D + z * K, he = d + D + z * (K + 1), fe = d + (D + 1) + z * (K + 1), _e = d + (D + 1) + z * K;
                c.push(G, he, _e), c.push(he, fe, _e), ne += 6;
            }
            o.addGroup(f, ne, M), f += ne, d += H;
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function $i(s1) {
    let e = {};
    for(let t in s1){
        e[t] = {};
        for(let n in s1[t]){
            let i = s1[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? i.isRenderTargetTexture ? (console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."), e[t][n] = null) : e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function Lt(s1) {
    let e = {};
    for(let t = 0; t < s1.length; t++){
        let n = $i(s1[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
function _p(s1) {
    let e = [];
    for(let t = 0; t < s1.length; t++)e.push(s1[t].clone());
    return e;
}
function bd(s1) {
    return s1.getRenderTarget() === null ? s1.outputColorSpace : Qe.workingColorSpace;
}
var xp = {
    clone: $i,
    merge: Lt
}, vp = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, yp = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, jt = class extends bt {
    constructor(e){
        super(), this.isShaderMaterial = !0, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = vp, this.fragmentShader = yp, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.forceSinglePass = !0, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv1: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = $i(e.uniforms), this.uniformsGroups = _p(e.uniformsGroups), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let a = this.uniforms[i].value;
            a && a.isTexture ? t.uniforms[i] = {
                type: "t",
                value: a.toJSON(e).uuid
            } : a && a.isColor ? t.uniforms[i] = {
                type: "c",
                value: a.getHex()
            } : a && a.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: a.toArray()
            } : a && a.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: a.toArray()
            } : a && a.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: a.toArray()
            } : a && a.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: a.toArray()
            } : a && a.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: a.toArray()
            } : t.uniforms[i] = {
                value: a
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader, t.lights = this.lights, t.clipping = this.clipping;
        let n = {};
        for(let i in this.extensions)this.extensions[i] === !0 && (n[i] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
}, Cs = class extends Je {
    constructor(){
        super(), this.isCamera = !0, this.type = "Camera", this.matrixWorldInverse = new ze, this.projectionMatrix = new ze, this.projectionMatrixInverse = new ze, this.coordinateSystem = vn;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this.coordinateSystem = e.coordinateSystem, this;
    }
    getWorldDirection(e) {
        return super.getWorldDirection(e).negate();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, yt = class extends Cs {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super(), this.isPerspectiveCamera = !0, this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = Zi * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(ai * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return Zi * 2 * Math.atan(Math.tan(ai * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, a) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = a, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(ai * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, a = this.view;
        if (this.view !== null && this.view.enabled) {
            let c = a.fullWidth, l = a.fullHeight;
            r += a.offsetX * i / c, t -= a.offsetY * n / l, i *= a.width / c, n *= a.height / l;
        }
        let o = this.filmOffset;
        o !== 0 && (r += e * o / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
}, Ci = -90, Pi = 1, _o = class extends Je {
    constructor(e, t, n){
        super(), this.type = "CubeCamera", this.renderTarget = n, this.coordinateSystem = null, this.activeMipmapLevel = 0;
        let i = new yt(Ci, Pi, e, t);
        i.layers = this.layers, this.add(i);
        let r = new yt(Ci, Pi, e, t);
        r.layers = this.layers, this.add(r);
        let a = new yt(Ci, Pi, e, t);
        a.layers = this.layers, this.add(a);
        let o = new yt(Ci, Pi, e, t);
        o.layers = this.layers, this.add(o);
        let c = new yt(Ci, Pi, e, t);
        c.layers = this.layers, this.add(c);
        let l = new yt(Ci, Pi, e, t);
        l.layers = this.layers, this.add(l);
    }
    updateCoordinateSystem() {
        let e = this.coordinateSystem, t = this.children.concat(), [n, i, r, a, o, c] = t;
        for (let l of t)this.remove(l);
        if (e === vn) n.up.set(0, 1, 0), n.lookAt(1, 0, 0), i.up.set(0, 1, 0), i.lookAt(-1, 0, 0), r.up.set(0, 0, -1), r.lookAt(0, 1, 0), a.up.set(0, 0, 1), a.lookAt(0, -1, 0), o.up.set(0, 1, 0), o.lookAt(0, 0, 1), c.up.set(0, 1, 0), c.lookAt(0, 0, -1);
        else if (e === Gr) n.up.set(0, -1, 0), n.lookAt(-1, 0, 0), i.up.set(0, -1, 0), i.lookAt(1, 0, 0), r.up.set(0, 0, 1), r.lookAt(0, 1, 0), a.up.set(0, 0, -1), a.lookAt(0, -1, 0), o.up.set(0, -1, 0), o.lookAt(0, 0, 1), c.up.set(0, -1, 0), c.lookAt(0, 0, -1);
        else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " + e);
        for (let l of t)this.add(l), l.updateMatrixWorld();
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let { renderTarget: n , activeMipmapLevel: i  } = this;
        this.coordinateSystem !== e.coordinateSystem && (this.coordinateSystem = e.coordinateSystem, this.updateCoordinateSystem());
        let [r, a, o, c, l, h] = this.children, u = e.getRenderTarget(), d = e.getActiveCubeFace(), f = e.getActiveMipmapLevel(), m = e.xr.enabled;
        e.xr.enabled = !1;
        let _ = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0, i), e.render(t, r), e.setRenderTarget(n, 1, i), e.render(t, a), e.setRenderTarget(n, 2, i), e.render(t, o), e.setRenderTarget(n, 3, i), e.render(t, c), e.setRenderTarget(n, 4, i), e.render(t, l), n.texture.generateMipmaps = _, e.setRenderTarget(n, 5, i), e.render(t, h), e.setRenderTarget(u, d, f), e.xr.enabled = m, n.texture.needsPMREMUpdate = !0;
    }
}, Ki = class extends St {
    constructor(e, t, n, i, r, a, o, c, l, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : zn, super(e, t, n, i, r, a, o, c, l, h), this.isCubeTexture = !0, this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
}, xo = class extends qt {
    constructor(e = 1, t = {}){
        super(e, e, t), this.isWebGLCubeRenderTarget = !0;
        let n = {
            width: e,
            height: e,
            depth: 1
        }, i = [
            n,
            n,
            n,
            n,
            n,
            n
        ];
        t.encoding !== void 0 && (Ms("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."), t.colorSpace = t.encoding === ri ? vt : Xt), this.texture = new Ki(i, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : mt;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.colorSpace = t.colorSpace, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new Ji(5, 5, 5), r = new jt({
            name: "CubemapFromEquirect",
            uniforms: $i(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: Ft,
            blending: Dn
        });
        r.uniforms.tEquirect.value = t;
        let a = new Mt(i, r), o = t.minFilter;
        return t.minFilter === li && (t.minFilter = mt), new _o(1, 10, this).update(e, a), t.minFilter = o, a.geometry.dispose(), a.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let a = 0; a < 6; a++)e.setRenderTarget(this, a), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
}, Ja = new A, Mp = new A, Sp = new He, mn = class {
    constructor(e = new A(1, 0, 0), t = 0){
        this.isPlane = !0, this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = Ja.subVectors(n, t).cross(Mp.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
    }
    intersectLine(e, t) {
        let n = e.delta(Ja), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(e.start).addScaledVector(n, r);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || Sp.getNormalMatrix(e), i = this.coplanarPoint(Ja).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Yn = new Yt, or = new A, Ps = class {
    constructor(e = new mn, t = new mn, n = new mn, i = new mn, r = new mn, a = new mn){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            a
        ];
    }
    set(e, t, n, i, r, a) {
        let o = this.planes;
        return o[0].copy(e), o[1].copy(t), o[2].copy(n), o[3].copy(i), o[4].copy(r), o[5].copy(a), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e, t = vn) {
        let n = this.planes, i = e.elements, r = i[0], a = i[1], o = i[2], c = i[3], l = i[4], h = i[5], u = i[6], d = i[7], f = i[8], m = i[9], _ = i[10], g = i[11], p = i[12], v = i[13], x = i[14], y = i[15];
        if (n[0].setComponents(c - r, d - l, g - f, y - p).normalize(), n[1].setComponents(c + r, d + l, g + f, y + p).normalize(), n[2].setComponents(c + a, d + h, g + m, y + v).normalize(), n[3].setComponents(c - a, d - h, g - m, y - v).normalize(), n[4].setComponents(c - o, d - u, g - _, y - x).normalize(), t === vn) n[5].setComponents(c + o, d + u, g + _, y + x).normalize();
        else if (t === Gr) n[5].setComponents(o, u, _, x).normalize();
        else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " + t);
        return this;
    }
    intersectsObject(e) {
        if (e.boundingSphere !== void 0) e.boundingSphere === null && e.computeBoundingSphere(), Yn.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
        else {
            let t = e.geometry;
            t.boundingSphere === null && t.computeBoundingSphere(), Yn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
        }
        return this.intersectsSphere(Yn);
    }
    intersectsSprite(e) {
        return Yn.center.set(0, 0, 0), Yn.radius = .7071067811865476, Yn.applyMatrix4(e.matrixWorld), this.intersectsSphere(Yn);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (or.x = i.normal.x > 0 ? e.max.x : e.min.x, or.y = i.normal.y > 0 ? e.max.y : e.min.y, or.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(or) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function Ed() {
    let s1 = null, e = !1, t = null, n = null;
    function i(r, a) {
        t(r, a), n = s1.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s1.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s1.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s1 = r;
        }
    };
}
function bp(s1, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(l, h) {
        let u = l.array, d = l.usage, f = s1.createBuffer();
        s1.bindBuffer(h, f), s1.bufferData(h, u, d), l.onUploadCallback();
        let m;
        if (u instanceof Float32Array) m = s1.FLOAT;
        else if (u instanceof Uint16Array) if (l.isFloat16BufferAttribute) if (t) m = s1.HALF_FLOAT;
        else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");
        else m = s1.UNSIGNED_SHORT;
        else if (u instanceof Int16Array) m = s1.SHORT;
        else if (u instanceof Uint32Array) m = s1.UNSIGNED_INT;
        else if (u instanceof Int32Array) m = s1.INT;
        else if (u instanceof Int8Array) m = s1.BYTE;
        else if (u instanceof Uint8Array) m = s1.UNSIGNED_BYTE;
        else if (u instanceof Uint8ClampedArray) m = s1.UNSIGNED_BYTE;
        else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + u);
        return {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: l.version
        };
    }
    function r(l, h, u) {
        let d = h.array, f = h.updateRange;
        s1.bindBuffer(u, l), f.count === -1 ? s1.bufferSubData(u, 0, d) : (t ? s1.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s1.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1), h.onUploadCallback();
    }
    function a(l) {
        return l.isInterleavedBufferAttribute && (l = l.data), n.get(l);
    }
    function o(l) {
        l.isInterleavedBufferAttribute && (l = l.data);
        let h = n.get(l);
        h && (s1.deleteBuffer(h.buffer), n.delete(l));
    }
    function c(l, h) {
        if (l.isGLBufferAttribute) {
            let d = n.get(l);
            (!d || d.version < l.version) && n.set(l, {
                buffer: l.buffer,
                type: l.type,
                bytesPerElement: l.elementSize,
                version: l.version
            });
            return;
        }
        l.isInterleavedBufferAttribute && (l = l.data);
        let u = n.get(l);
        u === void 0 ? n.set(l, i(l, h)) : u.version < l.version && (r(u.buffer, l, h), u.version = l.version);
    }
    return {
        get: a,
        remove: o,
        update: c
    };
}
var $r = class s1 extends Ge {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super(), this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, a = t / 2, o = Math.floor(n), c = Math.floor(i), l = o + 1, h = c + 1, u = e / o, d = t / c, f = [], m = [], _ = [], g = [];
        for(let p = 0; p < h; p++){
            let v = p * d - a;
            for(let x = 0; x < l; x++){
                let y = x * u - r;
                m.push(y, -v, 0), _.push(0, 0, 1), g.push(x / o), g.push(1 - p / c);
            }
        }
        for(let p = 0; p < c; p++)for(let v = 0; v < o; v++){
            let x = v + l * p, y = v + l * (p + 1), b = v + 1 + l * (p + 1), w = v + 1 + l * p;
            f.push(x, y, w), f.push(y, b, w);
        }
        this.setIndex(f), this.setAttribute("position", new ve(m, 3)), this.setAttribute("normal", new ve(_, 3)), this.setAttribute("uv", new ve(g, 2));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, Ep = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`, Tp = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`, wp = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`, Ap = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Rp = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, Cp = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Pp = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, Lp = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, Ip = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`, Up = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Dp = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`, Np = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, Op = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Fp = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Bp = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, zp = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Vp = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, kp = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, Hp = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Gp = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Wp = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Xp = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`, qp = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, Yp = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Zp = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Jp = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`, $p = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, Kp = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Qp = "gl_FragColor = linearToOutputTexel( gl_FragColor );", jp = `
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`, em = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, tm = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, nm = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, im = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, sm = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, rm = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, am = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, om = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, cm = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, lm = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`, hm = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, um = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, dm = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`, fm = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`, pm = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, mm = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`, gm = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, _m = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`, xm = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, vm = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`, ym = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`, Mm = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, Sm = `
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal;
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, bm = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, Em = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`, Tm = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, wm = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Am = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, Rm = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, Cm = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, Pm = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, Lm = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Im = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Um = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`, Dm = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Nm = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, Om = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Fm = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Bm = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, zm = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`, Vm = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, km = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Hm = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Gm = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Wm = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`, Xm = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`, qm = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`, Ym = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`, Zm = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, Jm = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, $m = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`, Km = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Qm = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, jm = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, eg = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, tg = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`, ng = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, ig = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, sg = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, rg = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`, ag = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, og = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, cg = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`, lg = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, hg = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, ug = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, dg = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, fg = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, pg = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, mg = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`, gg = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`, _g = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, xg = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, vg = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`, yg = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, Mg = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, Sg = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, bg = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, Eg = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, Tg = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, wg = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, Ag = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, Rg = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, Cg = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, Pg = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, Lg = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, Ig = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, Ug = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Dg = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Ng = `#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Og = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Fg = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bg = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zg = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Vg = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, kg = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Hg = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, Gg = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Wg = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Xg = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, qg = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Yg = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Zg = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Jg = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, $g = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Kg = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Qg = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, jg = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, e_ = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, ke = {
    alphahash_fragment: Ep,
    alphahash_pars_fragment: Tp,
    alphamap_fragment: wp,
    alphamap_pars_fragment: Ap,
    alphatest_fragment: Rp,
    alphatest_pars_fragment: Cp,
    aomap_fragment: Pp,
    aomap_pars_fragment: Lp,
    begin_vertex: Ip,
    beginnormal_vertex: Up,
    bsdfs: Dp,
    iridescence_fragment: Np,
    bumpmap_pars_fragment: Op,
    clipping_planes_fragment: Fp,
    clipping_planes_pars_fragment: Bp,
    clipping_planes_pars_vertex: zp,
    clipping_planes_vertex: Vp,
    color_fragment: kp,
    color_pars_fragment: Hp,
    color_pars_vertex: Gp,
    color_vertex: Wp,
    common: Xp,
    cube_uv_reflection_fragment: qp,
    defaultnormal_vertex: Yp,
    displacementmap_pars_vertex: Zp,
    displacementmap_vertex: Jp,
    emissivemap_fragment: $p,
    emissivemap_pars_fragment: Kp,
    colorspace_fragment: Qp,
    colorspace_pars_fragment: jp,
    envmap_fragment: em,
    envmap_common_pars_fragment: tm,
    envmap_pars_fragment: nm,
    envmap_pars_vertex: im,
    envmap_physical_pars_fragment: mm,
    envmap_vertex: sm,
    fog_vertex: rm,
    fog_pars_vertex: am,
    fog_fragment: om,
    fog_pars_fragment: cm,
    gradientmap_pars_fragment: lm,
    lightmap_fragment: hm,
    lightmap_pars_fragment: um,
    lights_lambert_fragment: dm,
    lights_lambert_pars_fragment: fm,
    lights_pars_begin: pm,
    lights_toon_fragment: gm,
    lights_toon_pars_fragment: _m,
    lights_phong_fragment: xm,
    lights_phong_pars_fragment: vm,
    lights_physical_fragment: ym,
    lights_physical_pars_fragment: Mm,
    lights_fragment_begin: Sm,
    lights_fragment_maps: bm,
    lights_fragment_end: Em,
    logdepthbuf_fragment: Tm,
    logdepthbuf_pars_fragment: wm,
    logdepthbuf_pars_vertex: Am,
    logdepthbuf_vertex: Rm,
    map_fragment: Cm,
    map_pars_fragment: Pm,
    map_particle_fragment: Lm,
    map_particle_pars_fragment: Im,
    metalnessmap_fragment: Um,
    metalnessmap_pars_fragment: Dm,
    morphcolor_vertex: Nm,
    morphnormal_vertex: Om,
    morphtarget_pars_vertex: Fm,
    morphtarget_vertex: Bm,
    normal_fragment_begin: zm,
    normal_fragment_maps: Vm,
    normal_pars_fragment: km,
    normal_pars_vertex: Hm,
    normal_vertex: Gm,
    normalmap_pars_fragment: Wm,
    clearcoat_normal_fragment_begin: Xm,
    clearcoat_normal_fragment_maps: qm,
    clearcoat_pars_fragment: Ym,
    iridescence_pars_fragment: Zm,
    opaque_fragment: Jm,
    packing: $m,
    premultiplied_alpha_fragment: Km,
    project_vertex: Qm,
    dithering_fragment: jm,
    dithering_pars_fragment: eg,
    roughnessmap_fragment: tg,
    roughnessmap_pars_fragment: ng,
    shadowmap_pars_fragment: ig,
    shadowmap_pars_vertex: sg,
    shadowmap_vertex: rg,
    shadowmask_pars_fragment: ag,
    skinbase_vertex: og,
    skinning_pars_vertex: cg,
    skinning_vertex: lg,
    skinnormal_vertex: hg,
    specularmap_fragment: ug,
    specularmap_pars_fragment: dg,
    tonemapping_fragment: fg,
    tonemapping_pars_fragment: pg,
    transmission_fragment: mg,
    transmission_pars_fragment: gg,
    uv_pars_fragment: _g,
    uv_pars_vertex: xg,
    uv_vertex: vg,
    worldpos_vertex: yg,
    background_vert: Mg,
    background_frag: Sg,
    backgroundCube_vert: bg,
    backgroundCube_frag: Eg,
    cube_vert: Tg,
    cube_frag: wg,
    depth_vert: Ag,
    depth_frag: Rg,
    distanceRGBA_vert: Cg,
    distanceRGBA_frag: Pg,
    equirect_vert: Lg,
    equirect_frag: Ig,
    linedashed_vert: Ug,
    linedashed_frag: Dg,
    meshbasic_vert: Ng,
    meshbasic_frag: Og,
    meshlambert_vert: Fg,
    meshlambert_frag: Bg,
    meshmatcap_vert: zg,
    meshmatcap_frag: Vg,
    meshnormal_vert: kg,
    meshnormal_frag: Hg,
    meshphong_vert: Gg,
    meshphong_frag: Wg,
    meshphysical_vert: Xg,
    meshphysical_frag: qg,
    meshtoon_vert: Yg,
    meshtoon_frag: Zg,
    points_vert: Jg,
    points_frag: $g,
    shadow_vert: Kg,
    shadow_frag: Qg,
    sprite_vert: jg,
    sprite_frag: e_
}, le = {
    common: {
        diffuse: {
            value: new pe(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        mapTransform: {
            value: new He
        },
        alphaMap: {
            value: null
        },
        alphaMapTransform: {
            value: new He
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        },
        specularMapTransform: {
            value: new He
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        },
        aoMapTransform: {
            value: new He
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        },
        lightMapTransform: {
            value: new He
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpMapTransform: {
            value: new He
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalMapTransform: {
            value: new He
        },
        normalScale: {
            value: new Z(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementMapTransform: {
            value: new He
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        },
        emissiveMapTransform: {
            value: new He
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        },
        metalnessMapTransform: {
            value: new He
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        },
        roughnessMapTransform: {
            value: new He
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new pe(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotLightMap: {
            value: []
        },
        spotShadowMap: {
            value: []
        },
        spotLightMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new pe(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaMapTransform: {
            value: new He
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new He
        }
    },
    sprite: {
        diffuse: {
            value: new pe(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new Z(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        mapTransform: {
            value: new He
        },
        alphaMap: {
            value: null
        },
        alphaMapTransform: {
            value: new He
        },
        alphaTest: {
            value: 0
        }
    }
}, nn = {
    basic: {
        uniforms: Lt([
            le.common,
            le.specularmap,
            le.envmap,
            le.aomap,
            le.lightmap,
            le.fog
        ]),
        vertexShader: ke.meshbasic_vert,
        fragmentShader: ke.meshbasic_frag
    },
    lambert: {
        uniforms: Lt([
            le.common,
            le.specularmap,
            le.envmap,
            le.aomap,
            le.lightmap,
            le.emissivemap,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            le.fog,
            le.lights,
            {
                emissive: {
                    value: new pe(0)
                }
            }
        ]),
        vertexShader: ke.meshlambert_vert,
        fragmentShader: ke.meshlambert_frag
    },
    phong: {
        uniforms: Lt([
            le.common,
            le.specularmap,
            le.envmap,
            le.aomap,
            le.lightmap,
            le.emissivemap,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            le.fog,
            le.lights,
            {
                emissive: {
                    value: new pe(0)
                },
                specular: {
                    value: new pe(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: ke.meshphong_vert,
        fragmentShader: ke.meshphong_frag
    },
    standard: {
        uniforms: Lt([
            le.common,
            le.envmap,
            le.aomap,
            le.lightmap,
            le.emissivemap,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            le.roughnessmap,
            le.metalnessmap,
            le.fog,
            le.lights,
            {
                emissive: {
                    value: new pe(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: ke.meshphysical_vert,
        fragmentShader: ke.meshphysical_frag
    },
    toon: {
        uniforms: Lt([
            le.common,
            le.aomap,
            le.lightmap,
            le.emissivemap,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            le.gradientmap,
            le.fog,
            le.lights,
            {
                emissive: {
                    value: new pe(0)
                }
            }
        ]),
        vertexShader: ke.meshtoon_vert,
        fragmentShader: ke.meshtoon_frag
    },
    matcap: {
        uniforms: Lt([
            le.common,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            le.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: ke.meshmatcap_vert,
        fragmentShader: ke.meshmatcap_frag
    },
    points: {
        uniforms: Lt([
            le.points,
            le.fog
        ]),
        vertexShader: ke.points_vert,
        fragmentShader: ke.points_frag
    },
    dashed: {
        uniforms: Lt([
            le.common,
            le.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: ke.linedashed_vert,
        fragmentShader: ke.linedashed_frag
    },
    depth: {
        uniforms: Lt([
            le.common,
            le.displacementmap
        ]),
        vertexShader: ke.depth_vert,
        fragmentShader: ke.depth_frag
    },
    normal: {
        uniforms: Lt([
            le.common,
            le.bumpmap,
            le.normalmap,
            le.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: ke.meshnormal_vert,
        fragmentShader: ke.meshnormal_frag
    },
    sprite: {
        uniforms: Lt([
            le.sprite,
            le.fog
        ]),
        vertexShader: ke.sprite_vert,
        fragmentShader: ke.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new He
            },
            t2D: {
                value: null
            },
            backgroundIntensity: {
                value: 1
            }
        },
        vertexShader: ke.background_vert,
        fragmentShader: ke.background_frag
    },
    backgroundCube: {
        uniforms: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            backgroundBlurriness: {
                value: 0
            },
            backgroundIntensity: {
                value: 1
            }
        },
        vertexShader: ke.backgroundCube_vert,
        fragmentShader: ke.backgroundCube_frag
    },
    cube: {
        uniforms: {
            tCube: {
                value: null
            },
            tFlip: {
                value: -1
            },
            opacity: {
                value: 1
            }
        },
        vertexShader: ke.cube_vert,
        fragmentShader: ke.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: ke.equirect_vert,
        fragmentShader: ke.equirect_frag
    },
    distanceRGBA: {
        uniforms: Lt([
            le.common,
            le.displacementmap,
            {
                referencePosition: {
                    value: new A
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: ke.distanceRGBA_vert,
        fragmentShader: ke.distanceRGBA_frag
    },
    shadow: {
        uniforms: Lt([
            le.lights,
            le.fog,
            {
                color: {
                    value: new pe(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: ke.shadow_vert,
        fragmentShader: ke.shadow_frag
    }
};
nn.physical = {
    uniforms: Lt([
        nn.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatMapTransform: {
                value: new He
            },
            clearcoatNormalMap: {
                value: null
            },
            clearcoatNormalMapTransform: {
                value: new He
            },
            clearcoatNormalScale: {
                value: new Z(1, 1)
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatRoughnessMapTransform: {
                value: new He
            },
            iridescence: {
                value: 0
            },
            iridescenceMap: {
                value: null
            },
            iridescenceMapTransform: {
                value: new He
            },
            iridescenceIOR: {
                value: 1.3
            },
            iridescenceThicknessMinimum: {
                value: 100
            },
            iridescenceThicknessMaximum: {
                value: 400
            },
            iridescenceThicknessMap: {
                value: null
            },
            iridescenceThicknessMapTransform: {
                value: new He
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new pe(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenColorMapTransform: {
                value: new He
            },
            sheenRoughness: {
                value: 1
            },
            sheenRoughnessMap: {
                value: null
            },
            sheenRoughnessMapTransform: {
                value: new He
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionMapTransform: {
                value: new He
            },
            transmissionSamplerSize: {
                value: new Z
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            thicknessMapTransform: {
                value: new He
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new pe(0)
            },
            specularColor: {
                value: new pe(1, 1, 1)
            },
            specularColorMap: {
                value: null
            },
            specularColorMapTransform: {
                value: new He
            },
            specularIntensity: {
                value: 1
            },
            specularIntensityMap: {
                value: null
            },
            specularIntensityMapTransform: {
                value: new He
            },
            anisotropyVector: {
                value: new Z
            },
            anisotropyMap: {
                value: null
            },
            anisotropyMapTransform: {
                value: new He
            }
        }
    ]),
    vertexShader: ke.meshphysical_vert,
    fragmentShader: ke.meshphysical_frag
};
var cr = {
    r: 0,
    b: 0,
    g: 0
};
function t_(s1, e, t, n, i, r, a) {
    let o = new pe(0), c = r === !0 ? 0 : 1, l, h, u = null, d = 0, f = null;
    function m(g, p) {
        let v = !1, x = p.isScene === !0 ? p.background : null;
        x && x.isTexture && (x = (p.backgroundBlurriness > 0 ? t : e).get(x)), x === null ? _(o, c) : x && x.isColor && (_(x, 1), v = !0);
        let y = s1.xr.getEnvironmentBlendMode();
        y === "additive" ? n.buffers.color.setClear(0, 0, 0, 1, a) : y === "alpha-blend" && n.buffers.color.setClear(0, 0, 0, 0, a), (s1.autoClear || v) && s1.clear(s1.autoClearColor, s1.autoClearDepth, s1.autoClearStencil), x && (x.isCubeTexture || x.mapping === Vs) ? (h === void 0 && (h = new Mt(new Ji(1, 1, 1), new jt({
            name: "BackgroundCubeMaterial",
            uniforms: $i(nn.backgroundCube.uniforms),
            vertexShader: nn.backgroundCube.vertexShader,
            fragmentShader: nn.backgroundCube.fragmentShader,
            side: Ft,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), h.geometry.deleteAttribute("normal"), h.geometry.deleteAttribute("uv"), h.onBeforeRender = function(b, w, R) {
            this.matrixWorld.copyPosition(R.matrixWorld);
        }, Object.defineProperty(h.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), i.update(h)), h.material.uniforms.envMap.value = x, h.material.uniforms.flipEnvMap.value = x.isCubeTexture && x.isRenderTargetTexture === !1 ? -1 : 1, h.material.uniforms.backgroundBlurriness.value = p.backgroundBlurriness, h.material.uniforms.backgroundIntensity.value = p.backgroundIntensity, h.material.toneMapped = Qe.getTransfer(x.colorSpace) !== nt, (u !== x || d !== x.version || f !== s1.toneMapping) && (h.material.needsUpdate = !0, u = x, d = x.version, f = s1.toneMapping), h.layers.enableAll(), g.unshift(h, h.geometry, h.material, 0, 0, null)) : x && x.isTexture && (l === void 0 && (l = new Mt(new $r(2, 2), new jt({
            name: "BackgroundMaterial",
            uniforms: $i(nn.background.uniforms),
            vertexShader: nn.background.vertexShader,
            fragmentShader: nn.background.fragmentShader,
            side: Bn,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), Object.defineProperty(l.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), i.update(l)), l.material.uniforms.t2D.value = x, l.material.uniforms.backgroundIntensity.value = p.backgroundIntensity, l.material.toneMapped = Qe.getTransfer(x.colorSpace) !== nt, x.matrixAutoUpdate === !0 && x.updateMatrix(), l.material.uniforms.uvTransform.value.copy(x.matrix), (u !== x || d !== x.version || f !== s1.toneMapping) && (l.material.needsUpdate = !0, u = x, d = x.version, f = s1.toneMapping), l.layers.enableAll(), g.unshift(l, l.geometry, l.material, 0, 0, null));
    }
    function _(g, p) {
        g.getRGB(cr, bd(s1)), n.buffers.color.setClear(cr.r, cr.g, cr.b, p, a);
    }
    return {
        getClearColor: function() {
            return o;
        },
        setClearColor: function(g, p = 1) {
            o.set(g), c = p, _(o, c);
        },
        getClearAlpha: function() {
            return c;
        },
        setClearAlpha: function(g) {
            c = g, _(o, c);
        },
        render: m
    };
}
function n_(s1, e, t, n) {
    let i = s1.getParameter(s1.MAX_VERTEX_ATTRIBS), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), a = n.isWebGL2 || r !== null, o = {}, c = g(null), l = c, h = !1;
    function u(U, z, q, H, ne) {
        let W = !1;
        if (a) {
            let K = _(H, q, z);
            l !== K && (l = K, f(l.object)), W = p(U, H, q, ne), W && v(U, H, q, ne);
        } else {
            let K = z.wireframe === !0;
            (l.geometry !== H.id || l.program !== q.id || l.wireframe !== K) && (l.geometry = H.id, l.program = q.id, l.wireframe = K, W = !0);
        }
        ne !== null && t.update(ne, s1.ELEMENT_ARRAY_BUFFER), (W || h) && (h = !1, I(U, z, q, H), ne !== null && s1.bindBuffer(s1.ELEMENT_ARRAY_BUFFER, t.get(ne).buffer));
    }
    function d() {
        return n.isWebGL2 ? s1.createVertexArray() : r.createVertexArrayOES();
    }
    function f(U) {
        return n.isWebGL2 ? s1.bindVertexArray(U) : r.bindVertexArrayOES(U);
    }
    function m(U) {
        return n.isWebGL2 ? s1.deleteVertexArray(U) : r.deleteVertexArrayOES(U);
    }
    function _(U, z, q) {
        let H = q.wireframe === !0, ne = o[U.id];
        ne === void 0 && (ne = {}, o[U.id] = ne);
        let W = ne[z.id];
        W === void 0 && (W = {}, ne[z.id] = W);
        let K = W[H];
        return K === void 0 && (K = g(d()), W[H] = K), K;
    }
    function g(U) {
        let z = [], q = [], H = [];
        for(let ne = 0; ne < i; ne++)z[ne] = 0, q[ne] = 0, H[ne] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: z,
            enabledAttributes: q,
            attributeDivisors: H,
            object: U,
            attributes: {},
            index: null
        };
    }
    function p(U, z, q, H) {
        let ne = l.attributes, W = z.attributes, K = 0, D = q.getAttributes();
        for(let G in D)if (D[G].location >= 0) {
            let fe = ne[G], _e = W[G];
            if (_e === void 0 && (G === "instanceMatrix" && U.instanceMatrix && (_e = U.instanceMatrix), G === "instanceColor" && U.instanceColor && (_e = U.instanceColor)), fe === void 0 || fe.attribute !== _e || _e && fe.data !== _e.data) return !0;
            K++;
        }
        return l.attributesNum !== K || l.index !== H;
    }
    function v(U, z, q, H) {
        let ne = {}, W = z.attributes, K = 0, D = q.getAttributes();
        for(let G in D)if (D[G].location >= 0) {
            let fe = W[G];
            fe === void 0 && (G === "instanceMatrix" && U.instanceMatrix && (fe = U.instanceMatrix), G === "instanceColor" && U.instanceColor && (fe = U.instanceColor));
            let _e = {};
            _e.attribute = fe, fe && fe.data && (_e.data = fe.data), ne[G] = _e, K++;
        }
        l.attributes = ne, l.attributesNum = K, l.index = H;
    }
    function x() {
        let U = l.newAttributes;
        for(let z = 0, q = U.length; z < q; z++)U[z] = 0;
    }
    function y(U) {
        b(U, 0);
    }
    function b(U, z) {
        let q = l.newAttributes, H = l.enabledAttributes, ne = l.attributeDivisors;
        q[U] = 1, H[U] === 0 && (s1.enableVertexAttribArray(U), H[U] = 1), ne[U] !== z && ((n.isWebGL2 ? s1 : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](U, z), ne[U] = z);
    }
    function w() {
        let U = l.newAttributes, z = l.enabledAttributes;
        for(let q = 0, H = z.length; q < H; q++)z[q] !== U[q] && (s1.disableVertexAttribArray(q), z[q] = 0);
    }
    function R(U, z, q, H, ne, W, K) {
        K === !0 ? s1.vertexAttribIPointer(U, z, q, ne, W) : s1.vertexAttribPointer(U, z, q, H, ne, W);
    }
    function I(U, z, q, H) {
        if (n.isWebGL2 === !1 && (U.isInstancedMesh || H.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        x();
        let ne = H.attributes, W = q.getAttributes(), K = z.defaultAttributeValues;
        for(let D in W){
            let G = W[D];
            if (G.location >= 0) {
                let he = ne[D];
                if (he === void 0 && (D === "instanceMatrix" && U.instanceMatrix && (he = U.instanceMatrix), D === "instanceColor" && U.instanceColor && (he = U.instanceColor)), he !== void 0) {
                    let fe = he.normalized, _e = he.itemSize, we = t.get(he);
                    if (we === void 0) continue;
                    let Ee = we.buffer, Te = we.type, Ye = we.bytesPerElement, it = n.isWebGL2 === !0 && (Te === s1.INT || Te === s1.UNSIGNED_INT || he.gpuType === dd);
                    if (he.isInterleavedBufferAttribute) {
                        let Ce = he.data, L = Ce.stride, oe = he.offset;
                        if (Ce.isInstancedInterleavedBuffer) {
                            for(let X = 0; X < G.locationSize; X++)b(G.location + X, Ce.meshPerAttribute);
                            U.isInstancedMesh !== !0 && H._maxInstanceCount === void 0 && (H._maxInstanceCount = Ce.meshPerAttribute * Ce.count);
                        } else for(let X = 0; X < G.locationSize; X++)y(G.location + X);
                        s1.bindBuffer(s1.ARRAY_BUFFER, Ee);
                        for(let X = 0; X < G.locationSize; X++)R(G.location + X, _e / G.locationSize, Te, fe, L * Ye, (oe + _e / G.locationSize * X) * Ye, it);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let Ce = 0; Ce < G.locationSize; Ce++)b(G.location + Ce, he.meshPerAttribute);
                            U.isInstancedMesh !== !0 && H._maxInstanceCount === void 0 && (H._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let Ce = 0; Ce < G.locationSize; Ce++)y(G.location + Ce);
                        s1.bindBuffer(s1.ARRAY_BUFFER, Ee);
                        for(let Ce = 0; Ce < G.locationSize; Ce++)R(G.location + Ce, _e / G.locationSize, Te, fe, _e * Ye, _e / G.locationSize * Ce * Ye, it);
                    }
                } else if (K !== void 0) {
                    let fe = K[D];
                    if (fe !== void 0) switch(fe.length){
                        case 2:
                            s1.vertexAttrib2fv(G.location, fe);
                            break;
                        case 3:
                            s1.vertexAttrib3fv(G.location, fe);
                            break;
                        case 4:
                            s1.vertexAttrib4fv(G.location, fe);
                            break;
                        default:
                            s1.vertexAttrib1fv(G.location, fe);
                    }
                }
            }
        }
        w();
    }
    function M() {
        Y();
        for(let U in o){
            let z = o[U];
            for(let q in z){
                let H = z[q];
                for(let ne in H)m(H[ne].object), delete H[ne];
                delete z[q];
            }
            delete o[U];
        }
    }
    function T(U) {
        if (o[U.id] === void 0) return;
        let z = o[U.id];
        for(let q in z){
            let H = z[q];
            for(let ne in H)m(H[ne].object), delete H[ne];
            delete z[q];
        }
        delete o[U.id];
    }
    function O(U) {
        for(let z in o){
            let q = o[z];
            if (q[U.id] === void 0) continue;
            let H = q[U.id];
            for(let ne in H)m(H[ne].object), delete H[ne];
            delete q[U.id];
        }
    }
    function Y() {
        $(), h = !0, l !== c && (l = c, f(l.object));
    }
    function $() {
        c.geometry = null, c.program = null, c.wireframe = !1;
    }
    return {
        setup: u,
        reset: Y,
        resetDefaultState: $,
        dispose: M,
        releaseStatesOfGeometry: T,
        releaseStatesOfProgram: O,
        initAttributes: x,
        enableAttribute: y,
        disableUnusedAttributes: w
    };
}
function i_(s1, e, t, n) {
    let i = n.isWebGL2, r;
    function a(l) {
        r = l;
    }
    function o(l, h) {
        s1.drawArrays(r, l, h), t.update(h, r, 1);
    }
    function c(l, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s1, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, l, h, u), t.update(h, r, u);
    }
    this.setMode = a, this.render = o, this.renderInstances = c;
}
function s_(s1, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let R = e.get("EXT_texture_filter_anisotropic");
            n = s1.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(R) {
        if (R === "highp") {
            if (s1.getShaderPrecisionFormat(s1.VERTEX_SHADER, s1.HIGH_FLOAT).precision > 0 && s1.getShaderPrecisionFormat(s1.FRAGMENT_SHADER, s1.HIGH_FLOAT).precision > 0) return "highp";
            R = "mediump";
        }
        return R === "mediump" && s1.getShaderPrecisionFormat(s1.VERTEX_SHADER, s1.MEDIUM_FLOAT).precision > 0 && s1.getShaderPrecisionFormat(s1.FRAGMENT_SHADER, s1.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
    }
    let a = typeof WebGL2RenderingContext < "u" && s1.constructor.name === "WebGL2RenderingContext", o = t.precision !== void 0 ? t.precision : "highp", c = r(o);
    c !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", c, "instead."), o = c);
    let l = a || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s1.getParameter(s1.MAX_TEXTURE_IMAGE_UNITS), d = s1.getParameter(s1.MAX_VERTEX_TEXTURE_IMAGE_UNITS), f = s1.getParameter(s1.MAX_TEXTURE_SIZE), m = s1.getParameter(s1.MAX_CUBE_MAP_TEXTURE_SIZE), _ = s1.getParameter(s1.MAX_VERTEX_ATTRIBS), g = s1.getParameter(s1.MAX_VERTEX_UNIFORM_VECTORS), p = s1.getParameter(s1.MAX_VARYING_VECTORS), v = s1.getParameter(s1.MAX_FRAGMENT_UNIFORM_VECTORS), x = d > 0, y = a || e.has("OES_texture_float"), b = x && y, w = a ? s1.getParameter(s1.MAX_SAMPLES) : 0;
    return {
        isWebGL2: a,
        drawBuffers: l,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: o,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: _,
        maxVertexUniforms: g,
        maxVaryings: p,
        maxFragmentUniforms: v,
        vertexTextures: x,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: w
    };
}
function r_(s1) {
    let e = this, t = null, n = 0, i = !1, r = !1, a = new mn, o = new He, c = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = c, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d) {
        let f = u.length !== 0 || d || n !== 0 || i;
        return i = d, n = u.length, f;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1;
    }, this.setGlobalState = function(u, d) {
        t = h(u, d, 0);
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, _ = u.clipIntersection, g = u.clipShadows, p = s1.get(u);
        if (!i || m === null || m.length === 0 || r && !g) r ? h(null) : l();
        else {
            let v = r ? 0 : n, x = v * 4, y = p.clippingState || null;
            c.value = y, y = h(m, d, x, f);
            for(let b = 0; b !== x; ++b)y[b] = t[b];
            p.clippingState = y, this.numIntersection = _ ? this.numPlanes : 0, this.numPlanes += v;
        }
    };
    function l() {
        c.value !== t && (c.value = t, c.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let _ = u !== null ? u.length : 0, g = null;
        if (_ !== 0) {
            if (g = c.value, m !== !0 || g === null) {
                let p = f + _ * 4, v = d.matrixWorldInverse;
                o.getNormalMatrix(v), (g === null || g.length < p) && (g = new Float32Array(p));
                for(let x = 0, y = f; x !== _; ++x, y += 4)a.copy(u[x]).applyMatrix4(v, o), a.normal.toArray(g, y), g[y + 3] = a.constant;
            }
            c.value = g, c.needsUpdate = !0;
        }
        return e.numPlanes = _, e.numIntersection = 0, g;
    }
}
function a_(s1) {
    let e = new WeakMap;
    function t(a, o) {
        return o === Ir ? a.mapping = zn : o === Ur && (a.mapping = ci), a;
    }
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let o = a.mapping;
            if (o === Ir || o === Ur) if (e.has(a)) {
                let c = e.get(a).texture;
                return t(c, a.mapping);
            } else {
                let c = a.image;
                if (c && c.height > 0) {
                    let l = new xo(c.height / 2);
                    return l.fromEquirectangularTexture(s1, a), e.set(a, l), a.addEventListener("dispose", i), t(l.texture, a.mapping);
                } else return null;
            }
        }
        return a;
    }
    function i(a) {
        let o = a.target;
        o.removeEventListener("dispose", i);
        let c = e.get(o);
        c !== void 0 && (e.delete(o), c.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Ls = class extends Cs {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, a = 2e3){
        super(), this.isOrthographicCamera = !0, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = a, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, a) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = a, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, a = n + e, o = i + t, c = i - t;
        if (this.view !== null && this.view.enabled) {
            let l = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += l * this.view.offsetX, a = r + l * this.view.width, o -= h * this.view.offsetY, c = o - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, a, o, c, this.near, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
}, Hi = 4, hh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], ei = 20, $a = new Ls, uh = new pe, Ka = null, jn = (1 + Math.sqrt(5)) / 2, Li = 1 / jn, dh = [
    new A(1, 1, 1),
    new A(-1, 1, 1),
    new A(1, 1, -1),
    new A(-1, 1, -1),
    new A(0, jn, Li),
    new A(0, jn, -Li),
    new A(Li, 0, jn),
    new A(-Li, 0, jn),
    new A(jn, Li, 0),
    new A(-jn, Li, 0)
], Kr = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Ka = this._renderer.getRenderTarget(), this._setSize(256);
        let r = this._allocateTargets();
        return r.depthBuffer = !0, this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e, t = null) {
        return this._fromTexture(e, t);
    }
    fromCubemap(e, t = null) {
        return this._fromTexture(e, t);
    }
    compileCubemapShader() {
        this._cubemapMaterial === null && (this._cubemapMaterial = mh(), this._compileMaterial(this._cubemapMaterial));
    }
    compileEquirectangularShader() {
        this._equirectMaterial === null && (this._equirectMaterial = ph(), this._compileMaterial(this._equirectMaterial));
    }
    dispose() {
        this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
    }
    _setSize(e) {
        this._lodMax = Math.floor(Math.log2(e)), this._cubeSize = Math.pow(2, this._lodMax);
    }
    _dispose() {
        this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
        for(let e = 0; e < this._lodPlanes.length; e++)this._lodPlanes[e].dispose();
    }
    _cleanup(e) {
        this._renderer.setRenderTarget(Ka), e.scissorTest = !1, lr(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e, t) {
        e.mapping === zn || e.mapping === ci ? this._setSize(e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4), Ka = this._renderer.getRenderTarget();
        let n = t || this._allocateTargets();
        return this._textureToCubeUV(e, n), this._applyPMREM(n), this._cleanup(n), n;
    }
    _allocateTargets() {
        let e = 3 * Math.max(this._cubeSize, 112), t = 4 * this._cubeSize, n = {
            magFilter: mt,
            minFilter: mt,
            generateMipmaps: !1,
            type: Ts,
            format: Wt,
            colorSpace: Mn,
            depthBuffer: !1
        }, i = fh(e, t, n);
        if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== e || this._pingPongRenderTarget.height !== t) {
            this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = fh(e, t, n);
            let { _lodMax: r  } = this;
            ({ sizeLods: this._sizeLods , lodPlanes: this._lodPlanes , sigmas: this._sigmas  } = o_(r)), this._blurMaterial = c_(r, e, t);
        }
        return i;
    }
    _compileMaterial(e) {
        let t = new Mt(this._lodPlanes[0], e);
        this._renderer.compile(t, $a);
    }
    _sceneToCubeUV(e, t, n, i) {
        let o = new yt(90, 1, t, n), c = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], l = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(uh), h.toneMapping = Nn, h.autoClear = !1;
        let f = new Sn({
            name: "PMREM.Background",
            side: Ft,
            depthWrite: !1,
            depthTest: !1
        }), m = new Mt(new Ji, f), _ = !1, g = e.background;
        g ? g.isColor && (f.color.copy(g), e.background = null, _ = !0) : (f.color.copy(uh), _ = !0);
        for(let p = 0; p < 6; p++){
            let v = p % 3;
            v === 0 ? (o.up.set(0, c[p], 0), o.lookAt(l[p], 0, 0)) : v === 1 ? (o.up.set(0, 0, c[p]), o.lookAt(0, l[p], 0)) : (o.up.set(0, c[p], 0), o.lookAt(0, 0, l[p]));
            let x = this._cubeSize;
            lr(i, v * x, p > 2 ? x : 0, x, x), h.setRenderTarget(i), _ && h.render(m, o), h.render(e, o);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = g;
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === zn || e.mapping === ci;
        i ? (this._cubemapMaterial === null && (this._cubemapMaterial = mh()), this._cubemapMaterial.uniforms.flipEnvMap.value = e.isRenderTargetTexture === !1 ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = ph());
        let r = i ? this._cubemapMaterial : this._equirectMaterial, a = new Mt(this._lodPlanes[0], r), o = r.uniforms;
        o.envMap.value = e;
        let c = this._cubeSize;
        lr(t, 0, 0, 3 * c, 2 * c), n.setRenderTarget(t), n.render(a, $a);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < this._lodPlanes.length; i++){
            let r = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1]), a = dh[(i - 1) % dh.length];
            this._blur(e, i - 1, i, r, a);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let a = this._pingPongRenderTarget;
        this._halfBlur(e, a, t, n, i, "latitudinal", r), this._halfBlur(a, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, a, o) {
        let c = this._renderer, l = this._blurMaterial;
        a !== "latitudinal" && a !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new Mt(this._lodPlanes[i], l), d = l.uniforms, f = this._sizeLods[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * ei - 1), _ = r / m, g = isFinite(r) ? 1 + Math.floor(h * _) : ei;
        g > ei && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ei}`);
        let p = [], v = 0;
        for(let R = 0; R < ei; ++R){
            let I = R / _, M = Math.exp(-I * I / 2);
            p.push(M), R === 0 ? v += M : R < g && (v += 2 * M);
        }
        for(let R = 0; R < p.length; R++)p[R] = p[R] / v;
        d.envMap.value = e.texture, d.samples.value = g, d.weights.value = p, d.latitudinal.value = a === "latitudinal", o && (d.poleAxis.value = o);
        let { _lodMax: x  } = this;
        d.dTheta.value = m, d.mipInt.value = x - n;
        let y = this._sizeLods[i], b = 3 * y * (i > x - Hi ? i - x + Hi : 0), w = 4 * (this._cubeSize - y);
        lr(t, b, w, 3 * y, 2 * y), c.setRenderTarget(t), c.render(u, $a);
    }
};
function o_(s1) {
    let e = [], t = [], n = [], i = s1, r = s1 - Hi + 1 + hh.length;
    for(let a = 0; a < r; a++){
        let o = Math.pow(2, i);
        t.push(o);
        let c = 1 / o;
        a > s1 - Hi ? c = hh[a - s1 + Hi - 1] : a === 0 && (c = 0), n.push(c);
        let l = 1 / (o - 2), h = -l, u = 1 + l, d = [
            h,
            h,
            u,
            h,
            u,
            u,
            h,
            h,
            u,
            u,
            h,
            u
        ], f = 6, m = 6, _ = 3, g = 2, p = 1, v = new Float32Array(_ * m * f), x = new Float32Array(g * m * f), y = new Float32Array(p * m * f);
        for(let w = 0; w < f; w++){
            let R = w % 3 * 2 / 3 - 1, I = w > 2 ? 0 : -1, M = [
                R,
                I,
                0,
                R + 2 / 3,
                I,
                0,
                R + 2 / 3,
                I + 1,
                0,
                R,
                I,
                0,
                R + 2 / 3,
                I + 1,
                0,
                R,
                I + 1,
                0
            ];
            v.set(M, _ * m * w), x.set(d, g * m * w);
            let T = [
                w,
                w,
                w,
                w,
                w,
                w
            ];
            y.set(T, p * m * w);
        }
        let b = new Ge;
        b.setAttribute("position", new et(v, _)), b.setAttribute("uv", new et(x, g)), b.setAttribute("faceIndex", new et(y, p)), e.push(b), i > Hi && i--;
    }
    return {
        lodPlanes: e,
        sizeLods: t,
        sigmas: n
    };
}
function fh(s1, e, t) {
    let n = new qt(s1, e, t);
    return n.texture.mapping = Vs, n.texture.name = "PMREM.cubeUv", n.scissorTest = !0, n;
}
function lr(s1, e, t, n, i) {
    s1.viewport.set(e, t, n, i), s1.scissor.set(e, t, n, i);
}
function c_(s1, e, t) {
    let n = new Float32Array(ei), i = new A(0, 1, 0);
    return new jt({
        name: "SphericalGaussianBlur",
        defines: {
            n: ei,
            CUBEUV_TEXEL_WIDTH: 1 / e,
            CUBEUV_TEXEL_HEIGHT: 1 / t,
            CUBEUV_MAX_MIP: `${s1}.0`
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: n
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: i
            }
        },
        vertexShader: Zc(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: Dn,
        depthTest: !1,
        depthWrite: !1
    });
}
function ph() {
    return new jt({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            }
        },
        vertexShader: Zc(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
        blending: Dn,
        depthTest: !1,
        depthWrite: !1
    });
}
function mh() {
    return new jt({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            }
        },
        vertexShader: Zc(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
        blending: Dn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Zc() {
    return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function l_(s1) {
    let e = new WeakMap, t = null;
    function n(o) {
        if (o && o.isTexture) {
            let c = o.mapping, l = c === Ir || c === Ur, h = c === zn || c === ci;
            if (l || h) if (o.isRenderTargetTexture && o.needsPMREMUpdate === !0) {
                o.needsPMREMUpdate = !1;
                let u = e.get(o);
                return t === null && (t = new Kr(s1)), u = l ? t.fromEquirectangular(o, u) : t.fromCubemap(o, u), e.set(o, u), u.texture;
            } else {
                if (e.has(o)) return e.get(o).texture;
                {
                    let u = o.image;
                    if (l && u && u.height > 0 || h && u && i(u)) {
                        t === null && (t = new Kr(s1));
                        let d = l ? t.fromEquirectangular(o) : t.fromCubemap(o);
                        return e.set(o, d), o.addEventListener("dispose", r), d.texture;
                    } else return null;
                }
            }
        }
        return o;
    }
    function i(o) {
        let c = 0, l = 6;
        for(let h = 0; h < l; h++)o[h] !== void 0 && c++;
        return c === l;
    }
    function r(o) {
        let c = o.target;
        c.removeEventListener("dispose", r);
        let l = e.get(c);
        l !== void 0 && (e.delete(c), l.dispose());
    }
    function a() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: a
    };
}
function h_(s1) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s1.getExtension("WEBGL_depth_texture") || s1.getExtension("MOZ_WEBGL_depth_texture") || s1.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s1.getExtension("EXT_texture_filter_anisotropic") || s1.getExtension("MOZ_EXT_texture_filter_anisotropic") || s1.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s1.getExtension("WEBGL_compressed_texture_s3tc") || s1.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s1.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s1.getExtension("WEBGL_compressed_texture_pvrtc") || s1.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s1.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function u_(s1, e, t, n) {
    let i = {}, r = new WeakMap;
    function a(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        for(let m in d.morphAttributes){
            let _ = d.morphAttributes[m];
            for(let g = 0, p = _.length; g < p; g++)e.remove(_[g]);
        }
        d.removeEventListener("dispose", a), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function o(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", a), i[d.id] = !0, t.memory.geometries++), d;
    }
    function c(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], s1.ARRAY_BUFFER);
        let f = u.morphAttributes;
        for(let m in f){
            let _ = f[m];
            for(let g = 0, p = _.length; g < p; g++)e.update(_[g], s1.ARRAY_BUFFER);
        }
    }
    function l(u) {
        let d = [], f = u.index, m = u.attributes.position, _ = 0;
        if (f !== null) {
            let v = f.array;
            _ = f.version;
            for(let x = 0, y = v.length; x < y; x += 3){
                let b = v[x + 0], w = v[x + 1], R = v[x + 2];
                d.push(b, w, w, R, R, b);
            }
        } else if (m !== void 0) {
            let v = m.array;
            _ = m.version;
            for(let x = 0, y = v.length / 3 - 1; x < y; x += 3){
                let b = x + 0, w = x + 1, R = x + 2;
                d.push(b, w, w, R, R, b);
            }
        } else return;
        let g = new (Md(d) ? Jr : Zr)(d, 1);
        g.version = _;
        let p = r.get(u);
        p && e.remove(p), r.set(u, g);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && l(u);
        } else l(u);
        return r.get(u);
    }
    return {
        get: o,
        update: c,
        getWireframeAttribute: h
    };
}
function d_(s1, e, t, n) {
    let i = n.isWebGL2, r;
    function a(d) {
        r = d;
    }
    let o, c;
    function l(d) {
        o = d.type, c = d.bytesPerElement;
    }
    function h(d, f) {
        s1.drawElements(r, f, o, d * c), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let _, g;
        if (i) _ = s1, g = "drawElementsInstanced";
        else if (_ = e.get("ANGLE_instanced_arrays"), g = "drawElementsInstancedANGLE", _ === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        _[g](r, f, o, d * c, m), t.update(f, r, m);
    }
    this.setMode = a, this.setIndex = l, this.render = h, this.renderInstances = u;
}
function f_(s1) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, a, o) {
        switch(t.calls++, a){
            case s1.TRIANGLES:
                t.triangles += o * (r / 3);
                break;
            case s1.LINES:
                t.lines += o * (r / 2);
                break;
            case s1.LINE_STRIP:
                t.lines += o * (r - 1);
                break;
            case s1.LINE_LOOP:
                t.lines += o * r;
                break;
            case s1.POINTS:
                t.points += o * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", a);
                break;
        }
    }
    function i() {
        t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
function p_(s1, e) {
    return s1[0] - e[0];
}
function m_(s1, e) {
    return Math.abs(e[1]) - Math.abs(s1[1]);
}
function g_(s1, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, a = new je, o = [];
    for(let l = 0; l < 8; l++)o[l] = [
        l,
        0
    ];
    function c(l, h, u) {
        let d = l.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let f = h.morphAttributes.position || h.morphAttributes.normal || h.morphAttributes.color, m = f !== void 0 ? f.length : 0, _ = r.get(h);
            if (_ === void 0 || _.count !== m) {
                let U = function() {
                    Y.dispose(), r.delete(h), h.removeEventListener("dispose", U);
                };
                _ !== void 0 && _.texture.dispose();
                let v = h.morphAttributes.position !== void 0, x = h.morphAttributes.normal !== void 0, y = h.morphAttributes.color !== void 0, b = h.morphAttributes.position || [], w = h.morphAttributes.normal || [], R = h.morphAttributes.color || [], I = 0;
                v === !0 && (I = 1), x === !0 && (I = 2), y === !0 && (I = 3);
                let M = h.attributes.position.count * I, T = 1;
                M > e.maxTextureSize && (T = Math.ceil(M / e.maxTextureSize), M = e.maxTextureSize);
                let O = new Float32Array(M * T * 4 * m), Y = new As(O, M, T, m);
                Y.type = xn, Y.needsUpdate = !0;
                let $ = I * 4;
                for(let z = 0; z < m; z++){
                    let q = b[z], H = w[z], ne = R[z], W = M * T * 4 * z;
                    for(let K = 0; K < q.count; K++){
                        let D = K * $;
                        v === !0 && (a.fromBufferAttribute(q, K), O[W + D + 0] = a.x, O[W + D + 1] = a.y, O[W + D + 2] = a.z, O[W + D + 3] = 0), x === !0 && (a.fromBufferAttribute(H, K), O[W + D + 4] = a.x, O[W + D + 5] = a.y, O[W + D + 6] = a.z, O[W + D + 7] = 0), y === !0 && (a.fromBufferAttribute(ne, K), O[W + D + 8] = a.x, O[W + D + 9] = a.y, O[W + D + 10] = a.z, O[W + D + 11] = ne.itemSize === 4 ? a.w : 1);
                    }
                }
                _ = {
                    count: m,
                    texture: Y,
                    size: new Z(M, T)
                }, r.set(h, _), h.addEventListener("dispose", U);
            }
            let g = 0;
            for(let v = 0; v < d.length; v++)g += d[v];
            let p = h.morphTargetsRelative ? 1 : 1 - g;
            u.getUniforms().setValue(s1, "morphTargetBaseInfluence", p), u.getUniforms().setValue(s1, "morphTargetInfluences", d), u.getUniforms().setValue(s1, "morphTargetsTexture", _.texture, t), u.getUniforms().setValue(s1, "morphTargetsTextureSize", _.size);
        } else {
            let f = d === void 0 ? 0 : d.length, m = n[h.id];
            if (m === void 0 || m.length !== f) {
                m = [];
                for(let x = 0; x < f; x++)m[x] = [
                    x,
                    0
                ];
                n[h.id] = m;
            }
            for(let x = 0; x < f; x++){
                let y = m[x];
                y[0] = x, y[1] = d[x];
            }
            m.sort(m_);
            for(let x = 0; x < 8; x++)x < f && m[x][1] ? (o[x][0] = m[x][0], o[x][1] = m[x][1]) : (o[x][0] = Number.MAX_SAFE_INTEGER, o[x][1] = 0);
            o.sort(p_);
            let _ = h.morphAttributes.position, g = h.morphAttributes.normal, p = 0;
            for(let x = 0; x < 8; x++){
                let y = o[x], b = y[0], w = y[1];
                b !== Number.MAX_SAFE_INTEGER && w ? (_ && h.getAttribute("morphTarget" + x) !== _[b] && h.setAttribute("morphTarget" + x, _[b]), g && h.getAttribute("morphNormal" + x) !== g[b] && h.setAttribute("morphNormal" + x, g[b]), i[x] = w, p += w) : (_ && h.hasAttribute("morphTarget" + x) === !0 && h.deleteAttribute("morphTarget" + x), g && h.hasAttribute("morphNormal" + x) === !0 && h.deleteAttribute("morphNormal" + x), i[x] = 0);
            }
            let v = h.morphTargetsRelative ? 1 : 1 - p;
            u.getUniforms().setValue(s1, "morphTargetBaseInfluence", v), u.getUniforms().setValue(s1, "morphTargetInfluences", i);
        }
    }
    return {
        update: c
    };
}
function __(s1, e, t, n) {
    let i = new WeakMap;
    function r(c) {
        let l = n.render.frame, h = c.geometry, u = e.get(c, h);
        if (i.get(u) !== l && (e.update(u), i.set(u, l)), c.isInstancedMesh && (c.hasEventListener("dispose", o) === !1 && c.addEventListener("dispose", o), i.get(c) !== l && (t.update(c.instanceMatrix, s1.ARRAY_BUFFER), c.instanceColor !== null && t.update(c.instanceColor, s1.ARRAY_BUFFER), i.set(c, l))), c.isSkinnedMesh) {
            let d = c.skeleton;
            i.get(d) !== l && (d.update(), i.set(d, l));
        }
        return u;
    }
    function a() {
        i = new WeakMap;
    }
    function o(c) {
        let l = c.target;
        l.removeEventListener("dispose", o), t.remove(l.instanceMatrix), l.instanceColor !== null && t.remove(l.instanceColor);
    }
    return {
        update: r,
        dispose: a
    };
}
var Td = new St, wd = new As, Ad = new qr, Rd = new Ki, gh = [], _h = [], xh = new Float32Array(16), vh = new Float32Array(9), yh = new Float32Array(4);
function as(s1, e, t) {
    let n = s1[0];
    if (n <= 0 || n > 0) return s1;
    let i = e * t, r = gh[i];
    if (r === void 0 && (r = new Float32Array(i), gh[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let a = 1, o = 0; a !== e; ++a)o += t, s1[a].toArray(r, o);
    }
    return r;
}
function gt(s1, e) {
    if (s1.length !== e.length) return !1;
    for(let t = 0, n = s1.length; t < n; t++)if (s1[t] !== e[t]) return !1;
    return !0;
}
function _t(s1, e) {
    for(let t = 0, n = e.length; t < n; t++)s1[t] = e[t];
}
function ya(s1, e) {
    let t = _h[e];
    t === void 0 && (t = new Int32Array(e), _h[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s1.allocateTextureUnit();
    return t;
}
function x_(s1, e) {
    let t = this.cache;
    t[0] !== e && (s1.uniform1f(this.addr, e), t[0] = e);
}
function v_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s1.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (gt(t, e)) return;
        s1.uniform2fv(this.addr, e), _t(t, e);
    }
}
function y_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s1.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s1.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (gt(t, e)) return;
        s1.uniform3fv(this.addr, e), _t(t, e);
    }
}
function M_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s1.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (gt(t, e)) return;
        s1.uniform4fv(this.addr, e), _t(t, e);
    }
}
function S_(s1, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (gt(t, e)) return;
        s1.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (gt(t, n)) return;
        yh.set(n), s1.uniformMatrix2fv(this.addr, !1, yh), _t(t, n);
    }
}
function b_(s1, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (gt(t, e)) return;
        s1.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (gt(t, n)) return;
        vh.set(n), s1.uniformMatrix3fv(this.addr, !1, vh), _t(t, n);
    }
}
function E_(s1, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (gt(t, e)) return;
        s1.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (gt(t, n)) return;
        xh.set(n), s1.uniformMatrix4fv(this.addr, !1, xh), _t(t, n);
    }
}
function T_(s1, e) {
    let t = this.cache;
    t[0] !== e && (s1.uniform1i(this.addr, e), t[0] = e);
}
function w_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s1.uniform2i(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (gt(t, e)) return;
        s1.uniform2iv(this.addr, e), _t(t, e);
    }
}
function A_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s1.uniform3i(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else {
        if (gt(t, e)) return;
        s1.uniform3iv(this.addr, e), _t(t, e);
    }
}
function R_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s1.uniform4i(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (gt(t, e)) return;
        s1.uniform4iv(this.addr, e), _t(t, e);
    }
}
function C_(s1, e) {
    let t = this.cache;
    t[0] !== e && (s1.uniform1ui(this.addr, e), t[0] = e);
}
function P_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s1.uniform2ui(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (gt(t, e)) return;
        s1.uniform2uiv(this.addr, e), _t(t, e);
    }
}
function L_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s1.uniform3ui(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else {
        if (gt(t, e)) return;
        s1.uniform3uiv(this.addr, e), _t(t, e);
    }
}
function I_(s1, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s1.uniform4ui(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (gt(t, e)) return;
        s1.uniform4uiv(this.addr, e), _t(t, e);
    }
}
function U_(s1, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s1.uniform1i(this.addr, i), n[0] = i), t.setTexture2D(e || Td, i);
}
function D_(s1, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s1.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || Ad, i);
}
function N_(s1, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s1.uniform1i(this.addr, i), n[0] = i), t.setTextureCube(e || Rd, i);
}
function O_(s1, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s1.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || wd, i);
}
function F_(s1) {
    switch(s1){
        case 5126:
            return x_;
        case 35664:
            return v_;
        case 35665:
            return y_;
        case 35666:
            return M_;
        case 35674:
            return S_;
        case 35675:
            return b_;
        case 35676:
            return E_;
        case 5124:
        case 35670:
            return T_;
        case 35667:
        case 35671:
            return w_;
        case 35668:
        case 35672:
            return A_;
        case 35669:
        case 35673:
            return R_;
        case 5125:
            return C_;
        case 36294:
            return P_;
        case 36295:
            return L_;
        case 36296:
            return I_;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return U_;
        case 35679:
        case 36299:
        case 36307:
            return D_;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return N_;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return O_;
    }
}
function B_(s1, e) {
    s1.uniform1fv(this.addr, e);
}
function z_(s1, e) {
    let t = as(e, this.size, 2);
    s1.uniform2fv(this.addr, t);
}
function V_(s1, e) {
    let t = as(e, this.size, 3);
    s1.uniform3fv(this.addr, t);
}
function k_(s1, e) {
    let t = as(e, this.size, 4);
    s1.uniform4fv(this.addr, t);
}
function H_(s1, e) {
    let t = as(e, this.size, 4);
    s1.uniformMatrix2fv(this.addr, !1, t);
}
function G_(s1, e) {
    let t = as(e, this.size, 9);
    s1.uniformMatrix3fv(this.addr, !1, t);
}
function W_(s1, e) {
    let t = as(e, this.size, 16);
    s1.uniformMatrix4fv(this.addr, !1, t);
}
function X_(s1, e) {
    s1.uniform1iv(this.addr, e);
}
function q_(s1, e) {
    s1.uniform2iv(this.addr, e);
}
function Y_(s1, e) {
    s1.uniform3iv(this.addr, e);
}
function Z_(s1, e) {
    s1.uniform4iv(this.addr, e);
}
function J_(s1, e) {
    s1.uniform1uiv(this.addr, e);
}
function $_(s1, e) {
    s1.uniform2uiv(this.addr, e);
}
function K_(s1, e) {
    s1.uniform3uiv(this.addr, e);
}
function Q_(s1, e) {
    s1.uniform4uiv(this.addr, e);
}
function j_(s1, e, t) {
    let n = this.cache, i = e.length, r = ya(t, i);
    gt(n, r) || (s1.uniform1iv(this.addr, r), _t(n, r));
    for(let a = 0; a !== i; ++a)t.setTexture2D(e[a] || Td, r[a]);
}
function e0(s1, e, t) {
    let n = this.cache, i = e.length, r = ya(t, i);
    gt(n, r) || (s1.uniform1iv(this.addr, r), _t(n, r));
    for(let a = 0; a !== i; ++a)t.setTexture3D(e[a] || Ad, r[a]);
}
function t0(s1, e, t) {
    let n = this.cache, i = e.length, r = ya(t, i);
    gt(n, r) || (s1.uniform1iv(this.addr, r), _t(n, r));
    for(let a = 0; a !== i; ++a)t.setTextureCube(e[a] || Rd, r[a]);
}
function n0(s1, e, t) {
    let n = this.cache, i = e.length, r = ya(t, i);
    gt(n, r) || (s1.uniform1iv(this.addr, r), _t(n, r));
    for(let a = 0; a !== i; ++a)t.setTexture2DArray(e[a] || wd, r[a]);
}
function i0(s1) {
    switch(s1){
        case 5126:
            return B_;
        case 35664:
            return z_;
        case 35665:
            return V_;
        case 35666:
            return k_;
        case 35674:
            return H_;
        case 35675:
            return G_;
        case 35676:
            return W_;
        case 5124:
        case 35670:
            return X_;
        case 35667:
        case 35671:
            return q_;
        case 35668:
        case 35672:
            return Y_;
        case 35669:
        case 35673:
            return Z_;
        case 5125:
            return J_;
        case 36294:
            return $_;
        case 36295:
            return K_;
        case 36296:
            return Q_;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return j_;
        case 35679:
        case 36299:
        case 36307:
            return e0;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return t0;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return n0;
    }
}
var vo = class {
    constructor(e, t, n){
        this.id = e, this.addr = n, this.cache = [], this.setValue = F_(t.type);
    }
}, yo = class {
    constructor(e, t, n){
        this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = i0(t.type);
    }
}, Mo = class {
    constructor(e){
        this.id = e, this.seq = [], this.map = {};
    }
    setValue(e, t, n) {
        let i = this.seq;
        for(let r = 0, a = i.length; r !== a; ++r){
            let o = i[r];
            o.setValue(e, t[o.id], n);
        }
    }
}, Qa = /(\w+)(\])?(\[|\.)?/g;
function Mh(s1, e) {
    s1.seq.push(e), s1.map[e.id] = e;
}
function s0(s1, e, t) {
    let n = s1.name, i = n.length;
    for(Qa.lastIndex = 0;;){
        let r = Qa.exec(n), a = Qa.lastIndex, o = r[1], c = r[2] === "]", l = r[3];
        if (c && (o = o | 0), l === void 0 || l === "[" && a + 2 === i) {
            Mh(t, l === void 0 ? new vo(o, s1, e) : new yo(o, s1, e));
            break;
        } else {
            let u = t.map[o];
            u === void 0 && (u = new Mo(o), Mh(t, u)), t = u;
        }
    }
}
var qi = class {
    constructor(e, t){
        this.seq = [], this.map = {};
        let n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
        for(let i = 0; i < n; ++i){
            let r = e.getActiveUniform(t, i), a = e.getUniformLocation(t, r.name);
            s0(r, a, this);
        }
    }
    setValue(e, t, n, i) {
        let r = this.map[t];
        r !== void 0 && r.setValue(e, n, i);
    }
    setOptional(e, t, n) {
        let i = t[n];
        i !== void 0 && this.setValue(e, n, i);
    }
    static upload(e, t, n, i) {
        for(let r = 0, a = t.length; r !== a; ++r){
            let o = t[r], c = n[o.id];
            c.needsUpdate !== !1 && o.setValue(e, c.value, i);
        }
    }
    static seqWithValue(e, t) {
        let n = [];
        for(let i = 0, r = e.length; i !== r; ++i){
            let a = e[i];
            a.id in t && n.push(a);
        }
        return n;
    }
};
function Sh(s1, e, t) {
    let n = s1.createShader(e);
    return s1.shaderSource(n, t), s1.compileShader(n), n;
}
var r0 = 0;
function a0(s1, e) {
    let t = s1.split(`
`), n = [], i = Math.max(e - 6, 0), r = Math.min(e + 6, t.length);
    for(let a = i; a < r; a++){
        let o = a + 1;
        n.push(`${o === e ? ">" : " "} ${o}: ${t[a]}`);
    }
    return n.join(`
`);
}
function o0(s1) {
    let e = Qe.getPrimaries(Qe.workingColorSpace), t = Qe.getPrimaries(s1), n;
    switch(e === t ? n = "" : e === kr && t === Vr ? n = "LinearDisplayP3ToLinearSRGB" : e === Vr && t === kr && (n = "LinearSRGBToLinearDisplayP3"), s1){
        case Mn:
        case va:
            return [
                n,
                "LinearTransferOETF"
            ];
        case vt:
        case qc:
            return [
                n,
                "sRGBTransferOETF"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported color space:", s1), [
                n,
                "LinearTransferOETF"
            ];
    }
}
function bh(s1, e, t) {
    let n = s1.getShaderParameter(e, s1.COMPILE_STATUS), i = s1.getShaderInfoLog(e).trim();
    if (n && i === "") return "";
    let r = /ERROR: 0:(\d+)/.exec(i);
    if (r) {
        let a = parseInt(r[1]);
        return t.toUpperCase() + `

` + i + `

` + a0(s1.getShaderSource(e), a);
    } else return i;
}
function c0(s1, e) {
    let t = o0(e);
    return `vec4 ${s1}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`;
}
function l0(s1, e) {
    let t;
    switch(e){
        case df:
            t = "Linear";
            break;
        case ff:
            t = "Reinhard";
            break;
        case pf:
            t = "OptimizedCineon";
            break;
        case mf:
            t = "ACESFilmic";
            break;
        case gf:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s1 + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function h0(s1) {
    return [
        s1.extensionDerivatives || s1.envMapCubeUVHeight || s1.bumpMap || s1.normalMapTangentSpace || s1.clearcoatNormalMap || s1.flatShading || s1.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s1.extensionFragDepth || s1.logarithmicDepthBuffer) && s1.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s1.extensionDrawBuffers && s1.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s1.extensionShaderTextureLOD || s1.envMap || s1.transmission) && s1.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(vs).join(`
`);
}
function u0(s1) {
    let e = [];
    for(let t in s1){
        let n = s1[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function d0(s1, e) {
    let t = {}, n = s1.getProgramParameter(e, s1.ACTIVE_ATTRIBUTES);
    for(let i = 0; i < n; i++){
        let r = s1.getActiveAttrib(e, i), a = r.name, o = 1;
        r.type === s1.FLOAT_MAT2 && (o = 2), r.type === s1.FLOAT_MAT3 && (o = 3), r.type === s1.FLOAT_MAT4 && (o = 4), t[a] = {
            type: r.type,
            location: s1.getAttribLocation(e, a),
            locationSize: o
        };
    }
    return t;
}
function vs(s1) {
    return s1 !== "";
}
function Eh(s1, e) {
    let t = e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
    return s1.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, t).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function Th(s1, e) {
    return s1.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var f0 = /^[ \t]*#include +<([\w\d./]+)>/gm;
function So(s1) {
    return s1.replace(f0, m0);
}
var p0 = new Map([
    [
        "encodings_fragment",
        "colorspace_fragment"
    ],
    [
        "encodings_pars_fragment",
        "colorspace_pars_fragment"
    ],
    [
        "output_fragment",
        "opaque_fragment"
    ]
]);
function m0(s1, e) {
    let t = ke[e];
    if (t === void 0) {
        let n = p0.get(e);
        if (n !== void 0) t = ke[n], console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.', e, n);
        else throw new Error("Can not resolve #include <" + e + ">");
    }
    return So(t);
}
var g0 = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function wh(s1) {
    return s1.replace(g0, _0);
}
function _0(s1, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Ah(s1) {
    let e = "precision " + s1.precision + ` float;
precision ` + s1.precision + " int;";
    return s1.precision === "highp" ? e += `
#define HIGH_PRECISION` : s1.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s1.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function x0(s1) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s1.shadowMapType === cd ? e = "SHADOWMAP_TYPE_PCF" : s1.shadowMapType === Gd ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s1.shadowMapType === pn && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function v0(s1) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s1.envMap) switch(s1.envMapMode){
        case zn:
        case ci:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Vs:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function y0(s1) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s1.envMap) switch(s1.envMapMode){
        case ci:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function M0(s1) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s1.envMap) switch(s1.combine){
        case xa:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case hf:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case uf:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function S0(s1) {
    let e = s1.envMapCubeUVHeight;
    if (e === null) return null;
    let t = Math.log2(e) - 2, n = 1 / e;
    return {
        texelWidth: 1 / (3 * Math.max(Math.pow(2, t), 7 * 16)),
        texelHeight: n,
        maxMip: t
    };
}
function b0(s1, e, t, n) {
    let i = s1.getContext(), r = t.defines, a = t.vertexShader, o = t.fragmentShader, c = x0(t), l = v0(t), h = y0(t), u = M0(t), d = S0(t), f = t.isWebGL2 ? "" : h0(t), m = u0(r), _ = i.createProgram(), g, p, v = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (g = [
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        m
    ].filter(vs).join(`
`), g.length > 0 && (g += `
`), p = [
        f,
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        m
    ].filter(vs).join(`
`), p.length > 0 && (p += `
`)) : (g = [
        Ah(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        m,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropy ? "#define USE_ANISOTROPY" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.mapUv ? "#define MAP_UV " + t.mapUv : "",
        t.alphaMapUv ? "#define ALPHAMAP_UV " + t.alphaMapUv : "",
        t.lightMapUv ? "#define LIGHTMAP_UV " + t.lightMapUv : "",
        t.aoMapUv ? "#define AOMAP_UV " + t.aoMapUv : "",
        t.emissiveMapUv ? "#define EMISSIVEMAP_UV " + t.emissiveMapUv : "",
        t.bumpMapUv ? "#define BUMPMAP_UV " + t.bumpMapUv : "",
        t.normalMapUv ? "#define NORMALMAP_UV " + t.normalMapUv : "",
        t.displacementMapUv ? "#define DISPLACEMENTMAP_UV " + t.displacementMapUv : "",
        t.metalnessMapUv ? "#define METALNESSMAP_UV " + t.metalnessMapUv : "",
        t.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + t.roughnessMapUv : "",
        t.anisotropyMapUv ? "#define ANISOTROPYMAP_UV " + t.anisotropyMapUv : "",
        t.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + t.clearcoatMapUv : "",
        t.clearcoatNormalMapUv ? "#define CLEARCOAT_NORMALMAP_UV " + t.clearcoatNormalMapUv : "",
        t.clearcoatRoughnessMapUv ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + t.clearcoatRoughnessMapUv : "",
        t.iridescenceMapUv ? "#define IRIDESCENCEMAP_UV " + t.iridescenceMapUv : "",
        t.iridescenceThicknessMapUv ? "#define IRIDESCENCE_THICKNESSMAP_UV " + t.iridescenceThicknessMapUv : "",
        t.sheenColorMapUv ? "#define SHEEN_COLORMAP_UV " + t.sheenColorMapUv : "",
        t.sheenRoughnessMapUv ? "#define SHEEN_ROUGHNESSMAP_UV " + t.sheenRoughnessMapUv : "",
        t.specularMapUv ? "#define SPECULARMAP_UV " + t.specularMapUv : "",
        t.specularColorMapUv ? "#define SPECULAR_COLORMAP_UV " + t.specularColorMapUv : "",
        t.specularIntensityMapUv ? "#define SPECULAR_INTENSITYMAP_UV " + t.specularIntensityMapUv : "",
        t.transmissionMapUv ? "#define TRANSMISSIONMAP_UV " + t.transmissionMapUv : "",
        t.thicknessMapUv ? "#define THICKNESSMAP_UV " + t.thicknessMapUv : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphColors && t.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
        t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + t.morphTextureStride : "",
        t.morphTargetsCount > 0 && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + c : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_UV1",
        "	attribute vec2 uv1;",
        "#endif",
        "#ifdef USE_UV2",
        "	attribute vec2 uv2;",
        "#endif",
        "#ifdef USE_UV3",
        "	attribute vec2 uv3;",
        "#endif",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(vs).join(`
`), p = [
        f,
        Ah(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        m,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + l : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        d ? "#define CUBEUV_TEXEL_WIDTH " + d.texelWidth : "",
        d ? "#define CUBEUV_TEXEL_HEIGHT " + d.texelHeight : "",
        d ? "#define CUBEUV_MAX_MIP " + d.maxMip + ".0" : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropy ? "#define USE_ANISOTROPY" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescence ? "#define USE_IRIDESCENCE" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + c : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== Nn ? "#define TONE_MAPPING" : "",
        t.toneMapping !== Nn ? ke.tonemapping_pars_fragment : "",
        t.toneMapping !== Nn ? l0("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.opaque ? "#define OPAQUE" : "",
        ke.colorspace_pars_fragment,
        c0("linearToOutputTexel", t.outputColorSpace),
        t.useDepthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(vs).join(`
`)), a = So(a), a = Eh(a, t), a = Th(a, t), o = So(o), o = Eh(o, t), o = Th(o, t), a = wh(a), o = wh(o), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (v = `#version 300 es
`, g = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + g, p = [
        "#define varying in",
        t.glslVersion === Ol ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === Ol ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + p);
    let x = v + g + a, y = v + p + o, b = Sh(i, i.VERTEX_SHADER, x), w = Sh(i, i.FRAGMENT_SHADER, y);
    if (i.attachShader(_, b), i.attachShader(_, w), t.index0AttributeName !== void 0 ? i.bindAttribLocation(_, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(_, 0, "position"), i.linkProgram(_), s1.debug.checkShaderErrors) {
        let M = i.getProgramInfoLog(_).trim(), T = i.getShaderInfoLog(b).trim(), O = i.getShaderInfoLog(w).trim(), Y = !0, $ = !0;
        if (i.getProgramParameter(_, i.LINK_STATUS) === !1) if (Y = !1, typeof s1.debug.onShaderError == "function") s1.debug.onShaderError(i, _, b, w);
        else {
            let U = bh(i, b, "vertex"), z = bh(i, w, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(_, i.VALIDATE_STATUS) + `

Program Info Log: ` + M + `
` + U + `
` + z);
        }
        else M !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", M) : (T === "" || O === "") && ($ = !1);
        $ && (this.diagnostics = {
            runnable: Y,
            programLog: M,
            vertexShader: {
                log: T,
                prefix: g
            },
            fragmentShader: {
                log: O,
                prefix: p
            }
        });
    }
    i.deleteShader(b), i.deleteShader(w);
    let R;
    this.getUniforms = function() {
        return R === void 0 && (R = new qi(i, _)), R;
    };
    let I;
    return this.getAttributes = function() {
        return I === void 0 && (I = d0(i, _)), I;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(_), this.program = void 0;
    }, this.type = t.shaderType, this.name = t.shaderName, this.id = r0++, this.cacheKey = e, this.usedTimes = 1, this.program = _, this.vertexShader = b, this.fragmentShader = w, this;
}
var E0 = 0, bo = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), a = this._getShaderCacheForMaterial(e);
        return a.has(i) === !1 && (a.add(i), i.usedTimes++), a.has(r) === !1 && (a.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n.code);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache, n = t.get(e);
        return n === void 0 && (n = new Set, t.set(e, n)), n;
    }
    _getShaderStage(e) {
        let t = this.shaderCache, n = t.get(e);
        return n === void 0 && (n = new Eo(e), t.set(e, n)), n;
    }
}, Eo = class {
    constructor(e){
        this.id = E0++, this.code = e, this.usedTimes = 0;
    }
};
function T0(s1, e, t, n, i, r, a) {
    let o = new Rs, c = new bo, l = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.vertexTextures, f = i.precision, m = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function _(M) {
        return M === 0 ? "uv" : `uv${M}`;
    }
    function g(M, T, O, Y, $) {
        let U = Y.fog, z = $.geometry, q = M.isMeshStandardMaterial ? Y.environment : null, H = (M.isMeshStandardMaterial ? t : e).get(M.envMap || q), ne = H && H.mapping === Vs ? H.image.height : null, W = m[M.type];
        M.precision !== null && (f = i.getMaxPrecision(M.precision), f !== M.precision && console.warn("THREE.WebGLProgram.getParameters:", M.precision, "not supported, using", f, "instead."));
        let K = z.morphAttributes.position || z.morphAttributes.normal || z.morphAttributes.color, D = K !== void 0 ? K.length : 0, G = 0;
        z.morphAttributes.position !== void 0 && (G = 1), z.morphAttributes.normal !== void 0 && (G = 2), z.morphAttributes.color !== void 0 && (G = 3);
        let he, fe, _e, we;
        if (W) {
            let tt = nn[W];
            he = tt.vertexShader, fe = tt.fragmentShader;
        } else he = M.vertexShader, fe = M.fragmentShader, c.update(M), _e = c.getVertexShaderID(M), we = c.getFragmentShaderID(M);
        let Ee = s1.getRenderTarget(), Te = $.isInstancedMesh === !0, Ye = !!M.map, it = !!M.matcap, Ce = !!H, L = !!M.aoMap, oe = !!M.lightMap, X = !!M.bumpMap, ie = !!M.normalMap, J = !!M.displacementMap, Se = !!M.emissiveMap, me = !!M.metalnessMap, ye = !!M.roughnessMap, Ne = M.anisotropy > 0, qe = M.clearcoat > 0, rt = M.iridescence > 0, C = M.sheen > 0, S = M.transmission > 0, B = Ne && !!M.anisotropyMap, ee = qe && !!M.clearcoatMap, j = qe && !!M.clearcoatNormalMap, te = qe && !!M.clearcoatRoughnessMap, Me = rt && !!M.iridescenceMap, re = rt && !!M.iridescenceThicknessMap, de = C && !!M.sheenColorMap, Le = C && !!M.sheenRoughnessMap, Ze = !!M.specularMap, se = !!M.specularColorMap, $e = !!M.specularIntensityMap, Oe = S && !!M.transmissionMap, Ie = S && !!M.thicknessMap, Re = !!M.gradientMap, P = !!M.alphaMap, ce = M.alphaTest > 0, ae = !!M.alphaHash, ge = !!M.extensions, ue = !!z.attributes.uv1, Q = !!z.attributes.uv2, be = !!z.attributes.uv3, Fe = Nn;
        return M.toneMapped && (Ee === null || Ee.isXRRenderTarget === !0) && (Fe = s1.toneMapping), {
            isWebGL2: h,
            shaderID: W,
            shaderType: M.type,
            shaderName: M.name,
            vertexShader: he,
            fragmentShader: fe,
            defines: M.defines,
            customVertexShaderID: _e,
            customFragmentShaderID: we,
            isRawShaderMaterial: M.isRawShaderMaterial === !0,
            glslVersion: M.glslVersion,
            precision: f,
            instancing: Te,
            instancingColor: Te && $.instanceColor !== null,
            supportsVertexTextures: d,
            outputColorSpace: Ee === null ? s1.outputColorSpace : Ee.isXRRenderTarget === !0 ? Ee.texture.colorSpace : Mn,
            map: Ye,
            matcap: it,
            envMap: Ce,
            envMapMode: Ce && H.mapping,
            envMapCubeUVHeight: ne,
            aoMap: L,
            lightMap: oe,
            bumpMap: X,
            normalMap: ie,
            displacementMap: d && J,
            emissiveMap: Se,
            normalMapObjectSpace: ie && M.normalMapType === Lf,
            normalMapTangentSpace: ie && M.normalMapType === mi,
            metalnessMap: me,
            roughnessMap: ye,
            anisotropy: Ne,
            anisotropyMap: B,
            clearcoat: qe,
            clearcoatMap: ee,
            clearcoatNormalMap: j,
            clearcoatRoughnessMap: te,
            iridescence: rt,
            iridescenceMap: Me,
            iridescenceThicknessMap: re,
            sheen: C,
            sheenColorMap: de,
            sheenRoughnessMap: Le,
            specularMap: Ze,
            specularColorMap: se,
            specularIntensityMap: $e,
            transmission: S,
            transmissionMap: Oe,
            thicknessMap: Ie,
            gradientMap: Re,
            opaque: M.transparent === !1 && M.blending === Wi,
            alphaMap: P,
            alphaTest: ce,
            alphaHash: ae,
            combine: M.combine,
            mapUv: Ye && _(M.map.channel),
            aoMapUv: L && _(M.aoMap.channel),
            lightMapUv: oe && _(M.lightMap.channel),
            bumpMapUv: X && _(M.bumpMap.channel),
            normalMapUv: ie && _(M.normalMap.channel),
            displacementMapUv: J && _(M.displacementMap.channel),
            emissiveMapUv: Se && _(M.emissiveMap.channel),
            metalnessMapUv: me && _(M.metalnessMap.channel),
            roughnessMapUv: ye && _(M.roughnessMap.channel),
            anisotropyMapUv: B && _(M.anisotropyMap.channel),
            clearcoatMapUv: ee && _(M.clearcoatMap.channel),
            clearcoatNormalMapUv: j && _(M.clearcoatNormalMap.channel),
            clearcoatRoughnessMapUv: te && _(M.clearcoatRoughnessMap.channel),
            iridescenceMapUv: Me && _(M.iridescenceMap.channel),
            iridescenceThicknessMapUv: re && _(M.iridescenceThicknessMap.channel),
            sheenColorMapUv: de && _(M.sheenColorMap.channel),
            sheenRoughnessMapUv: Le && _(M.sheenRoughnessMap.channel),
            specularMapUv: Ze && _(M.specularMap.channel),
            specularColorMapUv: se && _(M.specularColorMap.channel),
            specularIntensityMapUv: $e && _(M.specularIntensityMap.channel),
            transmissionMapUv: Oe && _(M.transmissionMap.channel),
            thicknessMapUv: Ie && _(M.thicknessMap.channel),
            alphaMapUv: P && _(M.alphaMap.channel),
            vertexTangents: !!z.attributes.tangent && (ie || Ne),
            vertexColors: M.vertexColors,
            vertexAlphas: M.vertexColors === !0 && !!z.attributes.color && z.attributes.color.itemSize === 4,
            vertexUv1s: ue,
            vertexUv2s: Q,
            vertexUv3s: be,
            pointsUvs: $.isPoints === !0 && !!z.attributes.uv && (Ye || P),
            fog: !!U,
            useFog: M.fog === !0,
            fogExp2: U && U.isFogExp2,
            flatShading: M.flatShading === !0,
            sizeAttenuation: M.sizeAttenuation === !0,
            logarithmicDepthBuffer: u,
            skinning: $.isSkinnedMesh === !0,
            morphTargets: z.morphAttributes.position !== void 0,
            morphNormals: z.morphAttributes.normal !== void 0,
            morphColors: z.morphAttributes.color !== void 0,
            morphTargetsCount: D,
            morphTextureStride: G,
            numDirLights: T.directional.length,
            numPointLights: T.point.length,
            numSpotLights: T.spot.length,
            numSpotLightMaps: T.spotLightMap.length,
            numRectAreaLights: T.rectArea.length,
            numHemiLights: T.hemi.length,
            numDirLightShadows: T.directionalShadowMap.length,
            numPointLightShadows: T.pointShadowMap.length,
            numSpotLightShadows: T.spotShadowMap.length,
            numSpotLightShadowsWithMaps: T.numSpotLightShadowsWithMaps,
            numLightProbes: T.numLightProbes,
            numClippingPlanes: a.numPlanes,
            numClipIntersection: a.numIntersection,
            dithering: M.dithering,
            shadowMapEnabled: s1.shadowMap.enabled && O.length > 0,
            shadowMapType: s1.shadowMap.type,
            toneMapping: Fe,
            useLegacyLights: s1._useLegacyLights,
            decodeVideoTexture: Ye && M.map.isVideoTexture === !0 && Qe.getTransfer(M.map.colorSpace) === nt,
            premultipliedAlpha: M.premultipliedAlpha,
            doubleSided: M.side === gn,
            flipSided: M.side === Ft,
            useDepthPacking: M.depthPacking >= 0,
            depthPacking: M.depthPacking || 0,
            index0AttributeName: M.index0AttributeName,
            extensionDerivatives: ge && M.extensions.derivatives === !0,
            extensionFragDepth: ge && M.extensions.fragDepth === !0,
            extensionDrawBuffers: ge && M.extensions.drawBuffers === !0,
            extensionShaderTextureLOD: ge && M.extensions.shaderTextureLOD === !0,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: M.customProgramCacheKey()
        };
    }
    function p(M) {
        let T = [];
        if (M.shaderID ? T.push(M.shaderID) : (T.push(M.customVertexShaderID), T.push(M.customFragmentShaderID)), M.defines !== void 0) for(let O in M.defines)T.push(O), T.push(M.defines[O]);
        return M.isRawShaderMaterial === !1 && (v(T, M), x(T, M), T.push(s1.outputColorSpace)), T.push(M.customProgramCacheKey), T.join();
    }
    function v(M, T) {
        M.push(T.precision), M.push(T.outputColorSpace), M.push(T.envMapMode), M.push(T.envMapCubeUVHeight), M.push(T.mapUv), M.push(T.alphaMapUv), M.push(T.lightMapUv), M.push(T.aoMapUv), M.push(T.bumpMapUv), M.push(T.normalMapUv), M.push(T.displacementMapUv), M.push(T.emissiveMapUv), M.push(T.metalnessMapUv), M.push(T.roughnessMapUv), M.push(T.anisotropyMapUv), M.push(T.clearcoatMapUv), M.push(T.clearcoatNormalMapUv), M.push(T.clearcoatRoughnessMapUv), M.push(T.iridescenceMapUv), M.push(T.iridescenceThicknessMapUv), M.push(T.sheenColorMapUv), M.push(T.sheenRoughnessMapUv), M.push(T.specularMapUv), M.push(T.specularColorMapUv), M.push(T.specularIntensityMapUv), M.push(T.transmissionMapUv), M.push(T.thicknessMapUv), M.push(T.combine), M.push(T.fogExp2), M.push(T.sizeAttenuation), M.push(T.morphTargetsCount), M.push(T.morphAttributeCount), M.push(T.numDirLights), M.push(T.numPointLights), M.push(T.numSpotLights), M.push(T.numSpotLightMaps), M.push(T.numHemiLights), M.push(T.numRectAreaLights), M.push(T.numDirLightShadows), M.push(T.numPointLightShadows), M.push(T.numSpotLightShadows), M.push(T.numSpotLightShadowsWithMaps), M.push(T.numLightProbes), M.push(T.shadowMapType), M.push(T.toneMapping), M.push(T.numClippingPlanes), M.push(T.numClipIntersection), M.push(T.depthPacking);
    }
    function x(M, T) {
        o.disableAll(), T.isWebGL2 && o.enable(0), T.supportsVertexTextures && o.enable(1), T.instancing && o.enable(2), T.instancingColor && o.enable(3), T.matcap && o.enable(4), T.envMap && o.enable(5), T.normalMapObjectSpace && o.enable(6), T.normalMapTangentSpace && o.enable(7), T.clearcoat && o.enable(8), T.iridescence && o.enable(9), T.alphaTest && o.enable(10), T.vertexColors && o.enable(11), T.vertexAlphas && o.enable(12), T.vertexUv1s && o.enable(13), T.vertexUv2s && o.enable(14), T.vertexUv3s && o.enable(15), T.vertexTangents && o.enable(16), T.anisotropy && o.enable(17), M.push(o.mask), o.disableAll(), T.fog && o.enable(0), T.useFog && o.enable(1), T.flatShading && o.enable(2), T.logarithmicDepthBuffer && o.enable(3), T.skinning && o.enable(4), T.morphTargets && o.enable(5), T.morphNormals && o.enable(6), T.morphColors && o.enable(7), T.premultipliedAlpha && o.enable(8), T.shadowMapEnabled && o.enable(9), T.useLegacyLights && o.enable(10), T.doubleSided && o.enable(11), T.flipSided && o.enable(12), T.useDepthPacking && o.enable(13), T.dithering && o.enable(14), T.transmission && o.enable(15), T.sheen && o.enable(16), T.opaque && o.enable(17), T.pointsUvs && o.enable(18), T.decodeVideoTexture && o.enable(19), M.push(o.mask);
    }
    function y(M) {
        let T = m[M.type], O;
        if (T) {
            let Y = nn[T];
            O = xp.clone(Y.uniforms);
        } else O = M.uniforms;
        return O;
    }
    function b(M, T) {
        let O;
        for(let Y = 0, $ = l.length; Y < $; Y++){
            let U = l[Y];
            if (U.cacheKey === T) {
                O = U, ++O.usedTimes;
                break;
            }
        }
        return O === void 0 && (O = new b0(s1, T, M, r), l.push(O)), O;
    }
    function w(M) {
        if (--M.usedTimes === 0) {
            let T = l.indexOf(M);
            l[T] = l[l.length - 1], l.pop(), M.destroy();
        }
    }
    function R(M) {
        c.remove(M);
    }
    function I() {
        c.dispose();
    }
    return {
        getParameters: g,
        getProgramCacheKey: p,
        getUniforms: y,
        acquireProgram: b,
        releaseProgram: w,
        releaseShaderCache: R,
        programs: l,
        dispose: I
    };
}
function w0() {
    let s1 = new WeakMap;
    function e(r) {
        let a = s1.get(r);
        return a === void 0 && (a = {}, s1.set(r, a)), a;
    }
    function t(r) {
        s1.delete(r);
    }
    function n(r, a, o) {
        s1.get(r)[a] = o;
    }
    function i() {
        s1 = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function A0(s1, e) {
    return s1.groupOrder !== e.groupOrder ? s1.groupOrder - e.groupOrder : s1.renderOrder !== e.renderOrder ? s1.renderOrder - e.renderOrder : s1.material.id !== e.material.id ? s1.material.id - e.material.id : s1.z !== e.z ? s1.z - e.z : s1.id - e.id;
}
function Rh(s1, e) {
    return s1.groupOrder !== e.groupOrder ? s1.groupOrder - e.groupOrder : s1.renderOrder !== e.renderOrder ? s1.renderOrder - e.renderOrder : s1.z !== e.z ? e.z - s1.z : s1.id - e.id;
}
function Ch() {
    let s1 = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function a(u, d, f, m, _, g) {
        let p = s1[e];
        return p === void 0 ? (p = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: _,
            group: g
        }, s1[e] = p) : (p.id = u.id, p.object = u, p.geometry = d, p.material = f, p.groupOrder = m, p.renderOrder = u.renderOrder, p.z = _, p.group = g), e++, p;
    }
    function o(u, d, f, m, _, g) {
        let p = a(u, d, f, m, _, g);
        f.transmission > 0 ? n.push(p) : f.transparent === !0 ? i.push(p) : t.push(p);
    }
    function c(u, d, f, m, _, g) {
        let p = a(u, d, f, m, _, g);
        f.transmission > 0 ? n.unshift(p) : f.transparent === !0 ? i.unshift(p) : t.unshift(p);
    }
    function l(u, d) {
        t.length > 1 && t.sort(u || A0), n.length > 1 && n.sort(d || Rh), i.length > 1 && i.sort(d || Rh);
    }
    function h() {
        for(let u = e, d = s1.length; u < d; u++){
            let f = s1[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: o,
        unshift: c,
        finish: h,
        sort: l
    };
}
function R0() {
    let s1 = new WeakMap;
    function e(n, i) {
        let r = s1.get(n), a;
        return r === void 0 ? (a = new Ch, s1.set(n, [
            a
        ])) : i >= r.length ? (a = new Ch, r.push(a)) : a = r[i], a;
    }
    function t() {
        s1 = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function C0() {
    let s1 = {};
    return {
        get: function(e) {
            if (s1[e.id] !== void 0) return s1[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new A,
                        color: new pe
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new A,
                        direction: new A,
                        color: new pe,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new A,
                        color: new pe,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new A,
                        skyColor: new pe,
                        groundColor: new pe
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new pe,
                        position: new A,
                        halfWidth: new A,
                        halfHeight: new A
                    };
                    break;
            }
            return s1[e.id] = t, t;
        }
    };
}
function P0() {
    let s1 = {};
    return {
        get: function(e) {
            if (s1[e.id] !== void 0) return s1[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Z
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Z
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Z,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s1[e.id] = t, t;
        }
    };
}
var L0 = 0;
function I0(s1, e) {
    return (e.castShadow ? 2 : 0) - (s1.castShadow ? 2 : 0) + (e.map ? 1 : 0) - (s1.map ? 1 : 0);
}
function U0(s1, e) {
    let t = new C0, n = P0(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1,
            numSpotMaps: -1,
            numLightProbes: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotLightMap: [],
        spotShadow: [],
        spotShadowMap: [],
        spotLightMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: [],
        numSpotLightShadowsWithMaps: 0,
        numLightProbes: 0
    };
    for(let h = 0; h < 9; h++)i.probe.push(new A);
    let r = new A, a = new ze, o = new ze;
    function c(h, u) {
        let d = 0, f = 0, m = 0;
        for(let Y = 0; Y < 9; Y++)i.probe[Y].set(0, 0, 0);
        let _ = 0, g = 0, p = 0, v = 0, x = 0, y = 0, b = 0, w = 0, R = 0, I = 0, M = 0;
        h.sort(I0);
        let T = u === !0 ? Math.PI : 1;
        for(let Y = 0, $ = h.length; Y < $; Y++){
            let U = h[Y], z = U.color, q = U.intensity, H = U.distance, ne = U.shadow && U.shadow.map ? U.shadow.map.texture : null;
            if (U.isAmbientLight) d += z.r * q * T, f += z.g * q * T, m += z.b * q * T;
            else if (U.isLightProbe) {
                for(let W = 0; W < 9; W++)i.probe[W].addScaledVector(U.sh.coefficients[W], q);
                M++;
            } else if (U.isDirectionalLight) {
                let W = t.get(U);
                if (W.color.copy(U.color).multiplyScalar(U.intensity * T), U.castShadow) {
                    let K = U.shadow, D = n.get(U);
                    D.shadowBias = K.bias, D.shadowNormalBias = K.normalBias, D.shadowRadius = K.radius, D.shadowMapSize = K.mapSize, i.directionalShadow[_] = D, i.directionalShadowMap[_] = ne, i.directionalShadowMatrix[_] = U.shadow.matrix, y++;
                }
                i.directional[_] = W, _++;
            } else if (U.isSpotLight) {
                let W = t.get(U);
                W.position.setFromMatrixPosition(U.matrixWorld), W.color.copy(z).multiplyScalar(q * T), W.distance = H, W.coneCos = Math.cos(U.angle), W.penumbraCos = Math.cos(U.angle * (1 - U.penumbra)), W.decay = U.decay, i.spot[p] = W;
                let K = U.shadow;
                if (U.map && (i.spotLightMap[R] = U.map, R++, K.updateMatrices(U), U.castShadow && I++), i.spotLightMatrix[p] = K.matrix, U.castShadow) {
                    let D = n.get(U);
                    D.shadowBias = K.bias, D.shadowNormalBias = K.normalBias, D.shadowRadius = K.radius, D.shadowMapSize = K.mapSize, i.spotShadow[p] = D, i.spotShadowMap[p] = ne, w++;
                }
                p++;
            } else if (U.isRectAreaLight) {
                let W = t.get(U);
                W.color.copy(z).multiplyScalar(q), W.halfWidth.set(U.width * .5, 0, 0), W.halfHeight.set(0, U.height * .5, 0), i.rectArea[v] = W, v++;
            } else if (U.isPointLight) {
                let W = t.get(U);
                if (W.color.copy(U.color).multiplyScalar(U.intensity * T), W.distance = U.distance, W.decay = U.decay, U.castShadow) {
                    let K = U.shadow, D = n.get(U);
                    D.shadowBias = K.bias, D.shadowNormalBias = K.normalBias, D.shadowRadius = K.radius, D.shadowMapSize = K.mapSize, D.shadowCameraNear = K.camera.near, D.shadowCameraFar = K.camera.far, i.pointShadow[g] = D, i.pointShadowMap[g] = ne, i.pointShadowMatrix[g] = U.shadow.matrix, b++;
                }
                i.point[g] = W, g++;
            } else if (U.isHemisphereLight) {
                let W = t.get(U);
                W.skyColor.copy(U.color).multiplyScalar(q * T), W.groundColor.copy(U.groundColor).multiplyScalar(q * T), i.hemi[x] = W, x++;
            }
        }
        v > 0 && (e.isWebGL2 || s1.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = le.LTC_FLOAT_1, i.rectAreaLTC2 = le.LTC_FLOAT_2) : s1.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = le.LTC_HALF_1, i.rectAreaLTC2 = le.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let O = i.hash;
        (O.directionalLength !== _ || O.pointLength !== g || O.spotLength !== p || O.rectAreaLength !== v || O.hemiLength !== x || O.numDirectionalShadows !== y || O.numPointShadows !== b || O.numSpotShadows !== w || O.numSpotMaps !== R || O.numLightProbes !== M) && (i.directional.length = _, i.spot.length = p, i.rectArea.length = v, i.point.length = g, i.hemi.length = x, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = w, i.spotShadowMap.length = w, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotLightMatrix.length = w + R - I, i.spotLightMap.length = R, i.numSpotLightShadowsWithMaps = I, i.numLightProbes = M, O.directionalLength = _, O.pointLength = g, O.spotLength = p, O.rectAreaLength = v, O.hemiLength = x, O.numDirectionalShadows = y, O.numPointShadows = b, O.numSpotShadows = w, O.numSpotMaps = R, O.numLightProbes = M, i.version = L0++);
    }
    function l(h, u) {
        let d = 0, f = 0, m = 0, _ = 0, g = 0, p = u.matrixWorldInverse;
        for(let v = 0, x = h.length; v < x; v++){
            let y = h[v];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(p), d++;
            } else if (y.isSpotLight) {
                let b = i.spot[m];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(p), b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(p), m++;
            } else if (y.isRectAreaLight) {
                let b = i.rectArea[_];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(p), o.identity(), a.copy(y.matrixWorld), a.premultiply(p), o.extractRotation(a), b.halfWidth.set(y.width * .5, 0, 0), b.halfHeight.set(0, y.height * .5, 0), b.halfWidth.applyMatrix4(o), b.halfHeight.applyMatrix4(o), _++;
            } else if (y.isPointLight) {
                let b = i.point[f];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(p), f++;
            } else if (y.isHemisphereLight) {
                let b = i.hemi[g];
                b.direction.setFromMatrixPosition(y.matrixWorld), b.direction.transformDirection(p), g++;
            }
        }
    }
    return {
        setup: c,
        setupView: l,
        state: i
    };
}
function Ph(s1, e) {
    let t = new U0(s1, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function a(u) {
        n.push(u);
    }
    function o(u) {
        i.push(u);
    }
    function c(u) {
        t.setup(n, u);
    }
    function l(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: c,
        setupLightsView: l,
        pushLight: a,
        pushShadow: o
    };
}
function D0(s1, e) {
    let t = new WeakMap;
    function n(r, a = 0) {
        let o = t.get(r), c;
        return o === void 0 ? (c = new Ph(s1, e), t.set(r, [
            c
        ])) : a >= o.length ? (c = new Ph(s1, e), o.push(c)) : c = o[a], c;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var Qr = class extends bt {
    constructor(e){
        super(), this.isMeshDepthMaterial = !0, this.type = "MeshDepthMaterial", this.depthPacking = Cf, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
}, jr = class extends bt {
    constructor(e){
        super(), this.isMeshDistanceMaterial = !0, this.type = "MeshDistanceMaterial", this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
}, N0 = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, O0 = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function F0(s1, e, t) {
    let n = new Ps, i = new Z, r = new Z, a = new je, o = new Qr({
        depthPacking: Pf
    }), c = new jr, l = {}, h = t.maxTextureSize, u = {
        [Bn]: Ft,
        [Ft]: Bn,
        [gn]: gn
    }, d = new jt({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new Z
            },
            radius: {
                value: 4
            }
        },
        vertexShader: N0,
        fragmentShader: O0
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new Ge;
    m.setAttribute("position", new et(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let _ = new Mt(m, d), g = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = cd;
    let p = this.type;
    this.render = function(b, w, R) {
        if (g.enabled === !1 || g.autoUpdate === !1 && g.needsUpdate === !1 || b.length === 0) return;
        let I = s1.getRenderTarget(), M = s1.getActiveCubeFace(), T = s1.getActiveMipmapLevel(), O = s1.state;
        O.setBlending(Dn), O.buffers.color.setClear(1, 1, 1, 1), O.buffers.depth.setTest(!0), O.setScissorTest(!1);
        let Y = p !== pn && this.type === pn, $ = p === pn && this.type !== pn;
        for(let U = 0, z = b.length; U < z; U++){
            let q = b[U], H = q.shadow;
            if (H === void 0) {
                console.warn("THREE.WebGLShadowMap:", q, "has no shadow.");
                continue;
            }
            if (H.autoUpdate === !1 && H.needsUpdate === !1) continue;
            i.copy(H.mapSize);
            let ne = H.getFrameExtents();
            if (i.multiply(ne), r.copy(H.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / ne.x), i.x = r.x * ne.x, H.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / ne.y), i.y = r.y * ne.y, H.mapSize.y = r.y)), H.map === null || Y === !0 || $ === !0) {
                let K = this.type !== pn ? {
                    minFilter: pt,
                    magFilter: pt
                } : {};
                H.map !== null && H.map.dispose(), H.map = new qt(i.x, i.y, K), H.map.texture.name = q.name + ".shadowMap", H.camera.updateProjectionMatrix();
            }
            s1.setRenderTarget(H.map), s1.clear();
            let W = H.getViewportCount();
            for(let K = 0; K < W; K++){
                let D = H.getViewport(K);
                a.set(r.x * D.x, r.y * D.y, r.x * D.z, r.y * D.w), O.viewport(a), H.updateMatrices(q, K), n = H.getFrustum(), y(w, R, H.camera, q, this.type);
            }
            H.isPointLightShadow !== !0 && this.type === pn && v(H, R), H.needsUpdate = !1;
        }
        p = this.type, g.needsUpdate = !1, s1.setRenderTarget(I, M, T);
    };
    function v(b, w) {
        let R = e.update(_);
        d.defines.VSM_SAMPLES !== b.blurSamples && (d.defines.VSM_SAMPLES = b.blurSamples, f.defines.VSM_SAMPLES = b.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), b.mapPass === null && (b.mapPass = new qt(i.x, i.y)), d.uniforms.shadow_pass.value = b.map.texture, d.uniforms.resolution.value = b.mapSize, d.uniforms.radius.value = b.radius, s1.setRenderTarget(b.mapPass), s1.clear(), s1.renderBufferDirect(w, null, R, d, _, null), f.uniforms.shadow_pass.value = b.mapPass.texture, f.uniforms.resolution.value = b.mapSize, f.uniforms.radius.value = b.radius, s1.setRenderTarget(b.map), s1.clear(), s1.renderBufferDirect(w, null, R, f, _, null);
    }
    function x(b, w, R, I) {
        let M = null, T = R.isPointLight === !0 ? b.customDistanceMaterial : b.customDepthMaterial;
        if (T !== void 0) M = T;
        else if (M = R.isPointLight === !0 ? c : o, s1.localClippingEnabled && w.clipShadows === !0 && Array.isArray(w.clippingPlanes) && w.clippingPlanes.length !== 0 || w.displacementMap && w.displacementScale !== 0 || w.alphaMap && w.alphaTest > 0 || w.map && w.alphaTest > 0) {
            let O = M.uuid, Y = w.uuid, $ = l[O];
            $ === void 0 && ($ = {}, l[O] = $);
            let U = $[Y];
            U === void 0 && (U = M.clone(), $[Y] = U), M = U;
        }
        if (M.visible = w.visible, M.wireframe = w.wireframe, I === pn ? M.side = w.shadowSide !== null ? w.shadowSide : w.side : M.side = w.shadowSide !== null ? w.shadowSide : u[w.side], M.alphaMap = w.alphaMap, M.alphaTest = w.alphaTest, M.map = w.map, M.clipShadows = w.clipShadows, M.clippingPlanes = w.clippingPlanes, M.clipIntersection = w.clipIntersection, M.displacementMap = w.displacementMap, M.displacementScale = w.displacementScale, M.displacementBias = w.displacementBias, M.wireframeLinewidth = w.wireframeLinewidth, M.linewidth = w.linewidth, R.isPointLight === !0 && M.isMeshDistanceMaterial === !0) {
            let O = s1.properties.get(M);
            O.light = R;
        }
        return M;
    }
    function y(b, w, R, I, M) {
        if (b.visible === !1) return;
        if (b.layers.test(w.layers) && (b.isMesh || b.isLine || b.isPoints) && (b.castShadow || b.receiveShadow && M === pn) && (!b.frustumCulled || n.intersectsObject(b))) {
            b.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse, b.matrixWorld);
            let Y = e.update(b), $ = b.material;
            if (Array.isArray($)) {
                let U = Y.groups;
                for(let z = 0, q = U.length; z < q; z++){
                    let H = U[z], ne = $[H.materialIndex];
                    if (ne && ne.visible) {
                        let W = x(b, ne, I, M);
                        s1.renderBufferDirect(R, null, Y, W, b, H);
                    }
                }
            } else if ($.visible) {
                let U = x(b, $, I, M);
                s1.renderBufferDirect(R, null, Y, U, b, null);
            }
        }
        let O = b.children;
        for(let Y = 0, $ = O.length; Y < $; Y++)y(O[Y], w, R, I, M);
    }
}
function B0(s1, e, t) {
    let n = t.isWebGL2;
    function i() {
        let P = !1, ce = new je, ae = null, ge = new je(0, 0, 0, 0);
        return {
            setMask: function(ue) {
                ae !== ue && !P && (s1.colorMask(ue, ue, ue, ue), ae = ue);
            },
            setLocked: function(ue) {
                P = ue;
            },
            setClear: function(ue, Q, be, Fe, At) {
                At === !0 && (ue *= Fe, Q *= Fe, be *= Fe), ce.set(ue, Q, be, Fe), ge.equals(ce) === !1 && (s1.clearColor(ue, Q, be, Fe), ge.copy(ce));
            },
            reset: function() {
                P = !1, ae = null, ge.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let P = !1, ce = null, ae = null, ge = null;
        return {
            setTest: function(ue) {
                ue ? Ee(s1.DEPTH_TEST) : Te(s1.DEPTH_TEST);
            },
            setMask: function(ue) {
                ce !== ue && !P && (s1.depthMask(ue), ce = ue);
            },
            setFunc: function(ue) {
                if (ae !== ue) {
                    switch(ue){
                        case nf:
                            s1.depthFunc(s1.NEVER);
                            break;
                        case sf:
                            s1.depthFunc(s1.ALWAYS);
                            break;
                        case rf:
                            s1.depthFunc(s1.LESS);
                            break;
                        case uo:
                            s1.depthFunc(s1.LEQUAL);
                            break;
                        case af:
                            s1.depthFunc(s1.EQUAL);
                            break;
                        case of:
                            s1.depthFunc(s1.GEQUAL);
                            break;
                        case cf:
                            s1.depthFunc(s1.GREATER);
                            break;
                        case lf:
                            s1.depthFunc(s1.NOTEQUAL);
                            break;
                        default:
                            s1.depthFunc(s1.LEQUAL);
                    }
                    ae = ue;
                }
            },
            setLocked: function(ue) {
                P = ue;
            },
            setClear: function(ue) {
                ge !== ue && (s1.clearDepth(ue), ge = ue);
            },
            reset: function() {
                P = !1, ce = null, ae = null, ge = null;
            }
        };
    }
    function a() {
        let P = !1, ce = null, ae = null, ge = null, ue = null, Q = null, be = null, Fe = null, At = null;
        return {
            setTest: function(tt) {
                P || (tt ? Ee(s1.STENCIL_TEST) : Te(s1.STENCIL_TEST));
            },
            setMask: function(tt) {
                ce !== tt && !P && (s1.stencilMask(tt), ce = tt);
            },
            setFunc: function(tt, tn, Rt) {
                (ae !== tt || ge !== tn || ue !== Rt) && (s1.stencilFunc(tt, tn, Rt), ae = tt, ge = tn, ue = Rt);
            },
            setOp: function(tt, tn, Rt) {
                (Q !== tt || be !== tn || Fe !== Rt) && (s1.stencilOp(tt, tn, Rt), Q = tt, be = tn, Fe = Rt);
            },
            setLocked: function(tt) {
                P = tt;
            },
            setClear: function(tt) {
                At !== tt && (s1.clearStencil(tt), At = tt);
            },
            reset: function() {
                P = !1, ce = null, ae = null, ge = null, ue = null, Q = null, be = null, Fe = null, At = null;
            }
        };
    }
    let o = new i, c = new r, l = new a, h = new WeakMap, u = new WeakMap, d = {}, f = {}, m = new WeakMap, _ = [], g = null, p = !1, v = null, x = null, y = null, b = null, w = null, R = null, I = null, M = !1, T = null, O = null, Y = null, $ = null, U = null, z = s1.getParameter(s1.MAX_COMBINED_TEXTURE_IMAGE_UNITS), q = !1, H = 0, ne = s1.getParameter(s1.VERSION);
    ne.indexOf("WebGL") !== -1 ? (H = parseFloat(/^WebGL (\d)/.exec(ne)[1]), q = H >= 1) : ne.indexOf("OpenGL ES") !== -1 && (H = parseFloat(/^OpenGL ES (\d)/.exec(ne)[1]), q = H >= 2);
    let W = null, K = {}, D = s1.getParameter(s1.SCISSOR_BOX), G = s1.getParameter(s1.VIEWPORT), he = new je().fromArray(D), fe = new je().fromArray(G);
    function _e(P, ce, ae, ge) {
        let ue = new Uint8Array(4), Q = s1.createTexture();
        s1.bindTexture(P, Q), s1.texParameteri(P, s1.TEXTURE_MIN_FILTER, s1.NEAREST), s1.texParameteri(P, s1.TEXTURE_MAG_FILTER, s1.NEAREST);
        for(let be = 0; be < ae; be++)n && (P === s1.TEXTURE_3D || P === s1.TEXTURE_2D_ARRAY) ? s1.texImage3D(ce, 0, s1.RGBA, 1, 1, ge, 0, s1.RGBA, s1.UNSIGNED_BYTE, ue) : s1.texImage2D(ce + be, 0, s1.RGBA, 1, 1, 0, s1.RGBA, s1.UNSIGNED_BYTE, ue);
        return Q;
    }
    let we = {};
    we[s1.TEXTURE_2D] = _e(s1.TEXTURE_2D, s1.TEXTURE_2D, 1), we[s1.TEXTURE_CUBE_MAP] = _e(s1.TEXTURE_CUBE_MAP, s1.TEXTURE_CUBE_MAP_POSITIVE_X, 6), n && (we[s1.TEXTURE_2D_ARRAY] = _e(s1.TEXTURE_2D_ARRAY, s1.TEXTURE_2D_ARRAY, 1, 1), we[s1.TEXTURE_3D] = _e(s1.TEXTURE_3D, s1.TEXTURE_3D, 1, 1)), o.setClear(0, 0, 0, 1), c.setClear(1), l.setClear(0), Ee(s1.DEPTH_TEST), c.setFunc(uo), J(!1), Se(rl), Ee(s1.CULL_FACE), X(Dn);
    function Ee(P) {
        d[P] !== !0 && (s1.enable(P), d[P] = !0);
    }
    function Te(P) {
        d[P] !== !1 && (s1.disable(P), d[P] = !1);
    }
    function Ye(P, ce) {
        return f[P] !== ce ? (s1.bindFramebuffer(P, ce), f[P] = ce, n && (P === s1.DRAW_FRAMEBUFFER && (f[s1.FRAMEBUFFER] = ce), P === s1.FRAMEBUFFER && (f[s1.DRAW_FRAMEBUFFER] = ce)), !0) : !1;
    }
    function it(P, ce) {
        let ae = _, ge = !1;
        if (P) if (ae = m.get(ce), ae === void 0 && (ae = [], m.set(ce, ae)), P.isWebGLMultipleRenderTargets) {
            let ue = P.texture;
            if (ae.length !== ue.length || ae[0] !== s1.COLOR_ATTACHMENT0) {
                for(let Q = 0, be = ue.length; Q < be; Q++)ae[Q] = s1.COLOR_ATTACHMENT0 + Q;
                ae.length = ue.length, ge = !0;
            }
        } else ae[0] !== s1.COLOR_ATTACHMENT0 && (ae[0] = s1.COLOR_ATTACHMENT0, ge = !0);
        else ae[0] !== s1.BACK && (ae[0] = s1.BACK, ge = !0);
        ge && (t.isWebGL2 ? s1.drawBuffers(ae) : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ae));
    }
    function Ce(P) {
        return g !== P ? (s1.useProgram(P), g = P, !0) : !1;
    }
    let L = {
        [Bi]: s1.FUNC_ADD,
        [Xd]: s1.FUNC_SUBTRACT,
        [qd]: s1.FUNC_REVERSE_SUBTRACT
    };
    if (n) L[ll] = s1.MIN, L[hl] = s1.MAX;
    else {
        let P = e.get("EXT_blend_minmax");
        P !== null && (L[ll] = P.MIN_EXT, L[hl] = P.MAX_EXT);
    }
    let oe = {
        [Yd]: s1.ZERO,
        [Zd]: s1.ONE,
        [Jd]: s1.SRC_COLOR,
        [ld]: s1.SRC_ALPHA,
        [tf]: s1.SRC_ALPHA_SATURATE,
        [jd]: s1.DST_COLOR,
        [Kd]: s1.DST_ALPHA,
        [$d]: s1.ONE_MINUS_SRC_COLOR,
        [hd]: s1.ONE_MINUS_SRC_ALPHA,
        [ef]: s1.ONE_MINUS_DST_COLOR,
        [Qd]: s1.ONE_MINUS_DST_ALPHA
    };
    function X(P, ce, ae, ge, ue, Q, be, Fe) {
        if (P === Dn) {
            p === !0 && (Te(s1.BLEND), p = !1);
            return;
        }
        if (p === !1 && (Ee(s1.BLEND), p = !0), P !== Wd) {
            if (P !== v || Fe !== M) {
                if ((x !== Bi || w !== Bi) && (s1.blendEquation(s1.FUNC_ADD), x = Bi, w = Bi), Fe) switch(P){
                    case Wi:
                        s1.blendFuncSeparate(s1.ONE, s1.ONE_MINUS_SRC_ALPHA, s1.ONE, s1.ONE_MINUS_SRC_ALPHA);
                        break;
                    case al:
                        s1.blendFunc(s1.ONE, s1.ONE);
                        break;
                    case ol:
                        s1.blendFuncSeparate(s1.ZERO, s1.ONE_MINUS_SRC_COLOR, s1.ZERO, s1.ONE);
                        break;
                    case cl:
                        s1.blendFuncSeparate(s1.ZERO, s1.SRC_COLOR, s1.ZERO, s1.SRC_ALPHA);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", P);
                        break;
                }
                else switch(P){
                    case Wi:
                        s1.blendFuncSeparate(s1.SRC_ALPHA, s1.ONE_MINUS_SRC_ALPHA, s1.ONE, s1.ONE_MINUS_SRC_ALPHA);
                        break;
                    case al:
                        s1.blendFunc(s1.SRC_ALPHA, s1.ONE);
                        break;
                    case ol:
                        s1.blendFuncSeparate(s1.ZERO, s1.ONE_MINUS_SRC_COLOR, s1.ZERO, s1.ONE);
                        break;
                    case cl:
                        s1.blendFunc(s1.ZERO, s1.SRC_COLOR);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", P);
                        break;
                }
                y = null, b = null, R = null, I = null, v = P, M = Fe;
            }
            return;
        }
        ue = ue || ce, Q = Q || ae, be = be || ge, (ce !== x || ue !== w) && (s1.blendEquationSeparate(L[ce], L[ue]), x = ce, w = ue), (ae !== y || ge !== b || Q !== R || be !== I) && (s1.blendFuncSeparate(oe[ae], oe[ge], oe[Q], oe[be]), y = ae, b = ge, R = Q, I = be), v = P, M = !1;
    }
    function ie(P, ce) {
        P.side === gn ? Te(s1.CULL_FACE) : Ee(s1.CULL_FACE);
        let ae = P.side === Ft;
        ce && (ae = !ae), J(ae), P.blending === Wi && P.transparent === !1 ? X(Dn) : X(P.blending, P.blendEquation, P.blendSrc, P.blendDst, P.blendEquationAlpha, P.blendSrcAlpha, P.blendDstAlpha, P.premultipliedAlpha), c.setFunc(P.depthFunc), c.setTest(P.depthTest), c.setMask(P.depthWrite), o.setMask(P.colorWrite);
        let ge = P.stencilWrite;
        l.setTest(ge), ge && (l.setMask(P.stencilWriteMask), l.setFunc(P.stencilFunc, P.stencilRef, P.stencilFuncMask), l.setOp(P.stencilFail, P.stencilZFail, P.stencilZPass)), ye(P.polygonOffset, P.polygonOffsetFactor, P.polygonOffsetUnits), P.alphaToCoverage === !0 ? Ee(s1.SAMPLE_ALPHA_TO_COVERAGE) : Te(s1.SAMPLE_ALPHA_TO_COVERAGE);
    }
    function J(P) {
        T !== P && (P ? s1.frontFace(s1.CW) : s1.frontFace(s1.CCW), T = P);
    }
    function Se(P) {
        P !== kd ? (Ee(s1.CULL_FACE), P !== O && (P === rl ? s1.cullFace(s1.BACK) : P === Hd ? s1.cullFace(s1.FRONT) : s1.cullFace(s1.FRONT_AND_BACK))) : Te(s1.CULL_FACE), O = P;
    }
    function me(P) {
        P !== Y && (q && s1.lineWidth(P), Y = P);
    }
    function ye(P, ce, ae) {
        P ? (Ee(s1.POLYGON_OFFSET_FILL), ($ !== ce || U !== ae) && (s1.polygonOffset(ce, ae), $ = ce, U = ae)) : Te(s1.POLYGON_OFFSET_FILL);
    }
    function Ne(P) {
        P ? Ee(s1.SCISSOR_TEST) : Te(s1.SCISSOR_TEST);
    }
    function qe(P) {
        P === void 0 && (P = s1.TEXTURE0 + z - 1), W !== P && (s1.activeTexture(P), W = P);
    }
    function rt(P, ce, ae) {
        ae === void 0 && (W === null ? ae = s1.TEXTURE0 + z - 1 : ae = W);
        let ge = K[ae];
        ge === void 0 && (ge = {
            type: void 0,
            texture: void 0
        }, K[ae] = ge), (ge.type !== P || ge.texture !== ce) && (W !== ae && (s1.activeTexture(ae), W = ae), s1.bindTexture(P, ce || we[P]), ge.type = P, ge.texture = ce);
    }
    function C() {
        let P = K[W];
        P !== void 0 && P.type !== void 0 && (s1.bindTexture(P.type, null), P.type = void 0, P.texture = void 0);
    }
    function S() {
        try {
            s1.compressedTexImage2D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function B() {
        try {
            s1.compressedTexImage3D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function ee() {
        try {
            s1.texSubImage2D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function j() {
        try {
            s1.texSubImage3D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function te() {
        try {
            s1.compressedTexSubImage2D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function Me() {
        try {
            s1.compressedTexSubImage3D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function re() {
        try {
            s1.texStorage2D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function de() {
        try {
            s1.texStorage3D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function Le() {
        try {
            s1.texImage2D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function Ze() {
        try {
            s1.texImage3D.apply(s1, arguments);
        } catch (P) {
            console.error("THREE.WebGLState:", P);
        }
    }
    function se(P) {
        he.equals(P) === !1 && (s1.scissor(P.x, P.y, P.z, P.w), he.copy(P));
    }
    function $e(P) {
        fe.equals(P) === !1 && (s1.viewport(P.x, P.y, P.z, P.w), fe.copy(P));
    }
    function Oe(P, ce) {
        let ae = u.get(ce);
        ae === void 0 && (ae = new WeakMap, u.set(ce, ae));
        let ge = ae.get(P);
        ge === void 0 && (ge = s1.getUniformBlockIndex(ce, P.name), ae.set(P, ge));
    }
    function Ie(P, ce) {
        let ge = u.get(ce).get(P);
        h.get(ce) !== ge && (s1.uniformBlockBinding(ce, ge, P.__bindingPointIndex), h.set(ce, ge));
    }
    function Re() {
        s1.disable(s1.BLEND), s1.disable(s1.CULL_FACE), s1.disable(s1.DEPTH_TEST), s1.disable(s1.POLYGON_OFFSET_FILL), s1.disable(s1.SCISSOR_TEST), s1.disable(s1.STENCIL_TEST), s1.disable(s1.SAMPLE_ALPHA_TO_COVERAGE), s1.blendEquation(s1.FUNC_ADD), s1.blendFunc(s1.ONE, s1.ZERO), s1.blendFuncSeparate(s1.ONE, s1.ZERO, s1.ONE, s1.ZERO), s1.colorMask(!0, !0, !0, !0), s1.clearColor(0, 0, 0, 0), s1.depthMask(!0), s1.depthFunc(s1.LESS), s1.clearDepth(1), s1.stencilMask(4294967295), s1.stencilFunc(s1.ALWAYS, 0, 4294967295), s1.stencilOp(s1.KEEP, s1.KEEP, s1.KEEP), s1.clearStencil(0), s1.cullFace(s1.BACK), s1.frontFace(s1.CCW), s1.polygonOffset(0, 0), s1.activeTexture(s1.TEXTURE0), s1.bindFramebuffer(s1.FRAMEBUFFER, null), n === !0 && (s1.bindFramebuffer(s1.DRAW_FRAMEBUFFER, null), s1.bindFramebuffer(s1.READ_FRAMEBUFFER, null)), s1.useProgram(null), s1.lineWidth(1), s1.scissor(0, 0, s1.canvas.width, s1.canvas.height), s1.viewport(0, 0, s1.canvas.width, s1.canvas.height), d = {}, W = null, K = {}, f = {}, m = new WeakMap, _ = [], g = null, p = !1, v = null, x = null, y = null, b = null, w = null, R = null, I = null, M = !1, T = null, O = null, Y = null, $ = null, U = null, he.set(0, 0, s1.canvas.width, s1.canvas.height), fe.set(0, 0, s1.canvas.width, s1.canvas.height), o.reset(), c.reset(), l.reset();
    }
    return {
        buffers: {
            color: o,
            depth: c,
            stencil: l
        },
        enable: Ee,
        disable: Te,
        bindFramebuffer: Ye,
        drawBuffers: it,
        useProgram: Ce,
        setBlending: X,
        setMaterial: ie,
        setFlipSided: J,
        setCullFace: Se,
        setLineWidth: me,
        setPolygonOffset: ye,
        setScissorTest: Ne,
        activeTexture: qe,
        bindTexture: rt,
        unbindTexture: C,
        compressedTexImage2D: S,
        compressedTexImage3D: B,
        texImage2D: Le,
        texImage3D: Ze,
        updateUBOMapping: Oe,
        uniformBlockBinding: Ie,
        texStorage2D: re,
        texStorage3D: de,
        texSubImage2D: ee,
        texSubImage3D: j,
        compressedTexSubImage2D: te,
        compressedTexSubImage3D: Me,
        scissor: se,
        viewport: $e,
        reset: Re
    };
}
function z0(s1, e, t, n, i, r, a) {
    let o = i.isWebGL2, c = i.maxTextures, l = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, d = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : null, f = typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent), m = new WeakMap, _, g = new WeakMap, p = !1;
    try {
        p = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function v(C, S) {
        return p ? new OffscreenCanvas(C, S) : ws("canvas");
    }
    function x(C, S, B, ee) {
        let j = 1;
        if ((C.width > ee || C.height > ee) && (j = ee / Math.max(C.width, C.height)), j < 1 || S === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let te = S ? Wr : Math.floor, Me = te(j * C.width), re = te(j * C.height);
            _ === void 0 && (_ = v(Me, re));
            let de = B ? v(Me, re) : _;
            return de.width = Me, de.height = re, de.getContext("2d").drawImage(C, 0, 0, Me, re), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + re + ")."), de;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function y(C) {
        return mo(C.width) && mo(C.height);
    }
    function b(C) {
        return o ? !1 : C.wrapS !== It || C.wrapT !== It || C.minFilter !== pt && C.minFilter !== mt;
    }
    function w(C, S) {
        return C.generateMipmaps && S && C.minFilter !== pt && C.minFilter !== mt;
    }
    function R(C) {
        s1.generateMipmap(C);
    }
    function I(C, S, B, ee, j = !1) {
        if (o === !1) return S;
        if (C !== null) {
            if (s1[C] !== void 0) return s1[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let te = S;
        if (S === s1.RED && (B === s1.FLOAT && (te = s1.R32F), B === s1.HALF_FLOAT && (te = s1.R16F), B === s1.UNSIGNED_BYTE && (te = s1.R8)), S === s1.RED_INTEGER && (B === s1.UNSIGNED_BYTE && (te = s1.R8UI), B === s1.UNSIGNED_SHORT && (te = s1.R16UI), B === s1.UNSIGNED_INT && (te = s1.R32UI), B === s1.BYTE && (te = s1.R8I), B === s1.SHORT && (te = s1.R16I), B === s1.INT && (te = s1.R32I)), S === s1.RG && (B === s1.FLOAT && (te = s1.RG32F), B === s1.HALF_FLOAT && (te = s1.RG16F), B === s1.UNSIGNED_BYTE && (te = s1.RG8)), S === s1.RGBA) {
            let Me = j ? zr : Qe.getTransfer(ee);
            B === s1.FLOAT && (te = s1.RGBA32F), B === s1.HALF_FLOAT && (te = s1.RGBA16F), B === s1.UNSIGNED_BYTE && (te = Me === nt ? s1.SRGB8_ALPHA8 : s1.RGBA8), B === s1.UNSIGNED_SHORT_4_4_4_4 && (te = s1.RGBA4), B === s1.UNSIGNED_SHORT_5_5_5_1 && (te = s1.RGB5_A1);
        }
        return (te === s1.R16F || te === s1.R32F || te === s1.RG16F || te === s1.RG32F || te === s1.RGBA16F || te === s1.RGBA32F) && e.get("EXT_color_buffer_float"), te;
    }
    function M(C, S, B) {
        return w(C, B) === !0 || C.isFramebufferTexture && C.minFilter !== pt && C.minFilter !== mt ? Math.log2(Math.max(S.width, S.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? S.mipmaps.length : 1;
    }
    function T(C) {
        return C === pt || C === fo || C === Lr ? s1.NEAREST : s1.LINEAR;
    }
    function O(C) {
        let S = C.target;
        S.removeEventListener("dispose", O), $(S), S.isVideoTexture && m.delete(S);
    }
    function Y(C) {
        let S = C.target;
        S.removeEventListener("dispose", Y), z(S);
    }
    function $(C) {
        let S = n.get(C);
        if (S.__webglInit === void 0) return;
        let B = C.source, ee = g.get(B);
        if (ee) {
            let j = ee[S.__cacheKey];
            j.usedTimes--, j.usedTimes === 0 && U(C), Object.keys(ee).length === 0 && g.delete(B);
        }
        n.remove(C);
    }
    function U(C) {
        let S = n.get(C);
        s1.deleteTexture(S.__webglTexture);
        let B = C.source, ee = g.get(B);
        delete ee[S.__cacheKey], a.memory.textures--;
    }
    function z(C) {
        let S = C.texture, B = n.get(C), ee = n.get(S);
        if (ee.__webglTexture !== void 0 && (s1.deleteTexture(ee.__webglTexture), a.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let j = 0; j < 6; j++){
            if (Array.isArray(B.__webglFramebuffer[j])) for(let te = 0; te < B.__webglFramebuffer[j].length; te++)s1.deleteFramebuffer(B.__webglFramebuffer[j][te]);
            else s1.deleteFramebuffer(B.__webglFramebuffer[j]);
            B.__webglDepthbuffer && s1.deleteRenderbuffer(B.__webglDepthbuffer[j]);
        }
        else {
            if (Array.isArray(B.__webglFramebuffer)) for(let j = 0; j < B.__webglFramebuffer.length; j++)s1.deleteFramebuffer(B.__webglFramebuffer[j]);
            else s1.deleteFramebuffer(B.__webglFramebuffer);
            if (B.__webglDepthbuffer && s1.deleteRenderbuffer(B.__webglDepthbuffer), B.__webglMultisampledFramebuffer && s1.deleteFramebuffer(B.__webglMultisampledFramebuffer), B.__webglColorRenderbuffer) for(let j = 0; j < B.__webglColorRenderbuffer.length; j++)B.__webglColorRenderbuffer[j] && s1.deleteRenderbuffer(B.__webglColorRenderbuffer[j]);
            B.__webglDepthRenderbuffer && s1.deleteRenderbuffer(B.__webglDepthRenderbuffer);
        }
        if (C.isWebGLMultipleRenderTargets) for(let j = 0, te = S.length; j < te; j++){
            let Me = n.get(S[j]);
            Me.__webglTexture && (s1.deleteTexture(Me.__webglTexture), a.memory.textures--), n.remove(S[j]);
        }
        n.remove(S), n.remove(C);
    }
    let q = 0;
    function H() {
        q = 0;
    }
    function ne() {
        let C = q;
        return C >= c && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + c), q += 1, C;
    }
    function W(C) {
        let S = [];
        return S.push(C.wrapS), S.push(C.wrapT), S.push(C.wrapR || 0), S.push(C.magFilter), S.push(C.minFilter), S.push(C.anisotropy), S.push(C.internalFormat), S.push(C.format), S.push(C.type), S.push(C.generateMipmaps), S.push(C.premultiplyAlpha), S.push(C.flipY), S.push(C.unpackAlignment), S.push(C.colorSpace), S.join();
    }
    function K(C, S) {
        let B = n.get(C);
        if (C.isVideoTexture && qe(C), C.isRenderTargetTexture === !1 && C.version > 0 && B.__version !== C.version) {
            let ee = C.image;
            if (ee === null) console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
            else if (ee.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Ye(B, C, S);
                return;
            }
        }
        t.bindTexture(s1.TEXTURE_2D, B.__webglTexture, s1.TEXTURE0 + S);
    }
    function D(C, S) {
        let B = n.get(C);
        if (C.version > 0 && B.__version !== C.version) {
            Ye(B, C, S);
            return;
        }
        t.bindTexture(s1.TEXTURE_2D_ARRAY, B.__webglTexture, s1.TEXTURE0 + S);
    }
    function G(C, S) {
        let B = n.get(C);
        if (C.version > 0 && B.__version !== C.version) {
            Ye(B, C, S);
            return;
        }
        t.bindTexture(s1.TEXTURE_3D, B.__webglTexture, s1.TEXTURE0 + S);
    }
    function he(C, S) {
        let B = n.get(C);
        if (C.version > 0 && B.__version !== C.version) {
            it(B, C, S);
            return;
        }
        t.bindTexture(s1.TEXTURE_CUBE_MAP, B.__webglTexture, s1.TEXTURE0 + S);
    }
    let fe = {
        [Dr]: s1.REPEAT,
        [It]: s1.CLAMP_TO_EDGE,
        [Nr]: s1.MIRRORED_REPEAT
    }, _e = {
        [pt]: s1.NEAREST,
        [fo]: s1.NEAREST_MIPMAP_NEAREST,
        [Lr]: s1.NEAREST_MIPMAP_LINEAR,
        [mt]: s1.LINEAR,
        [ud]: s1.LINEAR_MIPMAP_NEAREST,
        [li]: s1.LINEAR_MIPMAP_LINEAR
    }, we = {
        [Uf]: s1.NEVER,
        [Vf]: s1.ALWAYS,
        [Df]: s1.LESS,
        [Of]: s1.LEQUAL,
        [Nf]: s1.EQUAL,
        [zf]: s1.GEQUAL,
        [Ff]: s1.GREATER,
        [Bf]: s1.NOTEQUAL
    };
    function Ee(C, S, B) {
        if (B ? (s1.texParameteri(C, s1.TEXTURE_WRAP_S, fe[S.wrapS]), s1.texParameteri(C, s1.TEXTURE_WRAP_T, fe[S.wrapT]), (C === s1.TEXTURE_3D || C === s1.TEXTURE_2D_ARRAY) && s1.texParameteri(C, s1.TEXTURE_WRAP_R, fe[S.wrapR]), s1.texParameteri(C, s1.TEXTURE_MAG_FILTER, _e[S.magFilter]), s1.texParameteri(C, s1.TEXTURE_MIN_FILTER, _e[S.minFilter])) : (s1.texParameteri(C, s1.TEXTURE_WRAP_S, s1.CLAMP_TO_EDGE), s1.texParameteri(C, s1.TEXTURE_WRAP_T, s1.CLAMP_TO_EDGE), (C === s1.TEXTURE_3D || C === s1.TEXTURE_2D_ARRAY) && s1.texParameteri(C, s1.TEXTURE_WRAP_R, s1.CLAMP_TO_EDGE), (S.wrapS !== It || S.wrapT !== It) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s1.texParameteri(C, s1.TEXTURE_MAG_FILTER, T(S.magFilter)), s1.texParameteri(C, s1.TEXTURE_MIN_FILTER, T(S.minFilter)), S.minFilter !== pt && S.minFilter !== mt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), S.compareFunction && (s1.texParameteri(C, s1.TEXTURE_COMPARE_MODE, s1.COMPARE_REF_TO_TEXTURE), s1.texParameteri(C, s1.TEXTURE_COMPARE_FUNC, we[S.compareFunction])), e.has("EXT_texture_filter_anisotropic") === !0) {
            let ee = e.get("EXT_texture_filter_anisotropic");
            if (S.magFilter === pt || S.minFilter !== Lr && S.minFilter !== li || S.type === xn && e.has("OES_texture_float_linear") === !1 || o === !1 && S.type === Ts && e.has("OES_texture_half_float_linear") === !1) return;
            (S.anisotropy > 1 || n.get(S).__currentAnisotropy) && (s1.texParameterf(C, ee.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(S.anisotropy, i.getMaxAnisotropy())), n.get(S).__currentAnisotropy = S.anisotropy);
        }
    }
    function Te(C, S) {
        let B = !1;
        C.__webglInit === void 0 && (C.__webglInit = !0, S.addEventListener("dispose", O));
        let ee = S.source, j = g.get(ee);
        j === void 0 && (j = {}, g.set(ee, j));
        let te = W(S);
        if (te !== C.__cacheKey) {
            j[te] === void 0 && (j[te] = {
                texture: s1.createTexture(),
                usedTimes: 0
            }, a.memory.textures++, B = !0), j[te].usedTimes++;
            let Me = j[C.__cacheKey];
            Me !== void 0 && (j[C.__cacheKey].usedTimes--, Me.usedTimes === 0 && U(S)), C.__cacheKey = te, C.__webglTexture = j[te].texture;
        }
        return B;
    }
    function Ye(C, S, B) {
        let ee = s1.TEXTURE_2D;
        (S.isDataArrayTexture || S.isCompressedArrayTexture) && (ee = s1.TEXTURE_2D_ARRAY), S.isData3DTexture && (ee = s1.TEXTURE_3D);
        let j = Te(C, S), te = S.source;
        t.bindTexture(ee, C.__webglTexture, s1.TEXTURE0 + B);
        let Me = n.get(te);
        if (te.version !== Me.__version || j === !0) {
            t.activeTexture(s1.TEXTURE0 + B);
            let re = Qe.getPrimaries(Qe.workingColorSpace), de = S.colorSpace === Xt ? null : Qe.getPrimaries(S.colorSpace), Le = S.colorSpace === Xt || re === de ? s1.NONE : s1.BROWSER_DEFAULT_WEBGL;
            s1.pixelStorei(s1.UNPACK_FLIP_Y_WEBGL, S.flipY), s1.pixelStorei(s1.UNPACK_PREMULTIPLY_ALPHA_WEBGL, S.premultiplyAlpha), s1.pixelStorei(s1.UNPACK_ALIGNMENT, S.unpackAlignment), s1.pixelStorei(s1.UNPACK_COLORSPACE_CONVERSION_WEBGL, Le);
            let Ze = b(S) && y(S.image) === !1, se = x(S.image, Ze, !1, h);
            se = rt(S, se);
            let $e = y(se) || o, Oe = r.convert(S.format, S.colorSpace), Ie = r.convert(S.type), Re = I(S.internalFormat, Oe, Ie, S.colorSpace, S.isVideoTexture);
            Ee(ee, S, $e);
            let P, ce = S.mipmaps, ae = o && S.isVideoTexture !== !0, ge = Me.__version === void 0 || j === !0, ue = M(S, se, $e);
            if (S.isDepthTexture) Re = s1.DEPTH_COMPONENT, o ? S.type === xn ? Re = s1.DEPTH_COMPONENT32F : S.type === Ln ? Re = s1.DEPTH_COMPONENT24 : S.type === ii ? Re = s1.DEPTH24_STENCIL8 : Re = s1.DEPTH_COMPONENT16 : S.type === xn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), S.format === si && Re === s1.DEPTH_COMPONENT && S.type !== Wc && S.type !== Ln && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), S.type = Ln, Ie = r.convert(S.type)), S.format === Yi && Re === s1.DEPTH_COMPONENT && (Re = s1.DEPTH_STENCIL, S.type !== ii && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), S.type = ii, Ie = r.convert(S.type))), ge && (ae ? t.texStorage2D(s1.TEXTURE_2D, 1, Re, se.width, se.height) : t.texImage2D(s1.TEXTURE_2D, 0, Re, se.width, se.height, 0, Oe, Ie, null));
            else if (S.isDataTexture) if (ce.length > 0 && $e) {
                ae && ge && t.texStorage2D(s1.TEXTURE_2D, ue, Re, ce[0].width, ce[0].height);
                for(let Q = 0, be = ce.length; Q < be; Q++)P = ce[Q], ae ? t.texSubImage2D(s1.TEXTURE_2D, Q, 0, 0, P.width, P.height, Oe, Ie, P.data) : t.texImage2D(s1.TEXTURE_2D, Q, Re, P.width, P.height, 0, Oe, Ie, P.data);
                S.generateMipmaps = !1;
            } else ae ? (ge && t.texStorage2D(s1.TEXTURE_2D, ue, Re, se.width, se.height), t.texSubImage2D(s1.TEXTURE_2D, 0, 0, 0, se.width, se.height, Oe, Ie, se.data)) : t.texImage2D(s1.TEXTURE_2D, 0, Re, se.width, se.height, 0, Oe, Ie, se.data);
            else if (S.isCompressedTexture) if (S.isCompressedArrayTexture) {
                ae && ge && t.texStorage3D(s1.TEXTURE_2D_ARRAY, ue, Re, ce[0].width, ce[0].height, se.depth);
                for(let Q = 0, be = ce.length; Q < be; Q++)P = ce[Q], S.format !== Wt ? Oe !== null ? ae ? t.compressedTexSubImage3D(s1.TEXTURE_2D_ARRAY, Q, 0, 0, 0, P.width, P.height, se.depth, Oe, P.data, 0, 0) : t.compressedTexImage3D(s1.TEXTURE_2D_ARRAY, Q, Re, P.width, P.height, se.depth, 0, P.data, 0, 0) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : ae ? t.texSubImage3D(s1.TEXTURE_2D_ARRAY, Q, 0, 0, 0, P.width, P.height, se.depth, Oe, Ie, P.data) : t.texImage3D(s1.TEXTURE_2D_ARRAY, Q, Re, P.width, P.height, se.depth, 0, Oe, Ie, P.data);
            } else {
                ae && ge && t.texStorage2D(s1.TEXTURE_2D, ue, Re, ce[0].width, ce[0].height);
                for(let Q = 0, be = ce.length; Q < be; Q++)P = ce[Q], S.format !== Wt ? Oe !== null ? ae ? t.compressedTexSubImage2D(s1.TEXTURE_2D, Q, 0, 0, P.width, P.height, Oe, P.data) : t.compressedTexImage2D(s1.TEXTURE_2D, Q, Re, P.width, P.height, 0, P.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : ae ? t.texSubImage2D(s1.TEXTURE_2D, Q, 0, 0, P.width, P.height, Oe, Ie, P.data) : t.texImage2D(s1.TEXTURE_2D, Q, Re, P.width, P.height, 0, Oe, Ie, P.data);
            }
            else if (S.isDataArrayTexture) ae ? (ge && t.texStorage3D(s1.TEXTURE_2D_ARRAY, ue, Re, se.width, se.height, se.depth), t.texSubImage3D(s1.TEXTURE_2D_ARRAY, 0, 0, 0, 0, se.width, se.height, se.depth, Oe, Ie, se.data)) : t.texImage3D(s1.TEXTURE_2D_ARRAY, 0, Re, se.width, se.height, se.depth, 0, Oe, Ie, se.data);
            else if (S.isData3DTexture) ae ? (ge && t.texStorage3D(s1.TEXTURE_3D, ue, Re, se.width, se.height, se.depth), t.texSubImage3D(s1.TEXTURE_3D, 0, 0, 0, 0, se.width, se.height, se.depth, Oe, Ie, se.data)) : t.texImage3D(s1.TEXTURE_3D, 0, Re, se.width, se.height, se.depth, 0, Oe, Ie, se.data);
            else if (S.isFramebufferTexture) {
                if (ge) if (ae) t.texStorage2D(s1.TEXTURE_2D, ue, Re, se.width, se.height);
                else {
                    let Q = se.width, be = se.height;
                    for(let Fe = 0; Fe < ue; Fe++)t.texImage2D(s1.TEXTURE_2D, Fe, Re, Q, be, 0, Oe, Ie, null), Q >>= 1, be >>= 1;
                }
            } else if (ce.length > 0 && $e) {
                ae && ge && t.texStorage2D(s1.TEXTURE_2D, ue, Re, ce[0].width, ce[0].height);
                for(let Q = 0, be = ce.length; Q < be; Q++)P = ce[Q], ae ? t.texSubImage2D(s1.TEXTURE_2D, Q, 0, 0, Oe, Ie, P) : t.texImage2D(s1.TEXTURE_2D, Q, Re, Oe, Ie, P);
                S.generateMipmaps = !1;
            } else ae ? (ge && t.texStorage2D(s1.TEXTURE_2D, ue, Re, se.width, se.height), t.texSubImage2D(s1.TEXTURE_2D, 0, 0, 0, Oe, Ie, se)) : t.texImage2D(s1.TEXTURE_2D, 0, Re, Oe, Ie, se);
            w(S, $e) && R(ee), Me.__version = te.version, S.onUpdate && S.onUpdate(S);
        }
        C.__version = S.version;
    }
    function it(C, S, B) {
        if (S.image.length !== 6) return;
        let ee = Te(C, S), j = S.source;
        t.bindTexture(s1.TEXTURE_CUBE_MAP, C.__webglTexture, s1.TEXTURE0 + B);
        let te = n.get(j);
        if (j.version !== te.__version || ee === !0) {
            t.activeTexture(s1.TEXTURE0 + B);
            let Me = Qe.getPrimaries(Qe.workingColorSpace), re = S.colorSpace === Xt ? null : Qe.getPrimaries(S.colorSpace), de = S.colorSpace === Xt || Me === re ? s1.NONE : s1.BROWSER_DEFAULT_WEBGL;
            s1.pixelStorei(s1.UNPACK_FLIP_Y_WEBGL, S.flipY), s1.pixelStorei(s1.UNPACK_PREMULTIPLY_ALPHA_WEBGL, S.premultiplyAlpha), s1.pixelStorei(s1.UNPACK_ALIGNMENT, S.unpackAlignment), s1.pixelStorei(s1.UNPACK_COLORSPACE_CONVERSION_WEBGL, de);
            let Le = S.isCompressedTexture || S.image[0].isCompressedTexture, Ze = S.image[0] && S.image[0].isDataTexture, se = [];
            for(let Q = 0; Q < 6; Q++)!Le && !Ze ? se[Q] = x(S.image[Q], !1, !0, l) : se[Q] = Ze ? S.image[Q].image : S.image[Q], se[Q] = rt(S, se[Q]);
            let $e = se[0], Oe = y($e) || o, Ie = r.convert(S.format, S.colorSpace), Re = r.convert(S.type), P = I(S.internalFormat, Ie, Re, S.colorSpace), ce = o && S.isVideoTexture !== !0, ae = te.__version === void 0 || ee === !0, ge = M(S, $e, Oe);
            Ee(s1.TEXTURE_CUBE_MAP, S, Oe);
            let ue;
            if (Le) {
                ce && ae && t.texStorage2D(s1.TEXTURE_CUBE_MAP, ge, P, $e.width, $e.height);
                for(let Q = 0; Q < 6; Q++){
                    ue = se[Q].mipmaps;
                    for(let be = 0; be < ue.length; be++){
                        let Fe = ue[be];
                        S.format !== Wt ? Ie !== null ? ce ? t.compressedTexSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be, 0, 0, Fe.width, Fe.height, Ie, Fe.data) : t.compressedTexImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be, P, Fe.width, Fe.height, 0, Fe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : ce ? t.texSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be, 0, 0, Fe.width, Fe.height, Ie, Re, Fe.data) : t.texImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be, P, Fe.width, Fe.height, 0, Ie, Re, Fe.data);
                    }
                }
            } else {
                ue = S.mipmaps, ce && ae && (ue.length > 0 && ge++, t.texStorage2D(s1.TEXTURE_CUBE_MAP, ge, P, se[0].width, se[0].height));
                for(let Q = 0; Q < 6; Q++)if (Ze) {
                    ce ? t.texSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, 0, 0, 0, se[Q].width, se[Q].height, Ie, Re, se[Q].data) : t.texImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, 0, P, se[Q].width, se[Q].height, 0, Ie, Re, se[Q].data);
                    for(let be = 0; be < ue.length; be++){
                        let At = ue[be].image[Q].image;
                        ce ? t.texSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be + 1, 0, 0, At.width, At.height, Ie, Re, At.data) : t.texImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be + 1, P, At.width, At.height, 0, Ie, Re, At.data);
                    }
                } else {
                    ce ? t.texSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, 0, 0, 0, Ie, Re, se[Q]) : t.texImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, 0, P, Ie, Re, se[Q]);
                    for(let be = 0; be < ue.length; be++){
                        let Fe = ue[be];
                        ce ? t.texSubImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be + 1, 0, 0, Ie, Re, Fe.image[Q]) : t.texImage2D(s1.TEXTURE_CUBE_MAP_POSITIVE_X + Q, be + 1, P, Ie, Re, Fe.image[Q]);
                    }
                }
            }
            w(S, Oe) && R(s1.TEXTURE_CUBE_MAP), te.__version = j.version, S.onUpdate && S.onUpdate(S);
        }
        C.__version = S.version;
    }
    function Ce(C, S, B, ee, j, te) {
        let Me = r.convert(B.format, B.colorSpace), re = r.convert(B.type), de = I(B.internalFormat, Me, re, B.colorSpace);
        if (!n.get(S).__hasExternalTextures) {
            let Ze = Math.max(1, S.width >> te), se = Math.max(1, S.height >> te);
            j === s1.TEXTURE_3D || j === s1.TEXTURE_2D_ARRAY ? t.texImage3D(j, te, de, Ze, se, S.depth, 0, Me, re, null) : t.texImage2D(j, te, de, Ze, se, 0, Me, re, null);
        }
        t.bindFramebuffer(s1.FRAMEBUFFER, C), Ne(S) ? d.framebufferTexture2DMultisampleEXT(s1.FRAMEBUFFER, ee, j, n.get(B).__webglTexture, 0, ye(S)) : (j === s1.TEXTURE_2D || j >= s1.TEXTURE_CUBE_MAP_POSITIVE_X && j <= s1.TEXTURE_CUBE_MAP_NEGATIVE_Z) && s1.framebufferTexture2D(s1.FRAMEBUFFER, ee, j, n.get(B).__webglTexture, te), t.bindFramebuffer(s1.FRAMEBUFFER, null);
    }
    function L(C, S, B) {
        if (s1.bindRenderbuffer(s1.RENDERBUFFER, C), S.depthBuffer && !S.stencilBuffer) {
            let ee = o === !0 ? s1.DEPTH_COMPONENT24 : s1.DEPTH_COMPONENT16;
            if (B || Ne(S)) {
                let j = S.depthTexture;
                j && j.isDepthTexture && (j.type === xn ? ee = s1.DEPTH_COMPONENT32F : j.type === Ln && (ee = s1.DEPTH_COMPONENT24));
                let te = ye(S);
                Ne(S) ? d.renderbufferStorageMultisampleEXT(s1.RENDERBUFFER, te, ee, S.width, S.height) : s1.renderbufferStorageMultisample(s1.RENDERBUFFER, te, ee, S.width, S.height);
            } else s1.renderbufferStorage(s1.RENDERBUFFER, ee, S.width, S.height);
            s1.framebufferRenderbuffer(s1.FRAMEBUFFER, s1.DEPTH_ATTACHMENT, s1.RENDERBUFFER, C);
        } else if (S.depthBuffer && S.stencilBuffer) {
            let ee = ye(S);
            B && Ne(S) === !1 ? s1.renderbufferStorageMultisample(s1.RENDERBUFFER, ee, s1.DEPTH24_STENCIL8, S.width, S.height) : Ne(S) ? d.renderbufferStorageMultisampleEXT(s1.RENDERBUFFER, ee, s1.DEPTH24_STENCIL8, S.width, S.height) : s1.renderbufferStorage(s1.RENDERBUFFER, s1.DEPTH_STENCIL, S.width, S.height), s1.framebufferRenderbuffer(s1.FRAMEBUFFER, s1.DEPTH_STENCIL_ATTACHMENT, s1.RENDERBUFFER, C);
        } else {
            let ee = S.isWebGLMultipleRenderTargets === !0 ? S.texture : [
                S.texture
            ];
            for(let j = 0; j < ee.length; j++){
                let te = ee[j], Me = r.convert(te.format, te.colorSpace), re = r.convert(te.type), de = I(te.internalFormat, Me, re, te.colorSpace), Le = ye(S);
                B && Ne(S) === !1 ? s1.renderbufferStorageMultisample(s1.RENDERBUFFER, Le, de, S.width, S.height) : Ne(S) ? d.renderbufferStorageMultisampleEXT(s1.RENDERBUFFER, Le, de, S.width, S.height) : s1.renderbufferStorage(s1.RENDERBUFFER, de, S.width, S.height);
            }
        }
        s1.bindRenderbuffer(s1.RENDERBUFFER, null);
    }
    function oe(C, S) {
        if (S && S.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(s1.FRAMEBUFFER, C), !(S.depthTexture && S.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(S.depthTexture).__webglTexture || S.depthTexture.image.width !== S.width || S.depthTexture.image.height !== S.height) && (S.depthTexture.image.width = S.width, S.depthTexture.image.height = S.height, S.depthTexture.needsUpdate = !0), K(S.depthTexture, 0);
        let ee = n.get(S.depthTexture).__webglTexture, j = ye(S);
        if (S.depthTexture.format === si) Ne(S) ? d.framebufferTexture2DMultisampleEXT(s1.FRAMEBUFFER, s1.DEPTH_ATTACHMENT, s1.TEXTURE_2D, ee, 0, j) : s1.framebufferTexture2D(s1.FRAMEBUFFER, s1.DEPTH_ATTACHMENT, s1.TEXTURE_2D, ee, 0);
        else if (S.depthTexture.format === Yi) Ne(S) ? d.framebufferTexture2DMultisampleEXT(s1.FRAMEBUFFER, s1.DEPTH_STENCIL_ATTACHMENT, s1.TEXTURE_2D, ee, 0, j) : s1.framebufferTexture2D(s1.FRAMEBUFFER, s1.DEPTH_STENCIL_ATTACHMENT, s1.TEXTURE_2D, ee, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function X(C) {
        let S = n.get(C), B = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !S.__autoAllocateDepthBuffer) {
            if (B) throw new Error("target.depthTexture not supported in Cube render targets");
            oe(S.__webglFramebuffer, C);
        } else if (B) {
            S.__webglDepthbuffer = [];
            for(let ee = 0; ee < 6; ee++)t.bindFramebuffer(s1.FRAMEBUFFER, S.__webglFramebuffer[ee]), S.__webglDepthbuffer[ee] = s1.createRenderbuffer(), L(S.__webglDepthbuffer[ee], C, !1);
        } else t.bindFramebuffer(s1.FRAMEBUFFER, S.__webglFramebuffer), S.__webglDepthbuffer = s1.createRenderbuffer(), L(S.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(s1.FRAMEBUFFER, null);
    }
    function ie(C, S, B) {
        let ee = n.get(C);
        S !== void 0 && Ce(ee.__webglFramebuffer, C, C.texture, s1.COLOR_ATTACHMENT0, s1.TEXTURE_2D, 0), B !== void 0 && X(C);
    }
    function J(C) {
        let S = C.texture, B = n.get(C), ee = n.get(S);
        C.addEventListener("dispose", Y), C.isWebGLMultipleRenderTargets !== !0 && (ee.__webglTexture === void 0 && (ee.__webglTexture = s1.createTexture()), ee.__version = S.version, a.memory.textures++);
        let j = C.isWebGLCubeRenderTarget === !0, te = C.isWebGLMultipleRenderTargets === !0, Me = y(C) || o;
        if (j) {
            B.__webglFramebuffer = [];
            for(let re = 0; re < 6; re++)if (o && S.mipmaps && S.mipmaps.length > 0) {
                B.__webglFramebuffer[re] = [];
                for(let de = 0; de < S.mipmaps.length; de++)B.__webglFramebuffer[re][de] = s1.createFramebuffer();
            } else B.__webglFramebuffer[re] = s1.createFramebuffer();
        } else {
            if (o && S.mipmaps && S.mipmaps.length > 0) {
                B.__webglFramebuffer = [];
                for(let re = 0; re < S.mipmaps.length; re++)B.__webglFramebuffer[re] = s1.createFramebuffer();
            } else B.__webglFramebuffer = s1.createFramebuffer();
            if (te) if (i.drawBuffers) {
                let re = C.texture;
                for(let de = 0, Le = re.length; de < Le; de++){
                    let Ze = n.get(re[de]);
                    Ze.__webglTexture === void 0 && (Ze.__webglTexture = s1.createTexture(), a.memory.textures++);
                }
            } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
            if (o && C.samples > 0 && Ne(C) === !1) {
                let re = te ? S : [
                    S
                ];
                B.__webglMultisampledFramebuffer = s1.createFramebuffer(), B.__webglColorRenderbuffer = [], t.bindFramebuffer(s1.FRAMEBUFFER, B.__webglMultisampledFramebuffer);
                for(let de = 0; de < re.length; de++){
                    let Le = re[de];
                    B.__webglColorRenderbuffer[de] = s1.createRenderbuffer(), s1.bindRenderbuffer(s1.RENDERBUFFER, B.__webglColorRenderbuffer[de]);
                    let Ze = r.convert(Le.format, Le.colorSpace), se = r.convert(Le.type), $e = I(Le.internalFormat, Ze, se, Le.colorSpace, C.isXRRenderTarget === !0), Oe = ye(C);
                    s1.renderbufferStorageMultisample(s1.RENDERBUFFER, Oe, $e, C.width, C.height), s1.framebufferRenderbuffer(s1.FRAMEBUFFER, s1.COLOR_ATTACHMENT0 + de, s1.RENDERBUFFER, B.__webglColorRenderbuffer[de]);
                }
                s1.bindRenderbuffer(s1.RENDERBUFFER, null), C.depthBuffer && (B.__webglDepthRenderbuffer = s1.createRenderbuffer(), L(B.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(s1.FRAMEBUFFER, null);
            }
        }
        if (j) {
            t.bindTexture(s1.TEXTURE_CUBE_MAP, ee.__webglTexture), Ee(s1.TEXTURE_CUBE_MAP, S, Me);
            for(let re = 0; re < 6; re++)if (o && S.mipmaps && S.mipmaps.length > 0) for(let de = 0; de < S.mipmaps.length; de++)Ce(B.__webglFramebuffer[re][de], C, S, s1.COLOR_ATTACHMENT0, s1.TEXTURE_CUBE_MAP_POSITIVE_X + re, de);
            else Ce(B.__webglFramebuffer[re], C, S, s1.COLOR_ATTACHMENT0, s1.TEXTURE_CUBE_MAP_POSITIVE_X + re, 0);
            w(S, Me) && R(s1.TEXTURE_CUBE_MAP), t.unbindTexture();
        } else if (te) {
            let re = C.texture;
            for(let de = 0, Le = re.length; de < Le; de++){
                let Ze = re[de], se = n.get(Ze);
                t.bindTexture(s1.TEXTURE_2D, se.__webglTexture), Ee(s1.TEXTURE_2D, Ze, Me), Ce(B.__webglFramebuffer, C, Ze, s1.COLOR_ATTACHMENT0 + de, s1.TEXTURE_2D, 0), w(Ze, Me) && R(s1.TEXTURE_2D);
            }
            t.unbindTexture();
        } else {
            let re = s1.TEXTURE_2D;
            if ((C.isWebGL3DRenderTarget || C.isWebGLArrayRenderTarget) && (o ? re = C.isWebGL3DRenderTarget ? s1.TEXTURE_3D : s1.TEXTURE_2D_ARRAY : console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")), t.bindTexture(re, ee.__webglTexture), Ee(re, S, Me), o && S.mipmaps && S.mipmaps.length > 0) for(let de = 0; de < S.mipmaps.length; de++)Ce(B.__webglFramebuffer[de], C, S, s1.COLOR_ATTACHMENT0, re, de);
            else Ce(B.__webglFramebuffer, C, S, s1.COLOR_ATTACHMENT0, re, 0);
            w(S, Me) && R(re), t.unbindTexture();
        }
        C.depthBuffer && X(C);
    }
    function Se(C) {
        let S = y(C) || o, B = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let ee = 0, j = B.length; ee < j; ee++){
            let te = B[ee];
            if (w(te, S)) {
                let Me = C.isWebGLCubeRenderTarget ? s1.TEXTURE_CUBE_MAP : s1.TEXTURE_2D, re = n.get(te).__webglTexture;
                t.bindTexture(Me, re), R(Me), t.unbindTexture();
            }
        }
    }
    function me(C) {
        if (o && C.samples > 0 && Ne(C) === !1) {
            let S = C.isWebGLMultipleRenderTargets ? C.texture : [
                C.texture
            ], B = C.width, ee = C.height, j = s1.COLOR_BUFFER_BIT, te = [], Me = C.stencilBuffer ? s1.DEPTH_STENCIL_ATTACHMENT : s1.DEPTH_ATTACHMENT, re = n.get(C), de = C.isWebGLMultipleRenderTargets === !0;
            if (de) for(let Le = 0; Le < S.length; Le++)t.bindFramebuffer(s1.FRAMEBUFFER, re.__webglMultisampledFramebuffer), s1.framebufferRenderbuffer(s1.FRAMEBUFFER, s1.COLOR_ATTACHMENT0 + Le, s1.RENDERBUFFER, null), t.bindFramebuffer(s1.FRAMEBUFFER, re.__webglFramebuffer), s1.framebufferTexture2D(s1.DRAW_FRAMEBUFFER, s1.COLOR_ATTACHMENT0 + Le, s1.TEXTURE_2D, null, 0);
            t.bindFramebuffer(s1.READ_FRAMEBUFFER, re.__webglMultisampledFramebuffer), t.bindFramebuffer(s1.DRAW_FRAMEBUFFER, re.__webglFramebuffer);
            for(let Le = 0; Le < S.length; Le++){
                te.push(s1.COLOR_ATTACHMENT0 + Le), C.depthBuffer && te.push(Me);
                let Ze = re.__ignoreDepthValues !== void 0 ? re.__ignoreDepthValues : !1;
                if (Ze === !1 && (C.depthBuffer && (j |= s1.DEPTH_BUFFER_BIT), C.stencilBuffer && (j |= s1.STENCIL_BUFFER_BIT)), de && s1.framebufferRenderbuffer(s1.READ_FRAMEBUFFER, s1.COLOR_ATTACHMENT0, s1.RENDERBUFFER, re.__webglColorRenderbuffer[Le]), Ze === !0 && (s1.invalidateFramebuffer(s1.READ_FRAMEBUFFER, [
                    Me
                ]), s1.invalidateFramebuffer(s1.DRAW_FRAMEBUFFER, [
                    Me
                ])), de) {
                    let se = n.get(S[Le]).__webglTexture;
                    s1.framebufferTexture2D(s1.DRAW_FRAMEBUFFER, s1.COLOR_ATTACHMENT0, s1.TEXTURE_2D, se, 0);
                }
                s1.blitFramebuffer(0, 0, B, ee, 0, 0, B, ee, j, s1.NEAREST), f && s1.invalidateFramebuffer(s1.READ_FRAMEBUFFER, te);
            }
            if (t.bindFramebuffer(s1.READ_FRAMEBUFFER, null), t.bindFramebuffer(s1.DRAW_FRAMEBUFFER, null), de) for(let Le = 0; Le < S.length; Le++){
                t.bindFramebuffer(s1.FRAMEBUFFER, re.__webglMultisampledFramebuffer), s1.framebufferRenderbuffer(s1.FRAMEBUFFER, s1.COLOR_ATTACHMENT0 + Le, s1.RENDERBUFFER, re.__webglColorRenderbuffer[Le]);
                let Ze = n.get(S[Le]).__webglTexture;
                t.bindFramebuffer(s1.FRAMEBUFFER, re.__webglFramebuffer), s1.framebufferTexture2D(s1.DRAW_FRAMEBUFFER, s1.COLOR_ATTACHMENT0 + Le, s1.TEXTURE_2D, Ze, 0);
            }
            t.bindFramebuffer(s1.DRAW_FRAMEBUFFER, re.__webglMultisampledFramebuffer);
        }
    }
    function ye(C) {
        return Math.min(u, C.samples);
    }
    function Ne(C) {
        let S = n.get(C);
        return o && C.samples > 0 && e.has("WEBGL_multisampled_render_to_texture") === !0 && S.__useRenderToTexture !== !1;
    }
    function qe(C) {
        let S = a.render.frame;
        m.get(C) !== S && (m.set(C, S), C.update());
    }
    function rt(C, S) {
        let B = C.colorSpace, ee = C.format, j = C.type;
        return C.isCompressedTexture === !0 || C.isVideoTexture === !0 || C.format === po || B !== Mn && B !== Xt && (Qe.getTransfer(B) === nt ? o === !1 ? e.has("EXT_sRGB") === !0 && ee === Wt ? (C.format = po, C.minFilter = mt, C.generateMipmaps = !1) : S = Xr.sRGBToLinear(S) : (ee !== Wt || j !== On) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture color space:", B)), S;
    }
    this.allocateTextureUnit = ne, this.resetTextureUnits = H, this.setTexture2D = K, this.setTexture2DArray = D, this.setTexture3D = G, this.setTextureCube = he, this.rebindTextures = ie, this.setupRenderTarget = J, this.updateRenderTargetMipmap = Se, this.updateMultisampleRenderTarget = me, this.setupDepthRenderbuffer = X, this.setupFrameBufferTexture = Ce, this.useMultisampledRTT = Ne;
}
function V0(s1, e, t) {
    let n = t.isWebGL2;
    function i(r, a = Xt) {
        let o, c = Qe.getTransfer(a);
        if (r === On) return s1.UNSIGNED_BYTE;
        if (r === fd) return s1.UNSIGNED_SHORT_4_4_4_4;
        if (r === pd) return s1.UNSIGNED_SHORT_5_5_5_1;
        if (r === _f) return s1.BYTE;
        if (r === xf) return s1.SHORT;
        if (r === Wc) return s1.UNSIGNED_SHORT;
        if (r === dd) return s1.INT;
        if (r === Ln) return s1.UNSIGNED_INT;
        if (r === xn) return s1.FLOAT;
        if (r === Ts) return n ? s1.HALF_FLOAT : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === vf) return s1.ALPHA;
        if (r === Wt) return s1.RGBA;
        if (r === yf) return s1.LUMINANCE;
        if (r === Mf) return s1.LUMINANCE_ALPHA;
        if (r === si) return s1.DEPTH_COMPONENT;
        if (r === Yi) return s1.DEPTH_STENCIL;
        if (r === po) return o = e.get("EXT_sRGB"), o !== null ? o.SRGB_ALPHA_EXT : null;
        if (r === Sf) return s1.RED;
        if (r === md) return s1.RED_INTEGER;
        if (r === bf) return s1.RG;
        if (r === gd) return s1.RG_INTEGER;
        if (r === _d) return s1.RGBA_INTEGER;
        if (r === wa || r === Aa || r === Ra || r === Ca) if (c === nt) if (o = e.get("WEBGL_compressed_texture_s3tc_srgb"), o !== null) {
            if (r === wa) return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;
            if (r === Aa) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
            if (r === Ra) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
            if (r === Ca) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else return null;
        else if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === wa) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === Aa) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === Ra) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === Ca) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === Ef) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if (r === ml || r === gl) if (o = e.get("WEBGL_compressed_texture_etc"), o !== null) {
            if (r === ml) return c === nt ? o.COMPRESSED_SRGB8_ETC2 : o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : o.COMPRESSED_RGBA8_ETC2_EAC;
        } else return null;
        if (r === _l || r === xl || r === vl || r === yl || r === Ml || r === Sl || r === bl || r === El || r === Tl || r === wl || r === Al || r === Rl || r === Cl || r === Pl) if (o = e.get("WEBGL_compressed_texture_astc"), o !== null) {
            if (r === _l) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : o.COMPRESSED_RGBA_ASTC_4x4_KHR;
            if (r === xl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : o.COMPRESSED_RGBA_ASTC_5x4_KHR;
            if (r === vl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : o.COMPRESSED_RGBA_ASTC_5x5_KHR;
            if (r === yl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : o.COMPRESSED_RGBA_ASTC_6x5_KHR;
            if (r === Ml) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : o.COMPRESSED_RGBA_ASTC_6x6_KHR;
            if (r === Sl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : o.COMPRESSED_RGBA_ASTC_8x5_KHR;
            if (r === bl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : o.COMPRESSED_RGBA_ASTC_8x6_KHR;
            if (r === El) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : o.COMPRESSED_RGBA_ASTC_8x8_KHR;
            if (r === Tl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : o.COMPRESSED_RGBA_ASTC_10x5_KHR;
            if (r === wl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : o.COMPRESSED_RGBA_ASTC_10x6_KHR;
            if (r === Al) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : o.COMPRESSED_RGBA_ASTC_10x8_KHR;
            if (r === Rl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : o.COMPRESSED_RGBA_ASTC_10x10_KHR;
            if (r === Cl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : o.COMPRESSED_RGBA_ASTC_12x10_KHR;
            if (r === Pl) return c === nt ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : o.COMPRESSED_RGBA_ASTC_12x12_KHR;
        } else return null;
        if (r === Pa || r === Ll || r === Il) if (o = e.get("EXT_texture_compression_bptc"), o !== null) {
            if (r === Pa) return c === nt ? o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : o.COMPRESSED_RGBA_BPTC_UNORM_EXT;
            if (r === Ll) return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
            if (r === Il) return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
        } else return null;
        if (r === Tf || r === Ul || r === Dl || r === Nl) if (o = e.get("EXT_texture_compression_rgtc"), o !== null) {
            if (r === Pa) return o.COMPRESSED_RED_RGTC1_EXT;
            if (r === Ul) return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;
            if (r === Dl) return o.COMPRESSED_RED_GREEN_RGTC2_EXT;
            if (r === Nl) return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
        } else return null;
        return r === ii ? n ? s1.UNSIGNED_INT_24_8 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null) : s1[r] !== void 0 ? s1[r] : null;
    }
    return {
        convert: i
    };
}
var To = class extends yt {
    constructor(e = []){
        super(), this.isArrayCamera = !0, this.cameras = e;
    }
}, ti = class extends Je {
    constructor(){
        super(), this.isGroup = !0, this.type = "Group";
    }
}, k0 = {
    type: "move"
}, Ss = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new ti, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new ti, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new A, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new A), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new ti, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new A, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new A), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    connect(e) {
        if (e && e.hand) {
            let t = this._hand;
            if (t) for (let n of e.hand.values())this._getHandJoint(t, n);
        }
        return this.dispatchEvent({
            type: "connected",
            data: e
        }), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, a = null, o = this._targetRay, c = this._grip, l = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") {
            if (l && e.hand) {
                a = !0;
                for (let _ of e.hand.values()){
                    let g = t.getJointPose(_, n), p = this._getHandJoint(l, _);
                    g !== null && (p.matrix.fromArray(g.transform.matrix), p.matrix.decompose(p.position, p.rotation, p.scale), p.matrixWorldNeedsUpdate = !0, p.jointRadius = g.radius), p.visible = g !== null;
                }
                let h = l.joints["index-finger-tip"], u = l.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
                l.inputState.pinching && d > f + m ? (l.inputState.pinching = !1, this.dispatchEvent({
                    type: "pinchend",
                    handedness: e.handedness,
                    target: this
                })) : !l.inputState.pinching && d <= f - m && (l.inputState.pinching = !0, this.dispatchEvent({
                    type: "pinchstart",
                    handedness: e.handedness,
                    target: this
                }));
            } else c !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (c.matrix.fromArray(r.transform.matrix), c.matrix.decompose(c.position, c.rotation, c.scale), c.matrixWorldNeedsUpdate = !0, r.linearVelocity ? (c.hasLinearVelocity = !0, c.linearVelocity.copy(r.linearVelocity)) : c.hasLinearVelocity = !1, r.angularVelocity ? (c.hasAngularVelocity = !0, c.angularVelocity.copy(r.angularVelocity)) : c.hasAngularVelocity = !1));
            o !== null && (i = t.getPose(e.targetRaySpace, n), i === null && r !== null && (i = r), i !== null && (o.matrix.fromArray(i.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale), o.matrixWorldNeedsUpdate = !0, i.linearVelocity ? (o.hasLinearVelocity = !0, o.linearVelocity.copy(i.linearVelocity)) : o.hasLinearVelocity = !1, i.angularVelocity ? (o.hasAngularVelocity = !0, o.angularVelocity.copy(i.angularVelocity)) : o.hasAngularVelocity = !1, this.dispatchEvent(k0)));
        }
        return o !== null && (o.visible = i !== null), c !== null && (c.visible = r !== null), l !== null && (l.visible = a !== null), this;
    }
    _getHandJoint(e, t) {
        if (e.joints[t.jointName] === void 0) {
            let n = new ti;
            n.matrixAutoUpdate = !1, n.visible = !1, e.joints[t.jointName] = n, e.add(n);
        }
        return e.joints[t.jointName];
    }
}, wo = class extends St {
    constructor(e, t, n, i, r, a, o, c, l, h){
        if (h = h !== void 0 ? h : si, h !== si && h !== Yi) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === si && (n = Ln), n === void 0 && h === Yi && (n = ii), super(null, i, r, a, o, c, h, n, l), this.isDepthTexture = !0, this.image = {
            width: e,
            height: t
        }, this.magFilter = o !== void 0 ? o : pt, this.minFilter = c !== void 0 ? c : pt, this.flipY = !1, this.generateMipmaps = !1, this.compareFunction = null;
    }
    copy(e) {
        return super.copy(e), this.compareFunction = e.compareFunction, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.compareFunction !== null && (t.compareFunction = this.compareFunction), t;
    }
}, Ao = class extends sn {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, a = null, o = "local-floor", c = 1, l = null, h = null, u = null, d = null, f = null, m = null, _ = t.getContextAttributes(), g = null, p = null, v = [], x = [], y = new yt;
        y.layers.enable(1), y.viewport = new je;
        let b = new yt;
        b.layers.enable(2), b.viewport = new je;
        let w = [
            y,
            b
        ], R = new To;
        R.layers.enable(1), R.layers.enable(2);
        let I = null, M = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(D) {
            let G = v[D];
            return G === void 0 && (G = new Ss, v[D] = G), G.getTargetRaySpace();
        }, this.getControllerGrip = function(D) {
            let G = v[D];
            return G === void 0 && (G = new Ss, v[D] = G), G.getGripSpace();
        }, this.getHand = function(D) {
            let G = v[D];
            return G === void 0 && (G = new Ss, v[D] = G), G.getHandSpace();
        };
        function T(D) {
            let G = x.indexOf(D.inputSource);
            if (G === -1) return;
            let he = v[G];
            he !== void 0 && (he.update(D.inputSource, D.frame, l || a), he.dispatchEvent({
                type: D.type,
                data: D.inputSource
            }));
        }
        function O() {
            i.removeEventListener("select", T), i.removeEventListener("selectstart", T), i.removeEventListener("selectend", T), i.removeEventListener("squeeze", T), i.removeEventListener("squeezestart", T), i.removeEventListener("squeezeend", T), i.removeEventListener("end", O), i.removeEventListener("inputsourceschange", Y);
            for(let D = 0; D < v.length; D++){
                let G = x[D];
                G !== null && (x[D] = null, v[D].disconnect(G));
            }
            I = null, M = null, e.setRenderTarget(g), f = null, d = null, u = null, i = null, p = null, K.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(D) {
            r = D, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(D) {
            o = D, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return l || a;
        }, this.setReferenceSpace = function(D) {
            l = D;
        }, this.getBaseLayer = function() {
            return d !== null ? d : f;
        }, this.getBinding = function() {
            return u;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(D) {
            if (i = D, i !== null) {
                if (g = e.getRenderTarget(), i.addEventListener("select", T), i.addEventListener("selectstart", T), i.addEventListener("selectend", T), i.addEventListener("squeeze", T), i.addEventListener("squeezestart", T), i.addEventListener("squeezeend", T), i.addEventListener("end", O), i.addEventListener("inputsourceschange", Y), _.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let G = {
                        antialias: i.renderState.layers === void 0 ? _.antialias : !0,
                        alpha: !0,
                        depth: _.depth,
                        stencil: _.stencil,
                        framebufferScaleFactor: r
                    };
                    f = new XRWebGLLayer(i, t, G), i.updateRenderState({
                        baseLayer: f
                    }), p = new qt(f.framebufferWidth, f.framebufferHeight, {
                        format: Wt,
                        type: On,
                        colorSpace: e.outputColorSpace,
                        stencilBuffer: _.stencil
                    });
                } else {
                    let G = null, he = null, fe = null;
                    _.depth && (fe = _.stencil ? t.DEPTH24_STENCIL8 : t.DEPTH_COMPONENT24, G = _.stencil ? Yi : si, he = _.stencil ? ii : Ln);
                    let _e = {
                        colorFormat: t.RGBA8,
                        depthFormat: fe,
                        scaleFactor: r
                    };
                    u = new XRWebGLBinding(i, t), d = u.createProjectionLayer(_e), i.updateRenderState({
                        layers: [
                            d
                        ]
                    }), p = new qt(d.textureWidth, d.textureHeight, {
                        format: Wt,
                        type: On,
                        depthTexture: new wo(d.textureWidth, d.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, G),
                        stencilBuffer: _.stencil,
                        colorSpace: e.outputColorSpace,
                        samples: _.antialias ? 4 : 0
                    });
                    let we = e.properties.get(p);
                    we.__ignoreDepthValues = d.ignoreDepthValues;
                }
                p.isXRRenderTarget = !0, this.setFoveation(c), l = null, a = await i.requestReferenceSpace(o), K.setContext(i), K.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        }, this.getEnvironmentBlendMode = function() {
            if (i !== null) return i.environmentBlendMode;
        };
        function Y(D) {
            for(let G = 0; G < D.removed.length; G++){
                let he = D.removed[G], fe = x.indexOf(he);
                fe >= 0 && (x[fe] = null, v[fe].disconnect(he));
            }
            for(let G = 0; G < D.added.length; G++){
                let he = D.added[G], fe = x.indexOf(he);
                if (fe === -1) {
                    for(let we = 0; we < v.length; we++)if (we >= x.length) {
                        x.push(he), fe = we;
                        break;
                    } else if (x[we] === null) {
                        x[we] = he, fe = we;
                        break;
                    }
                    if (fe === -1) break;
                }
                let _e = v[fe];
                _e && _e.connect(he);
            }
        }
        let $ = new A, U = new A;
        function z(D, G, he) {
            $.setFromMatrixPosition(G.matrixWorld), U.setFromMatrixPosition(he.matrixWorld);
            let fe = $.distanceTo(U), _e = G.projectionMatrix.elements, we = he.projectionMatrix.elements, Ee = _e[14] / (_e[10] - 1), Te = _e[14] / (_e[10] + 1), Ye = (_e[9] + 1) / _e[5], it = (_e[9] - 1) / _e[5], Ce = (_e[8] - 1) / _e[0], L = (we[8] + 1) / we[0], oe = Ee * Ce, X = Ee * L, ie = fe / (-Ce + L), J = ie * -Ce;
            G.matrixWorld.decompose(D.position, D.quaternion, D.scale), D.translateX(J), D.translateZ(ie), D.matrixWorld.compose(D.position, D.quaternion, D.scale), D.matrixWorldInverse.copy(D.matrixWorld).invert();
            let Se = Ee + ie, me = Te + ie, ye = oe - J, Ne = X + (fe - J), qe = Ye * Te / me * Se, rt = it * Te / me * Se;
            D.projectionMatrix.makePerspective(ye, Ne, qe, rt, Se, me), D.projectionMatrixInverse.copy(D.projectionMatrix).invert();
        }
        function q(D, G) {
            G === null ? D.matrixWorld.copy(D.matrix) : D.matrixWorld.multiplyMatrices(G.matrixWorld, D.matrix), D.matrixWorldInverse.copy(D.matrixWorld).invert();
        }
        this.updateCamera = function(D) {
            if (i === null) return;
            R.near = b.near = y.near = D.near, R.far = b.far = y.far = D.far, (I !== R.near || M !== R.far) && (i.updateRenderState({
                depthNear: R.near,
                depthFar: R.far
            }), I = R.near, M = R.far);
            let G = D.parent, he = R.cameras;
            q(R, G);
            for(let fe = 0; fe < he.length; fe++)q(he[fe], G);
            he.length === 2 ? z(R, y, b) : R.projectionMatrix.copy(y.projectionMatrix), H(D, R, G);
        };
        function H(D, G, he) {
            he === null ? D.matrix.copy(G.matrixWorld) : (D.matrix.copy(he.matrixWorld), D.matrix.invert(), D.matrix.multiply(G.matrixWorld)), D.matrix.decompose(D.position, D.quaternion, D.scale), D.updateMatrixWorld(!0), D.projectionMatrix.copy(G.projectionMatrix), D.projectionMatrixInverse.copy(G.projectionMatrixInverse), D.isPerspectiveCamera && (D.fov = Zi * 2 * Math.atan(1 / D.projectionMatrix.elements[5]), D.zoom = 1);
        }
        this.getCamera = function() {
            return R;
        }, this.getFoveation = function() {
            if (!(d === null && f === null)) return c;
        }, this.setFoveation = function(D) {
            c = D, d !== null && (d.fixedFoveation = D), f !== null && f.fixedFoveation !== void 0 && (f.fixedFoveation = D);
        };
        let ne = null;
        function W(D, G) {
            if (h = G.getViewerPose(l || a), m = G, h !== null) {
                let he = h.views;
                f !== null && (e.setRenderTargetFramebuffer(p, f.framebuffer), e.setRenderTarget(p));
                let fe = !1;
                he.length !== R.cameras.length && (R.cameras.length = 0, fe = !0);
                for(let _e = 0; _e < he.length; _e++){
                    let we = he[_e], Ee = null;
                    if (f !== null) Ee = f.getViewport(we);
                    else {
                        let Ye = u.getViewSubImage(d, we);
                        Ee = Ye.viewport, _e === 0 && (e.setRenderTargetTextures(p, Ye.colorTexture, d.ignoreDepthValues ? void 0 : Ye.depthStencilTexture), e.setRenderTarget(p));
                    }
                    let Te = w[_e];
                    Te === void 0 && (Te = new yt, Te.layers.enable(_e), Te.viewport = new je, w[_e] = Te), Te.matrix.fromArray(we.transform.matrix), Te.matrix.decompose(Te.position, Te.quaternion, Te.scale), Te.projectionMatrix.fromArray(we.projectionMatrix), Te.projectionMatrixInverse.copy(Te.projectionMatrix).invert(), Te.viewport.set(Ee.x, Ee.y, Ee.width, Ee.height), _e === 0 && (R.matrix.copy(Te.matrix), R.matrix.decompose(R.position, R.quaternion, R.scale)), fe === !0 && R.cameras.push(Te);
                }
            }
            for(let he = 0; he < v.length; he++){
                let fe = x[he], _e = v[he];
                fe !== null && _e !== void 0 && _e.update(fe, G, l || a);
            }
            ne && ne(D, G), G.detectedPlanes && n.dispatchEvent({
                type: "planesdetected",
                data: G
            }), m = null;
        }
        let K = new Ed;
        K.setAnimationLoop(W), this.setAnimationLoop = function(D) {
            ne = D;
        }, this.dispose = function() {};
    }
};
function H0(s1, e) {
    function t(g, p) {
        g.matrixAutoUpdate === !0 && g.updateMatrix(), p.value.copy(g.matrix);
    }
    function n(g, p) {
        p.color.getRGB(g.fogColor.value, bd(s1)), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function i(g, p, v, x, y) {
        p.isMeshBasicMaterial || p.isMeshLambertMaterial ? r(g, p) : p.isMeshToonMaterial ? (r(g, p), u(g, p)) : p.isMeshPhongMaterial ? (r(g, p), h(g, p)) : p.isMeshStandardMaterial ? (r(g, p), d(g, p), p.isMeshPhysicalMaterial && f(g, p, y)) : p.isMeshMatcapMaterial ? (r(g, p), m(g, p)) : p.isMeshDepthMaterial ? r(g, p) : p.isMeshDistanceMaterial ? (r(g, p), _(g, p)) : p.isMeshNormalMaterial ? r(g, p) : p.isLineBasicMaterial ? (a(g, p), p.isLineDashedMaterial && o(g, p)) : p.isPointsMaterial ? c(g, p, v, x) : p.isSpriteMaterial ? l(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function r(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map, t(p.map, g.mapTransform)), p.alphaMap && (g.alphaMap.value = p.alphaMap, t(p.alphaMap, g.alphaMapTransform)), p.bumpMap && (g.bumpMap.value = p.bumpMap, t(p.bumpMap, g.bumpMapTransform), g.bumpScale.value = p.bumpScale, p.side === Ft && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, t(p.normalMap, g.normalMapTransform), g.normalScale.value.copy(p.normalScale), p.side === Ft && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, t(p.displacementMap, g.displacementMapTransform), g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap, t(p.emissiveMap, g.emissiveMapTransform)), p.specularMap && (g.specularMap.value = p.specularMap, t(p.specularMap, g.specularMapTransform)), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let v = e.get(p).envMap;
        if (v && (g.envMap.value = v, g.flipEnvMap.value = v.isCubeTexture && v.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap) {
            g.lightMap.value = p.lightMap;
            let x = s1._useLegacyLights === !0 ? Math.PI : 1;
            g.lightMapIntensity.value = p.lightMapIntensity * x, t(p.lightMap, g.lightMapTransform);
        }
        p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity, t(p.aoMap, g.aoMapTransform));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, p.map && (g.map.value = p.map, t(p.map, g.mapTransform));
    }
    function o(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function c(g, p, v, x) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * v, g.scale.value = x * .5, p.map && (g.map.value = p.map, t(p.map, g.uvTransform)), p.alphaMap && (g.alphaMap.value = p.alphaMap, t(p.alphaMap, g.alphaMapTransform)), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
    }
    function l(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map, t(p.map, g.mapTransform)), p.alphaMap && (g.alphaMap.value = p.alphaMap, t(p.alphaMap, g.alphaMapTransform)), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
    }
    function h(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4);
    }
    function u(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap);
    }
    function d(g, p) {
        g.metalness.value = p.metalness, p.metalnessMap && (g.metalnessMap.value = p.metalnessMap, t(p.metalnessMap, g.metalnessMapTransform)), g.roughness.value = p.roughness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap, t(p.roughnessMap, g.roughnessMapTransform)), e.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function f(g, p, v) {
        g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap, t(p.sheenColorMap, g.sheenColorMapTransform)), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap, t(p.sheenRoughnessMap, g.sheenRoughnessMapTransform))), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap, t(p.clearcoatMap, g.clearcoatMapTransform)), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap, t(p.clearcoatRoughnessMap, g.clearcoatRoughnessMapTransform)), p.clearcoatNormalMap && (g.clearcoatNormalMap.value = p.clearcoatNormalMap, t(p.clearcoatNormalMap, g.clearcoatNormalMapTransform), g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), p.side === Ft && g.clearcoatNormalScale.value.negate())), p.iridescence > 0 && (g.iridescence.value = p.iridescence, g.iridescenceIOR.value = p.iridescenceIOR, g.iridescenceThicknessMinimum.value = p.iridescenceThicknessRange[0], g.iridescenceThicknessMaximum.value = p.iridescenceThicknessRange[1], p.iridescenceMap && (g.iridescenceMap.value = p.iridescenceMap, t(p.iridescenceMap, g.iridescenceMapTransform)), p.iridescenceThicknessMap && (g.iridescenceThicknessMap.value = p.iridescenceThicknessMap, t(p.iridescenceThicknessMap, g.iridescenceThicknessMapTransform))), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = v.texture, g.transmissionSamplerSize.value.set(v.width, v.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap, t(p.transmissionMap, g.transmissionMapTransform)), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap, t(p.thicknessMap, g.thicknessMapTransform)), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), p.anisotropy > 0 && (g.anisotropyVector.value.set(p.anisotropy * Math.cos(p.anisotropyRotation), p.anisotropy * Math.sin(p.anisotropyRotation)), p.anisotropyMap && (g.anisotropyMap.value = p.anisotropyMap, t(p.anisotropyMap, g.anisotropyMapTransform))), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap, t(p.specularColorMap, g.specularColorMapTransform)), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap, t(p.specularIntensityMap, g.specularIntensityMapTransform));
    }
    function m(g, p) {
        p.matcap && (g.matcap.value = p.matcap);
    }
    function _(g, p) {
        let v = e.get(p).light;
        g.referencePosition.value.setFromMatrixPosition(v.matrixWorld), g.nearDistance.value = v.shadow.camera.near, g.farDistance.value = v.shadow.camera.far;
    }
    return {
        refreshFogUniforms: n,
        refreshMaterialUniforms: i
    };
}
function G0(s1, e, t, n) {
    let i = {}, r = {}, a = [], o = t.isWebGL2 ? s1.getParameter(s1.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
    function c(v, x) {
        let y = x.program;
        n.uniformBlockBinding(v, y);
    }
    function l(v, x) {
        let y = i[v.id];
        y === void 0 && (m(v), y = h(v), i[v.id] = y, v.addEventListener("dispose", g));
        let b = x.program;
        n.updateUBOMapping(v, b);
        let w = e.render.frame;
        r[v.id] !== w && (d(v), r[v.id] = w);
    }
    function h(v) {
        let x = u();
        v.__bindingPointIndex = x;
        let y = s1.createBuffer(), b = v.__size, w = v.usage;
        return s1.bindBuffer(s1.UNIFORM_BUFFER, y), s1.bufferData(s1.UNIFORM_BUFFER, b, w), s1.bindBuffer(s1.UNIFORM_BUFFER, null), s1.bindBufferBase(s1.UNIFORM_BUFFER, x, y), y;
    }
    function u() {
        for(let v = 0; v < o; v++)if (a.indexOf(v) === -1) return a.push(v), v;
        return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
    }
    function d(v) {
        let x = i[v.id], y = v.uniforms, b = v.__cache;
        s1.bindBuffer(s1.UNIFORM_BUFFER, x);
        for(let w = 0, R = y.length; w < R; w++){
            let I = y[w];
            if (f(I, w, b) === !0) {
                let M = I.__offset, T = Array.isArray(I.value) ? I.value : [
                    I.value
                ], O = 0;
                for(let Y = 0; Y < T.length; Y++){
                    let $ = T[Y], U = _($);
                    typeof $ == "number" ? (I.__data[0] = $, s1.bufferSubData(s1.UNIFORM_BUFFER, M + O, I.__data)) : $.isMatrix3 ? (I.__data[0] = $.elements[0], I.__data[1] = $.elements[1], I.__data[2] = $.elements[2], I.__data[3] = $.elements[0], I.__data[4] = $.elements[3], I.__data[5] = $.elements[4], I.__data[6] = $.elements[5], I.__data[7] = $.elements[0], I.__data[8] = $.elements[6], I.__data[9] = $.elements[7], I.__data[10] = $.elements[8], I.__data[11] = $.elements[0]) : ($.toArray(I.__data, O), O += U.storage / Float32Array.BYTES_PER_ELEMENT);
                }
                s1.bufferSubData(s1.UNIFORM_BUFFER, M, I.__data);
            }
        }
        s1.bindBuffer(s1.UNIFORM_BUFFER, null);
    }
    function f(v, x, y) {
        let b = v.value;
        if (y[x] === void 0) {
            if (typeof b == "number") y[x] = b;
            else {
                let w = Array.isArray(b) ? b : [
                    b
                ], R = [];
                for(let I = 0; I < w.length; I++)R.push(w[I].clone());
                y[x] = R;
            }
            return !0;
        } else if (typeof b == "number") {
            if (y[x] !== b) return y[x] = b, !0;
        } else {
            let w = Array.isArray(y[x]) ? y[x] : [
                y[x]
            ], R = Array.isArray(b) ? b : [
                b
            ];
            for(let I = 0; I < w.length; I++){
                let M = w[I];
                if (M.equals(R[I]) === !1) return M.copy(R[I]), !0;
            }
        }
        return !1;
    }
    function m(v) {
        let x = v.uniforms, y = 0, b = 16, w = 0;
        for(let R = 0, I = x.length; R < I; R++){
            let M = x[R], T = {
                boundary: 0,
                storage: 0
            }, O = Array.isArray(M.value) ? M.value : [
                M.value
            ];
            for(let Y = 0, $ = O.length; Y < $; Y++){
                let U = O[Y], z = _(U);
                T.boundary += z.boundary, T.storage += z.storage;
            }
            if (M.__data = new Float32Array(T.storage / Float32Array.BYTES_PER_ELEMENT), M.__offset = y, R > 0) {
                w = y % b;
                let Y = b - w;
                w !== 0 && Y - T.boundary < 0 && (y += b - w, M.__offset = y);
            }
            y += T.storage;
        }
        return w = y % b, w > 0 && (y += b - w), v.__size = y, v.__cache = {}, this;
    }
    function _(v) {
        let x = {
            boundary: 0,
            storage: 0
        };
        return typeof v == "number" ? (x.boundary = 4, x.storage = 4) : v.isVector2 ? (x.boundary = 8, x.storage = 8) : v.isVector3 || v.isColor ? (x.boundary = 16, x.storage = 12) : v.isVector4 ? (x.boundary = 16, x.storage = 16) : v.isMatrix3 ? (x.boundary = 48, x.storage = 48) : v.isMatrix4 ? (x.boundary = 64, x.storage = 64) : v.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", v), x;
    }
    function g(v) {
        let x = v.target;
        x.removeEventListener("dispose", g);
        let y = a.indexOf(x.__bindingPointIndex);
        a.splice(y, 1), s1.deleteBuffer(i[x.id]), delete i[x.id], delete r[x.id];
    }
    function p() {
        for(let v in i)s1.deleteBuffer(i[v]);
        a = [], i = {}, r = {};
    }
    return {
        bind: c,
        update: l,
        dispose: p
    };
}
var Ro = class {
    constructor(e = {}){
        let { canvas: t = tp() , context: n = null , depth: i = !0 , stencil: r = !0 , alpha: a = !1 , antialias: o = !1 , premultipliedAlpha: c = !0 , preserveDrawingBuffer: l = !1 , powerPreference: h = "default" , failIfMajorPerformanceCaveat: u = !1  } = e;
        this.isWebGLRenderer = !0;
        let d;
        n !== null ? d = n.getContextAttributes().alpha : d = a;
        let f = new Uint32Array(4), m = new Int32Array(4), _ = null, g = null, p = [], v = [];
        this.domElement = t, this.debug = {
            checkShaderErrors: !0,
            onShaderError: null
        }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this._outputColorSpace = vt, this._useLegacyLights = !1, this.toneMapping = Nn, this.toneMappingExposure = 1;
        let x = this, y = !1, b = 0, w = 0, R = null, I = -1, M = null, T = new je, O = new je, Y = null, $ = new pe(0), U = 0, z = t.width, q = t.height, H = 1, ne = null, W = null, K = new je(0, 0, z, q), D = new je(0, 0, z, q), G = !1, he = new Ps, fe = !1, _e = !1, we = null, Ee = new ze, Te = new Z, Ye = new A, it = {
            background: null,
            fog: null,
            environment: null,
            overrideMaterial: null,
            isScene: !0
        };
        function Ce() {
            return R === null ? H : 1;
        }
        let L = n;
        function oe(E, N) {
            for(let V = 0; V < E.length; V++){
                let F = E[V], k = t.getContext(F, N);
                if (k !== null) return k;
            }
            return null;
        }
        try {
            let E = {
                alpha: !0,
                depth: i,
                stencil: r,
                antialias: o,
                premultipliedAlpha: c,
                preserveDrawingBuffer: l,
                powerPreference: h,
                failIfMajorPerformanceCaveat: u
            };
            if ("setAttribute" in t && t.setAttribute("data-engine", `three.js r${Hc}`), t.addEventListener("webglcontextlost", ce, !1), t.addEventListener("webglcontextrestored", ae, !1), t.addEventListener("webglcontextcreationerror", ge, !1), L === null) {
                let N = [
                    "webgl2",
                    "webgl",
                    "experimental-webgl"
                ];
                if (x.isWebGL1Renderer === !0 && N.shift(), L = oe(N, E), L === null) throw oe(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            }
            typeof WebGLRenderingContext < "u" && L instanceof WebGLRenderingContext && console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."), L.getShaderPrecisionFormat === void 0 && (L.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                };
            });
        } catch (E) {
            throw console.error("THREE.WebGLRenderer: " + E.message), E;
        }
        let X, ie, J, Se, me, ye, Ne, qe, rt, C, S, B, ee, j, te, Me, re, de, Le, Ze, se, $e, Oe, Ie;
        function Re() {
            X = new h_(L), ie = new s_(L, X, e), X.init(ie), $e = new V0(L, X, ie), J = new B0(L, X, ie), Se = new f_(L), me = new w0, ye = new z0(L, X, J, me, ie, $e, Se), Ne = new a_(x), qe = new l_(x), rt = new bp(L, ie), Oe = new n_(L, X, rt, ie), C = new u_(L, rt, Se, Oe), S = new __(L, C, rt, Se), Le = new g_(L, ie, ye), Me = new r_(me), B = new T0(x, Ne, qe, X, ie, Oe, Me), ee = new H0(x, me), j = new R0, te = new D0(X, ie), de = new t_(x, Ne, qe, J, S, d, c), re = new F0(x, S, ie), Ie = new G0(L, Se, ie, J), Ze = new i_(L, X, Se, ie), se = new d_(L, X, Se, ie), Se.programs = B.programs, x.capabilities = ie, x.extensions = X, x.properties = me, x.renderLists = j, x.shadowMap = re, x.state = J, x.info = Se;
        }
        Re();
        let P = new Ao(x, L);
        this.xr = P, this.getContext = function() {
            return L;
        }, this.getContextAttributes = function() {
            return L.getContextAttributes();
        }, this.forceContextLoss = function() {
            let E = X.get("WEBGL_lose_context");
            E && E.loseContext();
        }, this.forceContextRestore = function() {
            let E = X.get("WEBGL_lose_context");
            E && E.restoreContext();
        }, this.getPixelRatio = function() {
            return H;
        }, this.setPixelRatio = function(E) {
            E !== void 0 && (H = E, this.setSize(z, q, !1));
        }, this.getSize = function(E) {
            return E.set(z, q);
        }, this.setSize = function(E, N, V = !0) {
            if (P.isPresenting) {
                console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
                return;
            }
            z = E, q = N, t.width = Math.floor(E * H), t.height = Math.floor(N * H), V === !0 && (t.style.width = E + "px", t.style.height = N + "px"), this.setViewport(0, 0, E, N);
        }, this.getDrawingBufferSize = function(E) {
            return E.set(z * H, q * H).floor();
        }, this.setDrawingBufferSize = function(E, N, V) {
            z = E, q = N, H = V, t.width = Math.floor(E * V), t.height = Math.floor(N * V), this.setViewport(0, 0, E, N);
        }, this.getCurrentViewport = function(E) {
            return E.copy(T);
        }, this.getViewport = function(E) {
            return E.copy(K);
        }, this.setViewport = function(E, N, V, F) {
            E.isVector4 ? K.set(E.x, E.y, E.z, E.w) : K.set(E, N, V, F), J.viewport(T.copy(K).multiplyScalar(H).floor());
        }, this.getScissor = function(E) {
            return E.copy(D);
        }, this.setScissor = function(E, N, V, F) {
            E.isVector4 ? D.set(E.x, E.y, E.z, E.w) : D.set(E, N, V, F), J.scissor(O.copy(D).multiplyScalar(H).floor());
        }, this.getScissorTest = function() {
            return G;
        }, this.setScissorTest = function(E) {
            J.setScissorTest(G = E);
        }, this.setOpaqueSort = function(E) {
            ne = E;
        }, this.setTransparentSort = function(E) {
            W = E;
        }, this.getClearColor = function(E) {
            return E.copy(de.getClearColor());
        }, this.setClearColor = function() {
            de.setClearColor.apply(de, arguments);
        }, this.getClearAlpha = function() {
            return de.getClearAlpha();
        }, this.setClearAlpha = function() {
            de.setClearAlpha.apply(de, arguments);
        }, this.clear = function(E = !0, N = !0, V = !0) {
            let F = 0;
            if (E) {
                let k = !1;
                if (R !== null) {
                    let xe = R.texture.format;
                    k = xe === _d || xe === gd || xe === md;
                }
                if (k) {
                    let xe = R.texture.type, Ae = xe === On || xe === Ln || xe === Wc || xe === ii || xe === fd || xe === pd, Ue = de.getClearColor(), De = de.getClearAlpha(), We = Ue.r, Pe = Ue.g, Ve = Ue.b;
                    Ae ? (f[0] = We, f[1] = Pe, f[2] = Ve, f[3] = De, L.clearBufferuiv(L.COLOR, 0, f)) : (m[0] = We, m[1] = Pe, m[2] = Ve, m[3] = De, L.clearBufferiv(L.COLOR, 0, m));
                } else F |= L.COLOR_BUFFER_BIT;
            }
            N && (F |= L.DEPTH_BUFFER_BIT), V && (F |= L.STENCIL_BUFFER_BIT), L.clear(F);
        }, this.clearColor = function() {
            this.clear(!0, !1, !1);
        }, this.clearDepth = function() {
            this.clear(!1, !0, !1);
        }, this.clearStencil = function() {
            this.clear(!1, !1, !0);
        }, this.dispose = function() {
            t.removeEventListener("webglcontextlost", ce, !1), t.removeEventListener("webglcontextrestored", ae, !1), t.removeEventListener("webglcontextcreationerror", ge, !1), j.dispose(), te.dispose(), me.dispose(), Ne.dispose(), qe.dispose(), S.dispose(), Oe.dispose(), Ie.dispose(), B.dispose(), P.dispose(), P.removeEventListener("sessionstart", tt), P.removeEventListener("sessionend", tn), we && (we.dispose(), we = null), Rt.stop();
        };
        function ce(E) {
            E.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), y = !0;
        }
        function ae() {
            console.log("THREE.WebGLRenderer: Context Restored."), y = !1;
            let E = Se.autoReset, N = re.enabled, V = re.autoUpdate, F = re.needsUpdate, k = re.type;
            Re(), Se.autoReset = E, re.enabled = N, re.autoUpdate = V, re.needsUpdate = F, re.type = k;
        }
        function ge(E) {
            console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", E.statusMessage);
        }
        function ue(E) {
            let N = E.target;
            N.removeEventListener("dispose", ue), Q(N);
        }
        function Q(E) {
            be(E), me.remove(E);
        }
        function be(E) {
            let N = me.get(E).programs;
            N !== void 0 && (N.forEach(function(V) {
                B.releaseProgram(V);
            }), E.isShaderMaterial && B.releaseShaderCache(E));
        }
        this.renderBufferDirect = function(E, N, V, F, k, xe) {
            N === null && (N = it);
            let Ae = k.isMesh && k.matrixWorld.determinant() < 0, Ue = Fd(E, N, V, F, k);
            J.setMaterial(F, Ae);
            let De = V.index, We = 1;
            if (F.wireframe === !0) {
                if (De = C.getWireframeAttribute(V), De === void 0) return;
                We = 2;
            }
            let Pe = V.drawRange, Ve = V.attributes.position, at = Pe.start * We, lt = (Pe.start + Pe.count) * We;
            xe !== null && (at = Math.max(at, xe.start * We), lt = Math.min(lt, (xe.start + xe.count) * We)), De !== null ? (at = Math.max(at, 0), lt = Math.min(lt, De.count)) : Ve != null && (at = Math.max(at, 0), lt = Math.min(lt, Ve.count));
            let Ht = lt - at;
            if (Ht < 0 || Ht === 1 / 0) return;
            Oe.setup(k, F, Ue, V, De);
            let an, ut = Ze;
            if (De !== null && (an = rt.get(De), ut = se, ut.setIndex(an)), k.isMesh) F.wireframe === !0 ? (J.setLineWidth(F.wireframeLinewidth * Ce()), ut.setMode(L.LINES)) : ut.setMode(L.TRIANGLES);
            else if (k.isLine) {
                let Xe = F.linewidth;
                Xe === void 0 && (Xe = 1), J.setLineWidth(Xe * Ce()), k.isLineSegments ? ut.setMode(L.LINES) : k.isLineLoop ? ut.setMode(L.LINE_LOOP) : ut.setMode(L.LINE_STRIP);
            } else k.isPoints ? ut.setMode(L.POINTS) : k.isSprite && ut.setMode(L.TRIANGLES);
            if (k.isInstancedMesh) ut.renderInstances(at, Ht, k.count);
            else if (V.isInstancedBufferGeometry) {
                let Xe = V._maxInstanceCount !== void 0 ? V._maxInstanceCount : 1 / 0, Sa = Math.min(V.instanceCount, Xe);
                ut.renderInstances(at, Ht, Sa);
            } else ut.render(at, Ht);
        }, this.compile = function(E, N) {
            function V(F, k, xe) {
                F.transparent === !0 && F.side === gn && F.forceSinglePass === !1 ? (F.side = Ft, F.needsUpdate = !0, Hs(F, k, xe), F.side = Bn, F.needsUpdate = !0, Hs(F, k, xe), F.side = gn) : Hs(F, k, xe);
            }
            g = te.get(E), g.init(), v.push(g), E.traverseVisible(function(F) {
                F.isLight && F.layers.test(N.layers) && (g.pushLight(F), F.castShadow && g.pushShadow(F));
            }), g.setupLights(x._useLegacyLights), E.traverse(function(F) {
                let k = F.material;
                if (k) if (Array.isArray(k)) for(let xe = 0; xe < k.length; xe++){
                    let Ae = k[xe];
                    V(Ae, E, F);
                }
                else V(k, E, F);
            }), v.pop(), g = null;
        };
        let Fe = null;
        function At(E) {
            Fe && Fe(E);
        }
        function tt() {
            Rt.stop();
        }
        function tn() {
            Rt.start();
        }
        let Rt = new Ed;
        Rt.setAnimationLoop(At), typeof self < "u" && Rt.setContext(self), this.setAnimationLoop = function(E) {
            Fe = E, P.setAnimationLoop(E), E === null ? Rt.stop() : Rt.start();
        }, P.addEventListener("sessionstart", tt), P.addEventListener("sessionend", tn), this.render = function(E, N) {
            if (N !== void 0 && N.isCamera !== !0) {
                console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                return;
            }
            if (y === !0) return;
            E.matrixWorldAutoUpdate === !0 && E.updateMatrixWorld(), N.parent === null && N.matrixWorldAutoUpdate === !0 && N.updateMatrixWorld(), P.enabled === !0 && P.isPresenting === !0 && (P.cameraAutoUpdate === !0 && P.updateCamera(N), N = P.getCamera()), E.isScene === !0 && E.onBeforeRender(x, E, N, R), g = te.get(E, v.length), g.init(), v.push(g), Ee.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), he.setFromProjectionMatrix(Ee), _e = this.localClippingEnabled, fe = Me.init(this.clippingPlanes, _e), _ = j.get(E, p.length), _.init(), p.push(_), jc(E, N, 0, x.sortObjects), _.finish(), x.sortObjects === !0 && _.sort(ne, W), this.info.render.frame++, fe === !0 && Me.beginShadows();
            let V = g.state.shadowsArray;
            if (re.render(V, E, N), fe === !0 && Me.endShadows(), this.info.autoReset === !0 && this.info.reset(), de.render(_, E), g.setupLights(x._useLegacyLights), N.isArrayCamera) {
                let F = N.cameras;
                for(let k = 0, xe = F.length; k < xe; k++){
                    let Ae = F[k];
                    el(_, E, Ae, Ae.viewport);
                }
            } else el(_, E, N);
            R !== null && (ye.updateMultisampleRenderTarget(R), ye.updateRenderTargetMipmap(R)), E.isScene === !0 && E.onAfterRender(x, E, N), Oe.resetDefaultState(), I = -1, M = null, v.pop(), v.length > 0 ? g = v[v.length - 1] : g = null, p.pop(), p.length > 0 ? _ = p[p.length - 1] : _ = null;
        };
        function jc(E, N, V, F) {
            if (E.visible === !1) return;
            if (E.layers.test(N.layers)) {
                if (E.isGroup) V = E.renderOrder;
                else if (E.isLOD) E.autoUpdate === !0 && E.update(N);
                else if (E.isLight) g.pushLight(E), E.castShadow && g.pushShadow(E);
                else if (E.isSprite) {
                    if (!E.frustumCulled || he.intersectsSprite(E)) {
                        F && Ye.setFromMatrixPosition(E.matrixWorld).applyMatrix4(Ee);
                        let Ae = S.update(E), Ue = E.material;
                        Ue.visible && _.push(E, Ae, Ue, V, Ye.z, null);
                    }
                } else if ((E.isMesh || E.isLine || E.isPoints) && (!E.frustumCulled || he.intersectsObject(E))) {
                    let Ae = S.update(E), Ue = E.material;
                    if (F && (E.boundingSphere !== void 0 ? (E.boundingSphere === null && E.computeBoundingSphere(), Ye.copy(E.boundingSphere.center)) : (Ae.boundingSphere === null && Ae.computeBoundingSphere(), Ye.copy(Ae.boundingSphere.center)), Ye.applyMatrix4(E.matrixWorld).applyMatrix4(Ee)), Array.isArray(Ue)) {
                        let De = Ae.groups;
                        for(let We = 0, Pe = De.length; We < Pe; We++){
                            let Ve = De[We], at = Ue[Ve.materialIndex];
                            at && at.visible && _.push(E, Ae, at, V, Ye.z, Ve);
                        }
                    } else Ue.visible && _.push(E, Ae, Ue, V, Ye.z, null);
                }
            }
            let xe = E.children;
            for(let Ae = 0, Ue = xe.length; Ae < Ue; Ae++)jc(xe[Ae], N, V, F);
        }
        function el(E, N, V, F) {
            let k = E.opaque, xe = E.transmissive, Ae = E.transparent;
            g.setupLightsView(V), fe === !0 && Me.setGlobalState(x.clippingPlanes, V), xe.length > 0 && Od(k, xe, N, V), F && J.viewport(T.copy(F)), k.length > 0 && ks(k, N, V), xe.length > 0 && ks(xe, N, V), Ae.length > 0 && ks(Ae, N, V), J.buffers.depth.setTest(!0), J.buffers.depth.setMask(!0), J.buffers.color.setMask(!0), J.setPolygonOffset(!1);
        }
        function Od(E, N, V, F) {
            let k = ie.isWebGL2;
            we === null && (we = new qt(1, 1, {
                generateMipmaps: !0,
                type: X.has("EXT_color_buffer_half_float") ? Ts : On,
                minFilter: li,
                samples: k ? 4 : 0
            })), x.getDrawingBufferSize(Te), k ? we.setSize(Te.x, Te.y) : we.setSize(Wr(Te.x), Wr(Te.y));
            let xe = x.getRenderTarget();
            x.setRenderTarget(we), x.getClearColor($), U = x.getClearAlpha(), U < 1 && x.setClearColor(16777215, .5), x.clear();
            let Ae = x.toneMapping;
            x.toneMapping = Nn, ks(E, V, F), ye.updateMultisampleRenderTarget(we), ye.updateRenderTargetMipmap(we);
            let Ue = !1;
            for(let De = 0, We = N.length; De < We; De++){
                let Pe = N[De], Ve = Pe.object, at = Pe.geometry, lt = Pe.material, Ht = Pe.group;
                if (lt.side === gn && Ve.layers.test(F.layers)) {
                    let an = lt.side;
                    lt.side = Ft, lt.needsUpdate = !0, tl(Ve, V, F, at, lt, Ht), lt.side = an, lt.needsUpdate = !0, Ue = !0;
                }
            }
            Ue === !0 && (ye.updateMultisampleRenderTarget(we), ye.updateRenderTargetMipmap(we)), x.setRenderTarget(xe), x.setClearColor($, U), x.toneMapping = Ae;
        }
        function ks(E, N, V) {
            let F = N.isScene === !0 ? N.overrideMaterial : null;
            for(let k = 0, xe = E.length; k < xe; k++){
                let Ae = E[k], Ue = Ae.object, De = Ae.geometry, We = F === null ? Ae.material : F, Pe = Ae.group;
                Ue.layers.test(V.layers) && tl(Ue, N, V, De, We, Pe);
            }
        }
        function tl(E, N, V, F, k, xe) {
            E.onBeforeRender(x, N, V, F, k, xe), E.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse, E.matrixWorld), E.normalMatrix.getNormalMatrix(E.modelViewMatrix), k.onBeforeRender(x, N, V, F, E, xe), k.transparent === !0 && k.side === gn && k.forceSinglePass === !1 ? (k.side = Ft, k.needsUpdate = !0, x.renderBufferDirect(V, N, F, k, E, xe), k.side = Bn, k.needsUpdate = !0, x.renderBufferDirect(V, N, F, k, E, xe), k.side = gn) : x.renderBufferDirect(V, N, F, k, E, xe), E.onAfterRender(x, N, V, F, k, xe);
        }
        function Hs(E, N, V) {
            N.isScene !== !0 && (N = it);
            let F = me.get(E), k = g.state.lights, xe = g.state.shadowsArray, Ae = k.state.version, Ue = B.getParameters(E, k.state, xe, N, V), De = B.getProgramCacheKey(Ue), We = F.programs;
            F.environment = E.isMeshStandardMaterial ? N.environment : null, F.fog = N.fog, F.envMap = (E.isMeshStandardMaterial ? qe : Ne).get(E.envMap || F.environment), We === void 0 && (E.addEventListener("dispose", ue), We = new Map, F.programs = We);
            let Pe = We.get(De);
            if (Pe !== void 0) {
                if (F.currentProgram === Pe && F.lightsStateVersion === Ae) return nl(E, Ue), Pe;
            } else Ue.uniforms = B.getUniforms(E), E.onBuild(V, Ue, x), E.onBeforeCompile(Ue, x), Pe = B.acquireProgram(Ue, De), We.set(De, Pe), F.uniforms = Ue.uniforms;
            let Ve = F.uniforms;
            (!E.isShaderMaterial && !E.isRawShaderMaterial || E.clipping === !0) && (Ve.clippingPlanes = Me.uniform), nl(E, Ue), F.needsLights = zd(E), F.lightsStateVersion = Ae, F.needsLights && (Ve.ambientLightColor.value = k.state.ambient, Ve.lightProbe.value = k.state.probe, Ve.directionalLights.value = k.state.directional, Ve.directionalLightShadows.value = k.state.directionalShadow, Ve.spotLights.value = k.state.spot, Ve.spotLightShadows.value = k.state.spotShadow, Ve.rectAreaLights.value = k.state.rectArea, Ve.ltc_1.value = k.state.rectAreaLTC1, Ve.ltc_2.value = k.state.rectAreaLTC2, Ve.pointLights.value = k.state.point, Ve.pointLightShadows.value = k.state.pointShadow, Ve.hemisphereLights.value = k.state.hemi, Ve.directionalShadowMap.value = k.state.directionalShadowMap, Ve.directionalShadowMatrix.value = k.state.directionalShadowMatrix, Ve.spotShadowMap.value = k.state.spotShadowMap, Ve.spotLightMatrix.value = k.state.spotLightMatrix, Ve.spotLightMap.value = k.state.spotLightMap, Ve.pointShadowMap.value = k.state.pointShadowMap, Ve.pointShadowMatrix.value = k.state.pointShadowMatrix);
            let at = Pe.getUniforms(), lt = qi.seqWithValue(at.seq, Ve);
            return F.currentProgram = Pe, F.uniformsList = lt, Pe;
        }
        function nl(E, N) {
            let V = me.get(E);
            V.outputColorSpace = N.outputColorSpace, V.instancing = N.instancing, V.instancingColor = N.instancingColor, V.skinning = N.skinning, V.morphTargets = N.morphTargets, V.morphNormals = N.morphNormals, V.morphColors = N.morphColors, V.morphTargetsCount = N.morphTargetsCount, V.numClippingPlanes = N.numClippingPlanes, V.numIntersection = N.numClipIntersection, V.vertexAlphas = N.vertexAlphas, V.vertexTangents = N.vertexTangents, V.toneMapping = N.toneMapping;
        }
        function Fd(E, N, V, F, k) {
            N.isScene !== !0 && (N = it), ye.resetTextureUnits();
            let xe = N.fog, Ae = F.isMeshStandardMaterial ? N.environment : null, Ue = R === null ? x.outputColorSpace : R.isXRRenderTarget === !0 ? R.texture.colorSpace : Mn, De = (F.isMeshStandardMaterial ? qe : Ne).get(F.envMap || Ae), We = F.vertexColors === !0 && !!V.attributes.color && V.attributes.color.itemSize === 4, Pe = !!V.attributes.tangent && (!!F.normalMap || F.anisotropy > 0), Ve = !!V.morphAttributes.position, at = !!V.morphAttributes.normal, lt = !!V.morphAttributes.color, Ht = Nn;
            F.toneMapped && (R === null || R.isXRRenderTarget === !0) && (Ht = x.toneMapping);
            let an = V.morphAttributes.position || V.morphAttributes.normal || V.morphAttributes.color, ut = an !== void 0 ? an.length : 0, Xe = me.get(F), Sa = g.state.lights;
            if (fe === !0 && (_e === !0 || E !== M)) {
                let Bt = E === M && F.id === I;
                Me.setState(F, E, Bt);
            }
            let dt = !1;
            F.version === Xe.__version ? (Xe.needsLights && Xe.lightsStateVersion !== Sa.state.version || Xe.outputColorSpace !== Ue || k.isInstancedMesh && Xe.instancing === !1 || !k.isInstancedMesh && Xe.instancing === !0 || k.isSkinnedMesh && Xe.skinning === !1 || !k.isSkinnedMesh && Xe.skinning === !0 || k.isInstancedMesh && Xe.instancingColor === !0 && k.instanceColor === null || k.isInstancedMesh && Xe.instancingColor === !1 && k.instanceColor !== null || Xe.envMap !== De || F.fog === !0 && Xe.fog !== xe || Xe.numClippingPlanes !== void 0 && (Xe.numClippingPlanes !== Me.numPlanes || Xe.numIntersection !== Me.numIntersection) || Xe.vertexAlphas !== We || Xe.vertexTangents !== Pe || Xe.morphTargets !== Ve || Xe.morphNormals !== at || Xe.morphColors !== lt || Xe.toneMapping !== Ht || ie.isWebGL2 === !0 && Xe.morphTargetsCount !== ut) && (dt = !0) : (dt = !0, Xe.__version = F.version);
            let Hn = Xe.currentProgram;
            dt === !0 && (Hn = Hs(F, N, k));
            let il = !1, os = !1, ba = !1, Ct = Hn.getUniforms(), Gn = Xe.uniforms;
            if (J.useProgram(Hn.program) && (il = !0, os = !0, ba = !0), F.id !== I && (I = F.id, os = !0), il || M !== E) {
                Ct.setValue(L, "projectionMatrix", E.projectionMatrix), Ct.setValue(L, "viewMatrix", E.matrixWorldInverse);
                let Bt = Ct.map.cameraPosition;
                Bt !== void 0 && Bt.setValue(L, Ye.setFromMatrixPosition(E.matrixWorld)), ie.logarithmicDepthBuffer && Ct.setValue(L, "logDepthBufFC", 2 / (Math.log(E.far + 1) / Math.LN2)), (F.isMeshPhongMaterial || F.isMeshToonMaterial || F.isMeshLambertMaterial || F.isMeshBasicMaterial || F.isMeshStandardMaterial || F.isShaderMaterial) && Ct.setValue(L, "isOrthographic", E.isOrthographicCamera === !0), M !== E && (M = E, os = !0, ba = !0);
            }
            if (k.isSkinnedMesh) {
                Ct.setOptional(L, k, "bindMatrix"), Ct.setOptional(L, k, "bindMatrixInverse");
                let Bt = k.skeleton;
                Bt && (ie.floatVertexTextures ? (Bt.boneTexture === null && Bt.computeBoneTexture(), Ct.setValue(L, "boneTexture", Bt.boneTexture, ye), Ct.setValue(L, "boneTextureSize", Bt.boneTextureSize)) : console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."));
            }
            let Ea = V.morphAttributes;
            if ((Ea.position !== void 0 || Ea.normal !== void 0 || Ea.color !== void 0 && ie.isWebGL2 === !0) && Le.update(k, V, Hn), (os || Xe.receiveShadow !== k.receiveShadow) && (Xe.receiveShadow = k.receiveShadow, Ct.setValue(L, "receiveShadow", k.receiveShadow)), F.isMeshGouraudMaterial && F.envMap !== null && (Gn.envMap.value = De, Gn.flipEnvMap.value = De.isCubeTexture && De.isRenderTargetTexture === !1 ? -1 : 1), os && (Ct.setValue(L, "toneMappingExposure", x.toneMappingExposure), Xe.needsLights && Bd(Gn, ba), xe && F.fog === !0 && ee.refreshFogUniforms(Gn, xe), ee.refreshMaterialUniforms(Gn, F, H, q, we), qi.upload(L, Xe.uniformsList, Gn, ye)), F.isShaderMaterial && F.uniformsNeedUpdate === !0 && (qi.upload(L, Xe.uniformsList, Gn, ye), F.uniformsNeedUpdate = !1), F.isSpriteMaterial && Ct.setValue(L, "center", k.center), Ct.setValue(L, "modelViewMatrix", k.modelViewMatrix), Ct.setValue(L, "normalMatrix", k.normalMatrix), Ct.setValue(L, "modelMatrix", k.matrixWorld), F.isShaderMaterial || F.isRawShaderMaterial) {
                let Bt = F.uniformsGroups;
                for(let Ta = 0, Vd = Bt.length; Ta < Vd; Ta++)if (ie.isWebGL2) {
                    let sl = Bt[Ta];
                    Ie.update(sl, Hn), Ie.bind(sl, Hn);
                } else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");
            }
            return Hn;
        }
        function Bd(E, N) {
            E.ambientLightColor.needsUpdate = N, E.lightProbe.needsUpdate = N, E.directionalLights.needsUpdate = N, E.directionalLightShadows.needsUpdate = N, E.pointLights.needsUpdate = N, E.pointLightShadows.needsUpdate = N, E.spotLights.needsUpdate = N, E.spotLightShadows.needsUpdate = N, E.rectAreaLights.needsUpdate = N, E.hemisphereLights.needsUpdate = N;
        }
        function zd(E) {
            return E.isMeshLambertMaterial || E.isMeshToonMaterial || E.isMeshPhongMaterial || E.isMeshStandardMaterial || E.isShadowMaterial || E.isShaderMaterial && E.lights === !0;
        }
        this.getActiveCubeFace = function() {
            return b;
        }, this.getActiveMipmapLevel = function() {
            return w;
        }, this.getRenderTarget = function() {
            return R;
        }, this.setRenderTargetTextures = function(E, N, V) {
            me.get(E.texture).__webglTexture = N, me.get(E.depthTexture).__webglTexture = V;
            let F = me.get(E);
            F.__hasExternalTextures = !0, F.__hasExternalTextures && (F.__autoAllocateDepthBuffer = V === void 0, F.__autoAllocateDepthBuffer || X.has("WEBGL_multisampled_render_to_texture") === !0 && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), F.__useRenderToTexture = !1));
        }, this.setRenderTargetFramebuffer = function(E, N) {
            let V = me.get(E);
            V.__webglFramebuffer = N, V.__useDefaultFramebuffer = N === void 0;
        }, this.setRenderTarget = function(E, N = 0, V = 0) {
            R = E, b = N, w = V;
            let F = !0, k = null, xe = !1, Ae = !1;
            if (E) {
                let De = me.get(E);
                De.__useDefaultFramebuffer !== void 0 ? (J.bindFramebuffer(L.FRAMEBUFFER, null), F = !1) : De.__webglFramebuffer === void 0 ? ye.setupRenderTarget(E) : De.__hasExternalTextures && ye.rebindTextures(E, me.get(E.texture).__webglTexture, me.get(E.depthTexture).__webglTexture);
                let We = E.texture;
                (We.isData3DTexture || We.isDataArrayTexture || We.isCompressedArrayTexture) && (Ae = !0);
                let Pe = me.get(E).__webglFramebuffer;
                E.isWebGLCubeRenderTarget ? (Array.isArray(Pe[N]) ? k = Pe[N][V] : k = Pe[N], xe = !0) : ie.isWebGL2 && E.samples > 0 && ye.useMultisampledRTT(E) === !1 ? k = me.get(E).__webglMultisampledFramebuffer : Array.isArray(Pe) ? k = Pe[V] : k = Pe, T.copy(E.viewport), O.copy(E.scissor), Y = E.scissorTest;
            } else T.copy(K).multiplyScalar(H).floor(), O.copy(D).multiplyScalar(H).floor(), Y = G;
            if (J.bindFramebuffer(L.FRAMEBUFFER, k) && ie.drawBuffers && F && J.drawBuffers(E, k), J.viewport(T), J.scissor(O), J.setScissorTest(Y), xe) {
                let De = me.get(E.texture);
                L.framebufferTexture2D(L.FRAMEBUFFER, L.COLOR_ATTACHMENT0, L.TEXTURE_CUBE_MAP_POSITIVE_X + N, De.__webglTexture, V);
            } else if (Ae) {
                let De = me.get(E.texture), We = N || 0;
                L.framebufferTextureLayer(L.FRAMEBUFFER, L.COLOR_ATTACHMENT0, De.__webglTexture, V || 0, We);
            }
            I = -1;
        }, this.readRenderTargetPixels = function(E, N, V, F, k, xe, Ae) {
            if (!(E && E.isWebGLRenderTarget)) {
                console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                return;
            }
            let Ue = me.get(E).__webglFramebuffer;
            if (E.isWebGLCubeRenderTarget && Ae !== void 0 && (Ue = Ue[Ae]), Ue) {
                J.bindFramebuffer(L.FRAMEBUFFER, Ue);
                try {
                    let De = E.texture, We = De.format, Pe = De.type;
                    if (We !== Wt && $e.convert(We) !== L.getParameter(L.IMPLEMENTATION_COLOR_READ_FORMAT)) {
                        console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        return;
                    }
                    let Ve = Pe === Ts && (X.has("EXT_color_buffer_half_float") || ie.isWebGL2 && X.has("EXT_color_buffer_float"));
                    if (Pe !== On && $e.convert(Pe) !== L.getParameter(L.IMPLEMENTATION_COLOR_READ_TYPE) && !(Pe === xn && (ie.isWebGL2 || X.has("OES_texture_float") || X.has("WEBGL_color_buffer_float"))) && !Ve) {
                        console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        return;
                    }
                    N >= 0 && N <= E.width - F && V >= 0 && V <= E.height - k && L.readPixels(N, V, F, k, $e.convert(We), $e.convert(Pe), xe);
                } finally{
                    let De = R !== null ? me.get(R).__webglFramebuffer : null;
                    J.bindFramebuffer(L.FRAMEBUFFER, De);
                }
            }
        }, this.copyFramebufferToTexture = function(E, N, V = 0) {
            let F = Math.pow(2, -V), k = Math.floor(N.image.width * F), xe = Math.floor(N.image.height * F);
            ye.setTexture2D(N, 0), L.copyTexSubImage2D(L.TEXTURE_2D, V, 0, 0, E.x, E.y, k, xe), J.unbindTexture();
        }, this.copyTextureToTexture = function(E, N, V, F = 0) {
            let k = N.image.width, xe = N.image.height, Ae = $e.convert(V.format), Ue = $e.convert(V.type);
            ye.setTexture2D(V, 0), L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL, V.flipY), L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL, V.premultiplyAlpha), L.pixelStorei(L.UNPACK_ALIGNMENT, V.unpackAlignment), N.isDataTexture ? L.texSubImage2D(L.TEXTURE_2D, F, E.x, E.y, k, xe, Ae, Ue, N.image.data) : N.isCompressedTexture ? L.compressedTexSubImage2D(L.TEXTURE_2D, F, E.x, E.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : L.texSubImage2D(L.TEXTURE_2D, F, E.x, E.y, Ae, Ue, N.image), F === 0 && V.generateMipmaps && L.generateMipmap(L.TEXTURE_2D), J.unbindTexture();
        }, this.copyTextureToTexture3D = function(E, N, V, F, k = 0) {
            if (x.isWebGL1Renderer) {
                console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
                return;
            }
            let xe = E.max.x - E.min.x + 1, Ae = E.max.y - E.min.y + 1, Ue = E.max.z - E.min.z + 1, De = $e.convert(F.format), We = $e.convert(F.type), Pe;
            if (F.isData3DTexture) ye.setTexture3D(F, 0), Pe = L.TEXTURE_3D;
            else if (F.isDataArrayTexture) ye.setTexture2DArray(F, 0), Pe = L.TEXTURE_2D_ARRAY;
            else {
                console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
                return;
            }
            L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL, F.flipY), L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL, F.premultiplyAlpha), L.pixelStorei(L.UNPACK_ALIGNMENT, F.unpackAlignment);
            let Ve = L.getParameter(L.UNPACK_ROW_LENGTH), at = L.getParameter(L.UNPACK_IMAGE_HEIGHT), lt = L.getParameter(L.UNPACK_SKIP_PIXELS), Ht = L.getParameter(L.UNPACK_SKIP_ROWS), an = L.getParameter(L.UNPACK_SKIP_IMAGES), ut = V.isCompressedTexture ? V.mipmaps[0] : V.image;
            L.pixelStorei(L.UNPACK_ROW_LENGTH, ut.width), L.pixelStorei(L.UNPACK_IMAGE_HEIGHT, ut.height), L.pixelStorei(L.UNPACK_SKIP_PIXELS, E.min.x), L.pixelStorei(L.UNPACK_SKIP_ROWS, E.min.y), L.pixelStorei(L.UNPACK_SKIP_IMAGES, E.min.z), V.isDataTexture || V.isData3DTexture ? L.texSubImage3D(Pe, k, N.x, N.y, N.z, xe, Ae, Ue, De, We, ut.data) : V.isCompressedArrayTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), L.compressedTexSubImage3D(Pe, k, N.x, N.y, N.z, xe, Ae, Ue, De, ut.data)) : L.texSubImage3D(Pe, k, N.x, N.y, N.z, xe, Ae, Ue, De, We, ut), L.pixelStorei(L.UNPACK_ROW_LENGTH, Ve), L.pixelStorei(L.UNPACK_IMAGE_HEIGHT, at), L.pixelStorei(L.UNPACK_SKIP_PIXELS, lt), L.pixelStorei(L.UNPACK_SKIP_ROWS, Ht), L.pixelStorei(L.UNPACK_SKIP_IMAGES, an), k === 0 && F.generateMipmaps && L.generateMipmap(Pe), J.unbindTexture();
        }, this.initTexture = function(E) {
            E.isCubeTexture ? ye.setTextureCube(E, 0) : E.isData3DTexture ? ye.setTexture3D(E, 0) : E.isDataArrayTexture || E.isCompressedArrayTexture ? ye.setTexture2DArray(E, 0) : ye.setTexture2D(E, 0), J.unbindTexture();
        }, this.resetState = function() {
            b = 0, w = 0, R = null, J.reset(), Oe.reset();
        }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    get coordinateSystem() {
        return vn;
    }
    get outputColorSpace() {
        return this._outputColorSpace;
    }
    set outputColorSpace(e) {
        this._outputColorSpace = e;
        let t = this.getContext();
        t.drawingBufferColorSpace = e === qc ? "display-p3" : "srgb", t.unpackColorSpace = Qe.workingColorSpace === va ? "display-p3" : "srgb";
    }
    get physicallyCorrectLights() {
        return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."), !this.useLegacyLights;
    }
    set physicallyCorrectLights(e) {
        console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."), this.useLegacyLights = !e;
    }
    get outputEncoding() {
        return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."), this.outputColorSpace === vt ? ri : vd;
    }
    set outputEncoding(e) {
        console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."), this.outputColorSpace = e === ri ? vt : Mn;
    }
    get useLegacyLights() {
        return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."), this._useLegacyLights;
    }
    set useLegacyLights(e) {
        console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."), this._useLegacyLights = e;
    }
}, Co = class extends Ro {
};
Co.prototype.isWebGL1Renderer = !0;
var Po = class s1 {
    constructor(e, t = 25e-5){
        this.isFogExp2 = !0, this.name = "", this.color = new pe(e), this.density = t;
    }
    clone() {
        return new s1(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            name: this.name,
            color: this.color.getHex(),
            density: this.density
        };
    }
}, Lo = class s1 {
    constructor(e, t = 1, n = 1e3){
        this.isFog = !0, this.name = "", this.color = new pe(e), this.near = t, this.far = n;
    }
    clone() {
        return new s1(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            name: this.name,
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
}, Io = class extends Je {
    constructor(){
        super(), this.isScene = !0, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.backgroundBlurriness = 0, this.backgroundIntensity = 1, this.overrideMaterial = null, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), this.backgroundBlurriness = e.backgroundBlurriness, this.backgroundIntensity = e.backgroundIntensity, e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), this.backgroundBlurriness > 0 && (t.object.backgroundBlurriness = this.backgroundBlurriness), this.backgroundIntensity !== 1 && (t.object.backgroundIntensity = this.backgroundIntensity), t;
    }
}, Is = class {
    constructor(e, t){
        this.isInterleavedBuffer = !0, this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = Hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = kt();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = kt()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = kt()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
}, Pt = new A, Qi = class s1 {
    constructor(e, t, n, i = !1){
        this.isInterleavedBufferAttribute = !0, this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Pt.fromBufferAttribute(this, t), Pt.applyMatrix4(e), this.setXYZ(t, Pt.x, Pt.y, Pt.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Pt.fromBufferAttribute(this, t), Pt.applyNormalMatrix(e), this.setXYZ(t, Pt.x, Pt.y, Pt.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Pt.fromBufferAttribute(this, t), Pt.transformDirection(e), this.setXYZ(t, Pt.x, Pt.y, Pt.z);
        return this;
    }
    setX(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.normalized && (t = Be(t, this.array)), this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        let t = this.data.array[e * this.data.stride + this.offset];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    getY(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 1];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    getZ(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 2];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    getW(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 3];
        return this.normalized && (t = Ot(t, this.array)), t;
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.normalized && (t = Be(t, this.array), n = Be(n, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.normalized && (t = Be(t, this.array), n = Be(n, this.array), i = Be(i, this.array), r = Be(r, this.array)), this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new et(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new s1(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
}, ea = class extends bt {
    constructor(e){
        super(), this.isSpriteMaterial = !0, this.type = "SpriteMaterial", this.color = new pe(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
    }
}, Ii, ds = new A, Ui = new A, Di = new A, Ni = new Z, fs = new Z, Cd = new ze, hr = new A, ps = new A, ur = new A, Lh = new Z, ja = new Z, Ih = new Z, Uo = class extends Je {
    constructor(e = new ea){
        if (super(), this.isSprite = !0, this.type = "Sprite", Ii === void 0) {
            Ii = new Ge;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new Is(t, 5);
            Ii.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), Ii.setAttribute("position", new Qi(n, 3, 0, !1)), Ii.setAttribute("uv", new Qi(n, 2, 3, !1));
        }
        this.geometry = Ii, this.material = e, this.center = new Z(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), Ui.setFromMatrixScale(this.matrixWorld), Cd.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), Di.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && Ui.multiplyScalar(-Di.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let a = this.center;
        dr(hr.set(-.5, -.5, 0), Di, a, Ui, i, r), dr(ps.set(.5, -.5, 0), Di, a, Ui, i, r), dr(ur.set(.5, .5, 0), Di, a, Ui, i, r), Lh.set(0, 0), ja.set(1, 0), Ih.set(1, 1);
        let o = e.ray.intersectTriangle(hr, ps, ur, !1, ds);
        if (o === null && (dr(ps.set(-.5, .5, 0), Di, a, Ui, i, r), ja.set(0, 1), o = e.ray.intersectTriangle(hr, ur, ps, !1, ds), o === null)) return;
        let c = e.ray.origin.distanceTo(ds);
        c < e.near || c > e.far || t.push({
            distance: c,
            point: ds.clone(),
            uv: Un.getInterpolation(ds, hr, ps, ur, Lh, ja, Ih, new Z),
            face: null,
            object: this
        });
    }
    copy(e, t) {
        return super.copy(e, t), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
function dr(s1, e, t, n, i, r) {
    Ni.subVectors(s1, t).addScalar(.5).multiply(n), i !== void 0 ? (fs.x = r * Ni.x - i * Ni.y, fs.y = i * Ni.x + r * Ni.y) : fs.copy(Ni), s1.copy(e), s1.x += fs.x, s1.y += fs.y, s1.applyMatrix4(Cd);
}
var fr = new A, Uh = new A, Do = class extends Je {
    constructor(){
        super(), this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance, r.hysteresis);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0, n = 0) {
        t = Math.abs(t);
        let i = this.levels, r;
        for(r = 0; r < i.length && !(t < i[r].distance); r++);
        return i.splice(r, 0, {
            distance: t,
            hysteresis: n,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i; n++){
                let r = t[n].distance;
                if (t[n].object.visible && (r -= r * t[n].hysteresis), e < r) break;
            }
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fr.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fr);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fr.setFromMatrixPosition(e.matrixWorld), Uh.setFromMatrixPosition(this.matrixWorld);
            let n = fr.distanceTo(Uh) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r; i++){
                let a = t[i].distance;
                if (t[i].object.visible && (a -= a * t[i].hysteresis), n >= a) t[i - 1].object.visible = !1, t[i].object.visible = !0;
                else break;
            }
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let a = n[i];
            t.object.levels.push({
                object: a.object.uuid,
                distance: a.distance,
                hysteresis: a.hysteresis
            });
        }
        return t;
    }
}, Dh = new A, Nh = new je, Oh = new je, W0 = new A, Fh = new ze, Oi = new A, eo = new Yt, Bh = new ze, to = new hi, No = class extends Mt {
    constructor(e, t){
        super(e, t), this.isSkinnedMesh = !0, this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new ze, this.bindMatrixInverse = new ze, this.boundingBox = null, this.boundingSphere = null;
    }
    computeBoundingBox() {
        let e = this.geometry;
        this.boundingBox === null && (this.boundingBox = new Qt), this.boundingBox.makeEmpty();
        let t = e.getAttribute("position");
        for(let n = 0; n < t.count; n++)Oi.fromBufferAttribute(t, n), this.applyBoneTransform(n, Oi), this.boundingBox.expandByPoint(Oi);
    }
    computeBoundingSphere() {
        let e = this.geometry;
        this.boundingSphere === null && (this.boundingSphere = new Yt), this.boundingSphere.makeEmpty();
        let t = e.getAttribute("position");
        for(let n = 0; n < t.count; n++)Oi.fromBufferAttribute(t, n), this.applyBoneTransform(n, Oi), this.boundingSphere.expandByPoint(Oi);
    }
    copy(e, t) {
        return super.copy(e, t), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
    }
    raycast(e, t) {
        let n = this.material, i = this.matrixWorld;
        n !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), eo.copy(this.boundingSphere), eo.applyMatrix4(i), e.ray.intersectsSphere(eo) !== !1 && (Bh.copy(i).invert(), to.copy(e.ray).applyMatrix4(Bh), !(this.boundingBox !== null && to.intersectsBox(this.boundingBox) === !1) && this._computeIntersections(e, t, to)));
    }
    getVertexPosition(e, t) {
        return super.getVertexPosition(e, t), this.applyBoneTransform(e, t), t;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new je, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.fromBufferAttribute(t, n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    applyBoneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        Nh.fromBufferAttribute(i.attributes.skinIndex, e), Oh.fromBufferAttribute(i.attributes.skinWeight, e), Dh.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let a = Oh.getComponent(r);
            if (a !== 0) {
                let o = Nh.getComponent(r);
                Fh.multiplyMatrices(n.bones[o].matrixWorld, n.boneInverses[o]), t.addScaledVector(W0.copy(Dh).applyMatrix4(Fh), a);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
    boneTransform(e, t) {
        return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."), this.applyBoneTransform(e, t);
    }
}, ta = class extends Je {
    constructor(){
        super(), this.isBone = !0, this.type = "Bone";
    }
}, oi = class extends St {
    constructor(e = null, t = 1, n = 1, i, r, a, o, c, l = pt, h = pt, u, d){
        super(null, a, o, c, l, h, i, r, u, d), this.isDataTexture = !0, this.image = {
            data: e,
            width: t,
            height: n
        }, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
}, zh = new ze, X0 = new ze, Oo = class s1 {
    constructor(e = [], t = []){
        this.uuid = kt(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new ze);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new ze;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && (n.parent && n.parent.isBone ? (n.matrix.copy(n.parent.matrixWorld).invert(), n.matrix.multiply(n.matrixWorld)) : n.matrix.copy(n.matrixWorld), n.matrix.decompose(n.position, n.quaternion, n.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, a = e.length; r < a; r++){
            let o = e[r] ? e[r].matrixWorld : X0;
            zh.multiplyMatrices(o, t[r]), zh.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new s1(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = yd(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new oi(t, e, e, Wt, xn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], a = t[r];
            a === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), a = new ta), this.bones.push(a), this.boneInverses.push(new ze().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.6,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let a = t[i];
            e.bones.push(a.uuid);
            let o = n[i];
            e.boneInverses.push(o.toArray());
        }
        return e;
    }
}, ui = class extends et {
    constructor(e, t, n, i = 1){
        super(e, t, n), this.isInstancedBufferAttribute = !0, this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
}, Fi = new ze, Vh = new ze, pr = [], kh = new Qt, q0 = new ze, ms = new Mt, gs = new Yt, Fo = class extends Mt {
    constructor(e, t, n){
        super(e, t), this.isInstancedMesh = !0, this.instanceMatrix = new ui(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.boundingBox = null, this.boundingSphere = null;
        for(let i = 0; i < n; i++)this.setMatrixAt(i, q0);
    }
    computeBoundingBox() {
        let e = this.geometry, t = this.count;
        this.boundingBox === null && (this.boundingBox = new Qt), e.boundingBox === null && e.computeBoundingBox(), this.boundingBox.makeEmpty();
        for(let n = 0; n < t; n++)this.getMatrixAt(n, Fi), kh.copy(e.boundingBox).applyMatrix4(Fi), this.boundingBox.union(kh);
    }
    computeBoundingSphere() {
        let e = this.geometry, t = this.count;
        this.boundingSphere === null && (this.boundingSphere = new Yt), e.boundingSphere === null && e.computeBoundingSphere(), this.boundingSphere.makeEmpty();
        for(let n = 0; n < t; n++)this.getMatrixAt(n, Fi), gs.copy(e.boundingSphere).applyMatrix4(Fi), this.boundingSphere.union(gs);
    }
    copy(e, t) {
        return super.copy(e, t), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (ms.geometry = this.geometry, ms.material = this.material, ms.material !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), gs.copy(this.boundingSphere), gs.applyMatrix4(n), e.ray.intersectsSphere(gs) !== !1)) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, Fi), Vh.multiplyMatrices(n, Fi), ms.matrixWorld = Vh, ms.raycast(e, pr);
            for(let a = 0, o = pr.length; a < o; a++){
                let c = pr[a];
                c.instanceId = r, c.object = this, t.push(c);
            }
            pr.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new ui(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
}, wt = class extends bt {
    constructor(e){
        super(), this.isLineBasicMaterial = !0, this.type = "LineBasicMaterial", this.color = new pe(16777215), this.map = null, this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.fog = e.fog, this;
    }
}, Hh = new A, Gh = new A, Wh = new ze, no = new hi, mr = new Yt, bn = class extends Je {
    constructor(e = new Ge, t = new wt){
        super(), this.isLine = !0, this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e, t) {
        return super.copy(e, t), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)Hh.fromBufferAttribute(t, i - 1), Gh.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += Hh.distanceTo(Gh);
            e.setAttribute("lineDistance", new ve(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, a = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), mr.copy(n.boundingSphere), mr.applyMatrix4(i), mr.radius += r, e.ray.intersectsSphere(mr) === !1) return;
        Wh.copy(i).invert(), no.copy(e.ray).applyMatrix4(Wh);
        let o = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), c = o * o, l = new A, h = new A, u = new A, d = new A, f = this.isLineSegments ? 2 : 1, m = n.index, g = n.attributes.position;
        if (m !== null) {
            let p = Math.max(0, a.start), v = Math.min(m.count, a.start + a.count);
            for(let x = p, y = v - 1; x < y; x += f){
                let b = m.getX(x), w = m.getX(x + 1);
                if (l.fromBufferAttribute(g, b), h.fromBufferAttribute(g, w), no.distanceSqToSegment(l, h, d, u) > c) continue;
                d.applyMatrix4(this.matrixWorld);
                let I = e.ray.origin.distanceTo(d);
                I < e.near || I > e.far || t.push({
                    distance: I,
                    point: u.clone().applyMatrix4(this.matrixWorld),
                    index: x,
                    face: null,
                    faceIndex: null,
                    object: this
                });
            }
        } else {
            let p = Math.max(0, a.start), v = Math.min(g.count, a.start + a.count);
            for(let x = p, y = v - 1; x < y; x += f){
                if (l.fromBufferAttribute(g, x), h.fromBufferAttribute(g, x + 1), no.distanceSqToSegment(l, h, d, u) > c) continue;
                d.applyMatrix4(this.matrixWorld);
                let w = e.ray.origin.distanceTo(d);
                w < e.near || w > e.far || t.push({
                    distance: w,
                    point: u.clone().applyMatrix4(this.matrixWorld),
                    index: x,
                    face: null,
                    faceIndex: null,
                    object: this
                });
            }
        }
    }
    updateMorphTargets() {
        let t = this.geometry.morphAttributes, n = Object.keys(t);
        if (n.length > 0) {
            let i = t[n[0]];
            if (i !== void 0) {
                this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                for(let r = 0, a = i.length; r < a; r++){
                    let o = i[r].name || String(r);
                    this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = r;
                }
            }
        }
    }
}, Xh = new A, qh = new A, en = class extends bn {
    constructor(e, t){
        super(e, t), this.isLineSegments = !0, this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)Xh.fromBufferAttribute(t, i), qh.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + Xh.distanceTo(qh);
            e.setAttribute("lineDistance", new ve(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        return this;
    }
}, Bo = class extends bn {
    constructor(e, t){
        super(e, t), this.isLineLoop = !0, this.type = "LineLoop";
    }
}, na = class extends bt {
    constructor(e){
        super(), this.isPointsMaterial = !0, this.type = "PointsMaterial", this.color = new pe(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
    }
}, Yh = new ze, zo = new hi, gr = new Yt, _r = new A, Vo = class extends Je {
    constructor(e = new Ge, t = new na){
        super(), this.isPoints = !0, this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e, t) {
        return super.copy(e, t), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, a = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gr.copy(n.boundingSphere), gr.applyMatrix4(i), gr.radius += r, e.ray.intersectsSphere(gr) === !1) return;
        Yh.copy(i).invert(), zo.copy(e.ray).applyMatrix4(Yh);
        let o = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), c = o * o, l = n.index, u = n.attributes.position;
        if (l !== null) {
            let d = Math.max(0, a.start), f = Math.min(l.count, a.start + a.count);
            for(let m = d, _ = f; m < _; m++){
                let g = l.getX(m);
                _r.fromBufferAttribute(u, g), Zh(_r, g, c, i, e, t, this);
            }
        } else {
            let d = Math.max(0, a.start), f = Math.min(u.count, a.start + a.count);
            for(let m = d, _ = f; m < _; m++)_r.fromBufferAttribute(u, m), Zh(_r, m, c, i, e, t, this);
        }
    }
    updateMorphTargets() {
        let t = this.geometry.morphAttributes, n = Object.keys(t);
        if (n.length > 0) {
            let i = t[n[0]];
            if (i !== void 0) {
                this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                for(let r = 0, a = i.length; r < a; r++){
                    let o = i[r].name || String(r);
                    this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = r;
                }
            }
        }
    }
};
function Zh(s1, e, t, n, i, r, a) {
    let o = zo.distanceSqToPoint(s1);
    if (o < t) {
        let c = new A;
        zo.closestPointToPoint(s1, c), c.applyMatrix4(n);
        let l = i.ray.origin.distanceTo(c);
        if (l < i.near || l > i.far) return;
        r.push({
            distance: l,
            distanceToRay: Math.sqrt(o),
            point: c,
            index: e,
            face: null,
            object: a
        });
    }
}
var Jh = class extends St {
    constructor(e, t, n, i, r, a, o, c, l){
        super(e, t, n, i, r, a, o, c, l), this.isVideoTexture = !0, this.minFilter = a !== void 0 ? a : mt, this.magFilter = r !== void 0 ? r : mt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
}, $h = class extends St {
    constructor(e, t){
        super({
            width: e,
            height: t
        }), this.isFramebufferTexture = !0, this.magFilter = pt, this.minFilter = pt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
}, Us = class extends St {
    constructor(e, t, n, i, r, a, o, c, l, h, u, d){
        super(null, a, o, c, l, h, i, r, u, d), this.isCompressedTexture = !0, this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
}, Kh = class extends Us {
    constructor(e, t, n, i, r, a){
        super(e, t, n, r, a), this.isCompressedArrayTexture = !0, this.image.depth = i, this.wrapR = It;
    }
}, Qh = class extends Us {
    constructor(e, t, n){
        super(void 0, e[0].width, e[0].height, t, n, zn), this.isCompressedCubeTexture = !0, this.isCubeTexture = !0, this.image = e;
    }
}, jh = class extends St {
    constructor(e, t, n, i, r, a, o, c, l){
        super(e, t, n, i, r, a, o, c, l), this.isCanvasTexture = !0, this.needsUpdate = !0;
    }
}, Zt = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let a = 1; a <= e; a++)n = this.getPoint(a / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, a;
        t ? a = t : a = e * n[r - 1];
        let o = 0, c = r - 1, l;
        for(; o <= c;)if (i = Math.floor(o + (c - o) / 2), l = n[i] - a, l < 0) o = i + 1;
        else if (l > 0) c = i - 1;
        else {
            c = i;
            break;
        }
        if (i = c, n[i] === a) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (a - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let a = this.getPoint(i), o = this.getPoint(r), c = t || (a.isVector2 ? new Z : new A);
        return c.copy(o).sub(a).normalize(), c;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new A, i = [], r = [], a = [], o = new A, c = new ze;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new A);
        }
        r[0] = new A, a[0] = new A;
        let l = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= l && (l = h, n.set(1, 0, 0)), u <= l && (l = u, n.set(0, 1, 0)), d <= l && n.set(0, 0, 1), o.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], o), a[0].crossVectors(i[0], r[0]);
        for(let f = 1; f <= e; f++){
            if (r[f] = r[f - 1].clone(), a[f] = a[f - 1].clone(), o.crossVectors(i[f - 1], i[f]), o.length() > Number.EPSILON) {
                o.normalize();
                let m = Math.acos(ct(i[f - 1].dot(i[f]), -1, 1));
                r[f].applyMatrix4(c.makeRotationAxis(o, m));
            }
            a[f].crossVectors(i[f], r[f]);
        }
        if (t === !0) {
            let f = Math.acos(ct(r[0].dot(r[e]), -1, 1));
            f /= e, i[0].dot(o.crossVectors(r[0], r[e])) > 0 && (f = -f);
            for(let m = 1; m <= e; m++)r[m].applyMatrix4(c.makeRotationAxis(i[m], f * m)), a[m].crossVectors(i[m], r[m]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: a
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.6,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ds = class extends Zt {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, a = Math.PI * 2, o = !1, c = 0){
        super(), this.isEllipseCurve = !0, this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = a, this.aClockwise = o, this.aRotation = c;
    }
    getPoint(e, t) {
        let n = t || new Z, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, a = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (a ? r = 0 : r = i), this.aClockwise === !0 && !a && (r === i ? r = -i : r = r - i);
        let o = this.aStartAngle + e * r, c = this.aX + this.xRadius * Math.cos(o), l = this.aY + this.yRadius * Math.sin(o);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = c - this.aX, f = l - this.aY;
            c = d * h - f * u + this.aX, l = d * u + f * h + this.aY;
        }
        return n.set(c, l);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
}, ko = class extends Ds {
    constructor(e, t, n, i, r, a){
        super(e, t, n, n, i, r, a), this.isArcCurve = !0, this.type = "ArcCurve";
    }
};
function Jc() {
    let s1 = 0, e = 0, t = 0, n = 0;
    function i(r, a, o, c) {
        s1 = r, e = o, t = -3 * r + 3 * a - 2 * o - c, n = 2 * r - 2 * a + o + c;
    }
    return {
        initCatmullRom: function(r, a, o, c, l) {
            i(a, o, l * (o - r), l * (c - a));
        },
        initNonuniformCatmullRom: function(r, a, o, c, l, h, u) {
            let d = (a - r) / l - (o - r) / (l + h) + (o - a) / h, f = (o - a) / h - (c - a) / (h + u) + (c - o) / u;
            d *= h, f *= h, i(a, o, d, f);
        },
        calc: function(r) {
            let a = r * r, o = a * r;
            return s1 + e * r + t * a + n * o;
        }
    };
}
var xr = new A, io = new Jc, so = new Jc, ro = new Jc, Ho = class extends Zt {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super(), this.isCatmullRomCurve3 = !0, this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new A) {
        let n = t, i = this.points, r = i.length, a = (r - (this.closed ? 0 : 1)) * e, o = Math.floor(a), c = a - o;
        this.closed ? o += o > 0 ? 0 : (Math.floor(Math.abs(o) / r) + 1) * r : c === 0 && o === r - 1 && (o = r - 2, c = 1);
        let l, h;
        this.closed || o > 0 ? l = i[(o - 1) % r] : (xr.subVectors(i[0], i[1]).add(i[0]), l = xr);
        let u = i[o % r], d = i[(o + 1) % r];
        if (this.closed || o + 2 < r ? h = i[(o + 2) % r] : (xr.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = xr), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(l.distanceToSquared(u), f), _ = Math.pow(u.distanceToSquared(d), f), g = Math.pow(d.distanceToSquared(h), f);
            _ < 1e-4 && (_ = 1), m < 1e-4 && (m = _), g < 1e-4 && (g = _), io.initNonuniformCatmullRom(l.x, u.x, d.x, h.x, m, _, g), so.initNonuniformCatmullRom(l.y, u.y, d.y, h.y, m, _, g), ro.initNonuniformCatmullRom(l.z, u.z, d.z, h.z, m, _, g);
        } else this.curveType === "catmullrom" && (io.initCatmullRom(l.x, u.x, d.x, h.x, this.tension), so.initCatmullRom(l.y, u.y, d.y, h.y, this.tension), ro.initCatmullRom(l.z, u.z, d.z, h.z, this.tension));
        return n.set(io.calc(c), so.calc(c), ro.calc(c)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new A().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
function eu(s1, e, t, n, i) {
    let r = (n - e) * .5, a = (i - t) * .5, o = s1 * s1, c = s1 * o;
    return (2 * t - 2 * n + r + a) * c + (-3 * t + 3 * n - 2 * r - a) * o + r * s1 + t;
}
function Y0(s1, e) {
    let t = 1 - s1;
    return t * t * e;
}
function Z0(s1, e) {
    return 2 * (1 - s1) * s1 * e;
}
function J0(s1, e) {
    return s1 * s1 * e;
}
function bs(s1, e, t, n) {
    return Y0(s1, e) + Z0(s1, t) + J0(s1, n);
}
function $0(s1, e) {
    let t = 1 - s1;
    return t * t * t * e;
}
function K0(s1, e) {
    let t = 1 - s1;
    return 3 * t * t * s1 * e;
}
function Q0(s1, e) {
    return 3 * (1 - s1) * s1 * s1 * e;
}
function j0(s1, e) {
    return s1 * s1 * s1 * e;
}
function Es(s1, e, t, n, i) {
    return $0(s1, e) + K0(s1, t) + Q0(s1, n) + j0(s1, i);
}
var ia = class extends Zt {
    constructor(e = new Z, t = new Z, n = new Z, i = new Z){
        super(), this.isCubicBezierCurve = !0, this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new Z) {
        let n = t, i = this.v0, r = this.v1, a = this.v2, o = this.v3;
        return n.set(Es(e, i.x, r.x, a.x, o.x), Es(e, i.y, r.y, a.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
}, Go = class extends Zt {
    constructor(e = new A, t = new A, n = new A, i = new A){
        super(), this.isCubicBezierCurve3 = !0, this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new A) {
        let n = t, i = this.v0, r = this.v1, a = this.v2, o = this.v3;
        return n.set(Es(e, i.x, r.x, a.x, o.x), Es(e, i.y, r.y, a.y, o.y), Es(e, i.z, r.z, a.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
}, sa = class extends Zt {
    constructor(e = new Z, t = new Z){
        super(), this.isLineCurve = !0, this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new Z) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t = new Z) {
        return t.subVectors(this.v2, this.v1).normalize();
    }
    getTangentAt(e, t) {
        return this.getTangent(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, Wo = class extends Zt {
    constructor(e = new A, t = new A){
        super(), this.isLineCurve3 = !0, this.type = "LineCurve3", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new A) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t = new A) {
        return t.subVectors(this.v2, this.v1).normalize();
    }
    getTangentAt(e, t) {
        return this.getTangent(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, ra = class extends Zt {
    constructor(e = new Z, t = new Z, n = new Z){
        super(), this.isQuadraticBezierCurve = !0, this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new Z) {
        let n = t, i = this.v0, r = this.v1, a = this.v2;
        return n.set(bs(e, i.x, r.x, a.x), bs(e, i.y, r.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, aa = class extends Zt {
    constructor(e = new A, t = new A, n = new A){
        super(), this.isQuadraticBezierCurve3 = !0, this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new A) {
        let n = t, i = this.v0, r = this.v1, a = this.v2;
        return n.set(bs(e, i.x, r.x, a.x), bs(e, i.y, r.y, a.y), bs(e, i.z, r.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, oa = class extends Zt {
    constructor(e = []){
        super(), this.isSplineCurve = !0, this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new Z) {
        let n = t, i = this.points, r = (i.length - 1) * e, a = Math.floor(r), o = r - a, c = i[a === 0 ? a : a - 1], l = i[a], h = i[a > i.length - 2 ? i.length - 1 : a + 1], u = i[a > i.length - 3 ? i.length - 1 : a + 2];
        return n.set(eu(o, c.x, l.x, h.x, u.x), eu(o, c.y, l.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new Z().fromArray(i));
        }
        return this;
    }
}, ca = Object.freeze({
    __proto__: null,
    ArcCurve: ko,
    CatmullRomCurve3: Ho,
    CubicBezierCurve: ia,
    CubicBezierCurve3: Go,
    EllipseCurve: Ds,
    LineCurve: sa,
    LineCurve3: Wo,
    QuadraticBezierCurve: ra,
    QuadraticBezierCurve3: aa,
    SplineCurve: oa
}), Xo = class extends Zt {
    constructor(){
        super(), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        if (!e.equals(t)) {
            let n = e.isVector2 === !0 ? "LineCurve" : "LineCurve3";
            this.curves.push(new ca[n](t, e));
        }
        return this;
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let a = i[r] - n, o = this.curves[r], c = o.getLength(), l = c === 0 ? 0 : 1 - a / c;
                return o.getPointAt(l, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let a = r[i], o = a.isEllipseCurve ? e * 2 : a.isLineCurve || a.isLineCurve3 ? 1 : a.isSplineCurve ? e * a.points.length : e, c = a.getPoints(o);
            for(let l = 0; l < c.length; l++){
                let h = c[l];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new ca[i.type]().fromJSON(i));
        }
        return this;
    }
}, ji = class extends Xo {
    constructor(e){
        super(), this.type = "Path", this.currentPoint = new Z, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new sa(this.currentPoint.clone(), new Z(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new ra(this.currentPoint.clone(), new Z(e, t), new Z(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, a) {
        let o = new ia(this.currentPoint.clone(), new Z(e, t), new Z(n, i), new Z(r, a));
        return this.curves.push(o), this.currentPoint.set(r, a), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new oa(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, a) {
        let o = this.currentPoint.x, c = this.currentPoint.y;
        return this.absarc(e + o, t + c, n, i, r, a), this;
    }
    absarc(e, t, n, i, r, a) {
        return this.absellipse(e, t, n, n, i, r, a), this;
    }
    ellipse(e, t, n, i, r, a, o, c) {
        let l = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + l, t + h, n, i, r, a, o, c), this;
    }
    absellipse(e, t, n, i, r, a, o, c) {
        let l = new Ds(e, t, n, i, r, a, o, c);
        if (this.curves.length > 0) {
            let u = l.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(l);
        let h = l.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, la = class s1 extends Ge {
    constructor(e = [
        new Z(0, -.5),
        new Z(.5, 0),
        new Z(0, .5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super(), this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = ct(i, 0, Math.PI * 2);
        let r = [], a = [], o = [], c = [], l = [], h = 1 / t, u = new A, d = new Z, f = new A, m = new A, _ = new A, g = 0, p = 0;
        for(let v = 0; v <= e.length - 1; v++)switch(v){
            case 0:
                g = e[v + 1].x - e[v].x, p = e[v + 1].y - e[v].y, f.x = p * 1, f.y = -g, f.z = p * 0, _.copy(f), f.normalize(), c.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                c.push(_.x, _.y, _.z);
                break;
            default:
                g = e[v + 1].x - e[v].x, p = e[v + 1].y - e[v].y, f.x = p * 1, f.y = -g, f.z = p * 0, m.copy(f), f.x += _.x, f.y += _.y, f.z += _.z, f.normalize(), c.push(f.x, f.y, f.z), _.copy(m);
        }
        for(let v = 0; v <= t; v++){
            let x = n + v * h * i, y = Math.sin(x), b = Math.cos(x);
            for(let w = 0; w <= e.length - 1; w++){
                u.x = e[w].x * y, u.y = e[w].y, u.z = e[w].x * b, a.push(u.x, u.y, u.z), d.x = v / t, d.y = w / (e.length - 1), o.push(d.x, d.y);
                let R = c[3 * w + 0] * y, I = c[3 * w + 1], M = c[3 * w + 0] * b;
                l.push(R, I, M);
            }
        }
        for(let v = 0; v < t; v++)for(let x = 0; x < e.length - 1; x++){
            let y = x + v * e.length, b = y, w = y + e.length, R = y + e.length + 1, I = y + 1;
            r.push(b, w, I), r.push(R, I, w);
        }
        this.setIndex(r), this.setAttribute("position", new ve(a, 3)), this.setAttribute("uv", new ve(o, 2)), this.setAttribute("normal", new ve(l, 3));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, qo = class s1 extends la {
    constructor(e = 1, t = 1, n = 4, i = 8){
        let r = new ji;
        r.absarc(0, -t / 2, e, Math.PI * 1.5, 0), r.absarc(0, t / 2, e, 0, Math.PI * .5), super(r.getPoints(n), i), this.type = "CapsuleGeometry", this.parameters = {
            radius: e,
            length: t,
            capSegments: n,
            radialSegments: i
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.length, e.capSegments, e.radialSegments);
    }
}, Yo = class s1 extends Ge {
    constructor(e = 1, t = 32, n = 0, i = Math.PI * 2){
        super(), this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], a = [], o = [], c = [], l = new A, h = new Z;
        a.push(0, 0, 0), o.push(0, 0, 1), c.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            l.x = e * Math.cos(f), l.y = e * Math.sin(f), a.push(l.x, l.y, l.z), o.push(0, 0, 1), h.x = (a[d] / e + 1) / 2, h.y = (a[d + 1] / e + 1) / 2, c.push(h.x, h.y);
        }
        for(let u = 1; u <= t; u++)r.push(u, u + 1, 0);
        this.setIndex(r), this.setAttribute("position", new ve(a, 3)), this.setAttribute("normal", new ve(o, 3)), this.setAttribute("uv", new ve(c, 2));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Ns = class s1 extends Ge {
    constructor(e = 1, t = 1, n = 1, i = 32, r = 1, a = !1, o = 0, c = Math.PI * 2){
        super(), this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: a,
            thetaStart: o,
            thetaLength: c
        };
        let l = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, _ = [], g = n / 2, p = 0;
        v(), a === !1 && (e > 0 && x(!0), t > 0 && x(!1)), this.setIndex(h), this.setAttribute("position", new ve(u, 3)), this.setAttribute("normal", new ve(d, 3)), this.setAttribute("uv", new ve(f, 2));
        function v() {
            let y = new A, b = new A, w = 0, R = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let M = [], T = I / r, O = T * (t - e) + e;
                for(let Y = 0; Y <= i; Y++){
                    let $ = Y / i, U = $ * c + o, z = Math.sin(U), q = Math.cos(U);
                    b.x = O * z, b.y = -T * n + g, b.z = O * q, u.push(b.x, b.y, b.z), y.set(z, R, q).normalize(), d.push(y.x, y.y, y.z), f.push($, 1 - T), M.push(m++);
                }
                _.push(M);
            }
            for(let I = 0; I < i; I++)for(let M = 0; M < r; M++){
                let T = _[M][I], O = _[M + 1][I], Y = _[M + 1][I + 1], $ = _[M][I + 1];
                h.push(T, O, $), h.push(O, Y, $), w += 6;
            }
            l.addGroup(p, w, 0), p += w;
        }
        function x(y) {
            let b = m, w = new Z, R = new A, I = 0, M = y === !0 ? e : t, T = y === !0 ? 1 : -1;
            for(let Y = 1; Y <= i; Y++)u.push(0, g * T, 0), d.push(0, T, 0), f.push(.5, .5), m++;
            let O = m;
            for(let Y = 0; Y <= i; Y++){
                let U = Y / i * c + o, z = Math.cos(U), q = Math.sin(U);
                R.x = M * q, R.y = g * T, R.z = M * z, u.push(R.x, R.y, R.z), d.push(0, T, 0), w.x = z * .5 + .5, w.y = q * .5 * T + .5, f.push(w.x, w.y), m++;
            }
            for(let Y = 0; Y < i; Y++){
                let $ = b + Y, U = O + Y;
                y === !0 ? h.push(U, U + 1, $) : h.push(U + 1, U, $), I += 3;
            }
            l.addGroup(p, I, y === !0 ? 1 : 2), p += I;
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, Zo = class s1 extends Ns {
    constructor(e = 1, t = 1, n = 32, i = 1, r = !1, a = 0, o = Math.PI * 2){
        super(0, e, t, n, i, r, a, o), this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: a,
            thetaLength: o
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, di = class s1 extends Ge {
    constructor(e = [], t = [], n = 1, i = 0){
        super(), this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], a = [];
        o(i), l(n), h(), this.setAttribute("position", new ve(r, 3)), this.setAttribute("normal", new ve(r.slice(), 3)), this.setAttribute("uv", new ve(a, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function o(v) {
            let x = new A, y = new A, b = new A;
            for(let w = 0; w < t.length; w += 3)f(t[w + 0], x), f(t[w + 1], y), f(t[w + 2], b), c(x, y, b, v);
        }
        function c(v, x, y, b) {
            let w = b + 1, R = [];
            for(let I = 0; I <= w; I++){
                R[I] = [];
                let M = v.clone().lerp(y, I / w), T = x.clone().lerp(y, I / w), O = w - I;
                for(let Y = 0; Y <= O; Y++)Y === 0 && I === w ? R[I][Y] = M : R[I][Y] = M.clone().lerp(T, Y / O);
            }
            for(let I = 0; I < w; I++)for(let M = 0; M < 2 * (w - I) - 1; M++){
                let T = Math.floor(M / 2);
                M % 2 === 0 ? (d(R[I][T + 1]), d(R[I + 1][T]), d(R[I][T])) : (d(R[I][T + 1]), d(R[I + 1][T + 1]), d(R[I + 1][T]));
            }
        }
        function l(v) {
            let x = new A;
            for(let y = 0; y < r.length; y += 3)x.x = r[y + 0], x.y = r[y + 1], x.z = r[y + 2], x.normalize().multiplyScalar(v), r[y + 0] = x.x, r[y + 1] = x.y, r[y + 2] = x.z;
        }
        function h() {
            let v = new A;
            for(let x = 0; x < r.length; x += 3){
                v.x = r[x + 0], v.y = r[x + 1], v.z = r[x + 2];
                let y = g(v) / 2 / Math.PI + .5, b = p(v) / Math.PI + .5;
                a.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let v = 0; v < a.length; v += 6){
                let x = a[v + 0], y = a[v + 2], b = a[v + 4], w = Math.max(x, y, b), R = Math.min(x, y, b);
                w > .9 && R < .1 && (x < .2 && (a[v + 0] += 1), y < .2 && (a[v + 2] += 1), b < .2 && (a[v + 4] += 1));
            }
        }
        function d(v) {
            r.push(v.x, v.y, v.z);
        }
        function f(v, x) {
            let y = v * 3;
            x.x = e[y + 0], x.y = e[y + 1], x.z = e[y + 2];
        }
        function m() {
            let v = new A, x = new A, y = new A, b = new A, w = new Z, R = new Z, I = new Z;
            for(let M = 0, T = 0; M < r.length; M += 9, T += 6){
                v.set(r[M + 0], r[M + 1], r[M + 2]), x.set(r[M + 3], r[M + 4], r[M + 5]), y.set(r[M + 6], r[M + 7], r[M + 8]), w.set(a[T + 0], a[T + 1]), R.set(a[T + 2], a[T + 3]), I.set(a[T + 4], a[T + 5]), b.copy(v).add(x).add(y).divideScalar(3);
                let O = g(b);
                _(w, T + 0, v, O), _(R, T + 2, x, O), _(I, T + 4, y, O);
            }
        }
        function _(v, x, y, b) {
            b < 0 && v.x === 1 && (a[x] = v.x - 1), y.x === 0 && y.z === 0 && (a[x] = b / 2 / Math.PI + .5);
        }
        function g(v) {
            return Math.atan2(v.z, -v.x);
        }
        function p(v) {
            return Math.atan2(-v.y, Math.sqrt(v.x * v.x + v.z * v.z));
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.vertices, e.indices, e.radius, e.details);
    }
}, Jo = class s1 extends di {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], a = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, a, e, t), this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.detail);
    }
}, vr = new A, yr = new A, ao = new A, Mr = new Un, $o = class extends Ge {
    constructor(e = null, t = 1){
        if (super(), this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(ai * t), a = e.getIndex(), o = e.getAttribute("position"), c = a ? a.count : o.count, l = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < c; m += 3){
                a ? (l[0] = a.getX(m), l[1] = a.getX(m + 1), l[2] = a.getX(m + 2)) : (l[0] = m, l[1] = m + 1, l[2] = m + 2);
                let { a: _ , b: g , c: p  } = Mr;
                if (_.fromBufferAttribute(o, l[0]), g.fromBufferAttribute(o, l[1]), p.fromBufferAttribute(o, l[2]), Mr.getNormal(ao), u[0] = `${Math.round(_.x * i)},${Math.round(_.y * i)},${Math.round(_.z * i)}`, u[1] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, u[2] = `${Math.round(p.x * i)},${Math.round(p.y * i)},${Math.round(p.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let v = 0; v < 3; v++){
                    let x = (v + 1) % 3, y = u[v], b = u[x], w = Mr[h[v]], R = Mr[h[x]], I = `${y}_${b}`, M = `${b}_${y}`;
                    M in d && d[M] ? (ao.dot(d[M].normal) <= r && (f.push(w.x, w.y, w.z), f.push(R.x, R.y, R.z)), d[M] = null) : I in d || (d[I] = {
                        index0: l[v],
                        index1: l[x],
                        normal: ao.clone()
                    });
                }
            }
            for(let m in d)if (d[m]) {
                let { index0: _ , index1: g  } = d[m];
                vr.fromBufferAttribute(o, _), yr.fromBufferAttribute(o, g), f.push(vr.x, vr.y, vr.z), f.push(yr.x, yr.y, yr.z);
            }
            this.setAttribute("position", new ve(f, 3));
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
}, Fn = class extends ji {
    constructor(e){
        super(e), this.uuid = kt(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new ji().fromJSON(i));
        }
        return this;
    }
}, ex = {
    triangulate: function(s1, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s1.length, r = Pd(s1, 0, i, t, !0), a = [];
        if (!r || r.next === r.prev) return a;
        let o, c, l, h, u, d, f;
        if (n && (r = rx(s1, e, r, t)), s1.length > 80 * t) {
            o = l = s1[0], c = h = s1[1];
            for(let m = t; m < i; m += t)u = s1[m], d = s1[m + 1], u < o && (o = u), d < c && (c = d), u > l && (l = u), d > h && (h = d);
            f = Math.max(l - o, h - c), f = f !== 0 ? 32767 / f : 0;
        }
        return Os(r, a, t, o, c, f, 0), a;
    }
};
function Pd(s1, e, t, n, i) {
    let r, a;
    if (i === gx(s1, e, t, n) > 0) for(r = e; r < t; r += n)a = tu(r, s1[r], s1[r + 1], a);
    else for(r = t - n; r >= e; r -= n)a = tu(r, s1[r], s1[r + 1], a);
    return a && Ma(a, a.next) && (Bs(a), a = a.next), a;
}
function fi(s1, e) {
    if (!s1) return s1;
    e || (e = s1);
    let t = s1, n;
    do if (n = !1, !t.steiner && (Ma(t, t.next) || st(t.prev, t, t.next) === 0)) {
        if (Bs(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function Os(s1, e, t, n, i, r, a) {
    if (!s1) return;
    !a && r && hx(s1, n, i, r);
    let o = s1, c, l;
    for(; s1.prev !== s1.next;){
        if (c = s1.prev, l = s1.next, r ? nx(s1, n, i, r) : tx(s1)) {
            e.push(c.i / t | 0), e.push(s1.i / t | 0), e.push(l.i / t | 0), Bs(s1), s1 = l.next, o = l.next;
            continue;
        }
        if (s1 = l, s1 === o) {
            a ? a === 1 ? (s1 = ix(fi(s1), e, t), Os(s1, e, t, n, i, r, 2)) : a === 2 && sx(s1, e, t, n, i, r) : Os(fi(s1), e, t, n, i, r, 1);
            break;
        }
    }
}
function tx(s1) {
    let e = s1.prev, t = s1, n = s1.next;
    if (st(e, t, n) >= 0) return !1;
    let i = e.x, r = t.x, a = n.x, o = e.y, c = t.y, l = n.y, h = i < r ? i < a ? i : a : r < a ? r : a, u = o < c ? o < l ? o : l : c < l ? c : l, d = i > r ? i > a ? i : a : r > a ? r : a, f = o > c ? o > l ? o : l : c > l ? c : l, m = n.next;
    for(; m !== e;){
        if (m.x >= h && m.x <= d && m.y >= u && m.y <= f && Gi(i, o, r, c, a, l, m.x, m.y) && st(m.prev, m, m.next) >= 0) return !1;
        m = m.next;
    }
    return !0;
}
function nx(s1, e, t, n) {
    let i = s1.prev, r = s1, a = s1.next;
    if (st(i, r, a) >= 0) return !1;
    let o = i.x, c = r.x, l = a.x, h = i.y, u = r.y, d = a.y, f = o < c ? o < l ? o : l : c < l ? c : l, m = h < u ? h < d ? h : d : u < d ? u : d, _ = o > c ? o > l ? o : l : c > l ? c : l, g = h > u ? h > d ? h : d : u > d ? u : d, p = Ko(f, m, e, t, n), v = Ko(_, g, e, t, n), x = s1.prevZ, y = s1.nextZ;
    for(; x && x.z >= p && y && y.z <= v;){
        if (x.x >= f && x.x <= _ && x.y >= m && x.y <= g && x !== i && x !== a && Gi(o, h, c, u, l, d, x.x, x.y) && st(x.prev, x, x.next) >= 0 || (x = x.prevZ, y.x >= f && y.x <= _ && y.y >= m && y.y <= g && y !== i && y !== a && Gi(o, h, c, u, l, d, y.x, y.y) && st(y.prev, y, y.next) >= 0)) return !1;
        y = y.nextZ;
    }
    for(; x && x.z >= p;){
        if (x.x >= f && x.x <= _ && x.y >= m && x.y <= g && x !== i && x !== a && Gi(o, h, c, u, l, d, x.x, x.y) && st(x.prev, x, x.next) >= 0) return !1;
        x = x.prevZ;
    }
    for(; y && y.z <= v;){
        if (y.x >= f && y.x <= _ && y.y >= m && y.y <= g && y !== i && y !== a && Gi(o, h, c, u, l, d, y.x, y.y) && st(y.prev, y, y.next) >= 0) return !1;
        y = y.nextZ;
    }
    return !0;
}
function ix(s1, e, t) {
    let n = s1;
    do {
        let i = n.prev, r = n.next.next;
        !Ma(i, r) && Ld(i, n, n.next, r) && Fs(i, r) && Fs(r, i) && (e.push(i.i / t | 0), e.push(n.i / t | 0), e.push(r.i / t | 0), Bs(n), Bs(n.next), n = s1 = r), n = n.next;
    }while (n !== s1)
    return fi(n);
}
function sx(s1, e, t, n, i, r) {
    let a = s1;
    do {
        let o = a.next.next;
        for(; o !== a.prev;){
            if (a.i !== o.i && fx(a, o)) {
                let c = Id(a, o);
                a = fi(a, a.next), c = fi(c, c.next), Os(a, e, t, n, i, r, 0), Os(c, e, t, n, i, r, 0);
                return;
            }
            o = o.next;
        }
        a = a.next;
    }while (a !== s1)
}
function rx(s1, e, t, n) {
    let i = [], r, a, o, c, l;
    for(r = 0, a = e.length; r < a; r++)o = e[r] * n, c = r < a - 1 ? e[r + 1] * n : s1.length, l = Pd(s1, o, c, n, !1), l === l.next && (l.steiner = !0), i.push(dx(l));
    for(i.sort(ax), r = 0; r < i.length; r++)t = ox(i[r], t);
    return t;
}
function ax(s1, e) {
    return s1.x - e.x;
}
function ox(s1, e) {
    let t = cx(s1, e);
    if (!t) return e;
    let n = Id(t, s1);
    return fi(n, n.next), fi(t, t.next);
}
function cx(s1, e) {
    let t = e, n = -1 / 0, i, r = s1.x, a = s1.y;
    do {
        if (a <= t.y && a >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (a - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= r && d > n && (n = d, i = t.x < t.next.x ? t : t.next, d === r)) return i;
        }
        t = t.next;
    }while (t !== e)
    if (!i) return null;
    let o = i, c = i.x, l = i.y, h = 1 / 0, u;
    t = i;
    do r >= t.x && t.x >= c && r !== t.x && Gi(a < l ? r : n, a, c, l, a < l ? n : r, a, t.x, t.y) && (u = Math.abs(a - t.y) / (r - t.x), Fs(t, s1) && (u < h || u === h && (t.x > i.x || t.x === i.x && lx(i, t))) && (i = t, h = u)), t = t.next;
    while (t !== o)
    return i;
}
function lx(s1, e) {
    return st(s1.prev, s1, e.prev) < 0 && st(e.next, s1, s1.next) < 0;
}
function hx(s1, e, t, n) {
    let i = s1;
    do i.z === 0 && (i.z = Ko(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s1)
    i.prevZ.nextZ = null, i.prevZ = null, ux(i);
}
function ux(s1) {
    let e, t, n, i, r, a, o, c, l = 1;
    do {
        for(t = s1, s1 = null, r = null, a = 0; t;){
            for(a++, n = t, o = 0, e = 0; e < l && (o++, n = n.nextZ, !!n); e++);
            for(c = l; o > 0 || c > 0 && n;)o !== 0 && (c === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, o--) : (i = n, n = n.nextZ, c--), r ? r.nextZ = i : s1 = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, l *= 2;
    }while (a > 1)
    return s1;
}
function Ko(s1, e, t, n, i) {
    return s1 = (s1 - t) * i | 0, e = (e - n) * i | 0, s1 = (s1 | s1 << 8) & 16711935, s1 = (s1 | s1 << 4) & 252645135, s1 = (s1 | s1 << 2) & 858993459, s1 = (s1 | s1 << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s1 | e << 1;
}
function dx(s1) {
    let e = s1, t = s1;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s1)
    return t;
}
function Gi(s1, e, t, n, i, r, a, o) {
    return (i - a) * (e - o) >= (s1 - a) * (r - o) && (s1 - a) * (n - o) >= (t - a) * (e - o) && (t - a) * (r - o) >= (i - a) * (n - o);
}
function fx(s1, e) {
    return s1.next.i !== e.i && s1.prev.i !== e.i && !px(s1, e) && (Fs(s1, e) && Fs(e, s1) && mx(s1, e) && (st(s1.prev, s1, e.prev) || st(s1, e.prev, e)) || Ma(s1, e) && st(s1.prev, s1, s1.next) > 0 && st(e.prev, e, e.next) > 0);
}
function st(s1, e, t) {
    return (e.y - s1.y) * (t.x - e.x) - (e.x - s1.x) * (t.y - e.y);
}
function Ma(s1, e) {
    return s1.x === e.x && s1.y === e.y;
}
function Ld(s1, e, t, n) {
    let i = br(st(s1, e, t)), r = br(st(s1, e, n)), a = br(st(t, n, s1)), o = br(st(t, n, e));
    return !!(i !== r && a !== o || i === 0 && Sr(s1, t, e) || r === 0 && Sr(s1, n, e) || a === 0 && Sr(t, s1, n) || o === 0 && Sr(t, e, n));
}
function Sr(s1, e, t) {
    return e.x <= Math.max(s1.x, t.x) && e.x >= Math.min(s1.x, t.x) && e.y <= Math.max(s1.y, t.y) && e.y >= Math.min(s1.y, t.y);
}
function br(s1) {
    return s1 > 0 ? 1 : s1 < 0 ? -1 : 0;
}
function px(s1, e) {
    let t = s1;
    do {
        if (t.i !== s1.i && t.next.i !== s1.i && t.i !== e.i && t.next.i !== e.i && Ld(t, t.next, s1, e)) return !0;
        t = t.next;
    }while (t !== s1)
    return !1;
}
function Fs(s1, e) {
    return st(s1.prev, s1, s1.next) < 0 ? st(s1, e, s1.next) >= 0 && st(s1, s1.prev, e) >= 0 : st(s1, e, s1.prev) < 0 || st(s1, s1.next, e) < 0;
}
function mx(s1, e) {
    let t = s1, n = !1, i = (s1.x + e.x) / 2, r = (s1.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s1)
    return n;
}
function Id(s1, e) {
    let t = new Qo(s1.i, s1.x, s1.y), n = new Qo(e.i, e.x, e.y), i = s1.next, r = e.prev;
    return s1.next = e, e.prev = s1, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function tu(s1, e, t, n) {
    let i = new Qo(s1, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function Bs(s1) {
    s1.next.prev = s1.prev, s1.prev.next = s1.next, s1.prevZ && (s1.prevZ.nextZ = s1.nextZ), s1.nextZ && (s1.nextZ.prevZ = s1.prevZ);
}
function Qo(s1, e, t) {
    this.i = s1, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function gx(s1, e, t, n) {
    let i = 0;
    for(let r = e, a = t - n; r < t; r += n)i += (s1[a] - s1[r]) * (s1[r + 1] + s1[a + 1]), a = r;
    return i;
}
var yn = class s1 {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return s1.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        nu(e), iu(n, e);
        let a = e.length;
        t.forEach(nu);
        for(let c = 0; c < t.length; c++)i.push(a), a += t[c].length, iu(n, t[c]);
        let o = ex.triangulate(n, i);
        for(let c = 0; c < o.length; c += 3)r.push(o.slice(c, c + 3));
        return r;
    }
};
function nu(s1) {
    let e = s1.length;
    e > 2 && s1[e - 1].equals(s1[0]) && s1.pop();
}
function iu(s1, e) {
    for(let t = 0; t < e.length; t++)s1.push(e[t].x), s1.push(e[t].y);
}
var jo = class s1 extends Ge {
    constructor(e = new Fn([
        new Z(.5, .5),
        new Z(-.5, .5),
        new Z(-.5, -.5),
        new Z(.5, -.5)
    ]), t = {}){
        super(), this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let o = 0, c = e.length; o < c; o++){
            let l = e[o];
            a(l);
        }
        this.setAttribute("position", new ve(i, 3)), this.setAttribute("uv", new ve(r, 2)), this.computeVertexNormals();
        function a(o) {
            let c = [], l = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, _ = t.bevelOffset !== void 0 ? t.bevelOffset : 0, g = t.bevelSegments !== void 0 ? t.bevelSegments : 3, p = t.extrudePath, v = t.UVGenerator !== void 0 ? t.UVGenerator : _x, x, y = !1, b, w, R, I;
            p && (x = p.getSpacedPoints(h), y = !0, d = !1, b = p.computeFrenetFrames(h, !1), w = new A, R = new A, I = new A), d || (g = 0, f = 0, m = 0, _ = 0);
            let M = o.extractPoints(l), T = M.shape, O = M.holes;
            if (!yn.isClockWise(T)) {
                T = T.reverse();
                for(let L = 0, oe = O.length; L < oe; L++){
                    let X = O[L];
                    yn.isClockWise(X) && (O[L] = X.reverse());
                }
            }
            let $ = yn.triangulateShape(T, O), U = T;
            for(let L = 0, oe = O.length; L < oe; L++){
                let X = O[L];
                T = T.concat(X);
            }
            function z(L, oe, X) {
                return oe || console.error("THREE.ExtrudeGeometry: vec does not exist"), L.clone().addScaledVector(oe, X);
            }
            let q = T.length, H = $.length;
            function ne(L, oe, X) {
                let ie, J, Se, me = L.x - oe.x, ye = L.y - oe.y, Ne = X.x - L.x, qe = X.y - L.y, rt = me * me + ye * ye, C = me * qe - ye * Ne;
                if (Math.abs(C) > Number.EPSILON) {
                    let S = Math.sqrt(rt), B = Math.sqrt(Ne * Ne + qe * qe), ee = oe.x - ye / S, j = oe.y + me / S, te = X.x - qe / B, Me = X.y + Ne / B, re = ((te - ee) * qe - (Me - j) * Ne) / (me * qe - ye * Ne);
                    ie = ee + me * re - L.x, J = j + ye * re - L.y;
                    let de = ie * ie + J * J;
                    if (de <= 2) return new Z(ie, J);
                    Se = Math.sqrt(de / 2);
                } else {
                    let S = !1;
                    me > Number.EPSILON ? Ne > Number.EPSILON && (S = !0) : me < -Number.EPSILON ? Ne < -Number.EPSILON && (S = !0) : Math.sign(ye) === Math.sign(qe) && (S = !0), S ? (ie = -ye, J = me, Se = Math.sqrt(rt)) : (ie = me, J = ye, Se = Math.sqrt(rt / 2));
                }
                return new Z(ie / Se, J / Se);
            }
            let W = [];
            for(let L = 0, oe = U.length, X = oe - 1, ie = L + 1; L < oe; L++, X++, ie++)X === oe && (X = 0), ie === oe && (ie = 0), W[L] = ne(U[L], U[X], U[ie]);
            let K = [], D, G = W.concat();
            for(let L = 0, oe = O.length; L < oe; L++){
                let X = O[L];
                D = [];
                for(let ie = 0, J = X.length, Se = J - 1, me = ie + 1; ie < J; ie++, Se++, me++)Se === J && (Se = 0), me === J && (me = 0), D[ie] = ne(X[ie], X[Se], X[me]);
                K.push(D), G = G.concat(D);
            }
            for(let L = 0; L < g; L++){
                let oe = L / g, X = f * Math.cos(oe * Math.PI / 2), ie = m * Math.sin(oe * Math.PI / 2) + _;
                for(let J = 0, Se = U.length; J < Se; J++){
                    let me = z(U[J], W[J], ie);
                    Ee(me.x, me.y, -X);
                }
                for(let J = 0, Se = O.length; J < Se; J++){
                    let me = O[J];
                    D = K[J];
                    for(let ye = 0, Ne = me.length; ye < Ne; ye++){
                        let qe = z(me[ye], D[ye], ie);
                        Ee(qe.x, qe.y, -X);
                    }
                }
            }
            let he = m + _;
            for(let L = 0; L < q; L++){
                let oe = d ? z(T[L], G[L], he) : T[L];
                y ? (R.copy(b.normals[0]).multiplyScalar(oe.x), w.copy(b.binormals[0]).multiplyScalar(oe.y), I.copy(x[0]).add(R).add(w), Ee(I.x, I.y, I.z)) : Ee(oe.x, oe.y, 0);
            }
            for(let L = 1; L <= h; L++)for(let oe = 0; oe < q; oe++){
                let X = d ? z(T[oe], G[oe], he) : T[oe];
                y ? (R.copy(b.normals[L]).multiplyScalar(X.x), w.copy(b.binormals[L]).multiplyScalar(X.y), I.copy(x[L]).add(R).add(w), Ee(I.x, I.y, I.z)) : Ee(X.x, X.y, u / h * L);
            }
            for(let L = g - 1; L >= 0; L--){
                let oe = L / g, X = f * Math.cos(oe * Math.PI / 2), ie = m * Math.sin(oe * Math.PI / 2) + _;
                for(let J = 0, Se = U.length; J < Se; J++){
                    let me = z(U[J], W[J], ie);
                    Ee(me.x, me.y, u + X);
                }
                for(let J = 0, Se = O.length; J < Se; J++){
                    let me = O[J];
                    D = K[J];
                    for(let ye = 0, Ne = me.length; ye < Ne; ye++){
                        let qe = z(me[ye], D[ye], ie);
                        y ? Ee(qe.x, qe.y + x[h - 1].y, x[h - 1].x + X) : Ee(qe.x, qe.y, u + X);
                    }
                }
            }
            fe(), _e();
            function fe() {
                let L = i.length / 3;
                if (d) {
                    let oe = 0, X = q * oe;
                    for(let ie = 0; ie < H; ie++){
                        let J = $[ie];
                        Te(J[2] + X, J[1] + X, J[0] + X);
                    }
                    oe = h + g * 2, X = q * oe;
                    for(let ie = 0; ie < H; ie++){
                        let J = $[ie];
                        Te(J[0] + X, J[1] + X, J[2] + X);
                    }
                } else {
                    for(let oe = 0; oe < H; oe++){
                        let X = $[oe];
                        Te(X[2], X[1], X[0]);
                    }
                    for(let oe = 0; oe < H; oe++){
                        let X = $[oe];
                        Te(X[0] + q * h, X[1] + q * h, X[2] + q * h);
                    }
                }
                n.addGroup(L, i.length / 3 - L, 0);
            }
            function _e() {
                let L = i.length / 3, oe = 0;
                we(U, oe), oe += U.length;
                for(let X = 0, ie = O.length; X < ie; X++){
                    let J = O[X];
                    we(J, oe), oe += J.length;
                }
                n.addGroup(L, i.length / 3 - L, 1);
            }
            function we(L, oe) {
                let X = L.length;
                for(; --X >= 0;){
                    let ie = X, J = X - 1;
                    J < 0 && (J = L.length - 1);
                    for(let Se = 0, me = h + g * 2; Se < me; Se++){
                        let ye = q * Se, Ne = q * (Se + 1), qe = oe + ie + ye, rt = oe + J + ye, C = oe + J + Ne, S = oe + ie + Ne;
                        Ye(qe, rt, C, S);
                    }
                }
            }
            function Ee(L, oe, X) {
                c.push(L), c.push(oe), c.push(X);
            }
            function Te(L, oe, X) {
                it(L), it(oe), it(X);
                let ie = i.length / 3, J = v.generateTopUV(n, i, ie - 3, ie - 2, ie - 1);
                Ce(J[0]), Ce(J[1]), Ce(J[2]);
            }
            function Ye(L, oe, X, ie) {
                it(L), it(oe), it(ie), it(oe), it(X), it(ie);
                let J = i.length / 3, Se = v.generateSideWallUV(n, i, J - 6, J - 3, J - 2, J - 1);
                Ce(Se[0]), Ce(Se[1]), Ce(Se[3]), Ce(Se[1]), Ce(Se[2]), Ce(Se[3]);
            }
            function it(L) {
                i.push(c[L * 3 + 0]), i.push(c[L * 3 + 1]), i.push(c[L * 3 + 2]);
            }
            function Ce(L) {
                r.push(L.x), r.push(L.y);
            }
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return xx(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, a = e.shapes.length; r < a; r++){
            let o = t[e.shapes[r]];
            n.push(o);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new ca[i.type]().fromJSON(i)), new s1(n, e.options);
    }
}, _x = {
    generateTopUV: function(s1, e, t, n, i) {
        let r = e[t * 3], a = e[t * 3 + 1], o = e[n * 3], c = e[n * 3 + 1], l = e[i * 3], h = e[i * 3 + 1];
        return [
            new Z(r, a),
            new Z(o, c),
            new Z(l, h)
        ];
    },
    generateSideWallUV: function(s1, e, t, n, i, r) {
        let a = e[t * 3], o = e[t * 3 + 1], c = e[t * 3 + 2], l = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], _ = e[r * 3], g = e[r * 3 + 1], p = e[r * 3 + 2];
        return Math.abs(o - h) < Math.abs(a - l) ? [
            new Z(a, 1 - c),
            new Z(l, 1 - u),
            new Z(d, 1 - m),
            new Z(_, 1 - p)
        ] : [
            new Z(o, 1 - c),
            new Z(h, 1 - u),
            new Z(f, 1 - m),
            new Z(g, 1 - p)
        ];
    }
};
function xx(s1, e, t) {
    if (t.shapes = [], Array.isArray(s1)) for(let n = 0, i = s1.length; n < i; n++){
        let r = s1[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s1.uuid);
    return t.options = Object.assign({}, e), e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var ec = class s1 extends di {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t), this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.detail);
    }
}, ha = class s1 extends di {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t), this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.detail);
    }
}, tc = class s1 extends Ge {
    constructor(e = .5, t = 1, n = 32, i = 1, r = 0, a = Math.PI * 2){
        super(), this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: a
        }, n = Math.max(3, n), i = Math.max(1, i);
        let o = [], c = [], l = [], h = [], u = e, d = (t - e) / i, f = new A, m = new Z;
        for(let _ = 0; _ <= i; _++){
            for(let g = 0; g <= n; g++){
                let p = r + g / n * a;
                f.x = u * Math.cos(p), f.y = u * Math.sin(p), c.push(f.x, f.y, f.z), l.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let _ = 0; _ < i; _++){
            let g = _ * (n + 1);
            for(let p = 0; p < n; p++){
                let v = p + g, x = v, y = v + n + 1, b = v + n + 2, w = v + 1;
                o.push(x, y, w), o.push(y, b, w);
            }
        }
        this.setIndex(o), this.setAttribute("position", new ve(c, 3)), this.setAttribute("normal", new ve(l, 3)), this.setAttribute("uv", new ve(h, 2));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, nc = class s1 extends Ge {
    constructor(e = new Fn([
        new Z(0, .5),
        new Z(-.5, -.5),
        new Z(.5, -.5)
    ]), t = 12){
        super(), this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], a = [], o = 0, c = 0;
        if (Array.isArray(e) === !1) l(e);
        else for(let h = 0; h < e.length; h++)l(e[h]), this.addGroup(o, c, h), o += c, c = 0;
        this.setIndex(n), this.setAttribute("position", new ve(i, 3)), this.setAttribute("normal", new ve(r, 3)), this.setAttribute("uv", new ve(a, 2));
        function l(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            yn.isClockWise(f) === !1 && (f = f.reverse());
            for(let g = 0, p = m.length; g < p; g++){
                let v = m[g];
                yn.isClockWise(v) === !0 && (m[g] = v.reverse());
            }
            let _ = yn.triangulateShape(f, m);
            for(let g = 0, p = m.length; g < p; g++){
                let v = m[g];
                f = f.concat(v);
            }
            for(let g = 0, p = f.length; g < p; g++){
                let v = f[g];
                i.push(v.x, v.y, 0), r.push(0, 0, 1), a.push(v.x, v.y);
            }
            for(let g = 0, p = _.length; g < p; g++){
                let v = _[g], x = v[0] + u, y = v[1] + u, b = v[2] + u;
                n.push(x, y, b), c += 3;
            }
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return vx(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let a = t[e.shapes[i]];
            n.push(a);
        }
        return new s1(n, e.curveSegments);
    }
};
function vx(s1, e) {
    if (e.shapes = [], Array.isArray(s1)) for(let t = 0, n = s1.length; t < n; t++){
        let i = s1[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s1.uuid);
    return e;
}
var ua = class s1 extends Ge {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, a = 0, o = Math.PI){
        super(), this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: a,
            thetaLength: o
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let c = Math.min(a + o, Math.PI), l = 0, h = [], u = new A, d = new A, f = [], m = [], _ = [], g = [];
        for(let p = 0; p <= n; p++){
            let v = [], x = p / n, y = 0;
            p === 0 && a === 0 ? y = .5 / t : p === n && c === Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let w = b / t;
                u.x = -e * Math.cos(i + w * r) * Math.sin(a + x * o), u.y = e * Math.cos(a + x * o), u.z = e * Math.sin(i + w * r) * Math.sin(a + x * o), m.push(u.x, u.y, u.z), d.copy(u).normalize(), _.push(d.x, d.y, d.z), g.push(w + y, 1 - x), v.push(l++);
            }
            h.push(v);
        }
        for(let p = 0; p < n; p++)for(let v = 0; v < t; v++){
            let x = h[p][v + 1], y = h[p][v], b = h[p + 1][v], w = h[p + 1][v + 1];
            (p !== 0 || a > 0) && f.push(x, y, w), (p !== n - 1 || c < Math.PI) && f.push(y, b, w);
        }
        this.setIndex(f), this.setAttribute("position", new ve(m, 3)), this.setAttribute("normal", new ve(_, 3)), this.setAttribute("uv", new ve(g, 2));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, ic = class s1 extends di {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t), this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new s1(e.radius, e.detail);
    }
}, sc = class s1 extends Ge {
    constructor(e = 1, t = .4, n = 12, i = 48, r = Math.PI * 2){
        super(), this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], o = [], c = [], l = [], h = new A, u = new A, d = new A;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let _ = m / i * r, g = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(g)) * Math.cos(_), u.y = (e + t * Math.cos(g)) * Math.sin(_), u.z = t * Math.sin(g), o.push(u.x, u.y, u.z), h.x = e * Math.cos(_), h.y = e * Math.sin(_), d.subVectors(u, h).normalize(), c.push(d.x, d.y, d.z), l.push(m / i), l.push(f / n);
        }
        for(let f = 1; f <= n; f++)for(let m = 1; m <= i; m++){
            let _ = (i + 1) * f + m - 1, g = (i + 1) * (f - 1) + m - 1, p = (i + 1) * (f - 1) + m, v = (i + 1) * f + m;
            a.push(_, g, v), a.push(g, p, v);
        }
        this.setIndex(a), this.setAttribute("position", new ve(o, 3)), this.setAttribute("normal", new ve(c, 3)), this.setAttribute("uv", new ve(l, 2));
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, rc = class s1 extends Ge {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, a = 3){
        super(), this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: a
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], c = [], l = [], h = [], u = new A, d = new A, f = new A, m = new A, _ = new A, g = new A, p = new A;
        for(let x = 0; x <= n; ++x){
            let y = x / n * r * Math.PI * 2;
            v(y, r, a, e, f), v(y + .01, r, a, e, m), g.subVectors(m, f), p.addVectors(m, f), _.crossVectors(g, p), p.crossVectors(_, g), _.normalize(), p.normalize();
            for(let b = 0; b <= i; ++b){
                let w = b / i * Math.PI * 2, R = -t * Math.cos(w), I = t * Math.sin(w);
                u.x = f.x + (R * p.x + I * _.x), u.y = f.y + (R * p.y + I * _.y), u.z = f.z + (R * p.z + I * _.z), c.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), l.push(d.x, d.y, d.z), h.push(x / n), h.push(b / i);
            }
        }
        for(let x = 1; x <= n; x++)for(let y = 1; y <= i; y++){
            let b = (i + 1) * (x - 1) + (y - 1), w = (i + 1) * x + (y - 1), R = (i + 1) * x + y, I = (i + 1) * (x - 1) + y;
            o.push(b, w, I), o.push(w, R, I);
        }
        this.setIndex(o), this.setAttribute("position", new ve(c, 3)), this.setAttribute("normal", new ve(l, 3)), this.setAttribute("uv", new ve(h, 2));
        function v(x, y, b, w, R) {
            let I = Math.cos(x), M = Math.sin(x), T = b / y * x, O = Math.cos(T);
            R.x = w * (2 + O) * .5 * I, R.y = w * (2 + O) * M * .5, R.z = w * Math.sin(T) * .5;
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    static fromJSON(e) {
        return new s1(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, ac = class s1 extends Ge {
    constructor(e = new aa(new A(-1, -1, 0), new A(-1, 1, 0), new A(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super(), this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let a = e.computeFrenetFrames(t, r);
        this.tangents = a.tangents, this.normals = a.normals, this.binormals = a.binormals;
        let o = new A, c = new A, l = new Z, h = new A, u = [], d = [], f = [], m = [];
        _(), this.setIndex(m), this.setAttribute("position", new ve(u, 3)), this.setAttribute("normal", new ve(d, 3)), this.setAttribute("uv", new ve(f, 2));
        function _() {
            for(let x = 0; x < t; x++)g(x);
            g(r === !1 ? t : 0), v(), p();
        }
        function g(x) {
            h = e.getPointAt(x / t, h);
            let y = a.normals[x], b = a.binormals[x];
            for(let w = 0; w <= i; w++){
                let R = w / i * Math.PI * 2, I = Math.sin(R), M = -Math.cos(R);
                c.x = M * y.x + I * b.x, c.y = M * y.y + I * b.y, c.z = M * y.z + I * b.z, c.normalize(), d.push(c.x, c.y, c.z), o.x = h.x + n * c.x, o.y = h.y + n * c.y, o.z = h.z + n * c.z, u.push(o.x, o.y, o.z);
            }
        }
        function p() {
            for(let x = 1; x <= t; x++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (x - 1) + (y - 1), w = (i + 1) * x + (y - 1), R = (i + 1) * x + y, I = (i + 1) * (x - 1) + y;
                m.push(b, w, I), m.push(w, R, I);
            }
        }
        function v() {
            for(let x = 0; x <= t; x++)for(let y = 0; y <= i; y++)l.x = x / t, l.y = y / i, f.push(l.x, l.y);
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new s1(new ca[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, oc = class extends Ge {
    constructor(e = null){
        if (super(), this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new A, r = new A;
            if (e.index !== null) {
                let a = e.attributes.position, o = e.index, c = e.groups;
                c.length === 0 && (c = [
                    {
                        start: 0,
                        count: o.count,
                        materialIndex: 0
                    }
                ]);
                for(let l = 0, h = c.length; l < h; ++l){
                    let u = c[l], d = u.start, f = u.count;
                    for(let m = d, _ = d + f; m < _; m += 3)for(let g = 0; g < 3; g++){
                        let p = o.getX(m + g), v = o.getX(m + (g + 1) % 3);
                        i.fromBufferAttribute(a, p), r.fromBufferAttribute(a, v), su(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let a = e.attributes.position;
                for(let o = 0, c = a.count / 3; o < c; o++)for(let l = 0; l < 3; l++){
                    let h = 3 * o + l, u = 3 * o + (l + 1) % 3;
                    i.fromBufferAttribute(a, h), r.fromBufferAttribute(a, u), su(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new ve(t, 3));
        }
    }
    copy(e) {
        return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
    }
};
function su(s1, e, t) {
    let n = `${s1.x},${s1.y},${s1.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s1.x},${s1.y},${s1.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n), t.add(i), !0);
}
var ru = Object.freeze({
    __proto__: null,
    BoxGeometry: Ji,
    CapsuleGeometry: qo,
    CircleGeometry: Yo,
    ConeGeometry: Zo,
    CylinderGeometry: Ns,
    DodecahedronGeometry: Jo,
    EdgesGeometry: $o,
    ExtrudeGeometry: jo,
    IcosahedronGeometry: ec,
    LatheGeometry: la,
    OctahedronGeometry: ha,
    PlaneGeometry: $r,
    PolyhedronGeometry: di,
    RingGeometry: tc,
    ShapeGeometry: nc,
    SphereGeometry: ua,
    TetrahedronGeometry: ic,
    TorusGeometry: sc,
    TorusKnotGeometry: rc,
    TubeGeometry: ac,
    WireframeGeometry: oc
}), cc = class extends bt {
    constructor(e){
        super(), this.isShadowMaterial = !0, this.type = "ShadowMaterial", this.color = new pe(0), this.transparent = !0, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.fog = e.fog, this;
    }
}, lc = class extends jt {
    constructor(e){
        super(e), this.isRawShaderMaterial = !0, this.type = "RawShaderMaterial";
    }
}, da = class extends bt {
    constructor(e){
        super(), this.isMeshStandardMaterial = !0, this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new pe(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new pe(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
    }
}, hc = class extends da {
    constructor(e){
        super(), this.isMeshPhysicalMaterial = !0, this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.anisotropyRotation = 0, this.anisotropyMap = null, this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new Z(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return ct(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.iridescenceMap = null, this.iridescenceIOR = 1.3, this.iridescenceThicknessRange = [
            100,
            400
        ], this.iridescenceThicknessMap = null, this.sheenColor = new pe(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 1 / 0, this.attenuationColor = new pe(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new pe(1, 1, 1), this.specularColorMap = null, this._anisotropy = 0, this._clearcoat = 0, this._iridescence = 0, this._sheen = 0, this._transmission = 0, this.setValues(e);
    }
    get anisotropy() {
        return this._anisotropy;
    }
    set anisotropy(e) {
        this._anisotropy > 0 != e > 0 && this.version++, this._anisotropy = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get iridescence() {
        return this._iridescence;
    }
    set iridescence(e) {
        this._iridescence > 0 != e > 0 && this.version++, this._iridescence = e;
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.anisotropy = e.anisotropy, this.anisotropyRotation = e.anisotropyRotation, this.anisotropyMap = e.anisotropyMap, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.iridescence = e.iridescence, this.iridescenceMap = e.iridescenceMap, this.iridescenceIOR = e.iridescenceIOR, this.iridescenceThicknessRange = [
            ...e.iridescenceThicknessRange
        ], this.iridescenceThicknessMap = e.iridescenceThicknessMap, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
}, uc = class extends bt {
    constructor(e){
        super(), this.isMeshPhongMaterial = !0, this.type = "MeshPhongMaterial", this.color = new pe(16777215), this.specular = new pe(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new pe(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = xa, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
    }
}, dc = class extends bt {
    constructor(e){
        super(), this.isMeshToonMaterial = !0, this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new pe(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new pe(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
    }
}, fc = class extends bt {
    constructor(e){
        super(), this.isMeshNormalMaterial = !0, this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
}, pc = class extends bt {
    constructor(e){
        super(), this.isMeshLambertMaterial = !0, this.type = "MeshLambertMaterial", this.color = new pe(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new pe(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = xa, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
    }
}, mc = class extends bt {
    constructor(e){
        super(), this.isMeshMatcapMaterial = !0, this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new pe(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = mi, this.normalScale = new Z(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.fog = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this.fog = e.fog, this;
    }
}, gc = class extends wt {
    constructor(e){
        super(), this.isLineDashedMaterial = !0, this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
function ni(s1, e, t) {
    return !s1 || !t && s1.constructor === e ? s1 : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s1) : Array.prototype.slice.call(s1);
}
function Ud(s1) {
    return ArrayBuffer.isView(s1) && !(s1 instanceof DataView);
}
function Dd(s1) {
    function e(i, r) {
        return s1[i] - s1[r];
    }
    let t = s1.length, n = new Array(t);
    for(let i = 0; i !== t; ++i)n[i] = i;
    return n.sort(e), n;
}
function _c(s1, e, t) {
    let n = s1.length, i = new s1.constructor(n);
    for(let r = 0, a = 0; a !== n; ++r){
        let o = t[r] * e;
        for(let c = 0; c !== e; ++c)i[a++] = s1[o + c];
    }
    return i;
}
function $c(s1, e, t, n) {
    let i = 1, r = s1[0];
    for(; r !== void 0 && r[n] === void 0;)r = s1[i++];
    if (r === void 0) return;
    let a = r[n];
    if (a !== void 0) if (Array.isArray(a)) do a = r[n], a !== void 0 && (e.push(r.time), t.push.apply(t, a)), r = s1[i++];
    while (r !== void 0)
    else if (a.toArray !== void 0) do a = r[n], a !== void 0 && (e.push(r.time), a.toArray(t, t.length)), r = s1[i++];
    while (r !== void 0)
    else do a = r[n], a !== void 0 && (e.push(r.time), t.push(a)), r = s1[i++];
    while (r !== void 0)
}
function yx(s1, e, t, n, i = 30) {
    let r = s1.clone();
    r.name = e;
    let a = [];
    for(let c = 0; c < r.tracks.length; ++c){
        let l = r.tracks[c], h = l.getValueSize(), u = [], d = [];
        for(let f = 0; f < l.times.length; ++f){
            let m = l.times[f] * i;
            if (!(m < t || m >= n)) {
                u.push(l.times[f]);
                for(let _ = 0; _ < h; ++_)d.push(l.values[f * h + _]);
            }
        }
        u.length !== 0 && (l.times = ni(u, l.times.constructor), l.values = ni(d, l.values.constructor), a.push(l));
    }
    r.tracks = a;
    let o = 1 / 0;
    for(let c = 0; c < r.tracks.length; ++c)o > r.tracks[c].times[0] && (o = r.tracks[c].times[0]);
    for(let c = 0; c < r.tracks.length; ++c)r.tracks[c].shift(-1 * o);
    return r.resetDuration(), r;
}
function Mx(s1, e = 0, t = s1, n = 30) {
    n <= 0 && (n = 30);
    let i = t.tracks.length, r = e / n;
    for(let a = 0; a < i; ++a){
        let o = t.tracks[a], c = o.ValueTypeName;
        if (c === "bool" || c === "string") continue;
        let l = s1.tracks.find(function(p) {
            return p.name === o.name && p.ValueTypeName === c;
        });
        if (l === void 0) continue;
        let h = 0, u = o.getValueSize();
        o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
        let d = 0, f = l.getValueSize();
        l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
        let m = o.times.length - 1, _;
        if (r <= o.times[0]) {
            let p = h, v = u - h;
            _ = o.values.slice(p, v);
        } else if (r >= o.times[m]) {
            let p = m * u + h, v = p + u - h;
            _ = o.values.slice(p, v);
        } else {
            let p = o.createInterpolant(), v = h, x = u - h;
            p.evaluate(r), _ = p.resultBuffer.slice(v, x);
        }
        c === "quaternion" && new Ut().fromArray(_).normalize().conjugate().toArray(_);
        let g = l.times.length;
        for(let p = 0; p < g; ++p){
            let v = p * f + d;
            if (c === "quaternion") Ut.multiplyQuaternionsFlat(l.values, v, _, 0, l.values, v);
            else {
                let x = f - d * 2;
                for(let y = 0; y < x; ++y)l.values[v + y] -= _[y];
            }
        }
    }
    return s1.blendMode = xd, s1;
}
var Sv = {
    convertArray: ni,
    isTypedArray: Ud,
    getKeyframeOrder: Dd,
    sortedArray: _c,
    flattenJSON: $c,
    subclip: yx,
    makeClipAdditive: Mx
}, es = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let a;
                n: {
                    i: if (!(e < i)) {
                        for(let o = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.copySampleValue_(n - 1);
                            }
                            if (n === o) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        a = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let o = t[1];
                        e < o && (n = 2, r = o);
                        for(let c = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                            if (n === c) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        a = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < a;){
                    let o = n + a >>> 1;
                    e < t[o] ? a = o : n = o + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.copySampleValue_(n - 1);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let a = 0; a !== i; ++a)t[a] = n[r + a];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
}, xc = class extends es {
    constructor(e, t, n, i){
        super(e, t, n, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: zi,
            endingEnd: zi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, a = e + 1, o = i[r], c = i[a];
        if (o === void 0) switch(this.getSettings_().endingStart){
            case Vi:
                r = e, o = 2 * t - n;
                break;
            case Br:
                r = i.length - 2, o = t + i[r] - i[r + 1];
                break;
            default:
                r = e, o = n;
        }
        if (c === void 0) switch(this.getSettings_().endingEnd){
            case Vi:
                a = e, c = 2 * n - t;
                break;
            case Br:
                a = 1, c = n + i[1] - i[0];
                break;
            default:
                a = e - 1, c = t;
        }
        let l = (n - t) * .5, h = this.valueSize;
        this._weightPrev = l / (t - o), this._weightNext = l / (c - n), this._offsetPrev = r * h, this._offsetNext = a * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, c = e * o, l = c - o, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), _ = m * m, g = _ * m, p = -d * g + 2 * d * _ - d * m, v = (1 + d) * g + (-1.5 - 2 * d) * _ + (-.5 + d) * m + 1, x = (-1 - f) * g + (1.5 + f) * _ + .5 * m, y = f * g - f * _;
        for(let b = 0; b !== o; ++b)r[b] = p * a[h + b] + v * a[l + b] + x * a[c + b] + y * a[u + b];
        return r;
    }
}, fa = class extends es {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, c = e * o, l = c - o, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== o; ++d)r[d] = a[l + d] * u + a[c + d] * h;
        return r;
    }
}, vc = class extends es {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, Jt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = ni(t, this.TimeBufferType), this.values = ni(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: ni(e.times, Array),
                values: ni(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new vc(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new fa(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new xc(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case Or:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Fr:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case La:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return Or;
            case this.InterpolantFactoryMethodLinear:
                return Fr;
            case this.InterpolantFactoryMethodSmooth:
                return La;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, a = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; a !== -1 && n[a] > t;)--a;
        if (++a, r !== 0 || a !== i) {
            r >= a && (a = Math.max(a, 1), r = a - 1);
            let o = this.getValueSize();
            this.times = n.slice(r, a), this.values = this.values.slice(r * o, a * o);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let a = null;
        for(let o = 0; o !== r; o++){
            let c = n[o];
            if (typeof c == "number" && isNaN(c)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, c), e = !1;
                break;
            }
            if (a !== null && a > c) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, o, c, a), e = !1;
                break;
            }
            a = c;
        }
        if (i !== void 0 && Ud(i)) for(let o = 0, c = i.length; o !== c; ++o){
            let l = i[o];
            if (isNaN(l)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, o, l), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = this.times.slice(), t = this.values.slice(), n = this.getValueSize(), i = this.getInterpolation() === La, r = e.length - 1, a = 1;
        for(let o = 1; o < r; ++o){
            let c = !1, l = e[o], h = e[o + 1];
            if (l !== h && (o !== 1 || l !== e[0])) if (i) c = !0;
            else {
                let u = o * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let _ = t[u + m];
                    if (_ !== t[d + m] || _ !== t[f + m]) {
                        c = !0;
                        break;
                    }
                }
            }
            if (c) {
                if (o !== a) {
                    e[a] = e[o];
                    let u = o * n, d = a * n;
                    for(let f = 0; f !== n; ++f)t[d + f] = t[u + f];
                }
                ++a;
            }
        }
        if (r > 0) {
            e[a] = e[r];
            for(let o = r * n, c = a * n, l = 0; l !== n; ++l)t[c + l] = t[o + l];
            ++a;
        }
        return a !== e.length ? (this.times = e.slice(0, a), this.values = t.slice(0, a * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = this.times.slice(), t = this.values.slice(), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
Jt.prototype.TimeBufferType = Float32Array;
Jt.prototype.ValueBufferType = Float32Array;
Jt.prototype.DefaultInterpolation = Fr;
var Vn = class extends Jt {
};
Vn.prototype.ValueTypeName = "bool";
Vn.prototype.ValueBufferType = Array;
Vn.prototype.DefaultInterpolation = Or;
Vn.prototype.InterpolantFactoryMethodLinear = void 0;
Vn.prototype.InterpolantFactoryMethodSmooth = void 0;
var pa = class extends Jt {
};
pa.prototype.ValueTypeName = "color";
var ts = class extends Jt {
};
ts.prototype.ValueTypeName = "number";
var yc = class extends es {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, c = (n - t) / (i - t), l = e * o;
        for(let h = l + o; l !== h; l += 4)Ut.slerpFlat(r, 0, a, l - o, a, l, c);
        return r;
    }
}, pi = class extends Jt {
    InterpolantFactoryMethodLinear(e) {
        return new yc(this.times, this.values, this.getValueSize(), e);
    }
};
pi.prototype.ValueTypeName = "quaternion";
pi.prototype.DefaultInterpolation = Fr;
pi.prototype.InterpolantFactoryMethodSmooth = void 0;
var kn = class extends Jt {
};
kn.prototype.ValueTypeName = "string";
kn.prototype.ValueBufferType = Array;
kn.prototype.DefaultInterpolation = Or;
kn.prototype.InterpolantFactoryMethodLinear = void 0;
kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var ns = class extends Jt {
};
ns.prototype.ValueTypeName = "vector";
var is = class {
    constructor(e, t = -1, n, i = Xc){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = kt(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let a = 0, o = n.length; a !== o; ++a)t.push(bx(n[a]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, a = n.length; r !== a; ++r)t.push(Jt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, a = [];
        for(let o = 0; o < r; o++){
            let c = [], l = [];
            c.push((o + r - 1) % r, o, (o + 1) % r), l.push(0, 1, 0);
            let h = Dd(c);
            c = _c(c, 1, h), l = _c(l, 1, h), !i && c[0] === 0 && (c.push(r), l.push(l[0])), a.push(new ts(".morphTargetInfluences[" + t[o].name + "]", c, l).scale(1 / n));
        }
        return new this(e, -1, a);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i = 0; i < n.length; i++)if (n[i].name === t) return n[i];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let o = 0, c = e.length; o < c; o++){
            let l = e[o], h = l.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(l);
            }
        }
        let a = [];
        for(let o in i)a.push(this.CreateFromMorphTargetSequence(o, i[o], t, n));
        return a;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, _) {
            if (f.length !== 0) {
                let g = [], p = [];
                $c(f, g, p, m), g.length !== 0 && _.push(new u(d, g, p));
            }
        }, i = [], r = e.name || "default", a = e.fps || 30, o = e.blendMode, c = e.length || -1, l = e.hierarchy || [];
        for(let u = 0; u < l.length; u++){
            let d = l[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let _ = 0; _ < d[m].morphTargets.length; _++)f[d[m].morphTargets[_]] = -1;
                for(let _ in f){
                    let g = [], p = [];
                    for(let v = 0; v !== d[m].morphTargets.length; ++v){
                        let x = d[m];
                        g.push(x.time), p.push(x.morphTarget === _ ? 1 : 0);
                    }
                    i.push(new ts(".morphTargetInfluence[" + _ + "]", g, p));
                }
                c = f.length * a;
            } else {
                let f = ".bones[" + t[u].name + "]";
                n(ns, f + ".position", d, "pos", i), n(pi, f + ".quaternion", d, "rot", i), n(ns, f + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, c, i, o);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function Sx(s1) {
    switch(s1.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return ts;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return ns;
        case "color":
            return pa;
        case "quaternion":
            return pi;
        case "bool":
        case "boolean":
            return Vn;
        case "string":
            return kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s1);
}
function bx(s1) {
    if (s1.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = Sx(s1.type);
    if (s1.times === void 0) {
        let t = [], n = [];
        $c(s1.keys, t, n, "value"), s1.times = t, s1.values = n;
    }
    return e.parse !== void 0 ? e.parse(s1) : new e(s1.name, s1.times, s1.values, s1.interpolation);
}
var ss = {
    enabled: !1,
    files: {},
    add: function(s1, e) {
        this.enabled !== !1 && (this.files[s1] = e);
    },
    get: function(s1) {
        if (this.enabled !== !1) return this.files[s1];
    },
    remove: function(s1) {
        delete this.files[s1];
    },
    clear: function() {
        this.files = {};
    }
}, ma = class {
    constructor(e, t, n){
        let i = this, r = !1, a = 0, o = 0, c, l = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            o++, r === !1 && i.onStart !== void 0 && i.onStart(h, a, o), r = !0;
        }, this.itemEnd = function(h) {
            a++, i.onProgress !== void 0 && i.onProgress(h, a, o), a === o && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return c ? c(h) : h;
        }, this.setURLModifier = function(h) {
            return c = h, this;
        }, this.addHandler = function(h, u) {
            return l.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = l.indexOf(h);
            return u !== -1 && l.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = l.length; u < d; u += 2){
                let f = l[u], m = l[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, Ex = new ma, Dt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : Ex, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
};
Dt.DEFAULT_MATERIAL_NAME = "__DEFAULT";
var fn = {}, Mc = class extends Error {
    constructor(e, t){
        super(e), this.response = t;
    }
}, rn = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = ss.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (fn[e] !== void 0) {
            fn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        fn[e] = [], fn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let a = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        }), o = this.mimeType, c = this.responseType;
        fetch(a).then((l)=>{
            if (l.status === 200 || l.status === 0) {
                if (l.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || l.body === void 0 || l.body.getReader === void 0) return l;
                let h = fn[e], u = l.body.getReader(), d = l.headers.get("Content-Length") || l.headers.get("X-File-Size"), f = d ? parseInt(d) : 0, m = f !== 0, _ = 0, g = new ReadableStream({
                    start (p) {
                        v();
                        function v() {
                            u.read().then(({ done: x , value: y  })=>{
                                if (x) p.close();
                                else {
                                    _ += y.byteLength;
                                    let b = new ProgressEvent("progress", {
                                        lengthComputable: m,
                                        loaded: _,
                                        total: f
                                    });
                                    for(let w = 0, R = h.length; w < R; w++){
                                        let I = h[w];
                                        I.onProgress && I.onProgress(b);
                                    }
                                    p.enqueue(y), v();
                                }
                            });
                        }
                    }
                });
                return new Response(g);
            } else throw new Mc(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`, l);
        }).then((l)=>{
            switch(c){
                case "arraybuffer":
                    return l.arrayBuffer();
                case "blob":
                    return l.blob();
                case "document":
                    return l.text().then((h)=>new DOMParser().parseFromString(h, o));
                case "json":
                    return l.json();
                default:
                    if (o === void 0) return l.text();
                    {
                        let u = /charset="?([^;"\s]*)"?/i.exec(o), d = u && u[1] ? u[1].toLowerCase() : void 0, f = new TextDecoder(d);
                        return l.arrayBuffer().then((m)=>f.decode(m));
                    }
            }
        }).then((l)=>{
            ss.add(e, l);
            let h = fn[e];
            delete fn[e];
            for(let u = 0, d = h.length; u < d; u++){
                let f = h[u];
                f.onLoad && f.onLoad(l);
            }
        }).catch((l)=>{
            let h = fn[e];
            if (h === void 0) throw this.manager.itemError(e), l;
            delete fn[e];
            for(let u = 0, d = h.length; u < d; u++){
                let f = h[u];
                f.onError && f.onError(l);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, au = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = new rn(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(o) {
            try {
                t(r.parse(JSON.parse(o)));
            } catch (c) {
                i ? i(c) : console.error(c), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = is.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, ou = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = [], o = new Us, c = new rn(this.manager);
        c.setPath(this.path), c.setResponseType("arraybuffer"), c.setRequestHeader(this.requestHeader), c.setWithCredentials(r.withCredentials);
        let l = 0;
        function h(u) {
            c.load(e[u], function(d) {
                let f = r.parse(d, !0);
                a[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, l += 1, l === 6 && (f.mipmapCount === 1 && (o.minFilter = mt), o.image = a, o.format = f.format, o.needsUpdate = !0, t && t(o));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else c.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    a[m] = {
                        mipmaps: []
                    };
                    for(let _ = 0; _ < d.mipmapCount; _++)a[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + _]), a[m].format = d.format, a[m].width = d.width, a[m].height = d.height;
                }
                o.image = a;
            } else o.image.width = d.width, o.image.height = d.height, o.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (o.minFilter = mt), o.format = d.format, o.needsUpdate = !0, t && t(o);
        }, n, i);
        return o;
    }
}, rs = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, a = ss.get(e);
        if (a !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(a), r.manager.itemEnd(e);
        }, 0), a;
        let o = ws("img");
        function c() {
            h(), ss.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function l(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            o.removeEventListener("load", c, !1), o.removeEventListener("error", l, !1);
        }
        return o.addEventListener("load", c, !1), o.addEventListener("error", l, !1), e.slice(0, 5) !== "data:" && this.crossOrigin !== void 0 && (o.crossOrigin = this.crossOrigin), r.manager.itemStart(e), o.src = e, o;
    }
}, cu = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new Ki;
        r.colorSpace = vt;
        let a = new rs(this.manager);
        a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
        let o = 0;
        function c(l) {
            a.load(e[l], function(h) {
                r.images[l] = h, o++, o === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let l = 0; l < e.length; ++l)c(l);
        return r;
    }
}, lu = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = new oi, o = new rn(this.manager);
        return o.setResponseType("arraybuffer"), o.setRequestHeader(this.requestHeader), o.setPath(this.path), o.setWithCredentials(r.withCredentials), o.load(e, function(c) {
            let l;
            try {
                l = r.parse(c);
            } catch (h) {
                if (i !== void 0) i(h);
                else {
                    console.error(h);
                    return;
                }
            }
            l.image !== void 0 ? a.image = l.image : l.data !== void 0 && (a.image.width = l.width, a.image.height = l.height, a.image.data = l.data), a.wrapS = l.wrapS !== void 0 ? l.wrapS : It, a.wrapT = l.wrapT !== void 0 ? l.wrapT : It, a.magFilter = l.magFilter !== void 0 ? l.magFilter : mt, a.minFilter = l.minFilter !== void 0 ? l.minFilter : mt, a.anisotropy = l.anisotropy !== void 0 ? l.anisotropy : 1, l.colorSpace !== void 0 ? a.colorSpace = l.colorSpace : l.encoding !== void 0 && (a.encoding = l.encoding), l.flipY !== void 0 && (a.flipY = l.flipY), l.format !== void 0 && (a.format = l.format), l.type !== void 0 && (a.type = l.type), l.mipmaps !== void 0 && (a.mipmaps = l.mipmaps, a.minFilter = li), l.mipmapCount === 1 && (a.minFilter = mt), l.generateMipmaps !== void 0 && (a.generateMipmaps = l.generateMipmaps), a.needsUpdate = !0, t && t(a, l);
        }, n, i), a;
    }
}, hu = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new St, a = new rs(this.manager);
        return a.setCrossOrigin(this.crossOrigin), a.setPath(this.path), a.load(e, function(o) {
            r.image = o, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, En = class extends Je {
    constructor(e, t = 1){
        super(), this.isLight = !0, this.type = "Light", this.color = new pe(e), this.intensity = t;
    }
    dispose() {}
    copy(e, t) {
        return super.copy(e, t), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
}, Sc = class extends En {
    constructor(e, t, n){
        super(e, n), this.isHemisphereLight = !0, this.type = "HemisphereLight", this.position.copy(Je.DEFAULT_UP), this.updateMatrix(), this.groundColor = new pe(t);
    }
    copy(e, t) {
        return super.copy(e, t), this.groundColor.copy(e.groundColor), this;
    }
}, oo = new ze, uu = new A, du = new A, zs = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new Z(512, 512), this.map = null, this.mapPass = null, this.matrix = new ze, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Ps, this._frameExtents = new Z(1, 1), this._viewportCount = 1, this._viewports = [
            new je(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        uu.setFromMatrixPosition(e.matrixWorld), t.position.copy(uu), du.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(du), t.updateMatrixWorld(), oo.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(oo), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(oo);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, bc = class extends zs {
    constructor(){
        super(new yt(50, 1, .5, 500)), this.isSpotLightShadow = !0, this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = Zi * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
}, Ec = class extends En {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, a = 2){
        super(e, t), this.isSpotLight = !0, this.type = "SpotLight", this.position.copy(Je.DEFAULT_UP), this.updateMatrix(), this.target = new Je, this.distance = n, this.angle = i, this.penumbra = r, this.decay = a, this.map = null, this.shadow = new bc;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e, t) {
        return super.copy(e, t), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
}, fu = new ze, _s = new A, co = new A, Tc = class extends zs {
    constructor(){
        super(new yt(90, 1, .5, 500)), this.isPointLightShadow = !0, this._frameExtents = new Z(4, 2), this._viewportCount = 6, this._viewports = [
            new je(2, 1, 1, 1),
            new je(0, 1, 1, 1),
            new je(3, 1, 1, 1),
            new je(1, 1, 1, 1),
            new je(3, 0, 1, 1),
            new je(1, 0, 1, 1)
        ], this._cubeDirections = [
            new A(1, 0, 0),
            new A(-1, 0, 0),
            new A(0, 0, 1),
            new A(0, 0, -1),
            new A(0, 1, 0),
            new A(0, -1, 0)
        ], this._cubeUps = [
            new A(0, 1, 0),
            new A(0, 1, 0),
            new A(0, 1, 0),
            new A(0, 1, 0),
            new A(0, 0, 1),
            new A(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), _s.setFromMatrixPosition(e.matrixWorld), n.position.copy(_s), co.copy(n.position), co.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(co), n.updateMatrixWorld(), i.makeTranslation(-_s.x, -_s.y, -_s.z), fu.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(fu);
    }
}, wc = class extends En {
    constructor(e, t, n = 0, i = 2){
        super(e, t), this.isPointLight = !0, this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new Tc;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e, t) {
        return super.copy(e, t), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
}, Ac = class extends zs {
    constructor(){
        super(new Ls(-5, 5, 5, -5, .5, 500)), this.isDirectionalLightShadow = !0;
    }
}, Rc = class extends En {
    constructor(e, t){
        super(e, t), this.isDirectionalLight = !0, this.type = "DirectionalLight", this.position.copy(Je.DEFAULT_UP), this.updateMatrix(), this.target = new Je, this.shadow = new Ac;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
}, Cc = class extends En {
    constructor(e, t){
        super(e, t), this.isAmbientLight = !0, this.type = "AmbientLight";
    }
}, Pc = class extends En {
    constructor(e, t, n = 10, i = 10){
        super(e, t), this.isRectAreaLight = !0, this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
}, Lc = class {
    constructor(){
        this.isSphericalHarmonics3 = !0, this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new A);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, a = this.coefficients;
        return t.copy(a[0]).multiplyScalar(.282095), t.addScaledVector(a[1], .488603 * i), t.addScaledVector(a[2], .488603 * r), t.addScaledVector(a[3], .488603 * n), t.addScaledVector(a[4], 1.092548 * (n * i)), t.addScaledVector(a[5], 1.092548 * (i * r)), t.addScaledVector(a[6], .315392 * (3 * r * r - 1)), t.addScaledVector(a[7], 1.092548 * (n * r)), t.addScaledVector(a[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, a = this.coefficients;
        return t.copy(a[0]).multiplyScalar(.886227), t.addScaledVector(a[1], 2 * .511664 * i), t.addScaledVector(a[2], 2 * .511664 * r), t.addScaledVector(a[3], 2 * .511664 * n), t.addScaledVector(a[4], 2 * .429043 * n * i), t.addScaledVector(a[5], 2 * .429043 * i * r), t.addScaledVector(a[6], .743125 * r * r - .247708), t.addScaledVector(a[7], 2 * .429043 * n * r), t.addScaledVector(a[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
}, Ic = class extends En {
    constructor(e = new Lc, t = 1){
        super(void 0, t), this.isLightProbe = !0, this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
}, Uc = class s1 extends Dt {
    constructor(e){
        super(e), this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, a = new rn(r.manager);
        a.setPath(r.path), a.setRequestHeader(r.requestHeader), a.setWithCredentials(r.withCredentials), a.load(e, function(o) {
            try {
                t(r.parse(JSON.parse(o)));
            } catch (c) {
                i ? i(c) : console.error(c), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = s1.createMaterialFromType(e.type);
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new pe().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.iridescence !== void 0 && (i.iridescence = e.iridescence), e.iridescenceIOR !== void 0 && (i.iridescenceIOR = e.iridescenceIOR), e.iridescenceThicknessRange !== void 0 && (i.iridescenceThicknessRange = e.iridescenceThicknessRange), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy), e.anisotropyRotation !== void 0 && (i.anisotropyRotation = e.anisotropyRotation), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== void 0 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.forceSinglePass !== void 0 && (i.forceSinglePass = e.forceSinglePass), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let a = e.uniforms[r];
            switch(i.uniforms[r] = {}, a.type){
                case "t":
                    i.uniforms[r].value = n(a.value);
                    break;
                case "c":
                    i.uniforms[r].value = new pe().setHex(a.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new Z().fromArray(a.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new A().fromArray(a.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new je().fromArray(a.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new He().fromArray(a.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new ze().fromArray(a.value);
                    break;
                default:
                    i.uniforms[r].value = a.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion), e.extensions !== void 0) for(let r in e.extensions)i.extensions[r] = e.extensions[r];
        if (e.lights !== void 0 && (i.lights = e.lights), e.clipping !== void 0 && (i.clipping = e.clipping), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r = e.normalScale;
            Array.isArray(r) === !1 && (r = [
                r,
                r
            ]), i.normalScale = new Z().fromArray(r);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new Z().fromArray(e.clearcoatNormalScale)), e.iridescenceMap !== void 0 && (i.iridescenceMap = n(e.iridescenceMap)), e.iridescenceThicknessMap !== void 0 && (i.iridescenceThicknessMap = n(e.iridescenceThicknessMap)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.anisotropyMap !== void 0 && (i.anisotropyMap = n(e.anisotropyMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
    static createMaterialFromType(e) {
        let t = {
            ShadowMaterial: cc,
            SpriteMaterial: ea,
            RawShaderMaterial: lc,
            ShaderMaterial: jt,
            PointsMaterial: na,
            MeshPhysicalMaterial: hc,
            MeshStandardMaterial: da,
            MeshPhongMaterial: uc,
            MeshToonMaterial: dc,
            MeshNormalMaterial: fc,
            MeshLambertMaterial: pc,
            MeshDepthMaterial: Qr,
            MeshDistanceMaterial: jr,
            MeshBasicMaterial: Sn,
            MeshMatcapMaterial: mc,
            LineDashedMaterial: gc,
            LineBasicMaterial: wt,
            Material: bt
        };
        return new t[e];
    }
}, ga = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.slice(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Dc = class extends Ge {
    constructor(){
        super(), this.isInstancedBufferGeometry = !0, this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
}, Nc = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = new rn(r.manager);
        a.setPath(r.path), a.setRequestHeader(r.requestHeader), a.setWithCredentials(r.withCredentials), a.load(e, function(o) {
            try {
                t(r.parse(JSON.parse(o)));
            } catch (c) {
                i ? i(c) : console.error(c), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let g = f.interleavedBuffers[m], p = r(f, g.buffer), v = ki(g.type, p), x = new Is(v, g.stride);
            return x.uuid = g.uuid, t[m] = x, x;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let g = f.arrayBuffers[m], p = new Uint32Array(g).buffer;
            return n[m] = p, p;
        }
        let a = e.isInstancedBufferGeometry ? new Dc : new Ge, o = e.data.index;
        if (o !== void 0) {
            let f = ki(o.type, o.array);
            a.setIndex(new et(f, 1));
        }
        let c = e.data.attributes;
        for(let f in c){
            let m = c[f], _;
            if (m.isInterleavedBufferAttribute) {
                let g = i(e.data, m.data);
                _ = new Qi(g, m.itemSize, m.offset, m.normalized);
            } else {
                let g = ki(m.type, m.array), p = m.isInstancedBufferAttribute ? ui : et;
                _ = new p(g, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (_.name = m.name), m.usage !== void 0 && _.setUsage(m.usage), m.updateRange !== void 0 && (_.updateRange.offset = m.updateRange.offset, _.updateRange.count = m.updateRange.count), a.setAttribute(f, _);
        }
        let l = e.data.morphAttributes;
        if (l) for(let f in l){
            let m = l[f], _ = [];
            for(let g = 0, p = m.length; g < p; g++){
                let v = m[g], x;
                if (v.isInterleavedBufferAttribute) {
                    let y = i(e.data, v.data);
                    x = new Qi(y, v.itemSize, v.offset, v.normalized);
                } else {
                    let y = ki(v.type, v.array);
                    x = new et(y, v.itemSize, v.normalized);
                }
                v.name !== void 0 && (x.name = v.name), _.push(x);
            }
            a.morphAttributes[f] = _;
        }
        e.data.morphTargetsRelative && (a.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f = 0, m = u.length; f !== m; ++f){
            let _ = u[f];
            a.addGroup(_.start, _.count, _.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f = new A;
            d.center !== void 0 && f.fromArray(d.center), a.boundingSphere = new Yt(f, d.radius);
        }
        return e.name && (a.name = e.name), e.userData && (a.userData = e.userData), a;
    }
}, pu = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = this.path === "" ? ga.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || a;
        let o = new rn(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(c) {
            let l = null;
            try {
                l = JSON.parse(c);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = l.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                i !== void 0 && i(new Error("THREE.ObjectLoader: Can't load " + e)), console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(l, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? ga.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new rn(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let a = await r.loadAsync(e, t), o = JSON.parse(a), c = o.metadata;
        if (c === void 0 || c.type === void 0 || c.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(o);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), a = this.parseImages(e.images, function() {
            t !== void 0 && t(l);
        }), o = this.parseTextures(e.textures, a), c = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, r, c, o, n), h = this.parseSkeletons(e.skeletons, l);
        if (this.bindSkeletons(l, h), t !== void 0) {
            let u = !1;
            for(let d in a)if (a[d].data instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(l);
        }
        return l;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), a = this.parseTextures(e.textures, r), o = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, i, o, a, t), l = this.parseSkeletons(e.skeletons, c);
        return this.bindSkeletons(c, l), c;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Fn().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, a = e.length; r < a; r++){
            let o = new Oo().fromJSON(e[r], i);
            n[o.uuid] = o;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Nc;
            for(let r = 0, a = e.length; r < a; r++){
                let o, c = e[r];
                switch(c.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        o = i.parse(c);
                        break;
                    default:
                        c.type in ru ? o = ru[c.type].fromJSON(c, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`);
                }
                o.uuid = c.uuid, c.name !== void 0 && (o.name = c.name), c.userData !== void 0 && (o.userData = c.userData), n[c.uuid] = o;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new Uc;
            r.setTextures(t);
            for(let a = 0, o = e.length; a < o; a++){
                let c = e[a];
                n[c.uuid] === void 0 && (n[c.uuid] = r.parse(c)), i[c.uuid] = n[c.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = is.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function a(c) {
            return n.manager.itemStart(c), r.load(c, function() {
                n.manager.itemEnd(c);
            }, void 0, function() {
                n.manager.itemError(c), n.manager.itemEnd(c);
            });
        }
        function o(c) {
            if (typeof c == "string") {
                let l = c, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l) ? l : n.resourcePath + l;
                return a(h);
            } else return c.data ? {
                data: ki(c.type, c.data),
                width: c.width,
                height: c.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let c = new ma(t);
            r = new rs(c), r.setCrossOrigin(this.crossOrigin);
            for(let l = 0, h = e.length; l < h; l++){
                let u = e[l], d = u.url;
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, _ = d.length; m < _; m++){
                        let g = d[m], p = o(g);
                        p !== null && (p instanceof HTMLImageElement ? f.push(p) : f.push(new oi(p.data, p.width, p.height)));
                    }
                    i[u.uuid] = new In(f);
                } else {
                    let f = o(u.url);
                    i[u.uuid] = new In(f);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(a) {
            if (typeof a == "string") {
                let o = a, c = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(o) ? o : t.resourcePath + o;
                return await i.loadAsync(c);
            } else return a.data ? {
                data: ki(a.type, a.data),
                width: a.width,
                height: a.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new rs(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let a = 0, o = e.length; a < o; a++){
                let c = e[a], l = c.url;
                if (Array.isArray(l)) {
                    let h = [];
                    for(let u = 0, d = l.length; u < d; u++){
                        let f = l[u], m = await r(f);
                        m !== null && (m instanceof HTMLImageElement ? h.push(m) : h.push(new oi(m.data, m.width, m.height)));
                    }
                    n[c.uuid] = new In(h);
                } else {
                    let h = await r(c.url);
                    n[c.uuid] = new In(h);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, a) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), a[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, a = e.length; r < a; r++){
            let o = e[r];
            o.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', o.uuid), t[o.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", o.image);
            let c = t[o.image], l = c.data, h;
            Array.isArray(l) ? (h = new Ki, l.length === 6 && (h.needsUpdate = !0)) : (l && l.data ? h = new oi : h = new St, l && (h.needsUpdate = !0)), h.source = c, h.uuid = o.uuid, o.name !== void 0 && (h.name = o.name), o.mapping !== void 0 && (h.mapping = n(o.mapping, Tx)), o.channel !== void 0 && (h.channel = o.channel), o.offset !== void 0 && h.offset.fromArray(o.offset), o.repeat !== void 0 && h.repeat.fromArray(o.repeat), o.center !== void 0 && h.center.fromArray(o.center), o.rotation !== void 0 && (h.rotation = o.rotation), o.wrap !== void 0 && (h.wrapS = n(o.wrap[0], mu), h.wrapT = n(o.wrap[1], mu)), o.format !== void 0 && (h.format = o.format), o.internalFormat !== void 0 && (h.internalFormat = o.internalFormat), o.type !== void 0 && (h.type = o.type), o.colorSpace !== void 0 && (h.colorSpace = o.colorSpace), o.encoding !== void 0 && (h.encoding = o.encoding), o.minFilter !== void 0 && (h.minFilter = n(o.minFilter, gu)), o.magFilter !== void 0 && (h.magFilter = n(o.magFilter, gu)), o.anisotropy !== void 0 && (h.anisotropy = o.anisotropy), o.flipY !== void 0 && (h.flipY = o.flipY), o.generateMipmaps !== void 0 && (h.generateMipmaps = o.generateMipmaps), o.premultiplyAlpha !== void 0 && (h.premultiplyAlpha = o.premultiplyAlpha), o.unpackAlignment !== void 0 && (h.unpackAlignment = o.unpackAlignment), o.compareFunction !== void 0 && (h.compareFunction = o.compareFunction), o.userData !== void 0 && (h.userData = o.userData), i[o.uuid] = h;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let a;
        function o(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function c(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, _ = d.length; m < _; m++){
                        let g = d[m];
                        n[g] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", g), f.push(n[g]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function l(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                a = new Io, e.background !== void 0 && (Number.isInteger(e.background) ? a.background = new pe(e.background) : a.background = l(e.background)), e.environment !== void 0 && (a.environment = l(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? a.fog = new Lo(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (a.fog = new Po(e.fog.color, e.fog.density)), e.fog.name !== "" && (a.fog.name = e.fog.name)), e.backgroundBlurriness !== void 0 && (a.backgroundBlurriness = e.backgroundBlurriness), e.backgroundIntensity !== void 0 && (a.backgroundIntensity = e.backgroundIntensity);
                break;
            case "PerspectiveCamera":
                a = new yt(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (a.focus = e.focus), e.zoom !== void 0 && (a.zoom = e.zoom), e.filmGauge !== void 0 && (a.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (a.filmOffset = e.filmOffset), e.view !== void 0 && (a.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                a = new Ls(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (a.zoom = e.zoom), e.view !== void 0 && (a.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                a = new Cc(e.color, e.intensity);
                break;
            case "DirectionalLight":
                a = new Rc(e.color, e.intensity);
                break;
            case "PointLight":
                a = new wc(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                a = new Pc(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                a = new Ec(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                a = new Sc(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                a = new Ic().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = o(e.geometry), u = c(e.material), a = new No(h, u), e.bindMode !== void 0 && (a.bindMode = e.bindMode), e.bindMatrix !== void 0 && a.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (a.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = o(e.geometry), u = c(e.material), a = new Mt(h, u);
                break;
            case "InstancedMesh":
                h = o(e.geometry), u = c(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                a = new Fo(h, u, d), a.instanceMatrix = new ui(new Float32Array(f.array), 16), m !== void 0 && (a.instanceColor = new ui(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                a = new Do;
                break;
            case "Line":
                a = new bn(o(e.geometry), c(e.material));
                break;
            case "LineLoop":
                a = new Bo(o(e.geometry), c(e.material));
                break;
            case "LineSegments":
                a = new en(o(e.geometry), c(e.material));
                break;
            case "PointCloud":
            case "Points":
                a = new Vo(o(e.geometry), c(e.material));
                break;
            case "Sprite":
                a = new Uo(c(e.material));
                break;
            case "Group":
                a = new ti;
                break;
            case "Bone":
                a = new ta;
                break;
            default:
                a = new Je;
        }
        if (a.uuid = e.uuid, e.name !== void 0 && (a.name = e.name), e.matrix !== void 0 ? (a.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (a.matrixAutoUpdate = e.matrixAutoUpdate), a.matrixAutoUpdate && a.matrix.decompose(a.position, a.quaternion, a.scale)) : (e.position !== void 0 && a.position.fromArray(e.position), e.rotation !== void 0 && a.rotation.fromArray(e.rotation), e.quaternion !== void 0 && a.quaternion.fromArray(e.quaternion), e.scale !== void 0 && a.scale.fromArray(e.scale)), e.up !== void 0 && a.up.fromArray(e.up), e.castShadow !== void 0 && (a.castShadow = e.castShadow), e.receiveShadow !== void 0 && (a.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (a.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (a.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (a.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && a.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (a.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (a.visible = e.visible), e.frustumCulled !== void 0 && (a.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (a.renderOrder = e.renderOrder), e.userData !== void 0 && (a.userData = e.userData), e.layers !== void 0 && (a.layers.mask = e.layers), e.children !== void 0) {
            let d = e.children;
            for(let f = 0; f < d.length; f++)a.add(this.parseObject(d[f], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d = e.animations;
            for(let f = 0; f < d.length; f++){
                let m = d[f];
                a.animations.push(r[m]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (a.autoUpdate = e.autoUpdate);
            let d = e.levels;
            for(let f = 0; f < d.length; f++){
                let m = d[f], _ = a.getObjectByProperty("uuid", m.object);
                _ !== void 0 && a.addLevel(_, m.distance, m.hysteresis);
            }
        }
        return a;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
}, Tx = {
    UVMapping: Gc,
    CubeReflectionMapping: zn,
    CubeRefractionMapping: ci,
    EquirectangularReflectionMapping: Ir,
    EquirectangularRefractionMapping: Ur,
    CubeUVReflectionMapping: Vs
}, mu = {
    RepeatWrapping: Dr,
    ClampToEdgeWrapping: It,
    MirroredRepeatWrapping: Nr
}, gu = {
    NearestFilter: pt,
    NearestMipmapNearestFilter: fo,
    NearestMipmapLinearFilter: Lr,
    LinearFilter: mt,
    LinearMipmapNearestFilter: ud,
    LinearMipmapLinearFilter: li
}, _u = class extends Dt {
    constructor(e){
        super(e), this.isImageBitmapLoader = !0, typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, a = ss.get(e);
        if (a !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(a), r.manager.itemEnd(e);
        }, 0), a;
        let o = {};
        o.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", o.headers = this.requestHeader, fetch(e, o).then(function(c) {
            return c.blob();
        }).then(function(c) {
            return createImageBitmap(c, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(c) {
            ss.add(e, c), t && t(c), r.manager.itemEnd(e);
        }).catch(function(c) {
            i && i(c), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
}, Er, _a = class {
    static getContext() {
        return Er === void 0 && (Er = new (window.AudioContext || window.webkitAudioContext)), Er;
    }
    static setContext(e) {
        Er = e;
    }
}, xu = class extends Dt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, a = new rn(this.manager);
        a.setResponseType("arraybuffer"), a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(c) {
            try {
                let l = c.slice(0);
                _a.getContext().decodeAudioData(l, function(u) {
                    t(u);
                }, o);
            } catch (l) {
                o(l);
            }
        }, n, i);
        function o(c) {
            i ? i(c) : console.error(c), r.manager.itemError(e);
        }
    }
}, vu = new ze, yu = new ze, Zn = new ze, Mu = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new yt, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new yt, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Zn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, a = t.near * Math.tan(ai * t.fov * .5) / t.zoom, o, c;
            yu.elements[12] = -i, vu.elements[12] = i, o = -a * t.aspect + r, c = a * t.aspect + r, Zn.elements[0] = 2 * t.near / (c - o), Zn.elements[8] = (c + o) / (c - o), this.cameraL.projectionMatrix.copy(Zn), o = -a * t.aspect - r, c = a * t.aspect - r, Zn.elements[0] = 2 * t.near / (c - o), Zn.elements[8] = (c + o) / (c - o), this.cameraR.projectionMatrix.copy(Zn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(yu), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(vu);
    }
}, Oc = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Su(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Su();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Su() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Jn = new A, bu = new Ut, wx = new A, $n = new A, Eu = class extends Je {
    constructor(){
        super(), this.type = "AudioListener", this.context = _a.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Oc;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Jn, bu, wx), $n.set(0, 0, -1).applyQuaternion(bu), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Jn.x, i), t.positionY.linearRampToValueAtTime(Jn.y, i), t.positionZ.linearRampToValueAtTime(Jn.z, i), t.forwardX.linearRampToValueAtTime($n.x, i), t.forwardY.linearRampToValueAtTime($n.y, i), t.forwardZ.linearRampToValueAtTime($n.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Jn.x, Jn.y, Jn.z), t.setOrientation($n.x, $n.y, $n.z, n.x, n.y, n.z);
    }
}, Fc = class extends Je {
    constructor(e){
        super(), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source !== null && (this.source.stop(), this.source.onended = null), this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this._connected !== !1) {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput());
            } else this.source.disconnect(this.getOutput());
            return this._connected = !1, this;
        }
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, Kn = new A, Tu = new Ut, Ax = new A, Qn = new A, wu = class extends Fc {
    constructor(e){
        super(e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    connect() {
        super.connect(), this.panner.connect(this.gain);
    }
    disconnect() {
        super.disconnect(), this.panner.disconnect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(Kn, Tu, Ax), Qn.set(0, 0, 1).applyQuaternion(Tu);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(Kn.x, n), t.positionY.linearRampToValueAtTime(Kn.y, n), t.positionZ.linearRampToValueAtTime(Kn.z, n), t.orientationX.linearRampToValueAtTime(Qn.x, n), t.orientationY.linearRampToValueAtTime(Qn.y, n), t.orientationZ.linearRampToValueAtTime(Qn.z, n);
        } else t.setPosition(Kn.x, Kn.y, Kn.z), t.setOrientation(Qn.x, Qn.y, Qn.z);
    }
}, Au = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Bc = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, a;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, a = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, a = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, a = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = a, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, a = this.cumulativeWeight;
        if (a === 0) {
            for(let o = 0; o !== i; ++o)n[r + o] = n[o];
            a = t;
        } else {
            a += t;
            let o = t / a;
            this._mixBufferRegion(n, r, 0, o, i);
        }
        this.cumulativeWeight = a;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, a = this.cumulativeWeightAdditive, o = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let c = t * this._origIndex;
            this._mixBufferRegion(n, i, c, 1 - r, t);
        }
        a > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let c = t, l = t + t; c !== l; ++c)if (n[c] !== n[c + t]) {
            o.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, a = i; r !== a; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let a = 0; a !== r; ++a)e[t + a] = e[n + a];
    }
    _slerp(e, t, n, i) {
        Ut.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let a = this._workIndex * r;
        Ut.multiplyQuaternionsFlat(e, a, e, t, e, n), Ut.slerpFlat(e, t, e, t, e, a, i);
    }
    _lerp(e, t, n, i, r) {
        let a = 1 - i;
        for(let o = 0; o !== r; ++o){
            let c = t + o;
            e[c] = e[c] * a + e[n + o] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let a = 0; a !== r; ++a){
            let o = t + a;
            e[o] = e[o] + e[n + a] * i;
        }
    }
}, Kc = "\\[\\]\\.:\\/", Rx = new RegExp("[" + Kc + "]", "g"), Qc = "[^" + Kc + "]", Cx = "[^" + Kc.replace("\\.", "") + "]", Px = /((?:WC+[\/:])*)/.source.replace("WC", Qc), Lx = /(WCOD+)?/.source.replace("WCOD", Cx), Ix = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Qc), Ux = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Qc), Dx = new RegExp("^" + Px + Lx + Ix + Ux + "$"), Nx = [
    "material",
    "materials",
    "bones",
    "map"
], zc = class {
    constructor(e, t, n){
        let i = n || Ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, Ke = class s1 {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || s1.parseTrackName(t), this.node = s1.findNode(e, this.parsedPath.nodeName), this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new s1.Composite(e, t, n) : new s1(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(Rx, "");
    }
    static parseTrackName(e) {
        let t = Dx.exec(e);
        if (t === null) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Nx.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (t === void 0 || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n = function(r) {
                for(let a = 0; a < r.length; a++){
                    let o = r[a];
                    if (o.name === t || o.uuid === t) return o;
                    let c = n(o.children);
                    if (c) return c;
                }
                return null;
            }, i = n(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = s1.findNode(this.rootNode, t.nodeName), this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.warn("THREE.PropertyBinding: No target node found for track: " + this.path + ".");
            return;
        }
        if (n) {
            let l = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === l) {
                        l = h;
                        break;
                    }
                    break;
                case "map":
                    if ("map" in e) {
                        e = e.map;
                        break;
                    }
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.map) {
                        console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.", this);
                        return;
                    }
                    e = e.material.map;
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (l !== void 0) {
                if (e[l] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[l];
            }
        }
        let a = e[i];
        if (a === void 0) {
            let l = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + l + "." + i + " but it wasn't found.", e);
            return;
        }
        let o = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? o = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (o = this.Versioning.MatrixWorldNeedsUpdate);
        let c = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (!e.geometry.morphAttributes) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                    return;
                }
                e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
            }
            c = this.BindingType.ArrayElement, this.resolvedProperty = a, this.propertyIndex = r;
        } else a.fromArray !== void 0 && a.toArray !== void 0 ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = a) : Array.isArray(a) ? (c = this.BindingType.EntireArray, this.resolvedProperty = a) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][o];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
Ke.Composite = zc;
Ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
Ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
Ke.prototype.GetterByBindingType = [
    Ke.prototype._getValue_direct,
    Ke.prototype._getValue_array,
    Ke.prototype._getValue_arrayElement,
    Ke.prototype._getValue_toArray
];
Ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        Ke.prototype._setValue_direct,
        Ke.prototype._setValue_direct_setNeedsUpdate,
        Ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        Ke.prototype._setValue_array,
        Ke.prototype._setValue_array_setNeedsUpdate,
        Ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        Ke.prototype._setValue_arrayElement,
        Ke.prototype._setValue_arrayElement_setNeedsUpdate,
        Ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        Ke.prototype._setValue_fromArray,
        Ke.prototype._setValue_fromArray_setNeedsUpdate,
        Ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Ru = class {
    constructor(){
        this.isAnimationObjectGroup = !0, this.uuid = kt(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, a = r.length, o, c = e.length, l = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = c++, t[f] = m, e.push(d);
                for(let _ = 0, g = a; _ !== g; ++_)r[_].push(new Ke(d, n[_], i[_]));
            } else if (m < l) {
                o = e[m];
                let _ = --l, g = e[_];
                t[g.uuid] = m, e[m] = g, t[f] = _, e[_] = d;
                for(let p = 0, v = a; p !== v; ++p){
                    let x = r[p], y = x[_], b = x[m];
                    x[m] = y, b === void 0 && (b = new Ke(d, n[p], i[p])), x[_] = b;
                }
            } else e[m] !== o && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = l;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let a = 0, o = arguments.length; a !== o; ++a){
            let c = arguments[a], l = c.uuid, h = t[l];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[l] = u, e[u] = c;
                for(let f = 0, m = i; f !== m; ++f){
                    let _ = n[f], g = _[u], p = _[h];
                    _[h] = g, _[u] = p;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, a = e.length;
        for(let o = 0, c = arguments.length; o !== c; ++o){
            let l = arguments[o], h = l.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --a, _ = e[m];
                t[f.uuid] = u, e[u] = f, t[_.uuid] = d, e[d] = _, e.pop();
                for(let g = 0, p = i; g !== p; ++g){
                    let v = n[g], x = v[d], y = v[m];
                    v[u] = x, v[d] = y, v.pop();
                }
            } else {
                let d = --a, f = e[d];
                d > 0 && (t[f.uuid] = u), e[u] = f, e.pop();
                for(let m = 0, _ = i; m !== _; ++m){
                    let g = n[m];
                    g[u] = g[d], g.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let a = this._paths, o = this._parsedPaths, c = this._objects, l = c.length, h = this.nCachedObjects_, u = new Array(l);
        i = r.length, n[e] = i, a.push(e), o.push(t), r.push(u);
        for(let d = h, f = c.length; d !== f; ++d){
            let m = c[d];
            u[d] = new Ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, a = this._bindings, o = a.length - 1, c = a[o], l = e[o];
            t[l] = n, a[n] = c, a.pop(), r[n] = r[o], r.pop(), i[n] = i[o], i.pop();
        }
    }
}, Vc = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, a = r.length, o = new Array(a), c = {
            endingStart: zi,
            endingEnd: zi
        };
        for(let l = 0; l !== a; ++l){
            let h = r[l].createInterpolant(null);
            o[l] = h, h.settings = c;
        }
        this._interpolantSettings = c, this._interpolants = o, this._propertyBindings = new Array(a), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Af, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, a = r / i, o = i / r;
            e.warp(1, a, t), this.warp(o, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, a = this.timeScale, o = this._timeScaleInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._timeScaleInterpolant = o);
        let c = o.parameterPositions, l = o.sampleValues;
        return c[0] = r, c[1] = r + n, l[0] = e / a, l[1] = t / a, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let c = (e - r) * n;
            c < 0 || n === 0 ? t = 0 : (this._startTime = null, t = n * c);
        }
        t *= this._updateTimeScale(e);
        let a = this._updateTime(t), o = this._updateWeight(e);
        if (o > 0) {
            let c = this._interpolants, l = this._propertyBindings;
            switch(this.blendMode){
                case xd:
                    for(let h = 0, u = c.length; h !== u; ++h)c[h].evaluate(a), l[h].accumulateAdditive(o);
                    break;
                case Xc:
                default:
                    for(let h = 0, u = c.length; h !== u; ++h)c[h].evaluate(a), l[h].accumulate(i, o);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t);
            }
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, a = n === Rf;
        if (e === 0) return r === -1 ? i : a && (r & 1) === 1 ? t - i : i;
        if (n === wf) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, a)) : this._setEndings(this.repetitions === 0, !0, a)), i >= t || i < 0) {
                let o = Math.floor(i / t);
                i -= t * o, r += Math.abs(o);
                let c = this.repetitions - r;
                if (c <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (c === 1) {
                        let l = e < 0;
                        this._setEndings(l, !l, a);
                    } else this._setEndings(!1, !1, a);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: o
                    });
                }
            } else this.time = i;
            if (a && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = Vi, i.endingEnd = Vi) : (e ? i.endingStart = this.zeroSlopeAtStart ? Vi : zi : i.endingStart = Br, t ? i.endingEnd = this.zeroSlopeAtEnd ? Vi : zi : i.endingEnd = Br);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, a = this._weightInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._weightInterpolant = a);
        let o = a.parameterPositions, c = a.sampleValues;
        return o[0] = r, c[0] = t, o[1] = r + e, c[1] = n, this;
    }
}, Ox = new Float32Array(1), Cu = class extends sn {
    constructor(e){
        super(), this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, a = e._propertyBindings, o = e._interpolants, c = n.uuid, l = this._bindingsByRootAndName, h = l[c];
        h === void 0 && (h = {}, l[c] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) ++m.referenceCount, a[u] = m;
            else {
                if (m = a[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, c, f));
                    continue;
                }
                let _ = t && t._propertyBindings[u].binding.parsedPath;
                m = new Bc(Ke.create(n, f, _), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, c, f), a[u] = m;
            }
            o[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                r.useCount++ === 0 && (this._lendBinding(r), r.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, a = r[t];
        if (a === void 0) a = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = a;
        else {
            let o = a.knownActions;
            e._byClipCacheIndex = o.length, o.push(e);
        }
        e._cacheIndex = i.length, i.push(e), a.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, a = this._actionsByClip, o = a[r], c = o.knownActions, l = c[c.length - 1], h = e._byClipCacheIndex;
        l._byClipCacheIndex = h, c[h] = l, c.pop(), e._byClipCacheIndex = null;
        let u = o.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], c.length === 0 && delete a[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, a = i[t];
        a === void 0 && (a = {}, i[t] = a), a[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, a = this._bindingsByRootAndName, o = a[i], c = t[t.length - 1], l = e._cacheIndex;
        c._cacheIndex = l, t[l] = c, t.pop(), delete o[r], Object.keys(o).length === 0 && delete a[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new fa(new Float32Array(2), new Float32Array(2), 1, Ox), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, a = typeof e == "string" ? is.findByName(i, e) : e, o = a !== null ? a.uuid : e, c = this._actionsByClip[o], l = null;
        if (n === void 0 && (a !== null ? n = a.blendMode : n = Xc), c !== void 0) {
            let u = c.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            l = c.knownActions[0], a === null && (a = l._clip);
        }
        if (a === null) return null;
        let h = new Vc(this, a, t, n);
        return this._bindAction(h, l), this._addInactiveAction(h, o, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? is.findByName(n, e) : e, a = r ? r.uuid : e, o = this._actionsByClip[a];
        return o !== void 0 && o.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), a = this._accuIndex ^= 1;
        for(let l = 0; l !== n; ++l)t[l]._update(i, e, r, a);
        let o = this._bindings, c = this._nActiveBindings;
        for(let l = 0; l !== c; ++l)o[l].apply(a);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let a = r.knownActions;
            for(let o = 0, c = a.length; o !== c; ++o){
                let l = a[o];
                this._deactivateAction(l);
                let h = l._cacheIndex, u = t[t.length - 1];
                l._cacheIndex = null, l._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(l);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let a in n){
            let o = n[a].actionByRoot, c = o[t];
            c !== void 0 && (this._deactivateAction(c), this._removeInactiveAction(c));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let a in r){
            let o = r[a];
            o.restoreOriginalState(), this._removeInactiveBinding(o);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
}, Pu = class s1 {
    constructor(e){
        this.value = e;
    }
    clone() {
        return new s1(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, Fx = 0, Lu = class extends sn {
    constructor(){
        super(), this.isUniformsGroup = !0, Object.defineProperty(this, "id", {
            value: Fx++
        }), this.name = "", this.usage = Hr, this.uniforms = [];
    }
    add(e) {
        return this.uniforms.push(e), this;
    }
    remove(e) {
        let t = this.uniforms.indexOf(e);
        return t !== -1 && this.uniforms.splice(t, 1), this;
    }
    setName(e) {
        return this.name = e, this;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    dispose() {
        return this.dispatchEvent({
            type: "dispose"
        }), this;
    }
    copy(e) {
        this.name = e.name, this.usage = e.usage;
        let t = e.uniforms;
        this.uniforms.length = 0;
        for(let n = 0, i = t.length; n < i; n++)this.uniforms.push(t[n].clone());
        return this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Iu = class extends Is {
    constructor(e, t, n = 1){
        super(e, t), this.isInstancedInterleavedBuffer = !0, this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
}, Uu = class {
    constructor(e, t, n, i, r){
        this.isGLBufferAttribute = !0, this.name = "", this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
}, Du = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new hi(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Rs, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return kc(e, this, n, t), n.sort(Nu), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)kc(e[i], this, n, t);
        return n.sort(Nu), n;
    }
};
function Nu(s1, e) {
    return s1.distance - e.distance;
}
function kc(s1, e, t, n) {
    if (s1.layers.test(e.layers) && s1.raycast(e, t), n === !0) {
        let i = s1.children;
        for(let r = 0, a = i.length; r < a; r++)kc(i[r], e, t, !0);
    }
}
var Ou = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(ct(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fu = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Bu = new Z, zu = class {
    constructor(e = new Z(1 / 0, 1 / 0), t = new Z(-1 / 0, -1 / 0)){
        this.isBox2 = !0, this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Bu.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return this.clampPoint(e, Bu).distanceTo(e);
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
}, Vu = new A, Tr = new A, ku = class {
    constructor(e = new A, t = new A){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Vu.subVectors(e, this.start), Tr.subVectors(this.end, this.start);
        let n = Tr.dot(Tr), r = Tr.dot(Vu) / n;
        return t && (r = ct(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Hu = new A, Gu = class extends Je {
    constructor(e, t){
        super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t, this.type = "SpotLightHelper";
        let n = new Ge, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let a = 0, o = 1, c = 32; a < c; a++, o++){
            let l = a / c * Math.PI * 2, h = o / c * Math.PI * 2;
            i.push(Math.cos(l), Math.sin(l), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new ve(i, 3));
        let r = new wt({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new en(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1);
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Hu.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Hu), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, Pn = new A, wr = new ze, lo = new ze, Wu = class extends en {
    constructor(e){
        let t = Nd(e), n = new Ge, i = [], r = [], a = new pe(0, 0, 1), o = new pe(0, 1, 0);
        for(let l = 0; l < t.length; l++){
            let h = t[l];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(a.r, a.g, a.b), r.push(o.r, o.g, o.b));
        }
        n.setAttribute("position", new ve(i, 3)), n.setAttribute("color", new ve(r, 3));
        let c = new wt({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, c), this.isSkeletonHelper = !0, this.type = "SkeletonHelper", this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        lo.copy(this.root.matrixWorld).invert();
        for(let r = 0, a = 0; r < t.length; r++){
            let o = t[r];
            o.parent && o.parent.isBone && (wr.multiplyMatrices(lo, o.matrixWorld), Pn.setFromMatrixPosition(wr), i.setXYZ(a, Pn.x, Pn.y, Pn.z), wr.multiplyMatrices(lo, o.parent.matrixWorld), Pn.setFromMatrixPosition(wr), i.setXYZ(a + 1, Pn.x, Pn.y, Pn.z), a += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function Nd(s1) {
    let e = [];
    s1.isBone === !0 && e.push(s1);
    for(let t = 0; t < s1.children.length; t++)e.push.apply(e, Nd(s1.children[t]));
    return e;
}
var Xu = class extends Mt {
    constructor(e, t, n){
        let i = new ua(t, 4, 2), r = new Sn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r), this.light = e, this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1), this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Bx = new A, qu = new pe, Yu = new pe, Zu = class extends Je {
    constructor(e, t, n){
        super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, this.type = "HemisphereLightHelper";
        let i = new ha(t);
        i.rotateY(Math.PI * .5), this.material = new Sn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), a = new Float32Array(r.count * 3);
        i.setAttribute("color", new et(a, 3)), this.add(new Mt(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            qu.copy(this.light.color), Yu.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? qu : Yu;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        this.light.updateWorldMatrix(!0, !1), e.lookAt(Bx.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, Ju = class extends en {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new pe(n), i = new pe(i);
        let r = t / 2, a = e / t, o = e / 2, c = [], l = [];
        for(let d = 0, f = 0, m = -o; d <= t; d++, m += a){
            c.push(-o, 0, m, o, 0, m), c.push(m, 0, -o, m, 0, o);
            let _ = d === r ? n : i;
            _.toArray(l, f), f += 3, _.toArray(l, f), f += 3, _.toArray(l, f), f += 3, _.toArray(l, f), f += 3;
        }
        let h = new Ge;
        h.setAttribute("position", new ve(c, 3)), h.setAttribute("color", new ve(l, 3));
        let u = new wt({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u), this.type = "GridHelper";
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, $u = class extends en {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, a = 8947848){
        r = new pe(r), a = new pe(a);
        let o = [], c = [];
        if (t > 1) for(let u = 0; u < t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            o.push(0, 0, 0), o.push(f, 0, m);
            let _ = u & 1 ? r : a;
            c.push(_.r, _.g, _.b), c.push(_.r, _.g, _.b);
        }
        for(let u = 0; u < n; u++){
            let d = u & 1 ? r : a, f = e - e / n * u;
            for(let m = 0; m < i; m++){
                let _ = m / i * (Math.PI * 2), g = Math.sin(_) * f, p = Math.cos(_) * f;
                o.push(g, 0, p), c.push(d.r, d.g, d.b), _ = (m + 1) / i * (Math.PI * 2), g = Math.sin(_) * f, p = Math.cos(_) * f, o.push(g, 0, p), c.push(d.r, d.g, d.b);
            }
        }
        let l = new Ge;
        l.setAttribute("position", new ve(o, 3)), l.setAttribute("color", new ve(c, 3));
        let h = new wt({
            vertexColors: !0,
            toneMapped: !1
        });
        super(l, h), this.type = "PolarGridHelper";
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Ku = new A, Ar = new A, Qu = new A, ju = class extends Je {
    constructor(e, t, n){
        super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, this.type = "DirectionalLightHelper", t === void 0 && (t = 1);
        let i = new Ge;
        i.setAttribute("position", new ve([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new wt({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new bn(i, r), this.add(this.lightPlane), i = new Ge, i.setAttribute("position", new ve([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new bn(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), Ku.setFromMatrixPosition(this.light.matrixWorld), Ar.setFromMatrixPosition(this.light.target.matrixWorld), Qu.subVectors(Ar, Ku), this.lightPlane.lookAt(Ar), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(Ar), this.targetLine.scale.z = Qu.length();
    }
}, Rr = new A, ot = new Cs, ed = class extends en {
    constructor(e){
        let t = new Ge, n = new wt({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], a = {};
        o("n1", "n2"), o("n2", "n4"), o("n4", "n3"), o("n3", "n1"), o("f1", "f2"), o("f2", "f4"), o("f4", "f3"), o("f3", "f1"), o("n1", "f1"), o("n2", "f2"), o("n3", "f3"), o("n4", "f4"), o("p", "n1"), o("p", "n2"), o("p", "n3"), o("p", "n4"), o("u1", "u2"), o("u2", "u3"), o("u3", "u1"), o("c", "t"), o("p", "c"), o("cn1", "cn2"), o("cn3", "cn4"), o("cf1", "cf2"), o("cf3", "cf4");
        function o(m, _) {
            c(m), c(_);
        }
        function c(m) {
            i.push(0, 0, 0), r.push(0, 0, 0), a[m] === void 0 && (a[m] = []), a[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new ve(i, 3)), t.setAttribute("color", new ve(r, 3)), super(t, n), this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = a, this.update();
        let l = new pe(16755200), h = new pe(16711680), u = new pe(43775), d = new pe(16777215), f = new pe(3355443);
        this.setColors(l, h, u, d, f);
    }
    setColors(e, t, n, i, r) {
        let o = this.geometry.getAttribute("color");
        o.setXYZ(0, e.r, e.g, e.b), o.setXYZ(1, e.r, e.g, e.b), o.setXYZ(2, e.r, e.g, e.b), o.setXYZ(3, e.r, e.g, e.b), o.setXYZ(4, e.r, e.g, e.b), o.setXYZ(5, e.r, e.g, e.b), o.setXYZ(6, e.r, e.g, e.b), o.setXYZ(7, e.r, e.g, e.b), o.setXYZ(8, e.r, e.g, e.b), o.setXYZ(9, e.r, e.g, e.b), o.setXYZ(10, e.r, e.g, e.b), o.setXYZ(11, e.r, e.g, e.b), o.setXYZ(12, e.r, e.g, e.b), o.setXYZ(13, e.r, e.g, e.b), o.setXYZ(14, e.r, e.g, e.b), o.setXYZ(15, e.r, e.g, e.b), o.setXYZ(16, e.r, e.g, e.b), o.setXYZ(17, e.r, e.g, e.b), o.setXYZ(18, e.r, e.g, e.b), o.setXYZ(19, e.r, e.g, e.b), o.setXYZ(20, e.r, e.g, e.b), o.setXYZ(21, e.r, e.g, e.b), o.setXYZ(22, e.r, e.g, e.b), o.setXYZ(23, e.r, e.g, e.b), o.setXYZ(24, t.r, t.g, t.b), o.setXYZ(25, t.r, t.g, t.b), o.setXYZ(26, t.r, t.g, t.b), o.setXYZ(27, t.r, t.g, t.b), o.setXYZ(28, t.r, t.g, t.b), o.setXYZ(29, t.r, t.g, t.b), o.setXYZ(30, t.r, t.g, t.b), o.setXYZ(31, t.r, t.g, t.b), o.setXYZ(32, n.r, n.g, n.b), o.setXYZ(33, n.r, n.g, n.b), o.setXYZ(34, n.r, n.g, n.b), o.setXYZ(35, n.r, n.g, n.b), o.setXYZ(36, n.r, n.g, n.b), o.setXYZ(37, n.r, n.g, n.b), o.setXYZ(38, i.r, i.g, i.b), o.setXYZ(39, i.r, i.g, i.b), o.setXYZ(40, r.r, r.g, r.b), o.setXYZ(41, r.r, r.g, r.b), o.setXYZ(42, r.r, r.g, r.b), o.setXYZ(43, r.r, r.g, r.b), o.setXYZ(44, r.r, r.g, r.b), o.setXYZ(45, r.r, r.g, r.b), o.setXYZ(46, r.r, r.g, r.b), o.setXYZ(47, r.r, r.g, r.b), o.setXYZ(48, r.r, r.g, r.b), o.setXYZ(49, r.r, r.g, r.b), o.needsUpdate = !0;
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        ot.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), ht("c", t, e, ot, 0, 0, -1), ht("t", t, e, ot, 0, 0, 1), ht("n1", t, e, ot, -n, -i, -1), ht("n2", t, e, ot, n, -i, -1), ht("n3", t, e, ot, -n, i, -1), ht("n4", t, e, ot, n, i, -1), ht("f1", t, e, ot, -n, -i, 1), ht("f2", t, e, ot, n, -i, 1), ht("f3", t, e, ot, -n, i, 1), ht("f4", t, e, ot, n, i, 1), ht("u1", t, e, ot, n * .7, i * 1.1, -1), ht("u2", t, e, ot, -n * .7, i * 1.1, -1), ht("u3", t, e, ot, 0, i * 2, -1), ht("cf1", t, e, ot, -n, 0, 1), ht("cf2", t, e, ot, n, 0, 1), ht("cf3", t, e, ot, 0, -i, 1), ht("cf4", t, e, ot, 0, i, 1), ht("cn1", t, e, ot, -n, 0, -1), ht("cn2", t, e, ot, n, 0, -1), ht("cn3", t, e, ot, 0, -i, -1), ht("cn4", t, e, ot, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function ht(s1, e, t, n, i, r, a) {
    Rr.set(i, r, a).unproject(n);
    let o = e[s1];
    if (o !== void 0) {
        let c = t.getAttribute("position");
        for(let l = 0, h = o.length; l < h; l++)c.setXYZ(o[l], Rr.x, Rr.y, Rr.z);
    }
}
var Cr = new Qt, td = class extends en {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new Ge;
        r.setIndex(new et(n, 1)), r.setAttribute("position", new et(i, 3)), super(r, new wt({
            color: t,
            toneMapped: !1
        })), this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Cr.setFromObject(this.object), Cr.isEmpty()) return;
        let t = Cr.min, n = Cr.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e, t) {
        return super.copy(e, t), this.object = e.object, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, nd = class extends en {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new Ge;
        r.setIndex(new et(n, 1)), r.setAttribute("position", new ve(i, 3)), super(r, new wt({
            color: t,
            toneMapped: !1
        })), this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, id = class extends bn {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            0,
            -1,
            1,
            0,
            -1,
            -1,
            0,
            1,
            1,
            0,
            -1,
            1,
            0,
            -1,
            -1,
            0,
            1,
            -1,
            0,
            1,
            1,
            0
        ], a = new Ge;
        a.setAttribute("position", new ve(r, 3)), a.computeBoundingSphere(), super(a, new wt({
            color: i,
            toneMapped: !1
        })), this.type = "PlaneHelper", this.plane = e, this.size = t;
        let o = [
            1,
            1,
            0,
            -1,
            1,
            0,
            -1,
            -1,
            0,
            1,
            1,
            0,
            -1,
            -1,
            0,
            1,
            -1,
            0
        ], c = new Ge;
        c.setAttribute("position", new ve(o, 3)), c.computeBoundingSphere(), this.add(new Mt(c, new Sn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        this.position.set(0, 0, 0), this.scale.set(.5 * this.size, .5 * this.size, 1), this.lookAt(this.plane.normal), this.translateZ(-this.plane.constant), super.updateMatrixWorld(e);
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
}, sd = new A, Pr, ho, rd = class extends Je {
    constructor(e = new A(0, 0, 1), t = new A(0, 0, 0), n = 1, i = 16776960, r = n * .2, a = r * .2){
        super(), this.type = "ArrowHelper", Pr === void 0 && (Pr = new Ge, Pr.setAttribute("position", new ve([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), ho = new Ns(0, .5, 1, 5, 1), ho.translate(0, -.5, 0)), this.position.copy(t), this.line = new bn(Pr, new wt({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Mt(ho, new Sn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, a);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            sd.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(sd, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
    dispose() {
        this.line.geometry.dispose(), this.line.material.dispose(), this.cone.geometry.dispose(), this.cone.material.dispose();
    }
}, ad = class extends en {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new Ge;
        i.setAttribute("position", new ve(t, 3)), i.setAttribute("color", new ve(n, 3));
        let r = new wt({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r), this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new pe, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, od = class {
    constructor(){
        this.type = "ShapePath", this.color = new pe, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new ji, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, a) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, a), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e) {
        function t(p) {
            let v = [];
            for(let x = 0, y = p.length; x < y; x++){
                let b = p[x], w = new Fn;
                w.curves = b.curves, v.push(w);
            }
            return v;
        }
        function n(p, v) {
            let x = v.length, y = !1;
            for(let b = x - 1, w = 0; w < x; b = w++){
                let R = v[b], I = v[w], M = I.x - R.x, T = I.y - R.y;
                if (Math.abs(T) > Number.EPSILON) {
                    if (T < 0 && (R = v[w], M = -M, I = v[b], T = -T), p.y < R.y || p.y > I.y) continue;
                    if (p.y === R.y) {
                        if (p.x === R.x) return !0;
                    } else {
                        let O = T * (p.x - R.x) - M * (p.y - R.y);
                        if (O === 0) return !0;
                        if (O < 0) continue;
                        y = !y;
                    }
                } else {
                    if (p.y !== R.y) continue;
                    if (I.x <= p.x && p.x <= R.x || R.x <= p.x && p.x <= I.x) return !0;
                }
            }
            return y;
        }
        let i = yn.isClockWise, r = this.subPaths;
        if (r.length === 0) return [];
        let a, o, c, l = [];
        if (r.length === 1) return o = r[0], c = new Fn, c.curves = o.curves, l.push(c), l;
        let h = !i(r[0].getPoints());
        h = e ? !h : h;
        let u = [], d = [], f = [], m = 0, _;
        d[m] = void 0, f[m] = [];
        for(let p = 0, v = r.length; p < v; p++)o = r[p], _ = o.getPoints(), a = i(_), a = e ? !a : a, a ? (!h && d[m] && m++, d[m] = {
            s: new Fn,
            p: _
        }, d[m].s.curves = o.curves, h && m++, f[m] = []) : f[m].push({
            h: o,
            p: _[0]
        });
        if (!d[0]) return t(r);
        if (d.length > 1) {
            let p = !1, v = 0;
            for(let x = 0, y = d.length; x < y; x++)u[x] = [];
            for(let x = 0, y = d.length; x < y; x++){
                let b = f[x];
                for(let w = 0; w < b.length; w++){
                    let R = b[w], I = !0;
                    for(let M = 0; M < d.length; M++)n(R.p, d[M].p) && (x !== M && v++, I ? (I = !1, u[M].push(R)) : p = !0);
                    I && u[x].push(R);
                }
            }
            v > 0 && p === !1 && (f = u);
        }
        let g;
        for(let p = 0, v = d.length; p < v; p++){
            c = d[p].s, l.push(c), g = f[p];
            for(let x = 0, y = g.length; x < y; x++)c.holes.push(g[x].h);
        }
        return l;
    }
};
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: Hc
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = Hc);
const mod = {
    ACESFilmicToneMapping: mf,
    AddEquation: Bi,
    AddOperation: uf,
    AdditiveAnimationBlendMode: xd,
    AdditiveBlending: al,
    AlphaFormat: vf,
    AlwaysCompare: Vf,
    AlwaysDepth: sf,
    AlwaysStencilFunc: If,
    AmbientLight: Cc,
    AnimationAction: Vc,
    AnimationClip: is,
    AnimationLoader: au,
    AnimationMixer: Cu,
    AnimationObjectGroup: Ru,
    AnimationUtils: Sv,
    ArcCurve: ko,
    ArrayCamera: To,
    ArrowHelper: rd,
    Audio: Fc,
    AudioAnalyser: Au,
    AudioContext: _a,
    AudioListener: Eu,
    AudioLoader: xu,
    AxesHelper: ad,
    BackSide: Ft,
    BasicDepthPacking: Cf,
    BasicShadowMap: Hx,
    Bone: ta,
    BooleanKeyframeTrack: Vn,
    Box2: zu,
    Box3: Qt,
    Box3Helper: nd,
    BoxGeometry: Ji,
    BoxHelper: td,
    BufferAttribute: et,
    BufferGeometry: Ge,
    BufferGeometryLoader: Nc,
    ByteType: _f,
    Cache: ss,
    Camera: Cs,
    CameraHelper: ed,
    CanvasTexture: jh,
    CapsuleGeometry: qo,
    CatmullRomCurve3: Ho,
    CineonToneMapping: pf,
    CircleGeometry: Yo,
    ClampToEdgeWrapping: It,
    Clock: Oc,
    Color: pe,
    ColorKeyframeTrack: pa,
    ColorManagement: Qe,
    CompressedArrayTexture: Kh,
    CompressedCubeTexture: Qh,
    CompressedTexture: Us,
    CompressedTextureLoader: ou,
    ConeGeometry: Zo,
    CubeCamera: _o,
    CubeReflectionMapping: zn,
    CubeRefractionMapping: ci,
    CubeTexture: Ki,
    CubeTextureLoader: cu,
    CubeUVReflectionMapping: Vs,
    CubicBezierCurve: ia,
    CubicBezierCurve3: Go,
    CubicInterpolant: xc,
    CullFaceBack: rl,
    CullFaceFront: Hd,
    CullFaceFrontBack: kx,
    CullFaceNone: kd,
    Curve: Zt,
    CurvePath: Xo,
    CustomBlending: Wd,
    CustomToneMapping: gf,
    CylinderGeometry: Ns,
    Cylindrical: Fu,
    Data3DTexture: qr,
    DataArrayTexture: As,
    DataTexture: oi,
    DataTextureLoader: lu,
    DataUtils: Mv,
    DecrementStencilOp: ev,
    DecrementWrapStencilOp: nv,
    DefaultLoadingManager: Ex,
    DepthFormat: si,
    DepthStencilFormat: Yi,
    DepthTexture: wo,
    DirectionalLight: Rc,
    DirectionalLightHelper: ju,
    DiscreteInterpolant: vc,
    DisplayP3ColorSpace: qc,
    DodecahedronGeometry: Jo,
    DoubleSide: gn,
    DstAlphaFactor: Kd,
    DstColorFactor: jd,
    DynamicCopyUsage: _v,
    DynamicDrawUsage: uv,
    DynamicReadUsage: pv,
    EdgesGeometry: $o,
    EllipseCurve: Ds,
    EqualCompare: Nf,
    EqualDepth: af,
    EqualStencilFunc: av,
    EquirectangularReflectionMapping: Ir,
    EquirectangularRefractionMapping: Ur,
    Euler: Yr,
    EventDispatcher: sn,
    ExtrudeGeometry: jo,
    FileLoader: rn,
    Float16BufferAttribute: ih,
    Float32BufferAttribute: ve,
    Float64BufferAttribute: sh,
    FloatType: xn,
    Fog: Lo,
    FogExp2: Po,
    FramebufferTexture: $h,
    FrontSide: Bn,
    Frustum: Ps,
    GLBufferAttribute: Uu,
    GLSL1: vv,
    GLSL3: Ol,
    GreaterCompare: Ff,
    GreaterDepth: cf,
    GreaterEqualCompare: zf,
    GreaterEqualDepth: of,
    GreaterEqualStencilFunc: hv,
    GreaterStencilFunc: cv,
    GridHelper: Ju,
    Group: ti,
    HalfFloatType: Ts,
    HemisphereLight: Sc,
    HemisphereLightHelper: Zu,
    IcosahedronGeometry: ec,
    ImageBitmapLoader: _u,
    ImageLoader: rs,
    ImageUtils: Xr,
    IncrementStencilOp: jx,
    IncrementWrapStencilOp: tv,
    InstancedBufferAttribute: ui,
    InstancedBufferGeometry: Dc,
    InstancedInterleavedBuffer: Iu,
    InstancedMesh: Fo,
    Int16BufferAttribute: th,
    Int32BufferAttribute: nh,
    Int8BufferAttribute: Ql,
    IntType: dd,
    InterleavedBuffer: Is,
    InterleavedBufferAttribute: Qi,
    Interpolant: es,
    InterpolateDiscrete: Or,
    InterpolateLinear: Fr,
    InterpolateSmooth: La,
    InvertStencilOp: iv,
    KeepStencilOp: Ia,
    KeyframeTrack: Jt,
    LOD: Do,
    LatheGeometry: la,
    Layers: Rs,
    LessCompare: Df,
    LessDepth: rf,
    LessEqualCompare: Of,
    LessEqualDepth: uo,
    LessEqualStencilFunc: ov,
    LessStencilFunc: rv,
    Light: En,
    LightProbe: Ic,
    Line: bn,
    Line3: ku,
    LineBasicMaterial: wt,
    LineCurve: sa,
    LineCurve3: Wo,
    LineDashedMaterial: gc,
    LineLoop: Bo,
    LineSegments: en,
    LinearDisplayP3ColorSpace: va,
    LinearEncoding: vd,
    LinearFilter: mt,
    LinearInterpolant: fa,
    LinearMipMapLinearFilter: Yx,
    LinearMipMapNearestFilter: qx,
    LinearMipmapLinearFilter: li,
    LinearMipmapNearestFilter: ud,
    LinearSRGBColorSpace: Mn,
    LinearToneMapping: df,
    LinearTransfer: zr,
    Loader: Dt,
    LoaderUtils: ga,
    LoadingManager: ma,
    LoopOnce: wf,
    LoopPingPong: Rf,
    LoopRepeat: Af,
    LuminanceAlphaFormat: Mf,
    LuminanceFormat: yf,
    MOUSE: zx,
    Material: bt,
    MaterialLoader: Uc,
    MathUtils: yv,
    Matrix3: He,
    Matrix4: ze,
    MaxEquation: hl,
    Mesh: Mt,
    MeshBasicMaterial: Sn,
    MeshDepthMaterial: Qr,
    MeshDistanceMaterial: jr,
    MeshLambertMaterial: pc,
    MeshMatcapMaterial: mc,
    MeshNormalMaterial: fc,
    MeshPhongMaterial: uc,
    MeshPhysicalMaterial: hc,
    MeshStandardMaterial: da,
    MeshToonMaterial: dc,
    MinEquation: ll,
    MirroredRepeatWrapping: Nr,
    MixOperation: hf,
    MultiplyBlending: cl,
    MultiplyOperation: xa,
    NearestFilter: pt,
    NearestMipMapLinearFilter: Xx,
    NearestMipMapNearestFilter: Wx,
    NearestMipmapLinearFilter: Lr,
    NearestMipmapNearestFilter: fo,
    NeverCompare: Uf,
    NeverDepth: nf,
    NeverStencilFunc: sv,
    NoBlending: Dn,
    NoColorSpace: Xt,
    NoToneMapping: Nn,
    NormalAnimationBlendMode: Xc,
    NormalBlending: Wi,
    NotEqualCompare: Bf,
    NotEqualDepth: lf,
    NotEqualStencilFunc: lv,
    NumberKeyframeTrack: ts,
    Object3D: Je,
    ObjectLoader: pu,
    ObjectSpaceNormalMap: Lf,
    OctahedronGeometry: ha,
    OneFactor: Zd,
    OneMinusDstAlphaFactor: Qd,
    OneMinusDstColorFactor: ef,
    OneMinusSrcAlphaFactor: hd,
    OneMinusSrcColorFactor: $d,
    OrthographicCamera: Ls,
    P3Primaries: kr,
    PCFShadowMap: cd,
    PCFSoftShadowMap: Gd,
    PMREMGenerator: Kr,
    Path: ji,
    PerspectiveCamera: yt,
    Plane: mn,
    PlaneGeometry: $r,
    PlaneHelper: id,
    PointLight: wc,
    PointLightHelper: Xu,
    Points: Vo,
    PointsMaterial: na,
    PolarGridHelper: $u,
    PolyhedronGeometry: di,
    PositionalAudio: wu,
    PropertyBinding: Ke,
    PropertyMixer: Bc,
    QuadraticBezierCurve: ra,
    QuadraticBezierCurve3: aa,
    Quaternion: Ut,
    QuaternionKeyframeTrack: pi,
    QuaternionLinearInterpolant: yc,
    RED_GREEN_RGTC2_Format: Dl,
    RED_RGTC1_Format: Tf,
    REVISION: Hc,
    RGBADepthPacking: Pf,
    RGBAFormat: Wt,
    RGBAIntegerFormat: _d,
    RGBA_ASTC_10x10_Format: Rl,
    RGBA_ASTC_10x5_Format: Tl,
    RGBA_ASTC_10x6_Format: wl,
    RGBA_ASTC_10x8_Format: Al,
    RGBA_ASTC_12x10_Format: Cl,
    RGBA_ASTC_12x12_Format: Pl,
    RGBA_ASTC_4x4_Format: _l,
    RGBA_ASTC_5x4_Format: xl,
    RGBA_ASTC_5x5_Format: vl,
    RGBA_ASTC_6x5_Format: yl,
    RGBA_ASTC_6x6_Format: Ml,
    RGBA_ASTC_8x5_Format: Sl,
    RGBA_ASTC_8x6_Format: bl,
    RGBA_ASTC_8x8_Format: El,
    RGBA_BPTC_Format: Pa,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: Aa,
    RGBA_S3TC_DXT3_Format: Ra,
    RGBA_S3TC_DXT5_Format: Ca,
    RGB_BPTC_SIGNED_Format: Ll,
    RGB_BPTC_UNSIGNED_Format: Il,
    RGB_ETC1_Format: Ef,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: wa,
    RGFormat: bf,
    RGIntegerFormat: gd,
    RawShaderMaterial: lc,
    Ray: hi,
    Raycaster: Du,
    Rec709Primaries: Vr,
    RectAreaLight: Pc,
    RedFormat: Sf,
    RedIntegerFormat: md,
    ReinhardToneMapping: ff,
    RenderTarget: go,
    RepeatWrapping: Dr,
    ReplaceStencilOp: Qx,
    ReverseSubtractEquation: qd,
    RingGeometry: tc,
    SIGNED_RED_GREEN_RGTC2_Format: Nl,
    SIGNED_RED_RGTC1_Format: Ul,
    SRGBColorSpace: vt,
    SRGBTransfer: nt,
    Scene: Io,
    ShaderChunk: ke,
    ShaderLib: nn,
    ShaderMaterial: jt,
    ShadowMaterial: cc,
    Shape: Fn,
    ShapeGeometry: nc,
    ShapePath: od,
    ShapeUtils: yn,
    ShortType: xf,
    Skeleton: Oo,
    SkeletonHelper: Wu,
    SkinnedMesh: No,
    Source: In,
    Sphere: Yt,
    SphereGeometry: ua,
    Spherical: Ou,
    SphericalHarmonics3: Lc,
    SplineCurve: oa,
    SpotLight: Ec,
    SpotLightHelper: Gu,
    Sprite: Uo,
    SpriteMaterial: ea,
    SrcAlphaFactor: ld,
    SrcAlphaSaturateFactor: tf,
    SrcColorFactor: Jd,
    StaticCopyUsage: gv,
    StaticDrawUsage: Hr,
    StaticReadUsage: fv,
    StereoCamera: Mu,
    StreamCopyUsage: xv,
    StreamDrawUsage: dv,
    StreamReadUsage: mv,
    StringKeyframeTrack: kn,
    SubtractEquation: Xd,
    SubtractiveBlending: ol,
    TOUCH: Vx,
    TangentSpaceNormalMap: mi,
    TetrahedronGeometry: ic,
    Texture: St,
    TextureLoader: hu,
    TorusGeometry: sc,
    TorusKnotGeometry: rc,
    Triangle: Un,
    TriangleFanDrawMode: $x,
    TriangleStripDrawMode: Jx,
    TrianglesDrawMode: Zx,
    TubeGeometry: ac,
    TwoPassDoubleSide: Gx,
    UVMapping: Gc,
    Uint16BufferAttribute: Zr,
    Uint32BufferAttribute: Jr,
    Uint8BufferAttribute: jl,
    Uint8ClampedBufferAttribute: eh,
    Uniform: Pu,
    UniformsGroup: Lu,
    UniformsLib: le,
    UniformsUtils: xp,
    UnsignedByteType: On,
    UnsignedInt248Type: ii,
    UnsignedIntType: Ln,
    UnsignedShort4444Type: fd,
    UnsignedShort5551Type: pd,
    UnsignedShortType: Wc,
    VSMShadowMap: pn,
    Vector2: Z,
    Vector3: A,
    Vector4: je,
    VectorKeyframeTrack: ns,
    VideoTexture: Jh,
    WebGL1Renderer: Co,
    WebGL3DRenderTarget: Hl,
    WebGLArrayRenderTarget: kl,
    WebGLCoordinateSystem: vn,
    WebGLCubeRenderTarget: xo,
    WebGLMultipleRenderTargets: Gl,
    WebGLRenderTarget: qt,
    WebGLRenderer: Ro,
    WebGLUtils: V0,
    WebGPUCoordinateSystem: Gr,
    WireframeGeometry: oc,
    WrapAroundEnding: Br,
    ZeroCurvatureEnding: zi,
    ZeroFactor: Yd,
    ZeroSlopeEnding: Vi,
    ZeroStencilOp: Kx,
    _SRGBAFormat: po,
    createCanvasElement: tp,
    sRGBEncoding: ri
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
function typedarray_to_vectype(typedArray, ndim) {
    if (ndim === 1) {
        return "float";
    } else if (typedArray instanceof Float32Array) {
        return "vec" + ndim;
    } else if (typedArray instanceof Int32Array) {
        return "ivec" + ndim;
    } else if (typedArray instanceof Uint32Array) {
        return "uvec" + ndim;
    } else {
        return;
    }
}
function attribute_type(attribute) {
    if (attribute) {
        return typedarray_to_vectype(attribute.array, attribute.itemSize);
    } else {
        return;
    }
}
function uniform_type(obj) {
    if (obj instanceof THREE.Uniform) {
        return uniform_type(obj.value);
    } else if (typeof obj === "number") {
        return "float";
    } else if (typeof obj === "boolean") {
        return "bool";
    } else if (obj instanceof THREE.Vector2) {
        return "vec2";
    } else if (obj instanceof THREE.Vector3) {
        return "vec3";
    } else if (obj instanceof THREE.Vector4) {
        return "vec4";
    } else if (obj instanceof THREE.Color) {
        return "vec4";
    } else if (obj instanceof THREE.Matrix3) {
        return "mat3";
    } else if (obj instanceof THREE.Matrix4) {
        return "mat4";
    } else if (obj instanceof THREE.Texture) {
        return "sampler2D";
    } else {
        return;
    }
}
function uniforms_to_type_declaration(uniform_dict) {
    let result = "";
    for(const name in uniform_dict){
        const uniform = uniform_dict[name];
        const type = uniform_type(uniform);
        result += `uniform ${type} ${name};\n`;
    }
    return result;
}
function attributes_to_type_declaration(attributes_dict) {
    let result = "";
    for(const name in attributes_dict){
        const attribute = attributes_dict[name];
        const type = attribute_type(attribute);
        result += `in ${type} ${name};\n`;
    }
    return result;
}
const _changeEvent = {
    type: "change"
};
const _startEvent = {
    type: "start"
};
const _endEvent = {
    type: "end"
};
const _ray = new hi();
const _plane = new mn();
const TILT_LIMIT = Math.cos(70 * yv.DEG2RAD);
class OrbitControls extends sn {
    constructor(object, domElement, allow_update, is_in_scene){
        super();
        this.object = object;
        this.domElement = domElement;
        this.domElement.style.touchAction = "none";
        this.enabled = true;
        this.target = new A();
        this.cursor = new A();
        this.minDistance = 0;
        this.maxDistance = Infinity;
        this.minZoom = 0;
        this.maxZoom = Infinity;
        this.minTargetRadius = 0;
        this.maxTargetRadius = Infinity;
        this.minPolarAngle = 0;
        this.maxPolarAngle = Math.PI;
        this.minAzimuthAngle = -Infinity;
        this.maxAzimuthAngle = Infinity;
        this.enableDamping = false;
        this.dampingFactor = 0.05;
        this.enableZoom = true;
        this.zoomSpeed = 1.0;
        this.enableRotate = true;
        this.rotateSpeed = 1.0;
        this.enablePan = true;
        this.panSpeed = 1.0;
        this.screenSpacePanning = true;
        this.keyPanSpeed = 7.0;
        this.zoomToCursor = false;
        this.autoRotate = false;
        this.autoRotateSpeed = 2.0;
        this.keys = {
            LEFT: "ArrowLeft",
            UP: "ArrowUp",
            RIGHT: "ArrowRight",
            BOTTOM: "ArrowDown"
        };
        this.mouseButtons = {
            LEFT: zx.ROTATE,
            MIDDLE: zx.DOLLY,
            RIGHT: zx.PAN
        };
        this.touches = {
            ONE: Vx.ROTATE,
            TWO: Vx.DOLLY_PAN
        };
        this.target0 = this.target.clone();
        this.position0 = this.object.position.clone();
        this.zoom0 = this.object.zoom;
        this._domElementKeyEvents = null;
        this.getPolarAngle = function() {
            return spherical.phi;
        };
        this.getAzimuthalAngle = function() {
            return spherical.theta;
        };
        this.getDistance = function() {
            return this.object.position.distanceTo(this.target);
        };
        this.listenToKeyEvents = function(domElement) {
            domElement.addEventListener("keydown", onKeyDown);
            this._domElementKeyEvents = domElement;
        };
        this.stopListenToKeyEvents = function() {
            this._domElementKeyEvents.removeEventListener("keydown", onKeyDown);
            this._domElementKeyEvents = null;
        };
        this.saveState = function() {
            scope.target0.copy(scope.target);
            scope.position0.copy(scope.object.position);
            scope.zoom0 = scope.object.zoom;
        };
        this.reset = function() {
            scope.target.copy(scope.target0);
            scope.object.position.copy(scope.position0);
            scope.object.zoom = scope.zoom0;
            scope.object.updateProjectionMatrix();
            scope.dispatchEvent(_changeEvent);
            scope.update();
            state = STATE.NONE;
        };
        this.update = function() {
            const offset = new A();
            const quat = new Ut().setFromUnitVectors(object.up, new A(0, 1, 0));
            const quatInverse = quat.clone().invert();
            const lastPosition = new A();
            const lastQuaternion = new Ut();
            const lastTargetPosition = new A();
            const twoPI = 2 * Math.PI;
            return function update(deltaTime = null) {
                if (!allow_update()) {
                    return;
                }
                const position = scope.object.position;
                offset.copy(position).sub(scope.target);
                offset.applyQuaternion(quat);
                spherical.setFromVector3(offset);
                if (scope.autoRotate && state === STATE.NONE) {
                    rotateLeft(getAutoRotationAngle(deltaTime));
                }
                if (scope.enableDamping) {
                    spherical.theta += sphericalDelta.theta * scope.dampingFactor;
                    spherical.phi += sphericalDelta.phi * scope.dampingFactor;
                } else {
                    spherical.theta += sphericalDelta.theta;
                    spherical.phi += sphericalDelta.phi;
                }
                let min = scope.minAzimuthAngle;
                let max = scope.maxAzimuthAngle;
                if (isFinite(min) && isFinite(max)) {
                    if (min < -Math.PI) min += twoPI;
                    else if (min > Math.PI) min -= twoPI;
                    if (max < -Math.PI) max += twoPI;
                    else if (max > Math.PI) max -= twoPI;
                    if (min <= max) {
                        spherical.theta = Math.max(min, Math.min(max, spherical.theta));
                    } else {
                        spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);
                    }
                }
                spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));
                spherical.makeSafe();
                if (scope.enableDamping === true) {
                    scope.target.addScaledVector(panOffset, scope.dampingFactor);
                } else {
                    scope.target.add(panOffset);
                }
                scope.target.sub(scope.cursor);
                scope.target.clampLength(scope.minTargetRadius, scope.maxTargetRadius);
                scope.target.add(scope.cursor);
                if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {
                    spherical.radius = clampDistance(spherical.radius);
                } else {
                    spherical.radius = clampDistance(spherical.radius * scale);
                }
                offset.setFromSpherical(spherical);
                offset.applyQuaternion(quatInverse);
                position.copy(scope.target).add(offset);
                scope.object.lookAt(scope.target);
                if (scope.enableDamping === true) {
                    sphericalDelta.theta *= 1 - scope.dampingFactor;
                    sphericalDelta.phi *= 1 - scope.dampingFactor;
                    panOffset.multiplyScalar(1 - scope.dampingFactor);
                } else {
                    sphericalDelta.set(0, 0, 0);
                    panOffset.set(0, 0, 0);
                }
                let zoomChanged = false;
                if (scope.zoomToCursor && performCursorZoom) {
                    let newRadius = null;
                    if (scope.object.isPerspectiveCamera) {
                        const prevRadius = offset.length();
                        newRadius = clampDistance(prevRadius * scale);
                        const radiusDelta = prevRadius - newRadius;
                        scope.object.position.addScaledVector(dollyDirection, radiusDelta);
                        scope.object.updateMatrixWorld();
                    } else if (scope.object.isOrthographicCamera) {
                        const mouseBefore = new A(mouse.x, mouse.y, 0);
                        mouseBefore.unproject(scope.object);
                        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));
                        scope.object.updateProjectionMatrix();
                        zoomChanged = true;
                        const mouseAfter = new A(mouse.x, mouse.y, 0);
                        mouseAfter.unproject(scope.object);
                        scope.object.position.sub(mouseAfter).add(mouseBefore);
                        scope.object.updateMatrixWorld();
                        newRadius = offset.length();
                    } else {
                        console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.");
                        scope.zoomToCursor = false;
                    }
                    if (newRadius !== null) {
                        if (this.screenSpacePanning) {
                            scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);
                        } else {
                            _ray.origin.copy(scope.object.position);
                            _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);
                            if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {
                                object.lookAt(scope.target);
                            } else {
                                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);
                                _ray.intersectPlane(_plane, scope.target);
                            }
                        }
                    }
                } else if (scope.object.isOrthographicCamera) {
                    scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));
                    scope.object.updateProjectionMatrix();
                    zoomChanged = true;
                }
                scale = 1;
                performCursorZoom = false;
                if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS || lastTargetPosition.distanceToSquared(scope.target) > 0) {
                    scope.dispatchEvent(_changeEvent);
                    lastPosition.copy(scope.object.position);
                    lastQuaternion.copy(scope.object.quaternion);
                    lastTargetPosition.copy(scope.target);
                    zoomChanged = false;
                    return true;
                }
                return false;
            };
        }();
        this.dispose = function() {
            scope.domElement.removeEventListener("contextmenu", onContextMenu);
            scope.domElement.removeEventListener("pointerdown", onPointerDown);
            scope.domElement.removeEventListener("pointercancel", onPointerUp);
            scope.domElement.removeEventListener("wheel", onMouseWheel);
            scope.domElement.removeEventListener("pointermove", onPointerMove);
            scope.domElement.removeEventListener("pointerup", onPointerUp);
            if (scope._domElementKeyEvents !== null) {
                scope._domElementKeyEvents.removeEventListener("keydown", onKeyDown);
                scope._domElementKeyEvents = null;
            }
        };
        const scope = this;
        const STATE = {
            NONE: -1,
            ROTATE: 0,
            DOLLY: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_PAN: 4,
            TOUCH_DOLLY_PAN: 5,
            TOUCH_DOLLY_ROTATE: 6
        };
        let state = STATE.NONE;
        const EPS = 0.000001;
        const spherical = new Ou();
        const sphericalDelta = new Ou();
        let scale = 1;
        const panOffset = new A();
        const rotateStart = new Z();
        const rotateEnd = new Z();
        const rotateDelta = new Z();
        const panStart = new Z();
        const panEnd = new Z();
        const panDelta = new Z();
        const dollyStart = new Z();
        const dollyEnd = new Z();
        const dollyDelta = new Z();
        const dollyDirection = new A();
        const mouse = new Z();
        let performCursorZoom = false;
        const pointers = [];
        const pointerPositions = {};
        function getAutoRotationAngle(deltaTime) {
            if (deltaTime !== null) {
                return 2 * Math.PI / 60 * scope.autoRotateSpeed * deltaTime;
            } else {
                return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;
            }
        }
        function getZoomScale() {
            return Math.pow(0.95, scope.zoomSpeed);
        }
        function rotateLeft(angle) {
            sphericalDelta.theta -= angle;
        }
        function rotateUp(angle) {
            sphericalDelta.phi -= angle;
        }
        const panLeft = function() {
            const v = new A();
            return function panLeft(distance, objectMatrix) {
                v.setFromMatrixColumn(objectMatrix, 0);
                v.multiplyScalar(-distance);
                panOffset.add(v);
            };
        }();
        const panUp = function() {
            const v = new A();
            return function panUp(distance, objectMatrix) {
                if (scope.screenSpacePanning === true) {
                    v.setFromMatrixColumn(objectMatrix, 1);
                } else {
                    v.setFromMatrixColumn(objectMatrix, 0);
                    v.crossVectors(scope.object.up, v);
                }
                v.multiplyScalar(distance);
                panOffset.add(v);
            };
        }();
        const pan = function() {
            const offset = new A();
            return function pan(deltaX, deltaY) {
                const element = scope.domElement;
                if (scope.object.isPerspectiveCamera) {
                    const position = scope.object.position;
                    offset.copy(position).sub(scope.target);
                    let targetDistance = offset.length();
                    targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);
                    panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);
                    panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);
                } else if (scope.object.isOrthographicCamera) {
                    panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);
                    panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);
                } else {
                    console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.");
                    scope.enablePan = false;
                }
            };
        }();
        function dollyOut(dollyScale) {
            if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {
                scale /= dollyScale;
            } else {
                console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");
                scope.enableZoom = false;
            }
        }
        function dollyIn(dollyScale) {
            if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {
                scale *= dollyScale;
            } else {
                console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");
                scope.enableZoom = false;
            }
        }
        function updateMouseParameters(event) {
            if (!scope.zoomToCursor) {
                return;
            }
            performCursorZoom = true;
            const rect = scope.domElement.getBoundingClientRect();
            const x = event.clientX - rect.left;
            const y = event.clientY - rect.top;
            const w = rect.width;
            const h = rect.height;
            mouse.x = x / w * 2 - 1;
            mouse.y = -(y / h) * 2 + 1;
            dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();
        }
        function clampDistance(dist) {
            return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));
        }
        function handleMouseDownRotate(event) {
            rotateStart.set(event.clientX, event.clientY);
        }
        function handleMouseDownDolly(event) {
            updateMouseParameters(event);
            dollyStart.set(event.clientX, event.clientY);
        }
        function handleMouseDownPan(event) {
            panStart.set(event.clientX, event.clientY);
        }
        function handleMouseMoveRotate(event) {
            rotateEnd.set(event.clientX, event.clientY);
            rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);
            const element = scope.domElement;
            rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);
            rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);
            rotateStart.copy(rotateEnd);
            scope.update();
        }
        function handleMouseMoveDolly(event) {
            dollyEnd.set(event.clientX, event.clientY);
            dollyDelta.subVectors(dollyEnd, dollyStart);
            if (dollyDelta.y > 0) {
                dollyOut(getZoomScale());
            } else if (dollyDelta.y < 0) {
                dollyIn(getZoomScale());
            }
            dollyStart.copy(dollyEnd);
            scope.update();
        }
        function handleMouseMovePan(event) {
            panEnd.set(event.clientX, event.clientY);
            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);
            pan(panDelta.x, panDelta.y);
            panStart.copy(panEnd);
            scope.update();
        }
        function handleMouseWheel(event) {
            updateMouseParameters(event);
            if (event.deltaY < 0) {
                dollyIn(getZoomScale());
            } else if (event.deltaY > 0) {
                dollyOut(getZoomScale());
            }
            scope.update();
        }
        function handleKeyDown(event) {
            let needsUpdate = false;
            switch(event.code){
                case scope.keys.UP:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        rotateUp(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);
                    } else {
                        pan(0, scope.keyPanSpeed);
                    }
                    needsUpdate = true;
                    break;
                case scope.keys.BOTTOM:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        rotateUp(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);
                    } else {
                        pan(0, -scope.keyPanSpeed);
                    }
                    needsUpdate = true;
                    break;
                case scope.keys.LEFT:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        rotateLeft(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);
                    } else {
                        pan(scope.keyPanSpeed, 0);
                    }
                    needsUpdate = true;
                    break;
                case scope.keys.RIGHT:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        rotateLeft(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);
                    } else {
                        pan(-scope.keyPanSpeed, 0);
                    }
                    needsUpdate = true;
                    break;
            }
            if (needsUpdate) {
                event.preventDefault();
                scope.update();
            }
        }
        function handleTouchStartRotate() {
            if (pointers.length === 1) {
                rotateStart.set(pointers[0].pageX, pointers[0].pageY);
            } else {
                const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);
                const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);
                rotateStart.set(x, y);
            }
        }
        function handleTouchStartPan() {
            if (pointers.length === 1) {
                panStart.set(pointers[0].pageX, pointers[0].pageY);
            } else {
                const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);
                const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);
                panStart.set(x, y);
            }
        }
        function handleTouchStartDolly() {
            const dx = pointers[0].pageX - pointers[1].pageX;
            const dy = pointers[0].pageY - pointers[1].pageY;
            const distance = Math.sqrt(dx * dx + dy * dy);
            dollyStart.set(0, distance);
        }
        function handleTouchStartDollyPan() {
            if (scope.enableZoom) handleTouchStartDolly();
            if (scope.enablePan) handleTouchStartPan();
        }
        function handleTouchStartDollyRotate() {
            if (scope.enableZoom) handleTouchStartDolly();
            if (scope.enableRotate) handleTouchStartRotate();
        }
        function handleTouchMoveRotate(event) {
            if (pointers.length == 1) {
                rotateEnd.set(event.pageX, event.pageY);
            } else {
                const position = getSecondPointerPosition(event);
                const x = 0.5 * (event.pageX + position.x);
                const y = 0.5 * (event.pageY + position.y);
                rotateEnd.set(x, y);
            }
            rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);
            const element = scope.domElement;
            rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);
            rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);
            rotateStart.copy(rotateEnd);
        }
        function handleTouchMovePan(event) {
            if (pointers.length === 1) {
                panEnd.set(event.pageX, event.pageY);
            } else {
                const position = getSecondPointerPosition(event);
                const x = 0.5 * (event.pageX + position.x);
                const y = 0.5 * (event.pageY + position.y);
                panEnd.set(x, y);
            }
            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);
            pan(panDelta.x, panDelta.y);
            panStart.copy(panEnd);
        }
        function handleTouchMoveDolly(event) {
            const position = getSecondPointerPosition(event);
            const dx = event.pageX - position.x;
            const dy = event.pageY - position.y;
            const distance = Math.sqrt(dx * dx + dy * dy);
            dollyEnd.set(0, distance);
            dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));
            dollyOut(dollyDelta.y);
            dollyStart.copy(dollyEnd);
        }
        function handleTouchMoveDollyPan(event) {
            if (scope.enableZoom) handleTouchMoveDolly(event);
            if (scope.enablePan) handleTouchMovePan(event);
        }
        function handleTouchMoveDollyRotate(event) {
            if (scope.enableZoom) handleTouchMoveDolly(event);
            if (scope.enableRotate) handleTouchMoveRotate(event);
        }
        function onPointerDown(event) {
            if (scope.enabled === false) return;
            if (pointers.length === 0) {
                scope.domElement.setPointerCapture(event.pointerId);
                scope.domElement.addEventListener("pointermove", onPointerMove);
                scope.domElement.addEventListener("pointerup", onPointerUp);
            }
            addPointer(event);
            if (event.pointerType === "touch") {
                onTouchStart(event);
            } else {
                onMouseDown(event);
            }
        }
        function onPointerMove(event) {
            if (scope.enabled === false) return;
            if (!is_in_scene(event)) return;
            if (event.pointerType === "touch") {
                onTouchMove(event);
            } else {
                onMouseMove(event);
            }
        }
        function onPointerUp(event) {
            removePointer(event);
            if (pointers.length === 0) {
                scope.domElement.releasePointerCapture(event.pointerId);
                scope.domElement.removeEventListener("pointermove", onPointerMove);
                scope.domElement.removeEventListener("pointerup", onPointerUp);
            }
            scope.dispatchEvent(_endEvent);
            state = STATE.NONE;
        }
        function onMouseDown(event) {
            let mouseAction;
            switch(event.button){
                case 0:
                    mouseAction = scope.mouseButtons.LEFT;
                    break;
                case 1:
                    mouseAction = scope.mouseButtons.MIDDLE;
                    break;
                case 2:
                    mouseAction = scope.mouseButtons.RIGHT;
                    break;
                default:
                    mouseAction = -1;
            }
            switch(mouseAction){
                case zx.DOLLY:
                    if (scope.enableZoom === false) return;
                    handleMouseDownDolly(event);
                    state = STATE.DOLLY;
                    break;
                case zx.ROTATE:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        if (scope.enablePan === false) return;
                        handleMouseDownPan(event);
                        state = STATE.PAN;
                    } else {
                        if (scope.enableRotate === false) return;
                        handleMouseDownRotate(event);
                        state = STATE.ROTATE;
                    }
                    break;
                case zx.PAN:
                    if (event.ctrlKey || event.metaKey || event.shiftKey) {
                        if (scope.enableRotate === false) return;
                        handleMouseDownRotate(event);
                        state = STATE.ROTATE;
                    } else {
                        if (scope.enablePan === false) return;
                        handleMouseDownPan(event);
                        state = STATE.PAN;
                    }
                    break;
                default:
                    state = STATE.NONE;
            }
            if (state !== STATE.NONE) {
                scope.dispatchEvent(_startEvent);
            }
        }
        function onMouseMove(event) {
            switch(state){
                case STATE.ROTATE:
                    if (scope.enableRotate === false) return;
                    handleMouseMoveRotate(event);
                    break;
                case STATE.DOLLY:
                    if (scope.enableZoom === false) return;
                    handleMouseMoveDolly(event);
                    break;
                case STATE.PAN:
                    if (scope.enablePan === false) return;
                    handleMouseMovePan(event);
                    break;
            }
        }
        function onMouseWheel(event) {
            if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE || !is_in_scene(event)) return;
            event.preventDefault();
            scope.dispatchEvent(_startEvent);
            handleMouseWheel(event);
            scope.dispatchEvent(_endEvent);
        }
        function onKeyDown(event) {
            if (scope.enabled === false || scope.enablePan === false) return;
            handleKeyDown(event);
        }
        function onTouchStart(event) {
            trackPointer(event);
            switch(pointers.length){
                case 1:
                    switch(scope.touches.ONE){
                        case Vx.ROTATE:
                            if (scope.enableRotate === false) return;
                            handleTouchStartRotate();
                            state = STATE.TOUCH_ROTATE;
                            break;
                        case Vx.PAN:
                            if (scope.enablePan === false) return;
                            handleTouchStartPan();
                            state = STATE.TOUCH_PAN;
                            break;
                        default:
                            state = STATE.NONE;
                    }
                    break;
                case 2:
                    switch(scope.touches.TWO){
                        case Vx.DOLLY_PAN:
                            if (scope.enableZoom === false && scope.enablePan === false) return;
                            handleTouchStartDollyPan();
                            state = STATE.TOUCH_DOLLY_PAN;
                            break;
                        case Vx.DOLLY_ROTATE:
                            if (scope.enableZoom === false && scope.enableRotate === false) return;
                            handleTouchStartDollyRotate();
                            state = STATE.TOUCH_DOLLY_ROTATE;
                            break;
                        default:
                            state = STATE.NONE;
                    }
                    break;
                default:
                    state = STATE.NONE;
            }
            if (state !== STATE.NONE) {
                scope.dispatchEvent(_startEvent);
            }
        }
        function onTouchMove(event) {
            trackPointer(event);
            switch(state){
                case STATE.TOUCH_ROTATE:
                    if (scope.enableRotate === false) return;
                    handleTouchMoveRotate(event);
                    scope.update();
                    break;
                case STATE.TOUCH_PAN:
                    if (scope.enablePan === false) return;
                    handleTouchMovePan(event);
                    scope.update();
                    break;
                case STATE.TOUCH_DOLLY_PAN:
                    if (scope.enableZoom === false && scope.enablePan === false) return;
                    handleTouchMoveDollyPan(event);
                    scope.update();
                    break;
                case STATE.TOUCH_DOLLY_ROTATE:
                    if (scope.enableZoom === false && scope.enableRotate === false) return;
                    handleTouchMoveDollyRotate(event);
                    scope.update();
                    break;
                default:
                    state = STATE.NONE;
            }
        }
        function onContextMenu(event) {
            if (scope.enabled === false) return;
            event.preventDefault();
        }
        function addPointer(event) {
            pointers.push(event);
        }
        function removePointer(event) {
            delete pointerPositions[event.pointerId];
            for(let i = 0; i < pointers.length; i++){
                if (pointers[i].pointerId == event.pointerId) {
                    pointers.splice(i, 1);
                    return;
                }
            }
        }
        function trackPointer(event) {
            let position = pointerPositions[event.pointerId];
            if (position === undefined) {
                position = new Z();
                pointerPositions[event.pointerId] = position;
            }
            position.set(event.pageX, event.pageY);
        }
        function getSecondPointerPosition(event) {
            const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];
            return pointerPositions[pointer.pointerId];
        }
        scope.domElement.addEventListener("contextmenu", onContextMenu);
        scope.domElement.addEventListener("pointerdown", onPointerDown);
        scope.domElement.addEventListener("pointercancel", onPointerUp);
        scope.domElement.addEventListener("wheel", onMouseWheel, {
            passive: false
        });
        this.update();
    }
}
function events2unitless(screen, event) {
    const { canvas , winscale , renderer  } = screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) / winscale;
    const y = (event.clientY - rect.top) / winscale;
    return [
        x,
        renderer._height - y
    ];
}
function Identity4x4() {
    return new ze();
}
function in_scene(scene, mouse_event) {
    const [x, y] = events2unitless(scene.screen, mouse_event);
    const [sx, sy, sw, sh] = scene.viewport.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, light_dir, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new yt(cam3d.fov.value, w / h, 0.01, 100.0);
    const center = new A(...cam3d.lookat.value);
    camera.up = new A(...cam3d.upvector.value);
    camera.position.set(...cam3d.eyeposition.value);
    camera.lookAt(center);
    const use_orbit_cam = ()=>!(JSServe.can_send_to_julia && JSServe.can_send_to_julia());
    const controls = new OrbitControls(camera, canvas, use_orbit_cam, (e)=>in_scene(scene, e));
    controls.addEventListener("change", (e)=>{
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = cam3d.resolution.value;
        const [x, y, z] = camera.position;
        camera.aspect = width / height;
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
        makie_camera.update_light_dir(light_dir.value);
    });
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new Pu(Identity4x4());
        this.projection = new Pu(Identity4x4());
        this.projectionview = new Pu(Identity4x4());
        this.pixel_space = new Pu(Identity4x4());
        this.pixel_space_inverse = new Pu(Identity4x4());
        this.projectionview_inverse = new Pu(Identity4x4());
        this.relative_space = new Pu(relative_space());
        this.relative_inverse = new Pu(relative_space().invert());
        this.clip_space = new Pu(Identity4x4());
        this.resolution = new Pu(new Z());
        this.eyeposition = new Pu(new A());
        this.preprojections = {};
        this.light_direction = new Pu(new A(-1, -1, -1).normalize());
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    update_light_dir(light_dir) {
        const T = new He().setFromMatrix4(this.view.value).invert();
        const new_dir = new A().fromArray(light_dir);
        new_dir.applyMatrix3(T).normalize();
        this.light_direction.value = new_dir;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new Pu(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
function filter_by_key(dict, keys, default_value = false) {
    const result = {};
    keys.forEach((key)=>{
        const val = dict[key];
        if (val) {
            result[key] = val;
        } else {
            result[key] = default_value;
        }
    });
    return result;
}
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    delete_three_scene(scene);
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        const plot = plot_cache[plot_id];
        if (plot) {
            delete_plot(plot);
        }
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(plot_uuids) {
    const plots = find_plots(plot_uuids);
    plots.forEach(delete_plot);
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function linesegments_vertex_shader(uniforms, attributes) {
    const attribute_decl = attributes_to_type_declaration(attributes);
    const uniform_decl = uniforms_to_type_declaration(uniforms);
    const color = attribute_type(attributes.color_start) || uniform_type(uniforms.color_start);
    return `precision mediump int;
        precision highp float;

        ${attribute_decl}
        ${uniform_decl}

        out vec2 f_uv;
        out ${color} f_color;

        vec2 get_resolution() {
            // 2 * px_per_unit doesn't make any sense, but works
            // TODO, figure out what's going on!
            return resolution / 2.0 * px_per_unit;
        }

        vec3 screen_space(vec3 point) {
            vec4 vertex = projectionview * model * vec4(point, 1);
            return vec3(vertex.xy * get_resolution(), vertex.z + vertex.w * depth_shift) / vertex.w;
        }

        vec3 screen_space(vec2 point) {
            return screen_space(vec3(point, 0));
        }

        void main() {
            vec3 p_a = screen_space(linepoint_start);
            vec3 p_b = screen_space(linepoint_end);
            float width = (px_per_unit * (position.x == 1.0 ? linewidth_end : linewidth_start));
            f_color = position.x == 1.0 ? color_end : color_start;
            f_uv = vec2(position.x, position.y + 0.5);

            vec2 pointA = p_a.xy;
            vec2 pointB = p_b.xy;

            vec2 xBasis = pointB - pointA;
            vec2 yBasis = normalize(vec2(-xBasis.y, xBasis.x));
            vec2 point = pointA + xBasis * position.x + yBasis * width * position.y;

            gl_Position = vec4(point.xy / get_resolution(), position.x == 1.0 ? p_b.z : p_a.z, 1.0);
        }
        `;
}
function lines_fragment_shader(uniforms, attributes) {
    const color = attribute_type(attributes.color_start) || uniform_type(uniforms.color_start);
    const color_uniforms = filter_by_key(uniforms, [
        "colorrange",
        "colormap",
        "nan_color",
        "highclip",
        "lowclip"
    ]);
    const uniform_decl = uniforms_to_type_declaration(color_uniforms);
    return `#extension GL_OES_standard_derivatives : enable

    precision mediump int;
    precision highp float;
    precision mediump sampler2D;
    precision mediump sampler3D;

    in vec2 f_uv;
    in ${color} f_color;
    ${uniform_decl}

    out vec4 fragment_color;

    // Half width of antialiasing smoothstep
    #define ANTIALIAS_RADIUS 0.7071067811865476

    vec4 get_color_from_cmap(float value, sampler2D colormap, vec2 colorrange) {
        float cmin = colorrange.x;
        float cmax = colorrange.y;
        if (value <= cmax && value >= cmin) {
            // in value range, continue!
        } else if (value < cmin) {
            return lowclip;
        } else if (value > cmax) {
            return highclip;
        } else {
            // isnan CAN be broken (of course) -.-
            // so if outside value range and not smaller/bigger min/max we assume NaN
            return nan_color;
        }
        float i01 = clamp((value - cmin) / (cmax - cmin), 0.0, 1.0);
        // 1/0 corresponds to the corner of the colormap, so to properly interpolate
        // between the colors, we need to scale it, so that the ends are at 1 - (stepsize/2) and 0+(stepsize/2).
        float stepsize = 1.0 / float(textureSize(colormap, 0));
        i01 = (1.0 - stepsize) * i01 + 0.5 * stepsize;
        return texture(colormap, vec2(i01, 0.0));
    }

    vec4 get_color(float color, sampler2D colormap, vec2 colorrange) {
        return get_color_from_cmap(color, colormap, colorrange);
    }

    vec4 get_color(vec4 color, bool colormap, bool colorrange) {
        return color;
    }
    vec4 get_color(vec3 color, bool colormap, bool colorrange) {
        return vec4(color, 1.0);
    }

    float aastep(float threshold, float value) {
        float afwidth = length(vec2(dFdx(value), dFdy(value))) * ANTIALIAS_RADIUS;
        return smoothstep(threshold-afwidth, threshold+afwidth, value);
    }

    float aastep(float threshold1, float threshold2, float dist) {
        return aastep(threshold1, dist) * aastep(threshold2, 1.0 - dist);
    }

    void main(){
        float xalpha = aastep(0.0, 0.0, f_uv.x);
        float yalpha = aastep(0.0, 0.0, f_uv.y);
        vec4 color = get_color(f_color, colormap, colorrange);
        fragment_color = vec4(color.rgb, color.a);
    }
    `;
}
function create_line_material(uniforms, attributes) {
    const uniforms_des = deserialize_uniforms(uniforms);
    return new THREE.RawShaderMaterial({
        uniforms: uniforms_des,
        glslVersion: THREE.GLSL3,
        vertexShader: linesegments_vertex_shader(uniforms_des, attributes),
        fragmentShader: lines_fragment_shader(uniforms_des, attributes),
        transparent: true
    });
}
function attach_interleaved_line_buffer(attr_name, geometry, points, ndim, is_segments) {
    const skip_elems = is_segments ? 2 * ndim : ndim;
    const buffer = new THREE.InstancedInterleavedBuffer(points, skip_elems, 1);
    geometry.setAttribute(attr_name + "_start", new THREE.InterleavedBufferAttribute(buffer, ndim, 0));
    geometry.setAttribute(attr_name + "_end", new THREE.InterleavedBufferAttribute(buffer, ndim, ndim));
    return buffer;
}
function create_line_instance_geometry() {
    const geometry = new THREE.InstancedBufferGeometry();
    const instance_positions = [
        0,
        -0.5,
        1,
        -0.5,
        1,
        0.5,
        0,
        -0.5,
        1,
        0.5,
        0,
        0.5
    ];
    geometry.setAttribute("position", new THREE.Float32BufferAttribute(instance_positions, 2));
    geometry.boundingSphere = new THREE.Sphere();
    geometry.boundingSphere.radius = 10000000000000;
    geometry.frustumCulled = false;
    return geometry;
}
function create_line_buffer(geometry, buffers, name, attr, is_segments) {
    const flat_buffer = attr.value.flat;
    const ndims = attr.value.type_length;
    const linebuffer = attach_interleaved_line_buffer(name, geometry, flat_buffer, ndims, is_segments);
    buffers[name] = linebuffer;
    return flat_buffer;
}
function create_line_buffers(geometry, buffers, attributes, is_segments) {
    for(let name in attributes){
        const attr = attributes[name];
        create_line_buffer(geometry, buffers, name, attr, is_segments);
    }
}
function attach_updates(mesh, buffers, attributes, is_segments) {
    let geometry = mesh.geometry;
    for(let name in attributes){
        const attr = attributes[name];
        attr.on((new_points)=>{
            let buff = buffers[name];
            const ndims = new_points.type_length;
            const new_line_points = new_points.flat;
            const old_count = buff.array.length;
            const new_count = new_line_points.length / ndims;
            if (old_count < new_line_points.length) {
                mesh.geometry.dispose();
                geometry = create_line_instance_geometry();
                buff = attach_interleaved_line_buffer(name, geometry, new_line_points, ndims, is_segments);
                mesh.geometry = geometry;
                buffers[name] = buff;
            } else {
                buff.set(new_line_points);
            }
            const ls_factor = is_segments ? 2 : 1;
            const offset = is_segments ? 0 : 1;
            mesh.geometry.instanceCount = Math.max(0, new_count / ls_factor - offset);
            buff.needsUpdate = true;
            mesh.needsUpdate = true;
        });
    }
}
function _create_line(line_data, is_segments) {
    const geometry = create_line_instance_geometry();
    const buffers = {};
    create_line_buffers(geometry, buffers, line_data.attributes, is_segments);
    const material = create_line_material(line_data.uniforms, geometry.attributes);
    const mesh = new THREE.Mesh(geometry, material);
    const offset = is_segments ? 0 : 1;
    const new_count = geometry.attributes.linepoint_start.count;
    mesh.geometry.instanceCount = Math.max(0, new_count - offset);
    attach_updates(mesh, buffers, line_data.attributes, is_segments);
    return mesh;
}
function create_line(line_data) {
    return _create_line(line_data, false);
}
function create_linesegments(line_data) {
    return _create_line(line_data, true);
}
function deserialize_plot(data) {
    let mesh;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    if (data.plot_type === "lines") {
        mesh = create_line(data);
    } else if (data.plot_type === "linesegments") {
        mesh = create_linesegments(data);
    } else if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    if (!(data.plot_type === "lines" || data.plot_type === "linesegments")) {
        connect_attributes(mesh, data.attribute_updater);
    }
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    const { px_per_unit  } = scene.screen;
    plot_data.uniforms.resolution = cam.resolution;
    plot_data.uniforms.px_per_unit = new mod.Uniform(px_per_unit);
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    if (scene.camera_relative_light) {
        plot_data.uniforms.light_direction = cam.light_direction;
        scene.light_direction.on((value)=>{
            cam.update_light_dir(value);
        });
    } else {
        const light_dir = new mod.Vector3().fromArray(scene.light_direction.value);
        plot_data.uniforms.light_direction = new mod.Uniform(light_dir);
        scene.light_direction.on((value)=>{
            plot_data.uniforms.light_direction.value.fromArray(value);
        });
    }
    const p = deserialize_plot(plot_data);
    plot_cache[p.plot_uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function convert_RGB_to_RGBA(rgbArray) {
    const length = rgbArray.length;
    const rgbaArray = new Float32Array(length / 3 * 4);
    for(let i = 0, j = 0; i < length; i += 3, j += 4){
        rgbaArray[j] = rgbArray[i];
        rgbaArray[j + 1] = rgbArray[i + 1];
        rgbaArray[j + 2] = rgbArray[i + 2];
        rgbaArray[j + 3] = 1.0;
    }
    return rgbaArray;
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.Data3DTexture(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        let tex_data;
        if (buffer == "texture_atlas") {
            tex_data = TEXTURE_ATLAS[0].value;
        } else {
            tex_data = buffer;
        }
        let format = mod[data.three_format];
        if (data.three_format == "RGBFormat") {
            tex_data = convert_RGB_to_RGBA(tex_data);
            format = mod.RGBAFormat;
        }
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], format, mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    let tex;
    if (size.length == 3) {
        tex = new mod.Data3DTexture(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
    } else {
        tex = new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
    tex.minFilter = old_texture.minFilter;
    tex.magFilter = old_texture.magFilter;
    tex.anisotropy = old_texture.anisotropy;
    tex.wrapS = old_texture.wrapS;
    if (size.length > 1) {
        tex.wrapT = old_texture.wrapT;
    }
    if (size.length > 2) {
        tex.wrapR = old_texture.wrapR;
    }
    return tex;
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        glslVersion: mod.GLSL3,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.viewport = data.viewport;
    scene.backgroundcolor = data.backgroundcolor;
    scene.backgroundcolor_alpha = data.backgroundcolor_alpha;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    scene.camera_relative_light = data.camera_relative_light;
    scene.light_direction = data.light_direction;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices, force) {
        if (!force) {
            if (!(JSServe.can_send_to_julia && JSServe.can_send_to_julia())) {
                return;
            }
        }
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, data.light_direction, scene);
    }
    update_cam(data.camera.value, true);
    camera.update_light_dir(data.light_direction.value);
    data.camera.on(update_cam);
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>{
        const childscene = deserialize_scene(child, screen);
        return childscene;
    });
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
function render_scene(scene, picking = false) {
    const { camera , renderer , px_per_unit  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        delete_three_scene(scene);
        renderer.state.reset();
        renderer.dispose();
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene.value;
    const area = scene.viewport.value;
    if (area) {
        const [x, y, w, h] = area.map((x)=>x * px_per_unit);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            const alpha = scene.backgroundcolor_alpha.value;
            renderer.setClearColor(scene.backgroundcolor.value, alpha);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    let future_id = undefined;
    function inner_throttle(...args) {
        const now = new Date().getTime();
        if (future_id !== undefined) {
            clearTimeout(future_id);
            future_id = undefined;
        }
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        } else {
            future_id = setTimeout(()=>inner_throttle(...args), now - prev + 1);
        }
    }
    return inner_throttle;
}
function get_body_size() {
    const bodyStyle = window.getComputedStyle(document.body);
    const width_padding = parseInt(bodyStyle.paddingLeft, 10) + parseInt(bodyStyle.paddingRight, 10) + parseInt(bodyStyle.marginLeft, 10) + parseInt(bodyStyle.marginRight, 10);
    const height_padding = parseInt(bodyStyle.paddingTop, 10) + parseInt(bodyStyle.paddingBottom, 10) + parseInt(bodyStyle.marginTop, 10) + parseInt(bodyStyle.marginBottom, 10);
    const width = window.innerWidth - width_padding;
    const height = window.innerHeight - height_padding;
    return [
        width,
        height
    ];
}
function get_parent_size(canvas) {
    const rect = canvas.parentElement.getBoundingClientRect();
    return [
        rect.width,
        rect.height
    ];
}
function wglerror(gl, error) {
    switch(error){
        case gl.NO_ERROR:
            return "No error";
        case gl.INVALID_ENUM:
            return "Invalid enum";
        case gl.INVALID_VALUE:
            return "Invalid value";
        case gl.INVALID_OPERATION:
            return "Invalid operation";
        case gl.OUT_OF_MEMORY:
            return "Out of memory";
        case gl.CONTEXT_LOST_WEBGL:
            return "Context lost";
        default:
            return "Unknown error";
    }
}
function handleSource(string, errorLine) {
    const lines = string.split("\n");
    const lines2 = [];
    const from = Math.max(errorLine - 6, 0);
    const to = Math.min(errorLine + 6, lines.length);
    for(let i = from; i < to; i++){
        const line = i + 1;
        lines2.push(`${line === errorLine ? ">" : " "} ${line}: ${lines[i]}`);
    }
    return lines2.join("\n");
}
function getShaderErrors(gl, shader, type) {
    const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
    const errors = gl.getShaderInfoLog(shader).trim();
    if (status && errors === "") return "";
    const errorMatches = /ERROR: 0:(\d+)/.exec(errors);
    if (errorMatches) {
        const errorLine = parseInt(errorMatches[1]);
        return type.toUpperCase() + "\n\n" + errors + "\n\n" + handleSource(gl.getShaderSource(shader), errorLine);
    } else {
        return errors;
    }
}
function on_shader_error(gl, program, glVertexShader, glFragmentShader) {
    const programLog = gl.getProgramInfoLog(program).trim();
    const vertexErrors = getShaderErrors(gl, glVertexShader, "vertex");
    const fragmentErrors = getShaderErrors(gl, glFragmentShader, "fragment");
    const vertexLog = gl.getShaderInfoLog(glVertexShader).trim();
    const fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();
    const err = "THREE.WebGLProgram: Shader Error " + wglerror(gl, gl.getError()) + " - " + "VALIDATE_STATUS " + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + "\n\n" + "Program Info Log:\n" + programLog + "\n" + vertexErrors + "\n" + fragmentErrors + "\n" + "Fragment log:\n" + fragmentLog + "Vertex log:\n" + vertexLog;
    JSServe.Connection.send_warning(err);
}
function add_canvas_events(screen, comm, resize_to) {
    const { canvas , winscale  } = screen;
    function mouse_callback(event) {
        const [x, y] = events2unitless(screen, event);
        comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    }
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        notify_mouse_throttled(event);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    function resize_callback() {
        let width, height;
        if (resize_to == "body") {
            [width, height] = get_body_size();
        } else if (resize_to == "parent") {
            [width, height] = get_parent_size(canvas);
        }
        comm.notify({
            resize: [
                width / winscale,
                height / winscale
            ]
        });
    }
    if (resize_to) {
        const resize_callback_throttled = throttle_function(resize_callback, 100);
        window.addEventListener("resize", (event)=>resize_callback_throttled());
        resize_callback_throttled();
    }
}
function threejs_module(canvas) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.debug.onShaderError = on_shader_error;
    renderer.setClearColor("#ffffff");
    return renderer;
}
function set_render_size(screen, width, height) {
    const { renderer , canvas , scalefactor , winscale , px_per_unit  } = screen;
    const [swidth, sheight] = [
        winscale * width,
        winscale * height
    ];
    const real_pixel_width = Math.ceil(width * px_per_unit);
    const real_pixel_height = Math.ceil(height * px_per_unit);
    renderer._width = width;
    renderer._height = height;
    canvas.width = real_pixel_width;
    canvas.height = real_pixel_height;
    canvas.style.width = swidth + "px";
    canvas.style.height = sheight + "px";
    renderer.setViewport(0, 0, real_pixel_width, real_pixel_height);
    add_picking_target(screen);
    return;
}
function add_picking_target(screen) {
    const { picking_target , canvas  } = screen;
    const [w, h] = [
        canvas.width,
        canvas.height
    ];
    if (picking_target) {
        if (picking_target.width == w && picking_target.height == h) {
            return;
        } else {
            picking_target.dispose();
        }
    }
    screen.picking_target = new mod.WebGLRenderTarget(w, h);
    return;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, texture_atlas_obs, fps, resize_to, px_per_unit, scalefactor) {
    if (!scalefactor) {
        scalefactor = window.devicePixelRatio || 1.0;
    }
    if (!px_per_unit) {
        px_per_unit = scalefactor;
    }
    const renderer = threejs_module(canvas);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (!renderer) {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
    const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
    camera.updateProjectionMatrix();
    const pixel_ratio = window.devicePixelRatio || 1.0;
    const winscale = scalefactor / pixel_ratio;
    const screen = {
        renderer,
        camera,
        fps,
        canvas,
        px_per_unit,
        scalefactor,
        winscale
    };
    add_canvas_events(screen, comm, resize_to);
    set_render_size(screen, width, height);
    const three_scene = deserialize_scene(scenes, screen);
    start_renderloop(three_scene);
    canvas_width.on((w_h)=>{
        set_render_size(screen, ...w_h);
    });
    return renderer;
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, _x, _y, _w, _h) {
    const { renderer , picking_target , px_per_unit  } = scene.screen;
    [_x, _y, _w, _h] = [
        _x,
        _y,
        _w,
        _h
    ].map((x)=>Math.ceil(x * px_per_unit));
    const [x, y, w, h] = [
        _x,
        _y,
        _w,
        _h
    ];
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { renderer  } = scene.screen;
    const [width, height] = [
        renderer._width,
        renderer._height
    ];
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { renderer  } = scene.screen;
    const [width, height] = [
        renderer._width,
        renderer._height
    ];
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return null;
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return null;
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            if (plot_matrix.length <= pindex) {
                continue;
            }
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        const [x, y] = events2unitless(scene.screen, event);
        const [_, picks] = pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (!popup.classList.contains("show")) {
                    popup.classList.add("show");
                }
                popup.style.left = event.pageX + "px";
                popup.style.top = event.pageY + "px";
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    events2unitless,
    on_next_insert,
    register_popup,
    render_scene
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, events2unitless as events2unitless, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { wglerror as wglerror };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
    </div>
  </div>
  <div style="width: 100%; height: 100%" data-jscall-id="3">
    <script src="data:application/javascript;base64,    JSServe.lock_loading(() => {
        return JSServe.fetch_binary('data:application/octet-stream;base64,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AAAAFwAAABgAAABUAAAAFwAAAFQAAABTAAAAGAAAABkAAABVAAAAGAAAAFUAAABUAAAAGQAAABoAAABWAAAAGQAAAFYAAABVAAAAGgAAABsAAABXAAAAGgAAAFcAAABWAAAAGwAAABwAAABYAAAAGwAAAFgAAABXAAAAHAAAAB0AAABZAAAAHAAAAFkAAABYAAAAHQAAAB4AAABaAAAAHQAAAFoAAABZAAAAHgAAAB8AAABbAAAAHgAAAFsAAABaAAAAHwAAACAAAABcAAAAHwAAAFwAAABbAAAAIAAAACEAAABdAAAAIAAAAF0AAABcAAAAIQAAACIAAABeAAAAIQAAAF4AAABdAAAAIgAAACMAAABfAAAAIgAAAF8AAABeAAAAIwAAACQAAABgAAAAIwAAAGAAAABfAAAAJAAAACUAAABhAAAAJAAAAGEAAABgAAAAJQAAACYAAABiAAAAJQAAAGIAAABhAAAAJgAAACcAAABjAAAAJgAAAGMAAABiAAAAJwAAACgAAABkAAAAJwAAAGQAAABjAAAAKAAAACkAAABlAAAAKAAAAGUAAABkAAAAKQAAACoAAABmAAAAKQAAAGYAAABlAAAAKgAAACsAAABnAAAAKgAAAGcAAABmAAAAKwAAACwAAABoAAAAKwAAAGgAAABnAAAALAAAAC0AAABpAAAALAAAAGkAAABoAAAALQAAAC4AAABqAAAALQAAAGoAAABpAAAALgAAAC8AAABrAAAALgAAAGsAAABqAAAALwAAADAAAABsAAAALwAAAGwAAABrAAAAMAAAADEAAABtAAAAMAAAAG0AAABsAAAAMQAAADIAAABuAAAAMQAAAG4AAABtAAAAMgAAADMAAABvAAAAMgAAAG8AAABuAAAAMwAAADQAAABwAAAAMwAAAHAAAABvAAAANAAAADUAAABxAAAANAAAAHEAAABwAAAANQAAADYAAAByAAAANQAAAHIAAABxAAAANgAAADcAAABzAAAANgAAAHMAAAByAAAANwAAADgAAAB0AAAANwAAAHQAAABzAAAAOAAAADkAAAB1AAAAOAAAAHUAAAB0AAAAOQAAADoAAAB2AAAAOQAAAHYAAAB1AAAAOgAAADsAAAB3AAAAOgAAAHcAAAB2AAAAPAAAAD0AAAB5AAAAPAAAAHkAAAB4AAAAPQAAAD4AAAB6AAAAPQAAAHoAAAB5AAAAPgAAAD8AAAB7AAAAPgAAAHsAAAB6AAAAPwAAAEAAAAB8AAAAPwAAAHwAAAB7AAAAQAAAAEEAAAB9AAAAQAAAAH0AAAB8AAAAQQAAAEIAAAB+AAAAQQAAAH4AAAB9AAAAQgAAAEMAAAB/AAAAQgAAAH8AAAB+AAAAQwAAAEQAAACAAAAAQwAAAIAAAAB/AAAARAAAAEUAAACBAAAARAAAAIEAAACAAAAARQAAAEYAAACCAAAARQAAAIIAAACBAAAARgAAAEcAAACDAAAARgAAAIMAAACCAAAARwAAAEgAAACEAAAARwAAAIQAAACDAAAASAAAAEkAAACFAAAASAAAAIUAAACEAAAASQAAAEoAAACGAAAASQAAAIYAAACFAAAASgAAAEsAAACHAAAASgAAAIcAAACGAAAASwAAAEwAAACIAAAASwAAAIgAAACHAAAATAAAAE0AAACJAAAATAAAAIkAAACIAAAATQAAAE4AAACKAAAATQAAAIoAAACJAAAATgAAAE8AAACLAAAATgAAAIsAAACKAAAATwAAAFAAAACMAAAATwAAAIwAAACLAAAAUAAAAFEAAACNAAAAUAAAAI0AAACMAAAAUQAAAFIAAACOAAAAUQAAAI4AAACNAAAAUgAAAFMAAACPAAAAUgAAAI8AAACOAAAAUwAAAFQAAACQAAAAUwAAAJAAAACPAAAAVAAAAFUAAACRAAAAVAAAAJEAAACQAAAAVQAAAFYAAACSAAAAVQAAAJIAAACRAAAAVgAAAFcAAACTAAAAVgAAAJMAAACSAAAAVwAAAFgAAACUAAAAVwAAAJQAAACTAAAAWAAAAFkAAACVAAAAWAAAAJUAAACUAAAAWQAAAFoAAACWAAAAWQAAAJYAAACVAAAAWgAAAFsAAACXAAAAWgAAAJcAAACWAAAAWwAAAFwAAACYAAAAWwAAAJgAAACXAAAAXAAAAF0AAACZAAAAXAAAAJkAAACYAAAAXQAAAF4AAACaAAAAXQAAAJoAAACZAAAAXgAAAF8AAACbAAAAXgAAAJsAAACaAAAAXwAAAGAAAACcAAAAXwAAAJwAAACbAAAAYAAAAGEAAACdAAAAYAAAAJ0AAACcAAAAYQAAAGIAAACeAAAAYQAAAJ4AAACdAAAAYgAAAGMAAACfAAAAYgAAAJ8AAACeAAAAYwAAAGQAAACgAAAAYwAAAKAAAACfAAAAZAAAAGUAAAChAAAAZAAAAKEAAACgAAAAZQAAAGYAAACiAAAAZQAAAKIAAAChAAAAZgAAAGcAAACjAAAAZgAAAKMAAACiAAAAZwAAAGgAAACkAAAAZwAAAKQAAACjAAAAaAAAAGkAAAClAAAAaAAAAKUAAACkAAAAaQAAAGoAAACmAAAAaQAAAKYAAAClAAAAagAAAGsAAACnAAAAagAAAKcAAACmAAAAawAAAGwAAACoAAAAawAAAKgAAACnAAAAbAAAAG0AAACpAAAAbAAAAKkAAACoAAAAbQAAAG4AAACqAAAAbQAAAKoAAACpAAAAbgAAAG8AAACrAAAAbgAAAKsAAACqAAAAbwAAAHAAAACsAAAAbwAAAKwAAACrAAAAcAAAAHEAAACtAAAAcAAAAK0AAACsAAAAcQAAAHIAAACuAAAAcQAAAK4AAACtAAAAcgAAAHMAAACvAAAAcgAAAK8AAACuAAAAcwAAAHQAAACwAAAAcwAAALAAAACvAAAAdAAAAHUAAACxAAAAdAAAALEAAACwAAAAdQAAAHYAAACyAAAAdQAAALIAAACxAAAAdgAAAHcAAACzAAAAdgAAALMAAACyAAAAeAAAAHkAAAC1AAAAeAAAALUAAAC0AAAAeQAAAHoAAAC2AAAAeQAAALYAAAC1AAAAegAAAHsAAAC3AAAAegAAALcAAAC2AAAAewAAAHwAAAC4AAAAewAAALgAAAC3AAAAfAAAAH0AAAC5AAAAfAAAALkAAAC4AAAAfQAAAH4AAAC6AAAAfQAAALoAAAC5AAAAfgAAAH8AAAC7AAAAfgAAALsAAAC6AAAAfwAAAIAAAAC8AAAAfwAAALwAAAC7AAAAgAAAAIEAAAC9AAAAgAAAAL0AAAC8AAAAgQAAAIIAAAC+AAAAgQAAAL4AAAC9AAAAggAAAIMAAAC/AAAAggAAAL8AAAC+AAAAgwAAAIQAAADAAAAAgwAAAMAAAAC/AAAAhAAAAIUAAADBAAAAhAAAAMEAAADAAAAAhQAAAIYAAADCAAAAhQAAAMIAAADBAAAAhgAAAIcAAADDAAAAhgAAAMMAAADCAAAAhwAAAIgAAADEAAAAhwAAAMQAAADDAAAAiAAAAIkAAADFAAAAiAAAAMUAAADEAAAAiQAAAIoAAADGAAAAiQAAAMYAAADFAAAAigAAAIsAAADHAAAAigAAAMcAAADGAAAAiwAAAIwAAADIAAAAiwAAAMgAAADHAAAAjAAAAI0AAADJAAAAjAAAAMkAAADIAAAAjQAAAI4AAADKAAAAjQAAAMoAAADJAAAAjgAAAI8AAADLAAAAjgAAAMsAAADKAAAAjwAAAJAAAADMAAAAjwAAAMwAAADLAAAAkAAAAJEAAADNAAAAkAAAAM0AAADMAAAAkQAAAJIAAADOAAAAkQAAAM4AAADNAAAAkgAAAJMAAADPAAAAkgAAAM8AAADOAAAAkwAAAJQAAADQAAAAkwAAANAAAADPAAAAlAAAAJUAAADRAAAAlAAAANEAAADQAAAAlQAAAJYAAADSAAAAlQAAANIAAADRAAAAlgAAAJcAAADTAAAAlgAAANMAAADSAAAAlwAAAJgAAADUAAAAlwAAANQAAADTAAAAmAAAAJkAAADVAAAAmAAAANUAAADUAAAAmQAAAJoAAADWAAAAmQAAANYAAADVAAAAmgAAAJsAAADXAAAAmgAAANcAAADWAAAAmwAAAJwAAADYAAAAmwAAANgAAADXAAAAnAAAAJ0AAADZAAAAnAAAANkAAADYAAAAnQAAAJ4AAADaAAAAnQAAANoAAADZAAAAngAAAJ8AAADbAAAAngAAANsAAADaAAAAnwAAAKAAAADcAAAAnwAAANwAAADbAAAAoAAAAKEAAADdAAAAoAAAAN0AAADcAAAAoQAAAKIAAADeAAAAoQAAAN4AAADdAAAAogAAAKMAAADfAAAAogAAAN8AAADeAAAAowAAAKQAAADgAAAAowAAAOAAAADfAAAApAAAAKUAAADhAAAApAAAAOEAAADgAAAApQAAAKYAAADiAAAApQAAAOIAAADhAAAApgAAAKcAAADjAAAApgAAAOMAAADiAAAApwAAAKgAAADkAAAApwAAAOQAAADjAAAAqAAAAKkAAADlAAAAqAAAAOUAAADkAAAAqQAAAKoAAADmAAAAqQAAAOYAAADlAAAAqgAAAKsAAADnAAAAqgAAAOcAAADmAAAAqwAAAKwAAADoAAAAqwAAAOgAAADnAAAArAAAAK0AAADpAAAArAAAAOkAAADoAAAArQAAAK4AAADqAAAArQAAAOoAAADpAAAArgAAAK8AAADrAAAArgAAAOsAAADq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AQAA/AAAAP0AAAA5AQAA/AAAADkBAAA4AQAA/QAAAP4AAAA6AQAA/QAAADoBAAA5AQAA/gAAAP8AAAA7AQAA/gAAADsBAAA6AQAA/wAAAAABAAA8AQAA/wAAADwBAAA7AQAAAAEAAAEBAAA9AQAAAAEAAD0BAAA8AQAAAQEAAAIBAAA+AQAAAQEAAD4BAAA9AQAAAgEAAAMBAAA/AQAAAgEAAD8BAAA+AQAAAwEAAAQBAABAAQAAAwEAAEABAAA/AQAABAEAAAUBAABBAQAABAEAAEEBAABAAQAABQEAAAYBAABCAQAABQEAAEIBAABBAQAABgEAAAcBAABDAQAABgEAAEMBAABCAQAABwEAAAgBAABEAQAABwEAAEQBAABDAQAACAEAAAkBAABFAQAACAEAAEUBAABEAQAACQEAAAoBAABGAQAACQEAAEYBAABFAQAACgEAAAsBAABHAQAACgEAAEcBAABGAQAACwEAAAwBAABIAQAACwEAAEgBAABHAQAADAEAAA0BAABJAQAADAEAAEkBAABIAQAADQEAAA4BAABKAQAADQEAAEoBAABJAQAADgEAAA8BAABLAQAADgEAAEsBAABKAQAADwEAABABAABMAQAADwEAAEwBAABLAQAAEAEAABEBAABNAQAAEAEAAE0BAABMAQAAEQEAABIBAABOAQAAEQEAAE4BAABNAQAAEgEAABMBAABPAQAAEgEAAE8BAABOAQAAEwEAABQBAABQAQAAEwEAAFABAABPAQAAFAEAABUBAABRAQAAFAEAAFEBAABQAQAAFQEAABYBAABSAQAAFQEAAFIBAABRAQAAFgEAABcBAABTAQAAFgEAAFMBAABSAQAAFwEAABgBAABUAQAAFwEAAFQBAABTAQAAGAEAABkBAABVAQAAGAEAAFUBAABUAQAAGQEAABoBAABWAQAAGQEAAFYBAABVAQAAGgEAABsBAABXAQAAGgEAAFcBAABWAQAAGwEAABwBAABYAQAAGwEAAFgBAABXAQAAHAEAAB0BAABZAQAAHAEAAFkBAABYAQAAHQEAAB4BAABaAQAAHQEAAFoBAABZAQAAHgEAAB8BAABbAQAAHgEAAFsBAABaAQAAHwEAACABAABcAQAAHwEAAFwBAABbAQAAIAEAACEBAABdAQAAIAEAAF0BAABcAQAAIQEAACIBAABeAQAAIQEAAF4BAABdAQAAIgEAACMBAABfAQAAIgEAAF8BAABeAQAAIwEAACQBAABgAQAAIwEAAGABAABfAQAAJAEAACUBAABhAQAAJAEAAGEBAABgAQAAJQEAACYBAABiAQAAJQEAAGIBAABhAQAAJgEAACcBAABjAQAAJgEAAGMBAABiAQAAJwEAACgBAABkAQAAJwEAAGQBAABjAQAAKAEAACkBAABlAQAAKAEAAGUBAABkAQAAKQEAACoBAABmAQAAKQEAAGYBAABlAQAAKgEAACsBAABnAQAAKgEAAGcBAABmAQAALAEAAC0BAABpAQAALAEAAGkBAABoAQAALQEAAC4BAABqAQAALQEAAGoBAABpAQAALgEAAC8BAABrAQAALgEAAGsBAABqAQAALwEAADABAABsAQAALwEAAGwBAABrAQAAMAEAADEBAABtAQAAMAEAAG0BAABsAQAAMQEAADIBAABuAQAAMQEAAG4BAABtAQAAMgEAADMBAABvAQAAMgEAAG8BAABuAQAAMwEAADQBAABwAQAAMwEAAHABAABvAQAANAEAADUBAABxAQAANAEAAHEBAABwAQAANQEAADYBAAByAQAANQEAAHIBAABxAQAANgEAADcBAABzAQAANgEAAHMBAAByAQAANwEAADgBAAB0AQAANwEAAHQBAABzAQAAOAEAADkBAAB1AQAAOAEAAHUBAAB0AQAAOQEAADoBAAB2AQAAOQEAAHYBAAB1AQAAOgEAADsBAAB3AQAAOgEAAHcBAAB2AQAAOwEAADwBAAB4AQAAOwEAAHgBAAB3AQAAPAEAAD0BAAB5AQAAPAEAAHkBAAB4AQAAPQEAAD4BAAB6AQAAPQEAAHoBAAB5AQAAPgEAAD8BAAB7AQAAPgEAAHsBAAB6AQAAPwEAAEABAAB8AQAAPwEAAHwBAAB7AQAAQAEAAEEBAAB9AQAAQAEAAH0BAAB8AQAAQQEAAEIBAAB+AQAAQQEAAH4BAAB9AQAAQgEAAEMBAAB/AQAAQgEAAH8BAAB+AQAAQwEAAEQBAACAAQAAQwEAAIABAAB/AQAARAEAAEUBAACBAQAARAEAAIEBAACAAQAARQEAAEYBAACCAQAARQEAAIIBAACBAQAARgEAAEcBAACDAQAARgEAAIMBAACCAQAARwEAAEgBAACEAQAARwEAAIQBAACDAQAASAEAAEkBAACFAQAASAEAAIUBAACEAQAASQEAAEoBAACGAQAASQEAAIYBAACFAQAASgEAAEsBAACHAQAASgEAAIcBAACGAQAASwEAAEwBAACIAQAASwEAAIgBAACHAQAATAEAAE0BAACJAQAATAEAAIkBAACIAQAATQEAAE4BAACKAQAATQEAAIoBAACJAQAATgEAAE8BAACLAQAATgEAAIsBAACKAQAATwEAAFABAACMAQAATwEAAIwBAACLAQAAUAEAAFEBAACNAQAAUAEAAI0BAACMAQAAUQEAAFIBAACOAQAAUQEAAI4BAACNAQAAUgEAAFMBAACPAQAAUgEAAI8BAACOAQAAUwEAAFQBAACQAQAAUwEAAJABAACPAQAAVAEAAFUBAACRAQAAVAEAAJEBAACQAQAAVQEAAFYBAACSAQAAVQEAAJIBAACRAQAAVgEAAFcBAACTAQAAVgEAAJMBAACSAQAAVwEAAFgBAACUAQAAVwEAAJQBAACTAQAAWAEAAFkBAACVAQAAWAEAAJUBAACUAQAAWQEAAFoBAACWAQAAWQEAAJYBAACVAQAAWgEAAFsBAACXAQAAWgEAAJcBAACWAQAAWwEAAFwBAACYAQAAWwEAAJgBAACXAQAAXAEAAF0BAACZAQAAXAEAAJkBAACYAQAAXQEAAF4BAACaAQAAXQEAAJoBAACZAQAAXgEAAF8BAACbAQAAXgEAAJsBAACaAQAAXwEAAGABAACcAQAAXwEAAJwBAACbAQAAYAEAAGEBAACdAQAAYAEAAJ0BAACcAQAAYQEAAGIBAACeAQAAYQEAAJ4BAACdAQAAYgEAAGMBAACfAQAAYgEAAJ8BAACeAQAAYwEAAGQBAACgAQAAYwEAAKABAACfAQAAZAEAAGUBAAChAQAAZAEAAKEBAACgAQAAZQEAAGYBAACiAQAAZQEAAKIBAAChAQAAZgEAAGcBAACjAQAAZgEAAKMBAACiAQAAaAEAAGkBAAClAQAAaAEAAKUBAACkAQAAaQEAAGoBAACmAQAAaQEAAKYBAAClAQAAagEAAGsBAACnAQAAagEAAKcBAACmAQAAawEAAGwBAACoAQAAawEAAKgBAACnAQAAbAEAAG0BAACpAQAAbAEAAKkBAACoAQAAbQEAAG4BAACqAQAAbQEAAKoBAACpAQAAbgEAAG8BAACrAQAAbgEAAKsBAACqAQAAbwEAAHABAACsAQAAbwEAAKwBAACrAQAAcAEAAHEBAACtAQAAcAEAAK0BAACsAQAAcQEAAHIBAACuAQAAcQEAAK4BAACtAQAAcgEAAHMBAACvAQAAcgEAAK8BAACuAQAAcwEAAHQBAACwAQAAcwEAALABAACvAQAAdAEAAHUBAACxAQAAdAEAALEBAACwAQAAdQEAAHYBAACyAQAAdQEAALIBAACxAQAAdgEAAHcBAACzAQAAdgEAALMBAACyAQAAdwEAAHgBAAC0AQAAdwEAALQBAACzAQAAeAEAAHkBAAC1AQAAeAEAALUBAAC0AQAAeQEAAHoBAAC2AQAAeQEAALYBAAC1AQAAegEAAHsBAAC3AQAAegEAALcBAAC2AQAAewEAAHwBAAC4AQAAewEAALgBAAC3AQAAfAEAAH0BAAC5AQAAfAEAALkBAAC4AQAAfQEAAH4BAAC6AQAAfQEAALoBAAC5AQAAfgEAAH8BAAC7AQAAfgEAALsBAAC6AQAAfwEAAIABAAC8AQAAfwEAALwBAAC7AQAAgAEAAIEBAAC9AQAAgAEAAL0BAAC8AQAAgQEAAIIBAAC+AQAAgQEAAL4BAAC9AQAAggEAAIMBAAC/AQAAggEAAL8BAAC+AQAAgwEAAIQBAADAAQAAgwEAAMABAAC/AQAAhAEAAIUBAADBAQAAhAEAAMEBAADAAQAAhQEAAIYBAADCAQAAhQEAAMIBAADBAQAAhgEAAIcBAADDAQAAhgEAAMMBAADCAQAAhwEAAIgBAADEAQAAhwEAAMQBAADDAQAAiAEAAIkBAADFAQAAiAEAAMUBAADEAQAAiQEAAIoBAADGAQAAiQEAAMYBAADFAQAAigEAAIsBAADHAQAAigEAAMcBAADGAQAAiwEAAIwBAADIAQAAiwEAAMgBAADHAQAAjAEAAI0BAADJAQAAjAEAAMkBAADIAQAAjQEAAI4BAADKAQAAjQEAAMoBAADJAQAAjgEAAI8BAADLAQAAjgEAAMsBAADKAQAAjwEAAJABAADMAQAAjwEAAMwBAADLAQAAkAEAAJEBAADNAQAAkAEAAM0BAADMAQAAkQEAAJIBAADOAQAAkQEAAM4BAADNAQAAkgEAAJMBAADPAQAAkgEAAM8BAADOAQAAkwEAAJQBAADQAQAAkwEAANABAADPAQAAlAEAAJUBAADRAQAAlAEAANEBAADQAQAAlQEAAJYBAADSAQAAlQEAANIBAADRAQAAlgEAAJcBAADTAQAAlgEAANMBAADSAQAAlwEAAJgBAADUAQAAlwEAANQBAADTAQAAmAEAAJkBAADVAQAAmAEAANUBAADUAQAAmQEAAJoBAADWAQAAmQEAANYBAADVAQAAmgEAAJsBAADXAQAAmgEAANcBAADWAQAAmwEAAJwBAADYAQAAmwEAANgBAADXAQAAnAEAAJ0BAADZAQAAnAEAANkBAADYAQAAnQEAAJ4BAADaAQAAnQEAANoBAADZAQAAngEAAJ8BAADbAQAAngEAANsBAADaAQAAnwEAAKABAADcAQAAnwEAANwBAADbAQAAoAEAAKEBAADdAQAAoAEAAN0BAADcAQAAoQEAAKIBAADeAQAAoQEAAN4BAADdAQAAogEAAKMBAADfAQAAogEAAN8BAADeAQAApAEAAKUBAADhAQAApAEAAOEBAADgAQAApQEAAKYBAADiAQAApQEAAOIBAADhAQAApgEAAKcBAADjAQAApgEAAOMBAADiAQAApwEAAKgBAADkAQAApwEAAOQBAADjAQAAqAEAAKkBAADlAQAAqAEAAOUBAADkAQAAqQEAAKoBAADmAQAAqQEAAOYBAADlAQAAqgEAAKsBAADnAQAAqgEAAOcBAADmAQAAqwEAAKwBAADoAQAAqwEAAOgBAADnAQAArAEAAK0BAADpAQAArAEAAOkBAADoAQAArQEAAK4BAADqAQAArQEAAOoBAADpAQAArgEAAK8BAADrAQAArgEAAOsBAADqAQAArwEAALABAADsAQAArwEAAOwBAADrAQAAsAEAALEBAADtAQAAsAEAAO0BAADsAQAAsQEAALIBAADuAQAAsQEAAO4BAADtAQAAsgEAALMBAADvAQAAsgEAAO8BAADuAQAAswEAALQBAADwAQAAswEAAPABAADvAQAAtAEAALUBAADxAQAAtAEAAPEBAADwAQAAtQEAALYBAADyAQAAtQEAAPIBAADxAQAAtgEAALcBAADzAQAAtgEAAPMBAADyAQAAtwEAALgBAAD0AQAAtwEAAPQBAADzAQAAuAEAALkBAAD1AQAAuAEAAPUBAAD0AQAAuQEAALoBAAD2AQAAuQEAAPYBAAD1AQAAugEAALsBAAD3AQAAugEAAPcBAAD2AQAAuwEAALwBAAD4AQAAuwEAAPgBAAD3AQAAvAEAAL0BAAD5AQAAvAEAAPkBAAD4AQAAvQEAAL4BAAD6AQAAvQEAAPoBAAD5AQAAvgEAAL8BAAD7AQAAvgEAAPsBAAD6AQAAvwEAAMABAAD8AQAAvwEAAPwBAAD7AQAAwAEAAMEBAAD9AQAAwAEAAP0BAAD8AQAAwQEAAMIBAAD+AQAAwQEAAP4BAAD9AQAAwgEAAMMBAAD/AQAAwgEAAP8BAAD+AQAAwwEAAMQBAAAAAgAAwwEAAAACAAD/AQAAxAEAAMUBAAABAgAAxAEAAAECAAAAAgAAxQEAAMYBAAACAgAAxQEAAAICAAABAgAAxgEAAMcBAAADAgAAxgEAAAMCAAACAgAAxwEAAMgBAAAEAgAAxwEAAAQCAAADAgAAyAEAAMkBAAAFAgAAyAEAAAUCAAAEAgAAyQEAAMoBAAAGAgAAyQEAAAYCAAAFAgAAygEAAMsBAAAHAgAAygEAAAcCAAAGAgAAywEAAMwBAAAIAgAAywEAAAgCAAAHAgAAzAEAAM0BAAAJAgAAzAEAAAkCAAAIAgAAzQEAAM4BAAAKAgAAzQEAAAoCAAAJAgAAzgEAAM8BAAALAgAAzgEAAAsCAAAKAgAAzwEAANABAAAMAgAAzwEAAAwCAAALAgAA0AEAANEBAAANAgAA0AEAAA0CAAAMAgAA0QEAANIBAAAOAgAA0QEAAA4CAAANAgAA0gEAANMBAAAPAgAA0gEAAA8CAAAOAgAA0wEAANQBAAAQAgAA0wEAABACAAAPAgAA1AEAANUBAAARAgAA1AEAABECAAAQAgAA1QEAANYBAAASAgAA1QEAABICAAARAgAA1gEAANcBAAATAgAA1gEAABMCAAASAgAA1wEAANgBAAAUAgAA1wEAABQCAAATAgAA2AEAANkBAAAVAgAA2AEAABUCAAAUAgAA2QEAANoBAAAWAgAA2QEAABYCAAAVAgAA2gEAANsBAAAXAgAA2gEAABcCAAAWAgAA2wEAANwBAAAYAgAA2wEAABgCAAAXAgAA3AEAAN0BAAAZAgAA3AEAABkCAAAYAgAA3QEAAN4BAAAaAgAA3QEAABoCAAAZAgAA3gEAAN8BAAAbAgAA3gEAABsCAAAaAgAA4AEAAOEBAAAdAgAA4AEAAB0CAAAcAgAA4QEAAOIBAAAeAgAA4QEAAB4CAAAdAgAA4gEAAOMBAAAfAgAA4gEAAB8CAAAeAgAA4wEAAOQBAAAgAgAA4wEAACACAAAfAgAA5AEAAOUBAAAhAgAA5AEAACECAAAgAgAA5QEAAOYBAAAiAgAA5QEAACICAAAhAgAA5gEAAOcBAAAjAgAA5gEAACMCAAAiAgAA5wEAAOgBAAAkAgAA5wEAACQCAAAjAgAA6AEAAOkBAAAlAgAA6AEAACUCAAAkAgAA6QEAAOoBAAAmAgAA6QEAACYCAAAlAgAA6gEAAOsBAAAnAgAA6gEAACcCAAAmAgAA6wEAAOwBAAAoAgAA6wEAACgCAAAnAgAA7AEAAO0BAAApAgAA7AEAACkCAAAoAgAA7QEAAO4BAAAqAgAA7QEAACoCAAApAgAA7gEAAO8BAAArAgAA7gEAACsCAAAqAgAA7wEAAPABAAAsAgAA7wEAACwCAAArAgAA8AEAAPEBAAAtAgAA8AEAAC0CAAAsAgAA8QEAAPIBAAAuAgAA8QEAAC4CAAAtAgAA8gEAAPMBAAAvAgAA8gEAAC8CAAAuAgAA8wEAAPQBAAAwAgAA8wEAADACAAAvAgAA9AEAAPUBAAAxAgAA9AEAADECAAAwAgAA9QEAAPYBAAAyAgAA9QEAADICAAAxAgAA9gEAAPcBAAAzAgAA9gEAADMCAAAyAgAA9wEAAPgBAAA0AgAA9wEAADQCAAAzAgAA+AEAAPkBAAA1AgAA+AEAADUCAAA0AgAA+QEAAPoBAAA2AgAA+QEAADYCAAA1AgAA+gEAAPsBAAA3AgAA+gEAADcCAAA2AgAA+wEAAPwBAAA4AgAA+wEAADgCAAA3AgAA/AEAAP0BAAA5AgAA/AEAADkCAAA4AgAA/QEAAP4BAAA6AgAA/QEAADoCAAA5AgAA/gEAAP8BAAA7AgAA/gEAADsCAAA6AgAA/wEAAAACAAA8AgAA/wEAADwCAAA7AgAAAAIAAAECAAA9AgAAAAIAAD0CAAA8AgAAAQIAAAICAAA+AgAAAQIAAD4CAAA9AgAAAgIAAAMCAAA/AgAAAgIAAD8CAAA+AgAAAwIAAAQCAABAAgAAAwIAAEACAAA/AgAABAIAAAUCAABBAgAABAIAAEECAABAAgAABQIAAAYCAABCAgAABQIAAEICAABBAgAABgIAAAcCAABDAgAABgIAAEMCAABCAgAABwIAAAgCAABEAgAABwIAAEQCAABDAgAACAIAAAkCAABFAgAACAIAAEUCAABEAgAACQIAAAoCAABGAgAACQIAAEYCAABFAgAACgIAAAsCAABHAgAACgIAAEcCAABGAgAACwIAAAwCAABIAgAACwIAAEgCAABHAgAADAIAAA0CAABJAgAADAIAAEkCAABIAgAADQIAAA4CAABKAgAADQIAAEoCAABJAgAADgIAAA8CAABLAgAADgIAAEsCAABKAgAADwIAABACAABMAgAADwIAAEwCAABLAgAAEAIAABECAABNAgAAEAIAAE0CAABMAgAAEQIAABICAABOAgAAEQIAAE4CAABNAgAAEgIAABMCAABPAgAAEgIAAE8CAABOAgAAEwIAABQCAABQAgAAEwIAAFACAABPAgAAFAIAABUCAABRAgAAFAIAAFECAABQAgAAFQIAABYCAABSAgAAFQIAAFICAABRAgAAFgIAABcCAABTAgAAFgIAAFMCAABSAgAAFwIAABgCAABUAgAAFwIAAFQCAABTAgAAGAIAABkCAABVAgAAGAIAAFUCAABUAgAAGQIAABoCAABWAgAAGQIAAFYCAABVAgAAGgIAABsCAABXAgAAGgIAAFcCAABWAgAAHAIAAB0CAABZAgAAHAIAAFkCAABYAgAAHQIAAB4CAABaAgAAHQIAAFoCAABZAgAAHgIAAB8CAABbAgAAHgIAAFsCAABaAgAAHwIAACACAABcAgAAHwIAAFwCAABbAgAAIAIAACECAABdAgAAIAIAAF0CAABcAgAAIQIAACICAABeAgAAIQIAAF4CAABdAgAAIgIAACMCAABfAgAAIgIAAF8CAABeAgAAIwIAACQCAABgAgAAIwIAAGACAABfAgAAJAIAACUCAABhAgAAJAIAAGECAABgAgAAJQIAACYCAABiAgAAJQIAAGICAABhAgAAJgIAACcCAABjAgAAJgIAAGMCAABiAgAAJwIAACgCAABkAgAAJwIAAGQCAABjAgAAKAIAACkCAABlAgAAKAIAAGUCAABkAgAAKQIAACoCAABmAgAAKQIAAGYCAABlAgAAKgIAACsCAABnAgAAKgIAAGcCAABmAgAAKwIAACwCAABoAgAAKwIAAGgCAABnAgAALAIAAC0CAABpAgAALAIAAGkCAABoAgAALQIAAC4CAABqAgAALQIAAGoCAABpAgAALgIAAC8CAABrAgAALgIAAGsCAABqAgAALwIAADACAABsAgAALwIAAGwCAABrAgAAMAIAADECAABtAgAAMAIAAG0CAABsAgAAMQIAADICAABuAgAAMQIAAG4CAABtAgAAMgIAADMCAABvAgAAMgIAAG8CAABuAgAAMwIAADQCAABwAgAAMwIAAHACAABvAgAANAIAADUCAABxAgAANAIAAHECAABwAgAANQIAADYCAAByAgAANQIAAHICAABxAgAANgIAADcCAABzAgAANgIAAHMCAAByAgAANwIAADgCAAB0AgAANwIAAHQCAABzAgAAOAIAADkCAAB1AgAAOAIAAHUCAAB0AgAAOQIAADoCAAB2AgAAOQIAAHYCAAB1AgAAOgIAADsCAAB3AgAAOgIAAHcCAAB2AgAAOwIAADwCAAB4AgAAOwIAAHgCAAB3AgAAPAIAAD0CAAB5AgAAPAIAAHkCAAB4AgAAPQIAAD4CAAB6AgAAPQIAAHoCAAB5AgAAPgIAAD8CAAB7AgAAPgIAAHsCAAB6AgAAPwIAAEACAAB8AgAAPwIAAHwCAAB7AgAAQAIAAEECAAB9AgAAQAIAAH0CAAB8AgAAQQIAAEICAAB+AgAAQQIAAH4CAAB9AgAAQgIAAEMCAAB/AgAAQgIAAH8CAAB+AgAAQwIAAEQCAACAAgAAQwIAAIACAAB/AgAARAIAAEUCAACBAgAARAIAAIECAACAAgAARQIAAEYCAACCAgAARQIAAIICAACBAgAARgIAAEcCAACDAgAARgIAAIMCAACCAgAARwIAAEgCAACEAgAARwIAAIQCAACDAgAASAIAAEkCAACFAgAASAIAAIUCAACEAgAASQIAAEoCAACGAgAASQIAAIYCAACFAgAASgIAAEsCAACHAgAASgIAAIcCAACGAgAASwIAAEwCAACIAgAASwIAAIgCAACHAgAATAIAAE0CAACJAgAATAIAAIkCAACIAgAATQIAAE4CAACKAgAATQIAAIoCAACJAgAATgIAAE8CAACLAgAATgIAAIsCAACKAgAATwIAAFACAACMAgAATwIAAIwCAACLAgAAUAIAAFECAACNAgAAUAIAAI0CAACMAgAAUQIAAFICAACOAgAAUQIAAI4CAACNAgAAUgIAAFMCAACPAgAAUgIAAI8CAACOAgAAUwIAAFQCAACQAgAAUwIAAJACAACPAgAAVAIAAFUCAACRAgAAVAIAAJECAACQAgAAVQIAAFYCAACSAgAAVQIAAJICAACRAgAAVgIAAFcCAACTAgAAVgIAAJMCAACSAgAAWAIAAFkCAACVAgAAWAIAAJUCAACUAgAAWQIAAFoCAACWAgAAWQIAAJYCAACVAgAAWgIAAFsCAACXAgAAWgIAAJcCAACWAgAAWwIAAFwCAACYAgAAWwIAAJgCAACXAgAAXAIAAF0CAACZAgAAXAIAAJkCAACYAgAAXQIAAF4CAACaAgAAXQIAAJoCAACZAgAAXgIAAF8CAACbAgAAXgIAAJsCAACaAgAAXwIAAGACAACcAgAAXwIAAJwCAACbAgAAYAIAAGECAACdAgAAYAIAAJ0CAACcAgAAYQIAAGICAACeAgAAYQIAAJ4CAACdAgAAYgIAAGMCAACfAgAAYgIAAJ8CAACeAgAAYwIAAGQCAACgAgAAYwIAAKACAACfAgAAZAIAAGUCAAChAgAAZAIAAKECAACgAgAAZQIAAGYCAACiAgAAZQIAAKICAAChAgAAZgIAAGcCAACjAgAAZgIAAKMCAACiAgAAZwIAAGgCAACkAgAAZwIAAKQCAACjAgAAaAIAAGkCAAClAgAAaAIAAKUCAACkAgAAaQIAAGoCAACmAgAAaQIAAKYCAAClAgAAagIAAGsCAACnAgAAagIAAKcCAACmAgAAawIAAGwCAACoAgAAawIAAKgCAACnAgAAbAIAAG0CAACpAgAAbAIAAKkCAACoAgAAbQIAAG4CAACqAgAAbQIAAKoCAACpAgAAbgIAAG8CAACrAgAAbgIAAKsCAACqAgAAbwIAAHACAACsAgAAbwIAAKwCAACrAgAAcAIAAHECAACtAgAAcAIAAK0CAACsAgAAcQIAAHICAACuAgAAcQIAAK4CAACtAgAAcgIAAHMCAACvAgAAcgIAAK8CAACuAgAAcwIAAHQCAACwAgAAcwIAALACAACvAgAAdAIAAHUCAACxAgAAdAIAALECAACwAgAAdQIAAHYCAACyAgAAdQIAALICAACxAgAAdgIAAHcCAACzAgAAdgIAALMCAACyAgAAdwIAAHgCAAC0AgAAdwIAALQCAACzAgAAeAIAAHkCAAC1AgAAeAIAALUCAAC0AgAAeQIAAHoCAAC2AgAAeQIAALYCAAC1AgAAegIAAHsCAAC3AgAAegIAALcCAAC2AgAAewIAAHwCAAC4AgAAewIAALgCAAC3AgAAfAIAAH0CAAC5AgAAfAIAALkCAAC4AgAAfQIAAH4CAAC6AgAAfQIAALoCAAC5AgAAfgIAAH8CAAC7AgAAfgIAALsCAAC6AgAAfwIAAIACAAC8AgAAfwIAALwCAAC7AgAAgAIAAIECAAC9AgAAgAIAAL0CAAC8AgAAgQIAAIICAAC+AgAAgQIAAL4CAAC9AgAAggIAAIMCAAC/AgAAggIAAL8CAAC+AgAAgwIAAIQCAADAAgAAgwIAAMACAAC/AgAAhAIAAIUCAADBAgAAhAIAAMECAADAAgAAhQIAAIYCAADCAgAAhQIAAMICAADBAgAAhgIAAIcCAADDAgAAhgIAAMMCAADCAgAAhwIAAIgCAADEAgAAhwIAAMQCAADDAgAAiAIAAIkCAADFAgAAiAIAAMUCAADEAgAAiQIAAIoCAADGAgAAiQIAAMYCAADFAgAAigIAAIsCAADHAgAAigIAAMcCAADGAgAAiwIAAIwCAADIAgAAiwIAAMgCAADHAgAAjAIAAI0CAADJAgAAjAIAAMkCAADIAgAAjQIAAI4CAADKAgAAjQIAAMoCAADJAgAAjgIAAI8CAADLAgAAjgIAAMsCAADKAgAAjwIAAJACAADMAgAAjwIAAMwCAADLAgAAkAIAAJECAADNAgAAkAIAAM0CAADMAgAAkQIAAJICAADOAgAAkQIAAM4CAADNAgAAkgIAAJMCAADPAgAAkgIAAM8CAADOAgAAlAIAAJUCAADRAgAAlAIAANECAADQAgAAlQIAAJYCAADSAgAAlQIAANICAADRAgAAlgIAAJcCAADTAgAAlgIAANMCAADSAgAAlwIAAJgCAADUAgAAlwIAANQCAADTAgAAmAIAAJkCAADVAgAAmAIAANUCAADUAgAAmQIAAJoCAADWAgAAmQIAANYCAADVAgAAmgIAAJsCAADXAgAAmgIAANcCAADWAgAAmwIAAJwCAADYAgAAmwIAANgCAADXAgAAnAIAAJ0CAADZAgAAnAIAANkCAADYAgAAnQIAAJ4CAADaAgAAnQIAANoCAADZAgAAngIAAJ8CAADbAgAAngIAANsCAADaAgAAnwIAAKACAADcAgAAnwIAANwCAADbAgAAoAIAAKECAADdAgAAoAIAAN0CAADcAgAAoQIAAKICAADeAgAAoQIAAN4CAADdAgAAogIAAKMCAADfAgAAogIAAN8CAADeAgAAowIAAKQCAADgAgAAowIAAOACAADfAgAApAIAAKUCAADhAgAApAIAAOECAADgAgAApQIAAKYCAADiAgAApQIAAOICAADhAgAApgIAAKcCAADjAgAApgIAAOMCAADiAgAApwIAAKgCAADkAgAApwIAAOQCAADjAgAAqAIAAKkCAADlAgAAqAIAAOUCAADkAgAAqQIAAKoCAADmAgAAqQIAAOYCAADlAgAAqgIAAKsCAADnAgAAqgIAAOcCAADmAgAAqwIAAKwCAADoAgAAqwIAAOgCAADnAgAArAIAAK0CAADpAgAArAIAAOkCAADoAgAArQIAAK4CAADqAgAArQIAAOoCAADpAgAArgIAAK8CAADrAgAArgIAAOsCAADqAgAArwIAALACAADsAgAArwIAAOwCAADrAgAAsAIAALECAADtAgAAsAIAAO0CAADsAgAAsQIAALICAADuAgAAsQIAAO4CAADtAgAAsgIAALMCAADvAgAAsgIAAO8CAADuAgAAswIAALQCAADwAgAAswIAAPACAADvAgAAtAIAALUCAADxAgAAtAIAAPECAADwAgAAtQIAALYCAADyAgAAtQIAAPICAADxAgAAtgIAALcCAADzAgAAtgIAAPMCAADyAgAAtwIAALgCAAD0AgAAtwIAAPQCAADzAgAAuAIAALkCAAD1AgAAuAIAAPUCAAD0AgAAuQIAALoCAAD2AgAAuQIAAPYCAAD1AgAAugIAALsCAAD3AgAAugIAAPcCAAD2AgAAuwIAALwCAAD4AgAAuwIAAPgCAAD3AgAAvAIAAL0CAAD5AgAAvAIAAPkCAAD4AgAAvQIAAL4CAAD6AgAAvQIAAPoCAAD5AgAAvgIAAL8CAAD7AgAAvgIAAPsCAAD6AgAAvwIAAMACAAD8AgAAvwIAAPwCAAD7AgAAwAIAAMECAAD9AgAAwAIAAP0CAAD8AgAAwQIAAMICAAD+AgAAwQIAAP4CAAD9AgAAwgIAAMMCAAD/AgAAwgIAAP8CAAD+AgAAwwIAAMQCAAAAAwAAwwIAAAADAAD/AgAAxAIAAMUCAAABAwAAxAIAAAEDAAAAAwAAxQIAAMYCAAACAwAAxQIAAAIDAAABAwAAxgIAAMcCAAADAwAAxgIAAAMDAAACAwAAxwIAAMgCAAAEAwAAxwIAAAQDAAADAwAAyAIAAMkCAAAFAwAAyAIAAAUDAAAEAwAAyQIAAMoCAAAGAwAAyQIAAAYDAAAFAwAAygIAAMsCAAAHAwAAygIAAAcDAAAGAwAAywIAAMwCAAAIAwAAywIAAAgDAAAHAwAAzAIAAM0CAAAJAwAAzAIAAAkDAAAIAwAAzQIAAM4CAAAKAwAAzQIAAAoDAAAJAwAAzgIAAM8CAAALAwAAzgIAAAsDAAAKAwAA0AIAANECAAANAwAA0AIAAA0DAAAMAwAA0QIAANICAAAOAwAA0QIAAA4DAAANAwAA0gIAANMCAAAPAwAA0gIAAA8DAAAOAwAA0wIAANQCAAAQAwAA0wIAABADAAAPAwAA1AIAANUCAAARAwAA1AIAABEDAAAQAwAA1QIAANYCAAASAwAA1QIAABIDAAARAwAA1gIAANcCAAATAwAA1gIAABMDAAASAwAA1wIAANgCAAAUAwAA1wIAABQDAAATAwAA2AIAANkCAAAVAwAA2AIAABUDAAAUAwAA2QIAANoCAAAWAwAA2QIAABYDAAAVAwAA2gIAANsCAAAXAwAA2gIAABcDAAAWAwAA2wIAANwCAAAYAwAA2wIAABgDAAAXAwAA3AIAAN0CAAAZAwAA3AIAABkDAAAYAwAA3QIAAN4CAAAaAwAA3QIAABoDAAAZAwAA3gIAAN8CAAAbAwAA3gIAABsDAAAaAwAA3wIAAOACAAAcAwAA3wIAABwDAAAbAwAA4AIAAOECAAAdAwAA4AIAAB0DAAAcAwAA4QIAAOICAAAeAwAA4QIAAB4DAAAdAwAA4gIAAOMCAAAfAwAA4gIAAB8DAAAeAwAA4wIAAOQCAAAgAwAA4wIAACADAAAfAwAA5AIAAOUCAAAhAwAA5AIAACEDAAAgAwAA5QIAAOYCAAAiAwAA5QIAACIDAAAhAwAA5gIAAOcCAAAjAwAA5gIAACMDAAAiAwAA5wIAAOgCAAAkAwAA5wIAACQDAAAjAwAA6AIAAOkCAAAlAwAA6AIAACUDAAAkAwAA6QIAAOoCAAAmAwAA6QIAACYDAAAlAwAA6gIAAOsCAAAnAwAA6gIAACcDAAAmAwAA6wIAAOwCAAAoAwAA6wIAACgDAAAnAwAA7AIAAO0CAAApAwAA7AIAACkDAAAoAwAA7QIAAO4CAAAqAwAA7QIAACoDAAApAwAA7gIAAO8CAAArAwAA7gIAACsDAAAqAwAA7wIAAPACAAAsAwAA7wIAACwDAAArAwAA8AIAAPECAAAtAwAA8AIAAC0DAAAsAwAA8QIAAPICAAAuAwAA8QIAAC4DAAAtAwAA8gIAAPMCAAAvAwAA8gIAAC8DAAAuAwAA8wIAAPQCAAAwAwAA8wIAADADAAAvAwAA9AIAAPUCAAAxAwAA9AIAADEDAAAwAwAA9QIAAPYCAAAyAwAA9QIAADIDAAAxAwAA9gIAAPcCAAAzAwAA9gIAADMDAAAyAwAA9wIAAPgCAAA0AwAA9wIAADQDAAAzAwAA+AIAAPkCAAA1AwAA+AIAADUDAAA0AwAA+QIAAPoCAAA2AwAA+QIAADYDAAA1AwAA+gIAAPsCAAA3AwAA+gIAADcDAAA2AwAA+wIAAPwCAAA4AwAA+wIAADgDAAA3AwAA/AIAAP0CAAA5AwAA/AIAADkDAAA4AwAA/QIAAP4CAAA6AwAA/QIAADoDAAA5AwAA/gIAAP8CAAA7AwAA/gIAADsDAAA6AwAA/wIAAAADAAA8AwAA/wIAADwDAAA7AwAAAAMAAAEDAAA9AwAAAAMAAD0DAAA8AwAAAQMAAAIDAAA+AwAAAQMAAD4DAAA9AwAAAgMAAAMDAAA/AwAAAgMAAD8DAAA+AwAAAwMAAAQDAABAAwAAAwMAAEADAAA/AwAABAMAAAUDAABBAwAABAMAAEEDAABAAwAABQMAAAYDAABCAwAABQMAAEIDAABBAwAABgMAAAcDAABDAwAABgMAAEMDAABCAwAABwMAAAgDAABEAwAABwMAAEQDAABDAwAACAMAAAkDAABFAwAACAMAAEUDAABEAwAACQMAAAoDAABGAwAACQMAAEYDAABFAwAACgMAAAsDAABHAwAACgMAAEcDAABGAwAADAMAAA0DAABJAwAADAMAAEkDAABIAwAADQMAAA4DAABKAwAADQMAAEoDAABJAwAADgMAAA8DAABLAwAADgMAAEsDAABKAwAADwMAABADAABMAwAADwMAAEwDAABLAwAAEAMAABEDAABNAwAAEAMAAE0DAABMAwAAEQMAABIDAABOAwAAEQMAAE4DAABNAwAAEgMAABMDAABPAwAAEgMAAE8DAABOAwAAEwMAABQDAABQAwAAEwMAAFADAABPAwAAFAMAABUDAABRAwAAFAMAAFEDAABQAwAAFQMAABYDAABSAwAAFQMAAFIDAABRAwAAFgMAABcDAABTAwAAFgMAAFMDAABSAwAAFwMAABgDAABUAwAAFwMAAFQDAABTAwAAGAMAABkDAABVAwAAGAMAAFUDAABUAwAAGQMAABoDAABWAwAAGQMAAFYDAABVAwAAGgMAABsDAABXAwAAGgMAAFcDAABWAwAAGwMAABwDAABYAwAAGwMAAFgDAABXAwAAHAMAAB0DAABZAwAAHAMAAFkDAABYAwAAHQMAAB4DAABaAwAAHQMAAFoDAABZAwAAHgMAAB8DAABbAwAAHgMAAFsDAABaAwAAHwMAACADAABcAwAAHwMAAFwDAABbAwAAIAMAACEDAABdAwAAIAMAAF0DAABcAwAAIQMAACIDAABeAwAAIQMAAF4DAABdAwAAIgMAACMDAABfAwAAIgMAAF8DAABeAwAAIwMAACQDAABgAwAAIwMAAGADAABfAwAAJAMAACUDAABhAwAAJAMAAGEDAABgAwAAJQMAACYDAABiAwAAJQMAAGIDAABhAwAAJgMAACcDAABjAwAAJgMAAGMDAABiAwAAJwMAACgDAABkAwAAJwMAAGQDAABjAwAAKAMAACkDAABlAwAAKAMAAGUDAABkAwAAKQMAACoDAABmAwAAKQMAAGYDAABlAwAAKgMAACsDAABnAwAAKgMAAGcDAABmAwAAKwMAACwDAABoAwAAKwMAAGgDAABnAwAALAMAAC0DAABpAwAALAMAAGkDAABoAwAALQMAAC4DAABqAwAALQMAAGoDAABpAwAALgMAAC8DAABrAwAALgMAAGsDAABqAwAALwMAADADAABsAwAALwMAAGwDAABrAwAAMAMAADEDAABtAwAAMAMAAG0DAABsAwAAMQMAADIDAABuAwAAMQMAAG4DAABtAwAAMgMAADMDAABvAwAAMgMAAG8DAABuAwAAMwMAADQDAABwAwAAMwMAAHADAABvAwAANAMAADUDAABxAwAANAMAAHEDAABwAwAANQMAADYDAAByAwAANQMAAHIDAABxAwAANgMAADcDAABzAwAANgMAAHMDAAByAwAANwMAADgDAAB0AwAANwMAAHQDAABzAwAAOAMAADkDAAB1AwAAOAMAAHUDAAB0AwAAOQMAADoDAAB2AwAAOQMAAHYDAAB1AwAAOgMAADsDAAB3AwAAOgMAAHcDAAB2AwAAOwMAADwDAAB4AwAAOwMAAHgDAAB3AwAAPAMAAD0DAAB5AwAAPAMAAHkDAAB4AwAAPQMAAD4DAAB6AwAAPQMAAHoDAAB5AwAAPgMAAD8DAAB7AwAAPgMAAHsDAAB6AwAAPwMAAEADAAB8AwAAPwMAAHwDAAB7AwAAQAMAAEEDAAB9AwAAQAMAAH0DAAB8AwAAQQMAAEIDAAB+AwAAQQMAAH4DAAB9AwAAQgMAAEMDAAB/AwAAQgMAAH8DAAB+AwAAQwMAAEQDAACAAwAAQwMAAIADAAB/AwAARAMAAEUDAACBAwAARAMAAIEDAACAAwAARQMAAEYDAACCAwAARQMAAIIDAACBAwAARgMAAEcDAACDAwAARgMAAIMDAACCAwAASAMAAEkDAACFAwAASAMAAIUDAACEAwAASQMAAEoDAACGAwAASQMAAIYDAACFAwAASgMAAEsDAACHAwAASgMAAIcDAACGAwAASwMAAEwDAACIAwAASwMAAIgDAACHAwAATAMAAE0DAACJAwAATAMAAIkDAACIAwAATQMAAE4DAACKAwAATQMAAIoDAACJAwAATgMAAE8DAACLAwAATgMAAIsDAACKAwAATwMAAFADAACMAwAATwMAAIwDAACLAwAAUAMAAFEDAACNAwAAUAMAAI0DAACMAwAAUQMAAFIDAACOAwAAUQMAAI4DAACNAwAAUgMAAFMDAACPAwAAUgMAAI8DAACOAwAAUwMAAFQDAACQAwAAUwMAAJADAACPAwAAVAMAAFUDAACRAwAAVAMAAJEDAACQAwAAVQMAAFYDAACSAwAAVQMAAJIDAACRAwAAVgMAAFcDAACTAwAAVgMAAJMDAACSAwAAVwMAAFgDAACUAwAAVwMAAJQDAACTAwAAWAMAAFkDAACVAwAAWAMAAJUDAACUAwAAWQMAAFoDAACWAwAAWQMAAJYDAACVAwAAWgMAAFsDAACXAwAAWgMAAJcDAACWAwAAWwMAAFwDAACYAwAAWwMAAJgDAACXAwAAXAMAAF0DAACZAwAAXAMAAJkDAACYAwAAXQMAAF4DAACaAwAAXQMAAJoDAACZAwAAXgMAAF8DAACbAwAAXgMAAJsDAACaAwAAXwMAAGADAACcAwAAXwMAAJwDAACbAwAAYAMAAGEDAACdAwAAYAMAAJ0DAACcAwAAYQMAAGIDAACeAwAAYQMAAJ4DAACdAwAAYgMAAGMDAACfAwAAYgMAAJ8DAACeAwAAYwMAAGQDAACgAwAAYwMAAKADAACfAwAAZAMAAGUDAAChAwAAZAMAAKEDAACgAwAAZQMAAGYDAACiAwAAZQMAAKIDAAChAwAAZgMAAGcDAACjAwAAZgMAAKMDAACiAwAAZwMAAGgDAACkAwAAZwMAAKQDAACjAwAAaAMAAGkDAAClAwAAaAMAAKUDAACkAwAAaQMAAGoDAACmAwAAaQMAAKYDAAClAwAAagMAAGsDAACnAwAAagMAAKcDAACmAwAAawMAAGwDAACoAwAAawMAAKgDAACnAwAAbAMAAG0DAACpAwAAbAMAAKkDAACoAwAAbQMAAG4DAACqAwAAbQMAAKoDAACpAwAAbgMAAG8DAACrAwAAbgMAAKsDAACqAwAAbwMAAHADAACsAwAAbwMAAKwDAACrAwAAcAMAAHEDAACtAwAAcAMAAK0DAACsAwAAcQMAAHIDAACuAwAAcQMAAK4DAACtAwAAcgMAAHMDAACvAwAAcgMAAK8DAACuAwAAcwMAAHQDAACwAwAAcwMAALADAACvAwAAdAMAAHUDAACxAwAAdAMAALEDAACwAwAAdQMAAHYDAACyAwAAdQMAALIDAACxAwAAdgMAAHcDAACzAwAAdgMAALMDAACyAwAAdwMAAHgDAAC0AwAAdwMAALQDAACzAwAAeAMAAHkDAAC1AwAAeAMAALUDAAC0AwAAeQMAAHoDAAC2AwAAeQMAALYDAAC1AwAAegMAAHsDAAC3AwAAegMAALcDAAC2AwAAewMAAHwDAAC4AwAAewMAALgDAAC3AwAAfAMAAH0DAAC5AwAAfAMAALkDAAC4AwAAfQMAAH4DAAC6AwAAfQMAALoDAAC5AwAAfgMAAH8DAAC7AwAAfgMAALsDAAC6AwAAfwMAAIADAAC8AwAAfwMAALwDAAC7AwAAgAMAAIEDAAC9AwAAgAMAAL0DAAC8AwAAgQMAAIIDAAC+AwAAgQMAAL4DAAC9AwAAggMAAIMDAAC/AwAAggMAAL8DAAC+AwAAhAMAAIUDAADBAwAAhAMAAMEDAADAAwAAhQMAAIYDAADCAwAAhQMAAMIDAADBAwAAhgMAAIcDAADDAwAAhgMAAMMDAADCAwAAhwMAAIgDAADEAwAAhwMAAMQDAADDAwAAiAMAAIkDAADFAwAAiAMAAMUDAADEAwAAiQMAAIoDAADGAwAAiQMAAMYDAADFAwAAigMAAIsDAADHAwAAigMAAMcDAADGAwAAiwMAAIwDAADIAwAAiwMAAMgDAADHAwAAjAMAAI0DAADJAwAAjAMAAMkDAADIAwAAjQMAAI4DAADKAwAAjQMAAMoDAADJAwAAjgMAAI8DAADLAwAAjgMAAMsDAADKAwAAjwMAAJADAADMAwAAjwMAAMwDAADLAwAAkAMAAJEDAADNAwAAkAMAAM0DAADMAwAAkQMAAJIDAADOAwAAkQMAAM4DAADNAwAAkgMAAJMDAADPAwAAkgMAAM8DAADOAwAAkwMAAJQDAADQAwAAkwMAANADAADPAwAAlAMAAJUDAADRAwAAlAMAANEDAADQAwAAlQMAAJYDAADSAwAAlQMAANIDAADRAwAAlgMAAJcDAADTAwAAlgMAANMDAADSAwAAlwMAAJgDAADUAwAAlwMAANQDAADTAwAAmAMAAJkDAADVAwAAmAMAANUDAADUAwAAmQMAAJoDAADWAwAAmQMAANYDAADVAwAAmgMAAJsDAADXAwAAmgMAANcDAADWAwAAmwMAAJwDAADYAwAAmwMAANgDAADXAwAAnAMAAJ0DAADZAwAAnAMAANkDAADYAwAAnQMAAJ4DAADaAwAAnQMAANoDAADZAwAAngMAAJ8DAADbAwAAngMAANsDAADaAwAAnwMAAKADAADcAwAAnwMAANwDAADbAwAAoAMAAKEDAADdAwAAoAMAAN0DAADcAwAAoQMAAKIDAADeAwAAoQMAAN4DAADdAwAAogMAAKMDAADfAwAAogMAAN8DAADeAwAAowMAAKQDAADgAwAAowMAAOADAADfAwAApAMAAKUDAADhAwAApAMAAOEDAADgAwAApQMAAKYDAADiAwAApQMAAOIDAADhAwAApgMAAKcDAADjAwAApgMAAOMDAADiAwAApwMAAKgDAADkAwAApwMAAOQDAADjAwAAqAMAAKkDAADlAwAAqAMAAOUDAADkAwAAqQMAAKoDAADmAwAAqQMAAOYDAADlAwAAqgMAAKsDAADnAwAAqgMAAOcDAADmAwAAqwMAAKwDAADoAwAAqwMAAOgDAADnAwAArAMAAK0DAADpAwAArAMAAOkDAADoAwAArQMAAK4DAADqAwAArQMAAOoDAADpAwAArgMAAK8DAADrAwAArgMAAOsDAADqAwAArwMAALADAADsAwAArwMAAOwDAADrAwAAsAMAALEDAADtAwAAsAMAAO0DAADsAwAAsQMAALIDAADuAwAAsQMAAO4DAADtAwAAsgMAALMDAADvAwAAsgMAAO8DAADuAwAAswMAALQDAADwAwAAswMAAPADAADvAwAAtAMAALUDAADxAwAAtAMAAPEDAADwAwAAtQMAALYDAADyAwAAtQMAAPIDAADxAwAAtgMAALcDAADzAwAAtgMAAPMDAADyAwAAtwMAALgDAAD0AwAAtwMAAPQDAADzAwAAuAMAALkDAAD1AwAAuAMAAPUDAAD0AwAAuQMAALoDAAD2AwAAuQMAAPYDAAD1AwAAugMAALsDAAD3AwAAugMAAPcDAAD2AwAAuwMAALwDAAD4AwAAuwMAAPgDAAD3AwAAvAMAAL0DAAD5AwAAvAMAAPkDAAD4AwAAvQMAAL4DAAD6AwAAvQMAAPoDAAD5AwAAvgMAAL8DAAD7AwAAvgMAAPsDAAD6AwAAwAMAAMEDAAD9AwAAwAMAAP0DAAD8AwAAwQMAAMIDAAD+AwAAwQMAAP4DAAD9AwAAwgMAAMMDAAD/AwAAwgMAAP8DAAD+AwAAwwMAAMQDAAAABAAAwwMAAAAEAAD/AwAAxAMAAMUDAAABBAAAxAMAAAEEAAAABAAAxQMAAMYDAAACBAAAxQMAAAIEAAABBAAAxgMAAMcDAAADBAAAxgMAAAMEAAACBAAAxwMAAMgDAAAEBAAAxwMAAAQEAAADBAAAyAMAAMkDAAAFBAAAyAMAAAUEAAAEBAAAyQMAAMoDAAAGBAAAyQMAAAYEAAAFBAAAygMAAMsDAAAHBAAAygMAAAcEAAAGBAAAywMAAMwDAAAIBAAAywMAAAgEAAAHBAAAzAMAAM0DAAAJBAAAzAMAAAkEAAAIBAAAzQMAAM4DAAAKBAAAzQMAAAoEAAAJBAAAzgMAAM8DAAALBAAAzgMAAAsEAAAKBAAAzwMAANADAAAMBAAAzwMAAAwEAAALBAAA0AMAANEDAAAN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BAAAHAQAAFkEAABYBAAAHQQAAB4EAABaBAAAHQQAAFoEAABZBAAAHgQAAB8EAABbBAAAHgQAAFsEAABaBAAAHwQAACAEAABcBAAAHwQAAFwEAABbBAAAIAQAACEEAABdBAAAIAQAAF0EAABcBAAAIQQAACIEAABeBAAAIQQAAF4EAABdBAAAIgQAACMEAABfBAAAIgQAAF8EAABeBAAAIwQAACQEAABgBAAAIwQAAGAEAABfBAAAJAQAACUEAABhBAAAJAQAAGEEAABgBAAAJQQAACYEAABiBAAAJQQAAGIEAABhBAAAJgQAACcEAABjBAAAJgQAAGMEAABiBAAAJwQAACgEAABkBAAAJwQAAGQEAABjBAAAKAQAACkEAABlBAAAKAQAAGUEAABkBAAAKQQAACoEAABmBAAAKQQAAGYEAABlBAAAKgQAACsEAABnBAAAKgQAAGcEAABmBAAAKwQAACwEAABoBAAAKwQAAGgEAABnBAAALAQAAC0EAABpBAAALAQAAGkEAABoBAAALQQAAC4EAABqBAAALQQAAGoEAABpBAAALgQAAC8EAABrBAAALgQAAGsEAABqBAAALwQAADAEAABsBAAALwQAAGwEAABrBAAAMAQAADEEAABtBAAAMAQAAG0EAABsBAAAMQQAADIEAABuBAAAMQQAAG4EAABtBAAAMgQAADMEAABvBAAAMgQAAG8EAABuBAAAMwQAADQEAABwBAAAMwQAAHAEAABvBAAANAQAADUEAABxBAAANAQAAHEEAABwBAAANQQAADYEAAByBAAANQQAAHIEAABxBAAANgQAADcEAABzBAAANgQAAHMEAAByBAAAOAQAADkEAAB1BAAAOAQAAHUEAAB0BAAAOQQAADoEAAB2BAAAOQQAAHYEAAB1BAAAOgQAADsEAAB3BAAAOgQAAHcEAAB2BAAAOwQAADwEAAB4BAAAOwQAAHgEAAB3BAAAPAQAAD0EAAB5BAAAPAQAAHkEAAB4BAAAPQQAAD4EAAB6BAAAPQQAAHoEAAB5BAAAPgQAAD8EAAB7BAAAPgQAAHsEAAB6BAAAPwQAAEAEAAB8BAAAPwQAAHwEAAB7BAAAQAQAAEEEAAB9BAAAQAQAAH0EAAB8BAAAQQQAAEIEAAB+BAAAQQQAAH4EAAB9BAAAQgQAAEMEAAB/BAAAQgQAAH8EAAB+BAAAQwQAAEQEAACABAAAQwQAAIAEAAB/BAAARAQAAEUEAACBBAAARAQAAIEEAACABAAARQQAAEYEAACCBAAARQQAAIIEAACBBAAARgQAAEcEAACDBAAARgQAAIMEAACCBAAARwQAAEgEAACEBAAARwQAAIQEAACDBAAASAQAAEkEAACFBAAASAQAAIUEAACEBAAASQQAAEoEAACGBAAASQQAAIYEAACFBAAASgQAAEsEAACHBAAASgQAAIcEAACGBAAASwQAAEwEAACIBAAASwQAAIgEAACHBAAATAQAAE0EAACJBAAATAQAAIkEAACIBAAATQQAAE4EAACKBAAATQQAAIoEAACJBAAATgQAAE8EAACLBAAATgQAAIsEAACKBAAATwQAAFAEAACMBAAATwQAAIwEAACLBAAAUAQAAFEEAACNBAAAUAQAAI0EAACMBAAAUQQAAFIEAACOBAAAUQQAAI4EAACNBAAAUgQAAFMEAACPBAAAUgQAAI8EAACOBAAAUwQAAFQEAACQBAAAUwQAAJAEAACPBAAAVAQAAFUEAACRBAAAVAQAAJEEAACQBAAAVQQAAFYEAACSBAAAVQQAAJIEAACRBAAAVgQAAFcEAACTBAAAVgQAAJMEAACSBAAAVwQAAFgEAACUBAAAVwQAAJQEAACTBAAAWAQAAFkEAACVBAAAWAQAAJUEAACUBAAAWQQAAFoEAACWBAAAWQQAAJYEAACVBAAAWgQAAFsEAACXBAAAWgQAAJcEAACWBAAAWwQAAFwEAACYBAAAWwQAAJgEAACXBAAAXAQAAF0EAACZBAAAXAQAAJkEAACYBAAAXQQAAF4EAACaBAAAXQQAAJoEAACZBAAAXgQAAF8EAACbBAAAXgQAAJsEAACaBAAAXwQAAGAEAACcBAAAXwQAAJwEAACbBAAAYAQAAGEEAACdBAAAYAQAAJ0EAACcBAAAYQQAAGIEAACeBAAAYQQAAJ4EAACdBAAAYgQAAGMEAACfBAAAYgQAAJ8EAACeBAAAYwQAAGQEAACgBAAAYwQAAKAEAACfBAAAZAQAAGUEAAChBAAAZAQAAKEEAACgBAAAZQQAAGYEAACiBAAAZQQAAKIEAAChBAAAZgQAAGcEAACjBAAAZgQAAKMEAACiBAAAZwQAAGgEAACkBAAAZwQAAKQEAACjBAAAaAQAAGkEAAClBAAAaAQAAKUEAACkBAAAaQQAAGoEAACmBAAAaQQAAKYEAAClBAAAagQAAGsEAACnBAAAagQAAKcEAACmBAAAawQAAGwEAACoBAAAawQAAKgEAACnBAAAbAQAAG0EAACpBAAAbAQAAKkEAACoBAAAbQQAAG4EAACqBAAAbQQAAKoEAACpBAAAbgQAAG8EAACrBAAAbgQAAKsEAACqBAAAbwQAAHAEAACsBAAAbwQAAKwEAACrBAAAcAQAAHEEAACtBAAAcAQAAK0EAACsBAAAcQQAAHIEAACuBAAAcQQAAK4EAACtBAAAcgQAAHMEAACvBAAAcgQAAK8EAACuBAAAdAQAAHUEAACxBAAAdAQAALEEAACwBAAAdQQAAHYEAACyBAAAdQQAALIEAACxBAAAdgQAAHcEAACzBAAAdgQAALMEAACyBAAAdwQAAHgEAAC0BAAAdwQAALQEAACzBAAAeAQAAHkEAAC1BAAAeAQAALUEAAC0BAAAeQQAAHoEAAC2BAAAeQQAALYEAAC1BAAAegQAAHsEAAC3BAAAegQAALcEAAC2BAAAewQAAHwEAAC4BAAAewQAALgEAAC3BAAAfAQAAH0EAAC5BAAAfAQAALkEAAC4BAAAfQQAAH4EAAC6BAAAfQQAALoEAAC5BAAAfgQAAH8EAAC7BAAAfgQAALsEAAC6BAAAfwQAAIAEAAC8BAAAfwQAALwEAAC7BAAAgAQAAIEEAAC9BAAAgAQAAL0EAAC8BAAAgQQAAIIEAAC+BAAAgQQAAL4EAAC9BAAAggQAAIMEAAC/BAAAggQAAL8EAAC+BAAAgwQAAIQEAADABAAAgwQAAMAEAAC/BAAAhAQAAIUEAADBBAAAhAQAAMEEAADABAAAhQQAAIYEAADCBAAAhQQAAMIEAADBBAAAhgQAAIcEAADDBAAAhgQAAMMEAADCBAAAhwQAAIgEAADEBAAAhwQAAMQEAADDBAAAiAQAAIkEAADFBAAAiAQAAMUEAADEBAAAiQQAAIoEAADGBAAAiQQAAMYEAADFBAAAigQAAIsEAADHBAAAigQAAMcEAADGBAAAiwQAAIwEAADIBAAAiwQAAMgEAADHBAAAjAQAAI0EAADJBAAAjAQAAMkEAADIBAAAjQQAAI4EAADKBAAAjQQAAMoEAADJBAAAjgQAAI8EAADLBAAAjgQAAMsEAADKBAAAjwQAAJAEAADMBAAAjwQAAMwEAADLBAAAkAQAAJEEAADNBAAAkAQAAM0EAADMBAAAkQQAAJIEAADOBAAAkQQAAM4EAADNBAAAkgQAAJMEAADPBAAAkgQAAM8EAADOBAAAkwQAAJQEAADQBAAAkwQAANAEAADPBAAAlAQAAJUEAADRBAAAlAQAANEEAADQBAAAlQQAAJYEAADSBAAAlQQAANIEAADRBAAAlgQAAJcEAADTBAAAlgQAANMEAADSBAAAlwQAAJgEAADUBAAAlwQAANQEAADTBAAAmAQAAJkEAADVBAAAmAQAANUEAADUBAAAmQQAAJoEAADWBAAAmQQAANYEAADVBAAAmgQAAJsEAADXBAAAmgQAANcEAADWBAAAmwQAAJwEAADYBAAAmwQAANgEAADXBAAAnAQAAJ0EAADZBAAAnAQAANkEAADYBAAAnQQAAJ4EAADaBAAAnQQAANoEAADZBAAAngQAAJ8EAADbBAAAngQAANsEAADaBAAAnwQAAKAEAADcBAAAnwQAANwEAADbBAAAoAQAAKEEAADdBAAAoAQAAN0EAADcBAAAoQQAAKIEAADeBAAAoQQAAN4EAADdBAAAogQAAKMEAADfBAAAogQAAN8EAADeBAAAowQAAKQEAADgBAAAowQAAOAEAADfBAAApAQAAKUEAADhBAAApAQAAOEEAADgBAAApQQAAKYEAADiBAAApQQAAOIEAADhBAAApgQAAKcEAADjBAAApgQAAOMEAADiBAAApwQAAKgEAADkBAAApwQAAOQEAADjBAAAqAQAAKkEAADlBAAAqAQAAOUEAADkBAAAqQQAAKoEAADmBAAAqQQAAOYEAADlBAAAqgQAAKsEAADnBAAAqgQAAOcEAADmBAAAqwQAAKwEAADoBAAAqwQAAOgEAADnBAAArAQAAK0EAADpBAAArAQAAOkEAADoBAAArQQAAK4EAADqBAAArQQAAOoEAADpBAAArgQAAK8EAADrBAAArgQAAOsEAADqBAAAsAQAALEEAADtBAAAsAQAAO0EAADsBAAAsQQAALIEAADuBAAAsQQAAO4EAADtBAAAsgQAALMEAADvBAAAsgQAAO8EAADuBAAAswQAALQEAADwBAAAswQAAPAEAADvBAAAtAQAALUEAADxBAAAtAQAAPEEAADwBAAAtQQAALYEAADyBAAAtQQAAPIEAADxBAAAtgQAALcEAADzBAAAtgQAAPMEAADyBAAAtwQAALgEAAD0BAAAtwQAAPQEAADzBAAAuAQAALkEAAD1BAAAuAQAAPUEAAD0BAAAuQQAALoEAAD2BAAAuQQAAPYEAAD1BAAAugQAALsEAAD3BAAAugQAAPcEAAD2BAAAuwQAALwEAAD4BAAAuwQAAPgEAAD3BAAAvAQAAL0EAAD5BAAAvAQAAPkEAAD4BAAAvQQAAL4EAAD6BAAAvQQAAPoEAAD5BAAAvgQAAL8EAAD7BAAAvgQAAPsEAAD6BAAAvwQAAMAEAAD8BAAAvwQAAPwEAAD7BAAAwAQAAMEEAAD9BAAAwAQAAP0EAAD8BAAAwQQAAMIEAAD+BAAAwQQAAP4EAAD9BAAAwgQAAMMEAAD/BAAAwgQAAP8EAAD+BAAAwwQAAMQEAAAABQAAwwQAAAAFAAD/BAAAxAQAAMUEAAABBQAAxAQAAAEFAAAABQAAxQQAAMYEAAACBQAAxQQAAAIFAAABBQAAxgQAAMcEAAADBQAAxgQAAAMFAAACBQAAxwQAAMgEAAAEBQAAxwQAAAQFAAADBQAAyAQAAMkEAAAFBQAAyAQAAAUFAAAEBQAAyQQAAMoEAAAGBQAAyQQAAAYFAAAFBQAAygQAAMsEAAAHBQAAygQAAAcFAAAGBQAAywQAAMwEAAAIBQAAywQAAAgFAAAHBQAAzAQAAM0EAAAJBQAAzAQAAAkFAAAIBQAAzQQAAM4EAAAKBQAAzQQAAAoFAAAJBQAAzgQAAM8EAAALBQAAzgQAAAsFAAAKBQAAzwQAANAEAAAMBQAAzwQAAAwFAAALBQAA0AQAANEEAAANBQAA0AQAAA0FAAAMBQAA0QQAANIEAAAOBQAA0QQAAA4FAAANBQAA0gQAANMEAAAPBQAA0gQAAA8FAAAOBQAA0wQAANQEAAAQBQAA0wQAABAFAAAPBQAA1AQAANUEAAARBQAA1AQAABEFAAAQBQAA1QQAANYEAAASBQAA1QQAABIFAAARBQAA1gQAANcEAAATBQAA1gQAABMFAAASBQAA1wQAANgEAAAUBQAA1wQAABQFAAATBQAA2AQAANkEAAAVBQAA2AQAABUFAAAUBQAA2QQAANoEAAAWBQAA2QQAABYFAAAVBQAA2gQAANsEAAAXBQAA2gQAABcFAAAWBQAA2wQAANwEAAAYBQAA2wQAABgFAAAXBQAA3AQAAN0EAAAZBQAA3AQAABkFAAAYBQAA3QQAAN4EAAAaBQAA3QQAABoFAAAZBQAA3gQAAN8EAAAbBQAA3gQAABsFAAAaBQAA3wQAAOAEAAAcBQAA3wQAABwFAAAbBQAA4AQAAOEEAAAdBQAA4AQAAB0FAAAcBQAA4QQAAOIEAAAeBQAA4QQAAB4FAAAdBQAA4gQAAOMEAAAfBQAA4gQAAB8FAAAeBQAA4wQAAOQEAAAgBQAA4wQAACAFAAAfBQAA5AQAAOUEAAAhBQAA5AQAACEFAAAgBQAA5QQAAOYEAAAiBQAA5QQAACIFAAAhBQAA5gQAAOcEAAAjBQAA5gQAACMFAAAiBQAA5wQAAOgEAAAkBQAA5wQAACQFAAAjBQAA6AQAAOkEAAAlBQAA6AQAACUFAAAkBQAA6QQAAOoEAAAmBQAA6QQAACYFAAAlBQAA6gQAAOsEAAAnBQAA6gQAACcFAAAmBQAA7AQAAO0EAAApBQAA7AQAACkFAAAoBQAA7QQAAO4EAAAqBQAA7QQAACoFAAApBQAA7gQAAO8EAAArBQAA7gQAACsFAAAqBQAA7wQAAPAEAAAsBQAA7wQAACwFAAArBQAA8AQAAPEEAAAtBQAA8AQAAC0FAAAsBQAA8QQAAPIEAAAuBQAA8QQAAC4FAAAtBQAA8gQAAPMEAAAvBQAA8gQAAC8FAAAuBQAA8wQAAPQEAAAwBQAA8wQAADAFAAAvBQAA9AQAAPUEAAAxBQAA9AQAADEFAAAwBQAA9QQAAPYEAAAyBQAA9QQAADIFAAAxBQAA9gQAAPcEAAAzBQAA9gQAADMFAAAyBQAA9wQAAPgEAAA0BQAA9wQAADQFAAAzBQAA+AQAAPkEAAA1BQAA+AQAADUFAAA0BQAA+QQAAPoEAAA2BQAA+QQAADYFAAA1BQAA+gQAAPsEAAA3BQAA+gQAADcFAAA2BQAA+wQAAPwEAAA4BQAA+wQAADgFAAA3BQAA/AQAAP0EAAA5BQAA/AQAADkFAAA4BQAA/QQAAP4EAAA6BQAA/QQAADoFAAA5BQAA/gQAAP8EAAA7BQAA/gQAADsFAAA6BQAA/wQAAAAFAAA8BQAA/wQAADwFAAA7BQAAAAUAAAEFAAA9BQAAAAUAAD0FAAA8BQAAAQUAAAIFAAA+BQAAAQUAAD4FAAA9BQAAAgUAAAMFAAA/BQAAAgUAAD8FAAA+BQAAAwUAAAQFAABABQAAAwUAAEAFAAA/BQAABAUAAAUFAABBBQAABAUAAEEFAABABQAABQUAAAYFAABCBQAABQUAAEIFAABBBQAABgUAAAcFAABDBQAABgUAAEMFAABCBQAABwUAAAgFAABEBQAABwUAAEQFAABDBQAACAUAAAkFAABFBQAACAUAAEUFAABEBQAACQUAAAoFAABGBQAACQUAAEYFAABFBQAACgUAAAsFAABHBQAACgUAAEcFAABGBQAACwUAAAwFAABIBQAACwUAAEgFAABHBQAADAUAAA0FAABJBQAADAUAAEkFAABIBQAADQUAAA4FAABKBQAADQUAAEoFAABJBQAADgUAAA8FAABLBQAADgUAAEsFAABKBQAADwUAABAFAABMBQAADwUAAEwFAABLBQAAEAUAABEFAABNBQAAEAUAAE0FAABMBQAAEQUAABIFAABOBQAAEQUAAE4FAABNBQAAEgUAABMFAABPBQAAEgUAAE8FAABOBQAAEwUAABQFAABQBQAAEwUAAFAFAABPBQAAFAUAABUFAABRBQAAFAUAAFEFAABQBQAAFQUAABYFAABSBQAAFQUAAFIFAABRBQAAFgUAABcFAABTBQAAFgUAAFMFAABSBQAAFwUAABgFAABUBQAAFwUAAFQFAABTBQAAGAUAABkFAABVBQAAGAUAAFUFAABUBQAAGQUAABoFAABWBQAAGQUAAFYFAABVBQAAGgUAABsFAABXBQAAGgUAAFcFAABWBQAAGwUAABwFAABYBQAAGwUAAFgFAABXBQAAHAUAAB0FAABZBQAAHAUAAFkFAABYBQAAHQUAAB4FAABaBQAAHQUAAFoFAABZBQAAHgUAAB8FAABbBQAAHgUAAFsFAABaBQAAHwUAACAFAABcBQAAHwUAAFwFAABbBQAAIAUAACEFAABdBQAAIAUAAF0FAABcBQAAIQUAACIFAABeBQAAIQUAAF4FAABdBQAAIgUAACMFAABfBQAAIgUAAF8FAABeBQAAIwUAACQFAABgBQAAIwUAAGAFAABfBQAAJAUAACUFAABhBQAAJAUAAGEFAABgBQAAJQUAACYFAABiBQAAJQUAAGIFAABhBQAAJgUAACcFAABjBQAAJgUAAGMFAABiBQAAKAUAACkFAABlBQAAKAUAAGUFAABkBQAAKQUAACoFAABmBQAAKQUAAGYFAABlBQAAKgUAACsFAABnBQAAKgUAAGcFAABmBQAAKwUAACwFAABoBQAAKwUAAGgFAABnBQAALAUAAC0FAABpBQAALAUAAGkFAABoBQAALQUAAC4FAABqBQAALQUAAGoFAABpBQAALgUAAC8FAABrBQAALgUAAGsFAABqBQAALwUAADAFAABsBQAALwUAAGwFAABrBQAAMAUAADEFAABtBQAAMAUAAG0FAABsBQAAMQUAADIFAABuBQAAMQUAAG4FAABtBQAAMgUAADMFAABvBQAAMgUAAG8FAABuBQAAMwUAADQFAABwBQAAMwUAAHAFAABvBQAANAUAADUFAABxBQAANAUAAHEFAABwBQAANQUAADYFAAByBQAANQUAAHIFAABxBQAANgUAADcFAABzBQAANgUAAHMFAAByBQAANwUAADgFAAB0BQAANwUAAHQFAABzBQAAOAUAADkFAAB1BQAAOAUAAHUFAAB0BQAAOQUAADoFAAB2BQAAOQUAAHYFAAB1BQAAOgUAADsFAAB3BQAAOgUAAHcFAAB2BQAAOwUAADwFAAB4BQAAOwUAAHgFAAB3BQAAPAUAAD0FAAB5BQAAPAUAAHkFAAB4BQAAPQUAAD4FAAB6BQAAPQUAAHoFAAB5BQAAPgUAAD8FAAB7BQAAPgUAAHsFAAB6BQAAPwUAAEAFAAB8BQAAPwUAAHwFAAB7BQAAQAUAAEEFAAB9BQAAQAUAAH0FAAB8BQAAQQUAAEIFAAB+BQAAQQUAAH4FAAB9BQAAQgUAAEMFAAB/BQAAQgUAAH8FAAB+BQAAQwUAAEQFAACABQAAQwUAAIAFAAB/BQAARAUAAEUFAACBBQAARAUAAIEFAACABQAARQUAAEYFAACCBQAARQUAAIIFAACBBQAARgUAAEcFAACDBQAARgUAAIMFAACCBQAARwUAAEgFAACEBQAARwUAAIQFAACDBQAASAUAAEkFAACFBQAASAUAAIUFAACEBQAASQUAAEoFAACGBQAASQUAAIYFAACFBQAASgUAAEsFAACHBQAASgUAAIcFAACGBQAASwUAAEwFAACIBQAASwUAAIgFAACHBQAATAUAAE0FAACJBQAATAUAAIkFAACIBQAATQUAAE4FAACKBQAATQUAAIoFAACJBQAATgUAAE8FAACLBQAATgUAAIsFAACKBQAATwUAAFAFAACMBQAATwUAAIwFAACLBQAAUAUAAFEFAACNBQAAUAUAAI0FAACMBQAAUQUAAFIFAACOBQAAUQUAAI4FAACNBQAAUgUAAFMFAACPBQAAUgUAAI8FAACOBQAAUwUAAFQFAACQBQAAUwUAAJAFAACPBQAAVAUAAFUFAACRBQAAVAUAAJEFAACQBQAAVQUAAFYFAACSBQAAVQUAAJIFAACRBQAAVgUAAFcFAACTBQAAVgUAAJMFAACSBQAAVwUAAFgFAACUBQAAVwUAAJQFAACTBQAAWAUAAFkFAACVBQAAWAUAAJUFAACUBQAAWQUAAFoFAACWBQAAWQUAAJYFAACVBQAAWgUAAFsFAACXBQAAWgUAAJcFAACWBQAAWwUAAFwFAACYBQAAWwUAAJgFAACXBQAAXAUAAF0FAACZBQAAXAUAAJkFAACYBQAAXQUAAF4FAACaBQAAXQUAAJoFAACZBQAAXgUAAF8FAACbBQAAXgUAAJsFAACaBQAAXwUAAGAFAACcBQAAXwUAAJwFAACbBQAAYAUAAGEFAACdBQAAYAUAAJ0FAACcBQAAYQUAAGIFAACeBQAAYQUAAJ4FAACdBQAAYgUAAGMFAACfBQAAYgUAAJ8FAACeBQAAZAUAAGUFAAChBQAAZAUAAKEFAACgBQAAZQUAAGYFAACiBQAAZQUAAKIFAAChBQAAZgUAAGcFAACjBQAAZgUAAKMFAACiBQAAZwUAAGgFAACkBQAAZwUAAKQFAACjBQAAaAUAAGkFAAClBQAAaAUAAKUFAACkBQAAaQUAAGoFAACmBQAAaQUAAKYFAAClBQAAagUAAGsFAACnBQAAagUAAKcFAACmBQAAawUAAGwFAACoBQAAawUAAKgFAACnBQAAbAUAAG0FAACpBQAAbAUAAKkFAACoBQAAbQUAAG4FAACqBQAAbQUAAKoFAACpBQAAbgUAAG8FAACrBQAAbgUAAKsFAACqBQAAbwUAAHAFAACsBQAAbwUAAKwFAACrBQAAcAUAAHEFAACtBQAAcAUAAK0FAACsBQAAcQUAAHIFAACuBQAAcQUAAK4FAACtBQAAcgUAAHMFAACvBQAAcgUAAK8FAACuBQAAcwUAAHQFAACwBQAAcwUAALAFAACvBQAAdAUAAHUFAACxBQAAdAUAALEFAACwBQAAdQUAAHYFAACyBQAAdQUAALIFAACxBQAAdgUAAHcFAACzBQAAdgUAALMFAACyBQAAdwUAAHgFAAC0BQAAdwUAALQFAACzBQAAeAUAAHkFAAC1BQAAeAUAALUFAAC0BQAAeQUAAHoFAAC2BQAAeQUAALYFAAC1BQAAegUAAHsFAAC3BQAAegUAALcFAAC2BQAAewUAAHwFAAC4BQAAewUAALgFAAC3BQAAfAUAAH0FAAC5BQAAfAUAALkFAAC4BQAAfQUAAH4FAAC6BQAAfQUAALoFAAC5BQAAfgUAAH8FAAC7BQAAfgUAALsFAAC6BQAAfwUAAIAFAAC8BQAAfwUAALwFAAC7BQAAgAUAAIEFAAC9BQAAgAUAAL0FAAC8BQAAgQUAAIIFAAC+BQAAgQUAAL4FAAC9BQAAggUAAIMFAAC/BQAAggUAAL8FAAC+BQAAgwUAAIQFAADABQAAgwUAAMAFAAC/BQAAhAUAAIUFAADBBQAAhAUAAMEFAADABQAAhQUAAIYFAADCBQAAhQUAAMIFAADBBQAAhgUAAIcFAADDBQAAhgUAAMMFAADCBQAAhwUAAIgFAADEBQAAhwUAAMQFAADDBQAAiAUAAIkFAADFBQAAiAUAAMUFAADEBQAAiQUAAIoFAADGBQAAiQUAAMYFAADFBQAAigUAAIsFAADHBQAAigUAAMcFAADGBQAAiwUAAIwFAADIBQAAiwUAAMgFAADHBQAAjAUAAI0FAADJBQAAjAUAAMkFAADIBQAAjQUAAI4FAADKBQAAjQUAAMoFAADJBQAAjgUAAI8FAADLBQAAjgUAAMsFAADKBQAAjwUAAJAFAADMBQAAjwUAAMwFAADLBQAAkAUAAJEFAADNBQAAkAUAAM0FAADMBQAAkQUAAJIFAADOBQAAkQUAAM4FAADNBQAAkgUAAJMFAADPBQAAkgUAAM8FAADOBQAAkwUAAJQFAADQBQAAkwUAANAFAADPBQAAlAUAAJUFAADRBQAAlAUAANEFAADQBQAAlQUAAJYFAADSBQAAlQUAANIFAADRBQAAlgUAAJcFAADTBQAAlgUAANMFAADSBQAAlwUAAJgFAADUBQAAlwUAANQFAADTBQAAmAUAAJkFAADVBQAAmAUAANUFAADUBQAAmQUAAJoFAADWBQAAmQUAANYFAADVBQAAmgUAAJsFAADXBQAAmgUAANcFAADWBQAAmwUAAJwFAADYBQAAmwUAANgFAADXBQAAnAUAAJ0FAADZBQAAnAUAANkFAADYBQAAnQUAAJ4FAADaBQAAnQUAANoFAADZBQAAngUAAJ8FAADbBQAAngUAANsFAADaBQAAoAUAAKEFAADdBQAAoAUAAN0FAADcBQAAoQUAAKIFAADeBQAAoQUAAN4FAADdBQAAogUAAKMFAADfBQAAogUAAN8FAADeBQAAowUAAKQFAADgBQAAowUAAOAFAADfBQAApAUAAKUFAADhBQAApAUAAOEFAADgBQAApQUAAKYFAADiBQAApQUAAOIFAADhBQAApgUAAKcFAADjBQAApgUAAOMFAADiBQAApwUAAKgFAADkBQAApwUAAOQFAADjBQAAqAUAAKkFAADlBQAAqAUAAOUFAADkBQAAqQUAAKoFAADmBQAAqQUAAOYFAADlBQAAqgUAAKsFAADnBQAAqgUAAOcFAADmBQAAqwUAAKwFAADoBQAAqwUAAOgFAADnBQAArAUAAK0FAADpBQAArAUAAOkFAADoBQAArQUAAK4FAADqBQAArQUAAOoFAADpBQAArgUAAK8FAADrBQAArgUAAOsFAADqBQAArwUAALAFAADsBQAArwUAAOwFAADrBQAAsAUAALEFAADtBQAAsAUAAO0FAADsBQAAsQUAALIFAADuBQAAsQUAAO4FAADtBQAAsgUAALMFAADvBQAAsgUAAO8FAADuBQAAswUAALQFAADwBQAAswUAAPAFAADvBQAAtAUAALUFAADxBQAAtAUAAPEFAADwBQAAtQUAALYFAADyBQAAtQUAAPIFAADxBQAAtgUAALcFAADzBQAAtgUAAPMFAADyBQAAtwUAALgFAAD0BQAAtwUAAPQFAADzBQAAuAUAALkFAAD1BQAAuAUAAPUFAAD0BQAAuQUAALoFAAD2BQAAuQUAAPYFAAD1BQAAugUAALsFAAD3BQAAugUAAPcFAAD2BQAAuwUAALwFAAD4BQAAuwUAAPgFAAD3BQAAvAUAAL0FAAD5BQAAvAUAAPkFAAD4BQAAvQUAAL4FAAD6BQAAvQUAAPoFAAD5BQAAvgUAAL8FAAD7BQAAvgUAAPsFAAD6BQAAvwUAAMAFAAD8BQAAvwUAAPwFAAD7BQAAwAUAAMEFAAD9BQAAwAUAAP0FAAD8BQAAwQUAAMIFAAD+BQAAwQUAAP4FAAD9BQAAwgUAAMMFAAD/BQAAwgUAAP8FAAD+BQAAwwUAAMQFAAAABgAAwwUAAAAGAAD/BQAAxAUAAMUFAAABBgAAxAUAAAEGAAAABgAAxQUAAMYFAAACBgAAxQUAAAIGAAABBgAAxgUAAMcFAAADBgAAxgUAAAMGAAACBgAAxwUAAMgFAAAEBgAAxwUAAAQGAAADBgAAyAUAAMkFAAAFBgAAyAUAAAUGAAAEBgAAyQUAAMoFAAAGBgAAyQUAAAYGAAAFBgAAygUAAMsFAAAHBgAAygUAAAcGAAAGBgAAywUAAMwFAAAIBgAAywUAAAgGAAAHBgAAzAUAAM0FAAAJBgAAzAUAAAkGAAAIBgAAzQUAAM4FAAAKBgAAzQUAAAoGAAAJBgAAzgUAAM8FAAALBgAAzgUAAAsGAAAKBgAAzwUAANAFAAAMBgAAzwUAAAwGAAALBgAA0AUAANEFAAANBgAA0AUAAA0GAAAMBgAA0QUAANIFAAAOBgAA0QUAAA4GAAANBgAA0gUAANMFAAAPBgAA0gUAAA8GAAAOBgAA0wUAANQFAAAQBgAA0wUAABAGAAAPBgAA1AUAANUFAAARBgAA1AUAABEGAAAQBgAA1QUAANYFAAASBgAA1QUAABIGAAARBgAA1gUAANcFAAATBgAA1gUAABMGAAASBgAA1wUAANgFAAAUBgAA1wUAABQGAAATBgAA2AUAANkFAAAVBgAA2AUAABUGAAAUBgAA2QUAANoFAAAWBgAA2QUAABYGAAAVBgAA2gUAANsFAAAXBgAA2gUAABcGAAAWBgAA3AUAAN0FAAAZBgAA3AUAABkGAAAYBgAA3QUAAN4FAAAaBgAA3QUAABoGAAAZBgAA3gUAAN8FAAAbBgAA3gUAABsGAAAaBgAA3wUAAOAFAAAcBgAA3wUAABwGAAAbBgAA4AUAAOEFAAAdBgAA4AUAAB0GAAAcBgAA4QUAAOIFAAAeBgAA4QUAAB4GAAAdBgAA4gUAAOMFAAAfBgAA4gUAAB8GAAAeBgAA4wUAAOQFAAAgBgAA4wUAACAGAAAfBgAA5AUAAOUFAAAhBgAA5AUAACEGAAAgBgAA5QUAAOYFAAAiBgAA5QUAACIGAAAhBgAA5gUAAOcFAAAjBgAA5gUAACMGAAAiBgAA5wUAAOgFAAAkBgAA5wUAACQGAAAjBgAA6AUAAOkFAAAlBgAA6AUAACUGAAAkBgAA6QUAAOoFAAAmBgAA6QUAACYGAAAlBgAA6gUAAOsFAAAnBgAA6gUAACcGAAAmBgAA6wUAAOwFAAAoBgAA6wUAACgGAAAnBgAA7AUAAO0FAAApBgAA7AUAACkGAAAoBgAA7QUAAO4FAAAqBgAA7QUAACoGAAApBgAA7gUAAO8FAAArBgAA7gUAACsGAAAqBgAA7wUAAPAFAAAsBgAA7wUAACwGAAArBgAA8AUAAPEFAAAtBgAA8AUAAC0GAAAsBgAA8QUAAPIFAAAuBgAA8QUAAC4GAAAtBgAA8gUAAPMFAAAvBgAA8gUAAC8GAAAuBgAA8wUAAPQFAAAwBgAA8wUAADAGAAAvBgAA9AUAAPUFAAAxBgAA9AUAADEGAAAwBgAA9QUAAPYFAAAyBgAA9QUAADIGAAAxBgAA9gUAAPcFAAAzBgAA9gUAADMGAAAyBgAA9wUAAPgFAAA0BgAA9wUAADQGAAAzBgAA+AUAAPkFAAA1BgAA+AUAADUGAAA0BgAA+QUAAPoFAAA2BgAA+QUAADYGAAA1BgAA+gUAAPsFAAA3BgAA+gUAADcGAAA2BgAA+wUAAPwFAAA4BgAA+wUAADgGAAA3BgAA/AUAAP0FAAA5BgAA/AUAADkGAAA4BgAA/QUAAP4FAAA6BgAA/QUAADoGAAA5BgAA/gUAAP8FAAA7BgAA/gUAADsGAAA6BgAA/wUAAAAGAAA8BgAA/wUAADwGAAA7BgAAAAYAAAEGAAA9BgAAAAYAAD0GAAA8BgAAAQYAAAIGAAA+BgAAAQYAAD4GAAA9BgAAAgYAAAMGAAA/BgAAAgYAAD8GAAA+BgAAAwYAAAQGAABABgAAAwYAAEAGAAA/BgAABAYAAAUGAABBBgAABAYAAEEGAABABgAABQYAAAYGAABCBgAABQYAAEIGAABBBgAABgYAAAcGAABDBgAABgYAAEMGAABCBgAABwYAAAgGAABEBgAABwYAAEQGAABDBgAACAYAAAkGAABFBgAACAYAAEUGAABEBgAACQYAAAoGAABGBgAACQYAAEYGAABFBgAACgYAAAsGAABHBgAACgYAAEcGAABGBgAACwYAAAwGAABIBgAACwYAAEgGAABHBgAADAYAAA0GAABJBgAADAYAAEkGAABIBgAADQYAAA4GAABKBgAADQYAAEoGAABJBgAADgYAAA8GAABLBgAADgYAAEsGAABKBgAADwYAABAGAABMBgAADwYAAEwGAABLBgAAEAYAABEGAABNBgAAEAYAAE0GAABMBgAAEQYAABIGAABOBgAAEQYAAE4GAABNBgAAEgYAABMGAABPBgAAEgYAAE8GAABOBgAAEwYAABQGAABQBgAAEwYAAFAGAABPBgAAFAYAABUGAABRBgAAFAYAAFEGAABQBgAAFQYAABYGAABSBgAAFQYAAFIGAABRBgAAFgYAABcGAABTBgAAFgYAAFMGAABSBgAAGAYAABkGAABVBgAAGAYAAFUGAABUBgAAGQYAABoGAABWBgAAGQYAAFYGAABVBgAAGgYAABsGAABXBgAAGgYAAFcGAABWBgAAGwYAABwGAABYBgAAGwYAAFgGAABXBgAAHAYAAB0GAABZBgAAHAYAAFkGAABYBgAAHQYAAB4GAABaBgAAHQYAAFoGAABZBgAAHgYAAB8GAABbBgAAHgYAAFsGAABaBgAAHwYAACAGAABcBgAAHwYAAFwGAABbBgAAIAYAACEGAABdBgAAIAYAAF0GAABcBgAAIQYAACIGAABeBgAAIQYAAF4GAABdBgAAIgYAACMGAABfBgAAIgYAAF8GAABeBgAAIwYAACQGAABgBgAAIwYAAGAGAABfBgAAJAYAACUGAABhBgAAJAYAAGEGAABgBgAAJQYAACYGAABiBgAAJQYAAGIGAABhBgAAJgYAACcGAABjBgAAJgYAAGMGAABiBgAAJwYAACgGAABkBgAAJwYAAGQGAABjBgAAKAYAACkGAABlBgAAKAYAAGUGAABkBgAAKQYAACoGAABmBgAAKQYAAGYGAABlBgAAKgYAACsGAABnBgAAKgYAAGcGAABmBgAAKwYAACwGAABoBgAAKwYAAGgGAABnBgAALAYAAC0GAABpBgAALAYAAGkGAABoBgAALQYAAC4GAABqBgAALQYAAGoGAABpBgAALgYAAC8GAABrBgAALgYAAGsGAABqBgAALwYAADAGAABsBgAALwYAAGwGAABrBgAAMAYAADEGAABtBgAAMAYAAG0GAABsBgAAMQYAADIGAABuBgAAMQYAAG4GAABtBgAAMgYAADMGAABvBgAAMgYAAG8GAABuBgAAMwYAADQGAABwBgAAMwYAAHAGAABvBgAANAYAADUGAABxBgAANAYAAHEGAABwBgAANQYAADYGAAByBgAANQYAAHIGAABxBgAANgYAADcGAABzBgAANgYAAHMGAAByBgAANwYAADgGAAB0BgAANwYAAHQGAABzBgAAOAYAADkGAAB1BgAAOAYAAHUGAAB0BgAAOQYAADoGAAB2BgAAOQYAAHYGAAB1BgAAOgYAADsGAAB3BgAAOgYAAHcGAAB2BgAAOwYAADwGAAB4BgAAOwYAAHgGAAB3BgAAPAYAAD0GAAB5BgAAPAYAAHkGAAB4BgAAPQYAAD4GAAB6BgAAPQYAAHoGAAB5BgAAPgYAAD8GAAB7BgAAPgYAAHsGAAB6BgAAPwYAAEAGAAB8BgAAPwYAAHwGAAB7BgAAQAYAAEEGAAB9BgAAQAYAAH0GAAB8BgAAQQYAAEIGAAB+BgAAQQYAAH4GAAB9BgAAQgYAAEMGAAB/BgAAQgYAAH8GAAB+BgAAQwYAAEQGAACABgAAQwYAAIAGAAB/BgAARAYAAEUGAACBBgAARAYAAIEGAACABgAARQYAAEYGAACCBgAARQYAAIIGAACBBgAARgYAAEcGAACDBgAARgYAAIMGAACCBgAARwYAAEgGAACEBgAARwYAAIQGAACDBgAASAYAAEkGAACFBgAASAYAAIUGAACEBgAASQYAAEoGAACGBgAASQYAAIYGAACFBgAASgYAAEsGAACHBgAASgYAAIcGAACGBgAASwYAAEwGAACIBgAASwYAAIgGAACHBgAATAYAAE0GAACJBgAATAYAAIkGAACIBgAATQYAAE4GAACKBgAATQYAAIoGAACJBgAATgYAAE8GAACLBgAATgYAAIsGAACKBgAATwYAAFAGAACMBgAATwYAAIwGAACLBgAAUAYAAFEGAACNBgAAUAYAAI0GAACMBgAAUQYAAFIGAACOBgAAUQYAAI4GAACNBgAAUgYAAFMGAACPBgAAUgYAAI8GAACOBgAAVAYAAFUGAACRBgAAVAYAAJEGAACQBgAAVQYAAFYGAACSBgAAVQYAAJIGAACRBgAAVgYAAFcGAACTBgAAVgYAAJMGAACSBgAAVwYAAFgGAACUBgAAVwYAAJQGAACTBgAAWAYAAFkGAACVBgAAWAYAAJUGAACUBgAAWQYAAFoGAACWBgAAWQYAAJYGAACVBgAAWgYAAFsGAACXBgAAWgYAAJcGAACWBgAAWwYAAFwGAACYBgAAWwYAAJgGAACXBgAAXAYAAF0GAACZBgAAXAYAAJkGAACYBgAAXQYAAF4GAACaBgAAXQYAAJoGAACZBgAAXgYAAF8GAACbBgAAXgYAAJsGAACaBgAAXwYAAGAGAACcBgAAXwYAAJwGAACbBgAAYAYAAGEGAACdBgAAYAYAAJ0GAACcBgAAYQYAAGIGAACeBgAAYQYAAJ4GAACdBgAAYgYAAGMGAACfBgAAYgYAAJ8GAACeBgAAYwYAAGQGAACgBgAAYwYAAKAGAACfBgAAZAYAAGUGAAChBgAAZAYAAKEGAACgBgAAZQYAAGYGAACiBgAAZQYAAKIGAAChBgAAZgYAAGcGAACjBgAAZgYAAKMGAACiBgAAZwYAAGgGAACkBgAAZwYAAKQGAACjBgAAaAYAAGkGAAClBgAAaAYAAKUGAACkBgAAaQYAAGoGAACmBgAAaQYAAKYGAAClBgAAagYAAGsGAACnBgAAagYAAKcGAACmBgAAawYAAGwGAACoBgAAawYAAKgGAACnBgAAbAYAAG0GAACpBgAAbAYAAKkGAACoBgAAbQYAAG4GAACqBgAAbQYAAKoGAACpBgAAbgYAAG8GAACrBgAAbgYAAKsGAACqBgAAbwYAAHAGAACsBgAAbwYAAKwGAACrBgAAcAYAAHEGAACtBgAAcAYAAK0GAACsBgAAcQYAAHIGAACuBgAAcQYAAK4GAACtBgAAcgYAAHMGAACvBgAAcgYAAK8GAACuBgAAcwYAAHQGAACwBgAAcwYAALAGAACvBgAAdAYAAHUGAACxBgAAdAYAALEGAACwBgAAdQYAAHYGAACyBgAAdQYAALIGAACxBgAAdgYAAHcGAACzBgAAdgYAALMGAACyBgAAdwYAAHgGAAC0BgAAdwYAALQGAACzBgAAeAYAAHkGAAC1BgAAeAYAALUGAAC0BgAAeQYAAHoGAAC2BgAAeQYAALYGAAC1BgAAegYAAHsGAAC3BgAAegYAALcGAAC2BgAAewYAAHwGAAC4BgAAewYAALgGAAC3BgAAfAYAAH0GAAC5BgAAfAYAALkGAAC4BgAAfQYAAH4GAAC6BgAAfQYAALoGAAC5BgAAfgYAAH8GAAC7BgAAfgYAALsGAAC6BgAAfwYAAIAGAAC8BgAAfwYAALwGAAC7BgAAgAYAAIEGAAC9BgAAgAYAAL0GAAC8BgAAgQYAAIIGAAC+BgAAgQYAAL4GAAC9BgAAggYAAIMGAAC/BgAAggYAAL8GAAC+BgAAgwYAAIQGAADABgAAgwYAAMAGAAC/BgAAhAYAAIUGAADBBgAAhAYAAMEGAADABgAAhQYAAIYGAADCBgAAhQYAAMIGAADBBgAAhgYAAIcGAADDBgAAhgYAAMMGAADCBgAAhwYAAIgGAADEBgAAhwYAAMQGAADDBgAAiAYAAIkGAADFBgAAiAYAAMUGAADEBgAAiQYAAIoGAADGBgAAiQYAAMYGAADFBgAAigYAAIsGAADHBgAAigYAAMcGAADGBgAAiwYAAIwGAADIBgAAiwYAAMgGAADHBgAAjAYAAI0GAADJBgAAjAYAAMkGAADIBgAAjQYAAI4GAADKBgAAjQYAAMoGAADJBgAAjgYAAI8GAADLBgAAjgYAAMsGAADKBgAAkAYAAJEGAADNBgAAkAYAAM0GAADMBgAAkQYAAJIGAADOBgAAkQYAAM4GAADNBgAAkgYAAJMGAADPBgAAkgYAAM8GAADOBgAAkwYAAJQGAADQBgAAkwYAANAGAADPBgAAlAYAAJUGAADRBgAAlAYAANEGAADQBgAAlQYAAJYGAADSBgAAlQYAANIGAADRBgAAlgYAAJcGAADTBgAAlgYAANMGAADSBgAAlwYAAJgGAADUBgAAlwYAANQGAADTBgAAmAYAAJkGAADVBgAAmAYAANUGAADUBgAAmQYAAJoGAADWBgAAmQYAANYGAADVBgAAmgYAAJsGAADXBgAAmgYAANcGAADWBgAAmwYAAJwGAADYBgAAmwYAANgGAADXBgAAnAYAAJ0GAADZBgAAnAYAANkGAADYBgAAnQYAAJ4GAADaBgAAnQYAANoGAADZBgAAngYAAJ8GAADbBgAAngYAANsGAADaBgAAnwYAAKAGAADcBgAAnwYAANwGAADbBgAAoAYAAKEGAADdBgAAoAYAAN0GAADcBgAAoQYAAKIGAADeBgAAoQYAAN4GAADdBgAAogYAAKMGAADfBgAAogYAAN8GAADeBgAAowYAAKQGAADgBgAAowYAAOAGAADfBgAApAYAAKUGAADhBgAApAYAAOEGAADgBgAApQYAAKYGAADiBgAApQYAAOIGAADhBgAApgYAAKcGAADjBgAApgYAAOMGAADiBgAApwYAAKgGAADkBgAApwYAAOQGAADjBgAAqAYAAKkGAADlBgAAqAYAAOUGAADkBgAAqQYAAKoGAADmBgAAqQYAAOYGAADlBgAAqgYAAKsGAADnBgAAqgYAAOcGAADmBgAAqwYAAKwGAADoBgAAqwYAAOgGAADnBgAArAYAAK0GAADpBgAArAYAAOkGAADoBgAArQYAAK4GAADqBgAArQYAAOoGAADpBgAArgYAAK8GAADrBgAArgYAAOsGAADqBgAArwYAALAGAADsBgAArwYAAOwGAADrBgAAsAYAALEGAADtBgAAsAYAAO0GAADsBgAAsQYAALIGAADuBgAAsQYAAO4GAADtBgAAsgYAALMGAADvBgAAsgYAAO8GAADuBgAAswYAALQGAADwBgAAswYAAPAGAADvBgAAtAYAALUGAADxBgAAtAYAAPEGAADwBgAAtQYAALYGAADyBgAAtQYAAPIGAADxBgAAtgYAALcGAADzBgAAtgYAAPMGAADyBgAAtwYAALgGAAD0BgAAtwYAAPQGAADzBgAAuAYAALkGAAD1BgAAuAYAAPUGAAD0BgAAuQYAALoGAAD2BgAAuQYAAPYGAAD1BgAAugYAALsGAAD3BgAAugYAAPcGAAD2BgAAuwYAALwGAAD4BgAAuwYAAPgGAAD3BgAAvAYAAL0GAAD5BgAAvAYAAPkGAAD4BgAAvQYAAL4GAAD6BgAAvQYAAPoGAAD5BgAAvgYAAL8GAAD7BgAAvgYAAPsGAAD6BgAAvwYAAMAGAAD8BgAAvwYAAPwGAAD7BgAAwAYAAMEGAAD9BgAAwAYAAP0GAAD8BgAAwQYAAMIGAAD+BgAAwQYAAP4GAAD9BgAAwgYAAMMGAAD/BgAAwgYAAP8GAAD+BgAAwwYAAMQGAAAABwAAwwYAAAAHAAD/BgAAxAYAAMUGAAABBwAAxAYAAAEHAAAABwAAxQYAAMYGAAACBwAAxQYAAAIHAAABBwAAxgYAAMcGAAADBwAAxgYAAAMHAAACBwAAxwYAAMgGAAAEBwAAxwYAAAQHAAADBwAAyAYAAMkGAAAFBwAAyAYAAAUHAAAEBwAAyQYAAMoGAAAGBwAAyQYAAAYHAAAFBwAAygYAAMsGAAAHBwAAygYAAAcHAAAGBwAAzAYAAM0GAAAJBwAAzAYAAAkHAAAIBwAAzQYAAM4GAAAKBwAAzQYAAAoHAAAJBwAAzgYAAM8GAAALBwAAzgYAAAsHAAAKBwAAzwYAANAGAAAMBwAAzwYAAAwHAAALBwAA0AYAANEGAAANBwAA0AYAAA0HAAAMBwAA0QYAANIGAAAOBwAA0QYAAA4HAAANBwAA0gYAANMGAAAPBwAA0gYAAA8HAAAOBwAA0wYAANQGAAAQBwAA0wYAABAHAAAPBwAA1AYAANUGAAARBwAA1AYAABEHAAAQBwAA1QYAANYGAAASBwAA1QYAABIHAAARBwAA1gYAANcGAAATBwAA1gYAABMHAAASBwAA1wYAANgGAAAUBwAA1wYAABQHAAATBwAA2AYAANkGAAAVBwAA2AYAABUHAAAUBwAA2QYAANoGAAAWBwAA2QYAABYHAAAVBwAA2gYAANsGAAAXBwAA2gYAABcHAAAWBwAA2wYAANwGAAAYBwAA2wYAABgHAAAXBwAA3AYAAN0GAAAZBwAA3AYAABkHAAAYBwAA3QYAAN4GAAAaBwAA3QYAABoHAAAZBwAA3gYAAN8GAAAbBwAA3gYAABsHAAAaBwAA3wYAAOAGAAAcBwAA3wYAABwHAAAbBwAA4AYAAOEGAAAdBwAA4AYAAB0HAAAcBwAA4QYAAOIGAAAeBwAA4QYAAB4HAAAdBwAA4gYAAOMGAAAfBwAA4gYAAB8HAAAeBwAA4wYAAOQGAAAgBwAA4wYAACAHAAAfBwAA5AYAAOUGAAAhBwAA5AYAACEHAAAgBwAA5QYAAOYGAAAiBwAA5QYAACIHAAAhBwAA5gYAAOcGAAAjBwAA5gYAACMHAAAiBwAA5wYAAOgGAAAkBwAA5wYAACQHAAAjBwAA6AYAAOkGAAAlBwAA6AYAACUHAAAkBwAA6QYAAOoGAAAmBwAA6QYAACYHAAAlBwAA6gYAAOsGAAAnBwAA6gYAACcHAAAmBwAA6wYAAOwGAAAoBwAA6wYAACgHAAAnBwAA7AYAAO0GAAApBwAA7AYAACkHAAAoBwAA7QYAAO4GAAAqBwAA7QYAACoHAAApBwAA7gYAAO8GAAArBwAA7gYAACsHAAAqBwAA7wYAAPAGAAAsBwAA7wYAACwHAAArBwAA8AYAAPEGAAAtBwAA8AYAAC0HAAAsBwAA8QYAAPIGAAAuBwAA8QYAAC4HAAAtBwAA8gYAAPMGAAAvBwAA8gYAAC8HAAAuBwAA8wYAAPQGAAAwBwAA8wYAADAHAAAvBwAA9AYAAPUGAAAxBwAA9AYAADEHAAAwBwAA9QYAAPYGAAAyBwAA9QYAADIHAAAxBwAA9gYAAPcGAAAzBwAA9gYAADMHAAAyBwAA9wYAAPgGAAA0BwAA9wYAADQHAAAzBwAA+AYAAPkGAAA1BwAA+AYAADUHAAA0BwAA+QYAAPoGAAA2BwAA+QYAADYHAAA1BwAA+gYAAPsGAAA3BwAA+gYAADcHAAA2BwAA+wYAAPwGAAA4BwAA+wYAADgHAAA3BwAA/AYAAP0GAAA5BwAA/AYAADkHAAA4BwAA/QYAAP4GAAA6BwAA/QYAADoHAAA5BwAA/gYAAP8GAAA7BwAA/gYAADsHAAA6BwAA/wYAAAAHAAA8BwAA/wYAADwHAAA7BwAAAAcAAAEHAAA9BwAAAAcAAD0HAAA8BwAAAQcAAAIHAAA+BwAAAQcAAD4HAAA9BwAAAgcAAAMHAAA/BwAAAgcAAD8HAAA+BwAAAwcAAAQHAABABwAAAwcAAEAHAAA/BwAABAcAAAUHAABBBwAABAcAAEEHAABABwAABQcAAAYHAABCBwAABQcAAEIHAABBBwAABgcAAAcHAABDBwAABgcAAEMHAABCBwAACAcAAAkHAABFBwAACAcAAEUHAABEBwAACQcAAAoHAABGBwAACQcAAEYHAABFBwAACgcAAAsHAABHBwAACgcAAEcHAABGBwAACwcAAAwHAABIBwAACwcAAEgHAABHBwAADAcAAA0HAABJBwAADAcAAEkHAABIBwAADQcAAA4HAABKBwAADQcAAEoHAABJBwAADgcAAA8HAABLBwAADgcAAEsHAABKBwAADwcAABAHAABMBwAADwcAAEwHAABLBwAAEAcAABEHAABNBwAAEAcAAE0HAABMBwAAEQcAABIHAABOBwAAEQcAAE4HAABNBwAAEgcAABMHAABPBwAAEgcAAE8HAABOBwAAEwcAABQHAABQBwAAEwcAAFAHAABPBwAAFAcAABUHAABRBwAAFAcAAFEHAABQBwAAFQcAABYHAABSBwAAFQcAAFIHAABRBwAAFgcAABcHAABTBwAAFgcAAFMHAABSBwAAFwcAABgHAABUBwAAFwcAAFQHAABTBwAAGAcAABkHAABVBwAAGAcAAFUHAABUBwAAGQcAABoHAABWBwAAGQcAAFYHAABVBwAAGgcAABsHAABXBwAAGgcAAFcHAABWBwAAGwcAABwHAABYBwAAGwcAAFgHAABXBwAAHAcAAB0HAABZBwAAHAcAAFkHAABYBwAAHQcAAB4HAABaBwAAHQcAAFoHAABZBwAAHgcAAB8HAABbBwAAHgcAAFsHAABaBwAAHwcAACAHAABcBwAAHwcAAFwHAABbBwAAIAcAACEHAABdBwAAIAcAAF0HAABcBwAAIQcAACIHAABeBwAAIQcAAF4HAABdBwAAIgcAACMHAABfBwAAIgcAAF8HAABeBwAAIwcAACQHAABgBwAAIwcAAGAHAABfBwAAJAcAACUHAABhBwAAJAcAAGEHAABgBwAAJQcAACYHAABiBwAAJQcAAGIHAABhBwAAJgcAACcHAABjBwAAJgcAAGMHAABiBwAAJwcAACgHAABkBwAAJwcAAGQHAABjBwAAKAcAACkHAABlBwAAKAcAAGUHAABkBwAAKQcAACoHAABmBwAAKQcAAGYHAABlBwAAKgcAACsHAABnBwAAKgcAAGcHAABmBwAAKwcAACwHAABoBwAAKwcAAGgHAABnBwAALAcAAC0HAABpBwAALAcAAGkHAABoBwAALQcAAC4HAABqBwAALQcAAGoHAABpBwAALgcAAC8HAABrBwAALgcAAGsHAABqBwAALwcAADAHAABsBwAALwcAAGwHAABrBwAAMAcAADEHAABtBwAAMAcAAG0HAABsBwAAMQcAADIHAABuBwAAMQcAAG4HAABtBwAAMgcAADMHAABvBwAAMgcAAG8HAABuBwAAMwcAADQHAABwBwAAMwcAAHAHAABvBwAANAcAADUHAABxBwAANAcAAHEHAABwBwAANQcAADYHAAByBwAANQcAAHIHAABxBwAANgcAADcHAABzBwAANgcAAHMHAAByBwAANwcAADgHAAB0BwAANwcAAHQHAABzBwAAOAcAADkHAAB1BwAAOAcAAHUHAAB0BwAAOQcAADoHAAB2BwAAOQcAAHYHAAB1BwAAOgcAADsHAAB3BwAAOgcAAHcHAAB2BwAAOwcAADwHAAB4BwAAOwcAAHgHAAB3BwAAPAcAAD0HAAB5BwAAPAcAAHkHAAB4BwAAPQcAAD4HAAB6BwAAPQcAAHoHAAB5BwAAPgcAAD8HAAB7BwAAPgcAAHsHAAB6BwAAPwcAAEAHAAB8BwAAPwcAAHwHAAB7BwAAQAcAAEEHAAB9BwAAQAcAAH0HAAB8BwAAQQcAAEIHAAB+BwAAQQcAAH4HAAB9BwAAQgcAAEMHAAB/BwAAQgcAAH8HAAB+BwAARAcAAEUHAACBBwAARAcAAIEHAACABwAARQcAAEYHAACCBwAARQcAAIIHAACBBwAARgcAAEcHAACDBwAARgcAAIMHAACCBwAARwcAAEgHAACEBwAARwcAAIQHAACDBwAASAcAAEkHAACFBwAASAcAAIUHAACEBwAASQcAAEoHAACGBwAASQcAAIYHAACFBwAASgcAAEsHAACHBwAASgcAAIcHAACGBwAASwcAAEwHAACIBwAASwcAAIgHAACHBwAATAcAAE0HAACJBwAATAcAAIkHAACIBwAATQcAAE4HAACKBwAATQcAAIoHAACJBwAATgcAAE8HAACLBwAATgcAAIsHAACKBwAATwcAAFAHAACMBwAATwcAAIwHAACLBwAAUAcAAFEHAACNBwAAUAcAAI0HAACMBwAAUQcAAFIHAACOBwAAUQcAAI4HAACNBwAAUgcAAFMHAACPBwAAUgcAAI8HAACOBwAAUwcAAFQHAACQBwAAUwcAAJAHAACPBwAAVAcAAFUHAACRBwAAVAcAAJEHAACQBwAAVQcAAFYHAACSBwAAVQcAAJIHAACRBwAAVgcAAFcHAACTBwAAVgcAAJMHAACSBwAAVwcAAFgHAACUBwAAVwcAAJQHAACTBwAAWAcAAFkHAACVBwAAWAcAAJUHAACUBwAAWQcAAFoHAACWBwAAWQcAAJYHAACVBwAAWgcAAFsHAACXBwAAWgcAAJcHAACWBwAAWwcAAFwHAACYBwAAWwcAAJgHAACXBwAAXAcAAF0HAACZBwAAXAcAAJkHAACYBwAAXQcAAF4HAACaBwAAXQcAAJoHAACZBwAAXgcAAF8HAACbBwAAXgcAAJsHAACaBwAAXwcAAGAHAACcBwAAXwcAAJwHAACbBwAAYAcAAGEHAACdBwAAYAcAAJ0HAACcBwAAYQcAAGIHAACeBwAAYQcAAJ4HAACdBwAAYgcAAGMHAACfBwAAYgcAAJ8HAACeBwAAYwcAAGQHAACgBwAAYwcAAKAHAACfBwAAZAcAAGUHAAChBwAAZAcAAKEHAACgBwAAZQcAAGYHAACiBwAAZQcAAKIHAAChBwAAZgcAAGcHAACjBwAAZgcAAKMHAACiBwAAZwcAAGgHAACkBwAAZwcAAKQHAACjBwAAaAcAAGkHAAClBwAAaAcAAKUHAACkBwAAaQcAAGoHAACmBwAAaQcAAKYHAAClBwAAagcAAGsHAACnBwAAagcAAKcHAACmBwAAawcAAGwHAACoBwAAawcAAKgHAACnBwAAbAcAAG0HAACpBwAAbAcAAKkHAACoBwAAbQcAAG4HAACqBwAAbQcAAKoHAACpBwAAbgcAAG8HAACrBwAAbgcAAKsHAACqBwAAbwcAAHAHAACsBwAAbwcAAKwHAACrBwAAcAcAAHEHAACtBwAAcAcAAK0HAACsBwAAcQcAAHIHAACuBwAAcQcAAK4HAACtBwAAcgcAAHMHAACvBwAAcgcAAK8HAACuBwAAcwcAAHQHAACwBwAAcwcAALAHAACvBwAAdAcAAHUHAACxBwAAdAcAALEHAACwBwAAdQcAAHYHAACyBwAAdQcAALIHAACxBwAAdgcAAHcHAACzBwAAdgcAALMHAACyBwAAdwcAAHgHAAC0BwAAdwcAALQHAACzBwAAeAcAAHkHAAC1BwAAeAcAALUHAAC0BwAAeQcAAHoHAAC2BwAAeQcAALYHAAC1BwAAegcAAHsHAAC3BwAAegcAALcHAAC2BwAAewcAAHwHAAC4BwAAewcAALgHAAC3BwAAfAcAAH0HAAC5BwAAfAcAALkHAAC4BwAAfQcAAH4HAAC6BwAAfQcAALoHAAC5BwAAfgcAAH8HAAC7BwAAfgcAALsHAAC6BwAAgAcAAIEHAAC9BwAAgAcAAL0HAAC8BwAAgQcAAIIHAAC+BwAAgQcAAL4HAAC9BwAAggcAAIMHAAC/BwAAggcAAL8HAAC+BwAAgwcAAIQHAADABwAAgwcAAMAHAAC/BwAAhAcAAIUHAADBBwAAhAcAAMEHAADABwAAhQcAAIYHAADCBwAAhQcAAMIHAADBBwAAhgcAAIcHAADDBwAAhgcAAMMHAADCBwAAhwcAAIgHAADEBwAAhwcAAMQHAADDBwAAiAcAAIkHAADFBwAAiAcAAMUHAADEBwAAiQcAAIoHAADGBwAAiQcAAMYHAADFBwAAigcAAIsHAADHBwAAigcAAMcHAADGBwAAiwcAAIwHAADIBwAAiwcAAMgHAADHBwAAjAcAAI0HAADJBwAAjAcAAMkHAADIBwAAjQcAAI4HAADKBwAAjQcAAMoHAADJBwAAjgcAAI8HAADLBwAAjgcAAMsHAADKBwAAjwcAAJAHAADMBwAAjwcAAMwHAADLBwAAkAcAAJEHAADNBwAAkAcAAM0HAADMBwAAkQcAAJIHAADOBwAAkQcAAM4HAADNBwAAkgcAAJMHAADPBwAAkgcAAM8HAADOBwAAkwcAAJQHAADQBwAAkwcAANAHAADPBwAAlAcAAJUHAADRBwAAlAcAANEHAADQBwAAlQcAAJYHAADSBwAAlQcAANIHAADRBwAAlgcAAJcHAADTBwAAlgcAANMHAADSBwAAlwcAAJgHAADUBwAAlwcAANQHAADTBwAAmAcAAJkHAADVBwAAmAcAANUHAADUBwAAmQcAAJoHAADWBwAAmQcAANYHAADVBwAAmgcAAJsHAADXBwAAmgcAANcHAADWBwAAmwcAAJwHAADYBwAAmwcAANgHAADXBwAAnAcAAJ0HAADZBwAAnAcAANkHAADYBwAAnQcAAJ4HAADaBwAAnQcAANoHAADZBwAAngcAAJ8HAADbBwAAngcAANsHAADaBwAAnwcAAKAHAADcBwAAnwcAANwHAADbBwAAoAcAAKEHAADdBwAAoAcAAN0HAADcBwAAoQcAAKIHAADeBwAAoQcAAN4HAADdBwAAogcAAKMHAADfBwAAogcAAN8HAADeBwAAowcAAKQHAADgBwAAowcAAOAHAADfBwAApAcAAKUHAADhBwAApAcAAOEHAADgBwAApQcAAKYHAADiBwAApQcAAOIHAADhBwAApgcAAKcHAADjBwAApgcAAOMHAADiBwAApwcAAKgHAADkBwAApwcAAOQHAADjBwAAqAcAAKkHAADlBwAAqAcAAOUHAADkBwAAqQcAAKoHAADmBwAAqQcAAOYHAADlBwAAqgcAAKsHAADnBwAAqgcAAOcHAADmBwAAqwcAAKwHAADoBwAAqwcAAOgHAADnBwAArAcAAK0HAADpBwAArAcAAOkHAADoBwAArQcAAK4HAADqBwAArQcAAOoHAADpBwAArgcAAK8HAADrBwAArgcAAOsHAADqBwAArwcAALAHAADsBwAArwcAAOwHAADrBwAAsAcAALEHAADtBwAAsAcAAO0HAADsBwAAsQcAALIHAADuBwAAsQcAAO4HAADtBwAAsgcAALMHAADvBwAAsgcAAO8HAADuBwAAswcAALQHAADwBwAAswcAAPAHAADvBwAAtAcAALUHAADxBwAAtAcAAPEHAADwBwAAtQcAALYHAADyBwAAtQcAAPIHAADxBwAAtgcAALcHAADzBwAAtgcAAPMHAADyBwAAtwcAALgHAAD0BwAAtwcAAPQHAADzBwAAuAcAALkHAAD1BwAAuAcAAPUHAAD0BwAAuQcAALoHAAD2BwAAuQcAAPYHAAD1BwAAugcAALsHAAD3BwAAugcAAPcHAAD2BwAAvAcAAL0HAAD5BwAAvAcAAPkHAAD4BwAAvQcAAL4HAAD6BwAAvQcAAPoHAAD5BwAAvgcAAL8HAAD7BwAAvgcAAPsHAAD6BwAAvwcAAMAHAAD8BwAAvwcAAPwHAAD7BwAAwAcAAMEHAAD9BwAAwAcAAP0HAAD8BwAAwQcAAMIHAAD+BwAAwQcAAP4HAAD9BwAAwgcAAMMHAAD/BwAAwgcAAP8HAAD+BwAAwwcAAMQHAAAACAAAwwcAAAAIAAD/BwAAxAcAAMUHAAABCAAAxAcAAAEIAAAACAAAxQcAAMYHAAACCAAAxQcAAAIIAAABCAAAxgcAAMcHAAADCAAAxgcAAAMIAAACCAAAxwcAAMgHAAAECAAAxwcAAAQIAAADCAAAyAcAAMkHAAAFCAAAyAcAAAUIAAAECAAAyQcAAMoHAAAGCAAAyQcAAAYIAAAFCAAAygcAAMsHAAAHCAAAygcAAAcIAAAGCAAAywcAAMwHAAAICAAAywcAAAgIAAAHCAAAzAcAAM0HAAAJCAAAzAcAAAkIAAAICAAAzQcAAM4HAAAKCAAAzQcAAAoIAAAJCAAAzgcAAM8HAAALCAAAzgcAAAsIAAAKCAAAzwcAANAHAAAMCAAAzwcAAAwIAAALCAAA0AcAANEHAAANCAAA0AcAAA0IAAAMCAAA0QcAANIHAAAOCAAA0QcAAA4IAAANCAAA0gcAANMHAAAPCAAA0gcAAA8IAAAOCAAA0wcAANQHAAAQCAAA0wcAABAIAAAPCAAA1AcAANUHAAARCAAA1AcAABEIAAAQCAAA1QcAANYHAAASCAAA1QcAABIIAAARCAAA1gcAANcHAAATCAAA1gcAABMIAAASCAAA1wcAANgHAAAUCAAA1wcAABQIAAATCAAA2AcAANkHAAAVCAAA2AcAABUIAAAUCAAA2QcAANoHAAAWCAAA2QcAABYIAAAVCAAA2gcAANsHAAAXCAAA2gcAABcIAAAWCAAA2wcAANwHAAAYCAAA2wcAABgIAAAXCAAA3AcAAN0HAAAZCAAA3AcAABkIAAAYCAAA3QcAAN4HAAAaCAAA3QcAABoIAAAZCAAA3gcAAN8HAAAbCAAA3gcAABsIAAAaCAAA3wcAAOAHAAAcCAAA3wcAABwIAAAbCAAA4AcAAOEHAAAdCAAA4AcAAB0IAAAcCAAA4QcAAOIHAAAeCAAA4QcAAB4IAAAdCAAA4gcAAOMHAAAfCAAA4gcAAB8IAAAeCAAA4wcAAOQHAAAgCAAA4wcAACAIAAAfCAAA5AcAAOUHAAAhCAAA5AcAACEIAAAgCAAA5QcAAOYHAAAiCAAA5QcAACIIAAAhCAAA5gcAAOcHAAAjCAAA5gcAACMIAAAiCAAA5wcAAOgHAAAkCAAA5wcAACQIAAAjCAAA6AcAAOkHAAAlCAAA6AcAACUIAAAkCAAA6QcAAOoHAAAmCAAA6QcAACYIAAAlCAAA6gcAAOsHAAAnCAAA6gcAACcIAAAmCAAA6wcAAOwHAAAoCAAA6wcAACgIAAAnCAAA7AcAAO0HAAApCAAA7AcAACkIAAAoCAAA7QcAAO4HAAAqCAAA7QcAACoIAAApCAAA7gcAAO8HAAArCAAA7gcAACsIAAAqCAAA7wcAAPAHAAAsCAAA7wcAACwIAAArCAAA8AcAAPEHAAAtCAAA8AcAAC0IAAAsCAAA8QcAAPIHAAAuCAAA8QcAAC4IAAAtCAAA8gcAAPMHAAAvCAAA8gcAAC8IAAAuCAAA8wcAAPQHAAAwCAAA8wcAADAIAAAvCAAA9AcAAPUHAAAxCAAA9AcAADEIAAAwCAAA9QcAAPYHAAAyCAAA9QcAADIIAAAxCAAA9gcAAPcHAAAzCAAA9gcAADMIAAAyCAAA+AcAAPkHAAA1CAAA+AcAADUIAAA0CAAA+QcAAPoHAAA2CAAA+QcAADYIAAA1CAAA+gcAAPsHAAA3CAAA+gcAADcIAAA2CAAA+wcAAPwHAAA4CAAA+wcAADgIAAA3CAAA/AcAAP0HAAA5CAAA/AcAADkIAAA4CAAA/QcAAP4HAAA6CAAA/QcAADoIAAA5CAAA/gcAAP8HAAA7CAAA/gcAADsIAAA6CAAA/wcAAAAIAAA8CAAA/wcAADwIAAA7CAAAAAgAAAEIAAA9CAAAAAgAAD0IAAA8CAAAAQgAAAIIAAA+CAAAAQgAAD4IAAA9CAAAAggAAAMIAAA/CAAAAggAAD8IAAA+CAAAAwgAAAQIAABACAAAAwgAAEAIAAA/CAAABAgAAAUIAABBCAAABAgAAEEIAABACAAABQgAAAYIAABCCAAABQgAAEIIAABBCAAABggAAAcIAABDCAAABggAAEMIAABCCAAABwgAAAgIAABECAAABwgAAEQIAABDCAAACAgAAAkIAABFCAAACAgAAEUIAABECAAACQgAAAoIAABGCAAACQgAAEYIAABFCAAACggAAAsIAABHCAAACggAAEcIAABGCAAACwgAAAwIAABICAAACwgAAEgIAABHCAAADAgAAA0IAABJCAAADAgAAEkIAABICAAADQgAAA4IAABKCAAADQgAAEoIAABJCAAADggAAA8IAABLCAAADggAAEsIAABKCAAADwgAABAIAABMCAAADwgAAEwIAABLCAAAEAgAABEIAABNCAAAEAgAAE0IAABMCAAAEQgAABIIAABOCAAAEQgAAE4IAABNCAAAEggAABMIAABPCAAAEggAAE8IAABOCAAAEwgAABQIAABQCAAAEwgAAFAIAABPCAAAFAgAABUIAABRCAAAFAgAAFEIAABQCAAAFQgAABYIAABSCAAAFQgAAFIIAABRCAAAFggAABcIAABTCAAAFggAAFMIAABSCAAAFwgAABgIAABUCAAAFwgAAFQIAABTCAAAGAgAABkIAABVCAAAGAgAAFUIAABUCAAAGQgAABoIAABWCAAAGQgAAFYIAABVCAAAGggAABsIAABXCAAAGggAAFcIAABWCAAAGwgAABwIAABYCAAAGwgAAFgIAABXCAAAHAgAAB0IAABZCAAAHAgAAFkIAABYCAAAHQgAAB4IAABaCAAAHQgAAFoIAABZCAAAHggAAB8IAABbCAAAHggAAFsIAABaCAAAHwgAACAIAABcCAAAHwgAAFwIAABbCAAAIAgAACEIAABdCAAAIAgAAF0IAABcCAAAIQgAACIIAABeCAAAIQgAAF4IAABdCAAAIggAACMIAABfCAAAIggAAF8IAABeCAAAIwgAACQIAABgCAAAIwgAAGAIAABfCAAAJAgAACUIAABhCAAAJAgAAGEIAABgCAAAJQgAACYIAABiCAAAJQgAAGIIAABhCAAAJggAACcIAABjCAAAJggAAGMIAABiCAAAJwgAACgIAABkCAAAJwgAAGQIAABjCAAAKAgAACkIAABlCAAAKAgAAGUIAABkCAAAKQgAACoIAABmCAAAKQgAAGYIAABlCAAAKggAACsIAABnCAAAKggAAGcIAABmCAAAKwgAACwIAABoCAAAKwgAAGgIAABnCAAALAgAAC0IAABpCAAALAgAAGkIAABoCAAALQgAAC4IAABqCAAALQgAAGoIAABpCAAALggAAC8IAABrCAAALggAAGsIAABqCAAALwgAADAIAABsCAAALwgAAGwIAABrCAAAMAgAADEIAABtCAAAMAgAAG0IAABsCAAAMQgAADIIAABuCAAAMQgAAG4IAABtCAAAMggAADMIAABvCAAAMggAAG8IAABuCAAANAgAADUIAABxCAAANAgAAHEIAABwCAAANQgAADYIAAByCAAANQgAAHIIAABxCAAANggAADcIAABzCAAANggAAHMIAAByCAAANwgAADgIAAB0CAAANwgAAHQIAABzCAAAOAgAADkIAAB1CAAAOAgAAHUIAAB0CAAAOQgAADoIAAB2CAAAOQgAAHYIAAB1CAAAOggAADsIAAB3CAAAOggAAHcIAAB2CAAAOwgAADwIAAB4CAAAOwgAAHgIAAB3CAAAPAgAAD0IAAB5CAAAPAgAAHkIAAB4CAAAPQgAAD4IAAB6CAAAPQgAAHoIAAB5CAAAPggAAD8IAAB7CAAAPggAAHsIAAB6CAAAPwgAAEAIAAB8CAAAPwgAAHwIAAB7CAAAQAgAAEEIAAB9CAAAQAgAAH0IAAB8CAAAQQgAAEIIAAB+CAAAQQgAAH4IAAB9CAAAQggAAEMIAAB/CAAAQggAAH8IAAB+CAAAQwgAAEQIAACACAAAQwgAAIAIAAB/CAAARAgAAEUIAACBCAAARAgAAIEIAACACAAARQgAAEYIAACCCAAARQgAAIIIAACBCAAARggAAEcIAACDCAAARggAAIMIAACCCAAARwgAAEgIAACECAAARwgAAIQIAACDCAAASAgAAEkIAACFCAAASAgAAIUIAACECAAASQgAAEoIAACGCAAASQgAAIYIAACFCAAASggAAEsIAACHCAAASggAAIcIAACGCAAASwgAAEwIAACICAAASwgAAIgIAACHCAAATAgAAE0IAACJCAAATAgAAIkIAACICAAATQgAAE4IAACKCAAATQgAAIoIAACJCAAATggAAE8IAACLCAAATggAAIsIAACKCAAATwgAAFAIAACMCAAATwgAAIwIAACLCAAAUAgAAFEIAACNCAAAUAgAAI0IAACMCAAAUQgAAFIIAACOCAAAUQgAAI4IAACNCAAAUggAAFMIAACPCAAAUggAAI8IAACOCAAAUwgAAFQIAACQCAAAUwgAAJAIAACPCAAAVAgAAFUIAACRCAAAVAgAAJEIAACQCAAAVQgAAFYIAACSCAAAVQgAAJIIAACRCAAAVggAAFcIAACTCAAAVggAAJMIAACSCAAAVwgAAFgIAACUCAAAVwgAAJQIAACTCAAAWAgAAFkIAACVCAAAWAgAAJUIAACUCAAAWQgAAFoIAACWCAAAWQgAAJYIAACVCAAAWggAAFsIAACXCAAAWggAAJcIAACWCAAAWwgAAFwIAACYCAAAWwgAAJgIAACXCAAAXAgAAF0IAACZCAAAXAgAAJkIAACYCAAAXQgAAF4IAACaCAAAXQgAAJoIAACZCAAAXggAAF8IAACbCAAAXggAAJsIAACaCAAAXwgAAGAIAACcCAAAXwgAAJwIAACbCAAAYAgAAGEIAACdCAAAYAgAAJ0IAACcCAAAYQgAAGIIAACeCAAAYQgAAJ4IAACdCAAAYggAAGMIAACfCAAAYggAAJ8IAACeCAAAYwgAAGQIAACgCAAAYwgAAKAIAACfCAAAZAgAAGUIAAChCAAAZAgAAKEIAACgCAAAZQgAAGYIAACiCAAAZQgAAKIIAAChCAAAZggAAGcIAACjCAAAZggAAKMIAACiCAAAZwgAAGgIAACkCAAAZwgAAKQIAACjCAAAaAgAAGkIAAClCAAAaAgAAKUIAACkCAAAaQgAAGoIAACmCAAAaQgAAKYIAAClCAAAaggAAGsIAACnCAAAaggAAKcIAACmCAAAawgAAGwIAACoCAAAawgAAKgIAACnCAAAbAgAAG0IAACpCAAAbAgAAKkIAACoCAAAbQgAAG4IAACqCAAAbQgAAKoIAACpCAAAbggAAG8IAACrCAAAbggAAKsIAACqCAAAcAgAAHEIAACtCAAAcAgAAK0IAACsCAAAcQgAAHIIAACuCAAAcQgAAK4IAACtCAAAcggAAHMIAACvCAAAcggAAK8IAACuCAAAcwgAAHQIAACwCAAAcwgAALAIAACvCAAAdAgAAHUIAACxCAAAdAgAALEIAACwCAAAdQgAAHYIAACyCAAAdQgAALIIAACxCAAAdggAAHcIAACzCAAAdggAALMIAACyCAAAdwgAAHgIAAC0CAAAdwgAALQIAACzCAAAeAgAAHkIAAC1CAAAeAgAALUIAAC0CAAAeQgAAHoIAAC2CAAAeQgAALYIAAC1CAAAeggAAHsIAAC3CAAAeggAALcIAAC2CAAAewgAAHwIAAC4CAAAewgAALgIAAC3CAAAfAgAAH0IAAC5CAAAfAgAALkIAAC4CAAAfQgAAH4IAAC6CAAAfQgAALoIAAC5CAAAfggAAH8IAAC7CAAAfggAALsIAAC6CAAAfwgAAIAIAAC8CAAAfwgAALwIAAC7CAAAgAgAAIEIAAC9CAAAgAgAAL0IAAC8CAAAgQgAAIIIAAC+CAAAgQgAAL4IAAC9CAAAgggAAIMIAAC/CAAAgggAAL8IAAC+CAAAgwgAAIQIAADACAAAgwgAAMAIAAC/CAAAhAgAAIUIAADBCAAAhAgAAMEIAADACAAAhQgAAIYIAADCCAAAhQgAAMIIAADBCAAAhggAAIcIAADDCAAAhggAAMMIAADCCAAAhwgAAIgIAADECAAAhwgAAMQIAADDCAAAiAgAAIkIAADFCAAAiAgAAMUIAADECAAAiQgAAIoIAADGCAAAiQgAAMYIAADFCAAAiggAAIsIAADHCAAAiggAAMcIAADGCAAAiwgAAIwIAADICAAAiwgAAMgIAADHCAAAjAgAAI0IAADJCAAAjAgAAMkIAADICAAAjQgAAI4IAADKCAAAjQgAAMoIAADJCAAAjggAAI8IAADLCAAAjggAAMsIAADKCAAAjwgAAJAIAADMCAAAjwgAAMwIAADLCAAAkAgAAJEIAADNCAAAkAgAAM0IAADMCAAAkQgAAJIIAADOCAAAkQgAAM4IAADNCAAAkggAAJMIAADPCAAAkggAAM8IAADOCAAAkwgAAJQIAADQCAAAkwgAANAIAADPCAAAlAgAAJUIAADRCAAAlAgAANEIAADQCAAAlQgAAJYIAADSCAAAlQgAANIIAADRCAAAlggAAJcIAADTCAAAlggAANMIAADSCAAAlwgAAJgIAADUCAAAlwgAANQIAADTCAAAmAgAAJkIAADVCAAAmAgAANUIAADUCAAAmQgAAJoIAADWCAAAmQgAANYIAADVCAAAmggAAJsIAADXCAAAmggAANcIAADWCAAAmwgAAJwIAADYCAAAmwgAANgIAADXCAAAnAgAAJ0IAADZCAAAnAgAANkIAADYCAAAnQgAAJ4IAADaCAAAnQgAANoIAADZCAAAnggAAJ8IAADbCAAAnggAANsIAADaCAAAnwgAAKAIAADcCAAAnwgAANwIAADbCAAAoAgAAKEIAADdCAAAoAgAAN0IAADcCAAAoQgAAKIIAADeCAAAoQgAAN4IAADdCAAAoggAAKMIAADfCAAAoggAAN8IAADeCAAAowgAAKQIAADgCAAAowgAAOAIAADfCAAApAgAAKUIAADhCAAApAgAAOEIAADgCAAApQgAAKYIAADiCAAApQgAAOIIAADhCAAApggAAKcIAADjCAAApggAAOMIAADiCAAApwgAAKgIAADkCAAApwgAAOQIAADjCAAAqAgAAKkIAADlCAAAqAgAAOUIAADkCAAAqQgAAKoIAADmCAAAqQgAAOYIAADlCAAAqggAAKsIAADnCAAAqggAAOcIAADmCAAArAgAAK0IAADpCAAArAgAAOkIAADoCAAArQgAAK4IAADqCAAArQgAAOoIAADpCAAArggAAK8IAADrCAAArggAAOsIAADqCAAArwgAALAIAADsCAAArwgAAOwIAADrCAAAsAgAALEIAADtCAAAsAgAAO0IAADsCAAAsQgAALIIAADuCAAAsQgAAO4IAADtCAAAsggAALMIAADvCAAAsggAAO8IAADuCAAAswgAALQIAADwCAAAswgAAPAIAADvCAAAtAgAALUIAADxCAAAtAgAAPEIAADwCAAAtQgAALYIAADyCAAAtQgAAPIIAADxCAAAtggAALcIAADzCAAAtggAAPMIAADyCAAAtwgAALgIAAD0CAAAtwgAAPQIAADzCAAAuAgAALkIAAD1CAAAuAgAAPUIAAD0CAAAuQgAALoIAAD2CAAAuQgAAPYIAAD1CAAAuggAALsIAAD3CAAAuggAAPcIAAD2CAAAuwgAALwIAAD4CAAAuwgAAPgIAAD3CAAAvAgAAL0IAAD5CAAAvAgAAPkIAAD4CAAAvQgAAL4IAAD6CAAAvQgAAPoIAAD5CAAAvggAAL8IAAD7CAAAvggAAPsIAAD6CAAAvwgAAMAIAAD8CAAAvwgAAPwIAAD7CAAAwAgAAMEIAAD9CAAAwAgAAP0IAAD8CAAAwQgAAMIIAAD+CAAAwQgAAP4IAAD9CAAAwggAAMMIAAD/CAAAwggAAP8IAAD+CAAAwwgAAMQIAAAACQAAwwgAAAAJAAD/CAAAxAgAAMUIAAABCQAAxAgAAAEJAAAACQAAxQgAAMYIAAACCQAAxQgAAAIJAAABCQAAxggAAMcIAAADCQAAxggAAAMJAAACCQAAxwgAAMgIAAAECQAAxwgAAAQJAAADCQAAyAgAAMkIAAAFCQAAyAgAAAUJAAAECQAAyQgAAMoIAAAGCQAAyQgAAAYJAAAFCQAAyggAAMsIAAAHCQAAyggAAAcJAAAGCQAAywgAAMwIAAAICQAAywgAAAgJAAAHCQAAzAgAAM0IAAAJCQAAzAgAAAkJAAAICQAAzQgAAM4IAAAKCQAAzQgAAAoJAAAJCQAAzggAAM8IAAALCQAAzggAAAsJAAAKCQAAzwgAANAIAAAMCQAAzwgAAAwJAAALCQAA0AgAANEIAAANCQAA0AgAAA0JAAAMCQAA0QgAANIIAAAOCQAA0QgAAA4JAAANCQAA0ggAANMIAAAPCQAA0ggAAA8JAAAOCQAA0wgAANQIAAAQCQAA0wgAABAJAAAPCQAA1AgAANUIAAARCQAA1AgAABEJAAAQCQAA1QgAANYIAAASCQAA1QgAABIJAAARCQAA1ggAANcIAAATCQAA1ggAABMJAAASCQAA1wgAANgIAAAUCQAA1wgAABQJAAATCQAA2AgAANkIAAAVCQAA2AgAABUJAAAUCQAA2QgAANoIAAAWCQAA2QgAABYJAAAVCQAA2ggAANsIAAAXCQAA2ggAABcJAAAWCQAA2wgAANwIAAAYCQAA2wgAABgJAAAXCQAA3AgAAN0IAAAZCQAA3AgAABkJAAAYCQAA3QgAAN4IAAAaCQAA3QgAABoJAAAZCQAA3ggAAN8IAAAbCQAA3ggAABsJAAAaCQAA3wgAAOAIAAAcCQAA3wgAABwJAAAbCQAA4AgAAOEIAAAdCQAA4AgAAB0JAAAcCQAA4QgAAOIIAAAeCQAA4QgAAB4JAAAdCQAA4ggAAOMIAAAfCQAA4ggAAB8JAAAeCQAA4wgAAOQIAAAgCQAA4wgAACAJAAAfCQAA5AgAAOUIAAAhCQAA5AgAACEJAAAgCQAA5QgAAOYIAAAiCQAA5QgAACIJAAAhCQAA5ggAAOcIAAAjCQAA5ggAACMJAAAiCQAA6AgAAOkIAAAlCQAA6AgAACUJAAAkCQAA6QgAAOoIAAAmCQAA6QgAACYJAAAlCQAA6ggAAOsIAAAnCQAA6ggAACcJAAAmCQAA6wgAAOwIAAAoCQAA6wgAACgJAAAnCQAA7AgAAO0IAAApCQAA7AgAACkJAAAoCQAA7QgAAO4IAAAqCQAA7QgAACoJAAApCQAA7ggAAO8IAAArCQAA7ggAACsJAAAqCQAA7wgAAPAIAAAsCQAA7wgAACwJAAArCQAA8AgAAPEIAAAtCQAA8AgAAC0JAAAsCQAA8QgAAPIIAAAuCQAA8QgAAC4JAAAtCQAA8ggAAPMIAAAvCQAA8ggAAC8JAAAuCQAA8wgAAPQIAAAwCQAA8wgAADAJAAAvCQAA9AgAAPUIAAAxCQAA9AgAADEJAAAwCQAA9QgAAPYIAAAyCQAA9QgAADIJAAAxCQAA9ggAAPcIAAAzCQAA9ggAADMJAAAyCQAA9wgAAPgIAAA0CQAA9wgAADQJAAAzCQAA+AgAAPkIAAA1CQAA+AgAADUJAAA0CQAA+QgAAPoIAAA2CQAA+QgAADYJAAA1CQAA+ggAAPsIAAA3CQAA+ggAADcJAAA2CQAA+wgAAPwIAAA4CQAA+wgAADgJAAA3CQAA/AgAAP0IAAA5CQAA/AgAADkJAAA4CQAA/QgAAP4IAAA6CQAA/QgAADoJAAA5CQAA/ggAAP8IAAA7CQAA/ggAADsJAAA6CQAA/wgAAAAJAAA8CQAA/wgAADwJAAA7CQAAAAkAAAEJAAA9CQAAAAkAAD0JAAA8CQAAAQkAAAIJAAA+CQAAAQkAAD4JAAA9CQAAAgkAAAMJAAA/CQAAAgkAAD8JAAA+CQAAAwkAAAQJAABACQAAAwkAAEAJAAA/CQAABAkAAAUJAABBCQAABAkAAEEJAABACQAABQkAAAYJAABCCQAABQkAAEIJAABBCQAABgkAAAcJAABDCQAABgkAAEMJAABCCQAABwkAAAgJAABECQAABwkAAEQJAABDCQAACAkAAAkJAABFCQAACAkAAEUJAABECQAACQkAAAoJAABGCQAACQkAAEYJAABFCQAACgkAAAsJAABHCQAACgkAAEcJAABGCQAACwkAAAwJAABICQAACwkAAEgJAABHCQAADAkAAA0JAABJCQAADAkAAEkJAABICQAADQkAAA4JAABKCQAADQkAAEoJAABJCQAADgkAAA8JAABLCQAADgkAAEsJAABKCQAADwkAABAJAABMCQAADwkAAEwJAABLCQAAEAkAABEJAABNCQAAEAkAAE0JAABMCQAAEQkAABIJAABOCQAAEQkAAE4JAABNCQAAEgkAABMJAABPCQAAEgkAAE8JAABOCQAAEwkAABQJAABQCQAAEwkAAFAJAABPCQAAFAkAABUJAABRCQAAFAkAAFEJAABQCQAAFQkAABYJAABSCQAAFQkAAFIJAABRCQAAFgkAABcJAABTCQAAFgkAAFMJAABSCQAAFwkAABgJAABUCQAAFwkAAFQJAABTCQAAGAkAABkJAABVCQAAGAkAAFUJAABUCQAAGQkAABoJAABWCQAAGQkAAFYJAABVCQAAGgkAABsJAABXCQAAGgkAAFcJAABWCQAAGwkAABwJAABYCQAAGwkAAFgJAABXCQAAHAkAAB0JAABZCQAAHAkAAFkJAABYCQAAHQkAAB4JAABaCQAAHQkAAFoJAABZCQAAHgkAAB8JAABbCQAAHgkAAFsJAABaCQAAHwkAACAJAABcCQAAHwkAAFwJAABbCQAAIAkAACEJAABdCQAAIAkAAF0JAABcCQAAIQkAACIJAABeCQAAIQkAAF4JAABdCQAAIgkAACMJAABfCQAAIgkAAF8JAABeCQAAJAkAACUJAABhCQAAJAkAAGEJAABgCQAAJQkAACYJAABiCQAAJQkAAGIJAABhCQAAJgkAACcJAABjCQAAJgkAAGMJAABiCQAAJwkAACgJAABkCQAAJwkAAGQJAABjCQAAKAkAACkJAABlCQAAKAkAAGUJAABkCQAAKQkAACoJAABmCQAAKQkAAGYJAABlCQAAKgkAACsJAABnCQAAKgkAAGcJAABmCQAAKwkAACwJAABoCQAAKwkAAGgJAABnCQAALAkAAC0JAABpCQAALAkAAGkJAABoCQAALQkAAC4JAABqCQAALQkAAGoJAABpCQAALgkAAC8JAABrCQAALgkAAGsJAABqCQAALwkAADAJAABsCQAALwkAAGwJAABrCQAAMAkAADEJAABtCQAAMAkAAG0JAABsCQAAMQkAADIJAABuCQAAMQkAAG4JAABtCQAAMgkAADMJAABvCQAAMgkAAG8JAABuCQAAMwkAADQJAABwCQAAMwkAAHAJAABvCQAANAkAADUJAABxCQAANAkAAHEJAABwCQAANQkAADYJAAByCQAANQkAAHIJAABxCQAANgkAADcJAABzCQAANgkAAHMJAAByCQAANwkAADgJAAB0CQAANwkAAHQJAABzCQAAOAkAADkJAAB1CQAAOAkAAHUJAAB0CQAAOQkAADoJAAB2CQAAOQkAAHYJAAB1CQAAOgkAADsJAAB3CQAAOgkAAHcJAAB2CQAAOwkAADwJAAB4CQAAOwkAAHgJAAB3CQAAPAkAAD0JAAB5CQAAPAkAAHkJAAB4CQAAPQkAAD4JAAB6CQAAPQkAAHoJAAB5CQAAPgkAAD8JAAB7CQAAPgkAAHsJAAB6CQAAPwkAAEAJAAB8CQAAPwkAAHwJAAB7CQAAQAkAAEEJAAB9CQAAQAkAAH0JAAB8CQAAQQkAAEIJAAB+CQAAQQkAAH4JAAB9CQAAQgkAAEMJAAB/CQAAQgkAAH8JAAB+CQAAQwkAAEQJAACACQAAQwkAAIAJAAB/CQAARAkAAEUJAACBCQAARAkAAIEJAACACQAARQkAAEYJAACCCQAARQkAAIIJAACBCQAARgkAAEcJAACDCQAARgkAAIMJAACCCQAARwkAAEgJAACECQAARwkAAIQJAACDCQAASAkAAEkJAACFCQAASAkAAIUJAACECQAASQkAAEoJAACGCQAASQkAAIYJAACFCQAASgkAAEsJAACHCQAASgkAAIcJAACGCQAASwkAAEwJAACICQAASwkAAIgJAACHCQAATAkAAE0JAACJCQAATAkAAIkJAACICQAATQkAAE4JAACKCQAATQkAAIoJAACJCQAATgkAAE8JAACLCQAATgkAAIsJAACKCQAATwkAAFAJAACMCQAATwkAAIwJAACLCQAAUAkAAFEJAACNCQAAUAkAAI0JAACMCQAAUQkAAFIJAACOCQAAUQkAAI4JAACNCQAAUgkAAFMJAACPCQAAUgkAAI8JAACOCQAAUwkAAFQJAACQCQAAUwkAAJAJAACPCQAAVAkAAFUJAACRCQAAVAkAAJEJAACQCQAAVQkAAFYJAACSCQAAVQkAAJIJAACRCQAAVgkAAFcJAACTCQAAVgkAAJMJAACSCQAAVwkAAFgJAACUCQAAVwkAAJQJAACTCQAAWAkAAFkJAACVCQAAWAkAAJUJAACUCQAAWQkAAFoJAACWCQAAWQkAAJYJAACVCQAAWgkAAFsJAACXCQAAWgkAAJcJAACWCQAAWwkAAFwJAACYCQAAWwkAAJgJAACXCQAAXAkAAF0JAACZCQAAXAkAAJkJAACYCQAAXQkAAF4JAACaCQAAXQkAAJoJAACZCQAAXgkAAF8JAACbCQAAXgkAAJsJAACaCQAAYAkAAGEJAACdCQAAYAkAAJ0JAACcCQAAYQkAAGIJAACeCQAAYQkAAJ4JAACdCQAAYgkAAGMJAACfCQAAYgkAAJ8JAACeCQAAYwkAAGQJAACgCQAAYwkAAKAJAACfCQAAZAkAAGUJAAChCQAAZAkAAKEJAACgCQAAZQkAAGYJAACiCQAAZQkAAKIJAAChCQAAZgkAAGcJAACjCQAAZgkAAKMJAACiCQAAZwkAAGgJAACkCQAAZwkAAKQJAACjCQAAaAkAAGkJAAClCQAAaAkAAKUJAACkCQAAaQkAAGoJAACmCQAAaQkAAKYJAAClCQAAagkAAGsJAACnCQAAagkAAKcJAACmCQAAawkAAGwJAACoCQAAawkAAKgJAACnCQAAbAkAAG0JAACpCQAAbAkAAKkJAACoCQAAbQkAAG4JAACqCQAAbQkAAKoJAACpCQAAbgkAAG8JAACrCQAAbgkAAKsJAACqCQAAbwkAAHAJAACsCQAAbwkAAKwJAACrCQAAcAkAAHEJAACtCQAAcAkAAK0JAACsCQAAcQkAAHIJAACuCQAAcQkAAK4JAACtCQAAcgkAAHMJAACvCQAAcgkAAK8JAACuCQAAcwkAAHQJAACwCQAAcwkAALAJAACvCQAAdAkAAHUJAACxCQAAdAkAALEJAACwCQAAdQkAAHYJAACyCQAAdQkAALIJAACxCQAAdgkAAHcJAACzCQAAdgkAALMJAACyCQAAdwkAAHgJAAC0CQAAdwkAALQJAACzCQAAeAkAAHkJAAC1CQAAeAkAALUJAAC0CQAAeQkAAHoJAAC2CQAAeQkAALYJAAC1CQAAegkAAHsJAAC3CQAAegkAALcJAAC2CQAAewkAAHwJAAC4CQAAewkAALgJAAC3CQAAfAkAAH0JAAC5CQAAfAkAALkJAAC4CQAAfQkAAH4JAAC6CQAAfQkAALoJAAC5CQAAfgkAAH8JAAC7CQAAfgkAALsJAAC6CQAAfwkAAIAJAAC8CQAAfwkAALwJAAC7CQAAgAkAAIEJAAC9CQAAgAkAAL0JAAC8CQAAgQkAAIIJAAC+CQAAgQkAAL4JAAC9CQAAggkAAIMJAAC/CQAAggkAAL8JAAC+CQAAgwkAAIQJAADACQAAgwkAAMAJAAC/CQAAhAkAAIUJAADBCQAAhAkAAMEJAADACQAAhQkAAIYJAADCCQAAhQkAAMIJAADBCQAAhgkAAIcJAADDCQAAhgkAAMMJAADCCQAAhwkAAIgJAADECQAAhwkAAMQJAADDCQAAiAkAAIkJAADFCQAAiAkAAMUJAADECQAAiQkAAIoJAADGCQAAiQkAAMYJAADFCQAAigkAAIsJAADHCQAAigkAAMcJAADGCQAAiwkAAIwJAADICQAAiwkAAMgJAADHCQAAjAkAAI0JAADJCQAAjAkAAMkJAADICQAAjQkAAI4JAADKCQAAjQkAAMoJAADJCQAAjgkAAI8JAADLCQAAjgkAAMsJAADKCQAAjwkAAJAJAADMCQAAjwkAAMwJAADLCQAAkAkAAJEJAADNCQAAkAkAAM0JAADMCQAAkQkAAJIJAADOCQAAkQkAAM4JAADNCQAAkgkAAJMJAADPCQAAkgkAAM8JAADOCQAAkwkAAJQJAADQCQAAkwkAANAJAADPCQAAlAkAAJUJAADRCQAAlAkAANEJAADQCQAAlQkAAJYJAADSCQAAlQkAANIJAADRCQAAlgkAAJcJAADTCQAAlgkAANMJAADSCQAAlwkAAJgJAADUCQAAlwkAANQJAADTCQAAmAkAAJkJAADVCQAAmAkAANUJAADUCQAAmQkAAJoJAADWCQAAmQkAANYJAADVCQAAmgkAAJsJAADXCQAAmgkAANcJAADWCQAAnAkAAJ0JAADZCQAAnAkAANkJAADYCQAAnQkAAJ4JAADaCQAAnQkAANoJAADZCQAAngkAAJ8JAADbCQAAngkAANsJAADaCQAAnwkAAKAJAADcCQAAnwkAANwJAADbCQAAoAkAAKEJAADdCQAAoAkAAN0JAADcCQAAoQkAAKIJAADeCQAAoQkAAN4JAADdCQAAogkAAKMJAADfCQAAogkAAN8JAADeCQAAowkAAKQJAADgCQAAowkAAOAJAADfCQAApAkAAKUJAADhCQAApAkAAOEJAADgCQAApQkAAKYJAADiCQAApQkAAOIJAADhCQAApgkAAKcJAADjCQAApgkAAOMJAADiCQAApwkAAKgJAADkCQAApwkAAOQJAADjCQAAqAkAAKkJAADlCQAAqAkAAOUJAADkCQAAqQkAAKoJAADmCQAAqQkAAOYJAADlCQAAqgkAAKsJAADnCQAAqgkAAOcJAADmCQAAqwkAAKwJAADoCQAAqwkAAOgJAADnCQAArAkAAK0JAADpCQAArAkAAOkJAADoCQAArQkAAK4JAADqCQAArQkAAOoJAADpCQAArgkAAK8JAADrCQAArgkAAOsJAADqCQAArwkAALAJAADsCQAArwkAAOwJAADrCQAAsAkAALEJAADtCQAAsAkAAO0JAADsCQAAsQkAALIJAADuCQAAsQkAAO4JAADtCQAAsgkAALMJAADvCQAAsgkAAO8JAADuCQAAswkAALQJAADwCQAAswkAAPAJAADvCQAAtAkAALUJAADxCQAAtAkAAPEJAADwCQAAtQkAALYJAADyCQAAtQkAAPIJAADxCQAAtgkAALcJAADzCQAAtgkAAPMJAADyCQAAtwkAALgJAAD0CQAAtwkAAPQJAADzCQAAuAkAALkJAAD1CQAAuAkAAPUJAAD0CQAAuQkAALoJAAD2CQAAuQkAAPYJAAD1CQAAugkAALsJAAD3CQAAugkAAPcJAAD2CQAAuwkAALwJAAD4CQAAuwkAAPgJAAD3CQAAvAkAAL0JAAD5CQAAvAkAAPkJAAD4CQAAvQkAAL4JAAD6CQAAvQkAAPoJAAD5CQAAvgkAAL8JAAD7CQAAvgkAAPsJAAD6CQAAvwkAAMAJAAD8CQAAvwkAAPwJAAD7CQAAwAkAAMEJAAD9CQAAwAkAAP0JAAD8CQAAwQkAAMIJAAD+CQAAwQkAAP4JAAD9CQAAwgkAAMMJAAD/CQAAwgkAAP8JAAD+CQAAwwkAAMQJAAAACgAAwwkAAAAKAAD/CQAAxAkAAMUJAAABCgAAxAkAAAEKAAAACgAAxQkAAMYJAAAC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CgAAEQoAAE4KAABNCgAAEgoAABMKAABPCgAAEgoAAE8KAABOCgAAFAoAABUKAABRCgAAFAoAAFEKAABQCgAAFQoAABYKAABSCgAAFQoAAFIKAABRCgAAFgoAABcKAABTCgAAFgoAAFMKAABSCgAAFwoAABgKAABUCgAAFwoAAFQKAABTCgAAGAoAABkKAABVCgAAGAoAAFUKAABUCgAAGQoAABoKAABWCgAAGQoAAFYKAABVCgAAGgoAABsKAABXCgAAGgoAAFcKAABWCgAAGwoAABwKAABYCgAAGwoAAFgKAABXCgAAHAoAAB0KAABZCgAAHAoAAFkKAABYCgAAHQoAAB4KAABaCgAAHQoAAFoKAABZCgAAHgoAAB8KAABbCgAAHgoAAFsKAABaCgAAHwoAACAKAABcCgAAHwoAAFwKAABbCgAAIAoAACEKAABdCgAAIAoAAF0KAABcCgAAIQoAACIKAABeCgAAIQoAAF4KAABdCgAAIgoAACMKAABfCgAAIgoAAF8KAABeCgAAIwoAACQKAABgCgAAIwoAAGAKAABfCgAAJAoAACUKAABhCgAAJAoAAGEKAABgCgAAJQoAACYKAABiCgAAJQoAAGIKAABhCgAAJgoAACcKAABjCgAAJgoAAGMKAABiCgAAJwoAACgKAABkCgAAJwoAAGQKAABjCgAAKAoAACkKAABlCgAAKAoAAGUKAABkCgAAKQoAACoKAABmCgAAKQoAAGYKAABlCgAAKgoAACsKAABnCgAAKgoAAGcKAABmCgAAKwoAACwKAABoCgAAKwoAAGgKAABnCgAALAoAAC0KAABpCgAALAoAAGkKAABoCgAALQoAAC4KAABqCgAALQoAAGoKAABpCgAALgoAAC8KAABrCgAALgoAAGsKAABqCgAALwoAADAKAABsCgAALwoAAGwKAABrCgAAMAoAADEKAABtCgAAMAoAAG0KAABsCgAAMQoAADIKAABuCgAAMQoAAG4KAABtCgAAMgoAADMKAABvCgAAMgoAAG8KAABuCgAAMwoAADQKAABwCgAAMwoAAHAKAABvCgAANAoAADUKAABxCgAANAoAAHEKAABwCgAANQoAADYKAAByCgAANQoAAHIKAABxCgAANgoAADcKAABzCgAANgoAAHMKAAByCgAANwoAADgKAAB0CgAANwoAAHQKAABzCgAAOAoAADkKAAB1CgAAOAoAAHUKAAB0CgAAOQoAADoKAAB2CgAAOQoAAHYKAAB1CgAAOgoAADsKAAB3CgAAOgoAAHcKAAB2CgAAOwoAADwKAAB4CgAAOwoAAHgKAAB3CgAAPAoAAD0KAAB5CgAAPAoAAHkKAAB4CgAAPQoAAD4KAAB6CgAAPQoAAHoKAAB5CgAAPgoAAD8KAAB7CgAAPgoAAHsKAAB6CgAAPwoAAEAKAAB8CgAAPwoAAHwKAAB7CgAAQAoAAEEKAAB9CgAAQAoAAH0KAAB8CgAAQQoAAEIKAAB+CgAAQQoAAH4KAAB9CgAAQgoAAEMKAAB/CgAAQgoAAH8KAAB+CgAAQwoAAEQKAACACgAAQwoAAIAKAAB/CgAARAoAAEUKAACBCgAARAoAAIEKAACACgAARQoAAEYKAACCCgAARQoAAIIKAACBCgAARgoAAEcKAACDCgAARgoAAIMKAACCCgAARwoAAEgKAACECgAARwoAAIQKAACDCgAASAoAAEkKAACFCgAASAoAAIUKAACECgAASQoAAEoKAACGCgAASQoAAIYKAACFCgAASgoAAEsKAACHCgAASgoAAIcKAACGCgAASwoAAEwKAACICgAASwoAAIgKAACHCgAATAoAAE0KAACJCgAATAoAAIkKAACICgAATQoAAE4KAACKCgAATQoAAIoKAACJCgAATgoAAE8KAACLCgAATgoAAIsKAACKCgAAUAoAAFEKAACNCgAAUAoAAI0KAACMCgAAUQoAAFIKAACOCgAAUQoAAI4KAACNCgAAUgoAAFMKAACPCgAAUgoAAI8KAACOCgAAUwoAAFQKAACQCgAAUwoAAJAKAACPCgAAVAoAAFUKAACRCgAAVAoAAJEKAACQCgAAVQoAAFYKAACSCgAAVQoAAJIKAACRCgAAVgoAAFcKAACTCgAAVgoAAJMKAACSCgAAVwoAAFgKAACUCgAAVwoAAJQKAACTCgAAWAoAAFkKAACVCgAAWAoAAJUKAACUCgAAWQoAAFoKAACWCgAAWQoAAJYKAACVCgAAWgoAAFsKAACXCgAAWgoAAJcKAACWCgAAWwoAAFwKAACYCgAAWwoAAJgKAACXCgAAXAoAAF0KAACZCgAAXAoAAJkKAACYCgAAXQoAAF4KAACaCgAAXQoAAJoKAACZCgAAXgoAAF8KAACbCgAAXgoAAJsKAACaCgAAXwoAAGAKAACcCgAAXwoAAJwKAACbCgAAYAoAAGEKAACdCgAAYAoAAJ0KAACcCgAAYQoAAGIKAACeCgAAYQoAAJ4KAACdCgAAYgoAAGMKAACfCgAAYgoAAJ8KAACeCgAAYwoAAGQKAACgCgAAYwoAAKAKAACfCgAAZAoAAGUKAAChCgAAZAoAAKEKAACgCgAAZQoAAGYKAACiCgAAZQoAAKIKAAChCgAAZgoAAGcKAACjCgAAZgoAAKMKAACiCgAAZwoAAGgKAACkCgAAZwoAAKQKAACjCgAAaAoAAGkKAAClCgAAaAoAAKUKAACkCgAAaQoAAGoKAACmCgAAaQoAAKYKAAClCgAAagoAAGsKAACnCgAAagoAAKcKAACmCgAAawoAAGwKAACoCgAAawoAAKgKAACnCgAAbAoAAG0KAACpCgAAbAoAAKkKAACoCgAAbQoAAG4KAACqCgAAbQoAAKoKAACpCgAAbgoAAG8KAACrCgAAbgoAAKsKAACqCgAAbwoAAHAKAACsCgAAbwoAAKwKAACrCgAAcAoAAHEKAACtCgAAcAoAAK0KAACsCgAAcQoAAHIKAACuCgAAcQoAAK4KAACtCgAAcgoAAHMKAACvCgAAcgoAAK8KAACuCgAAcwoAAHQKAACwCgAAcwoAALAKAACvCgAAdAoAAHUKAACxCgAAdAoAALEKAACwCgAAdQoAAHYKAACyCgAAdQoAALIKAACxCgAAdgoAAHcKAACzCgAAdgoAALMKAACyCgAAdwoAAHgKAAC0CgAAdwoAALQKAACzCgAAeAoAAHkKAAC1CgAAeAoAALUKAAC0CgAAeQoAAHoKAAC2CgAAeQoAALYKAAC1CgAAegoAAHsKAAC3CgAAegoAALcKAAC2CgAAewoAAHwKAAC4CgAAewoAALgKAAC3CgAAfAoAAH0KAAC5CgAAfAoAALkKAAC4CgAAfQoAAH4KAAC6CgAAfQoAALoKAAC5CgAAfgoAAH8KAAC7CgAAfgoAALsKAAC6CgAAfwoAAIAKAAC8CgAAfwoAALwKAAC7CgAAgAoAAIEKAAC9CgAAgAoAAL0KAAC8CgAAgQoAAIIKAAC+CgAAgQoAAL4KAAC9CgAAggoAAIMKAAC/CgAAggoAAL8KAAC+CgAAgwoAAIQKAADACgAAgwoAAMAKAAC/CgAAhAoAAIUKAADBCgAAhAoAAMEKAADACgAAhQoAAIYKAADCCgAAhQoAAMIKAADBCgAAhgoAAIcKAADDCgAAhgoAAMMKAADCCgAAhwoAAIgKAADECgAAhwoAAMQKAADDCgAAiAoAAIkKAADFCgAAiAoAAMUKAADECgAAiQoAAIoKAADGCgAAiQoAAMYKAADFCgAAigoAAIsKAADHCgAAigoAAMcKAADGCgAAjAoAAI0KAADJCgAAjAoAAMkKAADICgAAjQoAAI4KAADKCgAAjQoAAMoKAADJCgAAjgoAAI8KAADLCgAAjgoAAMsKAADKCgAAjwoAAJAKAADMCgAAjwoAAMwKAADLCgAAkAoAAJEKAADNCgAAkAoAAM0KAADMCgAAkQoAAJIKAADOCgAAkQoAAM4KAADNCgAAkgoAAJMKAADPCgAAkgoAAM8KAADOCgAAkwoAAJQKAADQCgAAkwoAANAKAADPCgAAlAoAAJUKAADRCgAAlAoAANEKAADQCgAAlQoAAJYKAADSCgAAlQoAANIKAADRCgAAlgoAAJcKAADTCgAAlgoAANMKAADSCgAAlwoAAJgKAADUCgAAlwoAANQKAADTCgAAmAoAAJkKAADVCgAAmAoAANUKAADUCgAAmQoAAJoKAADWCgAAmQoAANYKAADVCgAAmgoAAJsKAADXCgAAmgoAANcKAADWCgAAmwoAAJwKAADYCgAAmwoAANgKAADXCgAAnAoAAJ0KAADZCgAAnAoAANkKAADYCgAAnQoAAJ4KAADaCgAAnQoAANoKAADZCgAAngoAAJ8KAADbCgAAngoAANsKAADaCgAAnwoAAKAKAADcCgAAnwoAANwKAADbCgAAoAoAAKEKAADdCgAAoAoAAN0KAADcCgAAoQoAAKIKAADeCgAAoQoAAN4KAADdCgAAogoAAKMKAADfCgAAogoAAN8KAADeCgAAowoAAKQKAADgCgAAowoAAOAKAADfCgAApAoAAKUKAADhCgAApAoAAOEKAADgCgAApQoAAKYKAADiCgAApQoAAOIKAADhCgAApgoAAKcKAADjCgAApgoAAOMKAADiCgAApwoAAKgKAADkCgAApwoAAOQKAADjCgAAqAoAAKkKAADlCgAAqAoAAOUKAADkCgAAqQoAAKoKAADmCgAAqQoAAOYKAADlCgAAqgoAAKsKAADnCgAAqgoAAOcKAADmCgAAqwoAAKwKAADoCgAAqwoAAOgKAADnCgAArAoAAK0KAADpCgAArAoAAOkKAADoCgAArQoAAK4KAADqCgAArQoAAOoKAADpCgAArgoAAK8KAADrCgAArgoAAOsKAADqCgAArwoAALAKAADsCgAArwoAAOwKAADrCgAAsAoAALEKAADtCgAAsAoAAO0KAADsCgAAsQoAALIKAADuCgAAsQoAAO4KAADtCgAAsgoAALMKAADvCgAAsgoAAO8KAADuCgAAswoAALQKAADwCgAAswoAAPAKAADvCgAAtAoAALUKAADxCgAAtAoAAPEKAADwCgAAtQoAALYKAADyCgAAtQoAAPIKAADxCgAAtgoAALcKAADzCgAAtgoAAPMKAADyCgAAtwoAALgKAAD0CgAAtwoAAPQKAADzCgAAuAoAALkKAAD1CgAAuAoAAPUKAAD0CgAAuQoAALoKAAD2CgAAuQoAAPYKAAD1CgAAugoAALsKAAD3CgAAugoAAPcKAAD2CgAAuwoAALwKAAD4CgAAuwoAAPgKAAD3CgAAvAoAAL0KAAD5CgAAvAoAAPkKAAD4CgAAvQoAAL4KAAD6CgAAvQoAAPoKAAD5CgAAvgoAAL8KAAD7CgAAvgoAAPsKAAD6CgAAvwoAAMAKAAD8CgAAvwoAAPwKAAD7CgAAwAoAAMEKAAD9CgAAwAoAAP0KAAD8CgAAwQoAAMIKAAD+CgAAwQoAAP4KAAD9CgAAwgoAAMMKAAD/CgAAwgoAAP8KAAD+CgAAwwoAAMQKAAAACwAAwwoAAAALAAD/CgAAxAoAAMUKAAABCwAAxAoAAAELAAAACwAAxQoAAMYKAAACCwAAxQoAAAILAAABCwAAxgoAAMcKAAADCwAAxgoAAAMLAAACCwAAyAoAAMkKAAAFCwAAyAoAAAULAAAECwAAyQoAAMoKAAAGCwAAyQoAAAYLAAAFCwAAygoAAMsKAAAHCwAAygoAAAcLAAAGCwAAywoAAMwKAAAICwAAywoAAAgLAAAHCwAAzAoAAM0KAAAJCwAAzAoAAAkLAAAICwAAzQoAAM4KAAAKCwAAzQoAAAoLAAAJCwAAzgoAAM8KAAALCwAAzgoAAAsLAAAKCwAAzwoAANAKAAAMCwAAzwoAAAwLAAALCwAA0AoAANEKAAANCwAA0AoAAA0LAAAMCwAA0QoAANIKAAAOCwAA0QoAAA4LAAANCwAA0goAANMKAAAPCwAA0goAAA8LAAAOCwAA0woAANQKAAAQCwAA0woAABALAAAPCwAA1AoAANUKAAARCwAA1AoAABELAAAQCwAA1QoAANYKAAASCwAA1QoAABILAAARCwAA1goAANcKAAATCwAA1goAABMLAAASCwAA1woAANgKAAAUCwAA1woAABQLAAATCwAA2AoAANkKAAAVCwAA2AoAABULAAAUCwAA2QoAANoKAAAWCwAA2QoAABYLAAAVCwAA2goAANsKAAAXCwAA2goAABcLAAAWCwAA2woAANwKAAAYCwAA2woAABgLAAAXCwAA3AoAAN0KAAAZCwAA3AoAABkLAAAYCwAA3QoAAN4KAAAaCwAA3QoAABoLAAAZCwAA3goAAN8KAAAbCwAA3goAABsLAAAaCwAA3woAAOAKAAAcCwAA3woAABwLAAAbCwAA4AoAAOEKAAAdCwAA4AoAAB0LAAAcCwAA4QoAAOIKAAAeCwAA4QoAAB4LAAAdCwAA4goAAOMKAAAfCwAA4goAAB8LAAAeCwAA4woAAOQKAAAgCwAA4woAACALAAAfCwAA5AoAAOUKAAAhCwAA5AoAACELAAAgCwAA5QoAAOYKAAAiCwAA5QoAACILAAAhCwAA5goAAOcKAAAjCwAA5goAACMLAAAiCwAA5woAAOgKAAAkCwAA5woAACQLAAAjCwAA6AoAAOkKAAAlCwAA6AoAACULAAAkCwAA6QoAAOoKAAAmCwAA6QoAACYLAAAlCwAA6goAAOsKAAAnCwAA6goAACcLAAAmCwAA6woAAOwKAAAoCwAA6woAACgLAAAnCwAA7AoAAO0KAAApCwAA7AoAACkLAAAoCwAA7QoAAO4KAAAqCwAA7QoAACoLAAApCwAA7goAAO8KAAArCwAA7goAACsLAAAqCwAA7woAAPAKAAAsCwAA7woAACwLAAArCwAA8AoAAPEKAAAtCwAA8AoAAC0LAAAsCwAA8QoAAPIKAAAuCwAA8QoAAC4LAAAtCwAA8goAAPMKAAAvCwAA8goAAC8LAAAuCwAA8woAAPQKAAAwCwAA8woAADALAAAvCwAA9AoAAPUKAAAxCwAA9AoAADELAAAwCwAA9QoAAPYKAAAyCwAA9QoAADILAAAxCwAA9goAAPcKAAAzCwAA9goAADMLAAAyCwAA9woAAPgKAAA0CwAA9woAADQLAAAzCwAA+AoAAPkKAAA1CwAA+AoAADULAAA0CwAA+QoAAPoKAAA2CwAA+QoAADYLAAA1CwAA+goAAPsKAAA3CwAA+goAADcLAAA2CwAA+woAAPwKAAA4CwAA+woAADgLAAA3CwAA/AoAAP0KAAA5CwAA/AoAADkLAAA4CwAA/QoAAP4KAAA6CwAA/QoAADoLAAA5CwAA/goAAP8KAAA7CwAA/goAADsLAAA6CwAA/woAAAALAAA8CwAA/woAADwLAAA7CwAAAAsAAAELAAA9CwAAAAsAAD0LAAA8CwAAAQsAAAILAAA+CwAAAQsAAD4LAAA9CwAAAgsAAAMLAAA/CwAAAgsAAD8LAAA+CwAABAsAAAULAABBCwAABAsAAEELAABACwAABQsAAAYLAABCCwAABQsAAEILAABBCwAABgsAAAcLAABDCwAABgsAAEMLAABCCwAABwsAAAgLAABECwAABwsAAEQLAABDCwAACAsAAAkLAABFCwAACAsAAEULAABECwAACQsAAAoLAABGCwAACQsAAEYLAABFCwAACgsAAAsLAABHCwAACgsAAEcLAABGCwAACwsAAAwLAABICwAACwsAAEgLAABHCwAADAsAAA0LAABJCwAADAsAAEkLAABICwAADQsAAA4LAABKCwAADQsAAEoLAABJCwAADgsAAA8LAABLCwAADgsAAEsLAABKCwAADwsAABALAABMCwAADwsAAEwLAABLCwAAEAsAABELAABNCwAAEAsAAE0LAABMCwAAEQsAABILAABOCwAAEQsAAE4LAABNCwAAEgsAABMLAABPCwAAEgsAAE8LAABOCwAAEwsAABQLAABQCwAAEwsAAFALAABPCwAAFAsAABULAABRCwAAFAsAAFELAABQCwAAFQsAABYLAABSCwAAFQsAAFILAABRCwAAFgsAABcLAABTCwAAFgsAAFMLAABSCwAAFwsAABgLAABUCwAAFwsAAFQLAABTCwAAGAsAABkLAABVCwAAGAsAAFULAABUCwAAGQsAABoLAABWCwAAGQsAAFYLAABVCwAAGgsAABsLAABXCwAAGgsAAFcLAABWCwAAGwsAABwLAABYCwAAGwsAAFgLAABXCwAAHAsAAB0LAABZCwAAHAsAAFkLAABYCwAAHQsAAB4LAABaCwAAHQsAAFoLAABZCwAAHgsAAB8LAABbCwAAHgsAAFsLAABaCwAAHwsAACALAABcCwAAHwsAAFwLAABbCwAAIAsAACELAABdCwAAIAsAAF0LAABcCwAAIQsAACILAABeCwAAIQsAAF4LAABdCwAAIgsAACMLAABfCwAAIgsAAF8LAABeCwAAIwsAACQLAABgCwAAIwsAAGALAABfCwAAJAsAACULAABhCwAAJAsAAGELAABgCwAAJQsAACYLAABiCwAAJQsAAGILAABhCwAAJgsAACcLAABjCwAAJgsAAGMLAABiCwAAJwsAACgLAABkCwAAJwsAAGQLAABjCwAAKAsAACkLAABlCwAAKAsAAGULAABkCwAAKQsAACoLAABmCwAAKQsAAGYLAABlCwAAKgsAACsLAABnCwAAKgsAAGcLAABmCwAAKwsAACwLAABoCwAAKwsAAGgLAABnCwAALAsAAC0LAABpCwAALAsAAGkLAABoCwAALQsAAC4LAABqCwAALQsAAGoLAABpCwAALgsAAC8LAABrCwAALgsAAGsLAABqCwAALwsAADALAABsCwAALwsAAGwLAABrCwAAMAsAADELAABtCwAAMAsAAG0LAABsCwAAMQsAADILAABuCwAAMQsAAG4LAABtCwAAMgsAADMLAABvCwAAMgsAAG8LAABuCwAAMwsAADQLAABwCwAAMwsAAHALAABvCwAANAsAADULAABxCwAANAsAAHELAABwCwAANQsAADYLAAByCwAANQsAAHILAABxCwAANgsAADcLAABzCwAANgsAAHMLAAByCwAANwsAADgLAAB0CwAANwsAAHQLAABzCwAAOAsAADkLAAB1CwAAOAsAAHULAAB0CwAAOQsAADoLAAB2CwAAOQsAAHYLAAB1CwAAOgsAADsLAAB3CwAAOgsAAHcLAAB2CwAAOwsAADwLAAB4CwAAOwsAAHgLAAB3CwAAPAsAAD0LAAB5CwAAPAsAAHkLAAB4CwAAPQsAAD4LAAB6CwAAPQsAAHoLAAB5CwAAPgsAAD8LAAB7CwAAPgsAAHsLAAB6CwAAQAsAAEELAAB9CwAAQAsAAH0LAAB8CwAAQQsAAEILAAB+CwAAQQsAAH4LAAB9CwAAQgsAAEMLAAB/CwAAQgsAAH8LAAB+CwAAQwsAAEQLAACACwAAQwsAAIALAAB/CwAARAsAAEULAACBCwAARAsAAIELAACACwAARQsAAEYLAACCCwAARQsAAIILAACBCwAARgsAAEcLAACDCwAARgsAAIMLAACCCwAARwsAAEgLAACECwAARwsAAIQLAACDCwAASAsAAEkLAACFCwAASAsAAIULAACECwAASQsAAEoLAACGCwAASQsAAIYLAACFCwAASgsAAEsLAACHCwAASgsAAIcLAACGCwAASwsAAEwLAACICwAASwsAAIgLAACHCwAATAsAAE0LAACJCwAATAsAAIkLAACICwAATQsAAE4LAACKCwAATQsAAIoLAACJCwAATgsAAE8LAACLCwAATgsAAIsLAACKCwAATwsAAFALAACMCwAATwsAAIwLAACLCwAAUAsAAFELAACNCwAAUAsAAI0LAACMCwAAUQsAAFILAACOCwAAUQsAAI4LAACNCwAAUgsAAFMLAACPCwAAUgsAAI8LAACOCwAAUwsAAFQLAACQCwAAUwsAAJALAACPCwAAVAsAAFULAACRCwAAVAsAAJELAACQCwAAVQsAAFYLAACSCwAAVQsAAJILAACRCwAAVgsAAFcLAACTCwAAVgsAAJMLAACSCwAAVwsAAFgLAACUCwAAVwsAAJQLAACTCwAAWAsAAFkLAACVCwAAWAsAAJULAACUCwAAWQsAAFoLAACWCwAAWQsAAJYLAACVCwAAWgsAAFsLAACXCwAAWgsAAJcLAACWCwAAWwsAAFwLAACYCwAAWwsAAJgLAACXCwAAXAsAAF0LAACZCwAAXAsAAJkLAACYCwAAXQsAAF4LAACaCwAAXQsAAJoLAACZCwAAXgsAAF8LAACbCwAAXgsAAJsLAACaCwAAXwsAAGALAACcCwAAXwsAAJwLAACbCwAAYAsAAGELAACdCwAAYAsAAJ0LAACcCwAAYQsAAGILAACeCwAAYQsAAJ4LAACdCwAAYgsAAGMLAACfCwAAYgsAAJ8LAACeCwAAYwsAAGQLAACgCwAAYwsAAKALAACfCwAAZAsAAGULAAChCwAAZAsAAKELAACgCwAAZQsAAGYLAACiCwAAZQsAAKILAAChCwAAZgsAAGcLAACjCwAAZgsAAKMLAACiCwAAZwsAAGgLAACkCwAAZwsAAKQLAACjCwAAaAsAAGkLAAClCwAAaAsAAKULAACkCwAAaQsAAGoLAACmCwAAaQsAAKYLAAClCwAAagsAAGsLAACnCwAAagsAAKcLAACmCwAAawsAAGwLAACoCwAAawsAAKgLAACnCwAAbAsAAG0LAACpCwAAbAsAAKkLAACoCwAAbQsAAG4LAACqCwAAbQsAAKoLAACpCwAAbgsAAG8LAACrCwAAbgsAAKsLAACqCwAAbwsAAHALAACsCwAAbwsAAKwLAACrCwAAcAsAAHELAACtCwAAcAsAAK0LAACsCwAAcQsAAHILAACuCwAAcQsAAK4LAACtCwAAcgsAAHMLAACvCwAAcgsAAK8LAACuCwAAcwsAAHQLAACwCwAAcwsAALALAACvCwAAdAsAAHULAACxCwAAdAsAALELAACwCwAAdQsAAHYLAACyCwAAdQsAALILAACxCwAAdgsAAHcLAACzCwAAdgsAALMLAACyCwAAdwsAAHgLAAC0CwAAdwsAALQLAACzCwAAeAsAAHkLAAC1CwAAeAsAALULAAC0CwAAeQsAAHoLAAC2CwAAeQsAALYLAAC1CwAAegsAAHsLAAC3CwAAegsAALcLAAC2CwAAfAsAAH0LAAC5CwAAfAsAALkLAAC4CwAAfQsAAH4LAAC6CwAAfQsAALoLAAC5CwAAfgsAAH8LAAC7CwAAfgsAALsLAAC6CwAAfwsAAIALAAC8CwAAfwsAALwLAAC7CwAAgAsAAIELAAC9CwAAgAsAAL0LAAC8CwAAgQsAAIILAAC+CwAAgQsAAL4LAAC9CwAAggsAAIMLAAC/CwAAggsAAL8LAAC+CwAAgwsAAIQLAADACwAAgwsAAMALAAC/CwAAhAsAAIULAADBCwAAhAsAAMELAADACwAAhQsAAIYLAADCCwAAhQsAAMILAADBCwAAhgsAAIcLAADDCwAAhgsAAMMLAADCCwAAhwsAAIgLAADECwAAhwsAAMQLAADDCwAAiAsAAIkLAADFCwAAiAsAAMULAADECwAAiQsAAIoLAADGCwAAiQsAAMYLAADFCwAAigsAAIsLAADHCwAAigsAAMcLAADGCwAAiwsAAIwLAADICwAAiwsAAMgLAADHCwAAjAsAAI0LAADJCwAAjAsAAMkLAADICwAAjQsAAI4LAADKCwAAjQsAAMoLAADJCwAAjgsAAI8LAADLCwAAjgsAAMsLAADKCwAAjwsAAJALAADMCwAAjwsAAMwLAADLCwAAkAsAAJELAADNCwAAkAsAAM0LAADMCwAAkQsAAJILAADOCwAAkQsAAM4LAADNCwAAkgsAAJMLAADPCwAAkgsAAM8LAADOCwAAkwsAAJQLAADQCwAAkwsAANALAADPCwAAlAsAAJULAADRCwAAlAsAANELAADQCwAAlQsAAJYLAADSCwAAlQsAANILAADRCwAAlgsAAJcLAADTCwAAlgsAANMLAADSCwAAlwsAAJgLAADUCwAAlwsAANQLAADTCwAAmAsAAJkLAADVCwAAmAsAANULAADUCwAAmQsAAJoLAADWCwAAmQsAANYLAADVCwAAmgsAAJsLAADXCwAAmgsAANcLAADWCwAAmwsAAJwLAADYCwAAmwsAANgLAADXCwAAnAsAAJ0LAADZCwAAnAsAANkLAADYCwAAnQsAAJ4LAADaCwAAnQsAANoLAADZCwAAngsAAJ8LAADbCwAAngsAANsLAADaCwAAnwsAAKALAADcCwAAnwsAANwLAADbCwAAoAsAAKELAADdCwAAoAsAAN0LAADcCwAAoQsAAKILAADeCwAAoQsAAN4LAADdCwAAogsAAKMLAADfCwAAogsAAN8LAADeCwAAowsAAKQLAADgCwAAowsAAOALAADfCwAApAsAAKULAADhCwAApAsAAOELAADgCwAApQsAAKYLAADiCwAApQsAAOILAADhCwAApgsAAKcLAADjCwAApgsAAOMLAADiCwAApwsAAKgLAADkCwAApwsAAOQLAADjCwAAqAsAAKkLAADlCwAAqAsAAOULAADkCwAAqQsAAKoLAADmCwAAqQsAAOYLAADlCwAAqgsAAKsLAADnCwAAqgsAAOcLAADmCwAAqwsAAKwLAADoCwAAqwsAAOgLAADnCwAArAsAAK0LAADpCwAArAsAAOkLAADoCwAArQsAAK4LAADqCwAArQsAAOoLAADpCwAArgsAAK8LAADrCwAArgsAAOsLAADqCwAArwsAALALAADsCwAArwsAAOwLAADrCwAAsAsAALELAADtCwAAsAsAAO0LAADsCwAAsQsAALILAADuCwAAsQsAAO4LAADtCwAAsgsAALMLAADvCwAAsgsAAO8LAADuCwAAswsAALQLAADwCwAAswsAAPALAADvCwAAtAsAALULAADxCwAAtAsAAPELAADwCwAAtQsAALYLAADyCwAAtQsAAPILAADxCwAAtgsAALcLAADzCwAAtgsAAPMLAADyCwAAuAsAALkLAAD1CwAAuAsAAPULAAD0CwAAuQsAALoLAAD2CwAAuQsAAPYLAAD1CwAAugsAALsLAAD3CwAAugsAAPcLAAD2CwAAuwsAALwLAAD4CwAAuwsAAPgLAAD3CwAAvAsAAL0LAAD5CwAAvAsAAPkLAAD4CwAAvQsAAL4LAAD6CwAAvQsAAPoLAAD5CwAAvgsAAL8LAAD7CwAAvgsAAPsLAAD6CwAAvwsAAMALAAD8CwAAvwsAAPwLAAD7CwAAwAsAAMELAAD9CwAAwAsAAP0LAAD8CwAAwQsAAMILAAD+CwAAwQsAAP4LAAD9CwAAwgsAAMMLAAD/CwAAwgsAAP8LAAD+CwAAwwsAAMQLAAAADAAAwwsAAAAMAAD/CwAAxAsAAMULAAABDAAAxAsAAAEMAAAADAAAxQsAAMYLAAACDAAAxQsAAAIMAAABDAAAxgsAAMcLAAADDAAAxgsAAAMMAAACDAAAxwsAAMgLAAAEDAAAxwsAAAQMAAADDAAAyAsAAMkLAAAFDAAAyAsAAAUMAAAEDAAAyQsAAMoLAAAGDAAAyQsAAAYMAAAFDAAAygsAAMsLAAAHDAAAygsAAAcMAAAGDAAAywsAAMwLAAAIDAAAywsAAAgMAAAHDAAAzAsAAM0LAAAJDAAAzAsAAAkMAAAIDAAAzQsAAM4LAAAKDAAAzQsAAAoMAAAJDAAAzgsAAM8LAAALDAAAzgsAAAsMAAAKDAAAzwsAANALAAAMDAAAzwsAAAwMAAALDAAA0AsAANELAAANDAAA0AsAAA0MAAAMDAAA0QsAANILAAAODAAA0QsAAA4MAAANDAAA0gsAANMLAAAPDAAA0gsAAA8MAAAODAAA0wsAANQLAAAQDAAA0wsAABAMAAAPDAAA1AsAANULAAARDAAA1AsAABEMAAAQDAAA1QsAANYLAAASDAAA1QsAABIMAAARDAAA1gsAANcLAAATDAAA1gsAABMMAAASDAAA1wsAANgLAAAUDAAA1wsAABQMAAATDAAA2AsAANkLAAAVDAAA2AsAABUMAAAUDAAA2QsAANoLAAAWDAAA2QsAABYMAAAVDAAA2gsAANsLAAAXDAAA2gsAABcMAAAWDAAA2wsAANwLAAAYDAAA2wsAABgMAAAXDAAA3AsAAN0LAAAZDAAA3AsAABkMAAAYDAAA3QsAAN4LAAAaDAAA3QsAABoMAAAZDAAA3gsAAN8LAAAbDAAA3gsAABsMAAAaDAAA3wsAAOALAAAcDAAA3wsAABwMAAAbDAAA4AsAAOELAAAdDAAA4AsAAB0MAAAcDAAA4QsAAOILAAAeDAAA4QsAAB4MAAAdDAAA4gsAAOMLAAAfDAAA4gsAAB8MAAAeDAAA4wsAAOQLAAAgDAAA4wsAACAMAAAfDAAA5AsAAOULAAAhDAAA5AsAACEMAAAgDAAA5QsAAOYLAAAiDAAA5QsAACIMAAAhDAAA5gsAAOcLAAAjDAAA5gsAACMMAAAiDAAA5wsAAOgLAAAkDAAA5wsAACQMAAAjDAAA6AsAAOkLAAAlDAAA6AsAACUMAAAkDAAA6QsAAOoLAAAmDAAA6QsAACYMAAAlDAAA6gsAAOsLAAAnDAAA6gsAACcMAAAmDAAA6wsAAOwLAAAoDAAA6wsAACgMAAAnDAAA7AsAAO0LAAApDAAA7AsAACkMAAAoDAAA7QsAAO4LAAAqDAAA7QsAACoMAAApDAAA7gsAAO8LAAArDAAA7gsAACsMAAAqDAAA7wsAAPALAAAsDAAA7wsAACwMAAArDAAA8AsAAPELAAAtDAAA8AsAAC0MAAAsDAAA8QsAAPILAAAuDAAA8QsAAC4MAAAtDAAA8gsAAPMLAAAvDAAA8gsAAC8MAAAuDAAA9AsAAPULAAAxDAAA9AsAADEMAAAwDAAA9QsAAPYLAAAyDAAA9QsAADIMAAAxDAAA9gsAAPcLAAAzDAAA9gsAADMMAAAyDAAA9wsAAPgLAAA0DAAA9wsAADQMAAAzDAAA+AsAAPkLAAA1DAAA+AsAADUMAAA0DAAA+QsAAPoLAAA2DAAA+QsAADYMAAA1DAAA+gsAAPsLAAA3DAAA+gsAADcMAAA2DAAA+wsAAPwLAAA4DAAA+wsAADgMAAA3DAAA/AsAAP0LAAA5DAAA/AsAADkMAAA4DAAA/QsAAP4LAAA6DAAA/QsAADoMAAA5DAAA/gsAAP8LAAA7DAAA/gsAADsMAAA6DAAA/wsAAAAMAAA8DAAA/wsAADwMAAA7DAAAAAwAAAEMAAA9DAAAAAwAAD0MAAA8DAAAAQwAAAIMAAA+DAAAAQwAAD4MAAA9DAAAAgwAAAMMAAA/DAAAAgwAAD8MAAA+DAAAAwwAAAQMAABADAAAAwwAAEAMAAA/DAAABAwAAAUMAABBDAAABAwAAEEMAABADAAABQwAAAYMAABCDAAABQwAAEIMAABBDAAABgwAAAcMAABDDAAABgwAAEMMAABCDAAABwwAAAgMAABEDAAABwwAAEQMAABDDAAACAwAAAkMAABFDAAACAwAAEUMAABEDAAACQwAAAoMAABGDAAACQwAAEYMAABFDAAACgwAAAsMAABHDAAACgwAAEcMAABGDAAACwwAAAwMAABIDAAACwwAAEgMAABHDAAADAwAAA0MAABJDAAADAwAAEkMAABIDAAADQwAAA4MAABKDAAADQwAAEoMAABJDAAADgwAAA8MAABLDAAADgwAAEsMAABKDAAADwwAABAMAABMDAAADwwAAEwMAABLDAAAEAwAABEMAABNDAAAEAwAAE0MAABMDAAAEQwAABIMAABODAAAEQwAAE4MAABNDAAAEgwAABMMAABPDAAAEgwAAE8MAABODAAAEwwAABQMAABQDAAAEwwAAFAMAABPDAAAFAwAABUMAABRDAAAFAwAAFEMAABQDAAAFQwAABYMAABSDAAAFQwAAFIMAABRDAAAFgwAABcMAABTDAAAFgwAAFMMAABSDAAAFwwAABgMAABUDAAAFwwAAFQMAABTDAAAGAwAABkMAABVDAAAGAwAAFUMAABUDAAAGQwAABoMAABWDAAAGQwAAFYMAABVDAAAGgwAABsMAABXDAAAGgwAAFcMAABWDAAAGwwAABwMAABYDAAAGwwAAFgMAABXDAAAHAwAAB0MAABZDAAAHAwAAFkMAABYDAAAHQwAAB4MAABaDAAAHQwAAFoMAABZDAAAHgwAAB8MAABbDAAAHgwAAFsMAABaDAAAHwwAACAMAABcDAAAHwwAAFwMAABbDAAAIAwAACEMAABdDAAAIAwAAF0MAABcDAAAIQwAACIMAABeDAAAIQwAAF4MAABdDAAAIgwAACMMAABfDAAAIgwAAF8MAABeDAAAIwwAACQMAABgDAAAIwwAAGAMAABfDAAAJAwAACUMAABhDAAAJAwAAGEMAABgDAAAJQwAACYMAABiDAAAJQwAAGIMAABhDAAAJgwAACcMAABjDAAAJgwAAGMMAABiDAAAJwwAACgMAABkDAAAJwwAAGQMAABjDAAAKAwAACkMAABlDAAAKAwAAGUMAABkDAAAKQwAACoMAABmDAAAKQwAAGYMAABlDAAAKgwAACsMAABnDAAAKgwAAGcMAABmDAAAKwwAACwMAABoDAAAKwwAAGgMAABnDAAALAwAAC0MAABpDAAALAwAAGkMAABoDAAALQwAAC4MAABqDAAALQwAAGoMAABpDAAALgwAAC8MAABrDAAALgwAAGsMAABqDAAAMAwAADEMAABtDAAAMAwAAG0MAABsDAAAMQwAADIMAABuDAAAMQwAAG4MAABtDAAAMgwAADMMAABvDAAAMgwAAG8MAABuDAAAMwwAADQMAABwDAAAMwwAAHAMAABvDAAANAwAADUMAABxDAAANAwAAHEMAABwDAAANQwAADYMAAByDAAANQwAAHIMAABxDAAANgwAADcMAABzDAAANgwAAHMMAAByDAAANwwAADgMAAB0DAAANwwAAHQMAABzDAAAOAwAADkMAAB1DAAAOAwAAHUMAAB0DAAAOQwAADoMAAB2DAAAOQwAAHYMAAB1DAAAOgwAADsMAAB3DAAAOgwAAHcMAAB2DAAAOwwAADwMAAB4DAAAOwwAAHgMAAB3DAAAPAwAAD0MAAB5DAAAPAwAAHkMAAB4DAAAPQwAAD4MAAB6DAAAPQwAAHoMAAB5DAAAPgwAAD8MAAB7DAAAPgwAAHsMAAB6DAAAPwwAAEAMAAB8DAAAPwwAAHwMAAB7DAAAQAwAAEEMAAB9DAAAQAwAAH0MAAB8DAAAQQwAAEIMAAB+DAAAQQwAAH4MAAB9DAAAQgwAAEMMAAB/DAAAQgwAAH8MAAB+DAAAQwwAAEQMAACADAAAQwwAAIAMAAB/DAAARAwAAEUMAACBDAAARAwAAIEMAACADAAARQwAAEYMAACCDAAARQwAAIIMAACBDAAARgwAAEcMAACDDAAARgwAAIMMAACCDAAARwwAAEgMAACEDAAARwwAAIQMAACDDAAASAwAAEkMAACFDAAASAwAAIUMAACEDAAASQwAAEoMAACGDAAASQwAAIYMAACFDAAASgwAAEsMAACHDAAASgwAAIcMAACGDAAASwwAAEwMAACIDAAASwwAAIgMAACHDAAATAwAAE0MAACJDAAATAwAAIkMAACIDAAATQwAAE4MAACKDAAATQwAAIoMAACJDAAATgwAAE8MAACLDAAATgwAAIsMAACKDAAATwwAAFAMAACMDAAATwwAAIwMAACLDAAAUAwAAFEMAACNDAAAUAwAAI0MAACMDAAAUQwAAFIMAACODAAAUQwAAI4MAACNDAAAUgwAAFMMAACPDAAAUgwAAI8MAACODAAAUwwAAFQMAACQDAAAUwwAAJAMAACPDAAAVAwAAFUMAACRDAAAVAwAAJEMAACQDAAAVQwAAFYMAACSDAAAVQwAAJIMAACRDAAAVgwAAFcMAACTDAAAVgwAAJMMAACSDAAAVwwAAFgMAACUDAAAVwwAAJQMAACTDAAAWAwAAFkMAACVDAAAWAwAAJUMAACUDAAAWQwAAFoMAACWDAAAWQwAAJYMAACVDAAAWgwAAFsMAACXDAAAWgwAAJcMAACWDAAAWwwAAFwMAACYDAAAWwwAAJgMAACXDAAAXAwAAF0MAACZDAAAXAwAAJkMAACYDAAAXQwAAF4MAACaDAAAXQwAAJoMAACZDAAAXgwAAF8MAACbDAAAXgwAAJsMAACaDAAAXwwAAGAMAACcDAAAXwwAAJwMAACbDAAAYAwAAGEMAACdDAAAYAwAAJ0MAACcDAAAYQwAAGIMAACeDAAAYQwAAJ4MAACdDAAAYgwAAGMMAACfDAAAYgwAAJ8MAACeDAAAYwwAAGQMAACgDAAAYwwAAKAMAACfDAAAZAwAAGUMAAChDAAAZAwAAKEMAACgDAAAZQwAAGYMAACiDAAAZQwAAKIMAAChDAAAZgwAAGcMAACjDAAAZgwAAKMMAACiDAAAZwwAAGgMAACkDAAAZwwAAKQMAACjDAAAaAwAAGkMAAClDAAAaAwAAKUMAACkDAAAaQwAAGoMAACmDAAAaQwAAKYMAAClDAAAagwAAGsMAACnDAAAagwAAKcMAACmDAAAbAwAAG0MAACpDAAAbAwAAKkMAACoDAAAbQwAAG4MAACqDAAAbQwAAKoMAACpDAAAbgwAAG8MAACrDAAAbgwAAKsMAACqDAAAbwwAAHAMAACsDAAAbwwAAKwMAACrDAAAcAwAAHEMAACtDAAAcAwAAK0MAACsDAAAcQwAAHIMAACuDAAAcQwAAK4MAACtDAAAcgwAAHMMAACvDAAAcgwAAK8MAACuDAAAcwwAAHQMAACwDAAAcwwAALAMAACvDAAAdAwAAHUMAACxDAAAdAwAALEMAACwDAAAdQwAAHYMAACyDAAAdQwAALIMAACxDAAAdgwAAHcMAACzDAAAdgwAALMMAACyDAAAdwwAAHgMAAC0DAAAdwwAALQMAACzDAAAeAwAAHkMAAC1DAAAeAwAALUMAAC0DAAAeQwAAHoMAAC2DAAAeQwAALYMAAC1DAAAegwAAHsMAAC3DAAAegwAALcMAAC2DAAAewwAAHwMAAC4DAAAewwAALgMAAC3DAAAfAwAAH0MAAC5DAAAfAwAALkMAAC4DAAAfQwAAH4MAAC6DAAAfQwAALoMAAC5DAAAfgwAAH8MAAC7DAAAfgwAALsMAAC6DAAAfwwAAIAMAAC8DAAAfwwAALwMAAC7DAAAgAwAAIEMAAC9DAAAgAwAAL0MAAC8DAAAgQwAAIIMAAC+DAAAgQwAAL4MAAC9DAAAggwAAIMMAAC/DAAAggwAAL8MAAC+DAAAgwwAAIQMAADADAAAgwwAAMAMAAC/DAAAhAwAAIUMAADBDAAAhAwAAMEMAADADAAAhQwAAIYMAADCDAAAhQwAAMIMAADBDAAAhgwAAIcMAADDDAAAhgwAAMMMAADCDAAAhwwAAIgMAADEDAAAhwwAAMQMAADDDAAAiAwAAIkMAADFDAAAiAwAAMUMAADEDAAAiQwAAIoMAADGDAAAiQwAAMYMAADFDAAAigwAAIsMAADHDAAAigwAAMcMAADGDAAAiwwAAIwMAADIDAAAiwwAAMgMAADHDAAAjAwAAI0MAADJDAAAjAwAAMkMAADIDAAAjQwAAI4MAADKDAAAjQwAAMoMAADJDAAAjgwAAI8MAADLDAAAjgwAAMsMAADKDAAAjwwAAJAMAADMDAAAjwwAAMwMAADLDAAAkAwAAJEMAADNDAAAkAwAAM0MAADMDAAAkQwAAJIMAADODAAAkQwAAM4MAADNDAAAkgwAAJMMAADPDAAAkgwAAM8MAADODAAAkwwAAJQMAADQDAAAkwwAANAMAADPDAAAlAwAAJUMAADRDAAAlAwAANEMAADQDAAAlQwAAJYMAADSDAAAlQwAANIMAADRDAAAlgwAAJcMAADTDAAAlgwAANMMAADSDAAAlwwAAJgMAADUDAAAlwwAANQMAADTDAAAmAwAAJkMAADVDAAAmAwAANUMAADUDAAAmQwAAJoMAADWDAAAmQwAANYMAADVDAAAmgwAAJsMAADXDAAAmgwAANcMAADWDAAAmwwAAJwMAADYDAAAmwwAANgMAADXDAAAnAwAAJ0MAADZDAAAnAwAANkMAADYDAAAnQwAAJ4MAADaDAAAnQwAANoMAADZDAAAngwAAJ8MAADbDAAAngwAANsMAADaDAAAnwwAAKAMAADcDAAAnwwAANwMAADbDAAAoAwAAKEMAADdDAAAoAwAAN0MAADcDAAAoQwAAKIMAADeDAAAoQwAAN4MAADdDAAAogwAAKMMAADfDAAAogwAAN8MAADeDAAAowwAAKQMAADgDAAAowwAAOAMAADfDAAApAwAAKUMAADhDAAApAwAAOEMAADgDAAApQwAAKYMAADiDAAApQwAAOIMAADhDAAApgwAAKcMAADjDAAApgwAAOMMAADiDAAAqAwAAKkMAADlDAAAqAwAAOUMAADkDAAAqQwAAKoMAADmDAAAqQwAAOYMAADlDAAAqgwAAKsMAADnDAAAqgwAAOcMAADmDAAAqwwAAKwMAADoDAAAqwwAAOgMAADnDAAArAwAAK0MAADpDAAArAwAAOkMAADoDAAArQwAAK4MAADqDAAArQwAAOoMAADpDAAArgwAAK8MAADrDAAArgwAAOsMAADqDAAArwwAALAMAADsDAAArwwAAOwMAADrDAAAsAwAALEMAADtDAAAsAwAAO0MAADsDAAAsQwAALIMAADuDAAAsQwAAO4MAADtDAAAsgwAALMMAADvDAAAsgwAAO8MAADuDAAAswwAALQMAADwDAAAswwAAPAMAADvDAAAtAwAALUMAADxDAAAtAwAAPEMAADwDAAAtQwAALYMAADyDAAAtQwAAPIMAADxDAAAtgwAALcMAADzDAAAtgwAAPMMAADyDAAAtwwAALgMAAD0DAAAtwwAAPQMAADzDAAAuAwAALkMAAD1DAAAuAwAAPUMAAD0DAAAuQwAALoMAAD2DAAAuQwAAPYMAAD1DAAAugwAALsMAAD3DAAAugwAAPcMAAD2DAAAuwwAALwMAAD4DAAAuwwAAPgMAAD3DAAAvAwAAL0MAAD5DAAAvAwAAPkMAAD4DAAAvQwAAL4MAAD6DAAAvQwAAPoMAAD5DAAAvgwAAL8MAAD7DAAAvgwAAPsMAAD6DAAAvwwAAMAMAAD8DAAAvwwAAPwMAAD7DAAAwAwAAMEMAAD9DAAAwAwAAP0MAAD8DAAAwQwAAMIMAAD+DAAAwQwAAP4MAAD9DAAAwgwAAMMMAAD/DAAAwgwAAP8MAAD+DAAAwwwAAMQMAAAADQAAwwwAAAANAAD/DAAAxAwAAMUMAAABDQAAxAwAAAENAAAADQAAxQwAAMYMAAACDQAAxQwAAAINAAABDQAAxgwAAMcMAAADDQAAxgwAAAMNAAACDQAAxwwAAMgMAAAEDQAAxwwAAAQNAAADDQAAyAwAAMkMAAAFDQAAyAwAAAUNAAAEDQAAyQwAAMoMAAAGDQAAyQwAAAYNAAAFDQAAygwAAMsMAAAHDQAAygwAAAcNAAAGDQAAywwAAMwMAAAIDQAAywwAAAgNAAAHDQAAzAwAAM0MAAAJDQAAzAwAAAkNAAAIDQAAzQwAAM4MAAAKDQAAzQwAAAoNAAAJDQAAzgwAAM8MAAALDQAAzgwAAAsNAAAKDQAAzwwAANAMAAAMDQAAzwwAAAwNAAALDQAA0AwAANEMAAANDQAA0AwAAA0NAAAMDQAA0QwAANIMAAAODQAA0QwAAA4NAAANDQAA0gwAANMMAAAPDQAA0gwAAA8NAAAODQAA0wwAANQMAAAQDQAA0wwAABANAAAPDQAA1AwAANUMAAARDQAA1AwAABENAAAQDQAA1QwAANYMAAASDQAA1QwAABINAAARDQAA1gwAANcMAAATDQAA1gwAABMNAAASDQAA1wwAANgMAAAUDQAA1wwAABQNAAATDQAA2AwAANkMAAAVDQAA2AwAABUNAAAUDQAA2QwAANoMAAAWDQAA2QwAABYNAAAVDQAA2gwAANsMAAAXDQAA2gwAABcNAAAWDQAA2wwAANwMAAAYDQAA2wwAABgNAAAXDQAA3AwAAN0MAAAZDQAA3AwAABkNAAAYDQAA3QwAAN4MAAAaDQAA3QwAABoNAAAZDQAA3gwAAN8MAAAbDQAA3gwAABsNAAAaDQAA3wwAAOAMAAAcDQAA3wwAABwNAAAbDQAA4AwAAOEMAAAdDQAA4AwAAB0NAAAcDQAA4QwAAOIMAAAeDQAA4QwAAB4NAAAdDQAA4gwAAOMMAAAfDQAA4gwAAB8NAAAeDQAA5AwAAOUMAAAhDQAA5AwAACENAAAgDQAA5QwAAOYMAAAiDQAA5QwAACINAAAhDQAA5gwAAOcMAAAjDQAA5gwAACMNAAAiDQAA5wwAAOgMAAAkDQAA5wwAACQNAAAjDQAA6AwAAOkMAAAlDQAA6AwAACUNAAAkDQAA6QwAAOoMAAAmDQAA6QwAACYNAAAlDQAA6gwAAOsMAAAnDQAA6gwAACcNAAAmDQAA6wwAAOwMAAAoDQAA6wwAACgNAAAnDQAA7AwAAO0MAAApDQAA7AwAACkNAAAoDQAA7QwAAO4MAAAqDQAA7QwAACoNAAApDQAA7gwAAO8MAAArDQAA7gwAACsNAAAqDQAA7wwAAPAMAAAsDQAA7wwAACwNAAArDQAA8AwAAPEMAAAtDQAA8AwAAC0NAAAsDQAA8QwAAPIMAAAuDQAA8QwAAC4NAAAtDQAA8gwAAPMMAAAvDQAA8gwAAC8NAAAuDQAA8wwAAPQMAAAwDQAA8wwAADANAAAvDQAA9AwAAPUMAAAxDQAA9AwAADENAAAwDQAA9QwAAPYMAAAyDQAA9QwAADINAAAxDQAA9gwAAPcMAAAzDQAA9gwAADMNAAAyDQAA9wwAAPgMAAA0DQAA9wwAADQNAAAzDQAA+AwAAPkMAAA1DQAA+AwAADUNAAA0DQAA+QwAAPoMAAA2DQAA+QwAADYNAAA1DQAA+gwAAPsMAAA3DQAA+gwAADcNAAA2DQAA+wwAAPwMAAA4DQAA+wwAADgNAAA3DQAA/AwAAP0MAAA5DQAA/AwAADkNAAA4DQAA/QwAAP4MAAA6DQAA/QwAADoNAAA5DQAA/gwAAP8MAAA7DQAA/gwAADsNAAA6DQAA/wwAAAANAAA8DQAA/wwAADwNAAA7DQAAAA0AAAENAAA9DQAAAA0AAD0NAAA8DQAAAQ0AAAINAAA+DQAAAQ0AAD4NAAA9DQAAAg0AAAMNAAA/DQAAAg0AAD8NAAA+DQAAAw0AAAQNAABADQAAAw0AAEANAAA/DQAABA0AAAUNAABBDQAABA0AAEENAABADQAABQ0AAAYNAABCDQAABQ0AAEINAABBDQAABg0AAAcNAABDDQAABg0AAEMNAABCDQAABw0AAAgNAABEDQAABw0AAEQNAABDDQAACA0AAAkNAABFDQAACA0AAEUNAABEDQAACQ0AAAoNAABGDQAACQ0AAEYNAABFDQAACg0AAAsNAABHDQAACg0AAEcNAABGDQAACw0AAAwNAABIDQAACw0AAEgNAABHDQAADA0AAA0NAABJDQAADA0AAEkNAABIDQAADQ0AAA4NAABKDQAADQ0AAEoNAABJDQAADg0AAA8NAABLDQAADg0AAEsNAABKDQAADw0AABANAABMDQAADw0AAEwNAABLDQAAEA0AABENAABNDQAAEA0AAE0NAABMDQAAEQ0AABINAABODQAAEQ0AAE4NAABNDQAAEg0AABMNAABPDQAAEg0AAE8NAABODQAAEw0AABQNAABQDQAAEw0AAFANAABPDQAAFA0AABUNAABRDQAAFA0AAFENAABQDQAAFQ0AABYNAABSDQAAFQ0AAFINAABRDQAAFg0AABcNAABTDQAAFg0AAFMNAABSDQAAFw0AABgNAABUDQAAFw0AAFQNAABTDQAAGA0AABkNAABVDQAAGA0AAFUNAABUDQAAGQ0AABoNAABWDQAAGQ0AAFYNAABVDQAAGg0AABsNAABXDQAAGg0AAFcNAABWDQAAGw0AABwNAABYDQAAGw0AAFgNAABXDQAAHA0AAB0NAABZDQAAHA0AAFkNAABYDQAAHQ0AAB4NAABaDQAAHQ0AAFoNAABZDQAAHg0AAB8NAABbDQAAHg0AAFsNAABaDQAAIA0AACENAABdDQAAIA0AAF0NAABcDQAAIQ0AACINAABeDQAAIQ0AAF4NAABdDQAAIg0AACMNAABfDQAAIg0AAF8NAABeDQAAIw0AACQNAABgDQAAIw0AAGANAABfDQAAJA0AACUNAABhDQAAJA0AAGENAABgDQAAJQ0AACYNAABiDQAAJQ0AAGINAABhDQAAJg0AACcNAABjDQAAJg0AAGMNAABiDQAAJw0AACgNAABkDQAAJw0AAGQNAABjDQAAKA0AACkNAABlDQAAKA0AAGUNAABkDQAAKQ0AACoNAABmDQAAKQ0AAGYNAABlDQAAKg0AACsNAABnDQAAKg0AAGcNAABmDQAAKw0AACwNAABoDQAAKw0AAGgNAABnDQAALA0AAC0NAABpDQAALA0AAGkNAABoDQAALQ0AAC4NAABqDQAALQ0AAGoNAABpDQAALg0AAC8NAABrDQAALg0AAGsNAABqDQAALw0AADANAABsDQAALw0AAGwNAABrDQAAMA0AADENAABtDQAAMA0AAG0NAABsDQAAMQ0AADINAABuDQAAMQ0AAG4NAABtDQAAMg0AADMNAABvDQAAMg0AAG8NAABuDQAAMw0AADQNAABwDQAAMw0AAHANAABvDQAANA0AADUNAABxDQAANA0AAHENAABwDQAANQ0AADYNAAByDQAANQ0AAHINAABxDQAANg0AADcNAABzDQAANg0AAHMNAAByDQAANw0AADgNAAB0DQAANw0AAHQNAABzDQAAOA0AADkNAAB1DQAAOA0AAHUNAAB0DQAAOQ0AADoNAAB2DQAAOQ0AAHYNAAB1DQAAOg0AADsNAAB3DQAAOg0AAHcNAAB2DQAAOw0AADwNAAB4DQAAOw0AAHgNAAB3DQAAPA0AAD0NAAB5DQAAPA0AAHkNAAB4DQAAPQ0AAD4NAAB6DQAAPQ0AAHoNAAB5DQAAPg0AAD8NAAB7DQAAPg0AAHsNAAB6DQAAPw0AAEANAAB8DQAAPw0AAHwNAAB7DQAAQA0AAEENAAB9DQAAQA0AAH0NAAB8DQAAQQ0AAEINAAB+DQAAQQ0AAH4NAAB9DQAAQg0AAEMNAAB/DQAAQg0AAH8NAAB+DQAAQw0AAEQNAACADQAAQw0AAIANAAB/DQAARA0AAEUNAACBDQAARA0AAIENAACADQAARQ0AAEYNAACCDQAARQ0AAIINAACBDQAARg0AAEcNAACDDQAARg0AAIMNAACCDQAARw0AAEgNAACEDQAARw0AAIQNAACDDQAASA0AAEkNAACFDQAASA0AAIUNAACEDQAASQ0AAEoNAACGDQAASQ0AAIYNAACFDQAASg0AAEsNAACHDQAASg0AAIcNAACGDQAASw0AAEwNAACIDQAASw0AAIgNAACHDQAATA0AAE0NAACJDQAATA0AAIkNAACIDQAATQ0AAE4NAACKDQAATQ0AAIoNAACJDQAATg0AAE8NAACLDQAATg0AAIsNAACKDQAATw0AAFANAACMDQAATw0AAIwNAACLDQAAUA0AAFENAACNDQAAUA0AAI0NAACMDQAAUQ0AAFINAACODQAAUQ0AAI4NAACNDQAAUg0AAFMNAACPDQAAUg0AAI8NAACODQAAUw0AAFQNAACQDQAAUw0AAJANAACPDQAAVA0AAFUNAACRDQAAVA0AAJENAACQDQAAVQ0AAFYNAACSDQAAVQ0AAJINAACRDQAAVg0AAFcNAACTDQAAVg0AAJMNAACSDQAAVw0AAFgNAACUDQAAVw0AAJQNAACTDQAAWA0AAFkNAACVDQAAWA0AAJUNAACUDQAAWQ0AAFoNAACWDQAAWQ0AAJYNAACVDQAAWg0AAFsNAACXDQAAWg0AAJcNAACWDQAAXA0AAF0NAACZDQAAXA0AAJkNAACYDQAAXQ0AAF4NAACaDQAAXQ0AAJoNAACZDQAAXg0AAF8NAACbDQAAXg0AAJsNAACaDQAAXw0AAGANAACcDQAAXw0AAJwNAACbDQAAYA0AAGENAACdDQAAYA0AAJ0NAACcDQAAYQ0AAGINAACeDQAAYQ0AAJ4NAACdDQAAYg0AAGMNAACfDQAAYg0AAJ8NAACeDQAAYw0AAGQNAACgDQAAYw0AAKANAACfDQAAZA0AAGUNAAChDQAAZA0AAKENAACgDQAAZQ0AAGYNAACiDQAAZQ0AAKINAAChDQAAZg0AAGcNAACjDQAAZg0AAKMNAACiDQAAZw0AAGgNAACkDQAAZw0AAKQNAACjDQAAaA0AAGkNAAClDQAAaA0AAKUNAACkDQAAaQ0AAGoNAACmDQAAaQ0AAKYNAAClDQAAag0AAGsNAACnDQAAag0AAKcNAACmDQAAaw0AAGwNAACoDQAAaw0AAKgNAACnDQAAbA0AAG0NAACpDQAAbA0AAKkNAACoDQAAbQ0AAG4NAACqDQAAbQ0AAKoNAACpDQAAbg0AAG8NAACrDQAAbg0AAKsNAACqDQAAbw0AAHANAACsDQAAbw0AAKwNAACrDQAAcA0AAHENAACtDQAAcA0AAK0NAACsDQAAcQ0AAHINAACuDQAAcQ0AAK4NAACtDQAAcg0AAHMNAACvDQAAcg0AAK8NAACuDQAAcw0AAHQNAACwDQAAcw0AALANAACvDQAAdA0AAHUNAACxDQAAdA0AALENAACwDQAAdQ0AAHYNAACyDQAAdQ0AALINAACxDQAAdg0AAHcNAACzDQAAdg0AALMNAACyDQAAdw0AAHgNAAC0DQAAdw0AALQNAACzDQAAeA0AAHkNAAC1DQAAeA0AALUNAAC0DQAAeQ0AAHoNAAC2DQAAeQ0AALYNAAC1DQAAeg0AAHsNAAC3DQAAeg0AALcNAAC2DQAAew0AAHwNAAC4DQAAew0AALgNAAC3DQAAfA0AAH0NAAC5DQAAfA0AALkNAAC4DQAAfQ0AAH4NAAC6DQAAfQ0AALoNAAC5DQAAfg0AAH8NAAC7DQAAfg0AALsNAAC6DQAAfw0AAIANAAC8DQAAfw0AALwNAAC7DQAAgA0AAIENAAC9DQAAgA0AAL0NAAC8DQAAgQ0AAIINAAC+DQAAgQ0AAL4NAAC9DQAAgg0AAIMNAAC/DQAAgg0AAL8NAAC+DQAAgw0AAIQNAADADQAAgw0AAMANAAC/DQAAhA0AAIUNAADBDQAAhA0AAMENAADADQAAhQ0AAIYNAADCDQAAhQ0AAMINAADBDQAAhg0AAIcNAADDDQAAhg0AAMMNAADCDQAAhw0AAIgNAADEDQAAhw0AAMQNAADDDQAAiA0AAIkNAADFDQAAiA0AAMUNAADEDQAAiQ0AAIoNAADGDQAAiQ0AAMYNAADFDQAAig0AAIsNAADHDQAAig0AAMcNAADGDQAAiw0AAIwNAADIDQAAiw0AAMgNAADHDQAAjA0AAI0NAADJDQAAjA0AAMkNAADIDQAAjQ0AAI4NAADKDQAAjQ0AAMoNAADJDQAAjg0AAI8NAADLDQAAjg0AAMsNAADKDQAAjw0AAJANAADMDQAAjw0AAMwNAADLDQAAkA0AAJENAADNDQAAkA0AAM0NAADMDQAAkQ0AAJINAADODQAAkQ0AAM4NAADNDQAAkg0AAJMNAADPDQAAkg0AAM8NAADODQAAkw0AAJQNAADQDQAAkw0AANANAADPDQAAlA0AAJUNAADRDQAAlA0AANENAADQDQAAlQ0AAJYNAADSDQAAlQ0AANINAADRDQAAlg0AAJcNAADTDQAAlg0AANMNAADSDQAAmA0AAJkNAADVDQAAmA0AANUNAADUDQAAmQ0AAJoNAADWDQAAmQ0AANYNAADVDQAAmg0AAJsNAADXDQAAmg0AANcNAADWDQAAmw0AAJwNAADYDQAAmw0AANgNAADXDQAAnA0AAJ0NAADZDQAAnA0AANkNAADYDQAAnQ0AAJ4NAADaDQAAnQ0AANoNAADZDQAAng0AAJ8NAADbDQAAng0AANsNAADaDQAAnw0AAKANAADcDQAAnw0AANwNAADbDQAAoA0AAKENAADdDQAAoA0AAN0NAADcDQAAoQ0AAKINAADeDQAAoQ0AAN4NAADdDQAAog0AAKMNAADfDQAAog0AAN8NAADeDQAAow0AAKQNAADgDQAAow0AAOANAADfDQAApA0AAKUNAADhDQAApA0AAOENAADgDQAApQ0AAKYNAADiDQAApQ0AAOINAADhDQAApg0AAKcNAADjDQAApg0AAOMNAADiDQAApw0AAKgNAADkDQAApw0AAOQNAADjDQAAqA0AAKkNAADlDQAAqA0AAOUNAADkDQAAqQ0AAKoNAADmDQAAqQ0AAOYNAADlDQAAqg0AAKsNAADnDQAAqg0AAOcNAADmDQAAqw0AAKwNAADoDQAAqw0AAOgNAADnDQAArA0AAK0NAADpDQAArA0AAOkNAADoDQAArQ0AAK4NAADqDQAArQ0AAOoNAADpDQAArg0AAK8NAADrDQAArg0AAOsNAADqDQAArw0AALANAADsDQAArw0AAOwNAADrDQAAsA0AALENAADtDQAAsA0AAO0NAADsDQAAsQ0AALINAADuDQAAsQ0AAO4NAADtDQAAsg0AALMNAADvDQAAsg0AAO8NAADuDQAAsw0AALQNAADwDQAAsw0AAPANAADvDQAAtA0AALUNAADxDQAAtA0AAPENAADwDQAAtQ0AALYNAADyDQAAtQ0AAPINAADxDQAAtg0AALcNAADzDQAAtg0AAPMNAADyDQAAtw0AALgNAAD0DQAAtw0AAPQNAADzDQAAuA0AALkNAAD1DQAAuA0AAPUNAAD0DQAAuQ0AALoNAAD2DQAAuQ0AAPYNAAD1DQAAug0AALsNAAD3DQAAug0AAPcNAAD2DQAAuw0AALwNAAD4DQAAuw0AAPgNAAD3DQAAvA0AAL0NAAD5DQAAvA0AAPkNAAD4DQAAvQ0AAL4NAAD6DQAAvQ0AAPoNAAD5DQAAvg0AAL8NAAD7DQAAvg0AAPsNAAD6DQAAvw0AAMANAAD8DQAAvw0AAPwNAAD7DQAAwA0AAMENAAD9DQAAwA0AAP0NAAD8DQAAwQ0AAMINAAD+DQAAwQ0AAP4NAAD9DQAAwg0AAMMNAAD/DQAAwg0AAP8NAAD+DQAAww0AAMQNAAAADgAAww0AAAAOAAD/DQAAxA0AAMUNAAABDgAAxA0AAAEOAAAADgAAxQ0AAMYNAAACDgAAxQ0AAAIOAAABDgAAxg0AAMcNAAADDgAAxg0AAAMOAAACDgAAxw0AAMgNAAAEDgAAxw0AAAQOAAADDgAAyA0AAMkNAAAFDgAAyA0AAAUOAAAEDgAAyQ0AAMoNAAAGDgAAyQ0AAAYOAAAFDgAAyg0AAMsNAAAHDgAAyg0AAAcOAAAG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bmdlwqliaWxsYm9hcmTCqGhpZ2hjbGlw2BcAAAAAAAAAAAAAAAAAAAAArXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBdmZuY+ZmbmPmZm5j6pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAArWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlp2xvd2NsaXDYFwAAAAAAAAAAAAAAAAAAAACyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAAAORAAA0UOlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsKrbGlnaHRfY29sb3LHDBcAAAA/AAAAPwAAAD+rZGVwdGhfc2hpZnTKAAAAAKhjb2xvcm1hcMKndmlzaWJsZccHaKY5MTIyNTirbWFya2Vyc3BhY2XHB2imOTEyMzMxsWF0dHJpYnV0ZV91cGRhdGVyxwdopjkxMjY3NahvdmVyZHJhd8cHaKY5MTIzMTWvdW5pZm9ybV91cGRhdGVyxwdopjkxMjY3NqVmYWNlc8cHaKY5MTI2NzSkdXVpZLQxNjM5NDAxNjE2OTI0NTQ5NTUyOK12ZXJ0ZXhfc291cmNl2hw5CnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gZmxvYXQgcHhfcGVyX3VuaXQ7CmZsb2F0IGdldF9weF9wZXJfdW5pdCgpe3JldHVybiBweF9wZXJfdW5pdDt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgbWF0NCB0cmFucyA9IGdldF90cmFuc2Zvcm1fbWFya2VyKCkgPyBtb2RlbCA6IG1hdDQoMS4wKTsKCiAgICAvLyBDb21wdXRlIGNlbnRyZSBvZiBiaWxsYm9hcmQgaW4gY2xpcHBpbmcgY29vcmRpbmF0ZXMKICAgIC8vIEFsd2F5cyB0cmFuc2Zvcm0gdGV4dC9zY2F0dGVyIHBvc2l0aW9uIGFyZ3VtZW50CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIC8vIG1heWJlIHRyYW5zZm9ybSBtYXJrZXJfb2Zmc2V0ICsgZ2x5cGggb2Zmc2V0cwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKHRyYW5zKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwoKICAgIC8vIENvbXB1dGUgdHJhbnNmb3JtIGZvciB0aGUgb2Zmc2V0IHZlY3RvcnMgZnJvbSB0aGUgY2VudHJhbCBwb2ludAogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CgogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogcHhfcGVyX3VuaXQgKiBnZXRfcmVzb2x1dGlvbigpKSAqIG1hdDIoZF9uZGNfZF9jbGlwKnRyYW5zKTsKICAgIC8vIE5vdywgb3VyIGJ1ZmZlciBzaXplIGlzIGV4cHJlc3NlZCBpbiB2aWV3cG9ydCBwaXhlbHMgYnV0IHdlIGdldCBiYWNrIHRvCiAgICAvLyB0aGUgc3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHVzaW5nIHRoZSBzY2FsZSBmYWN0b3Igb2YgdGhlCiAgICAvLyB0cmFuc2Zvcm1hdGlvbiAoZm9yIGlzb3Ryb3BpYyB0cmFuc2Zvcm1hdGlvbnMpLiBGb3IgYW5pc290cm9waWMKICAgIC8vIHRyYW5zZm9ybWF0aW9ucywgdGhlIGdlb21ldHJpYyBtZWFuIG9mIHRoZSB0d28gcHJpbmNpcGxlIHNjYWxlIGZhY3RvcnMKICAgIC8vIGlzIGEgcmVhc29uYWJsZSBjb21wcm9taXNlOgogICAgZmxvYXQgdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgPSBzcXJ0KGFicyhfZGV0ZXJtaW5hbnQoZHh5dl9keHlzKSkpOwoKICAgIC8vIEluIHRoZSBmcmFnbWVudCBzaGFkZXIgd2Ugd2FudCBvdXIgc2lnbmVkIGRpc3RhbmNlIGluIHZpZXdwb3J0IChwaXhlbCkKICAgIC8vIGNvb3JkcyBmb3IgZGlyZWN0IHVzZSBpbiBhbnRpYWxpYXNpbmcgc3RlcCBmdW5jdGlvbnMuIFdlIHRoZXJlZm9yZSBuZWVkCiAgICAvLyBhIHNjYWxpbmcgZmFjdG9yIHNpbWlsYXIgdG8gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUsIGJ1dCBpbmNsdWRpbmcKICAgIC8vIHRoZSB1di0+c3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHNjYWxpbmcgZmFjdG9yIGFzIHdlbGwuICBXZSBjaG9vc2UgdG8KICAgIC8vIHVzZSB0aGUgYm91bmRpbmcgYm94ICp4KiB3aWR0aCBmb3IgdGhpcy4gVGhpcyBjb21lcyB3aXRoIHNvbWUKICAgIC8vIGNvbnNpc3RlbmN5IGNvbmRpdGlvbnM6CiAgICAvLyAqIEZvciBwcm9jZWR1cmFsIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0aGUgc3ByaXRlIGJvdW5kaW5nIGJveCB0byBiZQogICAgLy8gICBzcXVhcmUuIChJZiBub3QsIHRoZSB1diBjb29yZGluYXRlcyB3aWxsIGJlIGFuaXNvdHJvcGljYWxseSBzY2FsZWQgYW5kCiAgICAvLyAgIGFueSBjYWxjdWxhdGlvbiBiYXNlZCBvbiB0aGVtIHdpbGwgbm90IGJlIGEgZGlzdGFuY2UgZnVuY3Rpb24uKQogICAgLy8gKiBGb3Igc2FtcGxlZCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdG8gY29uc2lzdGVudGx5IGNob29zZSB0aGUgKngqCiAgICAvLyAgIGZvciB0aGUgc2NhbGluZyBpbiBnZXRfZGlzdGFuY2VmaWVsZF9zY2FsZSgpLgogICAgZmxvYXQgc3ByaXRlX2Zyb21fdV9zY2FsZSA9IGFicyhnZXRfbWFya2Vyc2l6ZSgpLngpOwogICAgZnJhZ191dnNjYWxlID0gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgKiBzcHJpdGVfZnJvbV91X3NjYWxlOwogICAgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlID0gZGlzdGFuY2VmaWVsZF9zY2FsZSgpOwogICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3IoKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2X29mZnNldF93aWR0aCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIC8vIHNjcmVlbiBzcGFjZSBjb29yZGluYXRlcyBvZiB0aGUgcG9zaXRpb24KICAgIHZlYzQgcXVhZF92ZXJ0ZXggPSAodHJhbnMgKiB2ZWM0KDIuMCAqIGJib3hfc2lnbmVkX3JhZGl1cyAqIGdldF9wb3NpdGlvbigpLCAwLjAsIDAuMCkpOwogICAgZ2xfUG9zaXRpb24gPSB2Y2xpcCArIHF1YWRfdmVydGV4OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaE/gKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gZmxvYXQgcHhfcGVyX3VuaXQ7CmZsb2F0IGdldF9weF9wZXJfdW5pdCgpe3JldHVybiBweF9wZXJfdW5pdDt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRS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DjcqPougYb4wj629nKiYPk7qPr4wj629lhPePhE0HL4wj629ansQP6n78r0wj629EHcuPzCPrb0wj629AfhGP2xFUL0wj629jlBYP/PYirwwj629C01hP/PYijwwj629C01hP2xFUD0wj629jlBYPzCPrT0wj629AfhGP6n78j0wj629EHcuPxE0HD4wj629ansQP07qPj4wj629lhPePougYT4wj629nKiYPmQrgj4wj629DjcqPoKGkz4wj629pd47PaHhpD4wj629/Fpmvb88tj4wj629eGMKvt2Xxz4wj629LnZAvvzy2D4wj6291hFbvhpO6j4wj6297aVbvjip+z4wj6298JBFviuCBj8wj629B7sdvrsvDz8wj629uCbUvUrdFz8wj629evNDvdmKID8wj629NvPoO2g4KT8wj629gJhkPfflMT8wj629mlbAPYeTOj8wj629Dq7yPRZBQz8wj629VEgDPqXuSz8wj6297n/8PTScVD8wj629LffXPcNJXT8wj629ut2ePVL3ZT8wj629M4wxPeKkbj8wj629gPLgO3FSdz8wj629AQbkvAAAgD8wj629TSpqvQAAgL9sRVC9jPVivXFSd79sRVC93SzRvOKkbr9sRVC9V8kbPFL3Zb9sRVC9uK08PcNJXb9sRVC9ce2jPTScVL9sRVC9ZNHbPaXuS79sRVC9GnX+PRZBQ79sRVC98gQDPoeTOr9sRVC9iUHvPfflMb9sRVC9Etu5PWg4Kb9sRVC9XdNRPdmKIL9sRVC9k8OyOkrdF79sRVC9RmxevbsvD79sRVC9zI7hvSuCBr9sRVC9FrEjvjip+75sRVC9ks9JvhpO6r5sRVC9hRldvvzy2L5sRVC9B5tYvt2Xx75sRVC9cPo4vr88tr5sRVC9jb35vaHhpL5sRVC93rQUvYKGk75sRVC98NKVPWQrgr5sRVC9UQ5OPougYb5sRVC9S42uPk7qPr5sRVC9dMz3PhE0HL5sRVC9sBkfP6n78r1sRVC9LJo+PzCPrb1sRVC9jlBYP2xFUL1sRVC9NoBqP/PYirxsRVC9+OpzP/PYijxsRVC9+OpzP2xFUD1sRVC9NoBqPzCPrT1sRVC9jlBYP6n78j1sRVC9LJo+PxE0HD5sRVC9sBkfP07qPj5sRVC9dMz3PougYT5sRVC9S42uPmQrgj5sRVC9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ZWFyRmlsdGVypXdyYXBTs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcewF1K4Hj9vEoM7ppuEPgAAgD+PwlU//tR4PlK4nj4AAIA/9P10P76f2j7wp4Y+AACAP7bzfT+Nly4/XI/CPgAAgD/b+X4/nMRgPx+FCz8AAIA/AACAPwAAgD93vj8/AACAP3npZj8ZBHY/dZMYPwAAgD+oxis/tvNdP6abJD8AAIA/zczMPuXQQj/LoSU/AACAPzm0SD6wcgg/LbI9PwAAgD+R7bw+UriePlyPIj8AAIA/rHRocmVlX2Zvcm1hdKpSR0JBRm9ybWF0pHNpemXWFQsAAACkdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlp3Zpc2libGXHB2imOTEyNTkwsWF0dHJpYnV0ZV91cGRhdGVyxwdopjkxMjcyMqhvdmVyZHJhd8cHaKY5MTI1OTKvdW5pZm9ybV91cGRhdGVyxwdopjkxMjcyM6VmYWNlc8cHaKY5MTI3MjGkdXVpZLMyMTgzNzgzNzgyNzA1ODI1NTEzrXZlcnRleF9zb3VyY2XaEvYKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQppbiB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzMgbGlnaHRfY29sb3I7CnZlYzMgZ2V0X2xpZ2h0X2NvbG9yKCl7cmV0dXJuIGxpZ2h0X2NvbG9yO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KdW5pZm9ybSB2ZWMzIGxpZ2h0X2RpcmVjdGlvbjsKdmVjMyBnZXRfbGlnaHRfZGlyZWN0aW9uKCl7cmV0dXJuIGxpZ2h0X2RpcmVjdGlvbjt9CgoKCm91dCB2ZWMyIGZyYWdfdXY7Cm91dCB2ZWMzIG9fbm9ybWFsOwpvdXQgdmVjMyBvX2NhbWRpcjsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7CnVuaWZvcm0gdmVjMyBleWVwb3NpdGlvbjsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uKQp7CiAgICAvLyBub3JtYWwgaW4gd29ybGQgc3BhY2UKICAgIG9fbm9ybWFsID0gZ2V0X25vcm1hbG1hdHJpeCgpICogbm9ybWFsOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3ICogcG9zaXRpb25fd29ybGQ7IC8vIFRPRE8gY29uc2lkZXIgdXNpbmcgcHJvamVjdGlvbnZpZXcgZGlyZWN0bHkKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGNhbWVyYQogICAgb19jYW1kaXIgPSBwb3NpdGlvbl93b3JsZC54eXogLyBwb3NpdGlvbl93b3JsZC53IC0gZXllcG9zaXRpb247Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgLy8gZ2V0XyogZ2V0cyB0aGUgZ2xvYmFsIGlucHV0cyAodW5pZm9ybSwgc2FtcGxlciwgcG9zaXRpb24gYXJyYXkpCiAgICAvLyB0aG9zZSBmdW5jdGlvbnMgd2lsbCBnZXQgaW5zZXJ0ZWQgYnkgdGhlIHNoYWRlciBjcmVhdGlvbiBwaXBlbGluZQogICAgdmVjMyB2ZXJ0ZXhfcG9zaXRpb24gPSB0b3ZlYzMoZ2V0X3Bvc2l0aW9uKCkpOwogICAgaWYgKGlzbmFuKHZlcnRleF9wb3NpdGlvbi56KSkgewogICAgICAgIHZlcnRleF9wb3NpdGlvbi56ID0gMC4wOwogICAgfQogICAgdmVjNCBwb3NpdGlvbl93b3JsZCA9IG1vZGVsICogdmVjNCh2ZXJ0ZXhfcG9zaXRpb24sIDEpOwoKICAgIHJlbmRlcihwb3NpdGlvbl93b3JsZCwgZ2V0X25vcm1hbHMoKSwgdmlldywgcHJvamVjdGlvbik7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2ID0gdmVjMigxLjAgLSBmcmFnX3V2LnksIGZyYWdfdXYueCk7CiAgICBmcmFnX2NvbG9yID0gdmVydGV4X2NvbG9yKGdldF9jb2xvcigpLCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfVmVydGV4SUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2haTCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzMgbGlnaHRfY29sb3I7CnZlYzMgZ2V0X2xpZ2h0X2NvbG9yKCl7cmV0dXJuIGxpZ2h0X2NvbG9yO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KdW5pZm9ybSB2ZWMzIGxpZ2h0X2RpcmVjdGlvbjsKdmVjMyBnZXRfbGlnaHRfZGlyZWN0aW9uKCl7cmV0dXJuIGxpZ2h0X2RpcmVjdGlvbjt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwoKLy8gU21vb3RoZXMgb3V0IGVkZ2UgYXJvdW5kIDAgbGlnaHQgaW50ZW5zaXR5LCBzZWUgR0xNYWtpZQpmbG9hdCBzbW9vdGhfemVyb19tYXgoZmxvYXQgeCkgewogICAgY29uc3QgZmxvYXQgYyA9IDAuMDAzOTA2MjUsIHhzd2FwID0gMC42NDA2NzA3MTIwMTUyNzU5LCB5c3dhcCA9IDAuMjA1MDgzODM5MDAxOTA5NTU7CiAgICBjb25zdCBmbG9hdCBzaGlmdCA9IDEuMCArIHhzd2FwIC0geXN3YXA7CiAgICBmbG9hdCBwb3c4ID0geCArIHNoaWZ0OwogICAgcG93OCA9IHBvdzggKiBwb3c4OyBwb3c4ID0gcG93OCAqIHBvdzg7IHBvdzggPSBwb3c4ICogcG93ODsKICAgIHJldHVybiB4IDwgeXN3YXAgPyBjICogcG93OCA6IHg7Cn0KCnZlYzMgYmxpbm5waG9uZyh2ZWMzIE4sIHZlYzMgViwgdmVjMyBMLCB2ZWMzIGNvbG9yKXsKICAgIGZsb2F0IGJhY2tsaWdodCA9IGdldF9iYWNrbGlnaHQoKTsKICAgIGZsb2F0IGRpZmZfY29lZmYgPSBzbW9vdGhfemVyb19tYXgoZG90KEwsIC1OKSkgKwogICAgICAgIGJhY2tsaWdodCAqIHNtb290aF96ZXJvX21heChkb3QoTCwgTikpOwoKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwoKICAgIGZsb2F0IHNwZWNfY29lZmYgPSBwb3cobWF4KGRvdChILCAtTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSkgKwogICAgICAgIGJhY2tsaWdodCAqIHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CgogICAgLy8gZmluYWwgbGlnaHRpbmcgbW9kZWwKICAgIHJldHVybiBnZXRfbGlnaHRfY29sb3IoKSAqIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IGdldF9saWdodF9kaXJlY3Rpb24oKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQgPSBibGlubnBob25nKE4sIG5vcm1hbGl6ZShvX2NhbWRpciksIEwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Cq9iYWNrZ3JvdW5kY29sb3LHB2imOTEyNjM2tWNhbWVyYV9yZWxhdGl2ZV9saWdodMOoY2hpbGRyZW6Qp3Zpc2libGXHB2imOTEyMTA3tWJhY2tncm91bmRjb2xvcl9hbHBoYccHaKY5MTI2MzemY2FtZXJhxwdopjkxMjYzOK9saWdodF9kaXJlY3Rpb27HB2imOTEyMjE0qmNsZWFyc2NlbmXHB2imOTEyMTA2pHV1aWS0MTExMzk4Nzk5MTk5NDEwNjI4Njeodmlld3BvcnTHB2imOTEyNjI4q2NhbTNkX3N0YXRlh6Zsb29rYXTHB2imOTEyNjI5q2V5ZXBvc2l0aW9uxwdopjkxMjYzMapyZXNvbHV0aW9uxwdopjkxMjYzNah1cHZlY3RvcscHaKY5MTI2MzCjZm92xwdopjkxMjYzMqRuZWFyxwdopjkxMjYzM6NmYXLHB2imOTEyNjM0p3Zpc2libGXHB2imOTEyMDM1tWJhY2tncm91bmRjb2xvcl9hbHBoYccHaKY5MTI3MjWmY2FtZXJhxwdopjkxMjcyNq9saWdodF9kaXJlY3Rpb27HB2imOTEyMDkwqmNsZWFyc2NlbmXHB2imOTEyMDM0pHV1aWS0MTI2MzE5ODUzODIxMzM3MzQ0OTeodmlld3BvcnTHB2imOTEyNjI3q2NhbTNkX3N0YXRlwKd2aXNpYmxlxwdopjkxMTg1M7ViYWNrZ3JvdW5kY29sb3JfYWxwaGHHB2imOTEyNzI4pmNhbWVyYccHaKY5MTI3MjmvbGlnaHRfZGlyZWN0aW9uxwdopjkxMTk1MKpjbGVhcnNjZW5lxwdopjkxMTk0NqR1dWlktDE3MjAxOTk3MDE5MzQ1Nzg3NDAyqHZpZXdwb3J0xwdopjkxMjYyNqtjYW0zZF9zdGF0ZcC0MTcwODI1NzUwMzUzNTczNzc3MDfHB2imOTEyNzMw2wATfDcoKCkgPT4gewogICAgICAgICAgICBpZiAoIXdpbmRvdy5KU1NFUlZFX0lNUE9SVFMpIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5KU1NFUlZFX0lNUE9SVFMgPSB7fTsKICAgICAgICAgICAgfQogICAgICAgICAgICBKU1NFUlZFX0lNUE9SVFNbJ2NjNGM2YWE2YTFmMDZhMWI1MDEzYmNhMDE3MDJmMzZhMTg0YzA0Mzktd2dsbWFraWUuanMnXSA9IGBkYXRhOmFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7YmFzZTY0LEx5OGdaR1Z1YnkxbWJYUXRhV2R1YjNKbExXWnBiR1VLTHk4Z1pHVnVieTFzYVc1MExXbG5ibTl5WlMxbWFXeGxDaTh2SUZSb2FYTWdZMjlrWlNCM1lYTWdZblZ1Wkd4bFpDQjFjMmx1WnlCZ1pHVnVieUJpZFc1a2JHVmdJR0Z1WkNCcGRDZHpJRzV2ZENCeVpXTnZiVzFsYm1SbFpDQjBieUJsWkdsMElHbDBJRzFoYm5WaGJHeDVDZ3AyWVhJZ1NHTWdQU0FpTVRVM0lpd2dlbmdnUFNCN0NpQWdJQ0JNUlVaVU9pQXdMQW9nSUNBZ1RVbEVSRXhGT2lBeExBb2dJQ0FnVWtsSFNGUTZJRElzQ2lBZ0lDQlNUMVJCVkVVNklEQXNDaUFnSUNCRVQweE1XVG9nTVN3S0lDQWdJRkJCVGpvZ01ncDlMQ0JXZUNBOUlIc0tJQ0FnSUZKUFZFRlVSVG9nTUN3S0lDQWdJRkJCVGpvZ01Td0tJQ0FnSUVSUFRFeFpYMUJCVGpvZ01pd0tJQ0FnSUVSUFRFeFpYMUpQVkVGVVJUb2dNd3A5TENCclpDQTlJREFzSUhKc0lEMGdNU3dnU0dRZ1BTQXlMQ0JyZUNBOUlETXNJRWg0SUQwZ01Dd2dZMlFnUFNBeExDQkhaQ0E5SURJc0lIQnVJRDBnTXl3Z1FtNGdQU0F3TENCR2RDQTlJREVzSUdkdUlEMGdNaXdnUjNnZ1BTQXlMQ0JFYmlBOUlEQXNJRmRwSUQwZ01Td2dZV3dnUFNBeUxDQnZiQ0E5SURNc0lHTnNJRDBnTkN3Z1YyUWdQU0ExTENCQ2FTQTlJREV3TUN3Z1dHUWdQU0F4TURFc0lIRmtJRDBnTVRBeUxDQnNiQ0E5SURFd015d2dhR3dnUFNBeE1EUXNJRmxrSUQwZ01qQXdMQ0JhWkNBOUlESXdNU3dnU21RZ1BTQXlNRElzSUNSa0lEMGdNakF6TENCc1pDQTlJREl3TkN3Z2FHUWdQU0F5TURVc0lFdGtJRDBnTWpBMkxDQlJaQ0E5SURJd055d2dhbVFnUFNBeU1EZ3NJR1ZtSUQwZ01qQTVMQ0IwWmlBOUlESXhNQ3dnYm1ZZ1BTQXdMQ0J6WmlBOUlERXNJSEptSUQwZ01pd2dkVzhnUFNBekxDQmhaaUE5SURRc0lHOW1JRDBnTlN3Z1kyWWdQU0EyTENCc1ppQTlJRGNzSUhoaElEMGdNQ3dnYUdZZ1BTQXhMQ0IxWmlBOUlESXNJRTV1SUQwZ01Dd2daR1lnUFNBeExDQm1aaUE5SURJc0lIQm1JRDBnTXl3Z2JXWWdQU0EwTENCblppQTlJRFVzSUVkaklEMGdNekF3TENCNmJpQTlJRE13TVN3Z1kya2dQU0F6TURJc0lFbHlJRDBnTXpBekxDQlZjaUE5SURNd05Dd2dWbk1nUFNBek1EWXNJRVJ5SUQwZ01XVXpMQ0JKZENBOUlERXdNREVzSUU1eUlEMGdNVEF3TWl3Z2NIUWdQU0F4TURBekxDQm1ieUE5SURFd01EUXNJRmQ0SUQwZ01UQXdOQ3dnVEhJZ1BTQXhNREExTENCWWVDQTlJREV3TURVc0lHMTBJRDBnTVRBd05pd2dkV1FnUFNBeE1EQTNMQ0J4ZUNBOUlERXdNRGNzSUd4cElEMGdNVEF3T0N3Z1dYZ2dQU0F4TURBNExDQlBiaUE5SURFd01Ea3NJRjltSUQwZ01UQXhNQ3dnZUdZZ1BTQXhNREV4TENCWFl5QTlJREV3TVRJc0lHUmtJRDBnTVRBeE15d2dURzRnUFNBeE1ERTBMQ0I0YmlBOUlERXdNVFVzSUZSeklEMGdNVEF4Tml3Z1ptUWdQU0F4TURFM0xDQndaQ0E5SURFd01UZ3NJR2xwSUQwZ01UQXlNQ3dnZG1ZZ1BTQXhNREl4TENCWGRDQTlJREV3TWpNc0lIbG1JRDBnTVRBeU5Dd2dUV1lnUFNBeE1ESTFMQ0J6YVNBOUlERXdNallzSUZscElEMGdNVEF5Tnl3Z1UyWWdQU0F4TURJNExDQnRaQ0E5SURFd01qa3NJR0ptSUQwZ01UQXpNQ3dnWjJRZ1BTQXhNRE14TENCZlpDQTlJREV3TXpNc0lIZGhJRDBnTXpNM056WXNJRUZoSUQwZ016TTNOemNzSUZKaElEMGdNek0zTnpnc0lFTmhJRDBnTXpNM056a3NJSFZzSUQwZ016VTROREFzSUdSc0lEMGdNelU0TkRFc0lHWnNJRDBnTXpVNE5ESXNJSEJzSUQwZ016VTRORE1zSUVWbUlEMGdNell4T1RZc0lHMXNJRDBnTXpjME9USXNJR2RzSUQwZ016YzBPVFlzSUY5c0lEMGdNemM0TURnc0lIaHNJRDBnTXpjNE1Ea3NJSFpzSUQwZ016YzRNVEFzSUhsc0lEMGdNemM0TVRFc0lFMXNJRDBnTXpjNE1USXNJRk5zSUQwZ016YzRNVE1zSUdKc0lEMGdNemM0TVRRc0lFVnNJRDBnTXpjNE1UVXNJRlJzSUQwZ016YzRNVFlzSUhkc0lEMGdNemM0TVRjc0lFRnNJRDBnTXpjNE1UZ3NJRkpzSUQwZ016YzRNVGtzSUVOc0lEMGdNemM0TWpBc0lGQnNJRDBnTXpjNE1qRXNJRkJoSUQwZ016WTBPVElzSUV4c0lEMGdNelkwT1RRc0lFbHNJRDBnTXpZME9UVXNJRlJtSUQwZ016WXlPRE1zSUZWc0lEMGdNell5T0RRc0lFUnNJRDBnTXpZeU9EVXNJRTVzSUQwZ016WXlPRFlzSUhkbUlEMGdNakl3TUN3Z1FXWWdQU0F5TWpBeExDQlNaaUE5SURJeU1ESXNJRTl5SUQwZ01qTXdNQ3dnUm5JZ1BTQXlNekF4TENCTVlTQTlJREl6TURJc0lIcHBJRDBnTWpRd01Dd2dWbWtnUFNBeU5EQXhMQ0JDY2lBOUlESTBNRElzSUZoaklEMGdNalV3TUN3Z2VHUWdQU0F5TlRBeExDQmFlQ0E5SURBc0lFcDRJRDBnTVN3Z0pIZ2dQU0F5TENCMlpDQTlJRE5sTXl3Z2Nta2dQU0F6TURBeExDQkRaaUE5SURNeU1EQXNJRkJtSUQwZ016SXdNU3dnYldrZ1BTQXdMQ0JNWmlBOUlERXNJRmgwSUQwZ0lpSXNJSFowSUQwZ0luTnlaMklpTENCTmJpQTlJQ0p6Y21kaUxXeHBibVZoY2lJc0lIRmpJRDBnSW1ScGMzQnNZWGt0Y0RNaUxDQjJZU0E5SUNKa2FYTndiR0Y1TFhBekxXeHBibVZoY2lJc0lIcHlJRDBnSW14cGJtVmhjaUlzSUc1MElEMGdJbk55WjJJaUxDQldjaUE5SUNKeVpXTTNNRGtpTENCcmNpQTlJQ0p3TXlJc0lFdDRJRDBnTUN3Z1NXRWdQU0EzTmpnd0xDQlJlQ0E5SURjMk9ERXNJR3A0SUQwZ056WTRNaXdnWlhZZ1BTQTNOamd6TENCMGRpQTlJRE0wTURVMUxDQnVkaUE5SURNME1EVTJMQ0JwZGlBOUlEVXpPRFlzSUhOMklEMGdOVEV5TENCeWRpQTlJRFV4TXl3Z1lYWWdQU0ExTVRRc0lHOTJJRDBnTlRFMUxDQmpkaUE5SURVeE5pd2diSFlnUFNBMU1UY3NJR2gySUQwZ05URTRMQ0JKWmlBOUlEVXhPU3dnVldZZ1BTQTFNVElzSUVSbUlEMGdOVEV6TENCT1ppQTlJRFV4TkN3Z1QyWWdQU0ExTVRVc0lFWm1JRDBnTlRFMkxDQkNaaUE5SURVeE55d2dlbVlnUFNBMU1UZ3NJRlptSUQwZ05URTVMQ0JJY2lBOUlETTFNRFEwTENCMWRpQTlJRE0xTURRNExDQmtkaUE5SURNMU1EUXdMQ0JtZGlBOUlETTFNRFExTENCd2RpQTlJRE0xTURRNUxDQnRkaUE5SURNMU1EUXhMQ0JuZGlBOUlETTFNRFEyTENCZmRpQTlJRE0xTURVd0xDQjRkaUE5SURNMU1EUXlMQ0IyZGlBOUlDSXhNREFpTENCUGJDQTlJQ0l6TURBZ1pYTWlMQ0J3YnlBOUlERXdNelVzSUhadUlEMGdNbVV6TENCSGNpQTlJREl3TURFc0lITnVJRDBnWTJ4aGMzTWdld29nSUNBZ1lXUmtSWFpsYm5STWFYTjBaVzVsY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11WDJ4cGMzUmxibVZ5Y3lBOUlIdDlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgyeHBjM1JsYm1WeWN6c0tJQ0FnSUNBZ0lDQnVXMlZkSUQwOVBTQjJiMmxrSURBZ0ppWWdLRzViWlYwZ1BTQmJYU2tzSUc1YlpWMHVhVzVrWlhoUFppaDBLU0E5UFQwZ0xURWdKaVlnYmx0bFhTNXdkWE5vS0hRcE93b2dJQ0FnZlFvZ0lDQWdhR0Z6UlhabGJuUk1hWE4wWlc1bGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyeHBjM1JsYm1WeWN5QTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxsOXNhWE4wWlc1bGNuTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWJaVjBnSVQwOUlIWnZhV1FnTUNBbUppQnVXMlZkTG1sdVpHVjRUMllvZENrZ0lUMDlJQzB4T3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyeHBjM1JsYm1WeWN5QTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TGw5c2FYTjBaVzVsY25OYlpWMDdDaUFnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdrdWFXNWtaWGhQWmloMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBaFBUMGdMVEVnSmlZZ2FTNXpjR3hwWTJVb2Npd2dNU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1pHbHpjR0YwWTJoRmRtVnVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyeHBjM1JsYm1WeWN5QTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5c2FYTjBaVzVsY25OYlpTNTBlWEJsWFRzS0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1ZEdGeVoyVjBJRDBnZEdocGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1TG5Oc2FXTmxLREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCaElEMGdhUzVzWlc1bmRHZzdJSElnUENCaE95QnlLeXNwYVZ0eVhTNWpZV3hzS0hSb2FYTXNJR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMblJoY21kbGRDQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUxDQkZkQ0E5SUZzS0lDQWdJQ0l3TUNJc0NpQWdJQ0FpTURFaUxBb2dJQ0FnSWpBeUlpd0tJQ0FnSUNJd015SXNDaUFnSUNBaU1EUWlMQW9nSUNBZ0lqQTFJaXdLSUNBZ0lDSXdOaUlzQ2lBZ0lDQWlNRGNpTEFvZ0lDQWdJakE0SWl3S0lDQWdJQ0l3T1NJc0NpQWdJQ0FpTUdFaUxBb2dJQ0FnSWpCaUlpd0tJQ0FnSUNJd1l5SXNDaUFnSUNBaU1HUWlMQW9nSUNBZ0lqQmxJaXdLSUNBZ0lDSXdaaUlzQ2lBZ0lDQWlNVEFpTEFvZ0lDQWdJakV4SWl3S0lDQWdJQ0l4TWlJc0NpQWdJQ0FpTVRNaUxBb2dJQ0FnSWpFMElpd0tJQ0FnSUNJeE5TSXNDaUFnSUNBaU1UWWlMQW9nSUNBZ0lqRTNJaXdLSUNBZ0lDSXhPQ0lzQ2lBZ0lDQWlNVGtpTEFvZ0lDQWdJakZoSWl3S0lDQWdJQ0l4WWlJc0NpQWdJQ0FpTVdNaUxBb2dJQ0FnSWpGa0lpd0tJQ0FnSUNJeFpTSXNDaUFnSUNBaU1XWWlMQW9nSUNBZ0lqSXdJaXdLSUNBZ0lDSXlNU0lzQ2lBZ0lDQWlNaklpTEFvZ0lDQWdJakl6SWl3S0lDQWdJQ0l5TkNJc0NpQWdJQ0FpTWpVaUxBb2dJQ0FnSWpJMklpd0tJQ0FnSUNJeU55SXNDaUFnSUNBaU1qZ2lMQW9nSUNBZ0lqSTVJaXdLSUNBZ0lDSXlZU0lzQ2lBZ0lDQWlNbUlpTEFvZ0lDQWdJakpqSWl3S0lDQWdJQ0l5WkNJc0NpQWdJQ0FpTW1VaUxBb2dJQ0FnSWpKbUlpd0tJQ0FnSUNJek1DSXNDaUFnSUNBaU16RWlMQW9nSUNBZ0lqTXlJaXdLSUNBZ0lDSXpNeUlzQ2lBZ0lDQWlNelFpTEFvZ0lDQWdJak0xSWl3S0lDQWdJQ0l6TmlJc0NpQWdJQ0FpTXpjaUxBb2dJQ0FnSWpNNElpd0tJQ0FnSUNJek9TSXNDaUFnSUNBaU0yRWlMQW9nSUNBZ0lqTmlJaXdLSUNBZ0lDSXpZeUlzQ2lBZ0lDQWlNMlFpTEFvZ0lDQWdJak5sSWl3S0lDQWdJQ0l6WmlJc0NpQWdJQ0FpTkRBaUxBb2dJQ0FnSWpReElpd0tJQ0FnSUNJME1pSXNDaUFnSUNBaU5ETWlMQW9nSUNBZ0lqUTBJaXdLSUNBZ0lDSTBOU0lzQ2lBZ0lDQWlORFlpTEFvZ0lDQWdJalEzSWl3S0lDQWdJQ0kwT0NJc0NpQWdJQ0FpTkRraUxBb2dJQ0FnSWpSaElpd0tJQ0FnSUNJMFlpSXNDaUFnSUNBaU5HTWlMQW9nSUNBZ0lqUmtJaXdLSUNBZ0lDSTBaU0lzQ2lBZ0lDQWlOR1lpTEFvZ0lDQWdJalV3SWl3S0lDQWdJQ0kxTVNJc0NpQWdJQ0FpTlRJaUxBb2dJQ0FnSWpVeklpd0tJQ0FnSUNJMU5DSXNDaUFnSUNBaU5UVWlMQW9nSUNBZ0lqVTJJaXdLSUNBZ0lDSTFOeUlzQ2lBZ0lDQWlOVGdpTEFvZ0lDQWdJalU1SWl3S0lDQWdJQ0kxWVNJc0NpQWdJQ0FpTldJaUxBb2dJQ0FnSWpWaklpd0tJQ0FnSUNJMVpDSXNDaUFnSUNBaU5XVWlMQW9nSUNBZ0lqVm1JaXdLSUNBZ0lDSTJNQ0lzQ2lBZ0lDQWlOakVpTEFvZ0lDQWdJall5SWl3S0lDQWdJQ0kyTXlJc0NpQWdJQ0FpTmpRaUxBb2dJQ0FnSWpZMUlpd0tJQ0FnSUNJMk5pSXNDaUFnSUNBaU5qY2lMQW9nSUNBZ0lqWTRJaXdLSUNBZ0lDSTJPU0lzQ2lBZ0lDQWlObUVpTEFvZ0lDQWdJalppSWl3S0lDQWdJQ0kyWXlJc0NpQWdJQ0FpTm1RaUxBb2dJQ0FnSWpabElpd0tJQ0FnSUNJMlppSXNDaUFnSUNBaU56QWlMQW9nSUNBZ0lqY3hJaXdLSUNBZ0lDSTNNaUlzQ2lBZ0lDQWlOek1pTEFvZ0lDQWdJamMwSWl3S0lDQWdJQ0kzTlNJc0NpQWdJQ0FpTnpZaUxBb2dJQ0FnSWpjM0lpd0tJQ0FnSUNJM09DSXNDaUFnSUNBaU56a2lMQW9nSUNBZ0lqZGhJaXdLSUNBZ0lDSTNZaUlzQ2lBZ0lDQWlOMk1pTEFvZ0lDQWdJamRrSWl3S0lDQWdJQ0kzWlNJc0NpQWdJQ0FpTjJZaUxBb2dJQ0FnSWpnd0lpd0tJQ0FnSUNJNE1TSXNDaUFnSUNBaU9ESWlMQW9nSUNBZ0lqZ3pJaXdLSUNBZ0lDSTROQ0lzQ2lBZ0lDQWlPRFVpTEFvZ0lDQWdJamcySWl3S0lDQWdJQ0k0TnlJc0NpQWdJQ0FpT0RnaUxBb2dJQ0FnSWpnNUlpd0tJQ0FnSUNJNFlTSXNDaUFnSUNBaU9HSWlMQW9nSUNBZ0lqaGpJaXdLSUNBZ0lDSTRaQ0lzQ2lBZ0lDQWlPR1VpTEFvZ0lDQWdJamhtSWl3S0lDQWdJQ0k1TUNJc0NpQWdJQ0FpT1RFaUxBb2dJQ0FnSWpreUlpd0tJQ0FnSUNJNU15SXNDaUFnSUNBaU9UUWlMQW9nSUNBZ0lqazFJaXdLSUNBZ0lDSTVOaUlzQ2lBZ0lDQWlPVGNpTEFvZ0lDQWdJams0SWl3S0lDQWdJQ0k1T1NJc0NpQWdJQ0FpT1dFaUxBb2dJQ0FnSWpsaUlpd0tJQ0FnSUNJNVl5SXNDaUFnSUNBaU9XUWlMQW9nSUNBZ0lqbGxJaXdLSUNBZ0lDSTVaaUlzQ2lBZ0lDQWlZVEFpTEFvZ0lDQWdJbUV4SWl3S0lDQWdJQ0poTWlJc0NpQWdJQ0FpWVRNaUxBb2dJQ0FnSW1FMElpd0tJQ0FnSUNKaE5TSXNDaUFnSUNBaVlUWWlMQW9nSUNBZ0ltRTNJaXdLSUNBZ0lDSmhPQ0lzQ2lBZ0lDQWlZVGtpTEFvZ0lDQWdJbUZoSWl3S0lDQWdJQ0poWWlJc0NpQWdJQ0FpWVdNaUxBb2dJQ0FnSW1Ga0lpd0tJQ0FnSUNKaFpTSXNDaUFnSUNBaVlXWWlMQW9nSUNBZ0ltSXdJaXdLSUNBZ0lDSmlNU0lzQ2lBZ0lDQWlZaklpTEFvZ0lDQWdJbUl6SWl3S0lDQWdJQ0ppTkNJc0NpQWdJQ0FpWWpVaUxBb2dJQ0FnSW1JMklpd0tJQ0FnSUNKaU55SXNDaUFnSUNBaVlqZ2lMQW9nSUNBZ0ltSTVJaXdLSUNBZ0lDSmlZU0lzQ2lBZ0lDQWlZbUlpTEFvZ0lDQWdJbUpqSWl3S0lDQWdJQ0ppWkNJc0NpQWdJQ0FpWW1VaUxBb2dJQ0FnSW1KbUlpd0tJQ0FnSUNKak1DSXNDaUFnSUNBaVl6RWlMQW9nSUNBZ0ltTXlJaXdLSUNBZ0lDSmpNeUlzQ2lBZ0lDQWlZelFpTEFvZ0lDQWdJbU0xSWl3S0lDQWdJQ0pqTmlJc0NpQWdJQ0FpWXpjaUxBb2dJQ0FnSW1NNElpd0tJQ0FnSUNKak9TSXNDaUFnSUNBaVkyRWlMQW9nSUNBZ0ltTmlJaXdLSUNBZ0lDSmpZeUlzQ2lBZ0lDQWlZMlFpTEFvZ0lDQWdJbU5sSWl3S0lDQWdJQ0pqWmlJc0NpQWdJQ0FpWkRBaUxBb2dJQ0FnSW1ReElpd0tJQ0FnSUNKa01pSXNDaUFnSUNBaVpETWlMQW9nSUNBZ0ltUTBJaXdLSUNBZ0lDSmtOU0lzQ2lBZ0lDQWlaRFlpTEFvZ0lDQWdJbVEzSWl3S0lDQWdJQ0prT0NJc0NpQWdJQ0FpWkRraUxBb2dJQ0FnSW1SaElpd0tJQ0FnSUNKa1lpSXNDaUFnSUNBaVpHTWlMQW9nSUNBZ0ltUmtJaXdLSUNBZ0lDSmtaU0lzQ2lBZ0lDQWlaR1lpTEFvZ0lDQWdJbVV3SWl3S0lDQWdJQ0psTVNJc0NpQWdJQ0FpWlRJaUxBb2dJQ0FnSW1Veklpd0tJQ0FnSUNKbE5DSXNDaUFnSUNBaVpUVWlMQW9nSUNBZ0ltVTJJaXdLSUNBZ0lDSmxOeUlzQ2lBZ0lDQWlaVGdpTEFvZ0lDQWdJbVU1SWl3S0lDQWdJQ0psWVNJc0NpQWdJQ0FpWldJaUxBb2dJQ0FnSW1Waklpd0tJQ0FnSUNKbFpDSXNDaUFnSUNBaVpXVWlMQW9nSUNBZ0ltVm1JaXdLSUNBZ0lDSm1NQ0lzQ2lBZ0lDQWlaakVpTEFvZ0lDQWdJbVl5SWl3S0lDQWdJQ0ptTXlJc0NpQWdJQ0FpWmpRaUxBb2dJQ0FnSW1ZMUlpd0tJQ0FnSUNKbU5pSXNDaUFnSUNBaVpqY2lMQW9nSUNBZ0ltWTRJaXdLSUNBZ0lDSm1PU0lzQ2lBZ0lDQWlabUVpTEFvZ0lDQWdJbVppSWl3S0lDQWdJQ0ptWXlJc0NpQWdJQ0FpWm1RaUxBb2dJQ0FnSW1abElpd0tJQ0FnSUNKbVppSUtYU3dnUm13Z1BTQXhNak0wTlRZM0xDQmhhU0E5SUUxaGRHZ3VVRWtnTHlBeE9EQXNJRnBwSUQwZ01UZ3dJQzhnVFdGMGFDNVFTVHNLWm5WdVkzUnBiMjRnYTNRb0tTQjdDaUFnSUNCc1pYUWdjekVnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJR1VnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJSFFnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJRzRnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQTdDaUFnSUNCeVpYUjFjbTRnS0VWMFczTXhJQ1lnTWpVMVhTQXJJRVYwVzNNeElENCtJRGdnSmlBeU5UVmRJQ3NnUlhSYmN6RWdQajRnTVRZZ0ppQXlOVFZkSUNzZ1JYUmJjekVnUGo0Z01qUWdKaUF5TlRWZElDc2dJaTBpSUNzZ1JYUmJaU0FtSURJMU5WMGdLeUJGZEZ0bElENCtJRGdnSmlBeU5UVmRJQ3NnSWkwaUlDc2dSWFJiWlNBK1BpQXhOaUFtSURFMUlId2dOalJkSUNzZ1JYUmJaU0ErUGlBeU5DQW1JREkxTlYwZ0t5QWlMU0lnS3lCRmRGdDBJQ1lnTmpNZ2ZDQXhNamhkSUNzZ1JYUmJkQ0ErUGlBNElDWWdNalUxWFNBcklDSXRJaUFySUVWMFczUWdQajRnTVRZZ0ppQXlOVFZkSUNzZ1JYUmJkQ0ErUGlBeU5DQW1JREkxTlYwZ0t5QkZkRnR1SUNZZ01qVTFYU0FySUVWMFcyNGdQajRnT0NBbUlESTFOVjBnS3lCRmRGdHVJRDQrSURFMklDWWdNalUxWFNBcklFVjBXMjRnUGo0Z01qUWdKaUF5TlRWZEtTNTBiMHh2ZDJWeVEyRnpaU2dwT3dwOUNtWjFibU4wYVc5dUlHTjBLSE14TENCbExDQjBLU0I3Q2lBZ0lDQnlaWFIxY200Z1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnY3pFcEtUc0tmUXBtZFc1amRHbHZiaUJaWXloek1Td2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlDaHpNU0FsSUdVZ0t5QmxLU0FsSUdVN0NuMEtablZ1WTNScGIyNGdhMllvY3pFc0lHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lISmxkSFZ5YmlCdUlDc2dLSE14SUMwZ1pTa2dLaUFvYVNBdElHNHBJQzhnS0hRZ0xTQmxLVHNLZlFwbWRXNWpkR2x2YmlCSVppaHpNU3dnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhNeElDRTlQU0JsSUQ4Z0tIUWdMU0J6TVNrZ0x5QW9aU0F0SUhNeEtTQTZJREE3Q24wS1puVnVZM1JwYjI0Z2VYTW9jekVzSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlBb01TQXRJSFFwSUNvZ2N6RWdLeUIwSUNvZ1pUc0tmUXBtZFc1amRHbHZiaUJIWmloek1Td2daU3dnZEN3Z2Jpa2dld29nSUNBZ2NtVjBkWEp1SUhsektITXhMQ0JsTENBeElDMGdUV0YwYUM1bGVIQW9MWFFnS2lCdUtTazdDbjBLWm5WdVkzUnBiMjRnVjJZb2N6RXNJR1VnUFNBeEtTQjdDaUFnSUNCeVpYUjFjbTRnWlNBdElFMWhkR2d1WVdKektGbGpLSE14TENCbElDb2dNaWtnTFNCbEtUc0tmUXBtZFc1amRHbHZiaUJZWmloek1Td2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJSE14SUR3OUlHVWdQeUF3SURvZ2N6RWdQajBnZENBL0lERWdPaUFvY3pFZ1BTQW9jekVnTFNCbEtTQXZJQ2gwSUMwZ1pTa3NJSE14SUNvZ2N6RWdLaUFvTXlBdElESWdLaUJ6TVNrcE93cDlDbVoxYm1OMGFXOXVJSEZtS0hNeExDQmxMQ0IwS1NCN0NpQWdJQ0J5WlhSMWNtNGdjekVnUEQwZ1pTQS9JREFnT2lCek1TQStQU0IwSUQ4Z01TQTZJQ2h6TVNBOUlDaHpNU0F0SUdVcElDOGdLSFFnTFNCbEtTd2djekVnS2lCek1TQXFJSE14SUNvZ0tITXhJQ29nS0hNeElDb2dOaUF0SURFMUtTQXJJREV3S1NrN0NuMEtablZ1WTNScGIyNGdXV1lvY3pFc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCek1TQXJJRTFoZEdndVpteHZiM0lvVFdGMGFDNXlZVzVrYjIwb0tTQXFJQ2hsSUMwZ2N6RWdLeUF4S1NrN0NuMEtablZ1WTNScGIyNGdXbVlvY3pFc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCek1TQXJJRTFoZEdndWNtRnVaRzl0S0NrZ0tpQW9aU0F0SUhNeEtUc0tmUXBtZFc1amRHbHZiaUJLWmloek1Ta2dld29nSUNBZ2NtVjBkWEp1SUhNeElDb2dLQzQxSUMwZ1RXRjBhQzV5WVc1a2IyMG9LU2s3Q24wS1puVnVZM1JwYjI0Z0pHWW9jekVwSUhzS0lDQWdJSE14SUNFOVBTQjJiMmxrSURBZ0ppWWdLRVpzSUQwZ2N6RXBPd29nSUNBZ2JHVjBJR1VnUFNCR2JDQXJQU0F4T0RNeE5UWTFPREV6T3dvZ0lDQWdjbVYwZFhKdUlHVWdQU0JOWVhSb0xtbHRkV3dvWlNCZUlHVWdQajQrSURFMUxDQmxJSHdnTVNrc0lHVWdYajBnWlNBcklFMWhkR2d1YVcxMWJDaGxJRjRnWlNBK1BqNGdOeXdnWlNCOElEWXhLU3dnS0NobElGNGdaU0ErUGo0Z01UUXBJRDQrUGlBd0tTQXZJRFF5T1RRNU5qY3lPVFk3Q24wS1puVnVZM1JwYjI0Z1MyWW9jekVwSUhzS0lDQWdJSEpsZEhWeWJpQnpNU0FxSUdGcE93cDlDbVoxYm1OMGFXOXVJRkZtS0hNeEtTQjdDaUFnSUNCeVpYUjFjbTRnY3pFZ0tpQmFhVHNLZlFwbWRXNWpkR2x2YmlCdGJ5aHpNU2tnZXdvZ0lDQWdjbVYwZFhKdUlDaHpNU0FtSUhNeElDMGdNU2tnUFQwOUlEQWdKaVlnY3pFZ0lUMDlJREE3Q24wS1puVnVZM1JwYjI0Z2VXUW9jekVwSUhzS0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5CdmR5Z3lMQ0JOWVhSb0xtTmxhV3dvVFdGMGFDNXNiMmNvY3pFcElDOGdUV0YwYUM1TVRqSXBLVHNLZlFwbWRXNWpkR2x2YmlCWGNpaHpNU2tnZXdvZ0lDQWdjbVYwZFhKdUlFMWhkR2d1Y0c5M0tESXNJRTFoZEdndVpteHZiM0lvVFdGMGFDNXNiMmNvY3pFcElDOGdUV0YwYUM1TVRqSXBLVHNLZlFwbWRXNWpkR2x2YmlCcVppaHpNU3dnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnYkdWMElISWdQU0JOWVhSb0xtTnZjeXdnWVNBOUlFMWhkR2d1YzJsdUxDQnZJRDBnY2loMElDOGdNaWtzSUdNZ1BTQmhLSFFnTHlBeUtTd2diQ0E5SUhJb0tHVWdLeUJ1S1NBdklESXBMQ0JvSUQwZ1lTZ29aU0FySUc0cElDOGdNaWtzSUhVZ1BTQnlLQ2hsSUMwZ2Jpa2dMeUF5S1N3Z1pDQTlJR0VvS0dVZ0xTQnVLU0F2SURJcExDQm1JRDBnY2lnb2JpQXRJR1VwSUM4Z01pa3NJRzBnUFNCaEtDaHVJQzBnWlNrZ0x5QXlLVHNLSUNBZ0lITjNhWFJqYUNocEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNCek1TNXpaWFFvYnlBcUlHZ3NJR01nS2lCMUxDQmpJQ29nWkN3Z2J5QXFJR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJQ0paV2xraU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TVM1elpYUW9ZeUFxSUdRc0lHOGdLaUJvTENCaklDb2dkU3dnYnlBcUlHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElDSmFXRm9pT2dvZ0lDQWdJQ0FnSUNBZ0lDQnpNUzV6WlhRb1l5QXFJSFVzSUdNZ0tpQmtMQ0J2SUNvZ2FDd2dieUFxSUd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdsZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNCek1TNXpaWFFvYnlBcUlHZ3NJR01nS2lCdExDQmpJQ29nWml3Z2J5QXFJR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJQ0paV0ZraU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TVM1elpYUW9ZeUFxSUdZc0lHOGdLaUJvTENCaklDb2diU3dnYnlBcUlHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElDSmFXVm9pT2dvZ0lDQWdJQ0FnSUNBZ0lDQnpNUzV6WlhRb1l5QXFJRzBzSUdNZ0tpQm1MQ0J2SUNvZ2FDd2dieUFxSUd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHaFZkR2xzY3pvZ0xuTmxkRkYxWVhSbGNtNXBiMjVHY205dFVISnZjR1Z5UlhWc1pYSW9LU0JsYm1OdmRXNTBaWEpsWkNCaGJpQjFibXR1YjNkdUlHOXlaR1Z5T2lBaUlDc2dhU2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnVDNRb2N6RXNJR1VwSUhzS0lDQWdJSE4zYVhSamFDaGxMbU52Ym5OMGNuVmpkRzl5S1hzS0lDQWdJQ0FnSUNCallYTmxJRVpzYjJGME16SkJjbkpoZVRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITXhPd29nSUNBZ0lDQWdJR05oYzJVZ1ZXbHVkRE15UVhKeVlYazZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6TVNBdklEUXlPVFE1TmpjeU9UVTdDaUFnSUNBZ0lDQWdZMkZ6WlNCVmFXNTBNVFpCY25KaGVUb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSE14SUM4Z05qVTFNelU3Q2lBZ0lDQWdJQ0FnWTJGelpTQlZhVzUwT0VGeWNtRjVPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3pFZ0x5QXlOVFU3Q2lBZ0lDQWdJQ0FnWTJGelpTQkpiblF6TWtGeWNtRjVPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXRZWGdvY3pFZ0x5QXlNVFEzTkRnek5qUTNMQ0F0TVNrN0NpQWdJQ0FnSUNBZ1kyRnpaU0JKYm5ReE5rRnljbUY1T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzV0WVhnb2N6RWdMeUF6TWpjMk55d2dMVEVwT3dvZ0lDQWdJQ0FnSUdOaGMyVWdTVzUwT0VGeWNtRjVPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXRZWGdvY3pFZ0x5QXhNamNzSUMweEtUc0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9Ja2x1ZG1Gc2FXUWdZMjl0Y0c5dVpXNTBJSFI1Y0dVdUlpazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdRbVVvY3pFc0lHVXBJSHNLSUNBZ0lITjNhWFJqYUNobExtTnZibk4wY25WamRHOXlLWHNLSUNBZ0lDQWdJQ0JqWVhObElFWnNiMkYwTXpKQmNuSmhlVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhNeE93b2dJQ0FnSUNBZ0lHTmhjMlVnVldsdWRETXlRWEp5WVhrNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5KdmRXNWtLSE14SUNvZ05ESTVORGsyTnpJNU5TazdDaUFnSUNBZ0lDQWdZMkZ6WlNCVmFXNTBNVFpCY25KaGVUb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWNtOTFibVFvY3pFZ0tpQTJOVFV6TlNrN0NpQWdJQ0FnSUNBZ1kyRnpaU0JWYVc1ME9FRnljbUY1T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzV5YjNWdVpDaHpNU0FxSURJMU5TazdDaUFnSUNBZ0lDQWdZMkZ6WlNCSmJuUXpNa0Z5Y21GNU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1eWIzVnVaQ2h6TVNBcUlESXhORGMwT0RNMk5EY3BPd29nSUNBZ0lDQWdJR05oYzJVZ1NXNTBNVFpCY25KaGVUb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWNtOTFibVFvY3pFZ0tpQXpNamMyTnlrN0NpQWdJQ0FnSUNBZ1kyRnpaU0JKYm5RNFFYSnlZWGs2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbkp2ZFc1a0tITXhJQ29nTVRJM0tUc0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9Ja2x1ZG1Gc2FXUWdZMjl0Y0c5dVpXNTBJSFI1Y0dVdUlpazdDaUFnSUNCOUNuMEtkbUZ5SUhsMklEMGdld29nSUNBZ1JFVkhNbEpCUkRvZ1lXa3NDaUFnSUNCU1FVUXlSRVZIT2lCYWFTd0tJQ0FnSUdkbGJtVnlZWFJsVlZWSlJEb2dhM1FzQ2lBZ0lDQmpiR0Z0Y0RvZ1kzUXNDaUFnSUNCbGRXTnNhV1JsWVc1TmIyUjFiRzg2SUZsakxBb2dJQ0FnYldGd1RHbHVaV0Z5T2lCclppd0tJQ0FnSUdsdWRtVnljMlZNWlhKd09pQklaaXdLSUNBZ0lHeGxjbkE2SUhsekxBb2dJQ0FnWkdGdGNEb2dSMllzQ2lBZ0lDQndhVzVuY0c5dVp6b2dWMllzQ2lBZ0lDQnpiVzl2ZEdoemRHVndPaUJZWml3S0lDQWdJSE50YjI5MGFHVnljM1JsY0RvZ2NXWXNDaUFnSUNCeVlXNWtTVzUwT2lCWlppd0tJQ0FnSUhKaGJtUkdiRzloZERvZ1dtWXNDaUFnSUNCeVlXNWtSbXh2WVhSVGNISmxZV1E2SUVwbUxBb2dJQ0FnYzJWbFpHVmtVbUZ1Wkc5dE9pQWtaaXdLSUNBZ0lHUmxaMVJ2VW1Ga09pQkxaaXdLSUNBZ0lISmhaRlJ2UkdWbk9pQlJaaXdLSUNBZ0lHbHpVRzkzWlhKUFpsUjNiem9nYlc4c0NpQWdJQ0JqWldsc1VHOTNaWEpQWmxSM2J6b2dlV1FzQ2lBZ0lDQm1iRzl2Y2xCdmQyVnlUMlpVZDI4NklGZHlMQW9nSUNBZ2MyVjBVWFZoZEdWeWJtbHZia1p5YjIxUWNtOXdaWEpGZFd4bGNqb2dhbVlzQ2lBZ0lDQnViM0p0WVd4cGVtVTZJRUpsTEFvZ0lDQWdaR1Z1YjNKdFlXeHBlbVU2SUU5MENuMHNJRm9nUFNCamJHRnpjeUJ6TVNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNQ3dnZENBOUlEQXBld29nSUNBZ0lDQWdJSE14TG5CeWIzUnZkSGx3WlM1cGMxWmxZM1J2Y2pJZ1BTQWhNQ3dnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUgwS0lDQWdJR2RsZENCM2FXUjBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIZHBaSFJvS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5nZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHaGxhV2RvZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR2hsYVdkb2RDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTVJRDBnWlRzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6TG5rZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU1SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRU52YlhCdmJtVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tHVXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZ2dQU0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVTQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lhVzVrWlhnZ2FYTWdiM1YwSUc5bUlISmhibWRsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUTI5dGNHOXVaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0TENCMGFHbHpMbmtnUFNCbExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ1pTNTRMQ0IwYUdsekxua2dLejBnWlM1NUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJR1VzSUhSb2FYTXVlU0FyUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtWbVZqZEc5eWN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDQXJJSFF1ZUN3Z2RHaHBjeTU1SUQwZ1pTNTVJQ3NnZEM1NUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdWa1ZtVmpkRzl5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJR1V1ZUNBcUlIUXNJSFJvYVhNdWVTQXJQU0JsTG5rZ0tpQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1ZpS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUMwOUlHVXVlQ3dnZEdocGN5NTVJQzA5SUdVdWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZbE5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXRQU0JsTENCMGFHbHpMbmtnTFQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZbFpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dMU0IwTG5nc0lIUm9hWE11ZVNBOUlHVXVlU0F0SUhRdWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDbzlJR1V1ZUN3Z2RHaHBjeTU1SUNvOUlHVXVlU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDbzlJR1VzSUhSb2FYTXVlU0FxUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbDJhV1JsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUM4OUlHVXVlQ3dnZEdocGN5NTVJQzg5SUdVdWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbFRZMkZzWVhJb01TQXZJR1VwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZ3pLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ3dnYmlBOUlIUm9hWE11ZVN3Z2FTQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR2xiTUYwZ0tpQjBJQ3NnYVZzelhTQXFJRzRnS3lCcFd6WmRMQ0IwYUdsekxua2dQU0JwV3pGZElDb2dkQ0FySUdsYk5GMGdLaUJ1SUNzZ2FWczNYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFwYmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldsdUtIUm9hWE11ZUN3Z1pTNTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTVMQ0JsTG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRjRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0dVdWVDd2dUV0YwYUM1dGFXNG9kQzU0TENCMGFHbHpMbmdwS1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb1pTNTVMQ0JOWVhSb0xtMXBiaWgwTG5rc0lIUm9hWE11ZVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJUWTJGc1lYSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0IwYUdsekxuZ3BLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NUtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0V4bGJtZDBhQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBkbWxrWlZOallXeGhjaWh1SUh4OElERXBMbTExYkhScGNHeDVVMk5oYkdGeUtFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUc0cEtTazdDaUFnSUNCOUNpQWdJQ0JtYkc5dmNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtWnNiMjl5S0hSb2FYTXVlU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqWldsc0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG1ObGFXd29kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1alpXbHNLSFJvYVhNdWVTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1Z1WkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1Z1WkZSdldtVnlieWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNTBjblZ1WXloMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MblJ5ZFc1aktIUm9hWE11ZVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdVpXZGhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUMxMGFHbHpMbmdzSUhSb2FYTXVlU0E5SUMxMGFHbHpMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYjNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQmxMbmdnS3lCMGFHbHpMbmtnS2lCbExuazdDaUFnSUNCOUNpQWdJQ0JqY205emN5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFJR1V1ZVNBdElIUm9hWE11ZVNBcUlHVXVlRHNLSUNBZ0lIMEtJQ0FnSUd4bGJtZDBhRk54S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2lCMGFHbHpMbmdnS3lCMGFHbHpMbmtnS2lCMGFHbHpMbms3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VjM0Z5ZENoMGFHbHpMbmdnS2lCMGFHbHpMbmdnS3lCMGFHbHpMbmtnS2lCMGFHbHpMbmtwT3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVRHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUZpY3loMGFHbHpMbmdwSUNzZ1RXRjBhQzVoWW5Nb2RHaHBjeTU1S1RzS0lDQWdJSDBLSUNBZ0lHNXZjbTFoYkdsNlpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9kR2hwY3k1c1pXNW5kR2dvS1NCOGZDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdGdVoyeGxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRjBZVzR5S0MxMGFHbHpMbmtzSUMxMGFHbHpMbmdwSUNzZ1RXRjBhQzVRU1RzS0lDQWdJSDBLSUNBZ0lHRnVaMnhsVkc4b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdUV0YwYUM1emNYSjBLSFJvYVhNdWJHVnVaM1JvVTNFb0tTQXFJR1V1YkdWdVozUm9VM0VvS1NrN0NpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlEQXBJSEpsZEhWeWJpQk5ZWFJvTGxCSklDOGdNanNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpHOTBLR1VwSUM4Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWTI5ektHTjBLRzRzSUMweExDQXhLU2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1emNYSjBLSFJvYVhNdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTU0SUMwZ1pTNTRMQ0J1SUQwZ2RHaHBjeTU1SUMwZ1pTNTVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcklHNGdLaUJ1T3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDQXRJR1V1ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rZ0xTQmxMbmtwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBUR1Z1WjNSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Vb0tTNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3hsY25Bb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnS0dVdWVDQXRJSFJvYVhNdWVDa2dLaUIwTENCMGFHbHpMbmtnS3owZ0tHVXVlU0F0SUhSb2FYTXVlU2tnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRlpsWTNSdmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdnS3lBb2RDNTRJQzBnWlM1NEtTQXFJRzRzSUhSb2FYTXVlU0E5SUdVdWVTQXJJQ2gwTG5rZ0xTQmxMbmtwSUNvZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVlQ0E5UFQwZ2RHaHBjeTU0SUNZbUlHVXVlU0E5UFQwZ2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUZ5Y21GNUtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVmJkRjBzSUhSb2FYTXVlU0E5SUdWYmRDQXJJREZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCMGFHbHpMbmdzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTU1TENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVaMlYwV0NoMEtTd2dkR2hwY3k1NUlEMGdaUzVuWlhSWktIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFFYSnZkVzVrS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRTFoZEdndVkyOXpLSFFwTENCcElEMGdUV0YwYUM1emFXNG9kQ2tzSUhJZ1BTQjBhR2x6TG5nZ0xTQmxMbmdzSUdFZ1BTQjBhR2x6TG5rZ0xTQmxMbms3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSElnS2lCdUlDMGdZU0FxSUdrZ0t5QmxMbmdzSUhSb2FYTXVlU0E5SUhJZ0tpQnBJQ3NnWVNBcUlHNGdLeUJsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeVlXNWtiMjBvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbUZ1Wkc5dEtDa3NJSFJvYVhNdWVTQTlJRTFoZEdndWNtRnVaRzl0S0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNBcVcxTjViV0p2YkM1cGRHVnlZWFJ2Y2wwb0tTQjdDaUFnSUNBZ0lDQWdlV2xsYkdRZ2RHaHBjeTU0TENCNWFXVnNaQ0IwYUdsekxuazdDaUFnSUNCOUNuMHNJRWhsSUQwZ1kyeGhjM01nY3pFZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTd2djaXdnWVN3Z2J5d2dZeXdnYkNsN0NpQWdJQ0FnSUNBZ2N6RXVjSEp2ZEc5MGVYQmxMbWx6VFdGMGNtbDRNeUE5SUNFd0xDQjBhR2x6TG1Wc1pXMWxiblJ6SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2daU0FoUFQwZ2RtOXBaQ0F3SUNZbUlIUm9hWE11YzJWMEtHVXNJSFFzSUc0c0lHa3NJSElzSUdFc0lHOHNJR01zSUd3cE93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRzSUdrc0lISXNJR0VzSUc4c0lHTXNJR3dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHaGJNRjBnUFNCbExDQm9XekZkSUQwZ2FTd2dhRnN5WFNBOUlHOHNJR2hiTTEwZ1BTQjBMQ0JvV3pSZElEMGdjaXdnYUZzMVhTQTlJR01zSUdoYk5sMGdQU0J1TENCb1d6ZGRJRDBnWVN3Z2FGczRYU0E5SUd3c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCcFpHVnVkR2wwZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2dNQ3dnTUN3Z01Dd2dNU3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFd6QmRJRDBnYmxzd1hTd2dkRnN4WFNBOUlHNWJNVjBzSUhSYk1sMGdQU0J1V3pKZExDQjBXek5kSUQwZ2Jsc3pYU3dnZEZzMFhTQTlJRzViTkYwc0lIUmJOVjBnUFNCdVd6VmRMQ0IwV3paZElEMGdibHMyWFN3Z2RGczNYU0E5SUc1Yk4xMHNJSFJiT0YwZ1BTQnVXemhkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRUpoYzJsektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpaWFJHY205dFRXRjBjbWw0TTBOdmJIVnRiaWgwYUdsekxDQXdLU3dnZEM1elpYUkdjbTl0VFdGMGNtbDRNME52YkhWdGJpaDBhR2x6TENBeEtTd2diaTV6WlhSR2NtOXRUV0YwY21sNE0wTnZiSFZ0YmloMGFHbHpMQ0F5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0hSYk1GMHNJSFJiTkYwc0lIUmJPRjBzSUhSYk1WMHNJSFJiTlYwc0lIUmJPVjBzSUhSYk1sMHNJSFJiTmwwc0lIUmJNVEJkS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLSFJvYVhNc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnY0hKbGJYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vWlN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVUxaGRISnBZMlZ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1Wld4bGJXVnVkSE1zSUdrZ1BTQjBMbVZzWlcxbGJuUnpMQ0J5SUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnWVNBOUlHNWJNRjBzSUc4Z1BTQnVXek5kTENCaklEMGdibHMyWFN3Z2JDQTlJRzViTVYwc0lHZ2dQU0J1V3pSZExDQjFJRDBnYmxzM1hTd2daQ0E5SUc1Yk1sMHNJR1lnUFNCdVd6VmRMQ0J0SUQwZ2JsczRYU3dnWHlBOUlHbGJNRjBzSUdjZ1BTQnBXek5kTENCd0lEMGdhVnMyWFN3Z2RpQTlJR2xiTVYwc0lIZ2dQU0JwV3pSZExDQjVJRDBnYVZzM1hTd2dZaUE5SUdsYk1sMHNJSGNnUFNCcFd6VmRMQ0JTSUQwZ2FWczRYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbHN3WFNBOUlHRWdLaUJmSUNzZ2J5QXFJSFlnS3lCaklDb2dZaXdnY2xzelhTQTlJR0VnS2lCbklDc2dieUFxSUhnZ0t5QmpJQ29nZHl3Z2NsczJYU0E5SUdFZ0tpQndJQ3NnYnlBcUlIa2dLeUJqSUNvZ1Vpd2djbHN4WFNBOUlHd2dLaUJmSUNzZ2FDQXFJSFlnS3lCMUlDb2dZaXdnY2xzMFhTQTlJR3dnS2lCbklDc2dhQ0FxSUhnZ0t5QjFJQ29nZHl3Z2NsczNYU0E5SUd3Z0tpQndJQ3NnYUNBcUlIa2dLeUIxSUNvZ1Vpd2djbHN5WFNBOUlHUWdLaUJmSUNzZ1ppQXFJSFlnS3lCdElDb2dZaXdnY2xzMVhTQTlJR1FnS2lCbklDc2daaUFxSUhnZ0t5QnRJQ29nZHl3Z2NsczRYU0E5SUdRZ0tpQndJQ3NnWmlBcUlIa2dLeUJ0SUNvZ1Vpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ0tqMGdaU3dnZEZzelhTQXFQU0JsTENCMFd6WmRJQ285SUdVc0lIUmJNVjBnS2owZ1pTd2dkRnMwWFNBcVBTQmxMQ0IwV3pkZElDbzlJR1VzSUhSYk1sMGdLajBnWlN3Z2RGczFYU0FxUFNCbExDQjBXemhkSUNvOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmtaWFJsY20xcGJtRnVkQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJSFFnUFNCbFd6QmRMQ0J1SUQwZ1pWc3hYU3dnYVNBOUlHVmJNbDBzSUhJZ1BTQmxXek5kTENCaElEMGdaVnMwWFN3Z2J5QTlJR1ZiTlYwc0lHTWdQU0JsV3paZExDQnNJRDBnWlZzM1hTd2dhQ0E5SUdWYk9GMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdLaUJoSUNvZ2FDQXRJSFFnS2lCdklDb2diQ0F0SUc0Z0tpQnlJQ29nYUNBcklHNGdLaUJ2SUNvZ1l5QXJJR2tnS2lCeUlDb2diQ0F0SUdrZ0tpQmhJQ29nWXpzS0lDQWdJSDBLSUNBZ0lHbHVkbVZ5ZENncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUhRZ1BTQmxXekJkTENCdUlEMGdaVnN4WFN3Z2FTQTlJR1ZiTWwwc0lISWdQU0JsV3pOZExDQmhJRDBnWlZzMFhTd2dieUE5SUdWYk5WMHNJR01nUFNCbFd6WmRMQ0JzSUQwZ1pWczNYU3dnYUNBOUlHVmJPRjBzSUhVZ1BTQm9JQ29nWVNBdElHOGdLaUJzTENCa0lEMGdieUFxSUdNZ0xTQm9JQ29nY2l3Z1ppQTlJR3dnS2lCeUlDMGdZU0FxSUdNc0lHMGdQU0IwSUNvZ2RTQXJJRzRnS2lCa0lDc2dhU0FxSUdZN0NpQWdJQ0FnSUNBZ2FXWWdLRzBnUFQwOUlEQXBJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3dMQ0F3TENBd0xDQXdMQ0F3TENBd0xDQXdMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlERWdMeUJ0T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsV3pCZElEMGdkU0FxSUY4c0lHVmJNVjBnUFNBb2FTQXFJR3dnTFNCb0lDb2diaWtnS2lCZkxDQmxXekpkSUQwZ0tHOGdLaUJ1SUMwZ2FTQXFJR0VwSUNvZ1h5d2daVnN6WFNBOUlHUWdLaUJmTENCbFd6UmRJRDBnS0dnZ0tpQjBJQzBnYVNBcUlHTXBJQ29nWHl3Z1pWczFYU0E5SUNocElDb2djaUF0SUc4Z0tpQjBLU0FxSUY4c0lHVmJObDBnUFNCbUlDb2dYeXdnWlZzM1hTQTlJQ2h1SUNvZ1l5QXRJR3dnS2lCMEtTQXFJRjhzSUdWYk9GMGdQU0FvWVNBcUlIUWdMU0J1SUNvZ2Npa2dLaUJmTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsTENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOUlIUmJNVjBzSUhSYk1WMGdQU0IwV3pOZExDQjBXek5kSUQwZ1pTd2daU0E5SUhSYk1sMHNJSFJiTWwwZ1BTQjBXelpkTENCMFd6WmRJRDBnWlN3Z1pTQTlJSFJiTlYwc0lIUmJOVjBnUFNCMFd6ZGRMQ0IwV3pkZElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEU1dmNtMWhiRTFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBSbkp2YlUxaGRISnBlRFFvWlNrdWFXNTJaWEowS0NrdWRISmhibk53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMzQnZjMlZKYm5SdlFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnN3WFNBOUlIUmJNRjBzSUdWYk1WMGdQU0IwV3pOZExDQmxXekpkSUQwZ2RGczJYU3dnWlZzelhTQTlJSFJiTVYwc0lHVmJORjBnUFNCMFd6UmRMQ0JsV3pWZElEMGdkRnMzWFN3Z1pWczJYU0E5SUhSYk1sMHNJR1ZiTjEwZ1BTQjBXelZkTENCbFd6aGRJRDBnZEZzNFhTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRlYyVkhKaGJuTm1iM0p0S0dVc0lIUXNJRzRzSUdrc0lISXNJR0VzSUc4cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlFMWhkR2d1WTI5ektISXBMQ0JzSUQwZ1RXRjBhQzV6YVc0b2NpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtHNGdLaUJqTENCdUlDb2diQ3dnTFc0Z0tpQW9ZeUFxSUdFZ0t5QnNJQ29nYnlrZ0t5QmhJQ3NnWlN3Z0xXa2dLaUJzTENCcElDb2dZeXdnTFdrZ0tpQW9MV3dnS2lCaElDc2dZeUFxSUc4cElDc2dieUFySUhRc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyTmhiR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CeVpXMTFiSFJwY0d4NUtGVmhMbTFoYTJWVFkyRnNaU2hsTENCMEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CeVpXMTFiSFJwY0d4NUtGVmhMbTFoYTJWU2IzUmhkR2x2YmlndFpTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3Y21WdGRXeDBhWEJzZVNoVllTNXRZV3RsVkhKaGJuTnNZWFJwYjI0b1pTd2dkQ2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWUnlZVzV6YkdGMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXBjMVpsWTNSdmNqSWdQeUIwYUdsekxuTmxkQ2d4TENBd0xDQmxMbmdzSURBc0lERXNJR1V1ZVN3Z01Dd2dNQ3dnTVNrZ09pQjBhR2x6TG5ObGRDZ3hMQ0F3TENCbExDQXdMQ0F4TENCMExDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZTYjNSaGRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTllYUm9MbU52Y3lobEtTd2diaUE5SUUxaGRHZ3VjMmx1S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENoMExDQXRiaXdnTUN3Z2Jpd2dkQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVMk5oYkdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2hsTENBd0xDQXdMQ0F3TENCMExDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z09Uc2dhU3NyS1dsbUlDaDBXMmxkSUNFOVBTQnVXMmxkS1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFd093b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURrN0lHNHJLeWwwYUdsekxtVnNaVzFsYm5SelcyNWRJRDBnWlZ0dUlDc2dkRjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMEZ5Y21GNUtHVWdQU0JiWFN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCdVd6QmRMQ0JsVzNRZ0t5QXhYU0E5SUc1Yk1WMHNJR1ZiZENBcklESmRJRDBnYmxzeVhTd2daVnQwSUNzZ00xMGdQU0J1V3pOZExDQmxXM1FnS3lBMFhTQTlJRzViTkYwc0lHVmJkQ0FySURWZElEMGdibHMxWFN3Z1pWdDBJQ3NnTmwwZ1BTQnVXelpkTENCbFczUWdLeUEzWFNBOUlHNWJOMTBzSUdWYmRDQXJJRGhkSUQwZ2JsczRYU3dnWlRzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbVp5YjIxQmNuSmhlU2gwYUdsekxtVnNaVzFsYm5SektUc0tJQ0FnSUgwS2ZTd2dWV0VnUFNCdVpYY2dTR1U3Q21aMWJtTjBhVzl1SUUxa0tITXhLU0I3Q2lBZ0lDQm1iM0lvYkdWMElHVWdQU0J6TVM1c1pXNW5kR2dnTFNBeE95QmxJRDQ5SURBN0lDMHRaU2xwWmlBb2N6RmJaVjBnUGowZ05qVTFNelVwSUhKbGRIVnliaUFoTURzS0lDQWdJSEpsZEhWeWJpQWhNVHNLZlFwMllYSWdaWEFnUFNCN0NpQWdJQ0JKYm5RNFFYSnlZWGtzQ2lBZ0lDQlZhVzUwT0VGeWNtRjVMQW9nSUNBZ1ZXbHVkRGhEYkdGdGNHVmtRWEp5WVhrc0NpQWdJQ0JKYm5ReE5rRnljbUY1TEFvZ0lDQWdWV2x1ZERFMlFYSnlZWGtzQ2lBZ0lDQkpiblF6TWtGeWNtRjVMQW9nSUNBZ1ZXbHVkRE15UVhKeVlYa3NDaUFnSUNCR2JHOWhkRE15UVhKeVlYa3NDaUFnSUNCR2JHOWhkRFkwUVhKeVlYa0tmVHNLWm5WdVkzUnBiMjRnYTJrb2N6RXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnVaWGNnWlhCYmN6RmRLR1VwT3dwOUNtWjFibU4wYVc5dUlIZHpLSE14S1NCN0NpQWdJQ0J5WlhSMWNtNGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtDSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNob2RHMXNJaXdnY3pFcE93cDlDbVoxYm1OMGFXOXVJSFJ3S0NrZ2V3b2dJQ0FnYkdWMElITXhJRDBnZDNNb0ltTmhiblpoY3lJcE93b2dJQ0FnY21WMGRYSnVJSE14TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FpWW14dlkyc2lMQ0J6TVRzS2ZRcDJZWElnUW13Z1BTQjdmVHNLWm5WdVkzUnBiMjRnVFhNb2N6RXBJSHNLSUNBZ0lITXhJR2x1SUVKc0lIeDhJQ2hDYkZ0ek1WMGdQU0FoTUN3Z1kyOXVjMjlzWlM1M1lYSnVLSE14S1NrN0NuMEtkbUZ5SUhwc0lEMGdibVYzSUVobEtDa3VjMlYwS0M0NE1qSTBOakl4TENBdU1UYzNOVE00TENBd0xDQXVNRE16TVRrME1Td2dMamsyTmpnd05UZ3NJREFzSUM0d01UY3dPREkzTENBdU1EY3lNemszTkN3Z0xqa3hNRFV4T1RrcExDQldiQ0E5SUc1bGR5QklaU2dwTG5ObGRDZ3hMakl5TkRrME1ERXNJQzB1TWpJME9UUXdOQ3dnTUN3Z0xTNHdOREl3TlRZNUxDQXhMakEwTWpBMU56RXNJREFzSUMwdU1ERTVOak0zTml3Z0xTNHdOemcyTXpZeExDQXhMakE1T0RJM016VXBMQ0JIY3lBOUlIc0tJQ0FnSUZ0TmJsMDZJSHNLSUNBZ0lDQWdJQ0IwY21GdWMyWmxjam9nZW5Jc0NpQWdJQ0FnSUNBZ2NISnBiV0Z5YVdWek9pQldjaXdLSUNBZ0lDQWdJQ0IwYjFKbFptVnlaVzVqWlRvZ0tITXhLVDArY3pFc0NpQWdJQ0FnSUNBZ1puSnZiVkpsWm1WeVpXNWpaVG9nS0hNeEtUMCtjekVLSUNBZ0lIMHNDaUFnSUNCYmRuUmRPaUI3Q2lBZ0lDQWdJQ0FnZEhKaGJuTm1aWEk2SUc1MExBb2dJQ0FnSUNBZ0lIQnlhVzFoY21sbGN6b2dWbklzQ2lBZ0lDQWdJQ0FnZEc5U1pXWmxjbVZ1WTJVNklDaHpNU2s5UG5NeExtTnZiblpsY25SVFVrZENWRzlNYVc1bFlYSW9LU3dLSUNBZ0lDQWdJQ0JtY205dFVtVm1aWEpsYm1ObE9pQW9jekVwUFQ1ek1TNWpiMjUyWlhKMFRHbHVaV0Z5Vkc5VFVrZENLQ2tLSUNBZ0lIMHNDaUFnSUNCYmRtRmRPaUI3Q2lBZ0lDQWdJQ0FnZEhKaGJuTm1aWEk2SUhweUxBb2dJQ0FnSUNBZ0lIQnlhVzFoY21sbGN6b2dhM0lzQ2lBZ0lDQWdJQ0FnZEc5U1pXWmxjbVZ1WTJVNklDaHpNU2s5UG5NeExtRndjR3g1VFdGMGNtbDRNeWhXYkNrc0NpQWdJQ0FnSUNBZ1puSnZiVkpsWm1WeVpXNWpaVG9nS0hNeEtUMCtjekV1WVhCd2JIbE5ZWFJ5YVhnektIcHNLUW9nSUNBZ2ZTd0tJQ0FnSUZ0eFkxMDZJSHNLSUNBZ0lDQWdJQ0IwY21GdWMyWmxjam9nYm5Rc0NpQWdJQ0FnSUNBZ2NISnBiV0Z5YVdWek9pQnJjaXdLSUNBZ0lDQWdJQ0IwYjFKbFptVnlaVzVqWlRvZ0tITXhLVDArY3pFdVkyOXVkbVZ5ZEZOU1IwSlViMHhwYm1WaGNpZ3BMbUZ3Y0d4NVRXRjBjbWw0TXloV2JDa3NDaUFnSUNBZ0lDQWdabkp2YlZKbFptVnlaVzVqWlRvZ0tITXhLVDArY3pFdVlYQndiSGxOWVhSeWFYZ3pLSHBzS1M1amIyNTJaWEowVEdsdVpXRnlWRzlUVWtkQ0tDa0tJQ0FnSUgwS2ZTd2dibkFnUFNCdVpYY2dVMlYwS0ZzS0lDQWdJRTF1TEFvZ0lDQWdkbUVLWFNrc0lGRmxJRDBnZXdvZ0lDQWdaVzVoWW14bFpEb2dJVEFzQ2lBZ0lDQmZkMjl5YTJsdVowTnZiRzl5VTNCaFkyVTZJRTF1TEFvZ0lDQWdaMlYwSUd4bFoyRmplVTF2WkdVZ0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa052Ykc5eVRXRnVZV2RsYldWdWREb2dMbXhsWjJGamVVMXZaR1U5Wm1Gc2MyVWdjbVZ1WVcxbFpDQjBieUF1Wlc1aFlteGxaRDEwY25WbElHbHVJSEl4TlRBdUlpa3NJQ0YwYUdsekxtVnVZV0pzWldRN0NpQWdJQ0I5TEFvZ0lDQWdjMlYwSUd4bFoyRmplVTF2WkdVZ0tITXBld29nSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UTI5c2IzSk5ZVzVoWjJWdFpXNTBPaUF1YkdWbllXTjVUVzlrWlQxbVlXeHpaU0J5Wlc1aGJXVmtJSFJ2SUM1bGJtRmliR1ZrUFhSeWRXVWdhVzRnY2pFMU1DNGlLU3dnZEdocGN5NWxibUZpYkdWa0lEMGdJWE03Q2lBZ0lDQjlMQW9nSUNBZ1oyVjBJSGR2Y210cGJtZERiMnh2Y2xOd1lXTmxJQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkMjl5YTJsdVowTnZiRzl5VTNCaFkyVTdDaUFnSUNCOUxBb2dJQ0FnYzJWMElIZHZjbXRwYm1kRGIyeHZjbE53WVdObElDaHpLWHNLSUNBZ0lDQWdJQ0JwWmlBb0lXNXdMbWhoY3loektTa2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtHQlZibk4xY0hCdmNuUmxaQ0IzYjNKcmFXNW5JR052Ykc5eUlITndZV05sTENBaUpIdHpmU0l1WUNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZDI5eWEybHVaME52Ykc5eVUzQmhZMlVnUFNCek93b2dJQ0FnZlN3S0lDQWdJR052Ym5abGNuUTZJR1oxYm1OMGFXOXVLSE14TENCbExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Wlc1aFlteGxaQ0E5UFQwZ0lURWdmSHdnWlNBOVBUMGdkQ0I4ZkNBaFpTQjhmQ0FoZENrZ2NtVjBkWEp1SUhNeE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1IzTmJaVjB1ZEc5U1pXWmxjbVZ1WTJVc0lHa2dQU0JIYzF0MFhTNW1jbTl0VW1WbVpYSmxibU5sT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwS0c0b2N6RXBLVHNLSUNBZ0lIMHNDaUFnSUNCbWNtOXRWMjl5YTJsdVowTnZiRzl5VTNCaFkyVTZJR1oxYm1OMGFXOXVLSE14TENCbEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWRtVnlkQ2h6TVN3Z2RHaHBjeTVmZDI5eWEybHVaME52Ykc5eVUzQmhZMlVzSUdVcE93b2dJQ0FnZlN3S0lDQWdJSFJ2VjI5eWEybHVaME52Ykc5eVUzQmhZMlU2SUdaMWJtTjBhVzl1S0hNeExDQmxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXVkbVZ5ZENoek1Td2daU3dnZEdocGN5NWZkMjl5YTJsdVowTnZiRzl5VTNCaFkyVXBPd29nSUNBZ2ZTd0tJQ0FnSUdkbGRGQnlhVzFoY21sbGN6b2dablZ1WTNScGIyNG9jekVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjNOYmN6RmRMbkJ5YVcxaGNtbGxjenNLSUNBZ0lIMHNDaUFnSUNCblpYUlVjbUZ1YzJabGNqb2dablZ1WTNScGIyNG9jekVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3pFZ1BUMDlJRmgwSUQ4Z2VuSWdPaUJIYzF0ek1WMHVkSEpoYm5ObVpYSTdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRmhwS0hNeEtTQjdDaUFnSUNCeVpYUjFjbTRnY3pFZ1BDQXVNRFF3TkRVZ1B5QnpNU0FxSUM0d056Y3pPVGt6T0RBNElEb2dUV0YwYUM1d2IzY29jekVnS2lBdU9UUTNPRFkzTWprNE5pQXJJQzR3TlRJeE16STNNREUwTENBeUxqUXBPd3A5Q21aMWJtTjBhVzl1SUVSaEtITXhLU0I3Q2lBZ0lDQnlaWFIxY200Z2N6RWdQQ0F1TURBek1UTXdPQ0EvSUhNeElDb2dNVEl1T1RJZ09pQXhMakExTlNBcUlFMWhkR2d1Y0c5M0tITXhMQ0F1TkRFMk5qWXBJQzBnTGpBMU5Uc0tmUXAyWVhJZ1oya3NJRmh5SUQwZ1kyeGhjM01nZXdvZ0lDQWdjM1JoZEdsaklHZGxkRVJoZEdGVlVrd29aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ3ZYbVJoZEdFNkwya3VkR1Z6ZENobExuTnlZeWtnZkh3Z2RIbHdaVzltSUVoVVRVeERZVzUyWVhORmJHVnRaVzUwSUQ0Z0luVWlLU0J5WlhSMWNtNGdaUzV6Y21NN0NpQWdJQ0FnSUNBZ2JHVjBJSFE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVEyRnVkbUZ6Uld4bGJXVnVkQ2tnZENBOUlHVTdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RwSUQwOVBTQjJiMmxrSURBZ0ppWWdLR2RwSUQwZ2QzTW9JbU5oYm5aaGN5SXBLU3dnWjJrdWQybGtkR2dnUFNCbExuZHBaSFJvTENCbmFTNW9aV2xuYUhRZ1BTQmxMbWhsYVdkb2REc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0JuYVM1blpYUkRiMjUwWlhoMEtDSXlaQ0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxJR2x1YzNSaGJtTmxiMllnU1cxaFoyVkVZWFJoSUQ4Z2JpNXdkWFJKYldGblpVUmhkR0VvWlN3Z01Dd2dNQ2tnT2lCdUxtUnlZWGRKYldGblpTaGxMQ0F3TENBd0xDQmxMbmRwWkhSb0xDQmxMbWhsYVdkb2RDa3NJSFFnUFNCbmFUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVkMmxrZEdnZ1BpQXlNRFE0SUh4OElIUXVhR1ZwWjJoMElENGdNakEwT0NBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x0WVdkbFZYUnBiSE11WjJWMFJHRjBZVlZTVERvZ1NXMWhaMlVnWTI5dWRtVnlkR1ZrSUhSdklHcHdaeUJtYjNJZ2NHVnlabTl5YldGdVkyVWdjbVZoYzI5dWN5SXNJR1VwTENCMExuUnZSR0YwWVZWU1RDZ2lhVzFoWjJVdmFuQmxaeUlzSUM0MktTa2dPaUIwTG5SdlJHRjBZVlZTVENnaWFXMWhaMlV2Y0c1bklpazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjMUpIUWxSdlRHbHVaV0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JRWhVVFV4SmJXRm5aVVZzWlcxbGJuUWdQQ0FpZFNJZ0ppWWdaU0JwYm5OMFlXNWpaVzltSUVoVVRVeEpiV0ZuWlVWc1pXMWxiblFnZkh3Z2RIbHdaVzltSUVoVVRVeERZVzUyWVhORmJHVnRaVzUwSUR3Z0luVWlJQ1ltSUdVZ2FXNXpkR0Z1WTJWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQjhmQ0IwZVhCbGIyWWdTVzFoWjJWQ2FYUnRZWEFnUENBaWRTSWdKaVlnWlNCcGJuTjBZVzVqWlc5bUlFbHRZV2RsUW1sMGJXRndLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2QzTW9JbU5oYm5aaGN5SXBPd29nSUNBZ0lDQWdJQ0FnSUNCMExuZHBaSFJvSUQwZ1pTNTNhV1IwYUN3Z2RDNW9aV2xuYUhRZ1BTQmxMbWhsYVdkb2REc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwTG1kbGRFTnZiblJsZUhRb0lqSmtJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVaSEpoZDBsdFlXZGxLR1VzSURBc0lEQXNJR1V1ZDJsa2RHZ3NJR1V1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUxtZGxkRWx0WVdkbFJHRjBZU2d3TENBd0xDQmxMbmRwWkhSb0xDQmxMbWhsYVdkb2RDa3NJSElnUFNCcExtUmhkR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREE3SUdFZ1BDQnlMbXhsYm1kMGFEc2dZU3NyS1hKYllWMGdQU0JZYVNoeVcyRmRJQzhnTWpVMUtTQXFJREkxTlRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjSFYwU1cxaFoyVkVZWFJoS0drc0lEQXNJREFwTENCME93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzVrWVhSaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1a1lYUmhMbk5zYVdObEtEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z2RDNXNaVzVuZEdnN0lHNHJLeWwwSUdsdWMzUmhibU5sYjJZZ1ZXbHVkRGhCY25KaGVTQjhmQ0IwSUdsdWMzUmhibU5sYjJZZ1ZXbHVkRGhEYkdGdGNHVmtRWEp5WVhrZ1B5QjBXMjVkSUQwZ1RXRjBhQzVtYkc5dmNpaFlhU2gwVzI1ZElDOGdNalUxS1NBcUlESTFOU2tnT2lCMFcyNWRJRDBnV0drb2RGdHVYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1V1ZDJsa2RHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHVXVhR1ZwWjJoMENpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x0WVdkbFZYUnBiSE11YzFKSFFsUnZUR2x1WldGeUtDazZJRlZ1YzNWd2NHOXlkR1ZrSUdsdFlXZGxJSFI1Y0dVdUlFNXZJR052Ykc5eUlITndZV05sSUdOdmJuWmxjbk5wYjI0Z1lYQndiR2xsWkM0aUtTd2daVHNLSUNBZ0lIMEtmU3dnYVhBZ1BTQXdMQ0JKYmlBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbWx6VTI5MWNtTmxJRDBnSVRBc0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2gwYUdsekxDQWlhV1FpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnBjQ3NyQ2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11ZFhWcFpDQTlJR3QwS0Nrc0lIUm9hWE11WkdGMFlTQTlJR1VzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREE3Q2lBZ0lDQjlDaUFnSUNCelpYUWdibVZsWkhOVmNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdQVDA5SUNFd0lDWW1JSFJvYVhNdWRtVnljMmx2Ymlzck93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1VnUFQwOUlIWnZhV1FnTUNCOGZDQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JanNLSUNBZ0lDQWdJQ0JwWmlBb0lYUWdKaVlnWlM1cGJXRm5aWE5iZEdocGN5NTFkV2xrWFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z1pTNXBiV0ZuWlhOYmRHaHBjeTUxZFdsa1hUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFhWcFpEb2dkR2hwY3k1MWRXbGtMQW9nSUNBZ0lDQWdJQ0FnSUNCMWNtdzZJQ0lpQ2lBZ0lDQWdJQ0FnZlN3Z2FTQTlJSFJvYVhNdVpHRjBZVHNLSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2FTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2dZU0E4SUc4N0lHRXJLeWxwVzJGZExtbHpSR0YwWVZSbGVIUjFjbVVnUHlCeUxuQjFjMmdvVG1Fb2FWdGhYUzVwYldGblpTa3BJRG9nY2k1d2RYTm9LRTVoS0dsYllWMHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhJZ1BTQk9ZU2hwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiaTUxY213Z1BTQnlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0I4ZkNBb1pTNXBiV0ZuWlhOYmRHaHBjeTUxZFdsa1hTQTlJRzRwTENCdU93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQk9ZU2h6TVNrZ2V3b2dJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElEd2dJblVpSUNZbUlITXhJR2x1YzNSaGJtTmxiMllnU0ZSTlRFbHRZV2RsUld4bGJXVnVkQ0I4ZkNCMGVYQmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFnUENBaWRTSWdKaVlnY3pFZ2FXNXpkR0Z1WTJWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQjhmQ0IwZVhCbGIyWWdTVzFoWjJWQ2FYUnRZWEFnUENBaWRTSWdKaVlnY3pFZ2FXNXpkR0Z1WTJWdlppQkpiV0ZuWlVKcGRHMWhjQ0EvSUZoeUxtZGxkRVJoZEdGVlVrd29jekVwSURvZ2N6RXVaR0YwWVNBL0lIc0tJQ0FnSUNBZ0lDQmtZWFJoT2lCQmNuSmhlUzVtY205dEtITXhMbVJoZEdFcExBb2dJQ0FnSUNBZ0lIZHBaSFJvT2lCek1TNTNhV1IwYUN3S0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhNeExtaGxhV2RvZEN3S0lDQWdJQ0FnSUNCMGVYQmxPaUJ6TVM1a1lYUmhMbU52Ym5OMGNuVmpkRzl5TG01aGJXVUtJQ0FnSUgwZ09pQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVVWlhoMGRYSmxPaUJWYm1GaWJHVWdkRzhnYzJWeWFXRnNhWHBsSUZSbGVIUjFjbVV1SWlrc0lIdDlLVHNLZlFwMllYSWdjM0FnUFNBd0xDQlRkQ0E5SUdOc1lYTnpJSE14SUdWNGRHVnVaSE1nYzI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJSE14TGtSRlJrRlZURlJmU1UxQlIwVXNJSFFnUFNCek1TNUVSVVpCVlV4VVgwMUJVRkJKVGtjc0lHNGdQU0JKZEN3Z2FTQTlJRWwwTENCeUlEMGdiWFFzSUdFZ1BTQnNhU3dnYnlBOUlGZDBMQ0JqSUQwZ1QyNHNJR3dnUFNCek1TNUVSVVpCVlV4VVgwRk9TVk5QVkZKUFVGa3NJR2dnUFNCWWRDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMxUmxlSFIxY21VZ1BTQWhNQ3dnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNKcFpDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUhOd0t5c0tJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTFkV2xrSUQwZ2EzUW9LU3dnZEdocGN5NXVZVzFsSUQwZ0lpSXNJSFJvYVhNdWMyOTFjbU5sSUQwZ2JtVjNJRWx1S0dVcExDQjBhR2x6TG0xcGNHMWhjSE1nUFNCYlhTd2dkR2hwY3k1dFlYQndhVzVuSUQwZ2RDd2dkR2hwY3k1amFHRnVibVZzSUQwZ01Dd2dkR2hwY3k1M2NtRndVeUE5SUc0c0lIUm9hWE11ZDNKaGNGUWdQU0JwTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUhJc0lIUm9hWE11YldsdVJtbHNkR1Z5SUQwZ1lTd2dkR2hwY3k1aGJtbHpiM1J5YjNCNUlEMGdiQ3dnZEdocGN5NW1iM0p0WVhRZ1BTQnZMQ0IwYUdsekxtbHVkR1Z5Ym1Gc1JtOXliV0YwSUQwZ2JuVnNiQ3dnZEdocGN5NTBlWEJsSUQwZ1l5d2dkR2hwY3k1dlptWnpaWFFnUFNCdVpYY2dXaWd3TENBd0tTd2dkR2hwY3k1eVpYQmxZWFFnUFNCdVpYY2dXaWd4TENBeEtTd2dkR2hwY3k1alpXNTBaWElnUFNCdVpYY2dXaWd3TENBd0tTd2dkR2hwY3k1eWIzUmhkR2x2YmlBOUlEQXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtMWhkSEpwZUNBOUlHNWxkeUJJWlN3Z2RHaHBjeTVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTUN3Z2RHaHBjeTV3Y21WdGRXeDBhWEJzZVVGc2NHaGhJRDBnSVRFc0lIUm9hWE11Wm14cGNGa2dQU0FoTUN3Z2RHaHBjeTUxYm5CaFkydEJiR2xuYm0xbGJuUWdQU0EwTENCMGVYQmxiMllnYUNBOVBTQWljM1J5YVc1bklpQS9JSFJvYVhNdVkyOXNiM0pUY0dGalpTQTlJR2dnT2lBb1RYTW9JbFJJVWtWRkxsUmxlSFIxY21VNklGQnliM0JsY25SNUlDNWxibU52WkdsdVp5Qm9ZWE1nWW1WbGJpQnlaWEJzWVdObFpDQmllU0F1WTI5c2IzSlRjR0ZqWlM0aUtTd2dkR2hwY3k1amIyeHZjbE53WVdObElEMGdhQ0E5UFQwZ2Nta2dQeUIyZENBNklGaDBLU3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5TENCMGFHbHpMblpsY25OcGIyNGdQU0F3TENCMGFHbHpMbTl1VlhCa1lYUmxJRDBnYm5Wc2JDd2dkR2hwY3k1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQU0FoTVN3Z2RHaHBjeTV1WldWa2MxQk5Va1ZOVlhCa1lYUmxJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnYVcxaFoyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyOTFjbU5sTG1SaGRHRTdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2FXMWhaMlVvWlNBOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbk52ZFhKalpTNWtZWFJoSUQwZ1pUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwZUNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRISnBlQzV6WlhSVmRsUnlZVzV6Wm05eWJTaDBhR2x6TG05bVpuTmxkQzU0TENCMGFHbHpMbTltWm5ObGRDNTVMQ0IwYUdsekxuSmxjR1ZoZEM1NExDQjBhR2x6TG5KbGNHVmhkQzU1TENCMGFHbHpMbkp2ZEdGMGFXOXVMQ0IwYUdsekxtTmxiblJsY2k1NExDQjBhR2x6TG1ObGJuUmxjaTU1S1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXVZVzFsSUQwZ1pTNXVZVzFsTENCMGFHbHpMbk52ZFhKalpTQTlJR1V1YzI5MWNtTmxMQ0IwYUdsekxtMXBjRzFoY0hNZ1BTQmxMbTFwY0cxaGNITXVjMnhwWTJVb01Da3NJSFJvYVhNdWJXRndjR2x1WnlBOUlHVXViV0Z3Y0dsdVp5d2dkR2hwY3k1amFHRnVibVZzSUQwZ1pTNWphR0Z1Ym1Wc0xDQjBhR2x6TG5keVlYQlRJRDBnWlM1M2NtRndVeXdnZEdocGN5NTNjbUZ3VkNBOUlHVXVkM0poY0ZRc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ1pTNXRZV2RHYVd4MFpYSXNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdaUzV0YVc1R2FXeDBaWElzSUhSb2FYTXVZVzVwYzI5MGNtOXdlU0E5SUdVdVlXNXBjMjkwY205d2VTd2dkR2hwY3k1bWIzSnRZWFFnUFNCbExtWnZjbTFoZEN3Z2RHaHBjeTVwYm5SbGNtNWhiRVp2Y20xaGRDQTlJR1V1YVc1MFpYSnVZV3hHYjNKdFlYUXNJSFJvYVhNdWRIbHdaU0E5SUdVdWRIbHdaU3dnZEdocGN5NXZabVp6WlhRdVkyOXdlU2hsTG05bVpuTmxkQ2tzSUhSb2FYTXVjbVZ3WldGMExtTnZjSGtvWlM1eVpYQmxZWFFwTENCMGFHbHpMbU5sYm5SbGNpNWpiM0I1S0dVdVkyVnVkR1Z5S1N3Z2RHaHBjeTV5YjNSaGRHbHZiaUE5SUdVdWNtOTBZWFJwYjI0c0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUdVdWJXRjBjbWw0UVhWMGIxVndaR0YwWlN3Z2RHaHBjeTV0WVhSeWFYZ3VZMjl3ZVNobExtMWhkSEpwZUNrc0lIUm9hWE11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnWlM1blpXNWxjbUYwWlUxcGNHMWhjSE1zSUhSb2FYTXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTQTlJR1V1Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU3dnZEdocGN5NW1iR2x3V1NBOUlHVXVabXhwY0Zrc0lIUm9hWE11ZFc1d1lXTnJRV3hwWjI1dFpXNTBJRDBnWlM1MWJuQmhZMnRCYkdsbmJtMWxiblFzSUhSb2FYTXVZMjlzYjNKVGNHRmpaU0E5SUdVdVkyOXNiM0pUY0dGalpTd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb1pTNTFjMlZ5UkdGMFlTa3BMQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTQTlQVDBnZG05cFpDQXdJSHg4SUhSNWNHVnZaaUJsSUQwOUlDSnpkSEpwYm1jaU93b2dJQ0FnSUNBZ0lHbG1JQ2doZENBbUppQmxMblJsZUhSMWNtVnpXM1JvYVhNdWRYVnBaRjBnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUdVdWRHVjRkSFZ5WlhOYmRHaHBjeTUxZFdsa1hUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYldWMFlXUmhkR0U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhabGNuTnBiMjQ2SURRdU5pd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKVVpYaDBkWEpsSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lsUmxlSFIxY21VdWRHOUtVMDlPSWdvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMWRXbGtPaUIwYUdsekxuVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUhSb2FYTXVibUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJVNklIUm9hWE11YzI5MWNtTmxMblJ2U2xOUFRpaGxLUzUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhCd2FXNW5PaUIwYUdsekxtMWhjSEJwYm1jc0NpQWdJQ0FnSUNBZ0lDQWdJR05vWVc1dVpXdzZJSFJvYVhNdVkyaGhibTVsYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ3WldGME9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGNHVmhkQzU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWEJsWVhRdWVRb2dJQ0FnSUNBZ0lDQWdJQ0JkTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjJabWMyVjBMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOW1abk5sZEM1NUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTmxiblJsY2pvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqWlc1MFpYSXVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyVnVkR1Z5TG5rS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJwYjI0NklIUm9hWE11Y205MFlYUnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHlZWEE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkM0poY0ZNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmR5WVhCVUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ2RHaHBjeTVtYjNKdFlYUXNDaUFnSUNBZ0lDQWdJQ0FnSUdsdWRHVnlibUZzUm05eWJXRjBPaUIwYUdsekxtbHVkR1Z5Ym1Gc1JtOXliV0YwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCMGFHbHpMblI1Y0dVc0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eVUzQmhZMlU2SUhSb2FYTXVZMjlzYjNKVGNHRmpaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVSbWxzZEdWeU9pQjBhR2x6TG0xcGJrWnBiSFJsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdiV0ZuUm1sc2RHVnlPaUIwYUdsekxtMWhaMFpwYkhSbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGMyOTBjbTl3ZVRvZ2RHaHBjeTVoYm1semIzUnliM0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1iR2x3V1RvZ2RHaHBjeTVtYkdsd1dTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkR1ZOYVhCdFlYQnpPaUIwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3l3S0lDQWdJQ0FnSUNBZ0lDQWdjSEpsYlhWc2RHbHdiSGxCYkhCb1lUb2dkR2hwY3k1d2NtVnRkV3gwYVhCc2VVRnNjR2hoTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFibkJoWTJ0QmJHbG5ibTFsYm5RNklIUm9hWE11ZFc1d1lXTnJRV3hwWjI1dFpXNTBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExtdGxlWE1vZEdocGN5NTFjMlZ5UkdGMFlTa3ViR1Z1WjNSb0lENGdNQ0FtSmlBb2JpNTFjMlZ5UkdGMFlTQTlJSFJvYVhNdWRYTmxja1JoZEdFcExDQjBJSHg4SUNobExuUmxlSFIxY21WelczUm9hWE11ZFhWcFpGMGdQU0J1S1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltUnBjM0J2YzJVaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyWnZjbTFWZGlobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViV0Z3Y0dsdVp5QWhQVDBnUjJNcElISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1Gd2NHeDVUV0YwY21sNE15aDBhR2x6TG0xaGRISnBlQ2tzSUdVdWVDQThJREFnZkh3Z1pTNTRJRDRnTVNrZ2MzZHBkR05vS0hSb2FYTXVkM0poY0ZNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFUnlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzU0SUQwZ1pTNTRJQzBnVFdGMGFDNW1iRzl2Y2lobExuZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1NYUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbmdnUFNCbExuZ2dQQ0F3SUQ4Z01DQTZJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQk9jam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFoZEdndVlXSnpLRTFoZEdndVpteHZiM0lvWlM1NEtTQWxJRElwSUQwOVBTQXhJRDhnWlM1NElEMGdUV0YwYUM1alpXbHNLR1V1ZUNrZ0xTQmxMbmdnT2lCbExuZ2dQU0JsTG5nZ0xTQk5ZWFJvTG1ac2IyOXlLR1V1ZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVlU0E4SURBZ2ZId2daUzU1SUQ0Z01Ta2djM2RwZEdOb0tIUm9hWE11ZDNKaGNGUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRVJ5T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1NUlEMGdaUzU1SUMwZ1RXRjBhQzVtYkc5dmNpaGxMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdTWFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5rZ1BTQmxMbmtnUENBd0lEOGdNQ0E2SURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JPY2pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxaGRHZ3VZV0p6S0UxaGRHZ3VabXh2YjNJb1pTNTVLU0FsSURJcElEMDlQU0F4SUQ4Z1pTNTVJRDBnVFdGMGFDNWpaV2xzS0dVdWVTa2dMU0JsTG5rZ09pQmxMbmtnUFNCbExua2dMU0JOWVhSb0xtWnNiMjl5S0dVdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabXhwY0ZrZ0ppWWdLR1V1ZVNBOUlERWdMU0JsTG5rcExDQmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHNWxaV1J6VlhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCbElEMDlQU0FoTUNBbUppQW9kR2hwY3k1MlpYSnphVzl1S3lzc0lIUm9hWE11YzI5MWNtTmxMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHVnVZMjlrYVc1bktDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5jeWdpVkVoU1JVVXVWR1Y0ZEhWeVpUb2dVSEp2Y0dWeWRIa2dMbVZ1WTI5a2FXNW5JR2hoY3lCaVpXVnVJSEpsY0d4aFkyVmtJR0o1SUM1amIyeHZjbE53WVdObExpSXBMQ0IwYUdsekxtTnZiRzl5VTNCaFkyVWdQVDA5SUhaMElEOGdjbWtnT2lCMlpEc0tJQ0FnSUgwS0lDQWdJSE5sZENCbGJtTnZaR2x1WnlobEtTQjdDaUFnSUNBZ0lDQWdUWE1vSWxSSVVrVkZMbFJsZUhSMWNtVTZJRkJ5YjNCbGNuUjVJQzVsYm1OdlpHbHVaeUJvWVhNZ1ltVmxiaUJ5WlhCc1lXTmxaQ0JpZVNBdVkyOXNiM0pUY0dGalpTNGlLU3dnZEdocGN5NWpiMnh2Y2xOd1lXTmxJRDBnWlNBOVBUMGdjbWtnUHlCMmRDQTZJRmgwT3dvZ0lDQWdmUXA5T3dwVGRDNUVSVVpCVlV4VVgwbE5RVWRGSUQwZ2JuVnNiRHNLVTNRdVJFVkdRVlZNVkY5TlFWQlFTVTVISUQwZ1IyTTdDbE4wTGtSRlJrRlZURlJmUVU1SlUwOVVVazlRV1NBOUlERTdDblpoY2lCcVpTQTlJR05zWVhOeklITXhJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBd0xDQjBJRDBnTUN3Z2JpQTlJREFzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6TVM1d2NtOTBiM1I1Y0dVdWFYTldaV04wYjNJMElEMGdJVEFzSUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlIUXNJSFJvYVhNdWVpQTlJRzRzSUhSb2FYTXVkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZDJsa2RHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVqc0tJQ0FnSUgwS0lDQWdJSE5sZENCM2FXUjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTU2SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR2RsZENCb1pXbG5hSFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkenNLSUNBZ0lIMEtJQ0FnSUhObGRDQm9aV2xuYUhRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWR5QTlJR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6TG5vZ1BTQnVMQ0IwYUdsekxuY2dQU0JwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdaU3dnZEdocGN5NTZJRDBnWlN3Z2RHaHBjeTUzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTZJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGY29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuY2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXRjRzl1Wlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbm9nUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm83Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuYzdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVN3Z2RHaHBjeTU2TENCMGFHbHpMbmNwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDd2dkR2hwY3k1NUlEMGdaUzU1TENCMGFHbHpMbm9nUFNCbExub3NJSFJvYVhNdWR5QTlJR1V1ZHlBaFBUMGdkbTlwWkNBd0lEOGdaUzUzSURvZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNCbExuZ3NJSFJvYVhNdWVTQXJQU0JsTG5rc0lIUm9hWE11ZWlBclBTQmxMbm9zSUhSb2FYTXVkeUFyUFNCbExuY3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnWlN3Z2RHaHBjeTU1SUNzOUlHVXNJSFJvYVhNdWVpQXJQU0JsTENCMGFHbHpMbmNnS3owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRlpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dLeUIwTG5nc0lIUm9hWE11ZVNBOUlHVXVlU0FySUhRdWVTd2dkR2hwY3k1NklEMGdaUzU2SUNzZ2RDNTZMQ0IwYUdsekxuY2dQU0JsTG5jZ0t5QjBMbmNzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNaV1JXWldOMGIzSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ1pTNTRJQ29nZEN3Z2RHaHBjeTU1SUNzOUlHVXVlU0FxSUhRc0lIUm9hWE11ZWlBclBTQmxMbm9nS2lCMExDQjBhR2x6TG5jZ0t6MGdaUzUzSUNvZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0F0UFNCbExuZ3NJSFJvYVhNdWVTQXRQU0JsTG5rc0lIUm9hWE11ZWlBdFBTQmxMbm9zSUhSb2FYTXVkeUF0UFNCbExuY3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dMVDBnWlN3Z2RHaHBjeTU1SUMwOUlHVXNJSFJvYVhNdWVpQXRQU0JsTENCMGFHbHpMbmNnTFQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZbFpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dMU0IwTG5nc0lIUm9hWE11ZVNBOUlHVXVlU0F0SUhRdWVTd2dkR2hwY3k1NklEMGdaUzU2SUMwZ2RDNTZMQ0IwYUdsekxuY2dQU0JsTG5jZ0xTQjBMbmNzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxUFNCbExuZ3NJSFJvYVhNdWVTQXFQU0JsTG5rc0lIUm9hWE11ZWlBcVBTQmxMbm9zSUhSb2FYTXVkeUFxUFNCbExuY3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcVBTQmxMQ0IwYUdsekxua2dLajBnWlN3Z2RHaHBjeTU2SUNvOUlHVXNJSFJvYVhNdWR5QXFQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWVDd2diaUE5SUhSb2FYTXVlU3dnYVNBOUlIUm9hWE11ZWl3Z2NpQTlJSFJvYVhNdWR5d2dZU0E5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdGYk1GMGdLaUIwSUNzZ1lWczBYU0FxSUc0Z0t5QmhXemhkSUNvZ2FTQXJJR0ZiTVRKZElDb2djaXdnZEdocGN5NTVJRDBnWVZzeFhTQXFJSFFnS3lCaFd6VmRJQ29nYmlBcklHRmJPVjBnS2lCcElDc2dZVnN4TTEwZ0tpQnlMQ0IwYUdsekxub2dQU0JoV3pKZElDb2dkQ0FySUdGYk5sMGdLaUJ1SUNzZ1lWc3hNRjBnS2lCcElDc2dZVnN4TkYwZ0tpQnlMQ0IwYUdsekxuY2dQU0JoV3pOZElDb2dkQ0FySUdGYk4xMGdLaUJ1SUNzZ1lWc3hNVjBnS2lCcElDc2dZVnN4TlYwZ0tpQnlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2wyYVdSbFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hJQzhnWlNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJCZUdselFXNW5iR1ZHY205dFVYVmhkR1Z5Ym1sdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTNJRDBnTWlBcUlFMWhkR2d1WVdOdmN5aGxMbmNwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVFdGMGFDNXpjWEowS0RFZ0xTQmxMbmNnS2lCbExuY3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJRHdnTVdVdE5DQS9JQ2gwYUdsekxuZ2dQU0F4TENCMGFHbHpMbmtnUFNBd0xDQjBhR2x6TG5vZ1BTQXdLU0E2SUNoMGFHbHpMbmdnUFNCbExuZ2dMeUIwTENCMGFHbHpMbmtnUFNCbExua2dMeUIwTENCMGFHbHpMbm9nUFNCbExub2dMeUIwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFRjRhWE5CYm1kc1pVWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUXNJRzRzSUdrc0lISXNJR01nUFNCbExtVnNaVzFsYm5SekxDQnNJRDBnWTFzd1hTd2dhQ0E5SUdOYk5GMHNJSFVnUFNCald6aGRMQ0JrSUQwZ1kxc3hYU3dnWmlBOUlHTmJOVjBzSUcwZ1BTQmpXemxkTENCZklEMGdZMXN5WFN3Z1p5QTlJR05iTmwwc0lIQWdQU0JqV3pFd1hUc0tJQ0FnSUNBZ0lDQnBaaUFvVFdGMGFDNWhZbk1vYUNBdElHUXBJRHdnTGpBeElDWW1JRTFoZEdndVlXSnpLSFVnTFNCZktTQThJQzR3TVNBbUppQk5ZWFJvTG1GaWN5aHRJQzBnWnlrZ1BDQXVNREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0dnZ0t5QmtLU0E4SUM0eElDWW1JRTFoZEdndVlXSnpLSFVnS3lCZktTQThJQzR4SUNZbUlFMWhkR2d1WVdKektHMGdLeUJuS1NBOElDNHhJQ1ltSUUxaGRHZ3VZV0p6S0d3Z0t5Qm1JQ3NnY0NBdElETXBJRHdnTGpFcElISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQXdMQ0F3TENBd0tTd2dkR2hwY3pzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUUxaGRHZ3VVRWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ0tHd2dLeUF4S1NBdklESXNJSGtnUFNBb1ppQXJJREVwSUM4Z01pd2dZaUE5SUNod0lDc2dNU2tnTHlBeUxDQjNJRDBnS0dnZ0t5QmtLU0F2SURRc0lGSWdQU0FvZFNBcklGOHBJQzhnTkN3Z1NTQTlJQ2h0SUNzZ1p5a2dMeUEwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2VDQStJSGtnSmlZZ2VDQStJR0lnUHlCNElEd2dMakF4SUQ4Z0tHNGdQU0F3TENCcElEMGdMamN3TnpFd05qYzRNU3dnY2lBOUlDNDNNRGN4TURZM09ERXBJRG9nS0c0Z1BTQk5ZWFJvTG5OeGNuUW9lQ2tzSUdrZ1BTQjNJQzhnYml3Z2NpQTlJRklnTHlCdUtTQTZJSGtnUGlCaUlEOGdlU0E4SUM0d01TQS9JQ2h1SUQwZ0xqY3dOekV3TmpjNE1Td2dhU0E5SURBc0lISWdQU0F1TnpBM01UQTJOemd4S1NBNklDaHBJRDBnVFdGMGFDNXpjWEowS0hrcExDQnVJRDBnZHlBdklHa3NJSElnUFNCSklDOGdhU2tnT2lCaUlEd2dMakF4SUQ4Z0tHNGdQU0F1TnpBM01UQTJOemd4TENCcElEMGdMamN3TnpFd05qYzRNU3dnY2lBOUlEQXBJRG9nS0hJZ1BTQk5ZWFJvTG5OeGNuUW9ZaWtzSUc0Z1BTQlNJQzhnY2l3Z2FTQTlJRWtnTHlCeUtTd2dkR2hwY3k1elpYUW9iaXdnYVN3Z2Npd2dkQ2tzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCMklEMGdUV0YwYUM1emNYSjBLQ2huSUMwZ2JTa2dLaUFvWnlBdElHMHBJQ3NnS0hVZ0xTQmZLU0FxSUNoMUlDMGdYeWtnS3lBb1pDQXRJR2dwSUNvZ0tHUWdMU0JvS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV0p6S0hZcElEd2dMakF3TVNBbUppQW9kaUE5SURFcExDQjBhR2x6TG5nZ1BTQW9aeUF0SUcwcElDOGdkaXdnZEdocGN5NTVJRDBnS0hVZ0xTQmZLU0F2SUhZc0lIUm9hWE11ZWlBOUlDaGtJQzBnYUNrZ0x5QjJMQ0IwYUdsekxuY2dQU0JOWVhSb0xtRmpiM01vS0d3Z0t5Qm1JQ3NnY0NBdElERXBJQzhnTWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGFXNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMXBiaWgwYUdsekxuZ3NJR1V1ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldsdUtIUm9hWE11ZVN3Z1pTNTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTZMQ0JsTG5vcExDQjBhR2x6TG5jZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5jc0lHVXVkeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVhnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5nc0lHVXVlQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlU3dnWlM1NUtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NkxDQmxMbm9wTENCMGFHbHpMbmNnUFNCTllYUm9MbTFoZUNoMGFHbHpMbmNzSUdVdWR5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLR1V1ZUN3Z1RXRjBhQzV0YVc0b2RDNTRMQ0IwYUdsekxuZ3BLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvWlM1NUxDQk5ZWFJvTG0xcGJpaDBMbmtzSUhSb2FYTXVlU2twTENCMGFHbHpMbm9nUFNCTllYUm9MbTFoZUNobExub3NJRTFoZEdndWJXbHVLSFF1ZWl3Z2RHaHBjeTU2S1Nrc0lIUm9hWE11ZHlBOUlFMWhkR2d1YldGNEtHVXVkeXdnVFdGMGFDNXRhVzRvZEM1M0xDQjBhR2x6TG5jcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNZVzF3VTJOaGJHRnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWVTa3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQjBhR2x6TG5vcEtTd2dkR2hwY3k1M0lEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTUzS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRXhsYm1kMGFDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ScGRtbGtaVk5qWVd4aGNpaHVJSHg4SURFcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0UxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJRzRwS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1iRzl2Y2lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTZLU3dnZEdocGN5NTNJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJWcGJDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1alpXbHNLSFJvYVhNdWVDa3NJSFJvYVhNdWVTQTlJRTFoZEdndVkyVnBiQ2gwYUdsekxua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtTmxhV3dvZEdocGN5NTZLU3dnZEdocGN5NTNJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVkeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5YjNWdVpDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1eWIzVnVaQ2gwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSnZkVzVrS0hSb2FYTXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU2S1N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVJVYjFwbGNtOG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWRISjFibU1vZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNTBjblZ1WXloMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9MblJ5ZFc1aktIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1ZEhKMWJtTW9kR2hwY3k1M0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHNWxaMkYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ0xYUm9hWE11ZUN3Z2RHaHBjeTU1SUQwZ0xYUm9hWE11ZVN3Z2RHaHBjeTU2SUQwZ0xYUm9hWE11ZWl3Z2RHaHBjeTUzSUQwZ0xYUm9hWE11ZHl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSdmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFJR1V1ZUNBcklIUm9hWE11ZVNBcUlHVXVlU0FySUhSb2FYTXVlaUFxSUdVdWVpQXJJSFJvYVhNdWR5QXFJR1V1ZHpzS0lDQWdJSDBLSUNBZ0lHeGxibWQwYUZOeEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQjBhR2x6TG5nZ0t5QjBhR2x6TG5rZ0tpQjBhR2x6TG5rZ0t5QjBhR2x6TG5vZ0tpQjBhR2x6TG5vZ0t5QjBhR2x6TG5jZ0tpQjBhR2x6TG5jN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaDBhR2x6TG5nZ0tpQjBhR2x6TG5nZ0t5QjBhR2x6TG5rZ0tpQjBhR2x6TG5rZ0t5QjBhR2x6TG5vZ0tpQjBhR2x6TG5vZ0t5QjBhR2x6TG5jZ0tpQjBhR2x6TG5jcE93b2dJQ0FnZlFvZ0lDQWdiV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aDBhR2x6TG5ncElDc2dUV0YwYUM1aFluTW9kR2hwY3k1NUtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVpa2dLeUJOWVhSb0xtRmljeWgwYUdsekxuY3BPd29nSUNBZ2ZRb2dJQ0FnYm05eWJXRnNhWHBsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwZG1sa1pWTmpZV3hoY2loMGFHbHpMbXhsYm1kMGFDZ3BJSHg4SURFcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVEdWdVozUm9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd4cGVtVW9LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ0tHVXVlQ0F0SUhSb2FYTXVlQ2tnS2lCMExDQjBhR2x6TG5rZ0t6MGdLR1V1ZVNBdElIUm9hWE11ZVNrZ0tpQjBMQ0IwYUdsekxub2dLejBnS0dVdWVpQXRJSFJvYVhNdWVpa2dLaUIwTENCMGFHbHpMbmNnS3owZ0tHVXVkeUF0SUhSb2FYTXVkeWtnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRlpsWTNSdmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdnS3lBb2RDNTRJQzBnWlM1NEtTQXFJRzRzSUhSb2FYTXVlU0E5SUdVdWVTQXJJQ2gwTG5rZ0xTQmxMbmtwSUNvZ2Jpd2dkR2hwY3k1NklEMGdaUzU2SUNzZ0tIUXVlaUF0SUdVdWVpa2dLaUJ1TENCMGFHbHpMbmNnUFNCbExuY2dLeUFvZEM1M0lDMGdaUzUzS1NBcUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbmdnUFQwOUlIUm9hWE11ZUNBbUppQmxMbmtnUFQwOUlIUm9hWE11ZVNBbUppQmxMbm9nUFQwOUlIUm9hWE11ZWlBbUppQmxMbmNnUFQwOUlIUm9hWE11ZHpzS0lDQWdJSDBLSUNBZ0lHWnliMjFCY25KaGVTaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxXM1JkTENCMGFHbHpMbmtnUFNCbFczUWdLeUF4WFN3Z2RHaHBjeTU2SUQwZ1pWdDBJQ3NnTWwwc0lIUm9hWE11ZHlBOUlHVmJkQ0FySUROZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5nc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdWVpd2daVnQwSUNzZ00xMGdQU0IwYUdsekxuY3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1blpYUllLSFFwTENCMGFHbHpMbmtnUFNCbExtZGxkRmtvZENrc0lIUm9hWE11ZWlBOUlHVXVaMlYwV2loMEtTd2dkR2hwY3k1M0lEMGdaUzVuWlhSWEtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbUZ1Wkc5dEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbmtnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxub2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5jZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnS2x0VGVXMWliMnd1YVhSbGNtRjBiM0pkS0NrZ2V3b2dJQ0FnSUNBZ0lIbHBaV3hrSUhSb2FYTXVlQ3dnZVdsbGJHUWdkR2hwY3k1NUxDQjVhV1ZzWkNCMGFHbHpMbm9zSUhscFpXeGtJSFJvYVhNdWR6c0tJQ0FnSUgwS2ZTd2daMjhnUFNCamJHRnpjeUJsZUhSbGJtUnpJSE51SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Td2diaUE5SUh0OUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selVtVnVaR1Z5VkdGeVoyVjBJRDBnSVRBc0lIUm9hWE11ZDJsa2RHZ2dQU0JsTENCMGFHbHpMbWhsYVdkb2RDQTlJSFFzSUhSb2FYTXVaR1Z3ZEdnZ1BTQXhMQ0IwYUdsekxuTmphWE56YjNJZ1BTQnVaWGNnYW1Vb01Dd2dNQ3dnWlN3Z2RDa3NJSFJvYVhNdWMyTnBjM052Y2xSbGMzUWdQU0FoTVN3Z2RHaHBjeTUyYVdWM2NHOXlkQ0E5SUc1bGR5QnFaU2d3TENBd0xDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklERUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJRzR1Wlc1amIyUnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9UWE1vSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUJ2Y0hScGIyNHVaVzVqYjJScGJtY2dhR0Z6SUdKbFpXNGdjbVZ3YkdGalpXUWdZbmtnYjNCMGFXOXVMbU52Ykc5eVUzQmhZMlV1SWlrc0lHNHVZMjlzYjNKVGNHRmpaU0E5SUc0dVpXNWpiMlJwYm1jZ1BUMDlJSEpwSUQ4Z2RuUWdPaUJZZENrc0lHNGdQU0JQWW1wbFkzUXVZWE56YVdkdUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkR1ZOYVhCdFlYQnpPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzUwWlhKdVlXeEdiM0p0WVhRNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2diWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvUW5WbVptVnlPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJFSjFabVpsY2pvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WR1Y0ZEhWeVpUb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjMkZ0Y0d4bGN6b2dNQW9nSUNBZ0lDQWdJSDBzSUc0cExDQjBhR2x6TG5SbGVIUjFjbVVnUFNCdVpYY2dVM1FvYVN3Z2JpNXRZWEJ3YVc1bkxDQnVMbmR5WVhCVExDQnVMbmR5WVhCVUxDQnVMbTFoWjBacGJIUmxjaXdnYmk1dGFXNUdhV3gwWlhJc0lHNHVabTl5YldGMExDQnVMblI1Y0dVc0lHNHVZVzVwYzI5MGNtOXdlU3dnYmk1amIyeHZjbE53WVdObEtTd2dkR2hwY3k1MFpYaDBkWEpsTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlJQ0V3TENCMGFHbHpMblJsZUhSMWNtVXVabXhwY0ZrZ1BTQWhNU3dnZEdocGN5NTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlHNHVaMlZ1WlhKaGRHVk5hWEJ0WVhCekxDQjBhR2x6TG5SbGVIUjFjbVV1YVc1MFpYSnVZV3hHYjNKdFlYUWdQU0J1TG1sdWRHVnlibUZzUm05eWJXRjBMQ0IwYUdsekxtUmxjSFJvUW5WbVptVnlJRDBnYmk1a1pYQjBhRUoxWm1abGNpd2dkR2hwY3k1emRHVnVZMmxzUW5WbVptVnlJRDBnYmk1emRHVnVZMmxzUW5WbVptVnlMQ0IwYUdsekxtUmxjSFJvVkdWNGRIVnlaU0E5SUc0dVpHVndkR2hVWlhoMGRYSmxMQ0IwYUdsekxuTmhiWEJzWlhNZ1BTQnVMbk5oYlhCc1pYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVGFYcGxLR1VzSUhRc0lHNGdQU0F4S1NCN0NpQWdJQ0FnSUNBZ0tIUm9hWE11ZDJsa2RHZ2dJVDA5SUdVZ2ZId2dkR2hwY3k1b1pXbG5hSFFnSVQwOUlIUWdmSHdnZEdocGN5NWtaWEIwYUNBaFBUMGdiaWtnSmlZZ0tIUm9hWE11ZDJsa2RHZ2dQU0JsTENCMGFHbHpMbWhsYVdkb2RDQTlJSFFzSUhSb2FYTXVaR1Z3ZEdnZ1BTQnVMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlV1ZDJsa2RHZ2dQU0JsTENCMGFHbHpMblJsZUhSMWNtVXVhVzFoWjJVdWFHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1MFpYaDBkWEpsTG1sdFlXZGxMbVJsY0hSb0lEMGdiaXdnZEdocGN5NWthWE53YjNObEtDa3BMQ0IwYUdsekxuWnBaWGR3YjNKMExuTmxkQ2d3TENBd0xDQmxMQ0IwS1N3Z2RHaHBjeTV6WTJsemMyOXlMbk5sZENnd0xDQXdMQ0JsTENCMEtUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5kcFpIUm9JRDBnWlM1M2FXUjBhQ3dnZEdocGN5NW9aV2xuYUhRZ1BTQmxMbWhsYVdkb2RDd2dkR2hwY3k1a1pYQjBhQ0E5SUdVdVpHVndkR2dzSUhSb2FYTXVjMk5wYzNOdmNpNWpiM0I1S0dVdWMyTnBjM052Y2lrc0lIUm9hWE11YzJOcGMzTnZjbFJsYzNRZ1BTQmxMbk5qYVhOemIzSlVaWE4wTENCMGFHbHpMblpwWlhkd2IzSjBMbU52Y0hrb1pTNTJhV1YzY0c5eWRDa3NJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHVXVkR1Y0ZEhWeVpTNWpiRzl1WlNncExDQjBhR2x6TG5SbGVIUjFjbVV1YVhOU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5SbGVIUjFjbVV1YVcxaFoyVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5SbGVIUjFjbVV1YzI5MWNtTmxJRDBnYm1WM0lFbHVLSFFwTENCMGFHbHpMbVJsY0hSb1FuVm1abVZ5SUQwZ1pTNWtaWEIwYUVKMVptWmxjaXdnZEdocGN5NXpkR1Z1WTJsc1FuVm1abVZ5SUQwZ1pTNXpkR1Z1WTJsc1FuVm1abVZ5TENCbExtUmxjSFJvVkdWNGRIVnlaU0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVrWlhCMGFGUmxlSFIxY21VZ1BTQmxMbVJsY0hSb1ZHVjRkSFZ5WlM1amJHOXVaU2dwS1N3Z2RHaHBjeTV6WVcxd2JHVnpJRDBnWlM1ellXMXdiR1Z6TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6Y0c5elpTSUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtmU3dnY1hRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdkdklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNU3dnYmlBOUlIdDlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUtTd2dkR2hwY3k1cGMxZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMElEMGdJVEE3Q2lBZ0lDQjlDbjBzSUVGeklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCVGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm5Wc2JDd2dkQ0E5SURFc0lHNGdQU0F4TENCcElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9iblZzYkNrc0lIUm9hWE11YVhORVlYUmhRWEp5WVhsVVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCd2RDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQndkQ3dnZEdocGN5NTNjbUZ3VWlBOUlFbDBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0IwYUdsekxtWnNhWEJaSUQwZ0lURXNJSFJvYVhNdWRXNXdZV05yUVd4cFoyNXRaVzUwSUQwZ01Uc0tJQ0FnSUgwS2ZTd2dhMndnUFNCamJHRnpjeUJsZUhSbGJtUnpJSEYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Td2diaUE5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBMQ0IwYUdsekxtbHpWMlZpUjB4QmNuSmhlVkpsYm1SbGNsUmhjbWRsZENBOUlDRXdMQ0IwYUdsekxtUmxjSFJvSUQwZ2Jpd2dkR2hwY3k1MFpYaDBkWEpsSUQwZ2JtVjNJRUZ6S0c1MWJHd3NJR1VzSUhRc0lHNHBMQ0IwYUdsekxuUmxlSFIxY21VdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDBnSVRBN0NpQWdJQ0I5Q24wc0lIRnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JuVnNiQ3dnZENBOUlERXNJRzRnUFNBeExDQnBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm5Wc2JDa3NJSFJvYVhNdWFYTkVZWFJoTTBSVVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCd2RDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQndkQ3dnZEdocGN5NTNjbUZ3VWlBOUlFbDBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0IwYUdsekxtWnNhWEJaSUQwZ0lURXNJSFJvYVhNdWRXNXdZV05yUVd4cFoyNXRaVzUwSUQwZ01Uc0tJQ0FnSUgwS2ZTd2dTR3dnUFNCamJHRnpjeUJsZUhSbGJtUnpJSEYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Td2diaUE5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBMQ0IwYUdsekxtbHpWMlZpUjB3elJGSmxibVJsY2xSaGNtZGxkQ0E5SUNFd0xDQjBhR2x6TG1SbGNIUm9JRDBnYml3Z2RHaHBjeTUwWlhoMGRYSmxJRDBnYm1WM0lIRnlLRzUxYkd3c0lHVXNJSFFzSUc0cExDQjBhR2x6TG5SbGVIUjFjbVV1YVhOU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbElEMGdJVEE3Q2lBZ0lDQjlDbjBzSUVkc0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCeGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJREVzSUc0Z1BTQXhMQ0JwSUQwZ2UzMHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUdrcExDQjBhR2x6TG1selYyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNZ1BTQWhNRHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNCMGFHbHpMblJsZUhSMWNtVWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdPeUJoSUR3Z2Jqc2dZU3NyS1hSb2FYTXVkR1Y0ZEhWeVpWdGhYU0E5SUhJdVkyeHZibVVvS1N3Z2RHaHBjeTUwWlhoMGRYSmxXMkZkTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMmw2WlNobExDQjBMQ0J1SUQwZ01Ta2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbmRwWkhSb0lDRTlQU0JsSUh4OElIUm9hWE11YUdWcFoyaDBJQ0U5UFNCMElIeDhJSFJvYVhNdVpHVndkR2dnSVQwOUlHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUzYVdSMGFDQTlJR1VzSUhSb2FYTXVhR1ZwWjJoMElEMGdkQ3dnZEdocGN5NWtaWEIwYUNBOUlHNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMblJsZUhSMWNtVXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWFJvYVhNdWRHVjRkSFZ5WlZ0cFhTNXBiV0ZuWlM1M2FXUjBhQ0E5SUdVc0lIUm9hWE11ZEdWNGRIVnlaVnRwWFM1cGJXRm5aUzVvWldsbmFIUWdQU0IwTENCMGFHbHpMblJsZUhSMWNtVmJhVjB1YVcxaFoyVXVaR1Z3ZEdnZ1BTQnVPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NTJhV1YzY0c5eWRDNXpaWFFvTUN3Z01Dd2daU3dnZENrc0lIUm9hWE11YzJOcGMzTnZjaTV6WlhRb01Dd2dNQ3dnWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1M2FXUjBhQ0E5SUdVdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMElEMGdaUzVvWldsbmFIUXNJSFJvYVhNdVpHVndkR2dnUFNCbExtUmxjSFJvTENCMGFHbHpMbk5qYVhOemIzSXVZMjl3ZVNobExuTmphWE56YjNJcExDQjBhR2x6TG5OamFYTnpiM0pVWlhOMElEMGdaUzV6WTJsemMyOXlWR1Z6ZEN3Z2RHaHBjeTUyYVdWM2NHOXlkQzVqYjNCNUtHVXVkbWxsZDNCdmNuUXBMQ0IwYUdsekxtUmxjSFJvUW5WbVptVnlJRDBnWlM1a1pYQjBhRUoxWm1abGNpd2dkR2hwY3k1emRHVnVZMmxzUW5WbVptVnlJRDBnWlM1emRHVnVZMmxzUW5WbVptVnlMQ0JsTG1SbGNIUm9WR1Y0ZEhWeVpTQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWtaWEIwYUZSbGVIUjFjbVVnUFNCbExtUmxjSFJvVkdWNGRIVnlaUzVqYkc5dVpTZ3BLU3dnZEdocGN5NTBaWGgwZFhKbExteGxibWQwYUNBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1ZEdWNGRIVnlaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZEdocGN5NTBaWGgwZFhKbFczUmRJRDBnWlM1MFpYaDBkWEpsVzNSZExtTnNiMjVsS0Nrc0lIUm9hWE11ZEdWNGRIVnlaVnQwWFM1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQU0FoTURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS2ZTd2dWWFFnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Dd2dkQ0E5SURBc0lHNGdQU0F3TENCcElEMGdNU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBjMUYxWVhSbGNtNXBiMjRnUFNBaE1Dd2dkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYM2tnUFNCMExDQjBhR2x6TGw5NklEMGdiaXdnZEdocGN5NWZkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2MyeGxjbkJHYkdGMEtHVXNJSFFzSUc0c0lHa3NJSElzSUdFc0lHOHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzViYVNBcklEQmRMQ0JzSUQwZ2JsdHBJQ3NnTVYwc0lHZ2dQU0J1VzJrZ0t5QXlYU3dnZFNBOUlHNWJhU0FySUROZExDQmtJRDBnY2x0aElDc2dNRjBzSUdZZ1BTQnlXMkVnS3lBeFhTd2diU0E5SUhKYllTQXJJREpkTENCZklEMGdjbHRoSUNzZ00xMDdDaUFnSUNBZ0lDQWdhV1lnS0c4Z1BUMDlJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaVnQwSUNzZ01GMGdQU0JqTENCbFczUWdLeUF4WFNBOUlHd3NJR1ZiZENBcklESmRJRDBnYUN3Z1pWdDBJQ3NnTTEwZ1BTQjFPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNBeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWYmRDQXJJREJkSUQwZ1pDd2daVnQwSUNzZ01WMGdQU0JtTENCbFczUWdLeUF5WFNBOUlHMHNJR1ZiZENBcklETmRJRDBnWHpzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZFNBaFBUMGdYeUI4ZkNCaklDRTlQU0JrSUh4OElHd2dJVDA5SUdZZ2ZId2dhQ0FoUFQwZ2JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SURFZ0xTQnZMQ0J3SUQwZ1l5QXFJR1FnS3lCc0lDb2daaUFySUdnZ0tpQnRJQ3NnZFNBcUlGOHNJSFlnUFNCd0lENDlJREFnUHlBeElEb2dMVEVzSUhnZ1BTQXhJQzBnY0NBcUlIQTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRJRDRnVG5WdFltVnlMa1ZRVTBsTVQwNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdUV0YwYUM1emNYSjBLSGdwTENCM0lEMGdUV0YwYUM1aGRHRnVNaWhpTENCd0lDb2dkaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuSUQwZ1RXRjBhQzV6YVc0b1p5QXFJSGNwSUM4Z1lpd2dieUE5SUUxaGRHZ3VjMmx1S0c4Z0tpQjNLU0F2SUdJN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCdklDb2dkanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01nUFNCaklDb2daeUFySUdRZ0tpQjVMQ0JzSUQwZ2JDQXFJR2NnS3lCbUlDb2dlU3dnYUNBOUlHZ2dLaUJuSUNzZ2JTQXFJSGtzSUhVZ1BTQjFJQ29nWnlBcklGOGdLaUI1TENCbklEMDlQU0F4SUMwZ2J5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQXhJQzhnVFdGMGFDNXpjWEowS0dNZ0tpQmpJQ3NnYkNBcUlHd2dLeUJvSUNvZ2FDQXJJSFVnS2lCMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTWdLajBnWWl3Z2JDQXFQU0JpTENCb0lDbzlJR0lzSUhVZ0tqMGdZanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmxXM1JkSUQwZ1l5d2daVnQwSUNzZ01WMGdQU0JzTENCbFczUWdLeUF5WFNBOUlHZ3NJR1ZiZENBcklETmRJRDBnZFRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCdGRXeDBhWEJzZVZGMVlYUmxjbTVwYjI1elJteGhkQ2hsTENCMExDQnVMQ0JwTENCeUxDQmhLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0J1VzJsZExDQmpJRDBnYmx0cElDc2dNVjBzSUd3Z1BTQnVXMmtnS3lBeVhTd2dhQ0E5SUc1YmFTQXJJRE5kTENCMUlEMGdjbHRoWFN3Z1pDQTlJSEpiWVNBcklERmRMQ0JtSUQwZ2NsdGhJQ3NnTWwwc0lHMGdQU0J5VzJFZ0t5QXpYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlHOGdLaUJ0SUNzZ2FDQXFJSFVnS3lCaklDb2daaUF0SUd3Z0tpQmtMQ0JsVzNRZ0t5QXhYU0E5SUdNZ0tpQnRJQ3NnYUNBcUlHUWdLeUJzSUNvZ2RTQXRJRzhnS2lCbUxDQmxXM1FnS3lBeVhTQTlJR3dnS2lCdElDc2dhQ0FxSUdZZ0t5QnZJQ29nWkNBdElHTWdLaUIxTENCbFczUWdLeUF6WFNBOUlHZ2dLaUJ0SUMwZ2J5QXFJSFVnTFNCaklDb2daQ0F0SUd3Z0tpQm1MQ0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSGdvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2c3Q2lBZ0lDQjlDaUFnSUNCelpYUWdlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZENCNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhrb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgza2dQU0JsTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdlaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlanNLSUNBZ0lIMEtJQ0FnSUhObGRDQjZLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDk2SUQwZ1pTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhjb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNjN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZHlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmR5QTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0JsTENCMGFHbHpMbDk1SUQwZ2RDd2dkR2hwY3k1ZmVpQTlJRzRzSUhSb2FYTXVYM2NnUFNCcExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTVmZUN3Z2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWl3Z2RHaHBjeTVmZHlrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXVlQ3dnZEdocGN5NWZlU0E5SUdVdWVTd2dkR2hwY3k1ZmVpQTlJR1V1ZWl3Z2RHaHBjeTVmZHlBOUlHVXVkeXdnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVVjFiR1Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1WDNnc0lHa2dQU0JsTGw5NUxDQnlJRDBnWlM1ZmVpd2dZU0E5SUdVdVgyOXlaR1Z5TENCdklEMGdUV0YwYUM1amIzTXNJR01nUFNCTllYUm9Mbk5wYml3Z2JDQTlJRzhvYmlBdklESXBMQ0JvSUQwZ2J5aHBJQzhnTWlrc0lIVWdQU0J2S0hJZ0x5QXlLU3dnWkNBOUlHTW9iaUF2SURJcExDQm1JRDBnWXlocElDOGdNaWtzSUcwZ1BTQmpLSElnTHlBeUtUc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1lTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGhaV2lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1pDQXFJR2dnS2lCMUlDc2diQ0FxSUdZZ0tpQnRMQ0IwYUdsekxsOTVJRDBnYkNBcUlHWWdLaUIxSUMwZ1pDQXFJR2dnS2lCdExDQjBhR2x6TGw5NklEMGdiQ0FxSUdnZ0tpQnRJQ3NnWkNBcUlHWWdLaUIxTENCMGFHbHpMbDkzSUQwZ2JDQXFJR2dnS2lCMUlDMGdaQ0FxSUdZZ0tpQnRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsbFlXaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnWkNBcUlHZ2dLaUIxSUNzZ2JDQXFJR1lnS2lCdExDQjBhR2x6TGw5NUlEMGdiQ0FxSUdZZ0tpQjFJQzBnWkNBcUlHZ2dLaUJ0TENCMGFHbHpMbDk2SUQwZ2JDQXFJR2dnS2lCdElDMGdaQ0FxSUdZZ0tpQjFMQ0IwYUdsekxsOTNJRDBnYkNBcUlHZ2dLaUIxSUNzZ1pDQXFJR1lnS2lCdE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxwWVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdaQ0FxSUdnZ0tpQjFJQzBnYkNBcUlHWWdLaUJ0TENCMGFHbHpMbDk1SUQwZ2JDQXFJR1lnS2lCMUlDc2daQ0FxSUdnZ0tpQnRMQ0IwYUdsekxsOTZJRDBnYkNBcUlHZ2dLaUJ0SUNzZ1pDQXFJR1lnS2lCMUxDQjBhR2x6TGw5M0lEMGdiQ0FxSUdnZ0tpQjFJQzBnWkNBcUlHWWdLaUJ0T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbHBaV0NJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1pDQXFJR2dnS2lCMUlDMGdiQ0FxSUdZZ0tpQnRMQ0IwYUdsekxsOTVJRDBnYkNBcUlHWWdLaUIxSUNzZ1pDQXFJR2dnS2lCdExDQjBhR2x6TGw5NklEMGdiQ0FxSUdnZ0tpQnRJQzBnWkNBcUlHWWdLaUIxTENCMGFHbHpMbDkzSUQwZ2JDQXFJR2dnS2lCMUlDc2daQ0FxSUdZZ0tpQnRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsbGFXQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnWkNBcUlHZ2dLaUIxSUNzZ2JDQXFJR1lnS2lCdExDQjBhR2x6TGw5NUlEMGdiQ0FxSUdZZ0tpQjFJQ3NnWkNBcUlHZ2dLaUJ0TENCMGFHbHpMbDk2SUQwZ2JDQXFJR2dnS2lCdElDMGdaQ0FxSUdZZ0tpQjFMQ0IwYUdsekxsOTNJRDBnYkNBcUlHZ2dLaUIxSUMwZ1pDQXFJR1lnS2lCdE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxoYVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdaQ0FxSUdnZ0tpQjFJQzBnYkNBcUlHWWdLaUJ0TENCMGFHbHpMbDk1SUQwZ2JDQXFJR1lnS2lCMUlDMGdaQ0FxSUdnZ0tpQnRMQ0IwYUdsekxsOTZJRDBnYkNBcUlHZ2dLaUJ0SUNzZ1pDQXFJR1lnS2lCMUxDQjBhR2x6TGw5M0lEMGdiQ0FxSUdnZ0tpQjFJQ3NnWkNBcUlHWWdLaUJ0T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklDNXpaWFJHY205dFJYVnNaWElvS1NCbGJtTnZkVzUwWlhKbFpDQmhiaUIxYm10dWIzZHVJRzl5WkdWeU9pQWlJQ3NnWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0FoTVNBbUppQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnTHlBeUxDQnBJRDBnVFdGMGFDNXphVzRvYmlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbExuZ2dLaUJwTENCMGFHbHpMbDk1SUQwZ1pTNTVJQ29nYVN3Z2RHaHBjeTVmZWlBOUlHVXVlaUFxSUdrc0lIUm9hWE11WDNjZ1BTQk5ZWFJvTG1OdmN5aHVLU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaV3hsYldWdWRITXNJRzRnUFNCMFd6QmRMQ0JwSUQwZ2RGczBYU3dnY2lBOUlIUmJPRjBzSUdFZ1BTQjBXekZkTENCdklEMGdkRnMxWFN3Z1l5QTlJSFJiT1Ywc0lHd2dQU0IwV3pKZExDQm9JRDBnZEZzMlhTd2dkU0E5SUhSYk1UQmRMQ0JrSUQwZ2JpQXJJRzhnS3lCMU93b2dJQ0FnSUNBZ0lHbG1JQ2hrSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUM0MUlDOGdUV0YwYUM1emNYSjBLR1FnS3lBeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkeUE5SUM0eU5TQXZJR1lzSUhSb2FYTXVYM2dnUFNBb2FDQXRJR01wSUNvZ1ppd2dkR2hwY3k1ZmVTQTlJQ2h5SUMwZ2JDa2dLaUJtTENCMGFHbHpMbDk2SUQwZ0tHRWdMU0JwS1NBcUlHWTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h1SUQ0Z2J5QW1KaUJ1SUQ0Z2RTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SURJZ0tpQk5ZWFJvTG5OeGNuUW9NU0FySUc0Z0xTQnZJQzBnZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzY2dQU0FvYUNBdElHTXBJQzhnWml3Z2RHaHBjeTVmZUNBOUlDNHlOU0FxSUdZc0lIUm9hWE11WDNrZ1BTQW9hU0FySUdFcElDOGdaaXdnZEdocGN5NWZlaUE5SUNoeUlDc2diQ2tnTHlCbU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ieUErSUhVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0F5SUNvZ1RXRjBhQzV6Y1hKMEtERWdLeUJ2SUMwZ2JpQXRJSFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5M0lEMGdLSElnTFNCc0tTQXZJR1lzSUhSb2FYTXVYM2dnUFNBb2FTQXJJR0VwSUM4Z1ppd2dkR2hwY3k1ZmVTQTlJQzR5TlNBcUlHWXNJSFJvYVhNdVgzb2dQU0FvWXlBcklHZ3BJQzhnWmpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlESWdLaUJOWVhSb0xuTnhjblFvTVNBcklIVWdMU0J1SUMwZ2J5azdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2NnUFNBb1lTQXRJR2twSUM4Z1ppd2dkR2hwY3k1ZmVDQTlJQ2h5SUNzZ2JDa2dMeUJtTENCMGFHbHpMbDk1SUQwZ0tHTWdLeUJvS1NBdklHWXNJSFJvYVhNdVgzb2dQU0F1TWpVZ0tpQm1Pd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZWdWFYUldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdVpHOTBLSFFwSUNzZ01Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQThJRTUxYldKbGNpNUZVRk5KVEU5T0lEOGdLRzRnUFNBd0xDQk5ZWFJvTG1GaWN5aGxMbmdwSUQ0Z1RXRjBhQzVoWW5Nb1pTNTZLU0EvSUNoMGFHbHpMbDk0SUQwZ0xXVXVlU3dnZEdocGN5NWZlU0E5SUdVdWVDd2dkR2hwY3k1ZmVpQTlJREFzSUhSb2FYTXVYM2NnUFNCdUtTQTZJQ2gwYUdsekxsOTRJRDBnTUN3Z2RHaHBjeTVmZVNBOUlDMWxMbm9zSUhSb2FYTXVYM29nUFNCbExua3NJSFJvYVhNdVgzY2dQU0J1S1NrZ09pQW9kR2hwY3k1ZmVDQTlJR1V1ZVNBcUlIUXVlaUF0SUdVdWVpQXFJSFF1ZVN3Z2RHaHBjeTVmZVNBOUlHVXVlaUFxSUhRdWVDQXRJR1V1ZUNBcUlIUXVlaXdnZEdocGN5NWZlaUE5SUdVdWVDQXFJSFF1ZVNBdElHVXVlU0FxSUhRdWVDd2dkR2hwY3k1ZmR5QTlJRzRwTENCMGFHbHpMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ1lXNW5iR1ZVYnlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlESWdLaUJOWVhSb0xtRmpiM01vVFdGMGFDNWhZbk1vWTNRb2RHaHBjeTVrYjNRb1pTa3NJQzB4TENBeEtTa3BPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxWRzkzWVhKa2N5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUZ1WjJ4bFZHOG9aU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNGdQVDA5SURBcElISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdUV0YwYUM1dGFXNG9NU3dnZENBdklHNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Oc1pYSndLR1VzSUdrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2FXUmxiblJwZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtEQXNJREFzSURBc0lERXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MlpYSjBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZibXAxWjJGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5dWFuVm5ZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUNvOUlDMHhMQ0IwYUdsekxsOTVJQ285SUMweExDQjBhR2x6TGw5NklDbzlJQzB4TENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYjNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElDb2daUzVmZUNBcklIUm9hWE11WDNrZ0tpQmxMbDk1SUNzZ2RHaHBjeTVmZWlBcUlHVXVYM29nS3lCMGFHbHpMbDkzSUNvZ1pTNWZkenNLSUNBZ0lIMEtJQ0FnSUd4bGJtZDBhRk54S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUNvZ2RHaHBjeTVmZUNBcklIUm9hWE11WDNrZ0tpQjBhR2x6TGw5NUlDc2dkR2hwY3k1ZmVpQXFJSFJvYVhNdVgzb2dLeUIwYUdsekxsOTNJQ29nZEdocGN5NWZkenNLSUNBZ0lIMEtJQ0FnSUd4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXpjWEowS0hSb2FYTXVYM2dnS2lCMGFHbHpMbDk0SUNzZ2RHaHBjeTVmZVNBcUlIUm9hWE11WDNrZ0t5QjBhR2x6TGw5NklDb2dkR2hwY3k1ZmVpQXJJSFJvYVhNdVgzY2dLaUIwYUdsekxsOTNLVHNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11YkdWdVozUm9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnUFQwOUlEQWdQeUFvZEdocGN5NWZlQ0E5SURBc0lIUm9hWE11WDNrZ1BTQXdMQ0IwYUdsekxsOTZJRDBnTUN3Z2RHaHBjeTVmZHlBOUlERXBJRG9nS0dVZ1BTQXhJQzhnWlN3Z2RHaHBjeTVmZUNBOUlIUm9hWE11WDNnZ0tpQmxMQ0IwYUdsekxsOTVJRDBnZEdocGN5NWZlU0FxSUdVc0lIUm9hWE11WDNvZ1BTQjBhR2x6TGw5NklDb2daU3dnZEdocGN5NWZkeUE5SUhSb2FYTXVYM2NnS2lCbEtTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjeWhsTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1ZmVDd2dhU0E5SUdVdVgza3NJSElnUFNCbExsOTZMQ0JoSUQwZ1pTNWZkeXdnYnlBOUlIUXVYM2dzSUdNZ1BTQjBMbDk1TENCc0lEMGdkQzVmZWl3Z2FDQTlJSFF1WDNjN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCdUlDb2dhQ0FySUdFZ0tpQnZJQ3NnYVNBcUlHd2dMU0J5SUNvZ1l5d2dkR2hwY3k1ZmVTQTlJR2tnS2lCb0lDc2dZU0FxSUdNZ0t5QnlJQ29nYnlBdElHNGdLaUJzTENCMGFHbHpMbDk2SUQwZ2NpQXFJR2dnS3lCaElDb2diQ0FySUc0Z0tpQmpJQzBnYVNBcUlHOHNJSFJvYVhNdVgzY2dQU0JoSUNvZ2FDQXRJRzRnS2lCdklDMGdhU0FxSUdNZ0xTQnlJQ29nYkN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJ4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQXdLU0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ01Ta2djbVYwZFhKdUlIUm9hWE11WTI5d2VTaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgzZ3NJR2tnUFNCMGFHbHpMbDk1TENCeUlEMGdkR2hwY3k1ZmVpd2dZU0E5SUhSb2FYTXVYM2NzSUc4Z1BTQmhJQ29nWlM1ZmR5QXJJRzRnS2lCbExsOTRJQ3NnYVNBcUlHVXVYM2tnS3lCeUlDb2daUzVmZWpzS0lDQWdJQ0FnSUNCcFppQW9ieUE4SURBZ1B5QW9kR2hwY3k1ZmR5QTlJQzFsTGw5M0xDQjBhR2x6TGw5NElEMGdMV1V1WDNnc0lIUm9hWE11WDNrZ1BTQXRaUzVmZVN3Z2RHaHBjeTVmZWlBOUlDMWxMbDk2TENCdklEMGdMVzhwSURvZ2RHaHBjeTVqYjNCNUtHVXBMQ0J2SUQ0OUlERXBJSEpsZEhWeWJpQjBhR2x6TGw5M0lEMGdZU3dnZEdocGN5NWZlQ0E5SUc0c0lIUm9hWE11WDNrZ1BTQnBMQ0IwYUdsekxsOTZJRDBnY2l3Z2RHaHBjenNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJREVnTFNCdklDb2dienNLSUNBZ0lDQWdJQ0JwWmlBb1l5QThQU0JPZFcxaVpYSXVSVkJUU1V4UFRpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SURFZ0xTQjBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkeUE5SUdZZ0tpQmhJQ3NnZENBcUlIUm9hWE11WDNjc0lIUm9hWE11WDNnZ1BTQm1JQ29nYmlBcklIUWdLaUIwYUdsekxsOTRMQ0IwYUdsekxsOTVJRDBnWmlBcUlHa2dLeUIwSUNvZ2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWlBOUlHWWdLaUJ5SUNzZ2RDQXFJSFJvYVhNdVgzb3NJSFJvYVhNdWJtOXliV0ZzYVhwbEtDa3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCTllYUm9Mbk54Y25Rb1l5a3NJR2dnUFNCTllYUm9MbUYwWVc0eUtHd3NJRzhwTENCMUlEMGdUV0YwYUM1emFXNG9LREVnTFNCMEtTQXFJR2dwSUM4Z2JDd2daQ0E5SUUxaGRHZ3VjMmx1S0hRZ0tpQm9LU0F2SUd3N0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2NnUFNCaElDb2dkU0FySUhSb2FYTXVYM2NnS2lCa0xDQjBhR2x6TGw5NElEMGdiaUFxSUhVZ0t5QjBhR2x6TGw5NElDb2daQ3dnZEdocGN5NWZlU0E5SUdrZ0tpQjFJQ3NnZEdocGN5NWZlU0FxSUdRc0lIUm9hWE11WDNvZ1BTQnlJQ29nZFNBcklIUm9hWE11WDNvZ0tpQmtMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpiR1Z5Y0ZGMVlYUmxjbTVwYjI1ektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjNCNUtHVXBMbk5zWlhKd0tIUXNJRzRwT3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1RXRjBhQzV5WVc1a2IyMG9LU3dnZENBOUlFMWhkR2d1YzNGeWRDZ3hJQzBnWlNrc0lHNGdQU0JOWVhSb0xuTnhjblFvWlNrc0lHa2dQU0F5SUNvZ1RXRjBhQzVRU1NBcUlFMWhkR2d1Y21GdVpHOXRLQ2tzSUhJZ1BTQXlJQ29nVFdGMGFDNVFTU0FxSUUxaGRHZ3VjbUZ1Wkc5dEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtIUWdLaUJOWVhSb0xtTnZjeWhwS1N3Z2JpQXFJRTFoZEdndWMybHVLSElwTENCdUlDb2dUV0YwYUM1amIzTW9jaWtzSUhRZ0tpQk5ZWFJvTG5OcGJpaHBLU2s3Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExsOTRJRDA5UFNCMGFHbHpMbDk0SUNZbUlHVXVYM2tnUFQwOUlIUm9hWE11WDNrZ0ppWWdaUzVmZWlBOVBUMGdkR2hwY3k1ZmVpQW1KaUJsTGw5M0lEMDlQU0IwYUdsekxsOTNPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbFczUmRMQ0IwYUdsekxsOTVJRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVYM29nUFNCbFczUWdLeUF5WFN3Z2RHaHBjeTVmZHlBOUlHVmJkQ0FySUROZExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwRnljbUY1S0dVZ1BTQmJYU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlIUm9hWE11WDNnc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1ZmVTd2daVnQwSUNzZ01sMGdQU0IwYUdsekxsOTZMQ0JsVzNRZ0t5QXpYU0E5SUhSb2FYTXVYM2NzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXVaMlYwV0NoMEtTd2dkR2hwY3k1ZmVTQTlJR1V1WjJWMFdTaDBLU3dnZEdocGN5NWZlaUE5SUdVdVoyVjBXaWgwS1N3Z2RHaHBjeTVmZHlBOUlHVXVaMlYwVnloMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYjBGeWNtRjVLQ2s3Q2lBZ0lDQjlDaUFnSUNCZmIyNURhR0Z1WjJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05ySUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lGOXZia05vWVc1blpVTmhiR3hpWVdOcktDa2dlMzBLSUNBZ0lDcGJVM2x0WW05c0xtbDBaWEpoZEc5eVhTZ3BJSHNLSUNBZ0lDQWdJQ0I1YVdWc1pDQjBhR2x6TGw5NExDQjVhV1ZzWkNCMGFHbHpMbDk1TENCNWFXVnNaQ0IwYUdsekxsOTZMQ0I1YVdWc1pDQjBhR2x6TGw5M093b2dJQ0FnZlFwOUxDQkJJRDBnWTJ4aGMzTWdjekVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTUNsN0NpQWdJQ0FnSUNBZ2N6RXVjSEp2ZEc5MGVYQmxMbWx6Vm1WamRHOXlNeUE5SUNFd0xDQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0IwTENCMGFHbHpMbm9nUFNCdU93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1SUQwZ2RHaHBjeTU2S1N3Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdkQ3dnZEdocGN5NTZJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJR1VzSUhSb2FYTXVlaUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxua2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVpQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSRGIyMXdiMjVsYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBd09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU0SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmtnUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlaUE5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm83Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTd2dkR2hwY3k1NktUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdzSUhSb2FYTXVlU0E5SUdVdWVTd2dkR2hwY3k1NklEMGdaUzU2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJR1V1ZUN3Z2RHaHBjeTU1SUNzOUlHVXVlU3dnZEdocGN5NTZJQ3M5SUdVdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTENCMGFHbHpMbmtnS3owZ1pTd2dkR2hwY3k1NklDczlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXJJSFF1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hsWkZabFkzUnZjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMbmdnS2lCMExDQjBhR2x6TG5rZ0t6MGdaUzU1SUNvZ2RDd2dkR2hwY3k1NklDczlJR1V1ZWlBcUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0lvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnTFQwZ1pTNTRMQ0IwYUdsekxua2dMVDBnWlM1NUxDQjBhR2x6TG5vZ0xUMGdaUzU2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNWaVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUMwOUlHVXNJSFJvYVhNdWVTQXRQU0JsTENCMGFHbHpMbm9nTFQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZbFpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dMU0IwTG5nc0lIUm9hWE11ZVNBOUlHVXVlU0F0SUhRdWVTd2dkR2hwY3k1NklEMGdaUzU2SUMwZ2RDNTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLajBnWlM1NExDQjBhR2x6TG5rZ0tqMGdaUzU1TENCMGFHbHpMbm9nS2owZ1pTNTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaU3dnZEdocGN5NTVJQ285SUdVc0lIUm9hWE11ZWlBcVBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFdaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDb2dkQzU0TENCMGFHbHpMbmtnUFNCbExua2dLaUIwTG5rc0lIUm9hWE11ZWlBOUlHVXVlaUFxSUhRdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1UlhWc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRndjR3g1VVhWaGRHVnlibWx2YmloWGJDNXpaWFJHY205dFJYVnNaWElvWlNrcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsQmVHbHpRVzVuYkdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRndjR3g1VVhWaGRHVnlibWx2YmloWGJDNXpaWFJHY205dFFYaHBjMEZ1WjJ4bEtHVXNJSFFwS1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDRNeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCeVd6QmRJQ29nZENBcklISmJNMTBnS2lCdUlDc2djbHMyWFNBcUlHa3NJSFJvYVhNdWVTQTlJSEpiTVYwZ0tpQjBJQ3NnY2xzMFhTQXFJRzRnS3lCeVd6ZGRJQ29nYVN3Z2RHaHBjeTU2SUQwZ2Nsc3lYU0FxSUhRZ0t5QnlXelZkSUNvZ2JpQXJJSEpiT0YwZ0tpQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRndjR3g1VFdGMGNtbDRNeWhsS1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbVZzWlcxbGJuUnpMQ0JoSUQwZ01TQXZJQ2h5V3pOZElDb2dkQ0FySUhKYk4xMGdLaUJ1SUNzZ2Nsc3hNVjBnS2lCcElDc2djbHN4TlYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNBb2Nsc3dYU0FxSUhRZ0t5QnlXelJkSUNvZ2JpQXJJSEpiT0YwZ0tpQnBJQ3NnY2xzeE1sMHBJQ29nWVN3Z2RHaHBjeTU1SUQwZ0tISmJNVjBnS2lCMElDc2djbHMxWFNBcUlHNGdLeUJ5V3psZElDb2dhU0FySUhKYk1UTmRLU0FxSUdFc0lIUm9hWE11ZWlBOUlDaHlXekpkSUNvZ2RDQXJJSEpiTmwwZ0tpQnVJQ3NnY2xzeE1GMGdLaUJwSUNzZ2Nsc3hORjBwSUNvZ1lTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbmdzSUdFZ1BTQmxMbmtzSUc4Z1BTQmxMbm9zSUdNZ1BTQmxMbmNzSUd3Z1BTQmpJQ29nZENBcklHRWdLaUJwSUMwZ2J5QXFJRzRzSUdnZ1BTQmpJQ29nYmlBcklHOGdLaUIwSUMwZ2NpQXFJR2tzSUhVZ1BTQmpJQ29nYVNBcklISWdLaUJ1SUMwZ1lTQXFJSFFzSUdRZ1BTQXRjaUFxSUhRZ0xTQmhJQ29nYmlBdElHOGdLaUJwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JzSUNvZ1l5QXJJR1FnS2lBdGNpQXJJR2dnS2lBdGJ5QXRJSFVnS2lBdFlTd2dkR2hwY3k1NUlEMGdhQ0FxSUdNZ0t5QmtJQ29nTFdFZ0t5QjFJQ29nTFhJZ0xTQnNJQ29nTFc4c0lIUm9hWE11ZWlBOUlIVWdLaUJqSUNzZ1pDQXFJQzF2SUNzZ2JDQXFJQzFoSUMwZ2FDQXFJQzF5TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY0hKdmFtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0dVdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTNWhjSEJzZVUxaGRISnBlRFFvWlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1RzS0lDQWdJSDBLSUNBZ0lIVnVjSEp2YW1WamRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLR1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXBMbUZ3Y0d4NVRXRjBjbWw0TkNobExtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnlXekJkSUNvZ2RDQXJJSEpiTkYwZ0tpQnVJQ3NnY2xzNFhTQXFJR2tzSUhSb2FYTXVlU0E5SUhKYk1WMGdLaUIwSUNzZ2NsczFYU0FxSUc0Z0t5QnlXemxkSUNvZ2FTd2dkR2hwY3k1NklEMGdjbHN5WFNBcUlIUWdLeUJ5V3paZElDb2diaUFySUhKYk1UQmRJQ29nYVN3Z2RHaHBjeTV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBdlBTQmxMbmdzSUhSb2FYTXVlU0F2UFNCbExua3NJSFJvYVhNdWVpQXZQU0JsTG5vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYWnBaR1ZUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVUyTmhiR0Z5S0RFZ0x5QmxLVHNLSUNBZ0lIMEtJQ0FnSUcxcGJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVDd2daUzU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTU1TENCbExua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtMXBiaWgwYUdsekxub3NJR1V1ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlYZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2gwYUdsekxuZ3NJR1V1ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtIUm9hWE11ZVN3Z1pTNTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTZMQ0JsTG5vcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMbmdzSUUxaGRHZ3ViV2x1S0hRdWVDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1V1ZVN3Z1RXRjBhQzV0YVc0b2RDNTVMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlM1NkxDQk5ZWFJvTG0xcGJpaDBMbm9zSUhSb2FYTXVlaWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQlRZMkZzWVhJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQjBhR2x6TG5ncEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU1S1Nrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlaWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQk1aVzVuZEdnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2JpQjhmQ0F4S1M1dGRXeDBhWEJzZVZOallXeGhjaWhOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQnVLU2twT3dvZ0lDQWdmUW9nSUNBZ1pteHZiM0lvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpaV2xzS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbU5sYVd3b2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5vcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1Z1WkZSdldtVnlieWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNTBjblZ1WXloMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MblJ5ZFc1aktIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1ZEhKMWJtTW9kR2hwY3k1NktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHNWxaMkYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ0xYUm9hWE11ZUN3Z2RHaHBjeTU1SUQwZ0xYUm9hWE11ZVN3Z2RHaHBjeTU2SUQwZ0xYUm9hWE11ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSdmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFJR1V1ZUNBcklIUm9hWE11ZVNBcUlHVXVlU0FySUhSb2FYTXVlaUFxSUdVdWVqc0tJQ0FnSUgwS0lDQWdJR3hsYm1kMGFGTnhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUIwYUdsekxuZ2dLeUIwYUdsekxua2dLaUIwYUdsekxua2dLeUIwYUdsekxub2dLaUIwYUdsekxubzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxuZ2dLaUIwYUdsekxuZ2dLeUIwYUdsekxua2dLaUIwYUdsekxua2dLeUIwYUdsekxub2dLaUIwYUdsekxub3BPd29nSUNBZ2ZRb2dJQ0FnYldGdWFHRjBkR0Z1VEdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWgwYUdsekxuZ3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTVLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlaWs3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdsMmFXUmxVMk5oYkdGeUtIUm9hWE11YkdWdVozUm9LQ2tnZkh3Z01TazdDaUFnSUNCOUNpQWdJQ0J6WlhSTVpXNW5kR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaU2dwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHVnljQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQW9aUzU0SUMwZ2RHaHBjeTU0S1NBcUlIUXNJSFJvYVhNdWVTQXJQU0FvWlM1NUlDMGdkR2hwY3k1NUtTQXFJSFFzSUhSb2FYTXVlaUFyUFNBb1pTNTZJQzBnZEdocGN5NTZLU0FxSUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc1pYSndWbVZqZEc5eWN5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ0FySUNoMExuZ2dMU0JsTG5ncElDb2diaXdnZEdocGN5NTVJRDBnWlM1NUlDc2dLSFF1ZVNBdElHVXVlU2tnS2lCdUxDQjBhR2x6TG5vZ1BTQmxMbm9nS3lBb2RDNTZJQzBnWlM1NktTQXFJRzRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqY205emN5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzSnZjM05XWldOMGIzSnpLSFJvYVhNc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWTNKdmMzTldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWVDd2dhU0E5SUdVdWVTd2djaUE5SUdVdWVpd2dZU0E5SUhRdWVDd2dieUE5SUhRdWVTd2dZeUE5SUhRdWVqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ2FTQXFJR01nTFNCeUlDb2dieXdnZEdocGN5NTVJRDBnY2lBcUlHRWdMU0J1SUNvZ1l5d2dkR2hwY3k1NklEMGdiaUFxSUc4Z0xTQnBJQ29nWVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhCeWIycGxZM1JQYmxabFkzUnZjaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExteGxibWQwYUZOeEtDazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJREFwSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d3TENBd0xDQXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1Wkc5MEtIUm9hWE1wSUM4Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjNCNUtHVXBMbTExYkhScGNHeDVVMk5oYkdGeUtHNHBPd29nSUNBZ2ZRb2dJQ0FnY0hKdmFtVmpkRTl1VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJQWVM1amIzQjVLSFJvYVhNcExuQnliMnBsWTNSUGJsWmxZM1J2Y2lobEtTd2dkR2hwY3k1emRXSW9UMkVwT3dvZ0lDQWdmUW9nSUNBZ2NtVm1iR1ZqZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNWaUtFOWhMbU52Y0hrb1pTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb01pQXFJSFJvYVhNdVpHOTBLR1VwS1NrN0NpQWdJQ0I5Q2lBZ0lDQmhibWRzWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndWMzRnlkQ2gwYUdsekxteGxibWQwYUZOeEtDa2dLaUJsTG14bGJtZDBhRk54S0NrcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQXdLU0J5WlhSMWNtNGdUV0YwYUM1UVNTQXZJREk3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtUnZkQ2hsS1NBdklIUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdOdmN5aGpkQ2h1TENBdE1Td2dNU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHVXBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUNBdElHVXVlQ3dnYmlBOUlIUm9hWE11ZVNBdElHVXVlU3dnYVNBOUlIUm9hWE11ZWlBdElHVXVlanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FxSUhRZ0t5QnVJQ29nYmlBcklHa2dLaUJwT3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDQXRJR1V1ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rZ0xTQmxMbmtwSUNzZ1RXRjBhQzVoWW5Nb2RHaHBjeTU2SUMwZ1pTNTZLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFUY0dobGNtbGpZV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMVRjR2hsY21sallXeERiMjl5WkhNb1pTNXlZV1JwZFhNc0lHVXVjR2hwTENCbExuUm9aWFJoS1RzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxVGNHaGxjbWxqWVd4RGIyOXlaSE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnVFdGMGFDNXphVzRvZENrZ0tpQmxPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnBJQ29nVFdGMGFDNXphVzRvYmlrc0lIUm9hWE11ZVNBOUlFMWhkR2d1WTI5ektIUXBJQ29nWlN3Z2RHaHBjeTU2SUQwZ2FTQXFJRTFoZEdndVkyOXpLRzRwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU41YkdsdVpISnBZMkZzS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2NtOXRRM2xzYVc1a2NtbGpZV3hEYjI5eVpITW9aUzV5WVdScGRYTXNJR1V1ZEdobGRHRXNJR1V1ZVNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEzbHNhVzVrY21sallXeERiMjl5WkhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbElDb2dUV0YwYUM1emFXNG9kQ2tzSUhSb2FYTXVlU0E5SUc0c0lIUm9hWE11ZWlBOUlHVWdLaUJOWVhSb0xtTnZjeWgwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwV3pFeVhTd2dkR2hwY3k1NUlEMGdkRnN4TTEwc0lIUm9hWE11ZWlBOUlIUmJNVFJkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVGTmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXdLUzVzWlc1bmRHZ29LU3dnYmlBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXhLUzVzWlc1bmRHZ29LU3dnYVNBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXlLUzVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdkQ3dnZEdocGN5NTVJRDBnYml3Z2RHaHBjeTU2SUQwZ2FTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxTllYUnlhWGhEYjJ4MWJXNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVp5YjIxQmNuSmhlU2hsTG1Wc1pXMWxiblJ6TENCMElDb2dOQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VFdGMGNtbDRNME52YkhWdGJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabkp2YlVGeWNtRjVLR1V1Wld4bGJXVnVkSE1zSUhRZ0tpQXpLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFGZFd4bGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1WDNnc0lIUm9hWE11ZVNBOUlHVXVYM2tzSUhSb2FYTXVlaUE5SUdVdVgzb3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyOXNiM0lvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuSXNJSFJvYVhNdWVTQTlJR1V1Wnl3Z2RHaHBjeTU2SUQwZ1pTNWlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzU0SUQwOVBTQjBhR2x6TG5nZ0ppWWdaUzU1SUQwOVBTQjBhR2x6TG5rZ0ppWWdaUzU2SUQwOVBTQjBhR2x6TG5vN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaVnQwWFN3Z2RHaHBjeTU1SUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11ZWlBOUlHVmJkQ0FySURKZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5nc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdWVpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTG1kbGRGZ29kQ2tzSUhSb2FYTXVlU0E5SUdVdVoyVjBXU2gwS1N3Z2RHaHBjeTU2SUQwZ1pTNW5aWFJhS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRSR2x5WldOMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnS0UxaGRHZ3VjbUZ1Wkc5dEtDa2dMU0F1TlNrZ0tpQXlMQ0IwSUQwZ1RXRjBhQzV5WVc1a2IyMG9LU0FxSUUxaGRHZ3VVRWtnS2lBeUxDQnVJRDBnVFdGMGFDNXpjWEowS0RFZ0xTQmxJQ29xSURJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCdUlDb2dUV0YwYUM1amIzTW9kQ2tzSUhSb2FYTXVlU0E5SUc0Z0tpQk5ZWFJvTG5OcGJpaDBLU3dnZEdocGN5NTZJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUNwYlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncElIc0tJQ0FnSUNBZ0lDQjVhV1ZzWkNCMGFHbHpMbmdzSUhscFpXeGtJSFJvYVhNdWVTd2dlV2xsYkdRZ2RHaHBjeTU2T3dvZ0lDQWdmUXA5TENCUFlTQTlJRzVsZHlCQkxDQlhiQ0E5SUc1bGR5QlZkQ3dnVVhRZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUVFb01TQXZJREFzSURFZ0x5QXdMQ0F4SUM4Z01Da3NJSFFnUFNCdVpYY2dRU2d0TVNBdklEQXNJQzB4SUM4Z01Dd2dMVEVnTHlBd0tTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1cGMwSnZlRE1nUFNBaE1Dd2dkR2hwY3k1dGFXNGdQU0JsTENCMGFHbHpMbTFoZUNBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXBMQ0IwYUdsekxtMWhlQzVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVRnljbUY1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGEyVkZiWEIwZVNncE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUWdLejBnTXlsMGFHbHpMbVY0Y0dGdVpFSjVVRzlwYm5Rb1kyNHVabkp2YlVGeWNtRjVLR1VzSUhRcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0ZyWlVWdGNIUjVLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcGRHaHBjeTVsZUhCaGJtUkNlVkJ2YVc1MEtHTnVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2RDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVd0bFJXMXdkSGtvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR1ZiZEYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU5sYm5SbGNrRnVaRk5wZW1Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWTI0dVkyOXdlU2gwS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1OdmNIa29aU2t1YzNWaUtHNHBMQ0IwYUdsekxtMWhlQzVqYjNCNUtHVXBMbUZrWkNodUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxUFltcGxZM1FvWlN3Z2RDQTlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV0ZyWlVWdGNIUjVLQ2tzSUhSb2FYTXVaWGh3WVc1a1FubFBZbXBsWTNRb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbU52Y0hrb1pTNXRhVzRwTENCMGFHbHpMbTFoZUM1amIzQjVLR1V1YldGNEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZGYlhCMGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVlQ0E5SUhSb2FYTXViV2x1TG5rZ1BTQjBhR2x6TG0xcGJpNTZJRDBnTVNBdklEQXNJSFJvYVhNdWJXRjRMbmdnUFNCMGFHbHpMbTFoZUM1NUlEMGdkR2hwY3k1dFlYZ3VlaUE5SUMweElDOGdNQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2x6Ulcxd2RIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXRjRMbmdnUENCMGFHbHpMbTFwYmk1NElIeDhJSFJvYVhNdWJXRjRMbmtnUENCMGFHbHpMbTFwYmk1NUlIeDhJSFJvYVhNdWJXRjRMbm9nUENCMGFHbHpMbTFwYmk1Nk93b2dJQ0FnZlFvZ0lDQWdaMlYwUTJWdWRHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBjMFZ0Y0hSNUtDa2dQeUJsTG5ObGRDZ3dMQ0F3TENBd0tTQTZJR1V1WVdSa1ZtVmpkRzl5Y3loMGFHbHpMbTFwYml3Z2RHaHBjeTV0WVhncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOcGVtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpSVzF3ZEhrb0tTQS9JR1V1YzJWMEtEQXNJREFzSURBcElEb2daUzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXViV0Y0TENCMGFHbHpMbTFwYmlrN0NpQWdJQ0I5Q2lBZ0lDQmxlSEJoYm1SQ2VWQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1VwTENCMGFHbHpMbTFoZUM1dFlYZ29aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVlpsWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbk4xWWlobEtTd2dkR2hwY3k1dFlYZ3VZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1aFpHUlRZMkZzWVhJb0xXVXBMQ0IwYUdsekxtMWhlQzVoWkdSVFkyRnNZWElvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIQmhibVJDZVU5aWFtVmpkQ2hsTENCMElEMGdJVEVwSUhzS0lDQWdJQ0FnSUNCcFppQW9aUzUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTVN3Z0lURXBMQ0JsTG1KdmRXNWthVzVuUW05NElDRTlQU0IyYjJsa0lEQXBJR1V1WW05MWJtUnBibWRDYjNnZ1BUMDlJRzUxYkd3Z0ppWWdaUzVqYjIxd2RYUmxRbTkxYm1ScGJtZENiM2dvS1N3Z1gya3VZMjl3ZVNobExtSnZkVzVrYVc1blFtOTRLU3dnWDJrdVlYQndiSGxOWVhSeWFYZzBLR1V1YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG5WdWFXOXVLRjlwS1RzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnZG05cFpDQXdLU0JwWmlBb2RDQW1KaUJwTG1GMGRISnBZblYwWlhNZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0Z0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnBMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd0xDQnZJRDBnY2k1amIzVnVkRHNnWVNBOElHODdJR0VyS3lsamJpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSElzSUdFcExtRndjR3g1VFdGMGNtbDROQ2hsTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR051S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHa3VZbTkxYm1ScGJtZENiM2dnUFQwOUlHNTFiR3dnSmlZZ2FTNWpiMjF3ZFhSbFFtOTFibVJwYm1kQ2IzZ29LU3dnWDJrdVkyOXdlU2hwTG1KdmRXNWthVzVuUW05NEtTd2dYMmt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMblZ1YVc5dUtGOXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG1Ob2FXeGtjbVZ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQThJSEk3SUdrckt5bDBhR2x6TG1WNGNHRnVaRUo1VDJKcVpXTjBLRzViYVYwc0lIUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFb1pTNTRJRHdnZEdocGN5NXRhVzR1ZUNCOGZDQmxMbmdnUGlCMGFHbHpMbTFoZUM1NElIeDhJR1V1ZVNBOElIUm9hWE11YldsdUxua2dmSHdnWlM1NUlENGdkR2hwY3k1dFlYZ3VlU0I4ZkNCbExub2dQQ0IwYUdsekxtMXBiaTU2SUh4OElHVXVlaUErSUhSb2FYTXViV0Y0TG5vcE93b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1NElEdzlJR1V1YldsdUxuZ2dKaVlnWlM1dFlYZ3VlQ0E4UFNCMGFHbHpMbTFoZUM1NElDWW1JSFJvYVhNdWJXbHVMbmtnUEQwZ1pTNXRhVzR1ZVNBbUppQmxMbTFoZUM1NUlEdzlJSFJvYVhNdWJXRjRMbmtnSmlZZ2RHaHBjeTV0YVc0dWVpQThQU0JsTG0xcGJpNTZJQ1ltSUdVdWJXRjRMbm9nUEQwZ2RHaHBjeTV0WVhndWVqc0tJQ0FnSUgwS0lDQWdJR2RsZEZCaGNtRnRaWFJsY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YzJWMEtDaGxMbmdnTFNCMGFHbHpMbTFwYmk1NEtTQXZJQ2gwYUdsekxtMWhlQzU0SUMwZ2RHaHBjeTV0YVc0dWVDa3NJQ2hsTG5rZ0xTQjBhR2x6TG0xcGJpNTVLU0F2SUNoMGFHbHpMbTFoZUM1NUlDMGdkR2hwY3k1dGFXNHVlU2tzSUNobExub2dMU0IwYUdsekxtMXBiaTU2S1NBdklDaDBhR2x6TG0xaGVDNTZJQzBnZEdocGN5NXRhVzR1ZWlrcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMEp2ZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRW9aUzV0WVhndWVDQThJSFJvYVhNdWJXbHVMbmdnZkh3Z1pTNXRhVzR1ZUNBK0lIUm9hWE11YldGNExuZ2dmSHdnWlM1dFlYZ3VlU0E4SUhSb2FYTXViV2x1TG5rZ2ZId2daUzV0YVc0dWVTQStJSFJvYVhNdWJXRjRMbmtnZkh3Z1pTNXRZWGd1ZWlBOElIUm9hWE11YldsdUxub2dmSHdnWlM1dGFXNHVlaUErSUhSb2FYTXViV0Y0TG5vcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMU53YUdWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyeGhiWEJRYjJsdWRDaGxMbU5sYm5SbGNpd2dZMjRwTENCamJpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaGxMbU5sYm5SbGNpa2dQRDBnWlM1eVlXUnBkWE1nS2lCbExuSmhaR2wxY3pzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITlFiR0Z1WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRc0lHNDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVibTl5YldGc0xuZ2dQaUF3SUQ4Z0tIUWdQU0JsTG01dmNtMWhiQzU0SUNvZ2RHaHBjeTV0YVc0dWVDd2diaUE5SUdVdWJtOXliV0ZzTG5nZ0tpQjBhR2x6TG0xaGVDNTRLU0E2SUNoMElEMGdaUzV1YjNKdFlXd3VlQ0FxSUhSb2FYTXViV0Y0TG5nc0lHNGdQU0JsTG01dmNtMWhiQzU0SUNvZ2RHaHBjeTV0YVc0dWVDa3NJR1V1Ym05eWJXRnNMbmtnUGlBd0lEOGdLSFFnS3owZ1pTNXViM0p0WVd3dWVTQXFJSFJvYVhNdWJXbHVMbmtzSUc0Z0t6MGdaUzV1YjNKdFlXd3VlU0FxSUhSb2FYTXViV0Y0TG5rcElEb2dLSFFnS3owZ1pTNXViM0p0WVd3dWVTQXFJSFJvYVhNdWJXRjRMbmtzSUc0Z0t6MGdaUzV1YjNKdFlXd3VlU0FxSUhSb2FYTXViV2x1TG5rcExDQmxMbTV2Y20xaGJDNTZJRDRnTUNBL0lDaDBJQ3M5SUdVdWJtOXliV0ZzTG5vZ0tpQjBhR2x6TG0xcGJpNTZMQ0J1SUNzOUlHVXVibTl5YldGc0xub2dLaUIwYUdsekxtMWhlQzU2S1NBNklDaDBJQ3M5SUdVdWJtOXliV0ZzTG5vZ0tpQjBhR2x6TG0xaGVDNTZMQ0J1SUNzOUlHVXVibTl5YldGc0xub2dLaUIwYUdsekxtMXBiaTU2S1N3Z2RDQThQU0F0WlM1amIyNXpkR0Z1ZENBbUppQnVJRDQ5SUMxbExtTnZibk4wWVc1ME93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMVJ5YVdGdVoyeGxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cGMwVnRjSFI1S0NrcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFTmxiblJsY2loamN5a3NJRmR6TG5OMVlsWmxZM1J2Y25Nb2RHaHBjeTV0WVhnc0lHTnpLU3dnZUdrdWMzVmlWbVZqZEc5eWN5aGxMbUVzSUdOektTd2dkbWt1YzNWaVZtVmpkRzl5Y3lobExtSXNJR056S1N3Z2VXa3VjM1ZpVm1WamRHOXljeWhsTG1Nc0lHTnpLU3dnVkc0dWMzVmlWbVZqZEc5eWN5aDJhU3dnZUdrcExDQjNiaTV6ZFdKV1pXTjBiM0p6S0hscExDQjJhU2tzSUZkdUxuTjFZbFpsWTNSdmNuTW9lR2tzSUhscEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVlJ1TG5vc0NpQWdJQ0FnSUNBZ0lDQWdJRlJ1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTNiaTU2TEFvZ0lDQWdJQ0FnSUNBZ0lDQjNiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdFYyNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ1YyNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ZHNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFZSdUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUhkdUxub3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzEzYmk1NExBb2dJQ0FnSUNBZ0lDQWdJQ0JYYmk1NkxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRWMjR1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVlJ1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJRlJ1TG5nc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTNiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjNiaTU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdFYyNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1YyNHVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRkdZU2gwTENCNGFTd2dkbWtzSUhscExDQlhjeWtnZkh3Z0tIUWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkTENBaFJtRW9kQ3dnZUdrc0lIWnBMQ0I1YVN3Z1YzTXBLU0EvSUNFeElEb2dLRmh6TG1OeWIzTnpWbVZqZEc5eWN5aFViaXdnZDI0cExDQjBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQlljeTU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQlljeTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQlljeTU2Q2lBZ0lDQWdJQ0FnWFN3Z1JtRW9kQ3dnZUdrc0lIWnBMQ0I1YVN3Z1YzTXBLVHNLSUNBZ0lIMEtJQ0FnSUdOc1lXMXdVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1OdmNIa29aU2t1WTJ4aGJYQW9kR2hwY3k1dGFXNHNJSFJvYVhNdWJXRjRLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5UWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMnhoYlhCUWIybHVkQ2hsTENCamJpa3VaR2x6ZEdGdVkyVlVieWhsS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRUp2ZFc1a2FXNW5VM0JvWlhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwVnRjSFI1S0NrZ1B5QmxMbTFoYTJWRmJYQjBlU2dwSURvZ0tIUm9hWE11WjJWMFEyVnVkR1Z5S0dVdVkyVnVkR1Z5S1N3Z1pTNXlZV1JwZFhNZ1BTQjBhR2x6TG1kbGRGTnBlbVVvWTI0cExteGxibWQwYUNncElDb2dMalVwTENCbE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldGNEtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXbHVLR1V1YldGNEtTd2dkR2hwY3k1cGMwVnRjSFI1S0NrZ0ppWWdkR2hwY3k1dFlXdGxSVzF3ZEhrb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV0Y0S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhORmJYQjBlU2dwSUQ4Z2RHaHBjeUE2SUNodmJsc3dYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsc3hYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsc3lYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsc3pYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsczBYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsczFYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsczJYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCdmJsczNYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpMbk5sZEVaeWIyMVFiMmx1ZEhNb2IyNHBMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1Ga1pDaGxLU3dnZEdocGN5NXRZWGd1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV0YVc0dVpYRjFZV3h6S0hSb2FYTXViV2x1S1NBbUppQmxMbTFoZUM1bGNYVmhiSE1vZEdocGN5NXRZWGdwT3dvZ0lDQWdmUXA5TENCdmJpQTlJRnNLSUNBZ0lHNWxkeUJCTEFvZ0lDQWdibVYzSUVFc0NpQWdJQ0J1WlhjZ1FTd0tJQ0FnSUc1bGR5QkJMQW9nSUNBZ2JtVjNJRUVzQ2lBZ0lDQnVaWGNnUVN3S0lDQWdJRzVsZHlCQkxBb2dJQ0FnYm1WM0lFRUtYU3dnWTI0Z1BTQnVaWGNnUVN3Z1gya2dQU0J1WlhjZ1VYUXNJSGhwSUQwZ2JtVjNJRUVzSUhacElEMGdibVYzSUVFc0lIbHBJRDBnYm1WM0lFRXNJRlJ1SUQwZ2JtVjNJRUVzSUhkdUlEMGdibVYzSUVFc0lGZHVJRDBnYm1WM0lFRXNJR056SUQwZ2JtVjNJRUVzSUZkeklEMGdibVYzSUVFc0lGaHpJRDBnYm1WM0lFRXNJRmh1SUQwZ2JtVjNJRUU3Q21aMWJtTjBhVzl1SUVaaEtITXhMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQmhJRDBnY3pFdWJHVnVaM1JvSUMwZ016c2djaUE4UFNCaE95QnlJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lGaHVMbVp5YjIxQmNuSmhlU2h6TVN3Z2NpazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQnBMbmdnS2lCTllYUm9MbUZpY3loWWJpNTRLU0FySUdrdWVTQXFJRTFoZEdndVlXSnpLRmh1TG5rcElDc2dhUzU2SUNvZ1RXRjBhQzVoWW5Nb1dHNHVlaWtzSUdNZ1BTQmxMbVJ2ZENoWWJpa3NJR3dnUFNCMExtUnZkQ2hZYmlrc0lHZ2dQU0J1TG1SdmRDaFliaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1YldGNEtDMU5ZWFJvTG0xaGVDaGpMQ0JzTENCb0tTd2dUV0YwYUM1dGFXNG9ZeXdnYkN3Z2FDa3BJRDRnYnlrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlDRXdPd3A5Q25aaGNpQnljQ0E5SUc1bGR5QlJkQ3dnYkhNZ1BTQnVaWGNnUVN3Z1FtRWdQU0J1WlhjZ1FTd2dXWFFnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRUVzSUhRZ1BTQXRNU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpaVzUwWlhJZ1BTQmxMQ0IwYUdsekxuSmhaR2wxY3lBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmxiblJsY2k1amIzQjVLR1VwTENCMGFHbHpMbkpoWkdsMWN5QTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMlZ1ZEdWeU93b2dJQ0FnSUNBZ0lIUWdJVDA5SUhadmFXUWdNQ0EvSUc0dVkyOXdlU2gwS1NBNklISndMbk5sZEVaeWIyMVFiMmx1ZEhNb1pTa3VaMlYwUTJWdWRHVnlLRzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0JoSUQwZ1pTNXNaVzVuZEdnN0lISWdQQ0JoT3lCeUt5c3BhU0E5SUUxaGRHZ3ViV0Y0S0drc0lHNHVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aVnR5WFNrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJRTFoZEdndWMzRnlkQ2hwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmxiblJsY2k1amIzQjVLR1V1WTJWdWRHVnlLU3dnZEdocGN5NXlZV1JwZFhNZ1BTQmxMbkpoWkdsMWN5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbHpSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRHdnTURzS0lDQWdJSDBLSUNBZ0lHMWhhMlZGYlhCMGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1YzJWMEtEQXNJREFzSURBcExDQjBhR2x6TG5KaFpHbDFjeUE5SUMweExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb2RHaHBjeTVqWlc1MFpYSXBJRHc5SUhSb2FYTXVjbUZrYVhWeklDb2dkR2hwY3k1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtUnBjM1JoYm1ObFZHOG9kR2hwY3k1alpXNTBaWElwSUMwZ2RHaHBjeTV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjbUZrYVhWeklDc2daUzV5WVdScGRYTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZMlZ1ZEdWeUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tIUm9hWE11WTJWdWRHVnlLU0E4UFNCMElDb2dkRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWhsTG1ScGMzUmhibU5sVkc5UWIybHVkQ2gwYUdsekxtTmxiblJsY2lrcElEdzlJSFJvYVhNdWNtRmthWFZ6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJRYjJsdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5sYm5SbGNpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHVXBMQ0J1SUQ0Z2RHaHBjeTV5WVdScGRYTWdLaUIwYUdsekxuSmhaR2wxY3lBbUppQW9kQzV6ZFdJb2RHaHBjeTVqWlc1MFpYSXBMbTV2Y20xaGJHbDZaU2dwTENCMExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hSb2FYTXVjbUZrYVhWektTNWhaR1FvZEdocGN5NWpaVzUwWlhJcEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFSnZkVzVrYVc1blFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBjMFZ0Y0hSNUtDa2dQeUFvWlM1dFlXdGxSVzF3ZEhrb0tTd2daU2tnT2lBb1pTNXpaWFFvZEdocGN5NWpaVzUwWlhJc0lIUm9hWE11WTJWdWRHVnlLU3dnWlM1bGVIQmhibVJDZVZOallXeGhjaWgwYUdsekxuSmhaR2wxY3lrc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwYUdsekxuSmhaR2wxY3lBOUlIUm9hWE11Y21Ga2FYVnpJQ29nWlM1blpYUk5ZWGhUWTJGc1pVOXVRWGhwY3lncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhWE5GYlhCMGVTZ3BLU0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXlZV1JwZFhNZ1BTQXdMQ0IwYUdsek93b2dJQ0FnSUNBZ0lHeHpMbk4xWWxabFkzUnZjbk1vWlN3Z2RHaHBjeTVqWlc1MFpYSXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdiSE11YkdWdVozUm9VM0VvS1RzS0lDQWdJQ0FnSUNCcFppQW9kQ0ErSUhSb2FYTXVjbUZrYVhWeklDb2dkR2hwY3k1eVlXUnBkWE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQk5ZWFJvTG5OeGNuUW9kQ2tzSUdrZ1BTQW9iaUF0SUhSb2FYTXVjbUZrYVhWektTQXFJQzQxT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1ObGJuUmxjaTVoWkdSVFkyRnNaV1JXWldOMGIzSW9iSE1zSUdrZ0x5QnVLU3dnZEdocGN5NXlZV1JwZFhNZ0t6MGdhVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjFibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVhWE5GYlhCMGVTZ3BJRDhnZEdocGN5QTZJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdLSFJvYVhNdVkyOXdlU2hsS1N3Z2RHaHBjeWtnT2lBb2RHaHBjeTVqWlc1MFpYSXVaWEYxWVd4ektHVXVZMlZ1ZEdWeUtTQTlQVDBnSVRBZ1B5QjBhR2x6TG5KaFpHbDFjeUE5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVjbUZrYVhWekxDQmxMbkpoWkdsMWN5a2dPaUFvUW1FdWMzVmlWbVZqZEc5eWN5aGxMbU5sYm5SbGNpd2dkR2hwY3k1alpXNTBaWElwTG5ObGRFeGxibWQwYUNobExuSmhaR2wxY3lrc0lIUm9hWE11Wlhod1lXNWtRbmxRYjJsdWRDaHNjeTVqYjNCNUtHVXVZMlZ1ZEdWeUtTNWhaR1FvUW1FcEtTd2dkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR3h6TG1OdmNIa29aUzVqWlc1MFpYSXBMbk4xWWloQ1lTa3BLU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ObGJuUmxjaTVsY1hWaGJITW9kR2hwY3k1alpXNTBaWElwSUNZbUlHVXVjbUZrYVhWeklEMDlQU0IwYUdsekxuSmhaR2wxY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUd4dUlEMGdibVYzSUVFc0lIcGhJRDBnYm1WM0lFRXNJSEZ6SUQwZ2JtVjNJRUVzSUVGdUlEMGdibVYzSUVFc0lGWmhJRDBnYm1WM0lFRXNJRmx6SUQwZ2JtVjNJRUVzSUd0aElEMGdibVYzSUVFc0lHaHBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QkJMQ0IwSUQwZ2JtVjNJRUVvTUN3Z01Dd2dMVEVwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTl5YVdkcGJpQTlJR1VzSUhSb2FYTXVaR2x5WldOMGFXOXVJRDBnZERzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjNKcFoybHVMbU52Y0hrb1pTa3NJSFJvYVhNdVpHbHlaV04wYVc5dUxtTnZjSGtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjbWxuYVc0dVkyOXdlU2hsTG05eWFXZHBiaWtzSUhSb2FYTXVaR2x5WldOMGFXOXVMbU52Y0hrb1pTNWthWEpsWTNScGIyNHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbU52Y0hrb2RHaHBjeTV2Y21sbmFXNHBMbUZrWkZOallXeGxaRlpsWTNSdmNpaDBhR2x6TG1ScGNtVmpkR2x2Yml3Z1pTazdDaUFnSUNCOUNpQWdJQ0JzYjI5clFYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjbVZqZEdsdmJpNWpiM0I1S0dVcExuTjFZaWgwYUdsekxtOXlhV2RwYmlrdWJtOXliV0ZzYVhwbEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlaV05oYzNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05eWFXZHBiaTVqYjNCNUtIUm9hWE11WVhRb1pTd2diRzRwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IzTmxjM1JRYjJsdWRGUnZVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhRdWMzVmlWbVZqZEc5eWN5aGxMQ0IwYUdsekxtOXlhV2RwYmlrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdQQ0F3SUQ4Z2RDNWpiM0I1S0hSb2FYTXViM0pwWjJsdUtTQTZJSFF1WTI5d2VTaDBhR2x6TG05eWFXZHBiaWt1WVdSa1UyTmhiR1ZrVm1WamRHOXlLSFJvYVhNdVpHbHlaV04wYVc5dUxDQnVLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5UWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VjM0Z5ZENoMGFHbHpMbVJwYzNSaGJtTmxVM0ZVYjFCdmFXNTBLR1VwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFUzRlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR3h1TG5OMVlsWmxZM1J2Y25Nb1pTd2dkR2hwY3k1dmNtbG5hVzRwTG1SdmRDaDBhR2x6TG1ScGNtVmpkR2x2YmlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ1BDQXdJRDhnZEdocGN5NXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa2dPaUFvYkc0dVkyOXdlU2gwYUdsekxtOXlhV2RwYmlrdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0hSb2FYTXVaR2x5WldOMGFXOXVMQ0IwS1N3Z2JHNHVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVGNWUnZVMlZuYldWdWRDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnZW1FdVkyOXdlU2hsS1M1aFpHUW9kQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MalVwTENCeGN5NWpiM0I1S0hRcExuTjFZaWhsS1M1dWIzSnRZV3hwZW1Vb0tTd2dRVzR1WTI5d2VTaDBhR2x6TG05eWFXZHBiaWt1YzNWaUtIcGhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WkdsemRHRnVZMlZVYnloMEtTQXFJQzQxTENCaElEMGdMWFJvYVhNdVpHbHlaV04wYVc5dUxtUnZkQ2h4Y3lrc0lHOGdQU0JCYmk1a2IzUW9kR2hwY3k1a2FYSmxZM1JwYjI0cExDQmpJRDBnTFVGdUxtUnZkQ2h4Y3lrc0lHd2dQU0JCYmk1c1pXNW5kR2hUY1NncExDQm9JRDBnVFdGMGFDNWhZbk1vTVNBdElHRWdLaUJoS1N3Z2RTd2daQ3dnWml3Z2JUc0tJQ0FnSUNBZ0lDQnBaaUFvYUNBK0lEQXBJR2xtSUNoMUlEMGdZU0FxSUdNZ0xTQnZMQ0JrSUQwZ1lTQXFJRzhnTFNCakxDQnRJRDBnY2lBcUlHZ3NJSFVnUGowZ01Da2dhV1lnS0dRZ1BqMGdMVzBwSUdsbUlDaGtJRHc5SUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0F4SUM4Z2FEc0tJQ0FnSUNBZ0lDQWdJQ0FnZFNBcVBTQmZMQ0JrSUNvOUlGOHNJR1lnUFNCMUlDb2dLSFVnS3lCaElDb2daQ0FySURJZ0tpQnZLU0FySUdRZ0tpQW9ZU0FxSUhVZ0t5QmtJQ3NnTWlBcUlHTXBJQ3NnYkRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWkNBOUlISXNJSFVnUFNCTllYUm9MbTFoZUNnd0xDQXRLR0VnS2lCa0lDc2dieWtwTENCbUlEMGdMWFVnS2lCMUlDc2daQ0FxSUNoa0lDc2dNaUFxSUdNcElDc2diRHNLSUNBZ0lDQWdJQ0JsYkhObElHUWdQU0F0Y2l3Z2RTQTlJRTFoZEdndWJXRjRLREFzSUMwb1lTQXFJR1FnS3lCdktTa3NJR1lnUFNBdGRTQXFJSFVnS3lCa0lDb2dLR1FnS3lBeUlDb2dZeWtnS3lCc093b2dJQ0FnSUNBZ0lHVnNjMlVnWkNBOFBTQXRiU0EvSUNoMUlEMGdUV0YwYUM1dFlYZ29NQ3dnTFNndFlTQXFJSElnS3lCdktTa3NJR1FnUFNCMUlENGdNQ0EvSUMxeUlEb2dUV0YwYUM1dGFXNG9UV0YwYUM1dFlYZ29MWElzSUMxaktTd2djaWtzSUdZZ1BTQXRkU0FxSUhVZ0t5QmtJQ29nS0dRZ0t5QXlJQ29nWXlrZ0t5QnNLU0E2SUdRZ1BEMGdiU0EvSUNoMUlEMGdNQ3dnWkNBOUlFMWhkR2d1YldsdUtFMWhkR2d1YldGNEtDMXlMQ0F0WXlrc0lISXBMQ0JtSUQwZ1pDQXFJQ2hrSUNzZ01pQXFJR01wSUNzZ2JDa2dPaUFvZFNBOUlFMWhkR2d1YldGNEtEQXNJQzBvWVNBcUlISWdLeUJ2S1Nrc0lHUWdQU0IxSUQ0Z01DQS9JSElnT2lCTllYUm9MbTFwYmloTllYUm9MbTFoZUNndGNpd2dMV01wTENCeUtTd2daaUE5SUMxMUlDb2dkU0FySUdRZ0tpQW9aQ0FySURJZ0tpQmpLU0FySUd3cE93b2dJQ0FnSUNBZ0lHVnNjMlVnWkNBOUlHRWdQaUF3SUQ4Z0xYSWdPaUJ5TENCMUlEMGdUV0YwYUM1dFlYZ29NQ3dnTFNoaElDb2daQ0FySUc4cEtTd2daaUE5SUMxMUlDb2dkU0FySUdRZ0tpQW9aQ0FySURJZ0tpQmpLU0FySUd3N0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0ppWWdiaTVqYjNCNUtIUm9hWE11YjNKcFoybHVLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9kR2hwY3k1a2FYSmxZM1JwYjI0c0lIVXBMQ0JwSUNZbUlHa3VZMjl3ZVNoNllTa3VZV1JrVTJOaGJHVmtWbVZqZEc5eUtIRnpMQ0JrS1N3Z1pqc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkRk53YUdWeVpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHNHVjM1ZpVm1WamRHOXljeWhsTG1ObGJuUmxjaXdnZEdocGN5NXZjbWxuYVc0cE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JHNHVaRzkwS0hSb2FYTXVaR2x5WldOMGFXOXVLU3dnYVNBOUlHeHVMbVJ2ZENoc2Jpa2dMU0J1SUNvZ2Jpd2djaUE5SUdVdWNtRmthWFZ6SUNvZ1pTNXlZV1JwZFhNN0NpQWdJQ0FnSUNBZ2FXWWdLR2tnUGlCeUtTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRTFoZEdndWMzRnlkQ2h5SUMwZ2FTa3NJRzhnUFNCdUlDMGdZU3dnWXlBOUlHNGdLeUJoT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqSUR3Z01DQS9JRzUxYkd3Z09pQnZJRHdnTUNBL0lIUm9hWE11WVhRb1l5d2dkQ2tnT2lCMGFHbHpMbUYwS0c4c0lIUXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFOd2FHVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR2x6ZEdGdVkyVlRjVlJ2VUc5cGJuUW9aUzVqWlc1MFpYSXBJRHc5SUdVdWNtRmthWFZ6SUNvZ1pTNXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzV1YjNKdFlXd3VaRzkwS0hSb2FYTXVaR2x5WldOMGFXOXVLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnTUNrZ2NtVjBkWEp1SUdVdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0hSb2FYTXViM0pwWjJsdUtTQTlQVDBnTUNBL0lEQWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ0xTaDBhR2x6TG05eWFXZHBiaTVrYjNRb1pTNXViM0p0WVd3cElDc2daUzVqYjI1emRHRnVkQ2tnTHlCME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlENDlJREFnUHlCdUlEb2diblZzYkRzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRGQnNZVzVsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpHbHpkR0Z1WTJWVWIxQnNZVzVsS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlEMDlQU0J1ZFd4c0lEOGdiblZzYkNBNklIUm9hWE11WVhRb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelVHeGhibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWthWE4wWVc1alpWUnZVRzlwYm5Rb2RHaHBjeTV2Y21sbmFXNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJRDA5UFNBd0lIeDhJR1V1Ym05eWJXRnNMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWtnS2lCMElEd2dNRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEVKdmVDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRzSUdrc0lISXNJR0VzSUc4c0lHTXNJR3dnUFNBeElDOGdkR2hwY3k1a2FYSmxZM1JwYjI0dWVDd2dhQ0E5SURFZ0x5QjBhR2x6TG1ScGNtVmpkR2x2Ymk1NUxDQjFJRDBnTVNBdklIUm9hWE11WkdseVpXTjBhVzl1TG5vc0lHUWdQU0IwYUdsekxtOXlhV2RwYmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkNBK1BTQXdJRDhnS0c0Z1BTQW9aUzV0YVc0dWVDQXRJR1F1ZUNrZ0tpQnNMQ0JwSUQwZ0tHVXViV0Y0TG5nZ0xTQmtMbmdwSUNvZ2JDa2dPaUFvYmlBOUlDaGxMbTFoZUM1NElDMGdaQzU0S1NBcUlHd3NJR2tnUFNBb1pTNXRhVzR1ZUNBdElHUXVlQ2tnS2lCc0tTd2dhQ0ErUFNBd0lEOGdLSElnUFNBb1pTNXRhVzR1ZVNBdElHUXVlU2tnS2lCb0xDQmhJRDBnS0dVdWJXRjRMbmtnTFNCa0xua3BJQ29nYUNrZ09pQW9jaUE5SUNobExtMWhlQzU1SUMwZ1pDNTVLU0FxSUdnc0lHRWdQU0FvWlM1dGFXNHVlU0F0SUdRdWVTa2dLaUJvS1N3Z2JpQStJR0VnZkh3Z2NpQStJR2tnZkh3Z0tDaHlJRDRnYmlCOGZDQnBjMDVoVGlodUtTa2dKaVlnS0c0Z1BTQnlLU3dnS0dFZ1BDQnBJSHg4SUdselRtRk9LR2twS1NBbUppQW9hU0E5SUdFcExDQjFJRDQ5SURBZ1B5QW9ieUE5SUNobExtMXBiaTU2SUMwZ1pDNTZLU0FxSUhVc0lHTWdQU0FvWlM1dFlYZ3VlaUF0SUdRdWVpa2dLaUIxS1NBNklDaHZJRDBnS0dVdWJXRjRMbm9nTFNCa0xub3BJQ29nZFN3Z1l5QTlJQ2hsTG0xcGJpNTZJQzBnWkM1NktTQXFJSFVwTENCdUlENGdZeUI4ZkNCdklENGdhU2tnZkh3Z0tDaHZJRDRnYmlCOGZDQnVJQ0U5UFNCdUtTQW1KaUFvYmlBOUlHOHBMQ0FvWXlBOElHa2dmSHdnYVNBaFBUMGdhU2tnSmlZZ0tHa2dQU0JqS1N3Z2FTQThJREFwSUQ4Z2JuVnNiQ0E2SUhSb2FYTXVZWFFvYmlBK1BTQXdJRDhnYmlBNklHa3NJSFFwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMwSnZlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzUwWlhKelpXTjBRbTk0S0dVc0lHeHVLU0FoUFQwZ2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEZSeWFXRnVaMnhsS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0JXWVM1emRXSldaV04wYjNKektIUXNJR1VwTENCWmN5NXpkV0pXWldOMGIzSnpLRzRzSUdVcExDQnJZUzVqY205emMxWmxZM1J2Y25Nb1ZtRXNJRmx6S1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVaR2x5WldOMGFXOXVMbVJ2ZENocllTa3NJRzg3Q2lBZ0lDQWdJQ0FnYVdZZ0tHRWdQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocEtTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJREU3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoaElEd2dNQ2tnYnlBOUlDMHhMQ0JoSUQwZ0xXRTdDaUFnSUNBZ0lDQWdaV3h6WlNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQkJiaTV6ZFdKV1pXTjBiM0p6S0hSb2FYTXViM0pwWjJsdUxDQmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzhnS2lCMGFHbHpMbVJwY21WamRHbHZiaTVrYjNRb1dYTXVZM0p2YzNOV1pXTjBiM0p6S0VGdUxDQlpjeWtwT3dvZ0lDQWdJQ0FnSUdsbUlDaGpJRHdnTUNrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnZJQ29nZEdocGN5NWthWEpsWTNScGIyNHVaRzkwS0ZaaExtTnliM056S0VGdUtTazdDaUFnSUNBZ0lDQWdhV1lnS0d3Z1BDQXdJSHg4SUdNZ0t5QnNJRDRnWVNrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQXRieUFxSUVGdUxtUnZkQ2hyWVNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdnZ1BDQXdJRDhnYm5Wc2JDQTZJSFJvYVhNdVlYUW9hQ0F2SUdFc0lISXBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmNtbG5hVzR1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwYUdsekxtUnBjbVZqZEdsdmJpNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG05eWFXZHBiaTVsY1hWaGJITW9kR2hwY3k1dmNtbG5hVzRwSUNZbUlHVXVaR2x5WldOMGFXOXVMbVZ4ZFdGc2N5aDBhR2x6TG1ScGNtVmpkR2x2YmlrN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUXA5TENCNlpTQTlJR05zWVhOeklITXhJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXNJRzhzSUdNc0lHd3NJR2dzSUhVc0lHUXNJR1lzSUcwc0lGOHNJR2NwZXdvZ0lDQWdJQ0FnSUhNeExuQnliM1J2ZEhsd1pTNXBjMDFoZEhKcGVEUWdQU0FoTUN3Z2RHaHBjeTVsYkdWdFpXNTBjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNUW9nSUNBZ0lDQWdJRjBzSUdVZ0lUMDlJSFp2YVdRZ01DQW1KaUIwYUdsekxuTmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvTENCMUxDQmtMQ0JtTENCdExDQmZMQ0JuS1RzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvTENCMUxDQmtMQ0JtTENCdExDQmZMQ0JuS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQndXekJkSUQwZ1pTd2djRnMwWFNBOUlIUXNJSEJiT0YwZ1BTQnVMQ0J3V3pFeVhTQTlJR2tzSUhCYk1WMGdQU0J5TENCd1d6VmRJRDBnWVN3Z2NGczVYU0E5SUc4c0lIQmJNVE5kSUQwZ1l5d2djRnN5WFNBOUlHd3NJSEJiTmwwZ1BTQm9MQ0J3V3pFd1hTQTlJSFVzSUhCYk1UUmRJRDBnWkN3Z2NGc3pYU0E5SUdZc0lIQmJOMTBnUFNCdExDQndXekV4WFNBOUlGOHNJSEJiTVRWZElEMGdaeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2xrWlc1MGFYUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXdMQ0F3TENBeExDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2N6RW9LUzVtY205dFFYSnlZWGtvZEdocGN5NWxiR1Z0Wlc1MGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pCZElEMGdibHN3WFN3Z2RGc3hYU0E5SUc1Yk1WMHNJSFJiTWwwZ1BTQnVXekpkTENCMFd6TmRJRDBnYmxzelhTd2dkRnMwWFNBOUlHNWJORjBzSUhSYk5WMGdQU0J1V3pWZExDQjBXelpkSUQwZ2JsczJYU3dnZEZzM1hTQTlJRzViTjEwc0lIUmJPRjBnUFNCdVd6aGRMQ0IwV3psZElEMGdibHM1WFN3Z2RGc3hNRjBnUFNCdVd6RXdYU3dnZEZzeE1WMGdQU0J1V3pFeFhTd2dkRnN4TWwwZ1BTQnVXekV5WFN3Z2RGc3hNMTBnUFNCdVd6RXpYU3dnZEZzeE5GMGdQU0J1V3pFMFhTd2dkRnN4TlYwZ1BTQnVXekUxWFN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIbFFiM05wZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzeE1sMGdQU0J1V3pFeVhTd2dkRnN4TTEwZ1BTQnVXekV6WFN3Z2RGc3hORjBnUFNCdVd6RTBYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU5ZWFJ5YVhnektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLSFJiTUYwc0lIUmJNMTBzSUhSYk5sMHNJREFzSUhSYk1WMHNJSFJiTkYwc0lIUmJOMTBzSURBc0lIUmJNbDBzSUhSYk5WMHNJSFJiT0Ywc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRUpoYzJsektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLSFJvYVhNc0lEQXBMQ0IwTG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b2RHaHBjeXdnTVNrc0lHNHVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWgwYUdsekxDQXlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWQ1lYTnBjeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLR1V1ZUN3Z2RDNTRMQ0J1TG5nc0lEQXNJR1V1ZVN3Z2RDNTVMQ0J1TG5rc0lEQXNJR1V1ZWl3Z2RDNTZMQ0J1TG5vc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRkp2ZEdGMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5SekxDQnBJRDBnTVNBdklFMXBMbk5sZEVaeWIyMU5ZWFJ5YVhoRGIyeDFiVzRvWlN3Z01Da3ViR1Z1WjNSb0tDa3NJSElnUFNBeElDOGdUV2t1YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXhLUzVzWlc1bmRHZ29LU3dnWVNBOUlERWdMeUJOYVM1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJRElwTG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pCZElEMGdibHN3WFNBcUlHa3NJSFJiTVYwZ1BTQnVXekZkSUNvZ2FTd2dkRnN5WFNBOUlHNWJNbDBnS2lCcExDQjBXek5kSUQwZ01Dd2dkRnMwWFNBOUlHNWJORjBnS2lCeUxDQjBXelZkSUQwZ2JsczFYU0FxSUhJc0lIUmJObDBnUFNCdVd6WmRJQ29nY2l3Z2RGczNYU0E5SURBc0lIUmJPRjBnUFNCdVd6aGRJQ29nWVN3Z2RGczVYU0E5SUc1Yk9WMGdLaUJoTENCMFd6RXdYU0E5SUc1Yk1UQmRJQ29nWVN3Z2RGc3hNVjBnUFNBd0xDQjBXekV5WFNBOUlEQXNJSFJiTVROZElEMGdNQ3dnZEZzeE5GMGdQU0F3TENCMFd6RTFYU0E5SURFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVbTkwWVhScGIyNUdjbTl0UlhWc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdWVDd2dhU0E5SUdVdWVTd2djaUE5SUdVdWVpd2dZU0E5SUUxaGRHZ3VZMjl6S0c0cExDQnZJRDBnVFdGMGFDNXphVzRvYmlrc0lHTWdQU0JOWVhSb0xtTnZjeWhwS1N3Z2JDQTlJRTFoZEdndWMybHVLR2twTENCb0lEMGdUV0YwYUM1amIzTW9jaWtzSUhVZ1BTQk5ZWFJvTG5OcGJpaHlLVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXZjbVJsY2lBOVBUMGdJbGhaV2lJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JoSUNvZ2FDd2daaUE5SUdFZ0tpQjFMQ0J0SUQwZ2J5QXFJR2dzSUY4Z1BTQnZJQ29nZFRzS0lDQWdJQ0FnSUNBZ0lDQWdkRnN3WFNBOUlHTWdLaUJvTENCMFd6UmRJRDBnTFdNZ0tpQjFMQ0IwV3poZElEMGdiQ3dnZEZzeFhTQTlJR1lnS3lCdElDb2diQ3dnZEZzMVhTQTlJR1FnTFNCZklDb2diQ3dnZEZzNVhTQTlJQzF2SUNvZ1l5d2dkRnN5WFNBOUlGOGdMU0JrSUNvZ2JDd2dkRnMyWFNBOUlHMGdLeUJtSUNvZ2JDd2dkRnN4TUYwZ1BTQmhJQ29nWXpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHVXViM0prWlhJZ1BUMDlJQ0paV0ZvaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWXlBcUlHZ3NJR1lnUFNCaklDb2dkU3dnYlNBOUlHd2dLaUJvTENCZklEMGdiQ0FxSUhVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwZ1BTQmtJQ3NnWHlBcUlHOHNJSFJiTkYwZ1BTQnRJQ29nYnlBdElHWXNJSFJiT0YwZ1BTQmhJQ29nYkN3Z2RGc3hYU0E5SUdFZ0tpQjFMQ0IwV3pWZElEMGdZU0FxSUdnc0lIUmJPVjBnUFNBdGJ5d2dkRnN5WFNBOUlHWWdLaUJ2SUMwZ2JTd2dkRnMyWFNBOUlGOGdLeUJrSUNvZ2J5d2dkRnN4TUYwZ1BTQmhJQ29nWXpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHVXViM0prWlhJZ1BUMDlJQ0phV0ZraUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWXlBcUlHZ3NJR1lnUFNCaklDb2dkU3dnYlNBOUlHd2dLaUJvTENCZklEMGdiQ0FxSUhVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwZ1BTQmtJQzBnWHlBcUlHOHNJSFJiTkYwZ1BTQXRZU0FxSUhVc0lIUmJPRjBnUFNCdElDc2daaUFxSUc4c0lIUmJNVjBnUFNCbUlDc2diU0FxSUc4c0lIUmJOVjBnUFNCaElDb2dhQ3dnZEZzNVhTQTlJRjhnTFNCa0lDb2dieXdnZEZzeVhTQTlJQzFoSUNvZ2JDd2dkRnMyWFNBOUlHOHNJSFJiTVRCZElEMGdZU0FxSUdNN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGxMbTl5WkdWeUlEMDlQU0FpV2xsWUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdFZ0tpQm9MQ0JtSUQwZ1lTQXFJSFVzSUcwZ1BTQnZJQ29nYUN3Z1h5QTlJRzhnS2lCMU93b2dJQ0FnSUNBZ0lDQWdJQ0IwV3pCZElEMGdZeUFxSUdnc0lIUmJORjBnUFNCdElDb2diQ0F0SUdZc0lIUmJPRjBnUFNCa0lDb2diQ0FySUY4c0lIUmJNVjBnUFNCaklDb2dkU3dnZEZzMVhTQTlJRjhnS2lCc0lDc2daQ3dnZEZzNVhTQTlJR1lnS2lCc0lDMGdiU3dnZEZzeVhTQTlJQzFzTENCMFd6WmRJRDBnYnlBcUlHTXNJSFJiTVRCZElEMGdZU0FxSUdNN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGxMbTl5WkdWeUlEMDlQU0FpV1ZwWUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdFZ0tpQmpMQ0JtSUQwZ1lTQXFJR3dzSUcwZ1BTQnZJQ29nWXl3Z1h5QTlJRzhnS2lCc093b2dJQ0FnSUNBZ0lDQWdJQ0IwV3pCZElEMGdZeUFxSUdnc0lIUmJORjBnUFNCZklDMGdaQ0FxSUhVc0lIUmJPRjBnUFNCdElDb2dkU0FySUdZc0lIUmJNVjBnUFNCMUxDQjBXelZkSUQwZ1lTQXFJR2dzSUhSYk9WMGdQU0F0YnlBcUlHZ3NJSFJiTWwwZ1BTQXRiQ0FxSUdnc0lIUmJObDBnUFNCbUlDb2dkU0FySUcwc0lIUmJNVEJkSUQwZ1pDQXRJRjhnS2lCMU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzV2Y21SbGNpQTlQVDBnSWxoYVdTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCaElDb2dZeXdnWmlBOUlHRWdLaUJzTENCdElEMGdieUFxSUdNc0lGOGdQU0J2SUNvZ2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZzd1hTQTlJR01nS2lCb0xDQjBXelJkSUQwZ0xYVXNJSFJiT0YwZ1BTQnNJQ29nYUN3Z2RGc3hYU0E5SUdRZ0tpQjFJQ3NnWHl3Z2RGczFYU0E5SUdFZ0tpQm9MQ0IwV3psZElEMGdaaUFxSUhVZ0xTQnRMQ0IwV3pKZElEMGdiU0FxSUhVZ0xTQm1MQ0IwV3paZElEMGdieUFxSUdnc0lIUmJNVEJkSUQwZ1h5QXFJSFVnS3lCa093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3pYU0E5SURBc0lIUmJOMTBnUFNBd0xDQjBXekV4WFNBOUlEQXNJSFJiTVRKZElEMGdNQ3dnZEZzeE0xMGdQU0F3TENCMFd6RTBYU0E5SURBc0lIUmJNVFZkSUQwZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZTYjNSaGRHbHZia1p5YjIxUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIyMXdiM05sS0dGd0xDQmxMQ0J2Y0NrN0NpQWdJQ0I5Q2lBZ0lDQnNiMjlyUVhRb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlblF1YzNWaVZtVmpkRzl5Y3lobExDQjBLU3dnZW5RdWJHVnVaM1JvVTNFb0tTQTlQVDBnTUNBbUppQW9lblF1ZWlBOUlERXBMQ0I2ZEM1dWIzSnRZV3hwZW1Vb0tTd2dVbTR1WTNKdmMzTldaV04wYjNKektHNHNJSHAwS1N3Z1VtNHViR1Z1WjNSb1UzRW9LU0E5UFQwZ01DQW1KaUFvVFdGMGFDNWhZbk1vYmk1NktTQTlQVDBnTVNBL0lIcDBMbmdnS3owZ01XVXROQ0E2SUhwMExub2dLejBnTVdVdE5Dd2dlblF1Ym05eWJXRnNhWHBsS0Nrc0lGSnVMbU55YjNOelZtVmpkRzl5Y3lodUxDQjZkQ2twTENCU2JpNXViM0p0WVd4cGVtVW9LU3dnV25NdVkzSnZjM05XWldOMGIzSnpLSHAwTENCU2Jpa3NJR2xiTUYwZ1BTQlNiaTU0TENCcFd6UmRJRDBnV25NdWVDd2dhVnM0WFNBOUlIcDBMbmdzSUdsYk1WMGdQU0JTYmk1NUxDQnBXelZkSUQwZ1duTXVlU3dnYVZzNVhTQTlJSHAwTG5rc0lHbGJNbDBnUFNCU2JpNTZMQ0JwV3paZElEMGdXbk11ZWl3Z2FWc3hNRjBnUFNCNmRDNTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVUV0YwY21salpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN5d2dhU0E5SUhRdVpXeGxiV1Z1ZEhNc0lISWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQmhJRDBnYmxzd1hTd2dieUE5SUc1Yk5GMHNJR01nUFNCdVd6aGRMQ0JzSUQwZ2Jsc3hNbDBzSUdnZ1BTQnVXekZkTENCMUlEMGdibHMxWFN3Z1pDQTlJRzViT1Ywc0lHWWdQU0J1V3pFelhTd2diU0E5SUc1Yk1sMHNJRjhnUFNCdVd6WmRMQ0JuSUQwZ2Jsc3hNRjBzSUhBZ1BTQnVXekUwWFN3Z2RpQTlJRzViTTEwc0lIZ2dQU0J1V3pkZExDQjVJRDBnYmxzeE1WMHNJR0lnUFNCdVd6RTFYU3dnZHlBOUlHbGJNRjBzSUZJZ1BTQnBXelJkTENCSklEMGdhVnM0WFN3Z1RTQTlJR2xiTVRKZExDQlVJRDBnYVZzeFhTd2dUeUE5SUdsYk5WMHNJRmtnUFNCcFd6bGRMQ0FrSUQwZ2FWc3hNMTBzSUZVZ1BTQnBXekpkTENCNklEMGdhVnMyWFN3Z2NTQTlJR2xiTVRCZExDQklJRDBnYVZzeE5GMHNJRzVsSUQwZ2FWc3pYU3dnVnlBOUlHbGJOMTBzSUVzZ1BTQnBXekV4WFN3Z1JDQTlJR2xiTVRWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeVd6QmRJRDBnWVNBcUlIY2dLeUJ2SUNvZ1ZDQXJJR01nS2lCVklDc2diQ0FxSUc1bExDQnlXelJkSUQwZ1lTQXFJRklnS3lCdklDb2dUeUFySUdNZ0tpQjZJQ3NnYkNBcUlGY3NJSEpiT0YwZ1BTQmhJQ29nU1NBcklHOGdLaUJaSUNzZ1l5QXFJSEVnS3lCc0lDb2dTeXdnY2xzeE1sMGdQU0JoSUNvZ1RTQXJJRzhnS2lBa0lDc2dZeUFxSUVnZ0t5QnNJQ29nUkN3Z2Nsc3hYU0E5SUdnZ0tpQjNJQ3NnZFNBcUlGUWdLeUJrSUNvZ1ZTQXJJR1lnS2lCdVpTd2djbHMxWFNBOUlHZ2dLaUJTSUNzZ2RTQXFJRThnS3lCa0lDb2dlaUFySUdZZ0tpQlhMQ0J5V3psZElEMGdhQ0FxSUVrZ0t5QjFJQ29nV1NBcklHUWdLaUJ4SUNzZ1ppQXFJRXNzSUhKYk1UTmRJRDBnYUNBcUlFMGdLeUIxSUNvZ0pDQXJJR1FnS2lCSUlDc2daaUFxSUVRc0lISmJNbDBnUFNCdElDb2dkeUFySUY4Z0tpQlVJQ3NnWnlBcUlGVWdLeUJ3SUNvZ2JtVXNJSEpiTmwwZ1BTQnRJQ29nVWlBcklGOGdLaUJQSUNzZ1p5QXFJSG9nS3lCd0lDb2dWeXdnY2xzeE1GMGdQU0J0SUNvZ1NTQXJJRjhnS2lCWklDc2daeUFxSUhFZ0t5QndJQ29nU3l3Z2Nsc3hORjBnUFNCdElDb2dUU0FySUY4Z0tpQWtJQ3NnWnlBcUlFZ2dLeUJ3SUNvZ1JDd2djbHN6WFNBOUlIWWdLaUIzSUNzZ2VDQXFJRlFnS3lCNUlDb2dWU0FySUdJZ0tpQnVaU3dnY2xzM1hTQTlJSFlnS2lCU0lDc2dlQ0FxSUU4Z0t5QjVJQ29nZWlBcklHSWdLaUJYTENCeVd6RXhYU0E5SUhZZ0tpQkpJQ3NnZUNBcUlGa2dLeUI1SUNvZ2NTQXJJR0lnS2lCTExDQnlXekUxWFNBOUlIWWdLaUJOSUNzZ2VDQXFJQ1FnS3lCNUlDb2dTQ0FySUdJZ0tpQkVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzd1hTQXFQU0JsTENCMFd6UmRJQ285SUdVc0lIUmJPRjBnS2owZ1pTd2dkRnN4TWwwZ0tqMGdaU3dnZEZzeFhTQXFQU0JsTENCMFd6VmRJQ285SUdVc0lIUmJPVjBnS2owZ1pTd2dkRnN4TTEwZ0tqMGdaU3dnZEZzeVhTQXFQU0JsTENCMFd6WmRJQ285SUdVc0lIUmJNVEJkSUNvOUlHVXNJSFJiTVRSZElDbzlJR1VzSUhSYk0xMGdLajBnWlN3Z2RGczNYU0FxUFNCbExDQjBXekV4WFNBcVBTQmxMQ0IwV3pFMVhTQXFQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdWMFpYSnRhVzVoYm5Rb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCMElEMGdaVnN3WFN3Z2JpQTlJR1ZiTkYwc0lHa2dQU0JsV3poZExDQnlJRDBnWlZzeE1sMHNJR0VnUFNCbFd6RmRMQ0J2SUQwZ1pWczFYU3dnWXlBOUlHVmJPVjBzSUd3Z1BTQmxXekV6WFN3Z2FDQTlJR1ZiTWwwc0lIVWdQU0JsV3paZExDQmtJRDBnWlZzeE1GMHNJR1lnUFNCbFd6RTBYU3dnYlNBOUlHVmJNMTBzSUY4Z1BTQmxXemRkTENCbklEMGdaVnN4TVYwc0lIQWdQU0JsV3pFMVhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JTQXFJQ2dyY2lBcUlHTWdLaUIxSUMwZ2FTQXFJR3dnS2lCMUlDMGdjaUFxSUc4Z0tpQmtJQ3NnYmlBcUlHd2dLaUJrSUNzZ2FTQXFJRzhnS2lCbUlDMGdiaUFxSUdNZ0tpQm1LU0FySUY4Z0tpQW9LM1FnS2lCaklDb2daaUF0SUhRZ0tpQnNJQ29nWkNBcklISWdLaUJoSUNvZ1pDQXRJR2tnS2lCaElDb2daaUFySUdrZ0tpQnNJQ29nYUNBdElISWdLaUJqSUNvZ2FDa2dLeUJuSUNvZ0tDdDBJQ29nYkNBcUlIVWdMU0IwSUNvZ2J5QXFJR1lnTFNCeUlDb2dZU0FxSUhVZ0t5QnVJQ29nWVNBcUlHWWdLeUJ5SUNvZ2J5QXFJR2dnTFNCdUlDb2diQ0FxSUdncElDc2djQ0FxSUNndGFTQXFJRzhnS2lCb0lDMGdkQ0FxSUdNZ0tpQjFJQ3NnZENBcUlHOGdLaUJrSUNzZ2FTQXFJR0VnS2lCMUlDMGdiaUFxSUdFZ0tpQmtJQ3NnYmlBcUlHTWdLaUJvS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lIUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdQU0JsV3pGZExDQmxXekZkSUQwZ1pWczBYU3dnWlZzMFhTQTlJSFFzSUhRZ1BTQmxXekpkTENCbFd6SmRJRDBnWlZzNFhTd2daVnM0WFNBOUlIUXNJSFFnUFNCbFd6WmRMQ0JsV3paZElEMGdaVnM1WFN3Z1pWczVYU0E5SUhRc0lIUWdQU0JsV3pOZExDQmxXek5kSUQwZ1pWc3hNbDBzSUdWYk1USmRJRDBnZEN3Z2RDQTlJR1ZiTjEwc0lHVmJOMTBnUFNCbFd6RXpYU3dnWlZzeE0xMGdQU0IwTENCMElEMGdaVnN4TVYwc0lHVmJNVEZkSUQwZ1pWc3hORjBzSUdWYk1UUmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGQnZjMmwwYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YVhOV1pXTjBiM0l6SUQ4Z0tHbGJNVEpkSUQwZ1pTNTRMQ0JwV3pFelhTQTlJR1V1ZVN3Z2FWc3hORjBnUFNCbExub3BJRG9nS0dsYk1USmRJRDBnWlN3Z2FWc3hNMTBnUFNCMExDQnBXekUwWFNBOUlHNHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhVzUyWlhKMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJR0VnUFNCbFd6UmRMQ0J2SUQwZ1pWczFYU3dnWXlBOUlHVmJObDBzSUd3Z1BTQmxXemRkTENCb0lEMGdaVnM0WFN3Z2RTQTlJR1ZiT1Ywc0lHUWdQU0JsV3pFd1hTd2daaUE5SUdWYk1URmRMQ0J0SUQwZ1pWc3hNbDBzSUY4Z1BTQmxXekV6WFN3Z1p5QTlJR1ZiTVRSZExDQndJRDBnWlZzeE5WMHNJSFlnUFNCMUlDb2daeUFxSUd3Z0xTQmZJQ29nWkNBcUlHd2dLeUJmSUNvZ1l5QXFJR1lnTFNCdklDb2daeUFxSUdZZ0xTQjFJQ29nWXlBcUlIQWdLeUJ2SUNvZ1pDQXFJSEFzSUhnZ1BTQnRJQ29nWkNBcUlHd2dMU0JvSUNvZ1p5QXFJR3dnTFNCdElDb2dZeUFxSUdZZ0t5QmhJQ29nWnlBcUlHWWdLeUJvSUNvZ1l5QXFJSEFnTFNCaElDb2daQ0FxSUhBc0lIa2dQU0JvSUNvZ1h5QXFJR3dnTFNCdElDb2dkU0FxSUd3Z0t5QnRJQ29nYnlBcUlHWWdMU0JoSUNvZ1h5QXFJR1lnTFNCb0lDb2dieUFxSUhBZ0t5QmhJQ29nZFNBcUlIQXNJR0lnUFNCdElDb2dkU0FxSUdNZ0xTQm9JQ29nWHlBcUlHTWdMU0J0SUNvZ2J5QXFJR1FnS3lCaElDb2dYeUFxSUdRZ0t5Qm9JQ29nYnlBcUlHY2dMU0JoSUNvZ2RTQXFJR2NzSUhjZ1BTQjBJQ29nZGlBcklHNGdLaUI0SUNzZ2FTQXFJSGtnS3lCeUlDb2dZanNLSUNBZ0lDQWdJQ0JwWmlBb2R5QTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0JTSUQwZ01TQXZJSGM3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiTUYwZ1BTQjJJQ29nVWl3Z1pWc3hYU0E5SUNoZklDb2daQ0FxSUhJZ0xTQjFJQ29nWnlBcUlISWdMU0JmSUNvZ2FTQXFJR1lnS3lCdUlDb2daeUFxSUdZZ0t5QjFJQ29nYVNBcUlIQWdMU0J1SUNvZ1pDQXFJSEFwSUNvZ1Vpd2daVnN5WFNBOUlDaHZJQ29nWnlBcUlISWdMU0JmSUNvZ1l5QXFJSElnS3lCZklDb2dhU0FxSUd3Z0xTQnVJQ29nWnlBcUlHd2dMU0J2SUNvZ2FTQXFJSEFnS3lCdUlDb2dZeUFxSUhBcElDb2dVaXdnWlZzelhTQTlJQ2gxSUNvZ1l5QXFJSElnTFNCdklDb2daQ0FxSUhJZ0xTQjFJQ29nYVNBcUlHd2dLeUJ1SUNvZ1pDQXFJR3dnS3lCdklDb2dhU0FxSUdZZ0xTQnVJQ29nWXlBcUlHWXBJQ29nVWl3Z1pWczBYU0E5SUhnZ0tpQlNMQ0JsV3pWZElEMGdLR2dnS2lCbklDb2djaUF0SUcwZ0tpQmtJQ29nY2lBcklHMGdLaUJwSUNvZ1ppQXRJSFFnS2lCbklDb2daaUF0SUdnZ0tpQnBJQ29nY0NBcklIUWdLaUJrSUNvZ2NDa2dLaUJTTENCbFd6WmRJRDBnS0cwZ0tpQmpJQ29nY2lBdElHRWdLaUJuSUNvZ2NpQXRJRzBnS2lCcElDb2diQ0FySUhRZ0tpQm5JQ29nYkNBcklHRWdLaUJwSUNvZ2NDQXRJSFFnS2lCaklDb2djQ2tnS2lCU0xDQmxXemRkSUQwZ0tHRWdLaUJrSUNvZ2NpQXRJR2dnS2lCaklDb2djaUFySUdnZ0tpQnBJQ29nYkNBdElIUWdLaUJrSUNvZ2JDQXRJR0VnS2lCcElDb2daaUFySUhRZ0tpQmpJQ29nWmlrZ0tpQlNMQ0JsV3poZElEMGdlU0FxSUZJc0lHVmJPVjBnUFNBb2JTQXFJSFVnS2lCeUlDMGdhQ0FxSUY4Z0tpQnlJQzBnYlNBcUlHNGdLaUJtSUNzZ2RDQXFJRjhnS2lCbUlDc2dhQ0FxSUc0Z0tpQndJQzBnZENBcUlIVWdLaUJ3S1NBcUlGSXNJR1ZiTVRCZElEMGdLR0VnS2lCZklDb2djaUF0SUcwZ0tpQnZJQ29nY2lBcklHMGdLaUJ1SUNvZ2JDQXRJSFFnS2lCZklDb2diQ0F0SUdFZ0tpQnVJQ29nY0NBcklIUWdLaUJ2SUNvZ2NDa2dLaUJTTENCbFd6RXhYU0E5SUNob0lDb2dieUFxSUhJZ0xTQmhJQ29nZFNBcUlISWdMU0JvSUNvZ2JpQXFJR3dnS3lCMElDb2dkU0FxSUd3Z0t5QmhJQ29nYmlBcUlHWWdMU0IwSUNvZ2J5QXFJR1lwSUNvZ1Vpd2daVnN4TWwwZ1BTQmlJQ29nVWl3Z1pWc3hNMTBnUFNBb2FDQXFJRjhnS2lCcElDMGdiU0FxSUhVZ0tpQnBJQ3NnYlNBcUlHNGdLaUJrSUMwZ2RDQXFJRjhnS2lCa0lDMGdhQ0FxSUc0Z0tpQm5JQ3NnZENBcUlIVWdLaUJuS1NBcUlGSXNJR1ZiTVRSZElEMGdLRzBnS2lCdklDb2dhU0F0SUdFZ0tpQmZJQ29nYVNBdElHMGdLaUJ1SUNvZ1l5QXJJSFFnS2lCZklDb2dZeUFySUdFZ0tpQnVJQ29nWnlBdElIUWdLaUJ2SUNvZ1p5a2dLaUJTTENCbFd6RTFYU0E5SUNoaElDb2dkU0FxSUdrZ0xTQm9JQ29nYnlBcUlHa2dLeUJvSUNvZ2JpQXFJR01nTFNCMElDb2dkU0FxSUdNZ0xTQmhJQ29nYmlBcUlHUWdLeUIwSUNvZ2J5QXFJR1FwSUNvZ1Vpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbmdzSUdrZ1BTQmxMbmtzSUhJZ1BTQmxMbm83Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ0tqMGdiaXdnZEZzMFhTQXFQU0JwTENCMFd6aGRJQ285SUhJc0lIUmJNVjBnS2owZ2Jpd2dkRnMxWFNBcVBTQnBMQ0IwV3psZElDbzlJSElzSUhSYk1sMGdLajBnYml3Z2RGczJYU0FxUFNCcExDQjBXekV3WFNBcVBTQnlMQ0IwV3pOZElDbzlJRzRzSUhSYk4xMGdLajBnYVN3Z2RGc3hNVjBnS2owZ2Npd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZUZOallXeGxUMjVCZUdsektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwZ0tpQmxXekJkSUNzZ1pWc3hYU0FxSUdWYk1WMGdLeUJsV3pKZElDb2daVnN5WFN3Z2JpQTlJR1ZiTkYwZ0tpQmxXelJkSUNzZ1pWczFYU0FxSUdWYk5WMGdLeUJsV3paZElDb2daVnMyWFN3Z2FTQTlJR1ZiT0YwZ0tpQmxXemhkSUNzZ1pWczVYU0FxSUdWYk9WMGdLeUJsV3pFd1hTQXFJR1ZiTVRCZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb1RXRjBhQzV0WVhnb2RDd2diaXdnYVNrcE93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlZSeVlXNXpiR0YwYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXBjMVpsWTNSdmNqTWdQeUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0JsTG5nc0lEQXNJREVzSURBc0lHVXVlU3dnTUN3Z01Dd2dNU3dnWlM1NkxDQXdMQ0F3TENBd0xDQXhLU0E2SUhSb2FYTXVjMlYwS0RFc0lEQXNJREFzSUdVc0lEQXNJREVzSURBc0lIUXNJREFzSURBc0lERXNJRzRzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVkp2ZEdGMGFXOXVXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTllYUm9MbU52Y3lobEtTd2diaUE5SUUxaGRHZ3VjMmx1S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQXdMQ0F3TENBd0xDQXdMQ0IwTENBdGJpd2dNQ3dnTUN3Z2Jpd2dkQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVaS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1WTI5ektHVXBMQ0J1SUQwZ1RXRjBhQzV6YVc0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtIUXNJREFzSUc0c0lEQXNJREFzSURFc0lEQXNJREFzSUMxdUxDQXdMQ0IwTENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWU2IzUmhkR2x2Ymxvb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdUV0YwYUM1amIzTW9aU2tzSUc0Z1BTQk5ZWFJvTG5OcGJpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kQ3dnTFc0c0lEQXNJREFzSUc0c0lIUXNJREFzSURBc0lEQXNJREFzSURFc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWSnZkR0YwYVc5dVFYaHBjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQk5ZWFJvTG1OdmN5aDBLU3dnYVNBOUlFMWhkR2d1YzJsdUtIUXBMQ0J5SUQwZ01TQXRJRzRzSUdFZ1BTQmxMbmdzSUc4Z1BTQmxMbmtzSUdNZ1BTQmxMbm9zSUd3Z1BTQnlJQ29nWVN3Z2FDQTlJSElnS2lCdk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENoc0lDb2dZU0FySUc0c0lHd2dLaUJ2SUMwZ2FTQXFJR01zSUd3Z0tpQmpJQ3NnYVNBcUlHOHNJREFzSUd3Z0tpQnZJQ3NnYVNBcUlHTXNJR2dnS2lCdklDc2diaXdnYUNBcUlHTWdMU0JwSUNvZ1lTd2dNQ3dnYkNBcUlHTWdMU0JwSUNvZ2J5d2dhQ0FxSUdNZ0t5QnBJQ29nWVN3Z2NpQXFJR01nS2lCaklDc2diaXdnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVTJOaGJHVW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDaGxMQ0F3TENBd0xDQXdMQ0F3TENCMExDQXdMQ0F3TENBd0xDQXdMQ0J1TENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWVGFHVmhjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLREVzSUc0c0lISXNJREFzSUdVc0lERXNJR0VzSURBc0lIUXNJR2tzSURFc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNHOXpaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxtVnNaVzFsYm5SekxDQnlJRDBnZEM1ZmVDd2dZU0E5SUhRdVgza3NJRzhnUFNCMExsOTZMQ0JqSUQwZ2RDNWZkeXdnYkNBOUlISWdLeUJ5TENCb0lEMGdZU0FySUdFc0lIVWdQU0J2SUNzZ2J5d2daQ0E5SUhJZ0tpQnNMQ0JtSUQwZ2NpQXFJR2dzSUcwZ1BTQnlJQ29nZFN3Z1h5QTlJR0VnS2lCb0xDQm5JRDBnWVNBcUlIVXNJSEFnUFNCdklDb2dkU3dnZGlBOUlHTWdLaUJzTENCNElEMGdZeUFxSUdnc0lIa2dQU0JqSUNvZ2RTd2dZaUE5SUc0dWVDd2dkeUE5SUc0dWVTd2dVaUE5SUc0dWVqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FWc3dYU0E5SUNneElDMGdLRjhnS3lCd0tTa2dLaUJpTENCcFd6RmRJRDBnS0dZZ0t5QjVLU0FxSUdJc0lHbGJNbDBnUFNBb2JTQXRJSGdwSUNvZ1lpd2dhVnN6WFNBOUlEQXNJR2xiTkYwZ1BTQW9aaUF0SUhrcElDb2dkeXdnYVZzMVhTQTlJQ2d4SUMwZ0tHUWdLeUJ3S1NrZ0tpQjNMQ0JwV3paZElEMGdLR2NnS3lCMktTQXFJSGNzSUdsYk4xMGdQU0F3TENCcFd6aGRJRDBnS0cwZ0t5QjRLU0FxSUZJc0lHbGJPVjBnUFNBb1p5QXRJSFlwSUNvZ1Vpd2dhVnN4TUYwZ1BTQW9NU0F0SUNoa0lDc2dYeWtwSUNvZ1Vpd2dhVnN4TVYwZ1BTQXdMQ0JwV3pFeVhTQTlJR1V1ZUN3Z2FWc3hNMTBnUFNCbExua3NJR2xiTVRSZElEMGdaUzU2TENCcFd6RTFYU0E5SURFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa1pXTnZiWEJ2YzJVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnY2lBOUlFMXBMbk5sZENocFd6QmRMQ0JwV3pGZExDQnBXekpkS1M1c1pXNW5kR2dvS1N3Z1lTQTlJRTFwTG5ObGRDaHBXelJkTENCcFd6VmRMQ0JwV3paZEtTNXNaVzVuZEdnb0tTd2dieUE5SUUxcExuTmxkQ2hwV3poZExDQnBXemxkTENCcFd6RXdYU2t1YkdWdVozUm9LQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWtaWFJsY20xcGJtRnVkQ2dwSUR3Z01DQW1KaUFvY2lBOUlDMXlLU3dnWlM1NElEMGdhVnN4TWwwc0lHVXVlU0E5SUdsYk1UTmRMQ0JsTG5vZ1BTQnBXekUwWFN3Z0pIUXVZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJREVnTHlCeUxDQm9JRDBnTVNBdklHRXNJSFVnUFNBeElDOGdienNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdKSFF1Wld4bGJXVnVkSE5iTUYwZ0tqMGdiQ3dnSkhRdVpXeGxiV1Z1ZEhOYk1WMGdLajBnYkN3Z0pIUXVaV3hsYldWdWRITmJNbDBnS2owZ2JDd2dKSFF1Wld4bGJXVnVkSE5iTkYwZ0tqMGdhQ3dnSkhRdVpXeGxiV1Z1ZEhOYk5WMGdLajBnYUN3Z0pIUXVaV3hsYldWdWRITmJObDBnS2owZ2FDd2dKSFF1Wld4bGJXVnVkSE5iT0YwZ0tqMGdkU3dnSkhRdVpXeGxiV1Z1ZEhOYk9WMGdLajBnZFN3Z0pIUXVaV3hsYldWdWRITmJNVEJkSUNvOUlIVXNJSFF1YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtDUjBLU3dnYmk1NElEMGdjaXdnYmk1NUlEMGdZU3dnYmk1NklEMGdieXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWUVpYSnpjR1ZqZEdsMlpTaGxMQ0IwTENCdUxDQnBMQ0J5TENCaExDQnZJRDBnZG00cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUd3Z1BTQXlJQ29nY2lBdklDaDBJQzBnWlNrc0lHZ2dQU0F5SUNvZ2NpQXZJQ2h1SUMwZ2FTa3NJSFVnUFNBb2RDQXJJR1VwSUM4Z0tIUWdMU0JsS1N3Z1pDQTlJQ2h1SUNzZ2FTa2dMeUFvYmlBdElHa3BMQ0JtTENCdE93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUQwOVBTQjJiaWtnWmlBOUlDMG9ZU0FySUhJcElDOGdLR0VnTFNCeUtTd2diU0E5SUMweUlDb2dZU0FxSUhJZ0x5QW9ZU0F0SUhJcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHOGdQVDA5SUVkeUtTQm1JRDBnTFdFZ0x5QW9ZU0F0SUhJcExDQnRJRDBnTFdFZ0tpQnlJQzhnS0dFZ0xTQnlLVHNLSUNBZ0lDQWdJQ0JsYkhObElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDROQzV0WVd0bFVHVnljM0JsWTNScGRtVW9LVG9nU1c1MllXeHBaQ0JqYjI5eVpHbHVZWFJsSUhONWMzUmxiVG9nSWlBcklHOHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpXekJkSUQwZ2JDd2dZMXMwWFNBOUlEQXNJR05iT0YwZ1BTQjFMQ0JqV3pFeVhTQTlJREFzSUdOYk1WMGdQU0F3TENCald6VmRJRDBnYUN3Z1kxczVYU0E5SUdRc0lHTmJNVE5kSUQwZ01Dd2dZMXN5WFNBOUlEQXNJR05iTmwwZ1BTQXdMQ0JqV3pFd1hTQTlJR1lzSUdOYk1UUmRJRDBnYlN3Z1kxc3pYU0E5SURBc0lHTmJOMTBnUFNBd0xDQmpXekV4WFNBOUlDMHhMQ0JqV3pFMVhTQTlJREFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFQzSjBhRzluY21Gd2FHbGpLR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXNJRzhnUFNCMmJpa2dld29nSUNBZ0lDQWdJR3hsZENCaklEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JDQTlJREVnTHlBb2RDQXRJR1VwTENCb0lEMGdNU0F2SUNodUlDMGdhU2tzSUhVZ1BTQXhJQzhnS0dFZ0xTQnlLU3dnWkNBOUlDaDBJQ3NnWlNrZ0tpQnNMQ0JtSUQwZ0tHNGdLeUJwS1NBcUlHZ3NJRzBzSUY4N0NpQWdJQ0FnSUNBZ2FXWWdLRzhnUFQwOUlIWnVLU0J0SUQwZ0tHRWdLeUJ5S1NBcUlIVXNJRjhnUFNBdE1pQXFJSFU3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvYnlBOVBUMGdSM0lwSUcwZ1BTQnlJQ29nZFN3Z1h5QTlJQzB4SUNvZ2RUc0tJQ0FnSUNBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5DNXRZV3RsVDNKMGFHOW5jbUZ3YUdsaktDazZJRWx1ZG1Gc2FXUWdZMjl2Y21ScGJtRjBaU0J6ZVhOMFpXMDZJQ0lnS3lCdktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1kxc3dYU0E5SURJZ0tpQnNMQ0JqV3pSZElEMGdNQ3dnWTFzNFhTQTlJREFzSUdOYk1USmRJRDBnTFdRc0lHTmJNVjBnUFNBd0xDQmpXelZkSUQwZ01pQXFJR2dzSUdOYk9WMGdQU0F3TENCald6RXpYU0E5SUMxbUxDQmpXekpkSUQwZ01Dd2dZMXMyWFNBOUlEQXNJR05iTVRCZElEMGdYeXdnWTFzeE5GMGdQU0F0YlN3Z1kxc3pYU0E5SURBc0lHTmJOMTBnUFNBd0xDQmpXekV4WFNBOUlEQXNJR05iTVRWZElEMGdNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z01UWTdJR2tyS3lscFppQW9kRnRwWFNBaFBUMGdibHRwWFNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR1p5YjIxQmNuSmhlU2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENBeE5qc2diaXNyS1hSb2FYTXVaV3hsYldWdWRITmJibDBnUFNCbFcyNGdLeUIwWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2UVhKeVlYa29aU0E5SUZ0ZExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlHNWJNRjBzSUdWYmRDQXJJREZkSUQwZ2Jsc3hYU3dnWlZ0MElDc2dNbDBnUFNCdVd6SmRMQ0JsVzNRZ0t5QXpYU0E5SUc1Yk0xMHNJR1ZiZENBcklEUmRJRDBnYmxzMFhTd2daVnQwSUNzZ05WMGdQU0J1V3pWZExDQmxXM1FnS3lBMlhTQTlJRzViTmwwc0lHVmJkQ0FySURkZElEMGdibHMzWFN3Z1pWdDBJQ3NnT0YwZ1BTQnVXemhkTENCbFczUWdLeUE1WFNBOUlHNWJPVjBzSUdWYmRDQXJJREV3WFNBOUlHNWJNVEJkTENCbFczUWdLeUF4TVYwZ1BTQnVXekV4WFN3Z1pWdDBJQ3NnTVRKZElEMGdibHN4TWwwc0lHVmJkQ0FySURFelhTQTlJRzViTVROZExDQmxXM1FnS3lBeE5GMGdQU0J1V3pFMFhTd2daVnQwSUNzZ01UVmRJRDBnYmxzeE5WMHNJR1U3Q2lBZ0lDQjlDbjBzSUUxcElEMGdibVYzSUVFc0lDUjBJRDBnYm1WM0lIcGxMQ0JoY0NBOUlHNWxkeUJCS0RBc0lEQXNJREFwTENCdmNDQTlJRzVsZHlCQktERXNJREVzSURFcExDQlNiaUE5SUc1bGR5QkJMQ0JhY3lBOUlHNWxkeUJCTENCNmRDQTlJRzVsZHlCQkxDQlliQ0E5SUc1bGR5QjZaU3dnY1d3Z1BTQnVaWGNnVlhRc0lGbHlJRDBnWTJ4aGMzTWdjekVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTUN3Z2FTQTlJSE14TGtSRlJrRlZURlJmVDFKRVJWSXBld29nSUNBZ0lDQWdJSFJvYVhNdWFYTkZkV3hsY2lBOUlDRXdMQ0IwYUdsekxsOTRJRDBnWlN3Z2RHaHBjeTVmZVNBOUlIUXNJSFJvYVhNdVgzb2dQU0J1TENCMGFHbHpMbDl2Y21SbGNpQTlJR2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdlQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlRHNLSUNBZ0lIMEtJQ0FnSUhObGRDQjRLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1pTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZVNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVTQTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTZPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIb29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM29nUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnYjNKa1pYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXlaR1Z5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJRzl5WkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXZjbVJsY2lBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1TENCcElEMGdkR2hwY3k1ZmIzSmtaWElwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdVc0lIUm9hWE11WDNrZ1BTQjBMQ0IwYUdsekxsOTZJRDBnYml3Z2RHaHBjeTVmYjNKa1pYSWdQU0JwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NWZlQ3dnZEdocGN5NWZlU3dnZEdocGN5NWZlaXdnZEdocGN5NWZiM0prWlhJcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQmxMbDk0TENCMGFHbHpMbDk1SUQwZ1pTNWZlU3dnZEdocGN5NWZlaUE5SUdVdVgzb3NJSFJvYVhNdVgyOXlaR1Z5SUQwZ1pTNWZiM0prWlhJc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaGxMQ0IwSUQwZ2RHaHBjeTVmYjNKa1pYSXNJRzRnUFNBaE1Da2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVsYkdWdFpXNTBjeXdnY2lBOUlHbGJNRjBzSUdFZ1BTQnBXelJkTENCdklEMGdhVnM0WFN3Z1l5QTlJR2xiTVYwc0lHd2dQU0JwV3pWZExDQm9JRDBnYVZzNVhTd2dkU0E5SUdsYk1sMHNJR1FnUFNCcFd6WmRMQ0JtSUQwZ2FWc3hNRjA3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LSFFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWb2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVTQTlJRTFoZEdndVlYTnBiaWhqZENodkxDQXRNU3dnTVNrcExDQk5ZWFJvTG1GaWN5aHZLU0E4SUM0NU9UazVPVGs1SUQ4Z0tIUm9hWE11WDNnZ1BTQk5ZWFJvTG1GMFlXNHlLQzFvTENCbUtTd2dkR2hwY3k1ZmVpQTlJRTFoZEdndVlYUmhiaklvTFdFc0lISXBLU0E2SUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1paGtMQ0JzS1N3Z2RHaHBjeTVmZWlBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsbFlXaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnVFdGMGFDNWhjMmx1S0MxamRDaG9MQ0F0TVN3Z01Ta3BMQ0JOWVhSb0xtRmljeWhvS1NBOElDNDVPVGs1T1RrNUlEOGdLSFJvYVhNdVgza2dQU0JOWVhSb0xtRjBZVzR5S0c4c0lHWXBMQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhkR0Z1TWloakxDQnNLU2tnT2lBb2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhSaGJqSW9MWFVzSUhJcExDQjBhR2x6TGw5NklEMGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXbGhaSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCTllYUm9MbUZ6YVc0b1kzUW9aQ3dnTFRFc0lERXBLU3dnVFdGMGFDNWhZbk1vWkNrZ1BDQXVPVGs1T1RrNU9TQS9JQ2gwYUdsekxsOTVJRDBnVFdGMGFDNWhkR0Z1TWlndGRTd2daaWtzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtDMWhMQ0JzS1NrZ09pQW9kR2hwY3k1ZmVTQTlJREFzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtHTXNJSElwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0phV1ZnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhOcGJpZ3RZM1FvZFN3Z0xURXNJREVwS1N3Z1RXRjBhQzVoWW5Nb2RTa2dQQ0F1T1RrNU9UazVPU0EvSUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1paGtMQ0JtS1N3Z2RHaHBjeTVmZWlBOUlFMWhkR2d1WVhSaGJqSW9ZeXdnY2lrcElEb2dLSFJvYVhNdVgzZ2dQU0F3TENCMGFHbHpMbDk2SUQwZ1RXRjBhQzVoZEdGdU1pZ3RZU3dnYkNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxsYVdDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGMybHVLR04wS0dNc0lDMHhMQ0F4S1Nrc0lFMWhkR2d1WVdKektHTXBJRHdnTGprNU9UazVPVGtnUHlBb2RHaHBjeTVmZUNBOUlFMWhkR2d1WVhSaGJqSW9MV2dzSUd3cExDQjBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWd0ZFN3Z2Npa3BJRG9nS0hSb2FYTXVYM2dnUFNBd0xDQjBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWh2TENCbUtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdGcFpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzb2dQU0JOWVhSb0xtRnphVzRvTFdOMEtHRXNJQzB4TENBeEtTa3NJRTFoZEdndVlXSnpLR0VwSUR3Z0xqazVPVGs1T1RrZ1B5QW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvWkN3Z2JDa3NJSFJvYVhNdVgza2dQU0JOWVhSb0xtRjBZVzR5S0c4c0lISXBLU0E2SUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1pZ3RhQ3dnWmlrc0lIUm9hWE11WDNrZ1BTQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVGZFd4bGNqb2dMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNncElHVnVZMjkxYm5SbGNtVmtJR0Z1SUhWdWEyNXZkMjRnYjNKa1pYSTZJQ0lnS3lCMEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5eVpHVnlJRDBnZEN3Z2JpQTlQVDBnSVRBZ0ppWWdkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZGMVlYUmxjbTVwYjI0b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCWWJDNXRZV3RsVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpaGxLU3dnZEdocGN5NXpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvV0d3c0lIUXNJRzRwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlN3Z2RDQTlJSFJvYVhNdVgyOXlaR1Z5S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0dVdWVDd2daUzU1TENCbExub3NJSFFwT3dvZ0lDQWdmUW9nSUNBZ2NtVnZjbVJsY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIRnNMbk5sZEVaeWIyMUZkV3hsY2loMGFHbHpLU3dnZEdocGN5NXpaWFJHY205dFVYVmhkR1Z5Ym1sdmJpaHhiQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbDk0SUQwOVBTQjBhR2x6TGw5NElDWW1JR1V1WDNrZ1BUMDlJSFJvYVhNdVgza2dKaVlnWlM1ZmVpQTlQVDBnZEdocGN5NWZlaUFtSmlCbExsOXZjbVJsY2lBOVBUMGdkR2hwY3k1ZmIzSmtaWEk3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdaVnN3WFN3Z2RHaHBjeTVmZVNBOUlHVmJNVjBzSUhSb2FYTXVYM29nUFNCbFd6SmRMQ0JsV3pOZElDRTlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVYMjl5WkdWeUlEMGdaVnN6WFNrc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2RHaHBjeTVmZUN3Z1pWdDBJQ3NnTVYwZ1BTQjBhR2x6TGw5NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdVgzb3NJR1ZiZENBcklETmRJRDBnZEdocGN5NWZiM0prWlhJc0lHVTdDaUFnSUNCOUNpQWdJQ0JmYjI1RGFHRnVaMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUY5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrZ2UzMEtJQ0FnSUNwYlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncElIc0tJQ0FnSUNBZ0lDQjVhV1ZzWkNCMGFHbHpMbDk0TENCNWFXVnNaQ0IwYUdsekxsOTVMQ0I1YVdWc1pDQjBhR2x6TGw5NkxDQjVhV1ZzWkNCMGFHbHpMbDl2Y21SbGNqc0tJQ0FnSUgwS2ZUc0tXWEl1UkVWR1FWVk1WRjlQVWtSRlVpQTlJQ0pZV1ZvaU93cDJZWElnVW5NZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QTlJREU3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z6YXlBOUlDZ3hJRHc4SUdVZ2ZDQXdLU0ErUGo0Z01Ec0tJQ0FnSUgwS0lDQWdJR1Z1WVdKc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWE5ySUh3OUlERWdQRHdnWlNCOElEQTdDaUFnSUNCOUNpQWdJQ0JsYm1GaWJHVkJiR3dvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOcklEMGdMVEU3Q2lBZ0lDQjlDaUFnSUNCMGIyZG5iR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QmVQU0F4SUR3OElHVWdmQ0F3T3dvZ0lDQWdmUW9nSUNBZ1pHbHpZV0pzWlNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJJQ1k5SUg0b01TQThQQ0JsSUh3Z01DazdDaUFnSUNCOUNpQWdJQ0JrYVhOaFlteGxRV3hzS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QTlJREE3Q2lBZ0lDQjlDaUFnSUNCMFpYTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0hSb2FYTXViV0Z6YXlBbUlHVXViV0Z6YXlrZ0lUMDlJREE3Q2lBZ0lDQjlDaUFnSUNCcGMwVnVZV0pzWldRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQW9kR2hwY3k1dFlYTnJJQ1lnS0RFZ1BEd2daU0I4SURBcEtTQWhQVDBnTURzS0lDQWdJSDBLZlN3Z1kzQWdQU0F3TENCWmJDQTlJRzVsZHlCQkxDQlRhU0E5SUc1bGR5QlZkQ3dnYUc0Z1BTQnVaWGNnZW1Vc0lFcHpJRDBnYm1WM0lFRXNJR2h6SUQwZ2JtVjNJRUVzSUd4d0lEMGdibVYzSUVFc0lHaHdJRDBnYm1WM0lGVjBMQ0JhYkNBOUlHNWxkeUJCS0RFc0lEQXNJREFwTENCS2JDQTlJRzVsZHlCQktEQXNJREVzSURBcExDQWtiQ0E5SUc1bGR5QkJLREFzSURBc0lERXBMQ0IxY0NBOUlIc0tJQ0FnSUhSNWNHVTZJQ0poWkdSbFpDSUtmU3dnWkhBZ1BTQjdDaUFnSUNCMGVYQmxPaUFpY21WdGIzWmxaQ0lLZlN3Z1NtVWdQU0JqYkdGemN5QnpNU0JsZUhSbGJtUnpJSE51SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTVwYzA5aWFtVmpkRE5FSUQwZ0lUQXNJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoMGFHbHpMQ0FpYVdRaUxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJqY0NzckNpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWRYVnBaQ0E5SUd0MEtDa3NJSFJvYVhNdWJtRnRaU0E5SUNJaUxDQjBhR2x6TG5SNWNHVWdQU0FpVDJKcVpXTjBNMFFpTENCMGFHbHpMbkJoY21WdWRDQTlJRzUxYkd3c0lIUm9hWE11WTJocGJHUnlaVzRnUFNCYlhTd2dkR2hwY3k1MWNDQTlJSE14TGtSRlJrRlZURlJmVlZBdVkyeHZibVVvS1RzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUc1bGR5QkJMQ0IwSUQwZ2JtVjNJRmx5TENCdUlEMGdibVYzSUZWMExDQnBJRDBnYm1WM0lFRW9NU3dnTVN3Z01TazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiaTV6WlhSR2NtOXRSWFZzWlhJb2RDd2dJVEVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaEtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMExuTmxkRVp5YjIxUmRXRjBaWEp1YVc5dUtHNHNJSFp2YVdRZ01Dd2dJVEVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExsOXZia05vWVc1blpTaHlLU3dnYmk1ZmIyNURhR0Z1WjJVb1lTa3NJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektIUm9hWE1zSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1acFozVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiblZ0WlhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJsQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhKdmRHRjBhVzl1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNW1hV2QxY21GaWJHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2RBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnhkV0YwWlhKdWFXOXVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bWFXZDFjbUZpYkdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYmdvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelkyRnNaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZFcxbGNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUdrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXOWtaV3hXYVdWM1RXRjBjbWw0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lIcGxDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRzV2Y20xaGJFMWhkSEpwZURvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QklaUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWJXRjBjbWw0SUQwZ2JtVjNJSHBsTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrSUQwZ2JtVjNJSHBsTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0J6TVM1RVJVWkJWVXhVWDAxQlZGSkpXRjlCVlZSUFgxVlFSRUZVUlN3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXViV0YwY21sNFYyOXliR1JCZFhSdlZYQmtZWFJsSUQwZ2N6RXVSRVZHUVZWTVZGOU5RVlJTU1ZoZlYwOVNURVJmUVZWVVQxOVZVRVJCVkVVc0lIUm9hWE11YkdGNVpYSnpJRDBnYm1WM0lGSnpMQ0IwYUdsekxuWnBjMmxpYkdVZ1BTQWhNQ3dnZEdocGN5NWpZWE4wVTJoaFpHOTNJRDBnSVRFc0lIUm9hWE11Y21WalpXbDJaVk5vWVdSdmR5QTlJQ0V4TENCMGFHbHpMbVp5ZFhOMGRXMURkV3hzWldRZ1BTQWhNQ3dnZEdocGN5NXlaVzVrWlhKUGNtUmxjaUE5SURBc0lIUm9hWE11WVc1cGJXRjBhVzl1Y3lBOUlGdGRMQ0IwYUdsekxuVnpaWEpFWVhSaElEMGdlMzA3Q2lBZ0lDQjlDaUFnSUNCdmJrSmxabTl5WlZKbGJtUmxjaWdwSUh0OUNpQWdJQ0J2YmtGbWRHVnlVbVZ1WkdWeUtDa2dlMzBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJQ1ltSUhSb2FYTXVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lIUm9hWE11YldGMGNtbDRMbkJ5WlcxMWJIUnBjR3g1S0dVcExDQjBhR2x6TG0xaGRISnBlQzVrWldOdmJYQnZjMlVvZEdocGN5NXdiM05wZEdsdmJpd2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxDQjBhR2x6TG5OallXeGxLVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVVWFZoZEdWeWJtbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV3Y21WdGRXeDBhWEJzZVNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRkp2ZEdGMGFXOXVSbkp2YlVGNGFYTkJibWRzWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXhkV0YwWlhKdWFXOXVMbk5sZEVaeWIyMUJlR2x6UVc1bmJHVW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTYjNSaGRHbHZia1p5YjIxRmRXeGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRFWnliMjFGZFd4bGNpaGxMQ0FoTUNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTYjNSaGRHbHZia1p5YjIxTllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1elpYUkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29aU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUlNiM1JoZEdsdmJrWnliMjFSZFdGMFpYSnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dVkyOXdlU2hsS1RzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlU5dVFYaHBjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGTnBMbk5sZEVaeWIyMUJlR2x6UVc1bmJHVW9aU3dnZENrc0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1dGRXeDBhWEJzZVNoVGFTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWUGJsZHZjbXhrUVhocGN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZOcExuTmxkRVp5YjIxQmVHbHpRVzVuYkdVb1pTd2dkQ2tzSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV3Y21WdGRXeDBhWEJzZVNoVGFTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWWUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eWIzUmhkR1ZQYmtGNGFYTW9XbXdzSUdVcE93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFdTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTBZWFJsVDI1QmVHbHpLRXBzTENCbEtUc0tJQ0FnSUgwS0lDQWdJSEp2ZEdGMFpWb29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSnZkR0YwWlU5dVFYaHBjeWdrYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1ZQYmtGNGFYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCWmJDNWpiM0I1S0dVcExtRndjR3g1VVhWaGRHVnlibWx2YmloMGFHbHpMbkYxWVhSbGNtNXBiMjRwTENCMGFHbHpMbkJ2YzJsMGFXOXVMbUZrWkNoWmJDNXRkV3gwYVhCc2VWTmpZV3hoY2loMEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJ4aGRHVllLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBjbUZ1YzJ4aGRHVlBia0Y0YVhNb1dtd3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbFdTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRISmhibk5zWVhSbFQyNUJlR2x6S0Vwc0xDQmxLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlZvb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5SeVlXNXpiR0YwWlU5dVFYaHBjeWdrYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJOaGJGUnZWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFd0xDQWhNU2tzSUdVdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ2ZRb2dJQ0FnZDI5eWJHUlViMHh2WTJGc0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCbExtRndjR3g1VFdGMGNtbDROQ2hvYmk1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BLVHNLSUNBZ0lIMEtJQ0FnSUd4dmIydEJkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnWlM1cGMxWmxZM1J2Y2pNZ1B5QktjeTVqYjNCNUtHVXBJRG9nU25NdWMyVjBLR1VzSUhRc0lHNHBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1d1lYSmxiblE3Q2lBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQm9jeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11YVhORFlXMWxjbUVnZkh3Z2RHaHBjeTVwYzB4cFoyaDBJRDhnYUc0dWJHOXZhMEYwS0doekxDQktjeXdnZEdocGN5NTFjQ2tnT2lCb2JpNXNiMjlyUVhRb1NuTXNJR2h6TENCMGFHbHpMblZ3S1N3Z2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaG9iaWtzSUdrZ0ppWWdLR2h1TG1WNGRISmhZM1JTYjNSaGRHbHZiaWhwTG0xaGRISnBlRmR2Y214a0tTd2dVMmt1YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtHaHVLU3dnZEdocGN5NXhkV0YwWlhKdWFXOXVMbkJ5WlcxMWJIUnBjR3g1S0ZOcExtbHVkbVZ5ZENncEtTazdDaUFnSUNCOUNpQWdJQ0JoWkdRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z1lYSm5kVzFsYm5SekxteGxibWQwYURzZ2RDc3JLWFJvYVhNdVlXUmtLR0Z5WjNWdFpXNTBjMXQwWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOVBUMGdkR2hwY3lBL0lDaGpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVQWW1wbFkzUXpSQzVoWkdRNklHOWlhbVZqZENCallXNG5kQ0JpWlNCaFpHUmxaQ0JoY3lCaElHTm9hV3hrSUc5bUlHbDBjMlZzWmk0aUxDQmxLU3dnZEdocGN5a2dPaUFvWlNBbUppQmxMbWx6VDJKcVpXTjBNMFFnUHlBb1pTNXdZWEpsYm5RZ0lUMDlJRzUxYkd3Z0ppWWdaUzV3WVhKbGJuUXVjbVZ0YjNabEtHVXBMQ0JsTG5CaGNtVnVkQ0E5SUhSb2FYTXNJSFJvYVhNdVkyaHBiR1J5Wlc0dWNIVnphQ2hsS1N3Z1pTNWthWE53WVhSamFFVjJaVzUwS0hWd0tTa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UFltcGxZM1F6UkM1aFpHUTZJRzlpYW1WamRDQnViM1FnWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWRWhTUlVVdVQySnFaV04wTTBRdUlpd2daU2tzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzRyS3lsMGFHbHpMbkpsYlc5MlpTaGhjbWQxYldWdWRITmJibDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTm9hV3hrY21WdUxtbHVaR1Y0VDJZb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUMweElDWW1JQ2hsTG5CaGNtVnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVkyaHBiR1J5Wlc0dWMzQnNhV05sS0hRc0lERXBMQ0JsTG1ScGMzQmhkR05vUlhabGJuUW9aSEFwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKbGJXOTJaVVp5YjIxUVlYSmxiblFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbkJoY21WdWREc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQWhQVDBnYm5Wc2JDQW1KaUJsTG5KbGJXOTJaU2gwYUdsektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsYlc5MlpTZ3VMaTUwYUdsekxtTm9hV3hrY21WdUtUc0tJQ0FnSUgwS0lDQWdJR0YwZEdGamFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1N3Z2FHNHVZMjl3ZVNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1N3Z1pTNXdZWEpsYm5RZ0lUMDlJRzUxYkd3Z0ppWWdLR1V1Y0dGeVpXNTBMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1Ta3NJR2h1TG0xMWJIUnBjR3g1S0dVdWNHRnlaVzUwTG0xaGRISnBlRmR2Y214a0tTa3NJR1V1WVhCd2JIbE5ZWFJ5YVhnMEtHaHVLU3dnZEdocGN5NWhaR1FvWlNrc0lHVXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEVzSUNFd0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTlpYW1WamRFSjVTV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEU5aWFtVmpkRUo1VUhKdmNHVnlkSGtvSW1sa0lpd2daU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlBZbXBsWTNSQ2VVNWhiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEU5aWFtVmpkRUo1VUhKdmNHVnlkSGtvSW01aGJXVWlMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTlpYW1WamRFSjVVSEp2Y0dWeWRIa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdselcyVmRJRDA5UFNCMEtTQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEdocGN5NWphR2xzWkhKbGJpNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVZMmhwYkdSeVpXNWJibDB1WjJWMFQySnFaV04wUW5sUWNtOXdaWEowZVNobExDQjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0VnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUdFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdaMlYwVDJKcVpXTjBjMEo1VUhKdmNHVnlkSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnZEdocGMxdGxYU0E5UFQwZ2RDQW1KaUJ1TG5CMWMyZ29kR2hwY3lrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlIUm9hWE11WTJocGJHUnlaVzR1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1VzJsZExtZGxkRTlpYW1WamRITkNlVkJ5YjNCbGNuUjVLR1VzSUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTG14bGJtZDBhQ0ErSURBZ0ppWWdLRzRnUFNCdUxtTnZibU5oZENoaEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFYyOXliR1JRYjNOcGRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2daUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYYjNKc1pGRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrc0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVpHVmpiMjF3YjNObEtHaHpMQ0JsTENCc2NDa3NJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUlhiM0pzWkZOallXeGxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaG9jeXdnYUhBc0lHVXBMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWMjl5YkdSRWFYSmxZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1F1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YzJWMEtIUmJPRjBzSUhSYk9WMHNJSFJiTVRCZEtTNXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvS1NCN2ZRb2dJQ0FnZEhKaGRtVnljMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lHVW9kR2hwY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMFcyNWRMblJ5WVhabGNuTmxLR1VwT3dvZ0lDQWdmUW9nSUNBZ2RISmhkbVZ5YzJWV2FYTnBZbXhsS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTJhWE5wWW14bElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUdVb2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTm9hV3hrY21WdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWwwVzI1ZExuUnlZWFpsY25ObFZtbHphV0pzWlNobEtUc0tJQ0FnSUgwS0lDQWdJSFJ5WVhabGNuTmxRVzVqWlhOMGIzSnpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR0Z5Wlc1ME93b2dJQ0FnSUNBZ0lIUWdJVDA5SUc1MWJHd2dKaVlnS0dVb2RDa3NJSFF1ZEhKaGRtVnljMlZCYm1ObGMzUnZjbk1vWlNrcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRMbU52YlhCdmMyVW9kR2hwY3k1d2IzTnBkR2x2Yml3Z2RHaHBjeTV4ZFdGMFpYSnVhVzl1TENCMGFHbHpMbk5qWVd4bEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElDWW1JSFJvYVhNdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ2ZId2daU2tnSmlZZ0tIUm9hWE11Y0dGeVpXNTBJRDA5UFNCdWRXeHNJRDhnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzVqYjNCNUtIUm9hWE11YldGMGNtbDRLU0E2SUhSb2FYTXViV0YwY21sNFYyOXliR1F1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWgwYUdsekxuQmhjbVZ1ZEM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGdwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ1BTQWhNU3dnWlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyaHBiR1J5Wlc0N0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUXViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBb2NpNXRZWFJ5YVhoWGIzSnNaRUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJSHg4SUdVZ1BUMDlJQ0V3S1NBbUppQnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZkdmNteGtUV0YwY21sNEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjR0Z5Wlc1ME93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQWhNQ0FtSmlCdUlDRTlQU0J1ZFd4c0lDWW1JRzR1YldGMGNtbDRWMjl5YkdSQmRYUnZWWEJrWVhSbElEMDlQU0FoTUNBbUppQnVMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1Ta3NJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBbUppQjBhR2x6TG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0IwYUdsekxuQmhjbVZ1ZENBOVBUMGdiblZzYkNBL0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVkyOXdlU2gwYUdsekxtMWhkSEpwZUNrZ09pQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeTV3WVhKbGJuUXViV0YwY21sNFYyOXliR1FzSUhSb2FYTXViV0YwY21sNEtTd2dkQ0E5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0JoSUQwZ2FTNXNaVzVuZEdnN0lISWdQQ0JoT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnBXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnk1dFlYUnlhWGhYYjNKc1pFRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JRzh1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRFc0lDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsSUQwOVBTQjJiMmxrSURBZ2ZId2dkSGx3Wlc5bUlHVWdQVDBnSW5OMGNtbHVaeUlzSUc0Z1BTQjdmVHNLSUNBZ0lDQWdJQ0IwSUNZbUlDaGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aVzl0WlhSeWFXVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWlhKcFlXeHpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEhWeVpYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBiV0ZuWlhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHRndaWE02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YTJWc1pYUnZibk02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjV6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm05a1pYTTZJSHQ5Q2lBZ0lDQWdJQ0FnZlN3Z2JpNXRaWFJoWkdGMFlTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDJMQW9nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVDJKcVpXTjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEc5eU9pQWlUMkpxWldOME0wUXVkRzlLVTA5T0lnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdlMzA3Q2lBZ0lDQWdJQ0FnYVM1MWRXbGtJRDBnZEdocGN5NTFkV2xrTENCcExuUjVjR1VnUFNCMGFHbHpMblI1Y0dVc0lIUm9hWE11Ym1GdFpTQWhQVDBnSWlJZ0ppWWdLR2t1Ym1GdFpTQTlJSFJvYVhNdWJtRnRaU2tzSUhSb2FYTXVZMkZ6ZEZOb1lXUnZkeUE5UFQwZ0lUQWdKaVlnS0drdVkyRnpkRk5vWVdSdmR5QTlJQ0V3S1N3Z2RHaHBjeTV5WldObGFYWmxVMmhoWkc5M0lEMDlQU0FoTUNBbUppQW9hUzV5WldObGFYWmxVMmhoWkc5M0lEMGdJVEFwTENCMGFHbHpMblpwYzJsaWJHVWdQVDA5SUNFeElDWW1JQ2hwTG5acGMybGliR1VnUFNBaE1Ta3NJSFJvYVhNdVpuSjFjM1IxYlVOMWJHeGxaQ0E5UFQwZ0lURWdKaVlnS0drdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUNFeEtTd2dkR2hwY3k1eVpXNWtaWEpQY21SbGNpQWhQVDBnTUNBbUppQW9hUzV5Wlc1a1pYSlBjbVJsY2lBOUlIUm9hWE11Y21WdVpHVnlUM0prWlhJcExDQlBZbXBsWTNRdWEyVjVjeWgwYUdsekxuVnpaWEpFWVhSaEtTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNocExuVnpaWEpFWVhSaElEMGdkR2hwY3k1MWMyVnlSR0YwWVNrc0lHa3ViR0Y1WlhKeklEMGdkR2hwY3k1c1lYbGxjbk11YldGemF5d2dhUzV0WVhSeWFYZ2dQU0IwYUdsekxtMWhkSEpwZUM1MGIwRnljbUY1S0Nrc0lHa3VkWEFnUFNCMGFHbHpMblZ3TG5SdlFYSnlZWGtvS1N3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDA5UFNBaE1TQW1KaUFvYVM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXBMQ0IwYUdsekxtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBbUppQW9hUzUwZVhCbElEMGdJa2x1YzNSaGJtTmxaRTFsYzJnaUxDQnBMbU52ZFc1MElEMGdkR2hwY3k1amIzVnVkQ3dnYVM1cGJuTjBZVzVqWlUxaGRISnBlQ0E5SUhSb2FYTXVhVzV6ZEdGdVkyVk5ZWFJ5YVhndWRHOUtVMDlPS0Nrc0lIUm9hWE11YVc1emRHRnVZMlZEYjJ4dmNpQWhQVDBnYm5Wc2JDQW1KaUFvYVM1cGJuTjBZVzVqWlVOdmJHOXlJRDBnZEdocGN5NXBibk4wWVc1alpVTnZiRzl5TG5SdlNsTlBUaWdwS1NrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2NpaHZMQ0JqS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZXMk11ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb2IxdGpMblYxYVdSZElEMGdZeTUwYjBwVFQwNG9aU2twTENCakxuVjFhV1E3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1selUyTmxibVVwSUhSb2FYTXVZbUZqYTJkeWIzVnVaQ0FtSmlBb2RHaHBjeTVpWVdOclozSnZkVzVrTG1selEyOXNiM0lnUHlCcExtSmhZMnRuY205MWJtUWdQU0IwYUdsekxtSmhZMnRuY205MWJtUXVkRzlLVTA5T0tDa2dPaUIwYUdsekxtSmhZMnRuY205MWJtUXVhWE5VWlhoMGRYSmxJQ1ltSUNocExtSmhZMnRuY205MWJtUWdQU0IwYUdsekxtSmhZMnRuY205MWJtUXVkRzlLVTA5T0tHVXBMblYxYVdRcEtTd2dkR2hwY3k1bGJuWnBjbTl1YldWdWRDQW1KaUIwYUdsekxtVnVkbWx5YjI1dFpXNTBMbWx6VkdWNGRIVnlaU0FtSmlCMGFHbHpMbVZ1ZG1seWIyNXRaVzUwTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQWhQVDBnSVRBZ0ppWWdLR2t1Wlc1MmFYSnZibTFsYm5RZ1BTQjBhR2x6TG1WdWRtbHliMjV0Wlc1MExuUnZTbE5QVGlobEtTNTFkV2xrS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoMGFHbHpMbWx6VFdWemFDQjhmQ0IwYUdsekxtbHpUR2x1WlNCOGZDQjBhR2x6TG1selVHOXBiblJ6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1WjJWdmJXVjBjbmtnUFNCeUtHVXVaMlZ2YldWMGNtbGxjeXdnZEdocGN5NW5aVzl0WlhSeWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NW5aVzl0WlhSeWVTNXdZWEpoYldWMFpYSnpPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ieUFoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVjMmhoY0dWeklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdieTV6YUdGd1pYTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGpLU2tnWm05eUtHeGxkQ0JzSUQwZ01Dd2dhQ0E5SUdNdWJHVnVaM1JvT3lCc0lEd2dhRHNnYkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR05iYkYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaWhsTG5Ob1lYQmxjeXdnZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSElvWlM1emFHRndaWE1zSUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1selUydHBibTVsWkUxbGMyZ2dKaVlnS0drdVltbHVaRTF2WkdVZ1BTQjBhR2x6TG1KcGJtUk5iMlJsTENCcExtSnBibVJOWVhSeWFYZ2dQU0IwYUdsekxtSnBibVJOWVhSeWFYZ3VkRzlCY25KaGVTZ3BMQ0IwYUdsekxuTnJaV3hsZEc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0hJb1pTNXphMlZzWlhSdmJuTXNJSFJvYVhNdWMydGxiR1YwYjI0cExDQnBMbk5yWld4bGRHOXVJRDBnZEdocGN5NXphMlZzWlhSdmJpNTFkV2xrS1Nrc0lIUm9hWE11YldGMFpYSnBZV3dnSVQwOUlIWnZhV1FnTUNrZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2RHaHBjeTV0WVhSbGNtbGhiQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYkNBOUlIUm9hWE11YldGMFpYSnBZV3d1YkdWdVozUm9PeUJqSUR3Z2JEc2dZeXNyS1c4dWNIVnphQ2h5S0dVdWJXRjBaWEpwWVd4ekxDQjBhR2x6TG0xaGRHVnlhV0ZzVzJOZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUdrdWJXRjBaWEpwWVd3Z1BTQnZPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBMbTFoZEdWeWFXRnNJRDBnY2lobExtMWhkR1Z5YVdGc2N5d2dkR2hwY3k1dFlYUmxjbWxoYkNrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcExtTm9hV3hrY21WdUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREE3SUc4Z1BDQjBhR2x6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhRHNnYnlzcktXa3VZMmhwYkdSeVpXNHVjSFZ6YUNoMGFHbHpMbU5vYVd4a2NtVnVXMjlkTG5SdlNsTlBUaWhsS1M1dlltcGxZM1FwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aGJtbHRZWFJwYjI1ekxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTNWhibWx0WVhScGIyNXpJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdQQ0IwYUdsekxtRnVhVzFoZEdsdmJuTXViR1Z1WjNSb095QnZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwYUdsekxtRnVhVzFoZEdsdmJuTmJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG1GdWFXMWhkR2x2Ym5NdWNIVnphQ2h5S0dVdVlXNXBiV0YwYVc5dWN5d2dZeWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWVNobExtZGxiMjFsZEhKcFpYTXBMQ0JqSUQwZ1lTaGxMbTFoZEdWeWFXRnNjeWtzSUd3Z1BTQmhLR1V1ZEdWNGRIVnlaWE1wTENCb0lEMGdZU2hsTG1sdFlXZGxjeWtzSUhVZ1BTQmhLR1V1YzJoaGNHVnpLU3dnWkNBOUlHRW9aUzV6YTJWc1pYUnZibk1wTENCbUlEMGdZU2hsTG1GdWFXMWhkR2x2Ym5NcExDQnRJRDBnWVNobExtNXZaR1Z6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdieTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWRsYjIxbGRISnBaWE1nUFNCdktTd2dZeTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbTFoZEdWeWFXRnNjeUE5SUdNcExDQnNMbXhsYm1kMGFDQStJREFnSmlZZ0tHNHVkR1Y0ZEhWeVpYTWdQU0JzS1N3Z2FDNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtbHRZV2RsY3lBOUlHZ3BMQ0IxTG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1YzJoaGNHVnpJRDBnZFNrc0lHUXViR1Z1WjNSb0lENGdNQ0FtSmlBb2JpNXphMlZzWlhSdmJuTWdQU0JrS1N3Z1ppNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtRnVhVzFoZEdsdmJuTWdQU0JtS1N3Z2JTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtNXZaR1Z6SUQwZ2JTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbTlpYW1WamRDQTlJR2tzSUc0N0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1lTaHZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNCcGJpQnZLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdiMXRzWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JvTG0xbGRHRmtZWFJoTENCakxuQjFjMmdvYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3l3Z1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFnUFNBaE1Da2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTVoYldVZ1BTQmxMbTVoYldVc0lIUm9hWE11ZFhBdVkyOXdlU2hsTG5Wd0tTd2dkR2hwY3k1d2IzTnBkR2x2Ymk1amIzQjVLR1V1Y0c5emFYUnBiMjRwTENCMGFHbHpMbkp2ZEdGMGFXOXVMbTl5WkdWeUlEMGdaUzV5YjNSaGRHbHZiaTV2Y21SbGNpd2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxtTnZjSGtvWlM1eGRXRjBaWEp1YVc5dUtTd2dkR2hwY3k1elkyRnNaUzVqYjNCNUtHVXVjMk5oYkdVcExDQjBhR2x6TG0xaGRISnBlQzVqYjNCNUtHVXViV0YwY21sNEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWpiM0I1S0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQmxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVXNJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUdVdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRUYxZEc5VmNHUmhkR1VnUFNCbExtMWhkSEpwZUZkdmNteGtRWFYwYjFWd1pHRjBaU3dnZEdocGN5NXNZWGxsY25NdWJXRnpheUE5SUdVdWJHRjVaWEp6TG0xaGMyc3NJSFJvYVhNdWRtbHphV0pzWlNBOUlHVXVkbWx6YVdKc1pTd2dkR2hwY3k1allYTjBVMmhoWkc5M0lEMGdaUzVqWVhOMFUyaGhaRzkzTENCMGFHbHpMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BTQmxMbkpsWTJWcGRtVlRhR0ZrYjNjc0lIUm9hWE11Wm5KMWMzUjFiVU4xYkd4bFpDQTlJR1V1Wm5KMWMzUjFiVU4xYkd4bFpDd2dkR2hwY3k1eVpXNWtaWEpQY21SbGNpQTlJR1V1Y21WdVpHVnlUM0prWlhJc0lIUm9hWE11WVc1cGJXRjBhVzl1Y3lBOUlHVXVZVzVwYldGMGFXOXVjeTV6YkdsalpTZ3BMQ0IwYUdsekxuVnpaWEpFWVhSaElEMGdTbE5QVGk1d1lYSnpaU2hLVTA5T0xuTjBjbWx1WjJsbWVTaGxMblZ6WlhKRVlYUmhLU2tzSUhRZ1BUMDlJQ0V3S1NCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z1pTNWphR2xzWkhKbGJpNXNaVzVuZEdnN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNWphR2xzWkhKbGJsdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoWkdRb2FTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDbjA3Q2twbExrUkZSa0ZWVEZSZlZWQWdQU0J1WlhjZ1FTZ3dMQ0F4TENBd0tUc0tTbVV1UkVWR1FWVk1WRjlOUVZSU1NWaGZRVlZVVDE5VlVFUkJWRVVnUFNBaE1Ec0tTbVV1UkVWR1FWVk1WRjlOUVZSU1NWaGZWMDlTVEVSZlFWVlVUMTlWVUVSQlZFVWdQU0FoTURzS2RtRnlJRXQwSUQwZ2JtVjNJRUVzSUhWdUlEMGdibVYzSUVFc0lFaGhJRDBnYm1WM0lFRXNJR1J1SUQwZ2JtVjNJRUVzSUdKcElEMGdibVYzSUVFc0lFVnBJRDBnYm1WM0lFRXNJRXRzSUQwZ2JtVjNJRUVzSUVkaElEMGdibVYzSUVFc0lGZGhJRDBnYm1WM0lFRXNJRmhoSUQwZ2JtVjNJRUVzSUNSeklEMGdJVEVzSUZWdUlEMGdZMnhoYzNNZ2N6RWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QkJMQ0IwSUQwZ2JtVjNJRUVzSUc0Z1BTQnVaWGNnUVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVoSUQwZ1pTd2dkR2hwY3k1aUlEMGdkQ3dnZEdocGN5NWpJRDBnYmpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCblpYUk9iM0p0WVd3b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR2t1YzNWaVZtVmpkRzl5Y3lodUxDQjBLU3dnUzNRdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1N3Z2FTNWpjbTl6Y3loTGRDazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnBMbXhsYm1kMGFGTnhLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSElnUGlBd0lEOGdhUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hJQzhnVFdGMGFDNXpjWEowS0hJcEtTQTZJR2t1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHZGxkRUpoY25samIyOXlaQ2hsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdTM1F1YzNWaVZtVmpkRzl5Y3locExDQjBLU3dnZFc0dWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z1NHRXVjM1ZpVm1WamRHOXljeWhsTENCMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlFdDBMbVJ2ZENoTGRDa3NJRzhnUFNCTGRDNWtiM1FvZFc0cExDQmpJRDBnUzNRdVpHOTBLRWhoS1N3Z2JDQTlJSFZ1TG1SdmRDaDFiaWtzSUdnZ1BTQjFiaTVrYjNRb1NHRXBMQ0IxSUQwZ1lTQXFJR3dnTFNCdklDb2dienNLSUNBZ0lDQWdJQ0JwWmlBb2RTQTlQVDBnTUNrZ2NtVjBkWEp1SUhJdWMyVjBLQzB5TENBdE1Td2dMVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnTVNBdklIVXNJR1lnUFNBb2JDQXFJR01nTFNCdklDb2dhQ2tnS2lCa0xDQnRJRDBnS0dFZ0tpQm9JQzBnYnlBcUlHTXBJQ29nWkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2k1elpYUW9NU0F0SUdZZ0xTQnRMQ0J0TENCbUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QmpiMjUwWVdsdWMxQnZhVzUwS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkQ3dnYml3Z2FTd2daRzRwTENCa2JpNTRJRDQ5SURBZ0ppWWdaRzR1ZVNBK1BTQXdJQ1ltSUdSdUxuZ2dLeUJrYmk1NUlEdzlJREU3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWjJWMFZWWW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z1lTd2dieXdnWXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBa2N5QTlQVDBnSVRFZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkhKcFlXNW5iR1V1WjJWMFZWWW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUZSSVVrVkZMbFJ5YVdGdVoyeGxMbWRsZEVsdWRHVnljRzlzWVhScGIyNG9LUzRpS1N3Z0pITWdQU0FoTUNrc0lIUm9hWE11WjJWMFNXNTBaWEp3YjJ4aGRHbHZiaWhsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCaktUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm5aWFJKYm5SbGNuQnZiR0YwYVc5dUtHVXNJSFFzSUc0c0lHa3NJSElzSUdFc0lHOHNJR01wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RDd2diaXdnYVN3Z1pHNHBMQ0JqTG5ObGRGTmpZV3hoY2lnd0tTd2dZeTVoWkdSVFkyRnNaV1JXWldOMGIzSW9jaXdnWkc0dWVDa3NJR011WVdSa1UyTmhiR1ZrVm1WamRHOXlLR0VzSUdSdUxua3BMQ0JqTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2TENCa2JpNTZLU3dnWXpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCcGMwWnliMjUwUm1GamFXNW5LR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUzNRdWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z2RXNHVjM1ZpVm1WamRHOXljeWhsTENCMEtTd2dTM1F1WTNKdmMzTW9kVzRwTG1SdmRDaHBLU0E4SURBN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRXVZMjl3ZVNobEtTd2dkR2hwY3k1aUxtTnZjSGtvZENrc0lIUm9hWE11WXk1amIzQjVLRzRwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkJ2YVc1MGMwRnVaRWx1WkdsalpYTW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRXVZMjl3ZVNobFczUmRLU3dnZEdocGN5NWlMbU52Y0hrb1pWdHVYU2tzSUhSb2FYTXVZeTVqYjNCNUtHVmJhVjBwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVUYwZEhKcFluVjBaVUZ1WkVsdVpHbGpaWE1vWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUV1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBLU3dnZEdocGN5NWlMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2Jpa3NJSFJvYVhNdVl5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUdrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRXVZMjl3ZVNobExtRXBMQ0IwYUdsekxtSXVZMjl3ZVNobExtSXBMQ0IwYUdsekxtTXVZMjl3ZVNobExtTXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUVhKbFlTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdTM1F1YzNWaVZtVmpkRzl5Y3loMGFHbHpMbU1zSUhSb2FYTXVZaWtzSUhWdUxuTjFZbFpsWTNSdmNuTW9kR2hwY3k1aExDQjBhR2x6TG1JcExDQkxkQzVqY205emN5aDFiaWt1YkdWdVozUm9LQ2tnS2lBdU5Uc0tJQ0FnSUgwS0lDQWdJR2RsZEUxcFpIQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhaR1JXWldOMGIzSnpLSFJvYVhNdVlTd2dkR2hwY3k1aUtTNWhaR1FvZEdocGN5NWpLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hJQzhnTXlrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJPYjNKdFlXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6TVM1blpYUk9iM0p0WVd3b2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYkdGdVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YzJWMFJuSnZiVU52Y0d4aGJtRnlVRzlwYm5SektIUm9hWE11WVN3Z2RHaHBjeTVpTENCMGFHbHpMbU1wT3dvZ0lDQWdmUW9nSUNBZ1oyVjBRbUZ5ZVdOdmIzSmtLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2N6RXVaMlYwUW1GeWVXTnZiM0prS0dVc0lIUm9hWE11WVN3Z2RHaHBjeTVpTENCMGFHbHpMbU1zSUhRcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVlZZb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFrY3lBOVBUMGdJVEVnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWSEpwWVc1bmJHVXVaMlYwVlZZb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxsUnlhV0Z1WjJ4bExtZGxkRWx1ZEdWeWNHOXNZWFJwYjI0b0tTNGlLU3dnSkhNZ1BTQWhNQ2tzSUhNeExtZGxkRWx1ZEdWeWNHOXNZWFJwYjI0b1pTd2dkR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXl3Z2RDd2diaXdnYVN3Z2NpazdDaUFnSUNCOUNpQWdJQ0JuWlhSSmJuUmxjbkJ2YkdGMGFXOXVLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2N6RXVaMlYwU1c1MFpYSndiMnhoZEdsdmJpaGxMQ0IwYUdsekxtRXNJSFJvYVhNdVlpd2dkR2hwY3k1akxDQjBMQ0J1TENCcExDQnlLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6TVM1amIyNTBZV2x1YzFCdmFXNTBLR1VzSUhSb2FYTXVZU3dnZEdocGN5NWlMQ0IwYUdsekxtTXBPd29nSUNBZ2ZRb2dJQ0FnYVhOR2NtOXVkRVpoWTJsdVp5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE14TG1selJuSnZiblJHWVdOcGJtY29kR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXl3Z1pTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYm5SbGNuTmxZM1J6VkhKcFlXNW5iR1VvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYkc5elpYTjBVRzlwYm5SVWIxQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVlTd2dhU0E5SUhSb2FYTXVZaXdnY2lBOUlIUm9hWE11WXl3Z1lTd2dienNLSUNBZ0lDQWdJQ0JpYVM1emRXSldaV04wYjNKektHa3NJRzRwTENCRmFTNXpkV0pXWldOMGIzSnpLSElzSUc0cExDQkhZUzV6ZFdKV1pXTjBiM0p6S0dVc0lHNHBPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdZbWt1Wkc5MEtFZGhLU3dnYkNBOUlFVnBMbVJ2ZENoSFlTazdDaUFnSUNBZ0lDQWdhV1lnS0dNZ1BEMGdNQ0FtSmlCc0lEdzlJREFwSUhKbGRIVnliaUIwTG1OdmNIa29iaWs3Q2lBZ0lDQWdJQ0FnVjJFdWMzVmlWbVZqZEc5eWN5aGxMQ0JwS1RzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUdKcExtUnZkQ2hYWVNrc0lIVWdQU0JGYVM1a2IzUW9WMkVwT3dvZ0lDQWdJQ0FnSUdsbUlDaG9JRDQ5SURBZ0ppWWdkU0E4UFNCb0tTQnlaWFIxY200Z2RDNWpiM0I1S0drcE93b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1l5QXFJSFVnTFNCb0lDb2diRHNLSUNBZ0lDQWdJQ0JwWmlBb1pDQThQU0F3SUNZbUlHTWdQajBnTUNBbUppQm9JRHc5SURBcElISmxkSFZ5YmlCaElEMGdZeUF2SUNoaklDMGdhQ2tzSUhRdVkyOXdlU2h1S1M1aFpHUlRZMkZzWldSV1pXTjBiM0lvWW1rc0lHRXBPd29nSUNBZ0lDQWdJRmhoTG5OMVlsWmxZM1J2Y25Nb1pTd2djaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHWWdQU0JpYVM1a2IzUW9XR0VwTENCdElEMGdSV2t1Wkc5MEtGaGhLVHNLSUNBZ0lDQWdJQ0JwWmlBb2JTQStQU0F3SUNZbUlHWWdQRDBnYlNrZ2NtVjBkWEp1SUhRdVkyOXdlU2h5S1RzS0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUdZZ0tpQnNJQzBnWXlBcUlHMDdDaUFnSUNBZ0lDQWdhV1lnS0Y4Z1BEMGdNQ0FtSmlCc0lENDlJREFnSmlZZ2JTQThQU0F3S1NCeVpYUjFjbTRnYnlBOUlHd2dMeUFvYkNBdElHMHBMQ0IwTG1OdmNIa29iaWt1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRVZwTENCdktUc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHZ2dLaUJ0SUMwZ1ppQXFJSFU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHY2dQRDBnTUNBbUppQjFJQzBnYUNBK1BTQXdJQ1ltSUdZZ0xTQnRJRDQ5SURBcElISmxkSFZ5YmlCTGJDNXpkV0pXWldOMGIzSnpLSElzSUdrcExDQnZJRDBnS0hVZ0xTQm9LU0F2SUNoMUlDMGdhQ0FySUNobUlDMGdiU2twTENCMExtTnZjSGtvYVNrdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0V0c0xDQnZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJREVnTHlBb1p5QXJJRjhnS3lCa0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTQTlJRjhnS2lCd0xDQnZJRDBnWkNBcUlIQXNJSFF1WTI5d2VTaHVLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ZbWtzSUdFcExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loRmFTd2dieWs3Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRXVaWEYxWVd4ektIUm9hWE11WVNrZ0ppWWdaUzVpTG1WeGRXRnNjeWgwYUdsekxtSXBJQ1ltSUdVdVl5NWxjWFZoYkhNb2RHaHBjeTVqS1RzS0lDQWdJSDBLZlN3Z1puQWdQU0F3TENCaWRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2MyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpUV0YwWlhKcFlXd2dQU0FoTUN3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHWndLeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdhM1FvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSk5ZWFJsY21saGJDSXNJSFJvYVhNdVlteGxibVJwYm1jZ1BTQlhhU3dnZEdocGN5NXphV1JsSUQwZ1FtNHNJSFJvYVhNdWRtVnlkR1Y0UTI5c2IzSnpJRDBnSVRFc0lIUm9hWE11YjNCaFkybDBlU0E5SURFc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BTQWhNU3dnZEdocGN5NWhiSEJvWVVoaGMyZ2dQU0FoTVN3Z2RHaHBjeTVpYkdWdVpGTnlZeUE5SUd4a0xDQjBhR2x6TG1Kc1pXNWtSSE4wSUQwZ2FHUXNJSFJvYVhNdVlteGxibVJGY1hWaGRHbHZiaUE5SUVKcExDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSSE4wUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVNBOUlHNTFiR3dzSUhSb2FYTXVaR1Z3ZEdoR2RXNWpJRDBnZFc4c0lIUm9hWE11WkdWd2RHaFVaWE4wSUQwZ0lUQXNJSFJvYVhNdVpHVndkR2hYY21sMFpTQTlJQ0V3TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQkpaaXdnZEdocGN5NXpkR1Z1WTJsc1VtVm1JRDBnTUN3Z2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQkpZU3dnZEdocGN5NXpkR1Z1WTJsc1drWmhhV3dnUFNCSllTd2dkR2hwY3k1emRHVnVZMmxzV2xCaGMzTWdQU0JKWVN3Z2RHaHBjeTV6ZEdWdVkybHNWM0pwZEdVZ1BTQWhNU3dnZEdocGN5NWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlHNTFiR3dzSUhSb2FYTXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpQTlJQ0V4TENCMGFHbHpMbU5zYVhCVGFHRmtiM2R6SUQwZ0lURXNJSFJvYVhNdWMyaGhaRzkzVTJsa1pTQTlJRzUxYkd3c0lIUm9hWE11WTI5c2IzSlhjbWwwWlNBOUlDRXdMQ0IwYUdsekxuQnlaV05wYzJsdmJpQTlJRzUxYkd3c0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRDQTlJQ0V4TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnUFNBd0xDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlEQXNJSFJvYVhNdVpHbDBhR1Z5YVc1bklEMGdJVEVzSUhSb2FYTXVZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMGdJVEVzSUhSb2FYTXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnSVRFc0lIUm9hWE11Wm05eVkyVlRhVzVuYkdWUVlYTnpJRDBnSVRFc0lIUm9hWE11ZG1semFXSnNaU0E5SUNFd0xDQjBhR2x6TG5SdmJtVk5ZWEJ3WldRZ1BTQWhNQ3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5TENCMGFHbHpMblpsY25OcGIyNGdQU0F3TENCMGFHbHpMbDloYkhCb1lWUmxjM1FnUFNBd093b2dJQ0FnZlFvZ0lDQWdaMlYwSUdGc2NHaGhWR1Z6ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWVd4d2FHRlVaWE4wT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR0ZzY0doaFZHVnpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWVd4d2FHRlVaWE4wSUQ0Z01DQWhQU0JsSUQ0Z01DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt5d2dkR2hwY3k1ZllXeHdhR0ZVWlhOMElEMGdaVHNLSUNBZ0lIMEtJQ0FnSUc5dVFuVnBiR1FvS1NCN2ZRb2dJQ0FnYjI1Q1pXWnZjbVZTWlc1a1pYSW9LU0I3ZlFvZ0lDQWdiMjVDWldadmNtVkRiMjF3YVd4bEtDa2dlMzBLSUNBZ0lHTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZia0psWm05eVpVTnZiWEJwYkdVdWRHOVRkSEpwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZEZaaGJIVmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCMElHbHVJR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWhnVkVoU1JVVXVUV0YwWlhKcFlXdzZJSEJoY21GdFpYUmxjaUFuSkh0MGZTY2dhR0Z6SUhaaGJIVmxJRzltSUhWdVpHVm1hVzVsWkM1Z0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0dCVVNGSkZSUzVOWVhSbGNtbGhiRG9nSnlSN2RIMG5JR2x6SUc1dmRDQmhJSEJ5YjNCbGNuUjVJRzltSUZSSVVrVkZMaVI3ZEdocGN5NTBlWEJsZlM1Z0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dKaVlnYVM1cGMwTnZiRzl5SUQ4Z2FTNXpaWFFvYmlrZ09pQnBJQ1ltSUdrdWFYTldaV04wYjNJeklDWW1JRzRnSmlZZ2JpNXBjMVpsWTNSdmNqTWdQeUJwTG1OdmNIa29iaWtnT2lCMGFHbHpXM1JkSUQwZ2Jqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlNBOVBUMGdkbTlwWkNBd0lIeDhJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpT3dvZ0lDQWdJQ0FnSUhRZ0ppWWdLR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWek9pQjdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoWkdGMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQyTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJazFoZEdWeWFXRnNJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUnZjam9nSWsxaGRHVnlhV0ZzTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiaTUxZFdsa0lEMGdkR2hwY3k1MWRXbGtMQ0J1TG5SNWNHVWdQU0IwYUdsekxuUjVjR1VzSUhSb2FYTXVibUZ0WlNBaFBUMGdJaUlnSmlZZ0tHNHVibUZ0WlNBOUlIUm9hWE11Ym1GdFpTa3NJSFJvYVhNdVkyOXNiM0lnSmlZZ2RHaHBjeTVqYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG1OdmJHOXlJRDBnZEdocGN5NWpiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11Y205MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1Y205MVoyaHVaWE56SUQwZ2RHaHBjeTV5YjNWbmFHNWxjM01wTENCMGFHbHpMbTFsZEdGc2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbTFsZEdGc2JtVnpjeUE5SUhSb2FYTXViV1YwWVd4dVpYTnpLU3dnZEdocGN5NXphR1ZsYmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob1pXVnVJRDBnZEdocGN5NXphR1ZsYmlrc0lIUm9hWE11YzJobFpXNURiMnh2Y2lBbUppQjBhR2x6TG5Ob1pXVnVRMjlzYjNJdWFYTkRiMnh2Y2lBbUppQW9iaTV6YUdWbGJrTnZiRzl5SUQwZ2RHaHBjeTV6YUdWbGJrTnZiRzl5TG1kbGRFaGxlQ2dwS1N3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9aV1Z1VW05MVoyaHVaWE56SUQwZ2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5a3NJSFJvYVhNdVpXMXBjM05wZG1VZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlM1cGMwTnZiRzl5SUNZbUlDaHVMbVZ0YVhOemFYWmxJRDBnZEdocGN5NWxiV2x6YzJsMlpTNW5aWFJJWlhnb0tTa3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBaFBUMGdNU0FtSmlBb2JpNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrcExDQjBhR2x6TG5Od1pXTjFiR0Z5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEl1YVhORGIyeHZjaUFtSmlBb2JpNXpjR1ZqZFd4aGNpQTlJSFJvYVhNdWMzQmxZM1ZzWVhJdVoyVjBTR1Y0S0NrcExDQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVLU3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEpEYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0l1WjJWMFNHVjRLQ2twTENCMGFHbHpMbk5vYVc1cGJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vYVc1cGJtVnpjeUE5SUhSb2FYTXVjMmhwYm1sdVpYTnpLU3dnZEdocGN5NWpiR1ZoY21OdllYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWpiR1ZoY21OdllYUWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRDa3NJSFJvYVhNdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklEMGdkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNcExDQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZMnhsWVhKamIyRjBUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxMblJ2UVhKeVlYa29LU2tzSUhSb2FYTXVhWEpwWkdWelkyVnVZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVwY21sa1pYTmpaVzVqWlNBOUlIUm9hWE11YVhKcFpHVnpZMlZ1WTJVcExDQjBhR2x6TG1seWFXUmxjMk5sYm1ObFNVOVNJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVhWEpwWkdWelkyVnVZMlZKVDFJZ1BTQjBhR2x6TG1seWFXUmxjMk5sYm1ObFNVOVNLU3dnZEdocGN5NXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMUpoYm1kbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTlNZVzVuWlNBOUlIUm9hWE11YVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOU1lXNW5aU2tzSUhSb2FYTXVhWEpwWkdWelkyVnVZMlZOWVhBZ0ppWWdkR2hwY3k1cGNtbGtaWE5qWlc1alpVMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVhWEpwWkdWelkyVnVZMlZOWVhBZ1BTQjBhR2x6TG1seWFXUmxjMk5sYm1ObFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1cGNtbGtaWE5qWlc1alpWUm9hV05yYm1WemMwMWhjQ0FtSmlCMGFHbHpMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1cGNtbGtaWE5qWlc1alpWUm9hV05yYm1WemMwMWhjQ0E5SUhSb2FYTXVhWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbUZ1YVhOdmRISnZjSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVoYm1semIzUnliM0I1SUQwZ2RHaHBjeTVoYm1semIzUnliM0I1S1N3Z2RHaHBjeTVoYm1semIzUnliM0I1VW05MFlYUnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVoYm1semIzUnliM0I1VW05MFlYUnBiMjRnUFNCMGFHbHpMbUZ1YVhOdmRISnZjSGxTYjNSaGRHbHZiaWtzSUhSb2FYTXVZVzVwYzI5MGNtOXdlVTFoY0NBbUppQjBhR2x6TG1GdWFYTnZkSEp2Y0hsTllYQXVhWE5VWlhoMGRYSmxJQ1ltSUNodUxtRnVhWE52ZEhKdmNIbE5ZWEFnUFNCMGFHbHpMbUZ1YVhOdmRISnZjSGxOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbTFoY0NBbUppQjBhR2x6TG0xaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWJXRndJRDBnZEdocGN5NXRZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtMWhkR05oY0NBbUppQjBhR2x6TG0xaGRHTmhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHViV0YwWTJGd0lEMGdkR2hwY3k1dFlYUmpZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtRnNjR2hoVFdGd0lDWW1JSFJvYVhNdVlXeHdhR0ZOWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG1Gc2NHaGhUV0Z3SUQwZ2RHaHBjeTVoYkhCb1lVMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWJHbG5hSFJOWVhBZ0ppWWdkR2hwY3k1c2FXZG9kRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1YkdsbmFIUk5ZWEFnUFNCMGFHbHpMbXhwWjJoMFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0xDQnVMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTa3NJSFJvYVhNdVlXOU5ZWEFnSmlZZ2RHaHBjeTVoYjAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVlXOU5ZWEFnUFNCMGFHbHpMbUZ2VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrTENCdUxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTa3NJSFJvYVhNdVluVnRjRTFoY0NBbUppQjBhR2x6TG1KMWJYQk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbUoxYlhCTllYQWdQU0IwYUdsekxtSjFiWEJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVluVnRjRk5qWVd4bElEMGdkR2hwY3k1aWRXMXdVMk5oYkdVcExDQjBhR2x6TG01dmNtMWhiRTFoY0NBbUppQjBhR2x6TG01dmNtMWhiRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1Ym05eWJXRnNUV0Z3SUQwZ2RHaHBjeTV1YjNKdFlXeE5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJSFJvYVhNdWJtOXliV0ZzVFdGd1ZIbHdaU3dnYmk1dWIzSnRZV3hUWTJGc1pTQTlJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVXVkRzlCY25KaGVTZ3BLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtMQ0J1TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnYmk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLU3dnZEdocGN5NXliM1ZuYUc1bGMzTk5ZWEFnSmlZZ2RHaHBjeTV5YjNWbmFHNWxjM05OWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG5KdmRXZG9ibVZ6YzAxaGNDQTlJSFJvYVhNdWNtOTFaMmh1WlhOelRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1dFpYUmhiRzVsYzNOTllYQWdKaVlnZEdocGN5NXRaWFJoYkc1bGMzTk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbTFsZEdGc2JtVnpjMDFoY0NBOUlIUm9hWE11YldWMFlXeHVaWE56VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVsYldsemMybDJaVTFoY0NBbUppQjBhR2x6TG1WdGFYTnphWFpsVFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1bGJXbHpjMmwyWlUxaGNDQTlJSFJvYVhNdVpXMXBjM05wZG1WTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0lDWW1JSFJvYVhNdWMzQmxZM1ZzWVhKTllYQXVhWE5VWlhoMGRYSmxJQ1ltSUNodUxuTndaV04xYkdGeVRXRndJRDBnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdKaVlnZEdocGN5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnUFNCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lDWW1JSFJvYVhNdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0E5SUhSb2FYTXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11Wlc1MlRXRndJQ1ltSUhSb2FYTXVaVzUyVFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1bGJuWk5ZWEFnUFNCMGFHbHpMbVZ1ZGsxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkN3Z2RHaHBjeTVqYjIxaWFXNWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVZMjl0WW1sdVpTQTlJSFJvYVhNdVkyOXRZbWx1WlNrcExDQjBhR2x6TG1WdWRrMWhjRWx1ZEdWdWMybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTQTlJSFJvYVhNdVpXNTJUV0Z3U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTV5Wldac1pXTjBhWFpwZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1eVpXWnNaV04wYVhacGRIa2dQU0IwYUdsekxuSmxabXhsWTNScGRtbDBlU2tzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ2RHaHBjeTV5WldaeVlXTjBhVzl1VW1GMGFXOHBMQ0IwYUdsekxtZHlZV1JwWlc1MFRXRndJQ1ltSUhSb2FYTXVaM0poWkdsbGJuUk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbWR5WVdScFpXNTBUV0Z3SUQwZ2RHaHBjeTVuY21Ga2FXVnVkRTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1ZEhKaGJuTnRhWE56YVc5dUlEMGdkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNHBMQ0IwYUdsekxuUnlZVzV6YldsemMybHZiazFoY0NBbUppQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJrMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVkSEpoYm5OdGFYTnphVzl1VFdGd0lEMGdkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNU5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxuUm9hV05yYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuUm9hV05yYm1WemN5QTlJSFJvYVhNdWRHaHBZMnR1WlhOektTd2dkR2hwY3k1MGFHbGphMjVsYzNOTllYQWdKaVlnZEdocGN5NTBhR2xqYTI1bGMzTk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMblJvYVdOcmJtVnpjMDFoY0NBOUlIUm9hWE11ZEdocFkydHVaWE56VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUNFOVBTQjJiMmxrSURBZ0ppWWdkR2hwY3k1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElDRTlQU0F4SUM4Z01DQW1KaUFvYmk1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElEMGdkR2hwY3k1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObEtTd2dkR2hwY3k1aGRIUmxiblZoZEdsdmJrTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaUE5SUhSb2FYTXVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpNW5aWFJJWlhnb0tTa3NJSFJvYVhNdWMybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5wZW1VZ1BTQjBhR2x6TG5OcGVtVXBMQ0IwYUdsekxuTm9ZV1J2ZDFOcFpHVWdJVDA5SUc1MWJHd2dKaVlnS0c0dWMyaGhaRzkzVTJsa1pTQTlJSFJvYVhNdWMyaGhaRzkzVTJsa1pTa3NJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0cExDQjBhR2x6TG1Kc1pXNWthVzVuSUNFOVBTQlhhU0FtSmlBb2JpNWliR1Z1WkdsdVp5QTlJSFJvYVhNdVlteGxibVJwYm1jcExDQjBhR2x6TG5OcFpHVWdJVDA5SUVKdUlDWW1JQ2h1TG5OcFpHVWdQU0IwYUdsekxuTnBaR1VwTENCMGFHbHpMblpsY25SbGVFTnZiRzl5Y3lBOVBUMGdJVEFnSmlZZ0tHNHVkbVZ5ZEdWNFEyOXNiM0p6SUQwZ0lUQXBMQ0IwYUdsekxtOXdZV05wZEhrZ1BDQXhJQ1ltSUNodUxtOXdZV05wZEhrZ1BTQjBhR2x6TG05d1lXTnBkSGtwTENCMGFHbHpMblJ5WVc1emNHRnlaVzUwSUQwOVBTQWhNQ0FtSmlBb2JpNTBjbUZ1YzNCaGNtVnVkQ0E5SUNFd0tTd2diaTVrWlhCMGFFWjFibU1nUFNCMGFHbHpMbVJsY0hSb1JuVnVZeXdnYmk1a1pYQjBhRlJsYzNRZ1BTQjBhR2x6TG1SbGNIUm9WR1Z6ZEN3Z2JpNWtaWEIwYUZkeWFYUmxJRDBnZEdocGN5NWtaWEIwYUZkeWFYUmxMQ0J1TG1OdmJHOXlWM0pwZEdVZ1BTQjBhR2x6TG1OdmJHOXlWM0pwZEdVc0lHNHVjM1JsYm1OcGJGZHlhWFJsSUQwZ2RHaHBjeTV6ZEdWdVkybHNWM0pwZEdVc0lHNHVjM1JsYm1OcGJGZHlhWFJsVFdGemF5QTlJSFJvYVhNdWMzUmxibU5wYkZkeWFYUmxUV0Z6YXl3Z2JpNXpkR1Z1WTJsc1JuVnVZeUE5SUhSb2FYTXVjM1JsYm1OcGJFWjFibU1zSUc0dWMzUmxibU5wYkZKbFppQTlJSFJvYVhNdWMzUmxibU5wYkZKbFppd2diaTV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0IwYUdsekxuTjBaVzVqYVd4R2RXNWpUV0Z6YXl3Z2JpNXpkR1Z1WTJsc1JtRnBiQ0E5SUhSb2FYTXVjM1JsYm1OcGJFWmhhV3dzSUc0dWMzUmxibU5wYkZwR1lXbHNJRDBnZEdocGN5NXpkR1Z1WTJsc1drWmhhV3dzSUc0dWMzUmxibU5wYkZwUVlYTnpJRDBnZEdocGN5NXpkR1Z1WTJsc1dsQmhjM01zSUhSb2FYTXVjbTkwWVhScGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlCMGFHbHpMbkp2ZEdGMGFXOXVJQ0U5UFNBd0lDWW1JQ2h1TG5KdmRHRjBhVzl1SUQwZ2RHaHBjeTV5YjNSaGRHbHZiaWtzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZENBOVBUMGdJVEFnSmlZZ0tHNHVjRzlzZVdkdmJrOW1abk5sZENBOUlDRXdLU3dnZEdocGN5NXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlJQ0U5UFNBd0lDWW1JQ2h1TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ1BTQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJcExDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBaFBUMGdNQ0FtSmlBb2JpNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITWdQU0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5a3NJSFJvYVhNdWJHbHVaWGRwWkhSb0lDRTlQU0IyYjJsa0lEQWdKaVlnZEdocGN5NXNhVzVsZDJsa2RHZ2dJVDA5SURFZ0ppWWdLRzR1YkdsdVpYZHBaSFJvSUQwZ2RHaHBjeTVzYVc1bGQybGtkR2dwTENCMGFHbHpMbVJoYzJoVGFYcGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaR0Z6YUZOcGVtVWdQU0IwYUdsekxtUmhjMmhUYVhwbEtTd2dkR2hwY3k1bllYQlRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WjJGd1UybDZaU0E5SUhSb2FYTXVaMkZ3VTJsNlpTa3NJSFJvYVhNdWMyTmhiR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTV6WTJGc1pTQTlJSFJvYVhNdWMyTmhiR1VwTENCMGFHbHpMbVJwZEdobGNtbHVaeUE5UFQwZ0lUQWdKaVlnS0c0dVpHbDBhR1Z5YVc1bklEMGdJVEFwTENCMGFHbHpMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLRzR1WVd4d2FHRlVaWE4wSUQwZ2RHaHBjeTVoYkhCb1lWUmxjM1FwTENCMGFHbHpMbUZzY0doaFNHRnphQ0E5UFQwZ0lUQWdKaVlnS0c0dVlXeHdhR0ZJWVhOb0lEMGdJVEFwTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlQVDBnSVRBZ0ppWWdLRzR1WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnSVRBcExDQjBhR2x6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOVBUMGdJVEFnSmlZZ0tHNHVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnSVRBcExDQjBhR2x6TG1admNtTmxVMmx1WjJ4bFVHRnpjeUE5UFQwZ0lUQWdKaVlnS0c0dVptOXlZMlZUYVc1bmJHVlFZWE56SUQwZ0lUQXBMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlQVDBnSVRBZ0ppWWdLRzR1ZDJseVpXWnlZVzFsSUQwZ0lUQXBMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQStJREVnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3BMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ0lUMDlJQ0p5YjNWdVpDSWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ2tzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdJVDA5SUNKeWIzVnVaQ0lnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUtTd2dkR2hwY3k1bWJHRjBVMmhoWkdsdVp5QTlQVDBnSVRBZ0ppWWdLRzR1Wm14aGRGTm9ZV1JwYm1jZ1BTQWhNQ2tzSUhSb2FYTXVkbWx6YVdKc1pTQTlQVDBnSVRFZ0ppWWdLRzR1ZG1semFXSnNaU0E5SUNFeEtTd2dkR2hwY3k1MGIyNWxUV0Z3Y0dWa0lEMDlQU0FoTVNBbUppQW9iaTUwYjI1bFRXRndjR1ZrSUQwZ0lURXBMQ0IwYUdsekxtWnZaeUE5UFQwZ0lURWdKaVlnS0c0dVptOW5JRDBnSVRFcExDQlBZbXBsWTNRdWEyVjVjeWgwYUdsekxuVnpaWEpFWVhSaEtTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxuVnpaWEpFWVhSaElEMGdkR2hwY3k1MWMyVnlSR0YwWVNrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FTaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlCcGJpQnlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdjbHR2WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JqTG0xbGRHRmtZWFJoTENCaExuQjFjMmdvWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdhU2hsTG5SbGVIUjFjbVZ6S1N3Z1lTQTlJR2tvWlM1cGJXRm5aWE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlMbXhsYm1kMGFDQStJREFnSmlZZ0tHNHVkR1Y0ZEhWeVpYTWdQU0J5S1N3Z1lTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtbHRZV2RsY3lBOUlHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVZbXhsYm1ScGJtY2dQU0JsTG1Kc1pXNWthVzVuTENCMGFHbHpMbk5wWkdVZ1BTQmxMbk5wWkdVc0lIUm9hWE11ZG1WeWRHVjRRMjlzYjNKeklEMGdaUzUyWlhKMFpYaERiMnh2Y25Nc0lIUm9hWE11YjNCaFkybDBlU0E5SUdVdWIzQmhZMmwwZVN3Z2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENBOUlHVXVkSEpoYm5Od1lYSmxiblFzSUhSb2FYTXVZbXhsYm1SVGNtTWdQU0JsTG1Kc1pXNWtVM0pqTENCMGFHbHpMbUpzWlc1a1JITjBJRDBnWlM1aWJHVnVaRVJ6ZEN3Z2RHaHBjeTVpYkdWdVpFVnhkV0YwYVc5dUlEMGdaUzVpYkdWdVpFVnhkV0YwYVc5dUxDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0JsTG1Kc1pXNWtVM0pqUVd4d2FHRXNJSFJvYVhNdVlteGxibVJFYzNSQmJIQm9ZU0E5SUdVdVlteGxibVJFYzNSQmJIQm9ZU3dnZEdocGN5NWliR1Z1WkVWeGRXRjBhVzl1UVd4d2FHRWdQU0JsTG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVN3Z2RHaHBjeTVrWlhCMGFFWjFibU1nUFNCbExtUmxjSFJvUm5WdVl5d2dkR2hwY3k1a1pYQjBhRlJsYzNRZ1BTQmxMbVJsY0hSb1ZHVnpkQ3dnZEdocGN5NWtaWEIwYUZkeWFYUmxJRDBnWlM1a1pYQjBhRmR5YVhSbExDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCbExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQmxMbk4wWlc1amFXeEdkVzVqTENCMGFHbHpMbk4wWlc1amFXeFNaV1lnUFNCbExuTjBaVzVqYVd4U1pXWXNJSFJvYVhNdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ1pTNXpkR1Z1WTJsc1JuVnVZMDFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQmxMbk4wWlc1amFXeEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFSbUZwYkNBOUlHVXVjM1JsYm1OcGJGcEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFVR0Z6Y3lBOUlHVXVjM1JsYm1OcGJGcFFZWE56TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlNBOUlHVXVjM1JsYm1OcGJGZHlhWFJsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1amJHbHdjR2x1WjFCc1lXNWxjeXdnYmlBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMExteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdiaUE5SUc1bGR5QkJjbkpoZVNocEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2FUc2dLeXR5S1c1YmNsMGdQU0IwVzNKZExtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5zYVhCd2FXNW5VR3hoYm1WeklEMGdiaXdnZEdocGN5NWpiR2x3U1c1MFpYSnpaV04wYVc5dUlEMGdaUzVqYkdsd1NXNTBaWEp6WldOMGFXOXVMQ0IwYUdsekxtTnNhWEJUYUdGa2IzZHpJRDBnWlM1amJHbHdVMmhoWkc5M2N5d2dkR2hwY3k1emFHRmtiM2RUYVdSbElEMGdaUzV6YUdGa2IzZFRhV1JsTENCMGFHbHpMbU52Ykc5eVYzSnBkR1VnUFNCbExtTnZiRzl5VjNKcGRHVXNJSFJvYVhNdWNISmxZMmx6YVc5dUlEMGdaUzV3Y21WamFYTnBiMjRzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZENBOUlHVXVjRzlzZVdkdmJrOW1abk5sZEN3Z2RHaHBjeTV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5SUQwZ1pTNXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJR1V1Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6TENCMGFHbHpMbVJwZEdobGNtbHVaeUE5SUdVdVpHbDBhR1Z5YVc1bkxDQjBhR2x6TG1Gc2NHaGhWR1Z6ZENBOUlHVXVZV3h3YUdGVVpYTjBMQ0IwYUdsekxtRnNjR2hoU0dGemFDQTlJR1V1WVd4d2FHRklZWE5vTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlJR1V1WVd4d2FHRlViME52ZG1WeVlXZGxMQ0IwYUdsekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlJR1V1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoTENCMGFHbHpMbVp2Y21ObFUybHVaMnhsVUdGemN5QTlJR1V1Wm05eVkyVlRhVzVuYkdWUVlYTnpMQ0IwYUdsekxuWnBjMmxpYkdVZ1BTQmxMblpwYzJsaWJHVXNJSFJvYVhNdWRHOXVaVTFoY0hCbFpDQTlJR1V1ZEc5dVpVMWhjSEJsWkN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdsemNHOXpaU0lLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNuMHNJRk5rSUQwZ2V3b2dJQ0FnWVd4cFkyVmliSFZsT2lBeE5UYzVNak00TXl3S0lDQWdJR0Z1ZEdseGRXVjNhR2wwWlRvZ01UWTBORFF6TnpVc0NpQWdJQ0JoY1hWaE9pQTJOVFV6TlN3S0lDQWdJR0Z4ZFdGdFlYSnBibVU2SURnek9EZzFOalFzQ2lBZ0lDQmhlblZ5WlRvZ01UVTNPVFF4TnpVc0NpQWdJQ0JpWldsblpUb2dNVFl4TVRreU5qQXNDaUFnSUNCaWFYTnhkV1U2SURFMk56Y3dNalEwTEFvZ0lDQWdZbXhoWTJzNklEQXNDaUFnSUNCaWJHRnVZMmhsWkdGc2JXOXVaRG9nTVRZM056SXdORFVzQ2lBZ0lDQmliSFZsT2lBeU5UVXNDaUFnSUNCaWJIVmxkbWx2YkdWME9pQTVNRFUxTWpBeUxBb2dJQ0FnWW5KdmQyNDZJREV3T0RJME1qTTBMQW9nSUNBZ1luVnliSGwzYjI5a09pQXhORFU1TmpJek1Td0tJQ0FnSUdOaFpHVjBZbXgxWlRvZ05qSTJOalV5T0N3S0lDQWdJR05vWVhKMGNtVjFjMlU2SURnek9EZ3pOVElzQ2lBZ0lDQmphRzlqYjJ4aGRHVTZJREV6TnpnNU5EY3dMQW9nSUNBZ1kyOXlZV3c2SURFMk56UTBNamN5TEFvZ0lDQWdZMjl5Ym1ac2IzZGxjbUpzZFdVNklEWTFPVEU1T0RFc0NpQWdJQ0JqYjNKdWMybHNhem9nTVRZM056VXpPRGdzQ2lBZ0lDQmpjbWx0YzI5dU9pQXhORFF5TXpFd01Dd0tJQ0FnSUdONVlXNDZJRFkxTlRNMUxBb2dJQ0FnWkdGeWEySnNkV1U2SURFek9Td0tJQ0FnSUdSaGNtdGplV0Z1T2lBek5UY3lNeXdLSUNBZ0lHUmhjbXRuYjJ4a1pXNXliMlE2SURFeU1Ea3lPVE01TEFvZ0lDQWdaR0Z5YTJkeVlYazZJREV4TVRFNU1ERTNMQW9nSUNBZ1pHRnlhMmR5WldWdU9pQXlOVFl3TUN3S0lDQWdJR1JoY210bmNtVjVPaUF4TVRFeE9UQXhOeXdLSUNBZ0lHUmhjbXRyYUdGcmFUb2dNVEkwTXpNeU5Ua3NDaUFnSUNCa1lYSnJiV0ZuWlc1MFlUb2dPVEV3T1RZME15d0tJQ0FnSUdSaGNtdHZiR2wyWldkeVpXVnVPaUExTlRrM09UazVMQW9nSUNBZ1pHRnlhMjl5WVc1blpUb2dNVFkzTkRjMU1qQXNDaUFnSUNCa1lYSnJiM0pqYUdsa09pQXhNREEwTURBeE1pd0tJQ0FnSUdSaGNtdHlaV1E2SURreE1EazFNRFFzQ2lBZ0lDQmtZWEpyYzJGc2JXOXVPaUF4TlRNd09EUXhNQ3dLSUNBZ0lHUmhjbXR6WldGbmNtVmxiam9nT1RReE9Ua3hPU3dLSUNBZ0lHUmhjbXR6YkdGMFpXSnNkV1U2SURRM016UXpORGNzQ2lBZ0lDQmtZWEpyYzJ4aGRHVm5jbUY1T2lBek1UQXdORGsxTEFvZ0lDQWdaR0Z5YTNOc1lYUmxaM0psZVRvZ016RXdNRFE1TlN3S0lDQWdJR1JoY210MGRYSnhkVzlwYzJVNklEVXlPVFExTEFvZ0lDQWdaR0Z5YTNacGIyeGxkRG9nT1RZNU9UVXpPU3dLSUNBZ0lHUmxaWEJ3YVc1ck9pQXhOamN4TmprME55d0tJQ0FnSUdSbFpYQnphM2xpYkhWbE9pQTBPVEUxTVN3S0lDQWdJR1JwYldkeVlYazZJRFk1TURneU5qVXNDaUFnSUNCa2FXMW5jbVY1T2lBMk9UQTRNalkxTEFvZ0lDQWdaRzlrWjJWeVlteDFaVG9nTWpBd016RTVPU3dLSUNBZ0lHWnBjbVZpY21samF6b2dNVEUyTnpReE5EWXNDaUFnSUNCbWJHOXlZV3gzYUdsMFpUb2dNVFkzTnpVNU1qQXNDaUFnSUNCbWIzSmxjM1JuY21WbGJqb2dNakkyTXpnME1pd0tJQ0FnSUdaMVkyaHphV0U2SURFMk56RXhPVE0xTEFvZ0lDQWdaMkZwYm5OaWIzSnZPaUF4TkRRM05EUTJNQ3dLSUNBZ0lHZG9iM04wZDJocGRHVTZJREUyTXpFMk5qY3hMQW9nSUNBZ1oyOXNaRG9nTVRZM05qWTNNakFzQ2lBZ0lDQm5iMnhrWlc1eWIyUTZJREUwTXpJNU1USXdMQW9nSUNBZ1ozSmhlVG9nT0RReU1UVXdOQ3dLSUNBZ0lHZHlaV1Z1T2lBek1qYzJPQ3dLSUNBZ0lHZHlaV1Z1ZVdWc2JHOTNPaUF4TVRRd016QTFOU3dLSUNBZ0lHZHlaWGs2SURnME1qRTFNRFFzQ2lBZ0lDQm9iMjVsZVdSbGR6b2dNVFUzT1RReE5qQXNDaUFnSUNCb2IzUndhVzVyT2lBeE5qY3pPRGMwTUN3S0lDQWdJR2x1WkdsaGJuSmxaRG9nTVRNME5UZzFNalFzQ2lBZ0lDQnBibVJwWjI4NklEUTVNVFV6TXpBc0NpQWdJQ0JwZG05eWVUb2dNVFkzTnpjeU1EQXNDaUFnSUNCcmFHRnJhVG9nTVRVM09EYzJOakFzQ2lBZ0lDQnNZWFpsYm1SbGNqb2dNVFV4TXpJME1UQXNDaUFnSUNCc1lYWmxibVJsY21Kc2RYTm9PaUF4TmpjM016TTJOU3dLSUNBZ0lHeGhkMjVuY21WbGJqb2dPREU1TURrM05pd0tJQ0FnSUd4bGJXOXVZMmhwWm1admJqb2dNVFkzTnpVNE9EVXNDaUFnSUNCc2FXZG9kR0pzZFdVNklERXhNemt6TWpVMExBb2dJQ0FnYkdsbmFIUmpiM0poYkRvZ01UVTNOakUxTXpZc0NpQWdJQ0JzYVdkb2RHTjVZVzQ2SURFME56UTFOVGs1TEFvZ0lDQWdiR2xuYUhSbmIyeGtaVzV5YjJSNVpXeHNiM2M2SURFMk5EUTRNakV3TEFvZ0lDQWdiR2xuYUhSbmNtRjVPaUF4TXpnNE1qTXlNeXdLSUNBZ0lHeHBaMmgwWjNKbFpXNDZJRGswT1RneU5UWXNDaUFnSUNCc2FXZG9kR2R5WlhrNklERXpPRGd5TXpJekxBb2dJQ0FnYkdsbmFIUndhVzVyT2lBeE5qYzFPRFEyTlN3S0lDQWdJR3hwWjJoMGMyRnNiVzl1T2lBeE5qYzFNamMyTWl3S0lDQWdJR3hwWjJoMGMyVmhaM0psWlc0NklESXhOREk0T1RBc0NpQWdJQ0JzYVdkb2RITnJlV0pzZFdVNklEZzVNREF6TkRZc0NpQWdJQ0JzYVdkb2RITnNZWFJsWjNKaGVUb2dOemd6TXpjMU15d0tJQ0FnSUd4cFoyaDBjMnhoZEdWbmNtVjVPaUEzT0RNek56VXpMQW9nSUNBZ2JHbG5hSFJ6ZEdWbGJHSnNkV1U2SURFeE5UZzBOek0wTEFvZ0lDQWdiR2xuYUhSNVpXeHNiM2M2SURFMk56YzNNVGcwTEFvZ0lDQWdiR2x0WlRvZ05qVXlPREFzQ2lBZ0lDQnNhVzFsWjNKbFpXNDZJRE16TWprek16QXNDaUFnSUNCc2FXNWxiam9nTVRZME5EVTJOekFzQ2lBZ0lDQnRZV2RsYm5SaE9pQXhOamN4TVRrek5Td0tJQ0FnSUcxaGNtOXZiam9nT0RNNE9EWXdPQ3dLSUNBZ0lHMWxaR2wxYldGeGRXRnRZWEpwYm1VNklEWTNNemN6TWpJc0NpQWdJQ0J0WldScGRXMWliSFZsT2lBeU1EVXNDaUFnSUNCdFpXUnBkVzF2Y21Ob2FXUTZJREV5TWpFeE5qWTNMQW9nSUNBZ2JXVmthWFZ0Y0hWeWNHeGxPaUE1TmpZeU5qZ3pMQW9nSUNBZ2JXVmthWFZ0YzJWaFozSmxaVzQ2SURNNU56Z3dPVGNzQ2lBZ0lDQnRaV1JwZFcxemJHRjBaV0pzZFdVNklEZ3dPRGMzT1RBc0NpQWdJQ0J0WldScGRXMXpjSEpwYm1kbmNtVmxiam9nTmpReE5UUXNDaUFnSUNCdFpXUnBkVzEwZFhKeGRXOXBjMlU2SURRM056SXpNREFzQ2lBZ0lDQnRaV1JwZFcxMmFXOXNaWFJ5WldRNklERXpNRFEzTVRjekxBb2dJQ0FnYldsa2JtbG5hSFJpYkhWbE9pQXhOalEwT1RFeUxBb2dJQ0FnYldsdWRHTnlaV0Z0T2lBeE5qRXlNVGcxTUN3S0lDQWdJRzFwYzNSNWNtOXpaVG9nTVRZM056QXlOek1zQ2lBZ0lDQnRiMk5qWVhOcGJqb2dNVFkzTnpBeU1qa3NDaUFnSUNCdVlYWmhhbTkzYUdsMFpUb2dNVFkzTmpnMk9EVXNDaUFnSUNCdVlYWjVPaUF4TWpnc0NpQWdJQ0J2YkdSc1lXTmxPaUF4TmpZME16VTFPQ3dLSUNBZ0lHOXNhWFpsT2lBNE5ESXhNemMyTEFvZ0lDQWdiMnhwZG1Wa2NtRmlPaUEzTURRNE56TTVMQW9nSUNBZ2IzSmhibWRsT2lBeE5qYzFNemt5TUN3S0lDQWdJRzl5WVc1blpYSmxaRG9nTVRZM01qa3pORFFzQ2lBZ0lDQnZjbU5vYVdRNklERTBNekUxTnpNMExBb2dJQ0FnY0dGc1pXZHZiR1JsYm5KdlpEb2dNVFUyTlRjeE16QXNDaUFnSUNCd1lXeGxaM0psWlc0NklERXdNREkxT0Rnd0xBb2dJQ0FnY0dGc1pYUjFjbkYxYjJselpUb2dNVEUxTWprNU5qWXNDaUFnSUNCd1lXeGxkbWx2YkdWMGNtVmtPaUF4TkRNNE1USXdNeXdLSUNBZ0lIQmhjR0Y1WVhkb2FYQTZJREUyTnpjek1EYzNMQW9nSUNBZ2NHVmhZMmh3ZFdabU9pQXhOamMyTnpZM015d0tJQ0FnSUhCbGNuVTZJREV6TkRZNE9Ua3hMQW9nSUNBZ2NHbHVhem9nTVRZM05qRXdNelVzQ2lBZ0lDQndiSFZ0T2lBeE5EVXlORFl6Tnl3S0lDQWdJSEJ2ZDJSbGNtSnNkV1U2SURFeE5Ua3hPVEV3TEFvZ0lDQWdjSFZ5Y0d4bE9pQTRNemc0TnpNMkxBb2dJQ0FnY21WaVpXTmpZWEIxY25Cc1pUb2dOalk1TnpnNE1Td0tJQ0FnSUhKbFpEb2dNVFkzTVRFMk9EQXNDaUFnSUNCeWIzTjVZbkp2ZDI0NklERXlNelUzTlRFNUxBb2dJQ0FnY205NVlXeGliSFZsT2lBME1qZzJPVFExTEFvZ0lDQWdjMkZrWkd4bFluSnZkMjQ2SURreE1qY3hPRGNzQ2lBZ0lDQnpZV3h0YjI0NklERTJOREUyT0RneUxBb2dJQ0FnYzJGdVpIbGljbTkzYmpvZ01UWXdNekk0TmpRc0NpQWdJQ0J6WldGbmNtVmxiam9nTXpBMU1ETXlOeXdLSUNBZ0lITmxZWE5vWld4c09pQXhOamMzTkRZek9Dd0tJQ0FnSUhOcFpXNXVZVG9nTVRBMU1EWTNPVGNzQ2lBZ0lDQnphV3gyWlhJNklERXlOak15TWpVMkxBb2dJQ0FnYzJ0NVlteDFaVG9nT0Rrd01ETXpNU3dLSUNBZ0lITnNZWFJsWW14MVpUb2dOamszTURBMk1Td0tJQ0FnSUhOc1lYUmxaM0poZVRvZ056TTNNamswTkN3S0lDQWdJSE5zWVhSbFozSmxlVG9nTnpNM01qazBOQ3dLSUNBZ0lITnViM2M2SURFMk56YzFPVE13TEFvZ0lDQWdjM0J5YVc1blozSmxaVzQ2SURZMU5EQTNMQW9nSUNBZ2MzUmxaV3hpYkhWbE9pQTBOakl3T1Rnd0xBb2dJQ0FnZEdGdU9pQXhNemd3T0RjNE1Dd0tJQ0FnSUhSbFlXdzZJRE15T0RrMkxBb2dJQ0FnZEdocGMzUnNaVG9nTVRReU1EUTRPRGdzQ2lBZ0lDQjBiMjFoZEc4NklERTJOek0zTURrMUxBb2dJQ0FnZEhWeWNYVnZhWE5sT2lBME1qVXhPRFUyTEFvZ0lDQWdkbWx2YkdWME9pQXhOVFl6TVRBNE5pd0tJQ0FnSUhkb1pXRjBPaUF4TmpFeE16TXpNU3dLSUNBZ0lIZG9hWFJsT2lBeE5qYzNOekl4TlN3S0lDQWdJSGRvYVhSbGMyMXZhMlU2SURFMk1URTVNamcxTEFvZ0lDQWdlV1ZzYkc5M09pQXhOamMzTmprMk1Dd0tJQ0FnSUhsbGJHeHZkMmR5WldWdU9pQXhNREUwTlRBM05BcDlMQ0JEYmlBOUlIc0tJQ0FnSUdnNklEQXNDaUFnSUNCek9pQXdMQW9nSUNBZ2JEb2dNQXA5TENCTGN5QTlJSHNLSUNBZ0lHZzZJREFzQ2lBZ0lDQnpPaUF3TEFvZ0lDQWdiRG9nTUFwOU93cG1kVzVqZEdsdmJpQnhZU2h6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlIUWdQQ0F3SUNZbUlDaDBJQ3M5SURFcExDQjBJRDRnTVNBbUppQW9kQ0F0UFNBeEtTd2dkQ0E4SURFZ0x5QTJJRDhnY3pFZ0t5QW9aU0F0SUhNeEtTQXFJRFlnS2lCMElEb2dkQ0E4SURFZ0x5QXlJRDhnWlNBNklIUWdQQ0F5SUM4Z015QS9JSE14SUNzZ0tHVWdMU0J6TVNrZ0tpQTJJQ29nS0RJZ0x5QXpJQzBnZENrZ09pQnpNVHNLZlFwMllYSWdjR1VnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwTnZiRzl5SUQwZ0lUQXNJSFJvYVhNdWNpQTlJREVzSUhSb2FYTXVaeUE5SURFc0lIUm9hWE11WWlBOUlERXNJSFJvYVhNdWMyVjBLR1VzSUhRc0lHNHBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdkbTlwWkNBd0lDWW1JRzRnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dKaVlnYVM1cGMwTnZiRzl5SUQ4Z2RHaHBjeTVqYjNCNUtHa3BJRG9nZEhsd1pXOW1JR2tnUFQwZ0ltNTFiV0psY2lJZ1B5QjBhR2x6TG5ObGRFaGxlQ2hwS1NBNklIUjVjR1Z2WmlCcElEMDlJQ0p6ZEhKcGJtY2lJQ1ltSUhSb2FYTXVjMlYwVTNSNWJHVW9hU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFJvYVhNdWMyVjBVa2RDS0dVc0lIUXNJRzRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlN3Z2RHaHBjeTVuSUQwZ1pTd2dkR2hwY3k1aUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVobGVDaGxMQ0IwSUQwZ2RuUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0E5SUUxaGRHZ3VabXh2YjNJb1pTa3NJSFJvYVhNdWNpQTlJQ2hsSUQ0K0lERTJJQ1lnTWpVMUtTQXZJREkxTlN3Z2RHaHBjeTVuSUQwZ0tHVWdQajRnT0NBbUlESTFOU2tnTHlBeU5UVXNJSFJvYVhNdVlpQTlJQ2hsSUNZZ01qVTFLU0F2SURJMU5Td2dVV1V1ZEc5WGIzSnJhVzVuUTI5c2IzSlRjR0ZqWlNoMGFHbHpMQ0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGSkhRaWhsTENCMExDQnVMQ0JwSUQwZ1VXVXVkMjl5YTJsdVowTnZiRzl5VTNCaFkyVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdaU3dnZEdocGN5NW5JRDBnZEN3Z2RHaHBjeTVpSUQwZ2Jpd2dVV1V1ZEc5WGIzSnJhVzVuUTI5c2IzSlRjR0ZqWlNoMGFHbHpMQ0JwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFaFRUQ2hsTENCMExDQnVMQ0JwSUQwZ1VXVXVkMjl5YTJsdVowTnZiRzl5VTNCaFkyVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlJRmxqS0dVc0lERXBMQ0IwSUQwZ1kzUW9kQ3dnTUN3Z01Ta3NJRzRnUFNCamRDaHVMQ0F3TENBeEtTd2dkQ0E5UFQwZ01Da2dkR2hwY3k1eUlEMGdkR2hwY3k1bklEMGdkR2hwY3k1aUlEMGdianNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0J1SUR3OUlDNDFJRDhnYmlBcUlDZ3hJQ3NnZENrZ09pQnVJQ3NnZENBdElHNGdLaUIwTENCaElEMGdNaUFxSUc0Z0xTQnlPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbklnUFNCeFlTaGhMQ0J5TENCbElDc2dNU0F2SURNcExDQjBhR2x6TG1jZ1BTQnhZU2hoTENCeUxDQmxLU3dnZEdocGN5NWlJRDBnY1dFb1lTd2djaXdnWlNBdElERWdMeUF6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZGbExuUnZWMjl5YTJsdVowTnZiRzl5VTNCaFkyVW9kR2hwY3l3Z2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUZEhsc1pTaGxMQ0IwSUQwZ2RuUXBJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ1S0hJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBaFBUMGdkbTlwWkNBd0lDWW1JSEJoY25ObFJteHZZWFFvY2lrZ1BDQXhJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVEyOXNiM0k2SUVGc2NHaGhJR052YlhCdmJtVnVkQ0J2WmlBaUlDc2daU0FySUNJZ2QybHNiQ0JpWlNCcFoyNXZjbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYVRzS0lDQWdJQ0FnSUNCcFppQW9hU0E5SUM5ZUtGeDNLeWxjS0NoYlhsd3BYU29wWENrdkxtVjRaV01vWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISXNJR0VnUFNCcFd6RmRMQ0J2SUQwZ2FWc3lYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0dFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpY21kaUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW5KblltRWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDBnTDE1Y2N5b29YR1FyS1Z4ektpeGNjeW9vWEdRcktWeHpLaXhjY3lvb1hHUXJLVnh6S2lnL09peGNjeW9vWEdRcVhDNC9YR1FyS1Z4ektpay9KQzh1WlhobFl5aHZLU2tnY21WMGRYSnVJRzRvY2xzMFhTa3NJSFJvYVhNdWMyVjBVa2RDS0UxaGRHZ3ViV2x1S0RJMU5Td2djR0Z5YzJWSmJuUW9jbHN4WFN3Z01UQXBLU0F2SURJMU5Td2dUV0YwYUM1dGFXNG9NalUxTENCd1lYSnpaVWx1ZENoeVd6SmRMQ0F4TUNrcElDOGdNalUxTENCTllYUm9MbTFwYmlneU5UVXNJSEJoY25ObFNXNTBLSEpiTTEwc0lERXdLU2tnTHlBeU5UVXNJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwZ0wxNWNjeW9vWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3NwWENWY2N5b3NYSE1xS0Z4a0t5bGNKVnh6S2lnL09peGNjeW9vWEdRcVhDNC9YR1FyS1Z4ektpay9KQzh1WlhobFl5aHZLU2tnY21WMGRYSnVJRzRvY2xzMFhTa3NJSFJvYVhNdWMyVjBVa2RDS0UxaGRHZ3ViV2x1S0RFd01Dd2djR0Z5YzJWSmJuUW9jbHN4WFN3Z01UQXBLU0F2SURFd01Dd2dUV0YwYUM1dGFXNG9NVEF3TENCd1lYSnpaVWx1ZENoeVd6SmRMQ0F4TUNrcElDOGdNVEF3TENCTllYUm9MbTFwYmlneE1EQXNJSEJoY25ObFNXNTBLSEpiTTEwc0lERXdLU2tnTHlBeE1EQXNJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlhSE5zSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbWh6YkdFaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMGdMMTVjY3lvb1hHUXFYQzQvWEdRcktWeHpLaXhjY3lvb1hHUXFYQzQvWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3BjTGo5Y1pDc3BYQ1ZjY3lvb1B6b3NYSE1xS0Z4a0tsd3VQMXhrS3lsY2N5b3BQeVF2TG1WNFpXTW9ieWtwSUhKbGRIVnliaUJ1S0hKYk5GMHBMQ0IwYUdsekxuTmxkRWhUVENod1lYSnpaVVpzYjJGMEtISmJNVjBwSUM4Z016WXdMQ0J3WVhKelpVWnNiMkYwS0hKYk1sMHBJQzhnTVRBd0xDQndZWEp6WlVac2IyRjBLSEpiTTEwcElDOGdNVEF3TENCMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVEYjJ4dmNqb2dWVzVyYm05M2JpQmpiMnh2Y2lCdGIyUmxiQ0FpSUNzZ1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHa2dQU0F2WGx3aktGdEJMVVpoTFdaY1pGMHJLU1F2TG1WNFpXTW9aU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnBXekZkTENCaElEMGdjaTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNBektTQnlaWFIxY200Z2RHaHBjeTV6WlhSU1IwSW9jR0Z5YzJWSmJuUW9jaTVqYUdGeVFYUW9NQ2tzSURFMktTQXZJREUxTENCd1lYSnpaVWx1ZENoeUxtTm9ZWEpCZENneEtTd2dNVFlwSUM4Z01UVXNJSEJoY25ObFNXNTBLSEl1WTJoaGNrRjBLRElwTENBeE5pa2dMeUF4TlN3Z2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNBMktTQnlaWFIxY200Z2RHaHBjeTV6WlhSSVpYZ29jR0Z5YzJWSmJuUW9jaXdnTVRZcExDQjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNURiMnh2Y2pvZ1NXNTJZV3hwWkNCb1pYZ2dZMjlzYjNJZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pTQW1KaUJsTG14bGJtZDBhQ0ErSURBcElISmxkSFZ5YmlCMGFHbHpMbk5sZEVOdmJHOXlUbUZ0WlNobExDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRU52Ykc5eVRtRnRaU2hsTENCMElEMGdkblFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZOa1cyVXVkRzlNYjNkbGNrTmhjMlVvS1YwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0lUMDlJSFp2YVdRZ01DQS9JSFJvYVhNdWMyVjBTR1Y0S0c0c0lIUXBJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RGIyeHZjam9nVlc1cmJtOTNiaUJqYjJ4dmNpQWlJQ3NnWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTV5TENCMGFHbHpMbWNzSUhSb2FYTXVZaWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlM1eUxDQjBhR2x6TG1jZ1BTQmxMbWNzSUhSb2FYTXVZaUE5SUdVdVlpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGxUVWtkQ1ZHOU1hVzVsWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQllhU2hsTG5JcExDQjBhR2x6TG1jZ1BTQllhU2hsTG1jcExDQjBhR2x6TG1JZ1BTQllhU2hsTG1JcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVXhwYm1WaGNsUnZVMUpIUWlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlFUmhLR1V1Y2lrc0lIUm9hWE11WnlBOUlFUmhLR1V1Wnlrc0lIUm9hWE11WWlBOUlFUmhLR1V1WWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIyNTJaWEowVTFKSFFsUnZUR2x1WldGeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmNIbFRVa2RDVkc5TWFXNWxZWElvZEdocGN5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjUyWlhKMFRHbHVaV0Z5Vkc5VFVrZENLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZjSGxNYVc1bFlYSlViMU5TUjBJb2RHaHBjeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSSVpYZ29aU0E5SUhaMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGRmxMbVp5YjIxWGIzSnJhVzVuUTI5c2IzSlRjR0ZqWlNoVWRDNWpiM0I1S0hSb2FYTXBMQ0JsS1N3Z1RXRjBhQzV5YjNWdVpDaGpkQ2hVZEM1eUlDb2dNalUxTENBd0xDQXlOVFVwS1NBcUlEWTFOVE0ySUNzZ1RXRjBhQzV5YjNWdVpDaGpkQ2hVZEM1bklDb2dNalUxTENBd0xDQXlOVFVwS1NBcUlESTFOaUFySUUxaGRHZ3VjbTkxYm1Rb1kzUW9WSFF1WWlBcUlESTFOU3dnTUN3Z01qVTFLU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUklaWGhUZEhKcGJtY29aU0E5SUhaMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ2lNREF3TURBd0lpQXJJSFJvYVhNdVoyVjBTR1Y0S0dVcExuUnZVM1J5YVc1bktERTJLU2t1YzJ4cFkyVW9MVFlwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBTRk5NS0dVc0lIUWdQU0JSWlM1M2IzSnJhVzVuUTI5c2IzSlRjR0ZqWlNrZ2V3b2dJQ0FnSUNBZ0lGRmxMbVp5YjIxWGIzSnJhVzVuUTI5c2IzSlRjR0ZqWlNoVWRDNWpiM0I1S0hSb2FYTXBMQ0IwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZSMExuSXNJR2tnUFNCVWRDNW5MQ0J5SUQwZ1ZIUXVZaXdnWVNBOUlFMWhkR2d1YldGNEtHNHNJR2tzSUhJcExDQnZJRDBnVFdGMGFDNXRhVzRvYml3Z2FTd2djaWtzSUdNc0lHd3NJR2dnUFNBb2J5QXJJR0VwSUM4Z01qc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBOVBUMGdZU2tnWXlBOUlEQXNJR3dnUFNBd093b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHRWdMU0J2T3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb2JDQTlJR2dnUEQwZ0xqVWdQeUIxSUM4Z0tHRWdLeUJ2S1NBNklIVWdMeUFvTWlBdElHRWdMU0J2S1N3Z1lTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUc0NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeUE5SUNocElDMGdjaWtnTHlCMUlDc2dLR2tnUENCeUlEOGdOaUE2SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTWdQU0FvY2lBdElHNHBJQzhnZFNBcklESTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeUE5SUNodUlDMGdhU2tnTHlCMUlDc2dORHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JqSUM4OUlEWTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbWdnUFNCakxDQmxMbk1nUFNCc0xDQmxMbXdnUFNCb0xDQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVrZENLR1VzSUhRZ1BTQlJaUzUzYjNKcmFXNW5RMjlzYjNKVGNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJSWlM1bWNtOXRWMjl5YTJsdVowTnZiRzl5VTNCaFkyVW9WSFF1WTI5d2VTaDBhR2x6S1N3Z2RDa3NJR1V1Y2lBOUlGUjBMbklzSUdVdVp5QTlJRlIwTG1jc0lHVXVZaUE5SUZSMExtSXNJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUlRkSGxzWlNobElEMGdkblFwSUhzS0lDQWdJQ0FnSUNCUlpTNW1jbTl0VjI5eWEybHVaME52Ykc5eVUzQmhZMlVvVkhRdVkyOXdlU2gwYUdsektTd2daU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JVZEM1eUxDQnVJRDBnVkhRdVp5d2dhU0E5SUZSMExtSTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdJVDA5SUhaMElEOGdZR052Ykc5eUtDUjdaWDBnSkh0MExuUnZSbWw0WldRb015bDlJQ1I3Ymk1MGIwWnBlR1ZrS0RNcGZTQWtlMmt1ZEc5R2FYaGxaQ2d6S1gwcFlDQTZJR0J5WjJJb0pIdE5ZWFJvTG5KdmRXNWtLSFFnS2lBeU5UVXBmU3drZTAxaGRHZ3VjbTkxYm1Rb2JpQXFJREkxTlNsOUxDUjdUV0YwYUM1eWIzVnVaQ2hwSUNvZ01qVTFLWDBwWURzS0lDQWdJSDBLSUNBZ0lHOW1abk5sZEVoVFRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFNGTk1LRU51S1N3Z2RHaHBjeTV6WlhSSVUwd29RMjR1YUNBcklHVXNJRU51TG5NZ0t5QjBMQ0JEYmk1c0lDc2diaWs3Q2lBZ0lDQjlDaUFnSUNCaFpHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdLejBnWlM1eUxDQjBhR2x6TG1jZ0t6MGdaUzVuTENCMGFHbHpMbUlnS3owZ1pTNWlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrUTI5c2IzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1pTNXlJQ3NnZEM1eUxDQjBhR2x6TG1jZ1BTQmxMbWNnS3lCMExtY3NJSFJvYVhNdVlpQTlJR1V1WWlBcklIUXVZaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUFyUFNCbExDQjBhR2x6TG1jZ0t6MGdaU3dnZEdocGN5NWlJQ3M5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JOWVhSb0xtMWhlQ2d3TENCMGFHbHpMbklnTFNCbExuSXBMQ0IwYUdsekxtY2dQU0JOWVhSb0xtMWhlQ2d3TENCMGFHbHpMbWNnTFNCbExtY3BMQ0IwYUdsekxtSWdQU0JOWVhSb0xtMWhlQ2d3TENCMGFHbHpMbUlnTFNCbExtSXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdLajBnWlM1eUxDQjBhR2x6TG1jZ0tqMGdaUzVuTENCMGFHbHpMbUlnS2owZ1pTNWlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ0tqMGdaU3dnZEdocGN5NW5JQ285SUdVc0lIUm9hWE11WWlBcVBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQXJQU0FvWlM1eUlDMGdkR2hwY3k1eUtTQXFJSFFzSUhSb2FYTXVaeUFyUFNBb1pTNW5JQzBnZEdocGN5NW5LU0FxSUhRc0lIUm9hWE11WWlBclBTQW9aUzVpSUMwZ2RHaHBjeTVpS1NBcUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnNaWEp3UTI5c2IzSnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdaUzV5SUNzZ0tIUXVjaUF0SUdVdWNpa2dLaUJ1TENCMGFHbHpMbWNnUFNCbExtY2dLeUFvZEM1bklDMGdaUzVuS1NBcUlHNHNJSFJvYVhNdVlpQTlJR1V1WWlBcklDaDBMbUlnTFNCbExtSXBJQ29nYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQklVMHdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVoyVjBTRk5NS0VOdUtTd2daUzVuWlhSSVUwd29TM01wT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZVhNb1EyNHVhQ3dnUzNNdWFDd2dkQ2tzSUdrZ1BTQjVjeWhEYmk1ekxDQkxjeTV6TENCMEtTd2djaUE5SUhsektFTnVMbXdzSUV0ekxtd3NJSFFwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRWhUVENodUxDQnBMQ0J5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFXWldOMGIzSXpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlM1NExDQjBhR2x6TG1jZ1BTQmxMbmtzSUhSb2FYTXVZaUE5SUdVdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDRNeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbklzSUc0Z1BTQjBhR2x6TG1jc0lHa2dQU0IwYUdsekxtSXNJSElnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCeVd6QmRJQ29nZENBcklISmJNMTBnS2lCdUlDc2djbHMyWFNBcUlHa3NJSFJvYVhNdVp5QTlJSEpiTVYwZ0tpQjBJQ3NnY2xzMFhTQXFJRzRnS3lCeVd6ZGRJQ29nYVN3Z2RHaHBjeTVpSUQwZ2Nsc3lYU0FxSUhRZ0t5QnlXelZkSUNvZ2JpQXJJSEpiT0YwZ0tpQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV5SUQwOVBTQjBhR2x6TG5JZ0ppWWdaUzVuSUQwOVBTQjBhR2x6TG1jZ0ppWWdaUzVpSUQwOVBTQjBhR2x6TG1JN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdaVnQwWFN3Z2RHaHBjeTVuSUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11WWlBOUlHVmJkQ0FySURKZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5Jc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1bkxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdVlpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTG1kbGRGZ29kQ2tzSUhSb2FYTXVaeUE5SUdVdVoyVjBXU2gwS1N3Z2RHaHBjeTVpSUQwZ1pTNW5aWFJhS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVobGVDZ3BPd29nSUNBZ2ZRb2dJQ0FnS2x0VGVXMWliMnd1YVhSbGNtRjBiM0pkS0NrZ2V3b2dJQ0FnSUNBZ0lIbHBaV3hrSUhSb2FYTXVjaXdnZVdsbGJHUWdkR2hwY3k1bkxDQjVhV1ZzWkNCMGFHbHpMbUk3Q2lBZ0lDQjlDbjBzSUZSMElEMGdibVYzSUhCbE93cHdaUzVPUVUxRlV5QTlJRk5rT3dwMllYSWdVMjRnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkNBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRUpoYzJsalRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lIQmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WVc5TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVkyOXRZbWx1WlNBOUlIaGhMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0E5SURFc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnTGprNExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQWljbTkxYm1RaUxDQjBhR2x6TG1adlp5QTlJQ0V3TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQmxMbXhwWjJoMFRXRndMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWhiMDFoY0NBOUlHVXVZVzlOWVhBc0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0JsTG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxuTndaV04xYkdGeVRXRndJRDBnWlM1emNHVmpkV3hoY2sxaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpXNTJUV0Z3SUQwZ1pTNWxiblpOWVhBc0lIUm9hWE11WTI5dFltbHVaU0E5SUdVdVkyOXRZbWx1WlN3Z2RHaHBjeTV5Wldac1pXTjBhWFpwZEhrZ1BTQmxMbkpsWm14bFkzUnBkbWwwZVN3Z2RHaHBjeTV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0JsTG5KbFpuSmhZM1JwYjI1U1lYUnBieXdnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0JsTG5kcGNtVm1jbUZ0WlN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsWTJGd0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpd2dkR2hwY3k1bWIyY2dQU0JsTG1adlp5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1gyNGdQU0J3Y0NncE93cG1kVzVqZEdsdmJpQndjQ2dwSUhzS0lDQWdJR3hsZENCek1TQTlJRzVsZHlCQmNuSmhlVUoxWm1abGNpZzBLU3dnWlNBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2N6RXBMQ0IwSUQwZ2JtVjNJRlZwYm5Rek1rRnljbUY1S0hNeEtTd2diaUE5SUc1bGR5QlZhVzUwTXpKQmNuSmhlU2cxTVRJcExDQnBJRDBnYm1WM0lGVnBiblF6TWtGeWNtRjVLRFV4TWlrN0NpQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJRHdnTWpVMk95QXJLMk1wZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWXlBdElERXlOenNLSUNBZ0lDQWdJQ0JzSUR3Z0xUSTNJRDhnS0c1YlkxMGdQU0F3TENCdVcyTWdmQ0F5TlRaZElEMGdNekkzTmpnc0lHbGJZMTBnUFNBeU5Dd2dhVnRqSUh3Z01qVTJYU0E5SURJMEtTQTZJR3dnUENBdE1UUWdQeUFvYmx0alhTQTlJREV3TWpRZ1BqNGdMV3dnTFNBeE5Dd2dibHRqSUh3Z01qVTJYU0E5SURFd01qUWdQajRnTFd3Z0xTQXhOQ0I4SURNeU56WTRMQ0JwVzJOZElEMGdMV3dnTFNBeExDQnBXMk1nZkNBeU5UWmRJRDBnTFd3Z0xTQXhLU0E2SUd3Z1BEMGdNVFVnUHlBb2JsdGpYU0E5SUd3Z0t5QXhOU0E4UENBeE1Dd2dibHRqSUh3Z01qVTJYU0E5SUd3Z0t5QXhOU0E4UENBeE1DQjhJRE15TnpZNExDQnBXMk5kSUQwZ01UTXNJR2xiWXlCOElESTFObDBnUFNBeE15a2dPaUJzSUR3Z01USTRJRDhnS0c1YlkxMGdQU0F6TVRjME5Dd2dibHRqSUh3Z01qVTJYU0E5SURZME5URXlMQ0JwVzJOZElEMGdNalFzSUdsYll5QjhJREkxTmwwZ1BTQXlOQ2tnT2lBb2JsdGpYU0E5SURNeE56UTBMQ0J1VzJNZ2ZDQXlOVFpkSUQwZ05qUTFNVElzSUdsYlkxMGdQU0F4TXl3Z2FWdGpJSHdnTWpVMlhTQTlJREV6S1RzS0lDQWdJSDBLSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJRlZwYm5Rek1rRnljbUY1S0RJd05EZ3BMQ0JoSUQwZ2JtVjNJRlZwYm5Rek1rRnljbUY1S0RZMEtTd2dieUE5SUc1bGR5QlZhVzUwTXpKQmNuSmhlU2cyTkNrN0NpQWdJQ0JtYjNJb2JHVjBJR01nUFNBeE95QmpJRHdnTVRBeU5Ec2dLeXRqS1hzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdNZ1BEd2dNVE1zSUdnZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2lnN0lDRW9iQ0FtSURnek9EZzJNRGdwT3lsc0lEdzhQU0F4TENCb0lDMDlJRGd6T0RnMk1EZzdDaUFnSUNBZ0lDQWdiQ0FtUFNBdE9ETTRPRFl3T1N3Z2FDQXJQU0E1TkRjNU1USTNNRFFzSUhKYlkxMGdQU0JzSUh3Z2FEc0tJQ0FnSUgwS0lDQWdJR1p2Y2loc1pYUWdZeUE5SURFd01qUTdJR01nUENBeU1EUTRPeUFySzJNcGNsdGpYU0E5SURrek9UVXlOREE1TmlBcklDaGpJQzBnTVRBeU5DQThQQ0F4TXlrN0NpQWdJQ0JtYjNJb2JHVjBJR01nUFNBeE95QmpJRHdnTXpFN0lDc3JZeWxoVzJOZElEMGdZeUE4UENBeU16c0tJQ0FnSUdGYk16RmRJRDBnTVRFNU9UVTNNRGswTkN3Z1lWc3pNbDBnUFNBeU1UUTNORGd6TmpRNE93b2dJQ0FnWm05eUtHeGxkQ0JqSUQwZ016TTdJR01nUENBMk16c2dLeXRqS1dGYlkxMGdQU0F5TVRRM05EZ3pOalE0SUNzZ0tHTWdMU0F6TWlBOFBDQXlNeWs3Q2lBZ0lDQmhXell6WFNBOUlETXpORGN3TlRRMU9USTdDaUFnSUNCbWIzSW9iR1YwSUdNZ1BTQXhPeUJqSUR3Z05qUTdJQ3NyWXlsaklDRTlQU0F6TWlBbUppQW9iMXRqWFNBOUlERXdNalFwT3dvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm1iRzloZEZacFpYYzZJR1VzQ2lBZ0lDQWdJQ0FnZFdsdWRETXlWbWxsZHpvZ2RDd0tJQ0FnSUNBZ0lDQmlZWE5sVkdGaWJHVTZJRzRzQ2lBZ0lDQWdJQ0FnYzJocFpuUlVZV0pzWlRvZ2FTd0tJQ0FnSUNBZ0lDQnRZVzUwYVhOellWUmhZbXhsT2lCeUxBb2dJQ0FnSUNBZ0lHVjRjRzl1Wlc1MFZHRmliR1U2SUdFc0NpQWdJQ0FnSUNBZ2IyWm1jMlYwVkdGaWJHVTZJRzhLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnVG5Rb2N6RXBJSHNLSUNBZ0lFMWhkR2d1WVdKektITXhLU0ErSURZMU5UQTBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJHRjBZVlYwYVd4ekxuUnZTR0ZzWmtac2IyRjBLQ2s2SUZaaGJIVmxJRzkxZENCdlppQnlZVzVuWlM0aUtTd2djekVnUFNCamRDaHpNU3dnTFRZMU5UQTBMQ0EyTlRVd05Da3NJRjl1TG1ac2IyRjBWbWxsZDFzd1hTQTlJSE14T3dvZ0lDQWdiR1YwSUdVZ1BTQmZiaTUxYVc1ME16SldhV1YzV3pCZExDQjBJRDBnWlNBK1BpQXlNeUFtSURVeE1Uc0tJQ0FnSUhKbGRIVnliaUJmYmk1aVlYTmxWR0ZpYkdWYmRGMGdLeUFvS0dVZ0ppQTRNemc0TmpBM0tTQStQaUJmYmk1emFHbG1kRlJoWW14bFczUmRLVHNLZlFwbWRXNWpkR2x2YmlCNGN5aHpNU2tnZXdvZ0lDQWdiR1YwSUdVZ1BTQnpNU0ErUGlBeE1Ec0tJQ0FnSUhKbGRIVnliaUJmYmk1MWFXNTBNekpXYVdWM1d6QmRJRDBnWDI0dWJXRnVkR2x6YzJGVVlXSnNaVnRmYmk1dlptWnpaWFJVWVdKc1pWdGxYU0FySUNoek1TQW1JREV3TWpNcFhTQXJJRjl1TG1WNGNHOXVaVzUwVkdGaWJHVmJaVjBzSUY5dUxtWnNiMkYwVm1sbGQxc3dYVHNLZlFwMllYSWdUWFlnUFNCN0NpQWdJQ0IwYjBoaGJHWkdiRzloZERvZ1RuUXNDaUFnSUNCbWNtOXRTR0ZzWmtac2IyRjBPaUI0Y3dwOUxDQm1kQ0E5SUc1bGR5QkJMQ0JSY3lBOUlHNWxkeUJhTENCbGRDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQWhNU2w3Q2lBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWlNrcElIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlRvZ1lYSnlZWGtnYzJodmRXeGtJR0psSUdFZ1ZIbHdaV1FnUVhKeVlYa3VJaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBjMEoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3TENCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWhjbkpoZVNBOUlHVXNJSFJvYVhNdWFYUmxiVk5wZW1VZ1BTQjBMQ0IwYUdsekxtTnZkVzUwSUQwZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlM1c1pXNW5kR2dnTHlCMElEb2dNQ3dnZEdocGN5NXViM0p0WVd4cGVtVmtJRDBnYml3Z2RHaHBjeTUxYzJGblpTQTlJRWh5TENCMGFHbHpMblZ3WkdGMFpWSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lBdE1Rb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVozQjFWSGx3WlNBOUlIaHVMQ0IwYUdsekxuWmxjbk5wYjI0Z1BTQXdPd29nSUNBZ2ZRb2dJQ0FnYjI1VmNHeHZZV1JEWVd4c1ltRmpheWdwSUh0OUNpQWdJQ0J6WlhRZ2JtVmxaSE5WY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BUMDlJQ0V3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWWE5oWjJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5WellXZGxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVZWEp5WVhrZ1BTQnVaWGNnWlM1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2lobExtRnljbUY1S1N3Z2RHaHBjeTVwZEdWdFUybDZaU0E5SUdVdWFYUmxiVk5wZW1Vc0lIUm9hWE11WTI5MWJuUWdQU0JsTG1OdmRXNTBMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUWdQU0JsTG01dmNtMWhiR2w2WldRc0lIUm9hWE11ZFhOaFoyVWdQU0JsTG5WellXZGxMQ0IwYUdsekxtZHdkVlI1Y0dVZ1BTQmxMbWR3ZFZSNWNHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1UVhRb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHVWdLajBnZEdocGN5NXBkR1Z0VTJsNlpTd2diaUFxUFNCMExtbDBaVzFUYVhwbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG1sMFpXMVRhWHBsT3lCcElEd2djanNnYVNzcktYUm9hWE11WVhKeVlYbGJaU0FySUdsZElEMGdkQzVoY25KaGVWdHVJQ3NnYVYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNUxuTmxkQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE15aGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVhSbGJWTnBlbVVnUFQwOUlESXBJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtTnZkVzUwT3lCMElEd2dianNnZENzcktWRnpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEdocGN5d2dkQ2tzSUZGekxtRndjR3g1VFdGMGNtbDRNeWhsS1N3Z2RHaHBjeTV6WlhSWVdTaDBMQ0JSY3k1NExDQlJjeTU1S1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoMGFHbHpMbWwwWlcxVGFYcGxJRDA5UFNBektTQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amIzVnVkRHNnZENBOElHNDdJSFFyS3lsbWRDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFJvYVhNc0lIUXBMQ0JtZEM1aGNIQnNlVTFoZEhKcGVETW9aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJR1owTG5nc0lHWjBMbmtzSUdaMExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqYjNWdWREc2dkQ0E4SUc0N0lIUXJLeWxtZEM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUm9hWE1zSUhRcExDQm1kQzVoY0hCc2VVMWhkSEpwZURRb1pTa3NJSFJvYVhNdWMyVjBXRmxhS0hRc0lHWjBMbmdzSUdaMExua3NJR1owTG5vcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE9iM0p0WVd4TllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1daMExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kR2hwY3l3Z2RDa3NJR1owTG1Gd2NHeDVUbTl5YldGc1RXRjBjbWw0S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCbWRDNTRMQ0JtZEM1NUxDQm1kQzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwWm5RdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBhR2x6TENCMEtTd2dablF1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCbWRDNTRMQ0JtZEM1NUxDQm1kQzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNUxuTmxkQ2hsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRU52YlhCdmJtVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxJQ3NnZEYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxaQ0FtSmlBb2JpQTlJRTkwS0c0c0lIUm9hWE11WVhKeVlYa3BLU3dnYmpzS0lDQWdJSDBLSUNBZ0lITmxkRU52YlhCdmJtVnVkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvYmlBOUlFSmxLRzRzSUhSb2FYTXVZWEp5WVhrcEtTd2dkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySUhSZElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvZENBOUlFOTBLSFFzSUhSb2FYTXVZWEp5WVhrcEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUhObGRGZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JDWlNoMExDQjBhR2x6TG1GeWNtRjVLU2tzSUhSb2FYTXVZWEp5WVhsYlpTQXFJSFJvYVhNdWFYUmxiVk5wZW1WZElEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySURGZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JQZENoMExDQjBhR2x6TG1GeWNtRjVLU2tzSUhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Wa0lDWW1JQ2gwSUQwZ1FtVW9kQ3dnZEdocGN5NWhjbkpoZVNrcExDQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxJQ3NnTVYwZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwV2lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxJQ3NnTWwwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxaQ0FtSmlBb2RDQTlJRTkwS0hRc0lIUm9hWE11WVhKeVlYa3BLU3dnZERzS0lDQWdJSDBLSUNBZ0lITmxkRm9vWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01dmNtMWhiR2w2WldRZ0ppWWdLSFFnUFNCQ1pTaDBMQ0IwYUdsekxtRnljbUY1S1Nrc0lIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF5WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF6WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd4cGVtVmtJQ1ltSUNoMElEMGdUM1FvZEN3Z2RHaHBjeTVoY25KaGVTa3BMQ0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNhWHBsWkNBbUppQW9kQ0E5SUVKbEtIUXNJSFJvYVhNdVlYSnlZWGtwS1N3Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJRE5kSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmhaS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBcVBTQjBhR2x6TG1sMFpXMVRhWHBsTENCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JDWlNoMExDQjBhR2x6TG1GeWNtRjVLU3dnYmlBOUlFSmxLRzRzSUhSb2FYTXVZWEp5WVhrcEtTd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF4WFNBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1Zvb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ285SUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvZENBOUlFSmxLSFFzSUhSb2FYTXVZWEp5WVhrcExDQnVJRDBnUW1Vb2Jpd2dkR2hwY3k1aGNuSmhlU2tzSUdrZ1BTQkNaU2hwTENCMGFHbHpMbUZ5Y21GNUtTa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnZEN3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTVYwZ1BTQnVMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVnBYS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FxUFNCMGFHbHpMbWwwWlcxVGFYcGxMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUWdKaVlnS0hRZ1BTQkNaU2gwTENCMGFHbHpMbUZ5Y21GNUtTd2diaUE5SUVKbEtHNHNJSFJvYVhNdVlYSnlZWGtwTENCcElEMGdRbVVvYVN3Z2RHaHBjeTVoY25KaGVTa3NJSElnUFNCQ1pTaHlMQ0IwYUdsekxtRnljbUY1S1Nrc0lIUm9hWE11WVhKeVlYbGJaU0FySURCZElEMGdkQ3dnZEdocGN5NWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6TG1GeWNtRjVXMlVnS3lBeVhTQTlJR2tzSUhSb2FYTXVZWEp5WVhsYlpTQXJJRE5kSUQwZ2Npd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHOXVWWEJzYjJGa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmJsVndiRzloWkVOaGJHeGlZV05ySUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG1GeWNtRjVMQ0IwYUdsekxtbDBaVzFUYVhwbEtTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0VTJsNlpUb2dkR2hwY3k1cGRHVnRVMmw2WlN3S0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2RHaHBjeTVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0JoY25KaGVUb2dRWEp5WVhrdVpuSnZiU2gwYUdsekxtRnljbUY1S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc2FYcGxaRG9nZEdocGN5NXViM0p0WVd4cGVtVmtDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dVlXMWxJQ0U5UFNBaUlpQW1KaUFvWlM1dVlXMWxJRDBnZEdocGN5NXVZVzFsS1N3Z2RHaHBjeTUxYzJGblpTQWhQVDBnU0hJZ0ppWWdLR1V1ZFhOaFoyVWdQU0IwYUdsekxuVnpZV2RsS1N3Z0tIUm9hWE11ZFhCa1lYUmxVbUZ1WjJVdWIyWm1jMlYwSUNFOVBTQXdJSHg4SUhSb2FYTXVkWEJrWVhSbFVtRnVaMlV1WTI5MWJuUWdJVDA5SUMweEtTQW1KaUFvWlM1MWNHUmhkR1ZTWVc1blpTQTlJSFJvYVhNdWRYQmtZWFJsVW1GdVoyVXBMQ0JsT3dvZ0lDQWdmUXA5TENCUmJDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRWx1ZERoQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUdwc0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dWV2x1ZERoQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUdWb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dWV2x1ZERoRGJHRnRjR1ZrUVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0IwYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWlhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lFbHVkREUyUVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JhY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWlhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblF4TmtGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmU3dnYm1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdWMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkpiblF6TWtGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmU3dnU25JZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdWMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QlZhVzUwTXpKQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUdsb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dWV2x1ZERFMlFYSnlZWGtvWlNrc0lIUXNJRzRwTENCMGFHbHpMbWx6Um14dllYUXhOa0oxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1oyVjBXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCNGN5aDBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvZENBOUlFOTBLSFFzSUhSb2FYTXVZWEp5WVhrcEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUhObGRGZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JDWlNoMExDQjBhR2x6TG1GeWNtRjVLU2tzSUhSb2FYTXVZWEp5WVhsYlpTQXFJSFJvYVhNdWFYUmxiVk5wZW1WZElEMGdUblFvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhoektIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF4WFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxaQ0FtSmlBb2RDQTlJRTkwS0hRc0lIUm9hWE11WVhKeVlYa3BLU3dnZERzS0lDQWdJSDBLSUNBZ0lITmxkRmtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01dmNtMWhiR2w2WldRZ0ppWWdLSFFnUFNCQ1pTaDBMQ0IwYUdsekxtRnljbUY1S1Nrc0lIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF4WFNBOUlFNTBLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFdpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0I0Y3loMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbElDc2dNbDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkdsNlpXUWdKaVlnS0hRZ1BTQlBkQ2gwTENCMGFHbHpMbUZ5Y21GNUtTa3NJSFE3Q2lBZ0lDQjlDaUFnSUNCelpYUmFLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXeHBlbVZrSUNZbUlDaDBJRDBnUW1Vb2RDd2dkR2hwY3k1aGNuSmhlU2twTENCMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbElDc2dNbDBnUFNCT2RDaDBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZjb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdlSE1vZEdocGN5NWhjbkpoZVZ0bElDb2dkR2hwY3k1cGRHVnRVMmw2WlNBcklETmRLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Wa0lDWW1JQ2gwSUQwZ1QzUW9kQ3dnZEdocGN5NWhjbkpoZVNrcExDQjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxaQ0FtSmlBb2RDQTlJRUpsS0hRc0lIUm9hWE11WVhKeVlYa3BLU3dnZEdocGN5NWhjbkpoZVZ0bElDb2dkR2hwY3k1cGRHVnRVMmw2WlNBcklETmRJRDBnVG5Rb2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1NobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0tqMGdkR2hwY3k1cGRHVnRVMmw2WlN3Z2RHaHBjeTV1YjNKdFlXeHBlbVZrSUNZbUlDaDBJRDBnUW1Vb2RDd2dkR2hwY3k1aGNuSmhlU2tzSUc0Z1BTQkNaU2h1TENCMGFHbHpMbUZ5Y21GNUtTa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnVG5Rb2RDa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklERmRJRDBnVG5Rb2Jpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1Zvb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ285SUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvZENBOUlFSmxLSFFzSUhSb2FYTXVZWEp5WVhrcExDQnVJRDBnUW1Vb2Jpd2dkR2hwY3k1aGNuSmhlU2tzSUdrZ1BTQkNaU2hwTENCMGFHbHpMbUZ5Y21GNUtTa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnVG5Rb2RDa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklERmRJRDBnVG5Rb2Jpa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklESmRJRDBnVG5Rb2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1ZwWEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBcVBTQjBhR2x6TG1sMFpXMVRhWHBsTENCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JDWlNoMExDQjBhR2x6TG1GeWNtRjVLU3dnYmlBOUlFSmxLRzRzSUhSb2FYTXVZWEp5WVhrcExDQnBJRDBnUW1Vb2FTd2dkR2hwY3k1aGNuSmhlU2tzSUhJZ1BTQkNaU2h5TENCMGFHbHpMbUZ5Y21GNUtTa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnVG5Rb2RDa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklERmRJRDBnVG5Rb2Jpa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklESmRJRDBnVG5Rb2FTa3NJSFJvYVhNdVlYSnlZWGxiWlNBcklETmRJRDBnVG5Rb2Npa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lIWmxJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmxkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnUm14dllYUXpNa0Z5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZTd2djMmdnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1YwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCR2JHOWhkRFkwUVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0J0Y0NBOUlEQXNJRWQwSUQwZ2JtVjNJSHBsTENCWllTQTlJRzVsZHlCS1pTd2dWR2tnUFNCdVpYY2dRU3dnVm5RZ1BTQnVaWGNnVVhRc0lIVnpJRDBnYm1WM0lGRjBMQ0I0ZENBOUlHNWxkeUJCTENCSFpTQTlJR05zWVhOeklITXhJR1Y0ZEdWdVpITWdjMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6UW5WbVptVnlSMlZ2YldWMGNua2dQU0FoTUN3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHMXdLeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdhM1FvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSkNkV1ptWlhKSFpXOXRaWFJ5ZVNJc0lIUm9hWE11YVc1a1pYZ2dQU0J1ZFd4c0xDQjBhR2x6TG1GMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0E5SUNFeExDQjBhR2x6TG1keWIzVndjeUE5SUZ0ZExDQjBhR2x6TG1KdmRXNWthVzVuUW05NElEMGdiblZzYkN3Z2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQTlJRzUxYkd3c0lIUm9hWE11WkhKaGQxSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SURFZ0x5QXdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ1oyVjBTVzVrWlhnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1a1pYZzdDaUFnSUNCOUNpQWdJQ0J6WlhSSmJtUmxlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVGeWNtRjVMbWx6UVhKeVlYa29aU2tnUHlCMGFHbHpMbWx1WkdWNElEMGdibVYzSUNoTlpDaGxLU0EvSUVweUlEb2dXbklwS0dVc0lERXBJRG9nZEdocGN5NXBibVJsZUNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJCZEhSeWFXSjFkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUYwZEhKcFluVjBaWE5iWlYwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJCZEhSeWFXSjFkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GMGRISnBZblYwWlhOYlpWMGdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdWc1pYUmxRWFIwY21saWRYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWkdWc1pYUmxJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdGxYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2hoYzBGMGRISnBZblYwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0bFhTQWhQVDBnZG05cFpDQXdPd29nSUNBZ2ZRb2dJQ0FnWVdSa1IzSnZkWEFvWlN3Z2RDd2diaUE5SURBcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1keWIzVndjeTV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhSbGNtbGhiRWx1WkdWNE9pQnVDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCamJHVmhja2R5YjNWd2N5Z3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZHliM1Z3Y3lBOUlGdGRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJISmhkMUpoYm1kbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbVJ5WVhkU1lXNW5aUzV6ZEdGeWRDQTlJR1VzSUhSb2FYTXVaSEpoZDFKaGJtZGxMbU52ZFc1MElEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE5DaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkQzV1WldWa2MxVndaR0YwWlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN5NXViM0p0WVd3N0NpQWdJQ0FnSUNBZ2FXWWdLRzRnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCSVpTZ3BMbWRsZEU1dmNtMWhiRTFoZEhKcGVDaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JpNWhjSEJzZVU1dmNtMWhiRTFoZEhKcGVDaHlLU3dnYmk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZWFIwY21saWRYUmxjeTUwWVc1blpXNTBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwTENCcExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBcExDQjBhR2x6TG1KdmRXNWthVzVuUW05NElDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdVkyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa3NJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFZDBMbTFoYTJWU2IzUmhkR2x2YmtaeWIyMVJkV0YwWlhKdWFXOXVLR1VwTENCMGFHbHpMbUZ3Y0d4NVRXRjBjbWw0TkNoSGRDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWWUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSM1F1YldGclpWSnZkR0YwYVc5dVdDaGxLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvUjNRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsV1NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFZDBMbTFoYTJWU2IzUmhkR2x2Ymxrb1pTa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRWQwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVm9vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCSGRDNXRZV3RsVW05MFlYUnBiMjVhS0dVcExDQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE5DaEhkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1VvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJIZEM1dFlXdGxWSEpoYm5Oc1lYUnBiMjRvWlN3Z2RDd2diaWtzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0VkMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmpZV3hsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjNRdWJXRnJaVk5qWVd4bEtHVXNJSFFzSUc0cExDQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE5DaEhkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzYjI5clFYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJaWVM1c2IyOXJRWFFvWlNrc0lGbGhMblZ3WkdGMFpVMWhkSEpwZUNncExDQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE5DaFpZUzV0WVhSeWFYZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMlZ1ZEdWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMEp2ZUNncExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExtZGxkRU5sYm5SbGNpaFVhU2t1Ym1WbllYUmxLQ2tzSUhSb2FYTXVkSEpoYm5Oc1lYUmxLRlJwTG5nc0lGUnBMbmtzSUZScExub3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnWlM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1ZiYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1Y0hWemFDaHlMbmdzSUhJdWVTd2djaTU2SUh4OElEQXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lIWmxLSFFzSURNcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWQ2IzVnVaR2x1WjBKdmVDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtSnZkVzVrYVc1blFtOTRJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2ZFc1a2FXNW5RbTk0SUQwZ2JtVjNJRkYwS1RzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnZENBOUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJR2xtSUNobElDWW1JR1V1YVhOSFRFSjFabVpsY2tGMGRISnBZblYwWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDZFVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllUzVqYjIxd2RYUmxRbTkxYm1ScGJtZENiM2dvS1RvZ1IweENkV1ptWlhKQmRIUnlhV0oxZEdVZ2NtVnhkV2x5WlhNZ1lTQnRZVzUxWVd3Z1ltOTFibVJwYm1jZ1ltOTRMaUJCYkhSbGNtNWhkR2wyWld4NUlITmxkQ0FpYldWemFDNW1jblZ6ZEhWdFEzVnNiR1ZrSWlCMGJ5QWlabUZzYzJVaUxpY3NJSFJvYVhNcExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExuTmxkQ2h1WlhjZ1FTZ3RNU0F2SURBc0lDMHhJQzhnTUN3Z0xURWdMeUF3S1N3Z2JtVjNJRUVvTVNBdklEQXNJREVnTHlBd0xDQXhJQzhnTUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VjMlYwUm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobEtTd2dkQ2tnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhRdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRlowTG5ObGRFWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9jaWtzSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUHlBb2VIUXVZV1JrVm1WamRHOXljeWgwYUdsekxtSnZkVzVrYVc1blFtOTRMbTFwYml3Z1ZuUXViV2x1S1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1bGVIQmhibVJDZVZCdmFXNTBLSGgwS1N3Z2VIUXVZV1JrVm1WamRHOXljeWgwYUdsekxtSnZkVzVrYVc1blFtOTRMbTFoZUN3Z1ZuUXViV0Y0S1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1bGVIQmhibVJDZVZCdmFXNTBLSGgwS1NrZ09pQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDNWxlSEJoYm1SQ2VWQnZhVzUwS0ZaMExtMXBiaWtzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2d1Wlhod1lXNWtRbmxRYjJsdWRDaFdkQzV0WVhncEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUdsekxtSnZkVzVrYVc1blFtOTRMbTFoYTJWRmJYQjBlU2dwT3dvZ0lDQWdJQ0FnSUNocGMwNWhUaWgwYUdsekxtSnZkVzVrYVc1blFtOTRMbTFwYmk1NEtTQjhmQ0JwYzA1aFRpaDBhR2x6TG1KdmRXNWthVzVuUW05NExtMXBiaTU1S1NCOGZDQnBjMDVoVGloMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG0xcGJpNTZLU2tnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWduVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rdVkyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDazZJRU52YlhCMWRHVmtJRzFwYmk5dFlYZ2dhR0YyWlNCT1lVNGdkbUZzZFdWekxpQlVhR1VnSW5CdmMybDBhVzl1SWlCaGRIUnlhV0oxZEdVZ2FYTWdiR2xyWld4NUlIUnZJR2hoZG1VZ1RtRk9JSFpoYkhWbGN5NG5MQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJR052YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdibVYzSUZsMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z2RDQTlJSFJvYVhNdWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJQ1ltSUdVdWFYTkhURUoxWm1abGNrRjBkSEpwWW5WMFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ2RVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVM1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LVG9nUjB4Q2RXWm1aWEpCZEhSeWFXSjFkR1VnY21WeGRXbHlaWE1nWVNCdFlXNTFZV3dnWW05MWJtUnBibWNnYzNCb1pYSmxMaUJCYkhSbGNtNWhkR2wyWld4NUlITmxkQ0FpYldWemFDNW1jblZ6ZEhWdFEzVnNiR1ZrSWlCMGJ5QWlabUZzYzJVaUxpY3NJSFJvYVhNcExDQjBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxMbk5sZENodVpYY2dRU3dnTVNBdklEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTNWpaVzUwWlhJN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoV2RDNXpaWFJHY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dVcExDQjBLU0JtYjNJb2JHVjBJSElnUFNBd0xDQmhJRDBnZEM1c1pXNW5kR2c3SUhJZ1BDQmhPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWE11YzJWMFJuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHZLU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0EvSUNoNGRDNWhaR1JXWldOMGIzSnpLRlowTG0xcGJpd2dkWE11YldsdUtTd2dWblF1Wlhod1lXNWtRbmxRYjJsdWRDaDRkQ2tzSUhoMExtRmtaRlpsWTNSdmNuTW9WblF1YldGNExDQjFjeTV0WVhncExDQldkQzVsZUhCaGJtUkNlVkJ2YVc1MEtIaDBLU2tnT2lBb1ZuUXVaWGh3WVc1a1FubFFiMmx1ZENoMWN5NXRhVzRwTENCV2RDNWxlSEJoYm1SQ2VWQnZhVzUwS0hWekxtMWhlQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUZaMExtZGxkRU5sYm5SbGNpaHVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQmhJRDBnWlM1amIzVnVkRHNnY2lBOElHRTdJSElyS3lsNGRDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUhJcExDQnBJRDBnVFdGMGFDNXRZWGdvYVN3Z2JpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaDRkQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZENrZ1ptOXlLR3hsZENCeUlEMGdNQ3dnWVNBOUlIUXViR1Z1WjNSb095QnlJRHdnWVRzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdkRnR5WFN3Z1l5QTlJSFJvYVhNdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHd2dQU0F3TENCb0lEMGdieTVqYjNWdWREc2diQ0E4SUdnN0lHd3JLeWw0ZEM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHOHNJR3dwTENCaklDWW1JQ2hVYVM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJR3dwTENCNGRDNWhaR1FvVkdrcEtTd2dhU0E5SUUxaGRHZ3ViV0Y0S0drc0lHNHVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9lSFFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbExuSmhaR2wxY3lBOUlFMWhkR2d1YzNGeWRDaHBLU3dnYVhOT1lVNG9kR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaUzV5WVdScGRYTXBJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9KMVJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BPaUJEYjIxd2RYUmxaQ0J5WVdScGRYTWdhWE1nVG1GT0xpQlVhR1VnSW5CdmMybDBhVzl1SWlCaGRIUnlhV0oxZEdVZ2FYTWdiR2xyWld4NUlIUnZJR2hoZG1VZ1RtRk9JSFpoYkhWbGN5NG5MQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqYjIxd2RYUmxWR0Z1WjJWdWRITW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtbHVaR1Y0TENCMElEMGdkR2hwY3k1aGRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQnVkV3hzSUh4OElIUXVjRzl6YVhScGIyNGdQVDA5SUhadmFXUWdNQ0I4ZkNCMExtNXZjbTFoYkNBOVBUMGdkbTlwWkNBd0lIeDhJSFF1ZFhZZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtTnZiWEIxZEdWVVlXNW5aVzUwY3lncElHWmhhV3hsWkM0Z1RXbHpjMmx1WnlCeVpYRjFhWEpsWkNCaGRIUnlhV0oxZEdWeklDaHBibVJsZUN3Z2NHOXphWFJwYjI0c0lHNXZjbTFoYkNCdmNpQjFkaWtpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVZWEp5WVhrc0lHa2dQU0IwTG5CdmMybDBhVzl1TG1GeWNtRjVMQ0J5SUQwZ2RDNXViM0p0WVd3dVlYSnlZWGtzSUdFZ1BTQjBMblYyTG1GeWNtRjVMQ0J2SUQwZ2FTNXNaVzVuZEdnZ0x5QXpPd29nSUNBZ0lDQWdJSFJvYVhNdWFHRnpRWFIwY21saWRYUmxLQ0owWVc1blpXNTBJaWtnUFQwOUlDRXhJQ1ltSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMFlXNW5aVzUwSWl3Z2JtVjNJR1YwS0c1bGR5QkdiRzloZERNeVFYSnlZWGtvTkNBcUlHOHBMQ0EwS1NrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCMGFHbHpMbWRsZEVGMGRISnBZblYwWlNnaWRHRnVaMlZ1ZENJcExtRnljbUY1TENCc0lEMGdXMTBzSUdnZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRlFnUFNBd095QlVJRHdnYnpzZ1ZDc3JLV3hiVkYwZ1BTQnVaWGNnUVN3Z2FGdFVYU0E5SUc1bGR5QkJPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdibVYzSUVFc0lHUWdQU0J1WlhjZ1FTd2daaUE5SUc1bGR5QkJMQ0J0SUQwZ2JtVjNJRm9zSUY4Z1BTQnVaWGNnV2l3Z1p5QTlJRzVsZHlCYUxDQndJRDBnYm1WM0lFRXNJSFlnUFNCdVpYY2dRVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUI0S0ZRc0lFOHNJRmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkUzVtY205dFFYSnlZWGtvYVN3Z1ZDQXFJRE1wTENCa0xtWnliMjFCY25KaGVTaHBMQ0JQSUNvZ015a3NJR1l1Wm5KdmJVRnljbUY1S0drc0lGa2dLaUF6S1N3Z2JTNW1jbTl0UVhKeVlYa29ZU3dnVkNBcUlESXBMQ0JmTG1aeWIyMUJjbkpoZVNoaExDQlBJQ29nTWlrc0lHY3Vabkp2YlVGeWNtRjVLR0VzSUZrZ0tpQXlLU3dnWkM1emRXSW9kU2tzSUdZdWMzVmlLSFVwTENCZkxuTjFZaWh0S1N3Z1p5NXpkV0lvYlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENBa0lEMGdNU0F2SUNoZkxuZ2dLaUJuTG5rZ0xTQm5MbmdnS2lCZkxua3BPd29nSUNBZ0lDQWdJQ0FnSUNCcGMwWnBibWwwWlNna0tTQW1KaUFvY0M1amIzQjVLR1FwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR2N1ZVNrdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0dZc0lDMWZMbmtwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQ1FwTENCMkxtTnZjSGtvWmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvWHk1NEtTNWhaR1JUWTJGc1pXUldaV04wYjNJb1pDd2dMV2N1ZUNrdWJYVnNkR2x3YkhsVFkyRnNZWElvSkNrc0lHeGJWRjB1WVdSa0tIQXBMQ0JzVzA5ZExtRmtaQ2h3S1N3Z2JGdFpYUzVoWkdRb2NDa3NJR2hiVkYwdVlXUmtLSFlwTENCb1cwOWRMbUZrWkNoMktTd2dhRnRaWFM1aFpHUW9kaWtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUhSb2FYTXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lIa3ViR1Z1WjNSb0lEMDlQU0F3SUNZbUlDaDVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZERvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lCdUxteGxibWQwYUFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdYU2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JVSUQwZ01Dd2dUeUE5SUhrdWJHVnVaM1JvT3lCVUlEd2dUenNnS3l0VUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGa2dQU0I1VzFSZExDQWtJRDBnV1M1emRHRnlkQ3dnVlNBOUlGa3VZMjkxYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlaUE5SUNRc0lIRWdQU0FrSUNzZ1ZUc2dlaUE4SUhFN0lIb2dLejBnTXlsNEtHNWJlaUFySURCZExDQnVXM29nS3lBeFhTd2dibHQ2SUNzZ01sMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRzVsZHlCQkxDQjNJRDBnYm1WM0lFRXNJRklnUFNCdVpYY2dRU3dnU1NBOUlHNWxkeUJCT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUUwb1ZDa2dld29nSUNBZ0lDQWdJQ0FnSUNCU0xtWnliMjFCY25KaGVTaHlMQ0JVSUNvZ015a3NJRWt1WTI5d2VTaFNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRThnUFNCc1cxUmRPd29nSUNBZ0lDQWdJQ0FnSUNCaUxtTnZjSGtvVHlrc0lHSXVjM1ZpS0ZJdWJYVnNkR2x3YkhsVFkyRnNZWElvVWk1a2IzUW9UeWtwS1M1dWIzSnRZV3hwZW1Vb0tTd2dkeTVqY205emMxWmxZM1J2Y25Nb1NTd2dUeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ2R5NWtiM1FvYUZ0VVhTa2dQQ0F3SUQ4Z0xURWdPaUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQmpXMVFnS2lBMFhTQTlJR0l1ZUN3Z1kxdFVJQ29nTkNBcklERmRJRDBnWWk1NUxDQmpXMVFnS2lBMElDc2dNbDBnUFNCaUxub3NJR05iVkNBcUlEUWdLeUF6WFNBOUlDUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdWQ0E5SURBc0lFOGdQU0I1TG14bGJtZDBhRHNnVkNBOElFODdJQ3NyVkNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWklEMGdlVnRVWFN3Z0pDQTlJRmt1YzNSaGNuUXNJRlVnUFNCWkxtTnZkVzUwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIb2dQU0FrTENCeElEMGdKQ0FySUZVN0lIb2dQQ0J4T3lCNklDczlJRE1wVFNodVczb2dLeUF3WFNrc0lFMG9ibHQ2SUNzZ01WMHBMQ0JOS0c1YmVpQXJJREpkS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmpiMjF3ZFhSbFZtVnlkR1Y0VG05eWJXRnNjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVhVzVrWlhnc0lIUWdQU0IwYUdsekxtZGxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpS1RzS0lDQWdJQ0FnSUNCcFppQW9kQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2RtOXBaQ0F3S1NCdUlEMGdibVYzSUdWMEtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2RDNWpiM1Z1ZENBcUlETXBMQ0F6S1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNHBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR1p2Y2loc1pYUWdaQ0E5SURBc0lHWWdQU0J1TG1OdmRXNTBPeUJrSUR3Z1pqc2daQ3NyS1c0dWMyVjBXRmxhS0dRc0lEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCQkxDQnlJRDBnYm1WM0lFRXNJR0VnUFNCdVpYY2dRU3dnYnlBOUlHNWxkeUJCTENCaklEMGdibVYzSUVFc0lHd2dQU0J1WlhjZ1FTd2dhQ0E5SUc1bGR5QkJMQ0IxSUQwZ2JtVjNJRUU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsS1NCbWIzSW9iR1YwSUdRZ1BTQXdMQ0JtSUQwZ1pTNWpiM1Z1ZERzZ1pDQThJR1k3SUdRZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR1V1WjJWMFdDaGtJQ3NnTUNrc0lGOGdQU0JsTG1kbGRGZ29aQ0FySURFcExDQm5JRDBnWlM1blpYUllLR1FnS3lBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCdEtTd2djaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lGOHBMQ0JoTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2daeWtzSUdndWMzVmlWbVZqZEc5eWN5aGhMQ0J5S1N3Z2RTNXpkV0pXWldOMGIzSnpLR2tzSUhJcExDQm9MbU55YjNOektIVXBMQ0J2TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Jpd2diU2tzSUdNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHVMQ0JmS1N3Z2JDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLRzRzSUdjcExDQnZMbUZrWkNob0tTd2dZeTVoWkdRb2FDa3NJR3d1WVdSa0tHZ3BMQ0J1TG5ObGRGaFpXaWh0TENCdkxuZ3NJRzh1ZVN3Z2J5NTZLU3dnYmk1elpYUllXVm9vWHl3Z1l5NTRMQ0JqTG5rc0lHTXVlaWtzSUc0dWMyVjBXRmxhS0djc0lHd3VlQ3dnYkM1NUxDQnNMbm9wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdabTl5S0d4bGRDQmtJRDBnTUN3Z1ppQTlJSFF1WTI5MWJuUTdJR1FnUENCbU95QmtJQ3M5SURNcGFTNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFFzSUdRZ0t5QXdLU3dnY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJR1FnS3lBeEtTd2dZUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHUWdLeUF5S1N3Z2FDNXpkV0pXWldOMGIzSnpLR0VzSUhJcExDQjFMbk4xWWxabFkzUnZjbk1vYVN3Z2Npa3NJR2d1WTNKdmMzTW9kU2tzSUc0dWMyVjBXRmxhS0dRZ0t5QXdMQ0JvTG5nc0lHZ3VlU3dnYUM1NktTd2diaTV6WlhSWVdWb29aQ0FySURFc0lHZ3VlQ3dnYUM1NUxDQm9Mbm9wTENCdUxuTmxkRmhaV2loa0lDc2dNaXdnYUM1NExDQm9MbmtzSUdndWVpazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVibTl5YldGc2FYcGxUbTl5YldGc2N5Z3BMQ0J1TG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2JtOXliV0ZzYVhwbFRtOXliV0ZzY3lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3k1dWIzSnRZV3c3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcGVIUXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMEtTd2dlSFF1Ym05eWJXRnNhWHBsS0Nrc0lHVXVjMlYwV0ZsYUtIUXNJSGgwTG5nc0lIaDBMbmtzSUhoMExub3BPd29nSUNBZ2ZRb2dJQ0FnZEc5T2IyNUpibVJsZUdWa0tDa2dld29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR1VvYnl3Z1l5a2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUc4dVlYSnlZWGtzSUdnZ1BTQnZMbWwwWlcxVGFYcGxMQ0IxSUQwZ2J5NXViM0p0WVd4cGVtVmtMQ0JrSUQwZ2JtVjNJR3d1WTI5dWMzUnlkV04wYjNJb1l5NXNaVzVuZEdnZ0tpQm9LU3dnWmlBOUlEQXNJRzBnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd0xDQm5JRDBnWXk1c1pXNW5kR2c3SUY4Z1BDQm5PeUJmS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5NXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxJRDhnWmlBOUlHTmJYMTBnS2lCdkxtUmhkR0V1YzNSeWFXUmxJQ3NnYnk1dlptWnpaWFFnT2lCbUlEMGdZMXRmWFNBcUlHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lEd2dhRHNnY0NzcktXUmJiU3NyWFNBOUlHeGJaaXNyWFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHVjBLR1FzSUdnc0lIVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwYm1SbGVDQTlQVDBnYm5Wc2JDa2djbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rdWRHOU9iMjVKYm1SbGVHVmtLQ2s2SUVKMVptWmxja2RsYjIxbGRISjVJR2x6SUdGc2NtVmhaSGtnYm05dUxXbHVaR1Y0WldRdUlpa3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCdVpYY2djekVzSUc0Z1BTQjBhR2x6TG1sdVpHVjRMbUZ5Y21GNUxDQnBJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUJwYmlCcEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JwVzI5ZExDQnNJRDBnWlNoakxDQnVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXpaWFJCZEhSeWFXSjFkR1VvYnl3Z2JDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUdsdUlISXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUZ0ZExDQnNJRDBnY2x0dlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Dd2dkU0E5SUd3dWJHVnVaM1JvT3lCb0lEd2dkVHNnYUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2JGdG9YU3dnWmlBOUlHVW9aQ3dnYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxuQjFjMmdvWmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXRiM0p3YUVGMGRISnBZblYwWlhOYmIxMGdQU0JqT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDBnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR01nUFNCaExteGxibWQwYURzZ2J5QThJR003SUc4ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVZ0dlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1aFpHUkhjbTkxY0Noc0xuTjBZWEowTENCc0xtTnZkVzUwTENCc0xtMWhkR1Z5YVdGc1NXNWtaWGdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYldWMFlXUmhkR0U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhabGNuTnBiMjQ2SURRdU5pd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKQ2RXWm1aWEpIWlc5dFpYUnllU0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBiM0k2SUNKQ2RXWm1aWEpIWlc5dFpYUnllUzUwYjBwVFQwNGlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG5WMWFXUWdQU0IwYUdsekxuVjFhV1FzSUdVdWRIbHdaU0E5SUhSb2FYTXVkSGx3WlN3Z2RHaHBjeTV1WVcxbElDRTlQU0FpSWlBbUppQW9aUzV1WVcxbElEMGdkR2hwY3k1dVlXMWxLU3dnVDJKcVpXTjBMbXRsZVhNb2RHaHBjeTUxYzJWeVJHRjBZU2t1YkdWdVozUm9JRDRnTUNBbUppQW9aUzUxYzJWeVJHRjBZU0E5SUhSb2FYTXVkWE5sY2tSaGRHRXBMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlIUm9hWE11Y0dGeVlXMWxkR1Z5Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnNJR2x1SUdNcFkxdHNYU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxXMnhkSUQwZ1kxdHNYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmxMbVJoZEdFZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISnBZblYwWlhNNklIdDlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWFXNWtaWGc3Q2lBZ0lDQWdJQ0FnZENBaFBUMGdiblZzYkNBbUppQW9aUzVrWVhSaExtbHVaR1Y0SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQjBMbUZ5Y21GNUxtTnZibk4wY25WamRHOXlMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z5Y21GNU9pQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaDBMbUZ5Y21GNUtRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1aGRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QnBiaUJ1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbVJoZEdFdVlYUjBjbWxpZFhSbGMxdGpYU0E5SUd3dWRHOUtVMDlPS0dVdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZTMwc0lISWdQU0FoTVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ2FXNGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpXMk5kTENCb0lEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RTQTlJREFzSUdRZ1BTQnNMbXhsYm1kMGFEc2dkU0E4SUdRN0lIVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJR3hiZFYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0xuQjFjMmdvWmk1MGIwcFRUMDRvWlM1a1lYUmhLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYUM1c1pXNW5kR2dnUGlBd0lDWW1JQ2hwVzJOZElEMGdhQ3dnY2lBOUlDRXdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY2lBbUppQW9aUzVrWVhSaExtMXZjbkJvUVhSMGNtbGlkWFJsY3lBOUlHa3NJR1V1WkdGMFlTNXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0E5SUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ1lTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNobExtUmhkR0V1WjNKdmRYQnpJRDBnU2xOUFRpNXdZWEp6WlNoS1UwOU9Mbk4wY21sdVoybG1lU2hoS1NrcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2J5QWhQVDBnYm5Wc2JDQW1KaUFvWlM1a1lYUmhMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCalpXNTBaWEk2SUc4dVkyVnVkR1Z5TG5SdlFYSnlZWGtvS1N3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQnZMbkpoWkdsMWN3b2dJQ0FnSUNBZ0lIMHBMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzVrWlhnZ1BTQnVkV3hzTENCMGFHbHpMbUYwZEhKcFluVjBaWE1nUFNCN2ZTd2dkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE1nUFNCN2ZTd2dkR2hwY3k1bmNtOTFjSE1nUFNCYlhTd2dkR2hwY3k1aWIzVnVaR2x1WjBKdmVDQTlJRzUxYkd3c0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdkR2hwY3k1dVlXMWxJRDBnWlM1dVlXMWxPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVwYm1SbGVEc0tJQ0FnSUNBZ0lDQnVJQ0U5UFNCdWRXeHNJQ1ltSUhSb2FYTXVjMlYwU1c1a1pYZ29iaTVqYkc5dVpTaDBLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc0lHbHVJR2twZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHbGJiRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtHd3NJR2d1WTJ4dmJtVW9kQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdWJXOXljR2hCZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNCcGJpQnlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCYlhTd2dkU0E5SUhKYmJGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWkNBOUlEQXNJR1lnUFNCMUxteGxibWQwYURzZ1pDQThJR1k3SUdRckt5bG9MbkIxYzJnb2RWdGtYUzVqYkc5dVpTaDBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpXMnhkSUQwZ2FEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQTlJR1V1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCbExtZHliM1Z3Y3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUd3Z1BTQXdMQ0JvSUQwZ1lTNXNaVzVuZEdnN0lHd2dQQ0JvT3lCc0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdGYmJGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZV1JrUjNKdmRYQW9kUzV6ZEdGeWRDd2dkUzVqYjNWdWRDd2dkUzV0WVhSbGNtbGhiRWx1WkdWNEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxMbUp2ZFc1a2FXNW5RbTk0T3dvZ0lDQWdJQ0FnSUc4Z0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dQU0J2TG1Oc2IyNWxLQ2twT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWlM1aWIzVnVaR2x1WjFOd2FHVnlaVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZeUFoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQTlJR011WTJ4dmJtVW9LU2tzSUhSb2FYTXVaSEpoZDFKaGJtZGxMbk4wWVhKMElEMGdaUzVrY21GM1VtRnVaMlV1YzNSaGNuUXNJSFJvYVhNdVpISmhkMUpoYm1kbExtTnZkVzUwSUQwZ1pTNWtjbUYzVW1GdVoyVXVZMjkxYm5Rc0lIUm9hWE11ZFhObGNrUmhkR0VnUFNCbExuVnpaWEpFWVhSaExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdsemNHOXpaU0lLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLZlN3Z2NtZ2dQU0J1WlhjZ2VtVXNJSEZ1SUQwZ2JtVjNJR2hwTENCcWN5QTlJRzVsZHlCWmRDd2dZV2dnUFNCdVpYY2dRU3dnZDJrZ1BTQnVaWGNnUVN3Z1FXa2dQU0J1WlhjZ1FTd2dVbWtnUFNCdVpYY2dRU3dnV21FZ1BTQnVaWGNnUVN3Z1pYSWdQU0J1WlhjZ1FTd2dkSElnUFNCdVpYY2dXaXdnYm5JZ1BTQnVaWGNnV2l3Z2FYSWdQU0J1WlhjZ1dpd2diMmdnUFNCdVpYY2dRU3dnWTJnZ1BTQnVaWGNnUVN3Z2JHZ2dQU0J1WlhjZ1FTd2djM0lnUFNCdVpYY2dRU3dnY25JZ1BTQnVaWGNnUVN3Z1RYUWdQU0JqYkdGemN5QmxlSFJsYm1SeklFcGxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dSMlVzSUhRZ1BTQnVaWGNnVTI0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOTlpYTm9JRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb0lpd2dkR2hwY3k1blpXOXRaWFJ5ZVNBOUlHVXNJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQjBMQ0IwYUdsekxuVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTd2dkQ2tzSUdVdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklEMGdaUzV0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNdWMyeHBZMlVvS1Nrc0lHVXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1dGIzSndhRlJoY21kbGRFUnBZM1JwYjI1aGNua3BLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJRUZ5Y21GNUxtbHpRWEp5WVhrb1pTNXRZWFJsY21saGJDa2dQeUJsTG0xaGRHVnlhV0ZzTG5Oc2FXTmxLQ2tnT2lCbExtMWhkR1Z5YVdGc0xDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTNW5aVzl0WlhSeWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVoyVnZiV1YwY25rdWJXOXljR2hCZEhSeWFXSjFkR1Z6TENCdUlEMGdUMkpxWldOMExtdGxlWE1vZENrN0NpQWdJQ0FnSUNBZ2FXWWdLRzR1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJiYmxzd1hWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUQwZ1cxMHNJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0JoSUQwZ2FTNXNaVzVuZEdnN0lISWdQQ0JoT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYVZ0eVhTNXVZVzFsSUh4OElGTjBjbWx1WnloeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeTV3ZFhOb0tEQXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllVnR2WFNBOUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm5aWFJXWlhKMFpYaFFiM05wZEdsdmJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0JwSUQwZ2JpNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0J5SUQwZ2JpNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lHRWdQU0J1TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabE93b2dJQ0FnSUNBZ0lIUXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hwTENCbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWek93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUNZbUlHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pYSXVjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3TENCc0lEMGdjaTVzWlc1bmRHZzdJR01nUENCc095QmpLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0J2VzJOZExDQjFJRDBnY2x0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZ2dJVDA5SURBZ0ppWWdLRnBoTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RTd2daU2tzSUdFZ1B5QmxjaTVoWkdSVFkyRnNaV1JXWldOMGIzSW9XbUVzSUdncElEb2daWEl1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRnBoTG5OMVlpaDBLU3dnYUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVZV1JrS0dWeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0J5WVhsallYTjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WjJWdmJXVjBjbmtzSUdrZ1BTQjBhR2x6TG0xaGRHVnlhV0ZzTENCeUlEMGdkR2hwY3k1dFlYUnlhWGhYYjNKc1pEc0tJQ0FnSUNBZ0lDQnBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdiaTVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2dhbk11WTI5d2VTaHVMbUp2ZFc1a2FXNW5VM0JvWlhKbEtTd2dhbk11WVhCd2JIbE5ZWFJ5YVhnMEtISXBMQ0J4Ymk1amIzQjVLR1V1Y21GNUtTNXlaV05oYzNRb1pTNXVaV0Z5S1N3Z0lTaHFjeTVqYjI1MFlXbHVjMUJ2YVc1MEtIRnVMbTl5YVdkcGJpa2dQVDA5SUNFeElDWW1JQ2h4Ymk1cGJuUmxjbk5sWTNSVGNHaGxjbVVvYW5Nc0lHRm9LU0E5UFQwZ2JuVnNiQ0I4ZkNCeGJpNXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1lXZ3BJRDRnS0dVdVptRnlJQzBnWlM1dVpXRnlLU0FxS2lBeUtTa2dKaVlnS0hKb0xtTnZjSGtvY2lrdWFXNTJaWEowS0Nrc0lIRnVMbU52Y0hrb1pTNXlZWGtwTG1Gd2NHeDVUV0YwY21sNE5DaHlhQ2tzSUNFb2JpNWliM1Z1WkdsdVowSnZlQ0FoUFQwZ2JuVnNiQ0FtSmlCeGJpNXBiblJsY25ObFkzUnpRbTk0S0c0dVltOTFibVJwYm1kQ2IzZ3BJRDA5UFNBaE1Ta2dKaVlnZEdocGN5NWZZMjl0Y0hWMFpVbHVkR1Z5YzJWamRHbHZibk1vWlN3Z2RDd2djVzRwS1NrN0NpQWdJQ0I5Q2lBZ0lDQmZZMjl0Y0hWMFpVbHVkR1Z5YzJWamRHbHZibk1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBMQ0J5SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnWVNBOUlIUm9hWE11YldGMFpYSnBZV3dzSUc4Z1BTQnlMbWx1WkdWNExDQmpJRDBnY2k1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnNJRDBnY2k1aGRIUnlhV0oxZEdWekxuVjJMQ0JvSUQwZ2NpNWhkSFJ5YVdKMWRHVnpMblYyTVN3Z2RTQTlJSEl1WVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dzSUdRZ1BTQnlMbWR5YjNWd2N5d2daaUE5SUhJdVpISmhkMUpoYm1kbE93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUNFOVBTQnVkV3hzS1NCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoaEtTa2dabTl5S0d4bGRDQnRJRDBnTUN3Z1h5QTlJR1F1YkdWdVozUm9PeUJ0SUR3Z1h6c2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQmtXMjFkTENCd0lEMGdZVnRuTG0xaGRHVnlhV0ZzU1c1a1pYaGRMQ0IySUQwZ1RXRjBhQzV0WVhnb1p5NXpkR0Z5ZEN3Z1ppNXpkR0Z5ZENrc0lIZ2dQU0JOWVhSb0xtMXBiaWh2TG1OdmRXNTBMQ0JOWVhSb0xtMXBiaWhuTG5OMFlYSjBJQ3NnWnk1amIzVnVkQ3dnWmk1emRHRnlkQ0FySUdZdVkyOTFiblFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVJRDBnZGl3Z1lpQTlJSGc3SUhrZ1BDQmlPeUI1SUNzOUlETXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhjZ1BTQnZMbWRsZEZnb2VTa3NJRklnUFNCdkxtZGxkRmdvZVNBcklERXBMQ0JKSUQwZ2J5NW5aWFJZS0hrZ0t5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCaGNpaDBhR2x6TENCd0xDQmxMQ0J1TENCc0xDQm9MQ0IxTENCM0xDQlNMQ0JKS1N3Z2FTQW1KaUFvYVM1bVlXTmxTVzVrWlhnZ1BTQk5ZWFJvTG1ac2IyOXlLSGtnTHlBektTd2dhUzVtWVdObExtMWhkR1Z5YVdGc1NXNWtaWGdnUFNCbkxtMWhkR1Z5YVdGc1NXNWtaWGdzSUhRdWNIVnphQ2hwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnVFdGMGFDNXRZWGdvTUN3Z1ppNXpkR0Z5ZENrc0lGOGdQU0JOWVhSb0xtMXBiaWh2TG1OdmRXNTBMQ0JtTG5OMFlYSjBJQ3NnWmk1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJRzBzSUhBZ1BTQmZPeUJuSUR3Z2NEc2daeUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ2J5NW5aWFJZS0djcExDQjRJRDBnYnk1blpYUllLR2NnS3lBeEtTd2dlU0E5SUc4dVoyVjBXQ2huSUNzZ01pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnWVhJb2RHaHBjeXdnWVN3Z1pTd2diaXdnYkN3Z2FDd2dkU3dnZGl3Z2VDd2dlU2tzSUdrZ0ppWWdLR2t1Wm1GalpVbHVaR1Y0SUQwZ1RXRjBhQzVtYkc5dmNpaG5JQzhnTXlrc0lIUXVjSFZ6YUNocEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1l5QWhQVDBnZG05cFpDQXdLU0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hoS1NrZ1ptOXlLR3hsZENCdElEMGdNQ3dnWHlBOUlHUXViR1Z1WjNSb095QnRJRHdnWHpzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCa1cyMWRMQ0J3SUQwZ1lWdG5MbTFoZEdWeWFXRnNTVzVrWlhoZExDQjJJRDBnVFdGMGFDNXRZWGdvWnk1emRHRnlkQ3dnWmk1emRHRnlkQ2tzSUhnZ1BTQk5ZWFJvTG0xcGJpaGpMbU52ZFc1MExDQk5ZWFJvTG0xcGJpaG5Mbk4wWVhKMElDc2daeTVqYjNWdWRDd2daaTV6ZEdGeWRDQXJJR1l1WTI5MWJuUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNUlEMGdkaXdnWWlBOUlIZzdJSGtnUENCaU95QjVJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGNnUFNCNUxDQlNJRDBnZVNBcklERXNJRWtnUFNCNUlDc2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCaGNpaDBhR2x6TENCd0xDQmxMQ0J1TENCc0xDQm9MQ0IxTENCM0xDQlNMQ0JKS1N3Z2FTQW1KaUFvYVM1bVlXTmxTVzVrWlhnZ1BTQk5ZWFJvTG1ac2IyOXlLSGtnTHlBektTd2dhUzVtWVdObExtMWhkR1Z5YVdGc1NXNWtaWGdnUFNCbkxtMWhkR1Z5YVdGc1NXNWtaWGdzSUhRdWNIVnphQ2hwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnVFdGMGFDNXRZWGdvTUN3Z1ppNXpkR0Z5ZENrc0lGOGdQU0JOWVhSb0xtMXBiaWhqTG1OdmRXNTBMQ0JtTG5OMFlYSjBJQ3NnWmk1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJRzBzSUhBZ1BTQmZPeUJuSUR3Z2NEc2daeUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1p5d2dlQ0E5SUdjZ0t5QXhMQ0I1SUQwZ1p5QXJJREk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ1lYSW9kR2hwY3l3Z1lTd2daU3dnYml3Z2JDd2dhQ3dnZFN3Z2Rpd2dlQ3dnZVNrc0lHa2dKaVlnS0drdVptRmpaVWx1WkdWNElEMGdUV0YwYUM1bWJHOXZjaWhuSUM4Z015a3NJSFF1Y0hWemFDaHBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJR2R3S0hNeExDQmxMQ0IwTENCdUxDQnBMQ0J5TENCaExDQnZLU0I3Q2lBZ0lDQnNaWFFnWXpzS0lDQWdJR2xtSUNobExuTnBaR1VnUFQwOUlFWjBJRDhnWXlBOUlHNHVhVzUwWlhKelpXTjBWSEpwWVc1bmJHVW9ZU3dnY2l3Z2FTd2dJVEFzSUc4cElEb2dZeUE5SUc0dWFXNTBaWEp6WldOMFZISnBZVzVuYkdVb2FTd2djaXdnWVN3Z1pTNXphV1JsSUQwOVBTQkNiaXdnYnlrc0lHTWdQVDA5SUc1MWJHd3BJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdjbkl1WTI5d2VTaHZLU3dnY25JdVlYQndiSGxOWVhSeWFYZzBLSE14TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUd4bGRDQnNJRDBnZEM1eVlYa3ViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOG9jbklwT3dvZ0lDQWdjbVYwZFhKdUlHd2dQQ0IwTG01bFlYSWdmSHdnYkNBK0lIUXVabUZ5SUQ4Z2JuVnNiQ0E2SUhzS0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ2JDd0tJQ0FnSUNBZ0lDQndiMmx1ZERvZ2NuSXVZMnh2Ym1Vb0tTd0tJQ0FnSUNBZ0lDQnZZbXBsWTNRNklITXhDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJR0Z5S0hNeExDQmxMQ0IwTENCdUxDQnBMQ0J5TENCaExDQnZMQ0JqTENCc0tTQjdDaUFnSUNCek1TNW5aWFJXWlhKMFpYaFFiM05wZEdsdmJpaHZMQ0IzYVNrc0lITXhMbWRsZEZabGNuUmxlRkJ2YzJsMGFXOXVLR01zSUVGcEtTd2djekV1WjJWMFZtVnlkR1Y0VUc5emFYUnBiMjRvYkN3Z1Vta3BPd29nSUNBZ2JHVjBJR2dnUFNCbmNDaHpNU3dnWlN3Z2RDd2diaXdnZDJrc0lFRnBMQ0JTYVN3Z2MzSXBPd29nSUNBZ2FXWWdLR2dwSUhzS0lDQWdJQ0FnSUNCcElDWW1JQ2gwY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHa3NJRzhwTENCdWNpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR2tzSUdNcExDQnBjaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0drc0lHd3BMQ0JvTG5WMklEMGdWVzR1WjJWMFNXNTBaWEp3YjJ4aGRHbHZiaWh6Y2l3Z2Qya3NJRUZwTENCU2FTd2dkSElzSUc1eUxDQnBjaXdnYm1WM0lGb3BLU3dnY2lBbUppQW9kSEl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoeUxDQnZLU3dnYm5JdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHlMQ0JqS1N3Z2FYSXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h5TENCc0tTd2dhQzUxZGpFZ1BTQlZiaTVuWlhSSmJuUmxjbkJ2YkdGMGFXOXVLSE55TENCM2FTd2dRV2tzSUZKcExDQjBjaXdnYm5Jc0lHbHlMQ0J1WlhjZ1dpa3NJR2d1ZFhZeUlEMGdhQzUxZGpFcExDQmhJQ1ltSUNodmFDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VzSUc4cExDQmphQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFc0lHTXBMQ0JzYUM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHRXNJR3dwTENCb0xtNXZjbTFoYkNBOUlGVnVMbWRsZEVsdWRHVnljRzlzWVhScGIyNG9jM0lzSUhkcExDQkJhU3dnVW1rc0lHOW9MQ0JqYUN3Z2JHZ3NJRzVsZHlCQktTd2dhQzV1YjNKdFlXd3VaRzkwS0c0dVpHbHlaV04wYVc5dUtTQStJREFnSmlZZ2FDNXViM0p0WVd3dWJYVnNkR2x3YkhsVFkyRnNZWElvTFRFcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWVRvZ2J5d0tJQ0FnSUNBZ0lDQWdJQ0FnWWpvZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnWXpvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm05eWJXRnNPaUJ1WlhjZ1FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3hKYm1SbGVEb2dNQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnVlc0dVoyVjBUbTl5YldGc0tIZHBMQ0JCYVN3Z1Vta3NJSFV1Ym05eWJXRnNLU3dnYUM1bVlXTmxJRDBnZFRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCb093cDlDblpoY2lCS2FTQTlJR05zWVhOeklITXhJR1Y0ZEdWdVpITWdSMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBeExDQnVJRDBnTVN3Z2FTQTlJREVzSUhJZ1BTQXhMQ0JoSUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1MGVYQmxJRDBnSWtKdmVFZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdoVFpXZHRaVzUwY3pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBVMlZuYldWdWRITTZJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVTJWbmJXVnVkSE02SUdFS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RHaHBjenNLSUNBZ0lDQWdJQ0JwSUQwZ1RXRjBhQzVtYkc5dmNpaHBLU3dnY2lBOUlFMWhkR2d1Wm14dmIzSW9jaWtzSUdFZ1BTQk5ZWFJvTG1ac2IyOXlLR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnVzEwc0lHd2dQU0JiWFN3Z2FDQTlJRnRkTENCMUlEMGdXMTBzSUdRZ1BTQXdMQ0JtSUQwZ01Ec0tJQ0FnSUNBZ0lDQnRLQ0o2SWl3Z0lua2lMQ0FpZUNJc0lDMHhMQ0F0TVN3Z2Jpd2dkQ3dnWlN3Z1lTd2djaXdnTUNrc0lHMG9Jbm9pTENBaWVTSXNJQ0o0SWl3Z01Td2dMVEVzSUc0c0lIUXNJQzFsTENCaExDQnlMQ0F4S1N3Z2JTZ2llQ0lzSUNKNklpd2dJbmtpTENBeExDQXhMQ0JsTENCdUxDQjBMQ0JwTENCaExDQXlLU3dnYlNnaWVDSXNJQ0o2SWl3Z0lua2lMQ0F4TENBdE1Td2daU3dnYml3Z0xYUXNJR2tzSUdFc0lETXBMQ0J0S0NKNElpd2dJbmtpTENBaWVpSXNJREVzSUMweExDQmxMQ0IwTENCdUxDQnBMQ0J5TENBMEtTd2diU2dpZUNJc0lDSjVJaXdnSW5vaUxDQXRNU3dnTFRFc0lHVXNJSFFzSUMxdUxDQnBMQ0J5TENBMUtTd2dkR2hwY3k1elpYUkpibVJsZUNoaktTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lIWmxLR3dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCMlpTaG9MQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QjJaU2gxTENBeUtTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiU2hmTENCbkxDQndMQ0IyTENCNExDQjVMQ0JpTENCM0xDQlNMQ0JKTENCTktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlVJRDBnZVNBdklGSXNJRThnUFNCaUlDOGdTU3dnV1NBOUlIa2dMeUF5TENBa0lEMGdZaUF2SURJc0lGVWdQU0IzSUM4Z01pd2dlaUE5SUZJZ0t5QXhMQ0J4SUQwZ1NTQXJJREVzSUVnZ1BTQXdMQ0J1WlNBOUlEQXNJRmNnUFNCdVpYY2dRVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCTElEMGdNRHNnU3lBOElIRTdJRXNyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSQ0E5SUVzZ0tpQlBJQzBnSkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnlBOUlEQTdJRWNnUENCNk95QkhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvWlNBOUlFY2dLaUJVSUMwZ1dUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JYVzE5ZElEMGdhR1VnS2lCMkxDQlhXMmRkSUQwZ1JDQXFJSGdzSUZkYmNGMGdQU0JWTENCc0xuQjFjMmdvVnk1NExDQlhMbmtzSUZjdWVpa3NJRmRiWDEwZ1BTQXdMQ0JYVzJkZElEMGdNQ3dnVjF0d1hTQTlJSGNnUGlBd0lEOGdNU0E2SUMweExDQm9MbkIxYzJnb1Z5NTRMQ0JYTG5rc0lGY3VlaWtzSUhVdWNIVnphQ2hISUM4Z1Vpa3NJSFV1Y0hWemFDZ3hJQzBnU3lBdklFa3BMQ0JJSUNzOUlERTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkxJRDBnTURzZ1N5QThJRWs3SUVzckt5bG1iM0lvYkdWMElFUWdQU0F3T3lCRUlEd2dVanNnUkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JISUQwZ1pDQXJJRVFnS3lCNklDb2dTeXdnYUdVZ1BTQmtJQ3NnUkNBcklIb2dLaUFvU3lBcklERXBMQ0JtWlNBOUlHUWdLeUFvUkNBcklERXBJQ3NnZWlBcUlDaExJQ3NnTVNrc0lGOWxJRDBnWkNBcklDaEVJQ3NnTVNrZ0t5QjZJQ29nU3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNdWNIVnphQ2hITENCb1pTd2dYMlVwTENCakxuQjFjMmdvYUdVc0lHWmxMQ0JmWlNrc0lHNWxJQ3M5SURZN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2J5NWhaR1JIY205MWNDaG1MQ0J1WlN3Z1RTa3NJR1lnS3owZ2JtVXNJR1FnS3owZ1NEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNXdZWEpoYldWMFpYSnpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCek1TaGxMbmRwWkhSb0xDQmxMbWhsYVdkb2RDd2daUzVrWlhCMGFDd2daUzUzYVdSMGFGTmxaMjFsYm5SekxDQmxMbWhsYVdkb2RGTmxaMjFsYm5SekxDQmxMbVJsY0hSb1UyVm5iV1Z1ZEhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQWthU2h6TVNrZ2V3b2dJQ0FnYkdWMElHVWdQU0I3ZlRzS0lDQWdJR1p2Y2loc1pYUWdkQ0JwYmlCek1TbDdDaUFnSUNBZ0lDQWdaVnQwWFNBOUlIdDlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUJwYmlCek1WdDBYU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2N6RmJkRjFiYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2tnSmlZZ0tHa3VhWE5EYjJ4dmNpQjhmQ0JwTG1selRXRjBjbWw0TXlCOGZDQnBMbWx6VFdGMGNtbDROQ0I4ZkNCcExtbHpWbVZqZEc5eU1pQjhmQ0JwTG1selZtVmpkRzl5TXlCOGZDQnBMbWx6Vm1WamRHOXlOQ0I4ZkNCcExtbHpWR1Y0ZEhWeVpTQjhmQ0JwTG1selVYVmhkR1Z5Ym1sdmJpa2dQeUJwTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsVnVhV1p2Y20xelZYUnBiSE02SUZSbGVIUjFjbVZ6SUc5bUlISmxibVJsY2lCMFlYSm5aWFJ6SUdOaGJtNXZkQ0JpWlNCamJHOXVaV1FnZG1saElHTnNiMjVsVlc1cFptOXliWE1vS1NCdmNpQnRaWEpuWlZWdWFXWnZjbTF6S0NrdUlpa3NJR1ZiZEYxYmJsMGdQU0J1ZFd4c0tTQTZJR1ZiZEYxYmJsMGdQU0JwTG1Oc2IyNWxLQ2tnT2lCQmNuSmhlUzVwYzBGeWNtRjVLR2twSUQ4Z1pWdDBYVnR1WFNBOUlHa3VjMnhwWTJVb0tTQTZJR1ZiZEYxYmJsMGdQU0JwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJRXgwS0hNeEtTQjdDaUFnSUNCc1pYUWdaU0E5SUh0OU93b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SUhNeExteGxibWQwYURzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJQ1JwS0hNeFczUmRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnYVc0Z2JpbGxXMmxkSUQwZ2JsdHBYVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsT3dwOUNtWjFibU4wYVc5dUlGOXdLSE14S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJRnRkT3dvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJSE14TG14bGJtZDBhRHNnZENzcktXVXVjSFZ6YUNoek1WdDBYUzVqYkc5dVpTZ3BLVHNLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJR0prS0hNeEtTQjdDaUFnSUNCeVpYUjFjbTRnY3pFdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrZ1BUMDlJRzUxYkd3Z1B5QnpNUzV2ZFhSd2RYUkRiMnh2Y2xOd1lXTmxJRG9nVVdVdWQyOXlhMmx1WjBOdmJHOXlVM0JoWTJVN0NuMEtkbUZ5SUhod0lEMGdld29nSUNBZ1kyeHZibVU2SUNScExBb2dJQ0FnYldWeVoyVTZJRXgwQ24wc0lIWndJRDBnWUhadmFXUWdiV0ZwYmlncElIc0tDV2RzWDFCdmMybDBhVzl1SUQwZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcUlHMXZaR1ZzVm1sbGQwMWhkSEpwZUNBcUlIWmxZelFvSUhCdmMybDBhVzl1TENBeExqQWdLVHNLZldBc0lIbHdJRDBnWUhadmFXUWdiV0ZwYmlncElIc0tDV2RzWDBaeVlXZERiMnh2Y2lBOUlIWmxZelFvSURFdU1Dd2dNQzR3TENBd0xqQXNJREV1TUNBcE93cDlZQ3dnYW5RZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDa3NJSFJvYVhNdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhaR1Z5VFdGMFpYSnBZV3dpTENCMGFHbHpMbVJsWm1sdVpYTWdQU0I3ZlN3Z2RHaHBjeTUxYm1sbWIzSnRjeUE5SUh0OUxDQjBhR2x6TG5WdWFXWnZjbTF6UjNKdmRYQnpJRDBnVzEwc0lIUm9hWE11ZG1WeWRHVjRVMmhoWkdWeUlEMGdkbkFzSUhSb2FYTXVabkpoWjIxbGJuUlRhR0ZrWlhJZ1BTQjVjQ3dnZEdocGN5NXNhVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdVptOW5JRDBnSVRFc0lIUm9hWE11YkdsbmFIUnpJRDBnSVRFc0lIUm9hWE11WTJ4cGNIQnBibWNnUFNBaE1Td2dkR2hwY3k1bWIzSmpaVk5wYm1kc1pWQmhjM01nUFNBaE1Dd2dkR2hwY3k1bGVIUmxibk5wYjI1eklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCa1pYSnBkbUYwYVhabGN6b2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2RFWlhCMGFEb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUnlZWGRDZFdabVpYSnpPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkdWeVZHVjRkSFZ5WlV4UFJEb2dJVEVLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbVJsWm1GMWJIUkJkSFJ5YVdKMWRHVldZV3gxWlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYWTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUhWMk1Ub2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ1hRb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWFXNWtaWGd3UVhSMGNtbGlkWFJsVG1GdFpTQTlJSFp2YVdRZ01Dd2dkR2hwY3k1MWJtbG1iM0p0YzA1bFpXUlZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NW5iSE5zVm1WeWMybHZiaUE5SUc1MWJHd3NJR1VnSVQwOUlIWnZhV1FnTUNBbUppQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVp5WVdkdFpXNTBVMmhoWkdWeUlEMGdaUzVtY21GbmJXVnVkRk5vWVdSbGNpd2dkR2hwY3k1MlpYSjBaWGhUYUdGa1pYSWdQU0JsTG5abGNuUmxlRk5vWVdSbGNpd2dkR2hwY3k1MWJtbG1iM0p0Y3lBOUlDUnBLR1V1ZFc1cFptOXliWE1wTENCMGFHbHpMblZ1YVdadmNtMXpSM0p2ZFhCeklEMGdYM0FvWlM1MWJtbG1iM0p0YzBkeWIzVndjeWtzSUhSb2FYTXVaR1ZtYVc1bGN5QTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR1V1WkdWbWFXNWxjeWtzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdVptOW5JRDBnWlM1bWIyY3NJSFJvYVhNdWJHbG5hSFJ6SUQwZ1pTNXNhV2RvZEhNc0lIUm9hWE11WTJ4cGNIQnBibWNnUFNCbExtTnNhWEJ3YVc1bkxDQjBhR2x6TG1WNGRHVnVjMmx2Ym5NZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMbVY0ZEdWdWMybHZibk1wTENCMGFHbHpMbWRzYzJ4V1pYSnphVzl1SUQwZ1pTNW5iSE5zVm1WeWMybHZiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdkQzVuYkhOc1ZtVnljMmx2YmlBOUlIUm9hWE11WjJ4emJGWmxjbk5wYjI0c0lIUXVkVzVwWm05eWJYTWdQU0I3ZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ2FXNGdkR2hwY3k1MWJtbG1iM0p0Y3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1MWJtbG1iM0p0YzF0cFhTNTJZV3gxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdZU0FtSmlCaExtbHpWR1Y0ZEhWeVpTQS9JSFF1ZFc1cFptOXliWE5iYVYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWRDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1lTNTBiMHBUVDA0b1pTa3VkWFZwWkFvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nWVNBbUppQmhMbWx6UTI5c2IzSWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltTWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHRXVaMlYwU0dWNEtDa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHRWdKaVlnWVM1cGMxWmxZM1J2Y2pJZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW5ZeUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCaExuUnZRWEp5WVhrb0tRb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ1lTQW1KaUJoTG1selZtVmpkRzl5TXlBL0lIUXVkVzVwWm05eWJYTmJhVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpZGpNaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUdFdWRHOUJjbkpoZVNncENpQWdJQ0FnSUNBZ0lDQWdJSDBnT2lCaElDWW1JR0V1YVhOV1pXTjBiM0kwSUQ4Z2RDNTFibWxtYjNKdGMxdHBYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0oyTkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nWVM1MGIwRnljbUY1S0NrS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUdFZ0ppWWdZUzVwYzAxaGRISnBlRE1nUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbTB6SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJoTG5SdlFYSnlZWGtvS1FvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nWVNBbUppQmhMbWx6VFdGMGNtbDROQ0EvSUhRdWRXNXBabTl5YlhOYmFWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWliVFFpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR0V1ZEc5QmNuSmhlU2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHRUtJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1QySnFaV04wTG10bGVYTW9kR2hwY3k1a1pXWnBibVZ6S1M1c1pXNW5kR2dnUGlBd0lDWW1JQ2gwTG1SbFptbHVaWE1nUFNCMGFHbHpMbVJsWm1sdVpYTXBMQ0IwTG5abGNuUmxlRk5vWVdSbGNpQTlJSFJvYVhNdWRtVnlkR1Y0VTJoaFpHVnlMQ0IwTG1aeVlXZHRaVzUwVTJoaFpHVnlJRDBnZEdocGN5NW1jbUZuYldWdWRGTm9ZV1JsY2l3Z2RDNXNhV2RvZEhNZ1BTQjBhR2x6TG14cFoyaDBjeXdnZEM1amJHbHdjR2x1WnlBOUlIUm9hWE11WTJ4cGNIQnBibWM3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ2FXNGdkR2hwY3k1bGVIUmxibk5wYjI1ektYUm9hWE11WlhoMFpXNXphVzl1YzF0cFhTQTlQVDBnSVRBZ0ppWWdLRzViYVYwZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTlpYW1WamRDNXJaWGx6S0c0cExteGxibWQwYUNBK0lEQWdKaVlnS0hRdVpYaDBaVzV6YVc5dWN5QTlJRzRwTENCME93b2dJQ0FnZlFwOUxDQkRjeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdTbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6UTJGdFpYSmhJRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pEWVcxbGNtRWlMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTQTlJRzVsZHlCNlpTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0SUQwZ2JtVjNJSHBsTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYaEpiblpsY25ObElEMGdibVYzSUhwbExDQjBhR2x6TG1OdmIzSmthVzVoZEdWVGVYTjBaVzBnUFNCMmJqc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVc0lIUXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0dVdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1OdmNIa29aUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRLU3dnZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLR1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXBMQ0IwYUdsekxtTnZiM0prYVc1aGRHVlRlWE4wWlcwZ1BTQmxMbU52YjNKa2FXNWhkR1ZUZVhOMFpXMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYYjNKc1pFUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtZGxkRmR2Y214a1JHbHlaV04wYVc5dUtHVXBMbTVsWjJGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcExDQjBhR2x6TG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxuVndaR0YwWlZkdmNteGtUV0YwY21sNEtHVXNJSFFwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLZlN3Z2VYUWdQU0JqYkdGemN5QmxlSFJsYm1SeklFTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBMU1Dd2dkQ0E5SURFc0lHNGdQU0F1TVN3Z2FTQTlJREpsTXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTVwYzFCbGNuTndaV04wYVhabFEyRnRaWEpoSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNJc0lIUm9hWE11Wm05MklEMGdaU3dnZEdocGN5NTZiMjl0SUQwZ01Td2dkR2hwY3k1dVpXRnlJRDBnYml3Z2RHaHBjeTVtWVhJZ1BTQnBMQ0IwYUdsekxtWnZZM1Z6SUQwZ01UQXNJSFJvYVhNdVlYTndaV04wSUQwZ2RDd2dkR2hwY3k1MmFXVjNJRDBnYm5Wc2JDd2dkR2hwY3k1bWFXeHRSMkYxWjJVZ1BTQXpOU3dnZEdocGN5NW1hV3h0VDJabWMyVjBJRDBnTUN3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnZEdocGN5NW1iM1lnUFNCbExtWnZkaXdnZEdocGN5NTZiMjl0SUQwZ1pTNTZiMjl0TENCMGFHbHpMbTVsWVhJZ1BTQmxMbTVsWVhJc0lIUm9hWE11Wm1GeUlEMGdaUzVtWVhJc0lIUm9hWE11Wm05amRYTWdQU0JsTG1adlkzVnpMQ0IwYUdsekxtRnpjR1ZqZENBOUlHVXVZWE53WldOMExDQjBhR2x6TG5acFpYY2dQU0JsTG5acFpYY2dQVDA5SUc1MWJHd2dQeUJ1ZFd4c0lEb2dUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzUyYVdWM0tTd2dkR2hwY3k1bWFXeHRSMkYxWjJVZ1BTQmxMbVpwYkcxSFlYVm5aU3dnZEdocGN5NW1hV3h0VDJabWMyVjBJRDBnWlM1bWFXeHRUMlptYzJWMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbTlqWVd4TVpXNW5kR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ0xqVWdLaUIwYUdsekxtZGxkRVpwYkcxSVpXbG5hSFFvS1NBdklHVTdDaUFnSUNBZ0lDQWdkR2hwY3k1bWIzWWdQU0JhYVNBcUlESWdLaUJOWVhSb0xtRjBZVzRvZENrc0lIUm9hWE11ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJtOWpZV3hNWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0JOWVhSb0xuUmhiaWhoYVNBcUlDNDFJQ29nZEdocGN5NW1iM1lwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUF1TlNBcUlIUm9hWE11WjJWMFJtbHNiVWhsYVdkb2RDZ3BJQzhnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkRVZtWm1WamRHbDJaVVpQVmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1dta2dLaUF5SUNvZ1RXRjBhQzVoZEdGdUtFMWhkR2d1ZEdGdUtHRnBJQ29nTGpVZ0tpQjBhR2x6TG1admRpa2dMeUIwYUdsekxucHZiMjBwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSbWxzYlZkcFpIUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiRzFIWVhWblpTQXFJRTFoZEdndWJXbHVLSFJvYVhNdVlYTndaV04wTENBeEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEVacGJHMUlaV2xuYUhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm1sc2JVZGhkV2RsSUM4Z1RXRjBhQzV0WVhnb2RHaHBjeTVoYzNCbFkzUXNJREVwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWbWxsZDA5bVpuTmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQmhLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWhjM0JsWTNRZ1BTQmxJQzhnZEN3Z2RHaHBjeTUyYVdWM0lEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxuWnBaWGNnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WVdKc1pXUTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1kV3hzVjJsa2RHZzZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWjFiR3hJWldsbmFIUTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEZnNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRms2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MmFXVjNMbVZ1WVdKc1pXUWdQU0FoTUN3Z2RHaHBjeTUyYVdWM0xtWjFiR3hYYVdSMGFDQTlJR1VzSUhSb2FYTXVkbWxsZHk1bWRXeHNTR1ZwWjJoMElEMGdkQ3dnZEdocGN5NTJhV1YzTG05bVpuTmxkRmdnUFNCdUxDQjBhR2x6TG5acFpYY3ViMlptYzJWMFdTQTlJR2tzSUhSb2FYTXVkbWxsZHk1M2FXUjBhQ0E5SUhJc0lIUm9hWE11ZG1sbGR5NW9aV2xuYUhRZ1BTQmhMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5Vm1sbGQwOW1abk5sZENncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5acFpYY2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVkbWxsZHk1bGJtRmliR1ZrSUQwZ0lURXBMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbTVsWVhJc0lIUWdQU0JsSUNvZ1RXRjBhQzUwWVc0b1lXa2dLaUF1TlNBcUlIUm9hWE11Wm05MktTQXZJSFJvYVhNdWVtOXZiU3dnYmlBOUlESWdLaUIwTENCcElEMGdkR2hwY3k1aGMzQmxZM1FnS2lCdUxDQnlJRDBnTFM0MUlDb2dhU3dnWVNBOUlIUm9hWE11ZG1sbGR6c0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTJhV1YzSUNFOVBTQnVkV3hzSUNZbUlIUm9hWE11ZG1sbGR5NWxibUZpYkdWa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWVM1bWRXeHNWMmxrZEdnc0lHd2dQU0JoTG1aMWJHeElaV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJSElnS3owZ1lTNXZabVp6WlhSWUlDb2dhU0F2SUdNc0lIUWdMVDBnWVM1dlptWnpaWFJaSUNvZ2JpQXZJR3dzSUdrZ0tqMGdZUzUzYVdSMGFDQXZJR01zSUc0Z0tqMGdZUzVvWldsbmFIUWdMeUJzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVabWxzYlU5bVpuTmxkRHNLSUNBZ0lDQWdJQ0J2SUNFOVBTQXdJQ1ltSUNoeUlDczlJR1VnS2lCdklDOGdkR2hwY3k1blpYUkdhV3h0VjJsa2RHZ29LU2tzSUhSb2FYTXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNXRZV3RsVUdWeWMzQmxZM1JwZG1Vb2Npd2djaUFySUdrc0lIUXNJSFFnTFNCdUxDQmxMQ0IwYUdsekxtWmhjaXdnZEdocGN5NWpiMjl5WkdsdVlYUmxVM2x6ZEdWdEtTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG05aWFtVmpkQzVtYjNZZ1BTQjBhR2x6TG1admRpd2dkQzV2WW1wbFkzUXVlbTl2YlNBOUlIUm9hWE11ZW05dmJTd2dkQzV2WW1wbFkzUXVibVZoY2lBOUlIUm9hWE11Ym1WaGNpd2dkQzV2WW1wbFkzUXVabUZ5SUQwZ2RHaHBjeTVtWVhJc0lIUXViMkpxWldOMExtWnZZM1Z6SUQwZ2RHaHBjeTVtYjJOMWN5d2dkQzV2WW1wbFkzUXVZWE53WldOMElEMGdkR2hwY3k1aGMzQmxZM1FzSUhSb2FYTXVkbWxsZHlBaFBUMGdiblZzYkNBbUppQW9kQzV2WW1wbFkzUXVkbWxsZHlBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lIUm9hWE11ZG1sbGR5a3BMQ0IwTG05aWFtVmpkQzVtYVd4dFIyRjFaMlVnUFNCMGFHbHpMbVpwYkcxSFlYVm5aU3dnZEM1dlltcGxZM1F1Wm1sc2JVOW1abk5sZENBOUlIUm9hWE11Wm1sc2JVOW1abk5sZEN3Z2REc0tJQ0FnSUgwS2ZTd2dRMmtnUFNBdE9UQXNJRkJwSUQwZ01Td2dYMjhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRXBsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSkRkV0psUTJGdFpYSmhJaXdnZEdocGN5NXlaVzVrWlhKVVlYSm5aWFFnUFNCdUxDQjBhR2x6TG1OdmIzSmthVzVoZEdWVGVYTjBaVzBnUFNCdWRXeHNMQ0IwYUdsekxtRmpkR2wyWlUxcGNHMWhjRXhsZG1Wc0lEMGdNRHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCNWRDaERhU3dnVUdrc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUdrdWJHRjVaWEp6SUQwZ2RHaHBjeTVzWVhsbGNuTXNJSFJvYVhNdVlXUmtLR2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lIbDBLRU5wTENCUWFTd2daU3dnZENrN0NpQWdJQ0FnSUNBZ2NpNXNZWGxsY25NZ1BTQjBhR2x6TG14aGVXVnljeXdnZEdocGN5NWhaR1FvY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dlWFFvUTJrc0lGQnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQmhMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCMGFHbHpMbUZrWkNoaEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWxkeUI1ZENoRGFTd2dVR2tzSUdVc0lIUXBPd29nSUNBZ0lDQWdJRzh1YkdGNVpYSnpJRDBnZEdocGN5NXNZWGxsY25Nc0lIUm9hWE11WVdSa0tHOHBPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdibVYzSUhsMEtFTnBMQ0JRYVN3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnWXk1c1lYbGxjbk1nUFNCMGFHbHpMbXhoZVdWeWN5d2dkR2hwY3k1aFpHUW9ZeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1WlhjZ2VYUW9RMmtzSUZCcExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCc0xteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0IwYUdsekxtRmtaQ2hzS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlVOdmIzSmthVzVoZEdWVGVYTjBaVzBvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU52YjNKa2FXNWhkR1ZUZVhOMFpXMHNJSFFnUFNCMGFHbHpMbU5vYVd4a2NtVnVMbU52Ym1OaGRDZ3BMQ0JiYml3Z2FTd2djaXdnWVN3Z2J5d2dZMTBnUFNCME93b2dJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHd2diMllnZENsMGFHbHpMbkpsYlc5MlpTaHNLVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlQVDBnZG00cElHNHVkWEF1YzJWMEtEQXNJREVzSURBcExDQnVMbXh2YjJ0QmRDZ3hMQ0F3TENBd0tTd2dhUzUxY0M1elpYUW9NQ3dnTVN3Z01Da3NJR2t1Ykc5dmEwRjBLQzB4TENBd0xDQXdLU3dnY2k1MWNDNXpaWFFvTUN3Z01Dd2dMVEVwTENCeUxteHZiMnRCZENnd0xDQXhMQ0F3S1N3Z1lTNTFjQzV6WlhRb01Dd2dNQ3dnTVNrc0lHRXViRzl2YTBGMEtEQXNJQzB4TENBd0tTd2dieTUxY0M1elpYUW9NQ3dnTVN3Z01Da3NJRzh1Ykc5dmEwRjBLREFzSURBc0lERXBMQ0JqTG5Wd0xuTmxkQ2d3TENBeExDQXdLU3dnWXk1c2IyOXJRWFFvTUN3Z01Dd2dMVEVwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0dVZ1BUMDlJRWR5S1NCdUxuVndMbk5sZENnd0xDQXRNU3dnTUNrc0lHNHViRzl2YTBGMEtDMHhMQ0F3TENBd0tTd2dhUzUxY0M1elpYUW9NQ3dnTFRFc0lEQXBMQ0JwTG14dmIydEJkQ2d4TENBd0xDQXdLU3dnY2k1MWNDNXpaWFFvTUN3Z01Dd2dNU2tzSUhJdWJHOXZhMEYwS0RBc0lERXNJREFwTENCaExuVndMbk5sZENnd0xDQXdMQ0F0TVNrc0lHRXViRzl2YTBGMEtEQXNJQzB4TENBd0tTd2dieTUxY0M1elpYUW9NQ3dnTFRFc0lEQXBMQ0J2TG14dmIydEJkQ2d3TENBd0xDQXhLU3dnWXk1MWNDNXpaWFFvTUN3Z0xURXNJREFwTENCakxteHZiMnRCZENnd0xDQXdMQ0F0TVNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbFJJVWtWRkxrTjFZbVZEWVcxbGNtRXVkWEJrWVhSbFEyOXZjbVJwYm1GMFpWTjVjM1JsYlNncE9pQkpiblpoYkdsa0lHTnZiM0prYVc1aGRHVWdjM2x6ZEdWdE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2JDQnZaaUIwS1hSb2FYTXVZV1JrS0d3cExDQnNMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNHRnlaVzUwSUQwOVBTQnVkV3hzSUNZbUlIUm9hWE11ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1RzS0lDQWdJQ0FnSUNCc1pYUWdleUJ5Wlc1a1pYSlVZWEpuWlhRNklHNGdMQ0JoWTNScGRtVk5hWEJ0WVhCTVpYWmxiRG9nYVNBZ2ZTQTlJSFJvYVhNN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjI5eVpHbHVZWFJsVTNsemRHVnRJQ0U5UFNCbExtTnZiM0prYVc1aGRHVlRlWE4wWlcwZ0ppWWdLSFJvYVhNdVkyOXZjbVJwYm1GMFpWTjVjM1JsYlNBOUlHVXVZMjl2Y21ScGJtRjBaVk41YzNSbGJTd2dkR2hwY3k1MWNHUmhkR1ZEYjI5eVpHbHVZWFJsVTNsemRHVnRLQ2twT3dvZ0lDQWdJQ0FnSUd4bGRDQmJjaXdnWVN3Z2J5d2dZeXdnYkN3Z2FGMGdQU0IwYUdsekxtTm9hV3hrY21WdUxDQjFJRDBnWlM1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1N3Z1pDQTlJR1V1WjJWMFFXTjBhWFpsUTNWaVpVWmhZMlVvS1N3Z1ppQTlJR1V1WjJWMFFXTjBhWFpsVFdsd2JXRndUR1YyWld3b0tTd2diU0E5SUdVdWVISXVaVzVoWW14bFpEc0tJQ0FnSUNBZ0lDQmxMbmh5TG1WdVlXSnNaV1FnUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHNHVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNN0NpQWdJQ0FnSUNBZ2JpNTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h1TENBd0xDQnBLU3dnWlM1eVpXNWtaWElvZEN3Z2Npa3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzRzSURFc0lHa3BMQ0JsTG5KbGJtUmxjaWgwTENCaEtTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTWl3Z2FTa3NJR1V1Y21WdVpHVnlLSFFzSUc4cExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaHVMQ0F6TENCcEtTd2daUzV5Wlc1a1pYSW9kQ3dnWXlrc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHNHNJRFFzSUdrcExDQmxMbkpsYm1SbGNpaDBMQ0JzS1N3Z2JpNTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlGOHNJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzRzSURVc0lHa3BMQ0JsTG5KbGJtUmxjaWgwTENCb0tTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9kU3dnWkN3Z1ppa3NJR1V1ZUhJdVpXNWhZbXhsWkNBOUlHMHNJRzR1ZEdWNGRIVnlaUzV1WldWa2MxQk5Va1ZOVlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q24wc0lFdHBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvS1hzS0lDQWdJQ0FnSUNCbElEMGdaU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1pTQTZJRnRkTENCMElEMGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RDQTZJSHB1TENCemRYQmxjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvS1N3Z2RHaHBjeTVwYzBOMVltVlVaWGgwZFhKbElEMGdJVEFzSUhSb2FYTXVabXhwY0ZrZ1BTQWhNVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQnBiV0ZuWlhNb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVcxaFoyVTdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2FXMWhaMlZ6S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxJRDBnWlRzS0lDQWdJSDBLZlN3Z2VHOGdQU0JqYkdGemN5QmxlSFJsYm1SeklIRjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnZTMwcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lHVXNJSFFwTENCMGFHbHpMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElEMGdJVEE3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lBeENpQWdJQ0FnSUNBZ2ZTd2dhU0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYmdvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ2RDNWxibU52WkdsdVp5QWhQVDBnZG05cFpDQXdJQ1ltSUNoTmN5Z2lWRWhTUlVVdVYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBPaUJ2Y0hScGIyNHVaVzVqYjJScGJtY2dhR0Z6SUdKbFpXNGdjbVZ3YkdGalpXUWdZbmtnYjNCMGFXOXVMbU52Ykc5eVUzQmhZMlV1SWlrc0lIUXVZMjlzYjNKVGNHRmpaU0E5SUhRdVpXNWpiMlJwYm1jZ1BUMDlJSEpwSUQ4Z2RuUWdPaUJZZENrc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUc1bGR5QkxhU2hwTENCMExtMWhjSEJwYm1jc0lIUXVkM0poY0ZNc0lIUXVkM0poY0ZRc0lIUXViV0ZuUm1sc2RHVnlMQ0IwTG0xcGJrWnBiSFJsY2l3Z2RDNW1iM0p0WVhRc0lIUXVkSGx3WlN3Z2RDNWhibWx6YjNSeWIzQjVMQ0IwTG1OdmJHOXlVM0JoWTJVcExDQjBhR2x6TG5SbGVIUjFjbVV1YVhOU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbElEMGdJVEFzSUhSb2FYTXVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQjBMbWRsYm1WeVlYUmxUV2x3YldGd2N5QWhQVDBnZG05cFpDQXdJRDhnZEM1blpXNWxjbUYwWlUxcGNHMWhjSE1nT2lBaE1Td2dkR2hwY3k1MFpYaDBkWEpsTG0xcGJrWnBiSFJsY2lBOUlIUXViV2x1Um1sc2RHVnlJQ0U5UFNCMmIybGtJREFnUHlCMExtMXBia1pwYkhSbGNpQTZJRzEwT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVVZ4ZFdseVpXTjBZVzVuZFd4aGNsUmxlSFIxY21Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEhWeVpTNTBlWEJsSUQwZ2RDNTBlWEJsTENCMGFHbHpMblJsZUhSMWNtVXVZMjlzYjNKVGNHRmpaU0E5SUhRdVkyOXNiM0pUY0dGalpTd2dkR2hwY3k1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUhRdVoyVnVaWEpoZEdWTmFYQnRZWEJ6TENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlJRDBnZEM1dGFXNUdhV3gwWlhJc0lIUm9hWE11ZEdWNGRIVnlaUzV0WVdkR2FXeDBaWElnUFNCMExtMWhaMFpwYkhSbGNqc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSRmNYVnBjbVZqZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dZQW9LQ1FrSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUkVhWEpsWTNScGIyNDdDZ29KQ1FrSmRtVmpNeUIwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUdsdUlIWmxZek1nWkdseUxDQnBiaUJ0WVhRMElHMWhkSEpwZUNBcElIc0tDZ2tKQ1FrSmNtVjBkWEp1SUc1dmNtMWhiR2w2WlNnZ0tDQnRZWFJ5YVhnZ0tpQjJaV00wS0NCa2FYSXNJREF1TUNBcElDa3VlSGw2SUNrN0Nnb0pDUWtKZlFvS0NRa0pDWFp2YVdRZ2JXRnBiaWdwSUhzS0Nna0pDUWtKZGxkdmNteGtSR2x5WldOMGFXOXVJRDBnZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCd2IzTnBkR2x2Yml3Z2JXOWtaV3hOWVhSeWFYZ2dLVHNLQ2drSkNRa0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NRa0pDUWtqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ29KQ1FrSmZRb0pDUWxnTEFvZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1lBb0tDUWtKQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSRmNYVnBjbVZqZERzS0Nna0pDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrUkdseVpXTjBhVzl1T3dvS0NRa0pDU05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDZ29KQ1FrSmRtOXBaQ0J0WVdsdUtDa2dld29LQ1FrSkNRbDJaV016SUdScGNtVmpkR2x2YmlBOUlHNXZjbTFoYkdsNlpTZ2dkbGR2Y214a1JHbHlaV04wYVc5dUlDazdDZ29KQ1FrSkNYWmxZeklnYzJGdGNHeGxWVllnUFNCbGNYVnBjbVZqZEZWMktDQmthWEpsWTNScGIyNGdLVHNLQ2drSkNRa0paMnhmUm5KaFowTnZiRzl5SUQwZ2RHVjRkSFZ5WlRKRUtDQjBSWEYxYVhKbFkzUXNJSE5oYlhCc1pWVldJQ2s3Q2dvSkNRa0pmUW9KQ1FsZ0NpQWdJQ0FnSUNBZ2ZTd2dhU0E5SUc1bGR5QkthU2cxTENBMUxDQTFLU3dnY2lBOUlHNWxkeUJxZENoN0NpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDSkRkV0psYldGd1JuSnZiVVZ4ZFdseVpXTjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklDUnBLRzR1ZFc1cFptOXliWE1wTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUc0dWRtVnlkR1Y0VTJoaFpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nYmk1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ2MybGtaVG9nUm5Rc0NpQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a2FXNW5PaUJFYmdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISXVkVzVwWm05eWJYTXVkRVZ4ZFdseVpXTjBMblpoYkhWbElEMGdkRHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCTmRDaHBMQ0J5S1N3Z2J5QTlJSFF1YldsdVJtbHNkR1Z5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG0xcGJrWnBiSFJsY2lBOVBUMGdiR2tnSmlZZ0tIUXViV2x1Um1sc2RHVnlJRDBnYlhRcExDQnVaWGNnWDI4b01Td2dNVEFzSUhSb2FYTXBMblZ3WkdGMFpTaGxMQ0JoS1N3Z2RDNXRhVzVHYVd4MFpYSWdQU0J2TENCaExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dZUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdWaGNpaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnUENBMk95QmhLeXNwWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvZEdocGN5d2dZU2tzSUdVdVkyeGxZWElvZEN3Z2Jpd2dhU2s3Q2lBZ0lDQWdJQ0FnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvY2lrN0NpQWdJQ0I5Q24wc0lFcGhJRDBnYm1WM0lFRXNJRTF3SUQwZ2JtVjNJRUVzSUZOd0lEMGdibVYzSUVobExDQnRiaUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dRU2d4TENBd0xDQXdLU3dnZENBOUlEQXBld29nSUNBZ0lDQWdJSFJvYVhNdWFYTlFiR0Z1WlNBOUlDRXdMQ0IwYUdsekxtNXZjbTFoYkNBOUlHVXNJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkRiMjF3YjI1bGJuUnpLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dWMyVjBLR1VzSUhRc0lHNHBMQ0IwYUdsekxtTnZibk4wWVc1MElEMGdhU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU9iM0p0WVd4QmJtUkRiM0JzWVc1aGNsQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3d1WTI5d2VTaGxLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQTlJQzEwTG1SdmRDaDBhR2x6TG01dmNtMWhiQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMjl3YkdGdVlYSlFiMmx1ZEhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1NtRXVjM1ZpVm1WamRHOXljeWh1TENCMEtTNWpjbTl6Y3loTmNDNXpkV0pXWldOMGIzSnpLR1VzSUhRcEtTNXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkdjbTl0VG05eWJXRnNRVzVrUTI5d2JHRnVZWEpRYjJsdWRDaHBMQ0JsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkM1amIzQjVLR1V1Ym05eWJXRnNLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQTlJR1V1WTI5dWMzUmhiblFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBeElDOGdkR2hwY3k1dWIzSnRZV3d1YkdWdVozUm9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwTENCMGFHbHpMbU52Ym5OMFlXNTBJQ285SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdVpXZGhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YzNSaGJuUWdLajBnTFRFc0lIUm9hWE11Ym05eWJXRnNMbTVsWjJGMFpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3d1Wkc5MEtHVXBJQ3NnZEdocGN5NWpiMjV6ZEdGdWREc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxWRzlUY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjM1JoYm1ObFZHOVFiMmx1ZENobExtTmxiblJsY2lrZ0xTQmxMbkpoWkdsMWN6c0tJQ0FnSUgwS0lDQWdJSEJ5YjJwbFkzUlFiMmx1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WTI5d2VTaGxLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9kR2hwY3k1dWIzSnRZV3dzSUMxMGFHbHpMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSTWFXNWxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVaR1ZzZEdFb1NtRXBMQ0JwSUQwZ2RHaHBjeTV1YjNKdFlXd3VaRzkwS0c0cE93b2dJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQXdLU0J5WlhSMWNtNGdkR2hwY3k1a2FYTjBZVzVqWlZSdlVHOXBiblFvWlM1emRHRnlkQ2tnUFQwOUlEQWdQeUIwTG1OdmNIa29aUzV6ZEdGeWRDa2dPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ0xTaGxMbk4wWVhKMExtUnZkQ2gwYUdsekxtNXZjbTFoYkNrZ0t5QjBhR2x6TG1OdmJuTjBZVzUwS1NBdklHazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISWdQQ0F3SUh4OElISWdQaUF4SUQ4Z2JuVnNiQ0E2SUhRdVkyOXdlU2hsTG5OMFlYSjBLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iaXdnY2lrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpUR2x1WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1ScGMzUmhibU5sVkc5UWIybHVkQ2hsTG5OMFlYSjBLU3dnYmlBOUlIUm9hWE11WkdsemRHRnVZMlZVYjFCdmFXNTBLR1V1Wlc1a0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQThJREFnSmlZZ2JpQStJREFnZkh3Z2JpQThJREFnSmlZZ2RDQStJREE3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGJuUmxjbk5sWTNSelVHeGhibVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGJuUmxjbk5sWTNSelVHeGhibVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCc1lXNWhjbEJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVqYjNCNUtIUm9hWE11Ym05eWJXRnNLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3RkR2hwY3k1amIyNXpkR0Z1ZENrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ0I4ZkNCVGNDNW5aWFJPYjNKdFlXeE5ZWFJ5YVhnb1pTa3NJR2tnUFNCMGFHbHpMbU52Y0d4aGJtRnlVRzlwYm5Rb1NtRXBMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2djaUE5SUhSb2FYTXVibTl5YldGc0xtRndjR3g1VFdGMGNtbDRNeWh1S1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUMxcExtUnZkQ2h5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWMzUmhiblFnTFQwZ1pTNWtiM1FvZEdocGN5NXViM0p0WVd3cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXViM0p0WVd3dVpYRjFZV3h6S0hSb2FYTXVibTl5YldGc0tTQW1KaUJsTG1OdmJuTjBZVzUwSUQwOVBTQjBhR2x6TG1OdmJuTjBZVzUwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmU3dnV1c0Z1BTQnVaWGNnV1hRc0lHOXlJRDBnYm1WM0lFRXNJRkJ6SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJ0Yml3Z2RDQTlJRzVsZHlCdGJpd2diaUE5SUc1bGR5QnRiaXdnYVNBOUlHNWxkeUJ0Yml3Z2NpQTlJRzVsZHlCdGJpd2dZU0E5SUc1bGR5QnRiaWw3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdiR0Z1WlhNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdrc0NpQWdJQ0FnSUNBZ0lDQWdJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0c0lHa3NJSElzSUdFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11Y0d4aGJtVnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZXekJkTG1OdmNIa29aU2tzSUc5Yk1WMHVZMjl3ZVNoMEtTd2diMXN5WFM1amIzQjVLRzRwTENCdld6TmRMbU52Y0hrb2FTa3NJRzliTkYwdVkyOXdlU2h5S1N3Z2IxczFYUzVqYjNCNUtHRXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5Cc1lXNWxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnTmpzZ2Jpc3JLWFJiYmwwdVkyOXdlU2hsTG5Cc1lXNWxjMXR1WFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVSEp2YW1WamRHbHZiazFoZEhKcGVDaGxMQ0IwSUQwZ2RtNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWNHeGhibVZ6TENCcElEMGdaUzVsYkdWdFpXNTBjeXdnY2lBOUlHbGJNRjBzSUdFZ1BTQnBXekZkTENCdklEMGdhVnN5WFN3Z1l5QTlJR2xiTTEwc0lHd2dQU0JwV3pSZExDQm9JRDBnYVZzMVhTd2dkU0E5SUdsYk5sMHNJR1FnUFNCcFd6ZGRMQ0JtSUQwZ2FWczRYU3dnYlNBOUlHbGJPVjBzSUY4Z1BTQnBXekV3WFN3Z1p5QTlJR2xiTVRGZExDQndJRDBnYVZzeE1sMHNJSFlnUFNCcFd6RXpYU3dnZUNBOUlHbGJNVFJkTENCNUlEMGdhVnN4TlYwN0NpQWdJQ0FnSUNBZ2FXWWdLRzViTUYwdWMyVjBRMjl0Y0c5dVpXNTBjeWhqSUMwZ2Npd2daQ0F0SUd3c0lHY2dMU0JtTENCNUlDMGdjQ2t1Ym05eWJXRnNhWHBsS0Nrc0lHNWJNVjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGpJQ3NnY2l3Z1pDQXJJR3dzSUdjZ0t5Qm1MQ0I1SUNzZ2NDa3VibTl5YldGc2FYcGxLQ2tzSUc1Yk1sMHVjMlYwUTI5dGNHOXVaVzUwY3loaklDc2dZU3dnWkNBcklHZ3NJR2NnS3lCdExDQjVJQ3NnZGlrdWJtOXliV0ZzYVhwbEtDa3NJRzViTTEwdWMyVjBRMjl0Y0c5dVpXNTBjeWhqSUMwZ1lTd2daQ0F0SUdnc0lHY2dMU0J0TENCNUlDMGdkaWt1Ym05eWJXRnNhWHBsS0Nrc0lHNWJORjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGpJQzBnYnl3Z1pDQXRJSFVzSUdjZ0xTQmZMQ0I1SUMwZ2VDa3VibTl5YldGc2FYcGxLQ2tzSUhRZ1BUMDlJSFp1S1NCdVd6VmRMbk5sZEVOdmJYQnZibVZ1ZEhNb1l5QXJJRzhzSUdRZ0t5QjFMQ0JuSUNzZ1h5d2dlU0FySUhncExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFFnUFQwOUlFZHlLU0J1V3pWZExuTmxkRU52YlhCdmJtVnVkSE1vYnl3Z2RTd2dYeXdnZUNrdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNBZ0lDQWdaV3h6WlNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWxSSVVrVkZMa1p5ZFhOMGRXMHVjMlYwUm5KdmJWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUb2dTVzUyWVd4cFpDQmpiMjl5WkdsdVlYUmxJSE41YzNSbGJUb2dJaUFySUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzA5aWFtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1WW05MWJtUnBibWRUY0dobGNtVWdJVDA5SUhadmFXUWdNQ2tnWlM1aWIzVnVaR2x1WjFOd2FHVnlaU0E5UFQwZ2JuVnNiQ0FtSmlCbExtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCWmJpNWpiM0I1S0dVdVltOTFibVJwYm1kVGNHaGxjbVVwTG1Gd2NHeDVUV0YwY21sNE5DaGxMbTFoZEhKcGVGZHZjbXhrS1RzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG1KdmRXNWthVzVuVTNCb1pYSmxJRDA5UFNCdWRXeHNJQ1ltSUhRdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tzSUZsdUxtTnZjSGtvZEM1aWIzVnVaR2x1WjFOd2FHVnlaU2t1WVhCd2JIbE5ZWFJ5YVhnMEtHVXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsY25ObFkzUnpVM0JvWlhKbEtGbHVLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVGNISnBkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCWmJpNWpaVzUwWlhJdWMyVjBLREFzSURBc0lEQXBMQ0JaYmk1eVlXUnBkWE1nUFNBdU56QTNNVEEyTnpneE1UZzJOVFEzTml3Z1dXNHVZWEJ3YkhsTllYUnlhWGcwS0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb1dXNHBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFOd2FHVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJzWVc1bGN5d2diaUE5SUdVdVkyVnVkR1Z5TENCcElEMGdMV1V1Y21Ga2FYVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0EyT3lCeUt5c3BhV1lnS0hSYmNsMHVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHNHBJRHdnYVNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d2JHRnVaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURZN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzl5TG5nZ1BTQnBMbTV2Y20xaGJDNTRJRDRnTUNBL0lHVXViV0Y0TG5nZ09pQmxMbTFwYmk1NExDQnZjaTU1SUQwZ2FTNXViM0p0WVd3dWVTQStJREFnUHlCbExtMWhlQzU1SURvZ1pTNXRhVzR1ZVN3Z2IzSXVlaUE5SUdrdWJtOXliV0ZzTG5vZ1BpQXdJRDhnWlM1dFlYZ3VlaUE2SUdVdWJXbHVMbm9zSUdrdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0c5eUtTQThJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFd093b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5Cc1lXNWxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnTmpzZ2Jpc3JLV2xtSUNoMFcyNWRMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU0E4SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lUQTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQkZaQ2dwSUhzS0lDQWdJR3hsZENCek1TQTlJRzUxYkd3c0lHVWdQU0FoTVN3Z2RDQTlJRzUxYkd3c0lHNGdQU0J1ZFd4c093b2dJQ0FnWm5WdVkzUnBiMjRnYVNoeUxDQmhLU0I3Q2lBZ0lDQWdJQ0FnZENoeUxDQmhLU3dnYmlBOUlITXhMbkpsY1hWbGMzUkJibWx0WVhScGIyNUdjbUZ0WlNocEtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdjM1JoY25RNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCbElDRTlQU0FoTUNBbUppQjBJQ0U5UFNCdWRXeHNJQ1ltSUNodUlEMGdjekV1Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbEtHa3BMQ0JsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzNSdmNEb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXhMbU5oYm1ObGJFRnVhVzFoZEdsdmJrWnlZVzFsS0c0cExDQmxJRDBnSVRFN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFJCYm1sdFlYUnBiMjVNYjI5d09pQm1kVzVqZEdsdmJpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0J5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMjl1ZEdWNGREb2dablZ1WTNScGIyNG9jaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpNU0E5SUhJN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQmljQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCbExtbHpWMlZpUjB3eUxDQnVJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUJwS0d3c0lHZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR3d1WVhKeVlYa3NJR1FnUFNCc0xuVnpZV2RsTENCbUlEMGdjekV1WTNKbFlYUmxRblZtWm1WeUtDazdDaUFnSUNBZ0lDQWdjekV1WW1sdVpFSjFabVpsY2lob0xDQm1LU3dnY3pFdVluVm1abVZ5UkdGMFlTaG9MQ0IxTENCa0tTd2diQzV2YmxWd2JHOWhaRU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHMDdDaUFnSUNBZ0lDQWdhV1lnS0hVZ2FXNXpkR0Z1WTJWdlppQkdiRzloZERNeVFYSnlZWGtwSUcwZ1BTQnpNUzVHVEU5QlZEc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaDFJR2x1YzNSaGJtTmxiMllnVldsdWRERTJRWEp5WVhrcElHbG1JQ2hzTG1selJteHZZWFF4TmtKMVptWmxja0YwZEhKcFluVjBaU2tnYVdZZ0tIUXBJRzBnUFNCek1TNUlRVXhHWDBaTVQwRlVPd29nSUNBZ0lDQWdJR1ZzYzJVZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVYWldKSFRFRjBkSEpwWW5WMFpYTTZJRlZ6WVdkbElHOW1JRVpzYjJGME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVZ2NtVnhkV2x5WlhNZ1YyVmlSMHd5TGlJcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYlNBOUlITXhMbFZPVTBsSFRrVkVYMU5JVDFKVU93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tIVWdhVzV6ZEdGdVkyVnZaaUJKYm5ReE5rRnljbUY1S1NCdElEMGdjekV1VTBoUFVsUTdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9kU0JwYm5OMFlXNWpaVzltSUZWcGJuUXpNa0Z5Y21GNUtTQnRJRDBnY3pFdVZVNVRTVWRPUlVSZlNVNVVPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFVnYVc1emRHRnVZMlZ2WmlCSmJuUXpNa0Z5Y21GNUtTQnRJRDBnY3pFdVNVNVVPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFVnYVc1emRHRnVZMlZ2WmlCSmJuUTRRWEp5WVhrcElHMGdQU0J6TVM1Q1dWUkZPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFVnYVc1emRHRnVZMlZ2WmlCVmFXNTBPRUZ5Y21GNUtTQnRJRDBnY3pFdVZVNVRTVWRPUlVSZlFsbFVSVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2gxSUdsdWMzUmhibU5sYjJZZ1ZXbHVkRGhEYkdGdGNHVmtRWEp5WVhrcElHMGdQU0J6TVM1VlRsTkpSMDVGUkY5Q1dWUkZPd29nSUNBZ0lDQWdJR1ZzYzJVZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVYWldKSFRFRjBkSEpwWW5WMFpYTTZJRlZ1YzNWd2NHOXlkR1ZrSUdKMVptWmxjaUJrWVhSaElHWnZjbTFoZERvZ0lpQXJJSFVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2pvZ1ppd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2diU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lubDBaWE5RWlhKRmJHVnRaVzUwT2lCMUxrSlpWRVZUWDFCRlVsOUZURVZOUlU1VUxBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUJzTG5abGNuTnBiMjRLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NpaHNMQ0JvTENCMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQm9MbUZ5Y21GNUxDQm1JRDBnYUM1MWNHUmhkR1ZTWVc1blpUc0tJQ0FnSUNBZ0lDQnpNUzVpYVc1a1FuVm1abVZ5S0hVc0lHd3BMQ0JtTG1OdmRXNTBJRDA5UFNBdE1TQS9JSE14TG1KMVptWmxjbE4xWWtSaGRHRW9kU3dnTUN3Z1pDa2dPaUFvZENBL0lITXhMbUoxWm1abGNsTjFZa1JoZEdFb2RTd2daaTV2Wm1aelpYUWdLaUJrTGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVTENCa0xDQm1MbTltWm5ObGRDd2daaTVqYjNWdWRDa2dPaUJ6TVM1aWRXWm1aWEpUZFdKRVlYUmhLSFVzSUdZdWIyWm1jMlYwSUNvZ1pDNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDd2daQzV6ZFdKaGNuSmhlU2htTG05bVpuTmxkQ3dnWmk1dlptWnpaWFFnS3lCbUxtTnZkVzUwS1Nrc0lHWXVZMjkxYm5RZ1BTQXRNU2tzSUdndWIyNVZjR3h2WVdSRFlXeHNZbUZqYXlncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZU2hzS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3dWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQW1KaUFvYkNBOUlHd3VaR0YwWVNrc0lHNHVaMlYwS0d3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWhzS1NCN0NpQWdJQ0FnSUNBZ2JDNXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxJQ1ltSUNoc0lEMGdiQzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHNHVaMlYwS0d3cE93b2dJQ0FnSUNBZ0lHZ2dKaVlnS0hNeExtUmxiR1YwWlVKMVptWmxjaWhvTG1KMVptWmxjaWtzSUc0dVpHVnNaWFJsS0d3cEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR01vYkN3Z2FDa2dld29nSUNBZ0lDQWdJR2xtSUNoc0xtbHpSMHhDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCdUxtZGxkQ2hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdLQ0ZrSUh4OElHUXVkbVZ5YzJsdmJpQThJR3d1ZG1WeWMybHZiaWtnSmlZZ2JpNXpaWFFvYkN3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luVm1abVZ5T2lCc0xtSjFabVpsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJR3d1ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSjVkR1Z6VUdWeVJXeGxiV1Z1ZERvZ2JDNWxiR1Z0Wlc1MFUybDZaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpsY25OcGIyNDZJR3d1ZG1WeWMybHZiZ29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ0ppWWdLR3dnUFNCc0xtUmhkR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYmk1blpYUW9iQ2s3Q2lBZ0lDQWdJQ0FnZFNBOVBUMGdkbTlwWkNBd0lEOGdiaTV6WlhRb2JDd2dhU2hzTENCb0tTa2dPaUIxTG5abGNuTnBiMjRnUENCc0xuWmxjbk5wYjI0Z0ppWWdLSElvZFM1aWRXWm1aWElzSUd3c0lHZ3BMQ0IxTG5abGNuTnBiMjRnUFNCc0xuWmxjbk5wYjI0cE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdFc0NpQWdJQ0FnSUNBZ2NtVnRiM1psT2lCdkxBb2dJQ0FnSUNBZ0lIVndaR0YwWlRvZ1l3b2dJQ0FnZlRzS2ZRcDJZWElnSkhJZ1BTQmpiR0Z6Y3lCek1TQmxlSFJsYm1SeklFZGxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTVN3Z2JpQTlJREVzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVVHeGhibVZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdoVFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBVMlZuYldWdWRITTZJR2tLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnWlNBdklESXNJR0VnUFNCMElDOGdNaXdnYnlBOUlFMWhkR2d1Wm14dmIzSW9iaWtzSUdNZ1BTQk5ZWFJvTG1ac2IyOXlLR2twTENCc0lEMGdieUFySURFc0lHZ2dQU0JqSUNzZ01Td2dkU0E5SUdVZ0x5QnZMQ0JrSUQwZ2RDQXZJR01zSUdZZ1BTQmJYU3dnYlNBOUlGdGRMQ0JmSUQwZ1cxMHNJR2NnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lEd2dhRHNnY0NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0J3SUNvZ1pDQXRJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREE3SUhnZ1BDQnNPeUI0S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCNElDb2dkU0F0SUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdExuQjFjMmdvZVN3Z0xYWXNJREFwTENCZkxuQjFjMmdvTUN3Z01Dd2dNU2tzSUdjdWNIVnphQ2g0SUM4Z2J5a3NJR2N1Y0hWemFDZ3hJQzBnY0NBdklHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BDQmpPeUJ3S3lzcFptOXlLR3hsZENCMklEMGdNRHNnZGlBOElHODdJSFlyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdkaUFySUd3Z0tpQndMQ0I1SUQwZ2RpQXJJR3dnS2lBb2NDQXJJREVwTENCaUlEMGdkaUFySURFZ0t5QnNJQ29nS0hBZ0t5QXhLU3dnZHlBOUlIWWdLeUF4SUNzZ2JDQXFJSEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWXVjSFZ6YUNoNExDQjVMQ0IzS1N3Z1ppNXdkWE5vS0hrc0lHSXNJSGNwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLR1lwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnZG1Vb2JTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJSFpsS0Y4c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUhabEtHY3NJRElwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5CaGNtRnRaWFJsY25NcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSE14S0dVdWQybGtkR2dzSUdVdWFHVnBaMmgwTENCbExuZHBaSFJvVTJWbmJXVnVkSE1zSUdVdWFHVnBaMmgwVTJWbmJXVnVkSE1wT3dvZ0lDQWdmUXA5TENCRmNDQTlJR0FqYVdaa1pXWWdWVk5GWDBGTVVFaEJTRUZUU0FvSmFXWWdLQ0JrYVdabWRYTmxRMjlzYjNJdVlTQThJR2RsZEVGc2NHaGhTR0Z6YUZSb2NtVnphRzlzWkNnZ2RsQnZjMmwwYVc5dUlDa2dLU0JrYVhOallYSmtPd29qWlc1a2FXWmdMQ0JVY0NBOUlHQWphV1prWldZZ1ZWTkZYMEZNVUVoQlNFRlRTQW9KWTI5dWMzUWdabXh2WVhRZ1FVeFFTRUZmU0VGVFNGOVRRMEZNUlNBOUlEQXVNRFU3Q2dsbWJHOWhkQ0JvWVhOb01rUW9JSFpsWXpJZ2RtRnNkV1VnS1NCN0Nna0pjbVYwZFhKdUlHWnlZV04wS0NBeExqQmxOQ0FxSUhOcGJpZ2dNVGN1TUNBcUlIWmhiSFZsTG5nZ0t5QXdMakVnS2lCMllXeDFaUzU1SUNrZ0tpQW9JREF1TVNBcklHRmljeWdnYzJsdUtDQXhNeTR3SUNvZ2RtRnNkV1V1ZVNBcklIWmhiSFZsTG5nZ0tTQXBJQ2tnS1RzS0NYMEtDV1pzYjJGMElHaGhjMmd6UkNnZ2RtVmpNeUIyWVd4MVpTQXBJSHNLQ1FseVpYUjFjbTRnYUdGemFESkVLQ0IyWldNeUtDQm9ZWE5vTWtRb0lIWmhiSFZsTG5oNUlDa3NJSFpoYkhWbExub2dLU0FwT3dvSmZRb0pabXh2WVhRZ1oyVjBRV3h3YUdGSVlYTm9WR2h5WlhOb2IyeGtLQ0IyWldNeklIQnZjMmwwYVc5dUlDa2dld29KQ1dac2IyRjBJRzFoZUVSbGNtbDJJRDBnYldGNEtBb0pDUWxzWlc1bmRHZ29JR1JHWkhnb0lIQnZjMmwwYVc5dUxuaDVlaUFwSUNrc0Nna0pDV3hsYm1kMGFDZ2daRVprZVNnZ2NHOXphWFJwYjI0dWVIbDZJQ2tnS1FvSkNTazdDZ2tKWm14dllYUWdjR2w0VTJOaGJHVWdQU0F4TGpBZ0x5QW9JRUZNVUVoQlgwaEJVMGhmVTBOQlRFVWdLaUJ0WVhoRVpYSnBkaUFwT3dvSkNYWmxZeklnY0dsNFUyTmhiR1Z6SUQwZ2RtVmpNaWdLQ1FrSlpYaHdNaWdnWm14dmIzSW9JR3h2WnpJb0lIQnBlRk5qWVd4bElDa2dLU0FwTEFvSkNRbGxlSEF5S0NCalpXbHNLQ0JzYjJjeUtDQndhWGhUWTJGc1pTQXBJQ2tnS1FvSkNTazdDZ2tKZG1Wak1pQmhiSEJvWVNBOUlIWmxZeklvQ2drSkNXaGhjMmd6UkNnZ1pteHZiM0lvSUhCcGVGTmpZV3hsY3k1NElDb2djRzl6YVhScGIyNHVlSGw2SUNrZ0tTd0tDUWtKYUdGemFETkVLQ0JtYkc5dmNpZ2djR2w0VTJOaGJHVnpMbmtnS2lCd2IzTnBkR2x2Ymk1NGVYb2dLU0FwQ2drSktUc0tDUWxtYkc5aGRDQnNaWEp3Um1GamRHOXlJRDBnWm5KaFkzUW9JR3h2WnpJb0lIQnBlRk5qWVd4bElDa2dLVHNLQ1FsbWJHOWhkQ0I0SUQwZ0tDQXhMakFnTFNCc1pYSndSbUZqZEc5eUlDa2dLaUJoYkhCb1lTNTRJQ3NnYkdWeWNFWmhZM1J2Y2lBcUlHRnNjR2hoTG5rN0Nna0pabXh2WVhRZ1lTQTlJRzFwYmlnZ2JHVnljRVpoWTNSdmNpd2dNUzR3SUMwZ2JHVnljRVpoWTNSdmNpQXBPd29KQ1habFl6TWdZMkZ6WlhNZ1BTQjJaV016S0FvSkNRbDRJQ29nZUNBdklDZ2dNaTR3SUNvZ1lTQXFJQ2dnTVM0d0lDMGdZU0FwSUNrc0Nna0pDU2dnZUNBdElEQXVOU0FxSUdFZ0tTQXZJQ2dnTVM0d0lDMGdZU0FwTEFvSkNRa3hMakFnTFNBb0lDZ2dNUzR3SUMwZ2VDQXBJQ29nS0NBeExqQWdMU0I0SUNrZ0x5QW9JREl1TUNBcUlHRWdLaUFvSURFdU1DQXRJR0VnS1NBcElDa0tDUWtwT3dvSkNXWnNiMkYwSUhSb2NtVnphRzlzWkNBOUlDZ2dlQ0E4SUNnZ01TNHdJQzBnWVNBcElDa0tDUWtKUHlBb0lDZ2dlQ0E4SUdFZ0tTQS9JR05oYzJWekxuZ2dPaUJqWVhObGN5NTVJQ2tLQ1FrSk9pQmpZWE5sY3k1Nk93b0pDWEpsZEhWeWJpQmpiR0Z0Y0NnZ2RHaHlaWE5vYjJ4a0lDd2dNUzR3WlMwMkxDQXhMakFnS1RzS0NYMEtJMlZ1WkdsbVlDd2dkM0FnUFNCZ0kybG1aR1ZtSUZWVFJWOUJURkJJUVUxQlVBb0paR2xtWm5WelpVTnZiRzl5TG1FZ0tqMGdkR1Y0ZEhWeVpUSkVLQ0JoYkhCb1lVMWhjQ3dnZGtGc2NHaGhUV0Z3VlhZZ0tTNW5Pd29qWlc1a2FXWmdMQ0JCY0NBOUlHQWphV1prWldZZ1ZWTkZYMEZNVUVoQlRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JoYkhCb1lVMWhjRHNLSTJWdVpHbG1ZQ3dnVW5BZ1BTQmdJMmxtWkdWbUlGVlRSVjlCVEZCSVFWUkZVMVFLQ1dsbUlDZ2daR2xtWm5WelpVTnZiRzl5TG1FZ1BDQmhiSEJvWVZSbGMzUWdLU0JrYVhOallYSmtPd29qWlc1a2FXWmdMQ0JEY0NBOUlHQWphV1prWldZZ1ZWTkZYMEZNVUVoQlZFVlRWQW9KZFc1cFptOXliU0JtYkc5aGRDQmhiSEJvWVZSbGMzUTdDaU5sYm1ScFptQXNJRkJ3SUQwZ1lDTnBabVJsWmlCVlUwVmZRVTlOUVZBS0NXWnNiMkYwSUdGdFltbGxiblJQWTJOc2RYTnBiMjRnUFNBb0lIUmxlSFIxY21VeVJDZ2dZVzlOWVhBc0lIWkJiMDFoY0ZWMklDa3VjaUF0SURFdU1DQXBJQ29nWVc5TllYQkpiblJsYm5OcGRIa2dLeUF4TGpBN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS2owZ1lXMWlhV1Z1ZEU5alkyeDFjMmx2YmpzS0NTTnBaaUJrWldacGJtVmtLQ0JWVTBWZlJVNVdUVUZRSUNrZ0ppWWdaR1ZtYVc1bFpDZ2dVMVJCVGtSQlVrUWdLUW9KQ1dac2IyRjBJR1J2ZEU1V0lEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ1oyVnZiV1YwY25sT2IzSnRZV3dzSUdkbGIyMWxkSEo1Vm1sbGQwUnBjaUFwSUNrN0Nna0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSVGNHVmpkV3hoY2lBcVBTQmpiMjF3ZFhSbFUzQmxZM1ZzWVhKUFkyTnNkWE5wYjI0b0lHUnZkRTVXTENCaGJXSnBaVzUwVDJOamJIVnphVzl1TENCdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNZ0tUc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQk1jQ0E5SUdBamFXWmtaV1lnVlZORlgwRlBUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCaGIwMWhjRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdZVzlOWVhCSmJuUmxibk5wZEhrN0NpTmxibVJwWm1Bc0lFbHdJRDBnWUhabFl6TWdkSEpoYm5ObWIzSnRaV1FnUFNCMlpXTXpLQ0J3YjNOcGRHbHZiaUFwT3dvamFXWmtaV1lnVlZORlgwRk1VRWhCU0VGVFNBb0pkbEJ2YzJsMGFXOXVJRDBnZG1Wak15Z2djRzl6YVhScGIyNGdLVHNLSTJWdVpHbG1ZQ3dnVlhBZ1BTQmdkbVZqTXlCdlltcGxZM1JPYjNKdFlXd2dQU0IyWldNektDQnViM0p0WVd3Z0tUc0tJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2wyWldNeklHOWlhbVZqZEZSaGJtZGxiblFnUFNCMlpXTXpLQ0IwWVc1blpXNTBMbmg1ZWlBcE93b2paVzVrYVdaZ0xDQkVjQ0E5SUdCbWJHOWhkQ0JIWDBKc2FXNXVVR2h2Ym1kZlNXMXdiR2xqYVhRb0lDa2dld29KY21WMGRYSnVJREF1TWpVN0NuMEtabXh2WVhRZ1JGOUNiR2x1YmxCb2IyNW5LQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnphR2x1YVc1bGMzTXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRTVJSUNrZ2V3b0pjbVYwZFhKdUlGSkZRMGxRVWs5RFFVeGZVRWtnS2lBb0lITm9hVzVwYm1WemN5QXFJREF1TlNBcklERXVNQ0FwSUNvZ2NHOTNLQ0JrYjNST1NDd2djMmhwYm1sdVpYTnpJQ2s3Q24wS2RtVmpNeUJDVWtSR1gwSnNhVzV1VUdodmJtY29JR052Ym5OMElHbHVJSFpsWXpNZ2JHbG5hSFJFYVhJc0lHTnZibk4wSUdsdUlIWmxZek1nZG1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nYzNCbFkzVnNZWEpEYjJ4dmNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2MyaHBibWx1WlhOeklDa2dld29KZG1Wak15Qm9ZV3htUkdseUlEMGdibTl5YldGc2FYcGxLQ0JzYVdkb2RFUnBjaUFySUhacFpYZEVhWElnS1RzS0NXWnNiMkYwSUdSdmRFNUlJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dibTl5YldGc0xDQm9ZV3htUkdseUlDa2dLVHNLQ1dac2IyRjBJR1J2ZEZaSUlEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ2RtbGxkMFJwY2l3Z2FHRnNaa1JwY2lBcElDazdDZ2wyWldNeklFWWdQU0JHWDFOamFHeHBZMnNvSUhOd1pXTjFiR0Z5UTI5c2IzSXNJREV1TUN3Z1pHOTBWa2dnS1RzS0NXWnNiMkYwSUVjZ1BTQkhYMEpzYVc1dVVHaHZibWRmU1cxd2JHbGphWFFvSUNrN0NnbG1iRzloZENCRUlEMGdSRjlDYkdsdWJsQm9iMjVuS0NCemFHbHVhVzVsYzNNc0lHUnZkRTVJSUNrN0NnbHlaWFIxY200Z1JpQXFJQ2dnUnlBcUlFUWdLVHNLZlNBdkx5QjJZV3hwWkdGMFpXUmdMQ0JPY0NBOUlHQWphV1prWldZZ1ZWTkZYMGxTU1VSRlUwTkZUa05GQ2dsamIyNXpkQ0J0WVhReklGaFpXbDlVVDE5U1JVTTNNRGtnUFNCdFlYUXpLQW9KQ1NBekxqSTBNRFExTkRJc0lDMHdMamsyT1RJMk5qQXNJQ0F3TGpBMU5UWTBNelFzQ2drSkxURXVOVE0zTVRNNE5Td2dJREV1T0RjMk1ERXdPQ3dnTFRBdU1qQTBNREkxT1N3S0NRa3RNQzQwT1RnMU16RTBMQ0FnTUM0d05ERTFOVFl3TENBZ01TNHdOVGN5TWpVeUNna3BPd29KZG1Wak15QkdjbVZ6Ym1Wc01GUnZTVzl5S0NCMlpXTXpJR1p5WlhOdVpXd3dJQ2tnZXdvSkNYWmxZek1nYzNGeWRFWXdJRDBnYzNGeWRDZ2dabkpsYzI1bGJEQWdLVHNLQ1FseVpYUjFjbTRnS0NCMlpXTXpLQ0F4TGpBZ0tTQXJJSE54Y25SR01DQXBJQzhnS0NCMlpXTXpLQ0F4TGpBZ0tTQXRJSE54Y25SR01DQXBPd29KZlFvSmRtVmpNeUJKYjNKVWIwWnlaWE51Wld3d0tDQjJaV016SUhSeVlXNXpiV2wwZEdWa1NXOXlMQ0JtYkc5aGRDQnBibU5wWkdWdWRFbHZjaUFwSUhzS0NRbHlaWFIxY200Z2NHOTNNaWdnS0NCMGNtRnVjMjFwZEhSbFpFbHZjaUF0SUhabFl6TW9JR2x1WTJsa1pXNTBTVzl5SUNrZ0tTQXZJQ2dnZEhKaGJuTnRhWFIwWldSSmIzSWdLeUIyWldNektDQnBibU5wWkdWdWRFbHZjaUFwSUNrZ0tUc0tDWDBLQ1dac2IyRjBJRWx2Y2xSdlJuSmxjMjVsYkRBb0lHWnNiMkYwSUhSeVlXNXpiV2wwZEdWa1NXOXlMQ0JtYkc5aGRDQnBibU5wWkdWdWRFbHZjaUFwSUhzS0NRbHlaWFIxY200Z2NHOTNNaWdnS0NCMGNtRnVjMjFwZEhSbFpFbHZjaUF0SUdsdVkybGtaVzUwU1c5eUlDa2dMeUFvSUhSeVlXNXpiV2wwZEdWa1NXOXlJQ3NnYVc1amFXUmxiblJKYjNJZ0tTazdDZ2w5Q2dsMlpXTXpJR1YyWVd4VFpXNXphWFJwZG1sMGVTZ2dabXh2WVhRZ1QxQkVMQ0IyWldNeklITm9hV1owSUNrZ2V3b0pDV1pzYjJGMElIQm9ZWE5sSUQwZ01pNHdJQ29nVUVrZ0tpQlBVRVFnS2lBeExqQmxMVGs3Q2drSmRtVmpNeUIyWVd3Z1BTQjJaV016S0NBMUxqUTROVFpsTFRFekxDQTBMalF5TURGbExURXpMQ0ExTGpJME9ERmxMVEV6SUNrN0Nna0pkbVZqTXlCd2IzTWdQU0IyWldNektDQXhMalk0TVRCbEt6QTJMQ0F4TGpjNU5UTmxLekEyTENBeUxqSXdPRFJsS3pBMklDazdDZ2tKZG1Wak15QjJZWElnUFNCMlpXTXpLQ0EwTGpNeU56aGxLekE1TENBNUxqTXdORFpsS3pBNUxDQTJMall4TWpGbEt6QTVJQ2s3Q2drSmRtVmpNeUI0ZVhvZ1BTQjJZV3dnS2lCemNYSjBLQ0F5TGpBZ0tpQlFTU0FxSUhaaGNpQXBJQ29nWTI5ektDQndiM01nS2lCd2FHRnpaU0FySUhOb2FXWjBJQ2tnS2lCbGVIQW9JQzBnY0c5M01pZ2djR2hoYzJVZ0tTQXFJSFpoY2lBcE93b0pDWGg1ZWk1NElDczlJRGt1TnpRM01HVXRNVFFnS2lCemNYSjBLQ0F5TGpBZ0tpQlFTU0FxSURRdU5USTRNbVVyTURrZ0tTQXFJR052Y3lnZ01pNHlNems1WlNzd05pQXFJSEJvWVhObElDc2djMmhwWm5SYklEQWdYU0FwSUNvZ1pYaHdLQ0F0SURRdU5USTRNbVVyTURrZ0tpQndiM2N5S0NCd2FHRnpaU0FwSUNrN0Nna0plSGw2SUM4OUlERXVNRFk0TldVdE56c0tDUWwyWldNeklISm5ZaUE5SUZoWldsOVVUMTlTUlVNM01Ea2dLaUI0ZVhvN0Nna0pjbVYwZFhKdUlISm5ZanNLQ1gwS0NYWmxZek1nWlhaaGJFbHlhV1JsYzJObGJtTmxLQ0JtYkc5aGRDQnZkWFJ6YVdSbFNVOVNMQ0JtYkc5aGRDQmxkR0V5TENCbWJHOWhkQ0JqYjNOVWFHVjBZVEVzSUdac2IyRjBJSFJvYVc1R2FXeHRWR2hwWTJ0dVpYTnpMQ0IyWldNeklHSmhjMlZHTUNBcElIc0tDUWwyWldNeklFazdDZ2tKWm14dllYUWdhWEpwWkdWelkyVnVZMlZKVDFJZ1BTQnRhWGdvSUc5MWRITnBaR1ZKVDFJc0lHVjBZVElzSUhOdGIyOTBhSE4wWlhBb0lEQXVNQ3dnTUM0d015d2dkR2hwYmtacGJHMVVhR2xqYTI1bGMzTWdLU0FwT3dvSkNXWnNiMkYwSUhOcGJsUm9aWFJoTWxOeElEMGdjRzkzTWlnZ2IzVjBjMmxrWlVsUFVpQXZJR2x5YVdSbGMyTmxibU5sU1U5U0lDa2dLaUFvSURFdU1DQXRJSEJ2ZHpJb0lHTnZjMVJvWlhSaE1TQXBJQ2s3Q2drSlpteHZZWFFnWTI5elZHaGxkR0V5VTNFZ1BTQXhMakFnTFNCemFXNVVhR1YwWVRKVGNUc0tDUWxwWmlBb0lHTnZjMVJvWlhSaE1sTnhJRHdnTUM0d0lDa2dld29KQ1FseVpYUjFjbTRnZG1Wak15Z2dNUzR3SUNrN0Nna0pmUW9KQ1dac2IyRjBJR052YzFSb1pYUmhNaUE5SUhOeGNuUW9JR052YzFSb1pYUmhNbE54SUNrN0Nna0pabXh2WVhRZ1VqQWdQU0JKYjNKVWIwWnlaWE51Wld3d0tDQnBjbWxrWlhOalpXNWpaVWxQVWl3Z2IzVjBjMmxrWlVsUFVpQXBPd29KQ1dac2IyRjBJRkl4TWlBOUlFWmZVMk5vYkdsamF5Z2dVakFzSURFdU1Dd2dZMjl6VkdobGRHRXhJQ2s3Q2drSlpteHZZWFFnVkRFeU1TQTlJREV1TUNBdElGSXhNanNLQ1FsbWJHOWhkQ0J3YUdreE1pQTlJREF1TURzS0NRbHBaaUFvSUdseWFXUmxjMk5sYm1ObFNVOVNJRHdnYjNWMGMybGtaVWxQVWlBcElIQm9hVEV5SUQwZ1VFazdDZ2tKWm14dllYUWdjR2hwTWpFZ1BTQlFTU0F0SUhCb2FURXlPd29KQ1habFl6TWdZbUZ6WlVsUFVpQTlJRVp5WlhOdVpXd3dWRzlKYjNJb0lHTnNZVzF3S0NCaVlYTmxSakFzSURBdU1Dd2dNQzQ1T1RrNUlDa2dLVHNKQ1habFl6TWdVakVnUFNCSmIzSlViMFp5WlhOdVpXd3dLQ0JpWVhObFNVOVNMQ0JwY21sa1pYTmpaVzVqWlVsUFVpQXBPd29KQ1habFl6TWdVakl6SUQwZ1JsOVRZMmhzYVdOcktDQlNNU3dnTVM0d0xDQmpiM05VYUdWMFlUSWdLVHNLQ1FsMlpXTXpJSEJvYVRJeklEMGdkbVZqTXlnZ01DNHdJQ2s3Q2drSmFXWWdLQ0JpWVhObFNVOVNXeUF3SUYwZ1BDQnBjbWxrWlhOalpXNWpaVWxQVWlBcElIQm9hVEl6V3lBd0lGMGdQU0JRU1RzS0NRbHBaaUFvSUdKaGMyVkpUMUpiSURFZ1hTQThJR2x5YVdSbGMyTmxibU5sU1U5U0lDa2djR2hwTWpOYklERWdYU0E5SUZCSk93b0pDV2xtSUNnZ1ltRnpaVWxQVWxzZ01pQmRJRHdnYVhKcFpHVnpZMlZ1WTJWSlQxSWdLU0J3YUdreU0xc2dNaUJkSUQwZ1VFazdDZ2tKWm14dllYUWdUMUJFSUQwZ01pNHdJQ29nYVhKcFpHVnpZMlZ1WTJWSlQxSWdLaUIwYUdsdVJtbHNiVlJvYVdOcmJtVnpjeUFxSUdOdmMxUm9aWFJoTWpzS0NRbDJaV016SUhCb2FTQTlJSFpsWXpNb0lIQm9hVEl4SUNrZ0t5QndhR2t5TXpzS0NRbDJaV016SUZJeE1qTWdQU0JqYkdGdGNDZ2dVakV5SUNvZ1VqSXpMQ0F4WlMwMUxDQXdMams1T1RrZ0tUc0tDUWwyWldNeklISXhNak1nUFNCemNYSjBLQ0JTTVRJeklDazdDZ2tKZG1Wak15QlNjeUE5SUhCdmR6SW9JRlF4TWpFZ0tTQXFJRkl5TXlBdklDZ2dkbVZqTXlnZ01TNHdJQ2tnTFNCU01USXpJQ2s3Q2drSmRtVmpNeUJETUNBOUlGSXhNaUFySUZKek93b0pDVWtnUFNCRE1Ec0tDUWwyWldNeklFTnRJRDBnVW5NZ0xTQlVNVEl4T3dvSkNXWnZjaUFvSUdsdWRDQnRJRDBnTVRzZ2JTQThQU0F5T3lBckt5QnRJQ2tnZXdvSkNRbERiU0FxUFNCeU1USXpPd29KQ1FsMlpXTXpJRk50SUQwZ01pNHdJQ29nWlhaaGJGTmxibk5wZEdsMmFYUjVLQ0JtYkc5aGRDZ2diU0FwSUNvZ1QxQkVMQ0JtYkc5aGRDZ2diU0FwSUNvZ2NHaHBJQ2s3Q2drSkNVa2dLejBnUTIwZ0tpQlRiVHNLQ1FsOUNna0pjbVYwZFhKdUlHMWhlQ2dnU1N3Z2RtVmpNeWdnTUM0d0lDa2dLVHNLQ1gwS0kyVnVaR2xtWUN3Z1QzQWdQU0JnSTJsbVpHVm1JRlZUUlY5Q1ZVMVFUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCaWRXMXdUV0Z3T3dvSmRXNXBabTl5YlNCbWJHOWhkQ0JpZFcxd1UyTmhiR1U3Q2dsMlpXTXlJR1JJWkhoNVgyWjNaQ2dwSUhzS0NRbDJaV015SUdSVFZHUjRJRDBnWkVaa2VDZ2dka0oxYlhCTllYQlZkaUFwT3dvSkNYWmxZeklnWkZOVVpIa2dQU0JrUm1SNUtDQjJRblZ0Y0UxaGNGVjJJQ2s3Q2drSlpteHZZWFFnU0d4c0lEMGdZblZ0Y0ZOallXeGxJQ29nZEdWNGRIVnlaVEpFS0NCaWRXMXdUV0Z3TENCMlFuVnRjRTFoY0ZWMklDa3VlRHNLQ1FsbWJHOWhkQ0JrUW5nZ1BTQmlkVzF3VTJOaGJHVWdLaUIwWlhoMGRYSmxNa1FvSUdKMWJYQk5ZWEFzSUhaQ2RXMXdUV0Z3VlhZZ0t5QmtVMVJrZUNBcExuZ2dMU0JJYkd3N0Nna0pabXh2WVhRZ1pFSjVJRDBnWW5WdGNGTmpZV3hsSUNvZ2RHVjRkSFZ5WlRKRUtDQmlkVzF3VFdGd0xDQjJRblZ0Y0UxaGNGVjJJQ3NnWkZOVVpIa2dLUzU0SUMwZ1NHeHNPd29KQ1hKbGRIVnliaUIyWldNeUtDQmtRbmdzSUdSQ2VTQXBPd29KZlFvSmRtVmpNeUJ3WlhKMGRYSmlUbTl5YldGc1FYSmlLQ0IyWldNeklITjFjbVpmY0c5ekxDQjJaV016SUhOMWNtWmZibTl5YlN3Z2RtVmpNaUJrU0dSNGVTd2dabXh2WVhRZ1ptRmpaVVJwY21WamRHbHZiaUFwSUhzS0NRbDJaV016SUhaVGFXZHRZVmdnUFNCa1JtUjRLQ0J6ZFhKbVgzQnZjeTU0ZVhvZ0tUc0tDUWwyWldNeklIWlRhV2R0WVZrZ1BTQmtSbVI1S0NCemRYSm1YM0J2Y3k1NGVYb2dLVHNLQ1FsMlpXTXpJSFpPSUQwZ2MzVnlabDl1YjNKdE93b0pDWFpsWXpNZ1VqRWdQU0JqY205emN5Z2dkbE5wWjIxaFdTd2dkazRnS1RzS0NRbDJaV016SUZJeUlEMGdZM0p2YzNNb0lIWk9MQ0IyVTJsbmJXRllJQ2s3Q2drSlpteHZZWFFnWmtSbGRDQTlJR1J2ZENnZ2RsTnBaMjFoV0N3Z1VqRWdLU0FxSUdaaFkyVkVhWEpsWTNScGIyNDdDZ2tKZG1Wak15QjJSM0poWkNBOUlITnBaMjRvSUdaRVpYUWdLU0FxSUNnZ1pFaGtlSGt1ZUNBcUlGSXhJQ3NnWkVoa2VIa3VlU0FxSUZJeUlDazdDZ2tKY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnWVdKektDQm1SR1YwSUNrZ0tpQnpkWEptWDI1dmNtMGdMU0IyUjNKaFpDQXBPd29KZlFvalpXNWthV1pnTENCR2NDQTlJR0FqYVdZZ1RsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV5QStJREFLQ1habFl6UWdjR3hoYm1VN0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JWVGtsUFRsOURURWxRVUVsT1IxOVFURUZPUlZNN0lHa2dLeXNnS1NCN0Nna0pjR3hoYm1VZ1BTQmpiR2x3Y0dsdVoxQnNZVzVsYzFzZ2FTQmRPd29KQ1dsbUlDZ2daRzkwS0NCMlEyeHBjRkJ2YzJsMGFXOXVMQ0J3YkdGdVpTNTRlWG9nS1NBK0lIQnNZVzVsTG5jZ0tTQmthWE5qWVhKa093b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05wWmlCVlRrbFBUbDlEVEVsUVVFbE9SMTlRVEVGT1JWTWdQQ0JPVlUxZlEweEpVRkJKVGtkZlVFeEJUa1ZUQ2drSlltOXZiQ0JqYkdsd2NHVmtJRDBnZEhKMVpUc0tDUWtqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2tKWm05eUlDZ2dhVzUwSUdrZ1BTQlZUa2xQVGw5RFRFbFFVRWxPUjE5UVRFRk9SVk03SUdrZ1BDQk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRPeUJwSUNzcklDa2dld29KQ1Fsd2JHRnVaU0E5SUdOc2FYQndhVzVuVUd4aGJtVnpXeUJwSUYwN0Nna0pDV05zYVhCd1pXUWdQU0FvSUdSdmRDZ2dka05zYVhCUWIzTnBkR2x2Yml3Z2NHeGhibVV1ZUhsNklDa2dQaUJ3YkdGdVpTNTNJQ2tnSmlZZ1kyeHBjSEJsWkRzS0NRbDlDZ2tKSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDUWxwWmlBb0lHTnNhWEJ3WldRZ0tTQmthWE5qWVhKa093b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lFSndJRDBnWUNOcFppQk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRDRnTUFvSmRtRnllV2x1WnlCMlpXTXpJSFpEYkdsd1VHOXphWFJwYjI0N0NnbDFibWxtYjNKdElIWmxZelFnWTJ4cGNIQnBibWRRYkdGdVpYTmJJRTVWVFY5RFRFbFFVRWxPUjE5UVRFRk9SVk1nWFRzS0kyVnVaR2xtWUN3Z2VuQWdQU0JnSTJsbUlFNVZUVjlEVEVsUVVFbE9SMTlRVEVGT1JWTWdQaUF3Q2dsMllYSjVhVzVuSUhabFl6TWdka05zYVhCUWIzTnBkR2x2YmpzS0kyVnVaR2xtWUN3Z1ZuQWdQU0JnSTJsbUlFNVZUVjlEVEVsUVVFbE9SMTlRVEVGT1JWTWdQaUF3Q2dsMlEyeHBjRkJ2YzJsMGFXOXVJRDBnTFNCdGRsQnZjMmwwYVc5dUxuaDVlanNLSTJWdVpHbG1ZQ3dnYTNBZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWw5QlRGQklRU0FwQ2dsa2FXWm1kWE5sUTI5c2IzSWdLajBnZGtOdmJHOXlPd29qWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSWdLUW9KWkdsbVpuVnpaVU52Ykc5eUxuSm5ZaUFxUFNCMlEyOXNiM0k3Q2lObGJtUnBabUFzSUVod0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZRMDlNVDFKZlFVeFFTRUVnS1FvSmRtRnllV2x1WnlCMlpXTTBJSFpEYjJ4dmNqc0tJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U0lDa0tDWFpoY25scGJtY2dkbVZqTXlCMlEyOXNiM0k3Q2lObGJtUnBabUFzSUVkd0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZRMDlNVDFKZlFVeFFTRUVnS1FvSmRtRnllV2x1WnlCMlpXTTBJSFpEYjJ4dmNqc0tJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U0lDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwbE9VMVJCVGtOSlRrZGZRMDlNVDFJZ0tRb0pkbUZ5ZVdsdVp5QjJaV016SUhaRGIyeHZjanNLSTJWdVpHbG1ZQ3dnVjNBZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWw5QlRGQklRU0FwQ2dsMlEyOXNiM0lnUFNCMlpXTTBLQ0F4TGpBZ0tUc0tJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U0lDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwbE9VMVJCVGtOSlRrZGZRMDlNVDFJZ0tRb0pka052Ykc5eUlEMGdkbVZqTXlnZ01TNHdJQ2s3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBOUFRFOVNDZ2wyUTI5c2IzSWdLajBnWTI5c2IzSTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMGxPVTFSQlRrTkpUa2RmUTA5TVQxSUtDWFpEYjJ4dmNpNTRlWG9nS2owZ2FXNXpkR0Z1WTJWRGIyeHZjaTU0ZVhvN0NpTmxibVJwWm1Bc0lGaHdJRDBnWUNOa1pXWnBibVVnVUVrZ015NHhOREUxT1RJMk5UTTFPRGszT1RNS0kyUmxabWx1WlNCUVNUSWdOaTR5T0RNeE9EVXpNRGN4TnprMU9EWUtJMlJsWm1sdVpTQlFTVjlJUVV4R0lERXVOVGN3TnprMk16STJOemswT0RrMk5nb2paR1ZtYVc1bElGSkZRMGxRVWs5RFFVeGZVRWtnTUM0ek1UZ3pNRGs0T0RZeE9ETTNPVEEzQ2lOa1pXWnBibVVnVWtWRFNWQlNUME5CVEY5UVNUSWdNQzR4TlRreE5UUTVORE13T1RFNE9UVXpOUW9qWkdWbWFXNWxJRVZRVTBsTVQwNGdNV1V0TmdvamFXWnVaR1ZtSUhOaGRIVnlZWFJsQ2lOa1pXWnBibVVnYzJGMGRYSmhkR1VvSUdFZ0tTQmpiR0Z0Y0NnZ1lTd2dNQzR3TENBeExqQWdLUW9qWlc1a2FXWUtJMlJsWm1sdVpTQjNhR2wwWlVOdmJYQnNaVzFsYm5Rb0lHRWdLU0FvSURFdU1DQXRJSE5oZEhWeVlYUmxLQ0JoSUNrZ0tRcG1iRzloZENCd2IzY3lLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQjRJQ2tnZXlCeVpYUjFjbTRnZUNwNE95QjlDblpsWXpNZ2NHOTNNaWdnWTI5dWMzUWdhVzRnZG1Wak15QjRJQ2tnZXlCeVpYUjFjbTRnZUNwNE95QjlDbVpzYjJGMElIQnZkek1vSUdOdmJuTjBJR2x1SUdac2IyRjBJSGdnS1NCN0lISmxkSFZ5YmlCNEtuZ3FlRHNnZlFwbWJHOWhkQ0J3YjNjMEtDQmpiMjV6ZENCcGJpQm1iRzloZENCNElDa2dleUJtYkc5aGRDQjRNaUE5SUhncWVEc2djbVYwZFhKdUlIZ3lLbmd5T3lCOUNtWnNiMkYwSUcxaGVETW9JR052Ym5OMElHbHVJSFpsWXpNZ2RpQXBJSHNnY21WMGRYSnVJRzFoZUNnZ2JXRjRLQ0IyTG5nc0lIWXVlU0FwTENCMkxub2dLVHNnZlFwbWJHOWhkQ0JoZG1WeVlXZGxLQ0JqYjI1emRDQnBiaUIyWldNeklIWWdLU0I3SUhKbGRIVnliaUJrYjNRb0lIWXNJSFpsWXpNb0lEQXVNek16TXpNek15QXBJQ2s3SUgwS2FHbG5hSEFnWm14dllYUWdjbUZ1WkNnZ1kyOXVjM1FnYVc0Z2RtVmpNaUIxZGlBcElIc0tDV052Ym5OMElHaHBaMmh3SUdac2IyRjBJR0VnUFNBeE1pNDVPRGs0TENCaUlEMGdOemd1TWpNekxDQmpJRDBnTkRNM05UZ3VOVFExTXpzS0NXaHBaMmh3SUdac2IyRjBJR1IwSUQwZ1pHOTBLQ0IxZGk1NGVTd2dkbVZqTWlnZ1lTeGlJQ2tnS1N3Z2MyNGdQU0J0YjJRb0lHUjBMQ0JRU1NBcE93b0pjbVYwZFhKdUlHWnlZV04wS0NCemFXNG9JSE51SUNrZ0tpQmpJQ2s3Q24wS0kybG1aR1ZtSUVoSlIwaGZVRkpGUTBsVFNVOU9DZ2xtYkc5aGRDQndjbVZqYVhOcGIyNVRZV1psVEdWdVozUm9LQ0IyWldNeklIWWdLU0I3SUhKbGRIVnliaUJzWlc1bmRHZ29JSFlnS1RzZ2ZRb2paV3h6WlFvSlpteHZZWFFnY0hKbFkybHphVzl1VTJGbVpVeGxibWQwYUNnZ2RtVmpNeUIySUNrZ2V3b0pDV1pzYjJGMElHMWhlRU52YlhCdmJtVnVkQ0E5SUcxaGVETW9JR0ZpY3lnZ2RpQXBJQ2s3Q2drSmNtVjBkWEp1SUd4bGJtZDBhQ2dnZGlBdklHMWhlRU52YlhCdmJtVnVkQ0FwSUNvZ2JXRjRRMjl0Y0c5dVpXNTBPd29KZlFvalpXNWthV1lLYzNSeWRXTjBJRWx1WTJsa1pXNTBUR2xuYUhRZ2V3b0pkbVZqTXlCamIyeHZjanNLQ1habFl6TWdaR2x5WldOMGFXOXVPd29KWW05dmJDQjJhWE5wWW14bE93cDlPd3B6ZEhKMVkzUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2V3b0pkbVZqTXlCa2FYSmxZM1JFYVdabWRYTmxPd29KZG1Wak15QmthWEpsWTNSVGNHVmpkV3hoY2pzS0NYWmxZek1nYVc1a2FYSmxZM1JFYVdabWRYTmxPd29KZG1Wak15QnBibVJwY21WamRGTndaV04xYkdGeU93cDlPd29qYVdaa1pXWWdWVk5GWDBGTVVFaEJTRUZUU0FvSmRtRnllV2x1WnlCMlpXTXpJSFpRYjNOcGRHbHZianNLSTJWdVpHbG1DblpsWXpNZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQnBiaUIyWldNeklHUnBjaXdnYVc0Z2JXRjBOQ0J0WVhSeWFYZ2dLU0I3Q2dseVpYUjFjbTRnYm05eWJXRnNhWHBsS0NBb0lHMWhkSEpwZUNBcUlIWmxZelFvSUdScGNpd2dNQzR3SUNrZ0tTNTRlWG9nS1RzS2ZRcDJaV016SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUdsdUlIWmxZek1nWkdseUxDQnBiaUJ0WVhRMElHMWhkSEpwZUNBcElIc0tDWEpsZEhWeWJpQnViM0p0WVd4cGVtVW9JQ2dnZG1Wak5DZ2daR2x5TENBd0xqQWdLU0FxSUcxaGRISnBlQ0FwTG5oNWVpQXBPd3A5Q20xaGRETWdkSEpoYm5Od2IzTmxUV0YwTXlnZ1kyOXVjM1FnYVc0Z2JXRjBNeUJ0SUNrZ2V3b0piV0YwTXlCMGJYQTdDZ2wwYlhCYklEQWdYU0E5SUhabFl6TW9JRzFiSURBZ1hTNTRMQ0J0V3lBeElGMHVlQ3dnYlZzZ01pQmRMbmdnS1RzS0NYUnRjRnNnTVNCZElEMGdkbVZqTXlnZ2JWc2dNQ0JkTG5rc0lHMWJJREVnWFM1NUxDQnRXeUF5SUYwdWVTQXBPd29KZEcxd1d5QXlJRjBnUFNCMlpXTXpLQ0J0V3lBd0lGMHVlaXdnYlZzZ01TQmRMbm9zSUcxYklESWdYUzU2SUNrN0NnbHlaWFIxY200Z2RHMXdPd3A5Q21ac2IyRjBJR3gxYldsdVlXNWpaU2dnWTI5dWMzUWdhVzRnZG1Wak15QnlaMklnS1NCN0NnbGpiMjV6ZENCMlpXTXpJSGRsYVdkb2RITWdQU0IyWldNektDQXdMakl4TWpZM01qa3NJREF1TnpFMU1UVXlNaXdnTUM0d056SXhOelV3SUNrN0NnbHlaWFIxY200Z1pHOTBLQ0IzWldsbmFIUnpMQ0J5WjJJZ0tUc0tmUXBpYjI5c0lHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JRzFoZERRZ2JTQXBJSHNLQ1hKbGRIVnliaUJ0V3lBeUlGMWJJRE1nWFNBOVBTQXRJREV1TURzS2ZRcDJaV015SUdWeGRXbHlaV04wVlhZb0lHbHVJSFpsWXpNZ1pHbHlJQ2tnZXdvSlpteHZZWFFnZFNBOUlHRjBZVzRvSUdScGNpNTZMQ0JrYVhJdWVDQXBJQ29nVWtWRFNWQlNUME5CVEY5UVNUSWdLeUF3TGpVN0NnbG1iRzloZENCMklEMGdZWE5wYmlnZ1kyeGhiWEFvSUdScGNpNTVMQ0F0SURFdU1Dd2dNUzR3SUNrZ0tTQXFJRkpGUTBsUVVrOURRVXhmVUVrZ0t5QXdMalU3Q2dseVpYUjFjbTRnZG1Wak1pZ2dkU3dnZGlBcE93cDlDblpsWXpNZ1FsSkVSbDlNWVcxaVpYSjBLQ0JqYjI1emRDQnBiaUIyWldNeklHUnBabVoxYzJWRGIyeHZjaUFwSUhzS0NYSmxkSFZ5YmlCU1JVTkpVRkpQUTBGTVgxQkpJQ29nWkdsbVpuVnpaVU52Ykc5eU93cDlDblpsWXpNZ1JsOVRZMmhzYVdOcktDQmpiMjV6ZENCcGJpQjJaV016SUdZd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCbU9UQXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRlpJSUNrZ2V3b0pabXh2WVhRZ1puSmxjMjVsYkNBOUlHVjRjRElvSUNnZ0xTQTFMalUxTkRjeklDb2daRzkwVmtnZ0xTQTJMams0TXpFMklDa2dLaUJrYjNSV1NDQXBPd29KY21WMGRYSnVJR1l3SUNvZ0tDQXhMakFnTFNCbWNtVnpibVZzSUNrZ0t5QW9JR1k1TUNBcUlHWnlaWE51Wld3Z0tUc0tmUXBtYkc5aGRDQkdYMU5qYUd4cFkyc29JR052Ym5OMElHbHVJR1pzYjJGMElHWXdMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQm1PVEFzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEZaSUlDa2dld29KWm14dllYUWdabkpsYzI1bGJDQTlJR1Y0Y0RJb0lDZ2dMU0ExTGpVMU5EY3pJQ29nWkc5MFZrZ2dMU0EyTGprNE16RTJJQ2tnS2lCa2IzUldTQ0FwT3dvSmNtVjBkWEp1SUdZd0lDb2dLQ0F4TGpBZ0xTQm1jbVZ6Ym1Wc0lDa2dLeUFvSUdZNU1DQXFJR1p5WlhOdVpXd2dLVHNLZlNBdkx5QjJZV3hwWkdGMFpXUmdMQ0J4Y0NBOUlHQWphV1prWldZZ1JVNVdUVUZRWDFSWlVFVmZRMVZDUlY5VlZnb0pJMlJsWm1sdVpTQmpkV0psVlZaZmJXbHVUV2x3VEdWMlpXd2dOQzR3Q2dralpHVm1hVzVsSUdOMVltVlZWbDl0YVc1VWFXeGxVMmw2WlNBeE5pNHdDZ2xtYkc5aGRDQm5aWFJHWVdObEtDQjJaV016SUdScGNtVmpkR2x2YmlBcElIc0tDUWwyWldNeklHRmljMFJwY21WamRHbHZiaUE5SUdGaWN5Z2daR2x5WldOMGFXOXVJQ2s3Q2drSlpteHZZWFFnWm1GalpTQTlJQzBnTVM0d093b0pDV2xtSUNnZ1lXSnpSR2x5WldOMGFXOXVMbmdnUGlCaFluTkVhWEpsWTNScGIyNHVlaUFwSUhzS0NRa0phV1lnS0NCaFluTkVhWEpsWTNScGIyNHVlQ0ErSUdGaWMwUnBjbVZqZEdsdmJpNTVJQ2tLQ1FrSkNXWmhZMlVnUFNCa2FYSmxZM1JwYjI0dWVDQStJREF1TUNBL0lEQXVNQ0E2SURNdU1Ec0tDUWtKWld4elpRb0pDUWtKWm1GalpTQTlJR1JwY21WamRHbHZiaTU1SUQ0Z01DNHdJRDhnTVM0d0lEb2dOQzR3T3dvSkNYMGdaV3h6WlNCN0Nna0pDV2xtSUNnZ1lXSnpSR2x5WldOMGFXOXVMbm9nUGlCaFluTkVhWEpsWTNScGIyNHVlU0FwQ2drSkNRbG1ZV05sSUQwZ1pHbHlaV04wYVc5dUxub2dQaUF3TGpBZ1B5QXlMakFnT2lBMUxqQTdDZ2tKQ1dWc2MyVUtDUWtKQ1daaFkyVWdQU0JrYVhKbFkzUnBiMjR1ZVNBK0lEQXVNQ0EvSURFdU1DQTZJRFF1TURzS0NRbDlDZ2tKY21WMGRYSnVJR1poWTJVN0NnbDlDZ2wyWldNeUlHZGxkRlZXS0NCMlpXTXpJR1JwY21WamRHbHZiaXdnWm14dllYUWdabUZqWlNBcElIc0tDUWwyWldNeUlIVjJPd29KQ1dsbUlDZ2dabUZqWlNBOVBTQXdMakFnS1NCN0Nna0pDWFYySUQwZ2RtVmpNaWdnWkdseVpXTjBhVzl1TG5vc0lHUnBjbVZqZEdsdmJpNTVJQ2tnTHlCaFluTW9JR1JwY21WamRHbHZiaTU0SUNrN0Nna0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0F4TGpBZ0tTQjdDZ2tKQ1hWMklEMGdkbVZqTWlnZ0xTQmthWEpsWTNScGIyNHVlQ3dnTFNCa2FYSmxZM1JwYjI0dWVpQXBJQzhnWVdKektDQmthWEpsWTNScGIyNHVlU0FwT3dvSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNaTR3SUNrZ2V3b0pDUWwxZGlBOUlIWmxZeklvSUMwZ1pHbHlaV04wYVc5dUxuZ3NJR1JwY21WamRHbHZiaTU1SUNrZ0x5QmhZbk1vSUdScGNtVmpkR2x2Ymk1NklDazdDZ2tKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBekxqQWdLU0I3Q2drSkNYVjJJRDBnZG1Wak1pZ2dMU0JrYVhKbFkzUnBiMjR1ZWl3Z1pHbHlaV04wYVc5dUxua2dLU0F2SUdGaWN5Z2daR2x5WldOMGFXOXVMbmdnS1RzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJRFF1TUNBcElIc0tDUWtKZFhZZ1BTQjJaV015S0NBdElHUnBjbVZqZEdsdmJpNTRMQ0JrYVhKbFkzUnBiMjR1ZWlBcElDOGdZV0p6S0NCa2FYSmxZM1JwYjI0dWVTQXBPd29KQ1gwZ1pXeHpaU0I3Q2drSkNYVjJJRDBnZG1Wak1pZ2daR2x5WldOMGFXOXVMbmdzSUdScGNtVmpkR2x2Ymk1NUlDa2dMeUJoWW5Nb0lHUnBjbVZqZEdsdmJpNTZJQ2s3Q2drSmZRb0pDWEpsZEhWeWJpQXdMalVnS2lBb0lIVjJJQ3NnTVM0d0lDazdDZ2w5Q2dsMlpXTXpJR0pwYkdsdVpXRnlRM1ZpWlZWV0tDQnpZVzF3YkdWeU1rUWdaVzUyVFdGd0xDQjJaV016SUdScGNtVmpkR2x2Yml3Z1pteHZZWFFnYldsd1NXNTBJQ2tnZXdvSkNXWnNiMkYwSUdaaFkyVWdQU0JuWlhSR1lXTmxLQ0JrYVhKbFkzUnBiMjRnS1RzS0NRbG1iRzloZENCbWFXeDBaWEpKYm5RZ1BTQnRZWGdvSUdOMVltVlZWbDl0YVc1TmFYQk1aWFpsYkNBdElHMXBjRWx1ZEN3Z01DNHdJQ2s3Q2drSmJXbHdTVzUwSUQwZ2JXRjRLQ0J0YVhCSmJuUXNJR04xWW1WVlZsOXRhVzVOYVhCTVpYWmxiQ0FwT3dvSkNXWnNiMkYwSUdaaFkyVlRhWHBsSUQwZ1pYaHdNaWdnYldsd1NXNTBJQ2s3Q2drSmFHbG5hSEFnZG1Wak1pQjFkaUE5SUdkbGRGVldLQ0JrYVhKbFkzUnBiMjRzSUdaaFkyVWdLU0FxSUNnZ1ptRmpaVk5wZW1VZ0xTQXlMakFnS1NBcklERXVNRHNLQ1FscFppQW9JR1poWTJVZ1BpQXlMakFnS1NCN0Nna0pDWFYyTG5rZ0t6MGdabUZqWlZOcGVtVTdDZ2tKQ1daaFkyVWdMVDBnTXk0d093b0pDWDBLQ1FsMWRpNTRJQ3M5SUdaaFkyVWdLaUJtWVdObFUybDZaVHNLQ1FsMWRpNTRJQ3M5SUdacGJIUmxja2x1ZENBcUlETXVNQ0FxSUdOMVltVlZWbDl0YVc1VWFXeGxVMmw2WlRzS0NRbDFkaTU1SUNzOUlEUXVNQ0FxSUNnZ1pYaHdNaWdnUTFWQ1JWVldYMDFCV0Y5TlNWQWdLU0F0SUdaaFkyVlRhWHBsSUNrN0Nna0pkWFl1ZUNBcVBTQkRWVUpGVlZaZlZFVllSVXhmVjBsRVZFZzdDZ2tKZFhZdWVTQXFQU0JEVlVKRlZWWmZWRVZZUlV4ZlNFVkpSMGhVT3dvSkNTTnBabVJsWmlCMFpYaDBkWEpsTWtSSGNtRmtSVmhVQ2drSkNYSmxkSFZ5YmlCMFpYaDBkWEpsTWtSSGNtRmtSVmhVS0NCbGJuWk5ZWEFzSUhWMkxDQjJaV015S0NBd0xqQWdLU3dnZG1Wak1pZ2dNQzR3SUNrZ0tTNXlaMkk3Q2drSkkyVnNjMlVLQ1FrSmNtVjBkWEp1SUhSbGVIUjFjbVV5UkNnZ1pXNTJUV0Z3TENCMWRpQXBMbkpuWWpzS0NRa2paVzVrYVdZS0NYMEtDU05rWldacGJtVWdZM1ZpWlZWV1gzSXdJREV1TUFvSkkyUmxabWx1WlNCamRXSmxWVlpmZGpBZ01DNHpNemtLQ1NOa1pXWnBibVVnWTNWaVpWVldYMjB3SUMwZ01pNHdDZ2tqWkdWbWFXNWxJR04xWW1WVlZsOXlNU0F3TGpnS0NTTmtaV1pwYm1VZ1kzVmlaVlZXWDNZeElEQXVNamMyQ2dralpHVm1hVzVsSUdOMVltVlZWbDl0TVNBdElERXVNQW9KSTJSbFptbHVaU0JqZFdKbFZWWmZjalFnTUM0MENna2paR1ZtYVc1bElHTjFZbVZWVmw5Mk5DQXdMakEwTmdvSkkyUmxabWx1WlNCamRXSmxWVlpmYlRRZ01pNHdDZ2tqWkdWbWFXNWxJR04xWW1WVlZsOXlOU0F3TGpNd05Rb0pJMlJsWm1sdVpTQmpkV0psVlZaZmRqVWdNQzR3TVRZS0NTTmtaV1pwYm1VZ1kzVmlaVlZXWDIwMUlETXVNQW9KSTJSbFptbHVaU0JqZFdKbFZWWmZjallnTUM0eU1Rb0pJMlJsWm1sdVpTQmpkV0psVlZaZmRqWWdNQzR3TURNNENna2paR1ZtYVc1bElHTjFZbVZWVmw5dE5pQTBMakFLQ1dac2IyRjBJSEp2ZFdkb2JtVnpjMVJ2VFdsd0tDQm1iRzloZENCeWIzVm5hRzVsYzNNZ0tTQjdDZ2tKWm14dllYUWdiV2x3SUQwZ01DNHdPd29KQ1dsbUlDZ2djbTkxWjJodVpYTnpJRDQ5SUdOMVltVlZWbDl5TVNBcElIc0tDUWtKYldsd0lEMGdLQ0JqZFdKbFZWWmZjakFnTFNCeWIzVm5hRzVsYzNNZ0tTQXFJQ2dnWTNWaVpWVldYMjB4SUMwZ1kzVmlaVlZXWDIwd0lDa2dMeUFvSUdOMVltVlZWbDl5TUNBdElHTjFZbVZWVmw5eU1TQXBJQ3NnWTNWaVpWVldYMjB3T3dvSkNYMGdaV3h6WlNCcFppQW9JSEp2ZFdkb2JtVnpjeUErUFNCamRXSmxWVlpmY2pRZ0tTQjdDZ2tKQ1cxcGNDQTlJQ2dnWTNWaVpWVldYM0l4SUMwZ2NtOTFaMmh1WlhOeklDa2dLaUFvSUdOMVltVlZWbDl0TkNBdElHTjFZbVZWVmw5dE1TQXBJQzhnS0NCamRXSmxWVlpmY2pFZ0xTQmpkV0psVlZaZmNqUWdLU0FySUdOMVltVlZWbDl0TVRzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0J5YjNWbmFHNWxjM01nUGowZ1kzVmlaVlZXWDNJMUlDa2dld29KQ1FsdGFYQWdQU0FvSUdOMVltVlZWbDl5TkNBdElISnZkV2RvYm1WemN5QXBJQ29nS0NCamRXSmxWVlpmYlRVZ0xTQmpkV0psVlZaZmJUUWdLU0F2SUNnZ1kzVmlaVlZXWDNJMElDMGdZM1ZpWlZWV1gzSTFJQ2tnS3lCamRXSmxWVlpmYlRRN0Nna0pmU0JsYkhObElHbG1JQ2dnY205MVoyaHVaWE56SUQ0OUlHTjFZbVZWVmw5eU5pQXBJSHNLQ1FrSmJXbHdJRDBnS0NCamRXSmxWVlpmY2pVZ0xTQnliM1ZuYUc1bGMzTWdLU0FxSUNnZ1kzVmlaVlZXWDIwMklDMGdZM1ZpWlZWV1gyMDFJQ2tnTHlBb0lHTjFZbVZWVmw5eU5TQXRJR04xWW1WVlZsOXlOaUFwSUNzZ1kzVmlaVlZXWDIwMU93b0pDWDBnWld4elpTQjdDZ2tKQ1cxcGNDQTlJQzBnTWk0d0lDb2diRzluTWlnZ01TNHhOaUFxSUhKdmRXZG9ibVZ6Y3lBcE93a0pmUW9KQ1hKbGRIVnliaUJ0YVhBN0NnbDlDZ2wyWldNMElIUmxlSFIxY21WRGRXSmxWVllvSUhOaGJYQnNaWEl5UkNCbGJuWk5ZWEFzSUhabFl6TWdjMkZ0Y0d4bFJHbHlMQ0JtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2drSlpteHZZWFFnYldsd0lEMGdZMnhoYlhBb0lISnZkV2RvYm1WemMxUnZUV2x3S0NCeWIzVm5hRzVsYzNNZ0tTd2dZM1ZpWlZWV1gyMHdMQ0JEVlVKRlZWWmZUVUZZWDAxSlVDQXBPd29KQ1dac2IyRjBJRzFwY0VZZ1BTQm1jbUZqZENnZ2JXbHdJQ2s3Q2drSlpteHZZWFFnYldsd1NXNTBJRDBnWm14dmIzSW9JRzFwY0NBcE93b0pDWFpsWXpNZ1kyOXNiM0l3SUQwZ1ltbHNhVzVsWVhKRGRXSmxWVllvSUdWdWRrMWhjQ3dnYzJGdGNHeGxSR2x5TENCdGFYQkpiblFnS1RzS0NRbHBaaUFvSUcxcGNFWWdQVDBnTUM0d0lDa2dld29KQ1FseVpYUjFjbTRnZG1Wak5DZ2dZMjlzYjNJd0xDQXhMakFnS1RzS0NRbDlJR1ZzYzJVZ2V3b0pDUWwyWldNeklHTnZiRzl5TVNBOUlHSnBiR2x1WldGeVEzVmlaVlZXS0NCbGJuWk5ZWEFzSUhOaGJYQnNaVVJwY2l3Z2JXbHdTVzUwSUNzZ01TNHdJQ2s3Q2drSkNYSmxkSFZ5YmlCMlpXTTBLQ0J0YVhnb0lHTnZiRzl5TUN3Z1kyOXNiM0l4TENCdGFYQkdJQ2tzSURFdU1DQXBPd29KQ1gwS0NYMEtJMlZ1WkdsbVlDd2dXWEFnUFNCZ2RtVmpNeUIwY21GdWMyWnZjbTFsWkU1dmNtMWhiQ0E5SUc5aWFtVmpkRTV2Y20xaGJEc0tJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVIQ2dsdFlYUXpJRzBnUFNCdFlYUXpLQ0JwYm5OMFlXNWpaVTFoZEhKcGVDQXBPd29KZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnTHowZ2RtVmpNeWdnWkc5MEtDQnRXeUF3SUYwc0lHMWJJREFnWFNBcExDQmtiM1FvSUcxYklERWdYU3dnYlZzZ01TQmRJQ2tzSUdSdmRDZ2diVnNnTWlCZExDQnRXeUF5SUYwZ0tTQXBPd29KZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnUFNCdElDb2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXdzdDaU5sYm1ScFpncDBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDQTlJRzV2Y20xaGJFMWhkSEpwZUNBcUlIUnlZVzV6Wm05eWJXVmtUbTl5YldGc093b2phV1prWldZZ1JreEpVRjlUU1VSRlJBb0pkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dQU0F0SUhSeVlXNXpabTl5YldWa1RtOXliV0ZzT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2dsMlpXTXpJSFJ5WVc1elptOXliV1ZrVkdGdVoyVnVkQ0E5SUNnZ2JXOWtaV3hXYVdWM1RXRjBjbWw0SUNvZ2RtVmpOQ2dnYjJKcVpXTjBWR0Z1WjJWdWRDd2dNQzR3SUNrZ0tTNTRlWG83Q2dramFXWmtaV1lnUmt4SlVGOVRTVVJGUkFvSkNYUnlZVzV6Wm05eWJXVmtWR0Z1WjJWdWRDQTlJQzBnZEhKaGJuTm1iM0p0WldSVVlXNW5aVzUwT3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZwd0lEMGdZQ05wWm1SbFppQlZVMFZmUkVsVFVFeEJRMFZOUlU1VVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JrYVhOd2JHRmpaVzFsYm5STllYQTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHUnBjM0JzWVdObGJXVnVkRk5qWVd4bE93b0pkVzVwWm05eWJTQm1iRzloZENCa2FYTndiR0ZqWlcxbGJuUkNhV0Z6T3dvalpXNWthV1pnTENCS2NDQTlJR0FqYVdaa1pXWWdWVk5GWDBSSlUxQk1RVU5GVFVWT1ZFMUJVQW9KZEhKaGJuTm1iM0p0WldRZ0t6MGdibTl5YldGc2FYcGxLQ0J2WW1wbFkzUk9iM0p0WVd3Z0tTQXFJQ2dnZEdWNGRIVnlaVEpFS0NCa2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhaRWFYTndiR0ZqWlcxbGJuUk5ZWEJWZGlBcExuZ2dLaUJrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0FySUdScGMzQnNZV05sYldWdWRFSnBZWE1nS1RzS0kyVnVaR2xtWUN3Z0pIQWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRVbFRVMGxXUlUxQlVBb0pkbVZqTkNCbGJXbHpjMmwyWlVOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCbGJXbHpjMmwyWlUxaGNDd2dka1Z0YVhOemFYWmxUV0Z3VlhZZ0tUc0tDWFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBcVBTQmxiV2x6YzJsMlpVTnZiRzl5TG5Kbllqc0tJMlZ1WkdsbVlDd2dTM0FnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUVWxUVTBsV1JVMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWlcxcGMzTnBkbVZOWVhBN0NpTmxibVJwWm1Bc0lGRndJRDBnSW1kc1gwWnlZV2REYjJ4dmNpQTlJR3hwYm1WaGNsUnZUM1YwY0hWMFZHVjRaV3dvSUdkc1gwWnlZV2REYjJ4dmNpQXBPeUlzSUdwd0lEMGdZQXBqYjI1emRDQnRZWFF6SUV4SlRrVkJVbDlUVWtkQ1gxUlBYMHhKVGtWQlVsOUVTVk5RVEVGWlgxQXpJRDBnYldGME15Z0tDWFpsWXpNb0lEQXVPREl5TkRZeU1Td2dNQzR4TnpjMU16Z3NJREF1TUNBcExBb0pkbVZqTXlnZ01DNHdNek14T1RReExDQXdMamsyTmpnd05UZ3NJREF1TUNBcExBb0pkbVZqTXlnZ01DNHdNVGN3T0RJM0xDQXdMakEzTWpNNU56UXNJREF1T1RFd05URTVPU0FwQ2lrN0NtTnZibk4wSUcxaGRETWdURWxPUlVGU1gwUkpVMUJNUVZsZlVETmZWRTlmVEVsT1JVRlNYMU5TUjBJZ1BTQnRZWFF6S0FvSmRtVmpNeWdnTVM0eU1qUTVOREF4TENBdElEQXVNakkwT1RRd05Dd2dNQzR3SUNrc0NnbDJaV016S0NBdElEQXVNRFF5TURVMk9Td2dNUzR3TkRJd05UY3hMQ0F3TGpBZ0tTd0tDWFpsWXpNb0lDMGdNQzR3TVRrMk16YzJMQ0F0SURBdU1EYzROak0yTVN3Z01TNHdPVGd5TnpNMUlDa0tLVHNLZG1Wak5DQk1hVzVsWVhKVFVrZENWRzlNYVc1bFlYSkVhWE53YkdGNVVETW9JR2x1SUhabFl6UWdkbUZzZFdVZ0tTQjdDZ2x5WlhSMWNtNGdkbVZqTkNnZ2RtRnNkV1V1Y21kaUlDb2dURWxPUlVGU1gxTlNSMEpmVkU5ZlRFbE9SVUZTWDBSSlUxQk1RVmxmVURNc0lIWmhiSFZsTG1FZ0tUc0tmUXAyWldNMElFeHBibVZoY2tScGMzQnNZWGxRTTFSdlRHbHVaV0Z5VTFKSFFpZ2dhVzRnZG1Wak5DQjJZV3gxWlNBcElIc0tDWEpsZEhWeWJpQjJaV00wS0NCMllXeDFaUzV5WjJJZ0tpQk1TVTVGUVZKZlJFbFRVRXhCV1Y5UU0xOVVUMTlNU1U1RlFWSmZVMUpIUWl3Z2RtRnNkV1V1WVNBcE93cDlDblpsWXpRZ1RHbHVaV0Z5VkhKaGJuTm1aWEpQUlZSR0tDQnBiaUIyWldNMElIWmhiSFZsSUNrZ2V3b0pjbVYwZFhKdUlIWmhiSFZsT3dwOUNuWmxZelFnYzFKSFFsUnlZVzV6Wm1WeVQwVlVSaWdnYVc0Z2RtVmpOQ0IyWVd4MVpTQXBJSHNLQ1hKbGRIVnliaUIyWldNMEtDQnRhWGdvSUhCdmR5Z2dkbUZzZFdVdWNtZGlMQ0IyWldNektDQXdMalF4TmpZMklDa2dLU0FxSURFdU1EVTFJQzBnZG1Wak15Z2dNQzR3TlRVZ0tTd2dkbUZzZFdVdWNtZGlJQ29nTVRJdU9USXNJSFpsWXpNb0lHeGxjM05VYUdGdVJYRjFZV3dvSUhaaGJIVmxMbkpuWWl3Z2RtVmpNeWdnTUM0d01ETXhNekE0SUNrZ0tTQXBJQ2tzSUhaaGJIVmxMbUVnS1RzS2ZRcDJaV00wSUV4cGJtVmhjbFJ2VEdsdVpXRnlLQ0JwYmlCMlpXTTBJSFpoYkhWbElDa2dld29KY21WMGRYSnVJSFpoYkhWbE93cDlDblpsWXpRZ1RHbHVaV0Z5Vkc5elVrZENLQ0JwYmlCMlpXTTBJSFpoYkhWbElDa2dld29KY21WMGRYSnVJSE5TUjBKVWNtRnVjMlpsY2s5RlZFWW9JSFpoYkhWbElDazdDbjFnTENCbGJTQTlJR0FqYVdaa1pXWWdWVk5GWDBWT1ZrMUJVQW9KSTJsbVpHVm1JRVZPVmw5WFQxSk1SRkJQVXdvSkNYWmxZek1nWTJGdFpYSmhWRzlHY21Gbk93b0pDV2xtSUNnZ2FYTlBjblJvYjJkeVlYQm9hV01nS1NCN0Nna0pDV05oYldWeVlWUnZSbkpoWnlBOUlHNXZjbTFoYkdsNlpTZ2dkbVZqTXlnZ0xTQjJhV1YzVFdGMGNtbDRXeUF3SUYxYklESWdYU3dnTFNCMmFXVjNUV0YwY21sNFd5QXhJRjFiSURJZ1hTd2dMU0IyYVdWM1RXRjBjbWw0V3lBeUlGMWJJRElnWFNBcElDazdDZ2tKZlNCbGJITmxJSHNLQ1FrSlkyRnRaWEpoVkc5R2NtRm5JRDBnYm05eWJXRnNhWHBsS0NCMlYyOXliR1JRYjNOcGRHbHZiaUF0SUdOaGJXVnlZVkJ2YzJsMGFXOXVJQ2s3Q2drSmZRb0pDWFpsWXpNZ2QyOXliR1JPYjNKdFlXd2dQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J1YjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NRa2phV1prWldZZ1JVNVdUVUZRWDAxUFJFVmZVa1ZHVEVWRFZFbFBUZ29KQ1FsMlpXTXpJSEpsWm14bFkzUldaV01nUFNCeVpXWnNaV04wS0NCallXMWxjbUZVYjBaeVlXY3NJSGR2Y214a1RtOXliV0ZzSUNrN0Nna0pJMlZzYzJVS0NRa0pkbVZqTXlCeVpXWnNaV04wVm1WaklEMGdjbVZtY21GamRDZ2dZMkZ0WlhKaFZHOUdjbUZuTENCM2IzSnNaRTV2Y20xaGJDd2djbVZtY21GamRHbHZibEpoZEdsdklDazdDZ2tKSTJWdVpHbG1DZ2tqWld4elpRb0pDWFpsWXpNZ2NtVm1iR1ZqZEZabFl5QTlJSFpTWldac1pXTjBPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXVFVGUVgxUlpVRVZmUTFWQ1JRb0pDWFpsWXpRZ1pXNTJRMjlzYjNJZ1BTQjBaWGgwZFhKbFEzVmlaU2dnWlc1MlRXRndMQ0IyWldNektDQm1iR2x3Ulc1MlRXRndJQ29nY21WbWJHVmpkRlpsWXk1NExDQnlaV1pzWldOMFZtVmpMbmw2SUNrZ0tUc0tDU05sYkhObENna0pkbVZqTkNCbGJuWkRiMnh2Y2lBOUlIWmxZelFvSURBdU1DQXBPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMVZURlJKVUV4WkNna0piM1YwWjI5cGJtZE1hV2RvZENBOUlHMXBlQ2dnYjNWMFoyOXBibWRNYVdkb2RDd2diM1YwWjI5cGJtZE1hV2RvZENBcUlHVnVka052Ykc5eUxuaDVlaXdnYzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0FxSUhKbFpteGxZM1JwZG1sMGVTQXBPd29KSTJWc2FXWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMUpXQ0FwQ2drSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUcxcGVDZ2diM1YwWjI5cGJtZE1hV2RvZEN3Z1pXNTJRMjlzYjNJdWVIbDZMQ0J6Y0dWamRXeGhjbE4wY21WdVozUm9JQ29nY21WbWJHVmpkR2wyYVhSNUlDazdDZ2tqWld4cFppQmtaV1pwYm1Wa0tDQkZUbFpOUVZCZlFreEZUa1JKVGtkZlFVUkVJQ2tLQ1FsdmRYUm5iMmx1WjB4cFoyaDBJQ3M5SUdWdWRrTnZiRzl5TG5oNWVpQXFJSE53WldOMWJHRnlVM1J5Wlc1bmRHZ2dLaUJ5Wldac1pXTjBhWFpwZEhrN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z2RHMGdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1hWdWFXWnZjbTBnWm14dllYUWdaVzUyVFdGd1NXNTBaVzV6YVhSNU93b0pkVzVwWm05eWJTQm1iRzloZENCbWJHbHdSVzUyVFdGd093b0pJMmxtWkdWbUlFVk9WazFCVUY5VVdWQkZYME5WUWtVS0NRbDFibWxtYjNKdElITmhiWEJzWlhKRGRXSmxJR1Z1ZGsxaGNEc0tDU05sYkhObENna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzUyVFdGd093b0pJMlZ1WkdsbUNna0tJMlZ1WkdsbVlDd2dibTBnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NYVnVhV1p2Y20wZ1pteHZZWFFnY21WbWJHVmpkR2wyYVhSNU93b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOUNWVTFRVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwNVBVazFCVEUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZCSVQwNUhJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1RFRk5Ra1ZTVkNBcENna0pJMlJsWm1sdVpTQkZUbFpmVjA5U1RFUlFUMU1LQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVZPVmw5WFQxSk1SRkJQVXdvSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tDUWwxYm1sbWIzSnRJR1pzYjJGMElISmxabkpoWTNScGIyNVNZWFJwYnpzS0NTTmxiSE5sQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpTWldac1pXTjBPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJR2x0SUQwZ1lDTnBabVJsWmlCVlUwVmZSVTVXVFVGUUNna2phV1lnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlRrOVNUVUZNVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVUVoUFRrY2dLU0I4ZkNCa1pXWnBibVZrS0NCTVFVMUNSVkpVSUNrS0NRa2paR1ZtYVc1bElFVk9WbDlYVDFKTVJGQlBVd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXWDFkUFVreEVVRTlUQ2drSkNna0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29KSTJWc2MyVUtDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsSmxabXhsWTNRN0Nna0pkVzVwWm05eWJTQm1iRzloZENCeVpXWnlZV04wYVc5dVVtRjBhVzg3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnYzIwZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVGxaTlFWQUtDU05wWm1SbFppQkZUbFpmVjA5U1RFUlFUMU1LQ1FsMlYyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNHVlSGw2T3dvSkkyVnNjMlVLQ1FsMlpXTXpJR05oYldWeVlWUnZWbVZ5ZEdWNE93b0pDV2xtSUNnZ2FYTlBjblJvYjJkeVlYQm9hV01nS1NCN0Nna0pDV05oYldWeVlWUnZWbVZ5ZEdWNElEMGdibTl5YldGc2FYcGxLQ0IyWldNektDQXRJSFpwWlhkTllYUnlhWGhiSURBZ1hWc2dNaUJkTENBdElIWnBaWGROWVhSeWFYaGJJREVnWFZzZ01pQmRMQ0F0SUhacFpYZE5ZWFJ5YVhoYklESWdYVnNnTWlCZElDa2dLVHNLQ1FsOUlHVnNjMlVnZXdvSkNRbGpZVzFsY21GVWIxWmxjblJsZUNBOUlHNXZjbTFoYkdsNlpTZ2dkMjl5YkdSUWIzTnBkR2x2Ymk1NGVYb2dMU0JqWVcxbGNtRlFiM05wZEdsdmJpQXBPd29KQ1gwS0NRbDJaV016SUhkdmNteGtUbTl5YldGc0lEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NRa2phV1prWldZZ1JVNVdUVUZRWDAxUFJFVmZVa1ZHVEVWRFZFbFBUZ29KQ1FsMlVtVm1iR1ZqZENBOUlISmxabXhsWTNRb0lHTmhiV1Z5WVZSdlZtVnlkR1Y0TENCM2IzSnNaRTV2Y20xaGJDQXBPd29KQ1NObGJITmxDZ2tKQ1haU1pXWnNaV04wSUQwZ2NtVm1jbUZqZENnZ1kyRnRaWEpoVkc5V1pYSjBaWGdzSUhkdmNteGtUbTl5YldGc0xDQnlaV1p5WVdOMGFXOXVVbUYwYVc4Z0tUc0tDUWtqWlc1a2FXWUtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQnliU0E5SUdBamFXWmtaV1lnVlZORlgwWlBSd29KZGtadlowUmxjSFJvSUQwZ0xTQnRkbEJ2YzJsMGFXOXVMbm83Q2lObGJtUnBabUFzSUdGdElEMGdZQ05wWm1SbFppQlZVMFZmUms5SENnbDJZWEo1YVc1bklHWnNiMkYwSUhaR2IyZEVaWEIwYURzS0kyVnVaR2xtWUN3Z2IyMGdQU0JnSTJsbVpHVm1JRlZUUlY5R1QwY0tDU05wWm1SbFppQkdUMGRmUlZoUU1nb0pDV1pzYjJGMElHWnZaMFpoWTNSdmNpQTlJREV1TUNBdElHVjRjQ2dnTFNCbWIyZEVaVzV6YVhSNUlDb2dabTluUkdWdWMybDBlU0FxSUhaR2IyZEVaWEIwYUNBcUlIWkdiMmRFWlhCMGFDQXBPd29KSTJWc2MyVUtDUWxtYkc5aGRDQm1iMmRHWVdOMGIzSWdQU0J6Ylc5dmRHaHpkR1Z3S0NCbWIyZE9aV0Z5TENCbWIyZEdZWElzSUhaR2IyZEVaWEIwYUNBcE93b0pJMlZ1WkdsbUNnbG5iRjlHY21GblEyOXNiM0l1Y21kaUlEMGdiV2w0S0NCbmJGOUdjbUZuUTI5c2IzSXVjbWRpTENCbWIyZERiMnh2Y2l3Z1ptOW5SbUZqZEc5eUlDazdDaU5sYm1ScFptQXNJR050SUQwZ1lDTnBabVJsWmlCVlUwVmZSazlIQ2dsMWJtbG1iM0p0SUhabFl6TWdabTluUTI5c2IzSTdDZ2wyWVhKNWFXNW5JR1pzYjJGMElIWkdiMmRFWlhCMGFEc0tDU05wWm1SbFppQkdUMGRmUlZoUU1nb0pDWFZ1YVdadmNtMGdabXh2WVhRZ1ptOW5SR1Z1YzJsMGVUc0tDU05sYkhObENna0pkVzVwWm05eWJTQm1iRzloZENCbWIyZE9aV0Z5T3dvSkNYVnVhV1p2Y20wZ1pteHZZWFFnWm05blJtRnlPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJR3h0SUQwZ1lDTnBabVJsWmlCVlUwVmZSMUpCUkVsRlRsUk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdkeVlXUnBaVzUwVFdGd093b2paVzVrYVdZS2RtVmpNeUJuWlhSSGNtRmthV1Z1ZEVseWNtRmthV0Z1WTJVb0lIWmxZek1nYm05eWJXRnNMQ0IyWldNeklHeHBaMmgwUkdseVpXTjBhVzl1SUNrZ2V3b0pabXh2WVhRZ1pHOTBUa3dnUFNCa2IzUW9JRzV2Y20xaGJDd2diR2xuYUhSRWFYSmxZM1JwYjI0Z0tUc0tDWFpsWXpJZ1kyOXZjbVFnUFNCMlpXTXlLQ0JrYjNST1RDQXFJREF1TlNBcklEQXVOU3dnTUM0d0lDazdDZ2tqYVdaa1pXWWdWVk5GWDBkU1FVUkpSVTVVVFVGUUNna0pjbVYwZFhKdUlIWmxZek1vSUhSbGVIUjFjbVV5UkNnZ1ozSmhaR2xsYm5STllYQXNJR052YjNKa0lDa3VjaUFwT3dvSkkyVnNjMlVLQ1FsMlpXTXlJR1ozSUQwZ1puZHBaSFJvS0NCamIyOXlaQ0FwSUNvZ01DNDFPd29KQ1hKbGRIVnliaUJ0YVhnb0lIWmxZek1vSURBdU55QXBMQ0IyWldNektDQXhMakFnS1N3Z2MyMXZiM1JvYzNSbGNDZ2dNQzQzSUMwZ1puY3VlQ3dnTUM0M0lDc2dabmN1ZUN3Z1kyOXZjbVF1ZUNBcElDazdDZ2tqWlc1a2FXWUtmV0FzSUdodElEMGdZQ05wWm1SbFppQlZVMFZmVEVsSFNGUk5RVkFLQ1habFl6UWdiR2xuYUhSTllYQlVaWGhsYkNBOUlIUmxlSFIxY21VeVJDZ2diR2xuYUhSTllYQXNJSFpNYVdkb2RFMWhjRlYySUNrN0NnbDJaV016SUd4cFoyaDBUV0Z3U1hKeVlXUnBZVzVqWlNBOUlHeHBaMmgwVFdGd1ZHVjRaV3d1Y21kaUlDb2diR2xuYUhSTllYQkpiblJsYm5OcGRIazdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdiR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxPd29qWlc1a2FXWmdMQ0IxYlNBOUlHQWphV1prWldZZ1ZWTkZYMHhKUjBoVVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JzYVdkb2RFMWhjRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdiR2xuYUhSTllYQkpiblJsYm5OcGRIazdDaU5sYm1ScFptQXNJR1J0SUQwZ1lFeGhiV0psY25STllYUmxjbWxoYkNCdFlYUmxjbWxoYkRzS2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJRDBnWkdsbVpuVnpaVU52Ykc5eUxuSm5ZanNLYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0E5SUhOd1pXTjFiR0Z5VTNSeVpXNW5kR2c3WUN3Z1ptMGdQU0JnZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q25OMGNuVmpkQ0JNWVcxaVpYSjBUV0YwWlhKcFlXd2dld29KZG1Wak15QmthV1ptZFhObFEyOXNiM0k3Q2dsbWJHOWhkQ0J6Y0dWamRXeGhjbE4wY21WdVozUm9Pd3A5T3dwMmIybGtJRkpGWDBScGNtVmpkRjlNWVcxaVpYSjBLQ0JqYjI1emRDQnBiaUJKYm1OcFpHVnVkRXhwWjJoMElHUnBjbVZqZEV4cFoyaDBMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVVHOXphWFJwYjI0c0lHTnZibk4wSUdsdUlIWmxZek1nWjJWdmJXVjBjbmxPYjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ1oyVnZiV1YwY25sV2FXVjNSR2x5TENCamIyNXpkQ0JwYmlCMlpXTXpJR2RsYjIxbGRISjVRMnhsWVhKamIyRjBUbTl5YldGc0xDQmpiMjV6ZENCcGJpQk1ZVzFpWlhKMFRXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3c0lHbHViM1YwSUZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElDa2dld29KWm14dllYUWdaRzkwVGt3Z1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCblpXOXRaWFJ5ZVU1dmNtMWhiQ3dnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUlDa2dLVHNLQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUdSdmRFNU1JQ29nWkdseVpXTjBUR2xuYUhRdVkyOXNiM0k3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUkVhV1ptZFhObElDczlJR2x5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMHhoYldKbGNuUW9JRzFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBcE93cDlDblp2YVdRZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObFgweGhiV0psY25Rb0lHTnZibk4wSUdsdUlIWmxZek1nYVhKeVlXUnBZVzVqWlN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVkJ2YzJsMGFXOXVMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVRtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJR2RsYjIxbGRISjVWbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVVOc1pXRnlZMjloZEU1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnVEdGdFltVnlkRTFoZEdWeWFXRnNJRzFoZEdWeWFXRnNMQ0JwYm05MWRDQlNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0FwSUhzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5TVlXMWlaWEowS0NCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLVHNLZlFvalpHVm1hVzVsSUZKRlgwUnBjbVZqZEFrSkNRbFNSVjlFYVhKbFkzUmZUR0Z0WW1WeWRBb2paR1ZtYVc1bElGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpRa0pVa1ZmU1c1a2FYSmxZM1JFYVdabWRYTmxYMHhoYldKbGNuUmdMQ0J3YlNBOUlHQjFibWxtYjNKdElHSnZiMndnY21WalpXbDJaVk5vWVdSdmR6c0tkVzVwWm05eWJTQjJaV016SUdGdFltbGxiblJNYVdkb2RFTnZiRzl5T3dvamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDB4SlIwaFVYMUJTVDBKRlV5QXBDZ2wxYm1sbWIzSnRJSFpsWXpNZ2JHbG5hSFJRY205aVpWc2dPU0JkT3dvalpXNWthV1lLZG1Wak15QnphRWRsZEVseWNtRmthV0Z1WTJWQmRDZ2dhVzRnZG1Wak15QnViM0p0WVd3c0lHbHVJSFpsWXpNZ2MyaERiMlZtWm1samFXVnVkSE5iSURrZ1hTQXBJSHNLQ1dac2IyRjBJSGdnUFNCdWIzSnRZV3d1ZUN3Z2VTQTlJRzV2Y20xaGJDNTVMQ0I2SUQwZ2JtOXliV0ZzTG5vN0NnbDJaV016SUhKbGMzVnNkQ0E5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUF3SUYwZ0tpQXdMamc0TmpJeU56c0tDWEpsYzNWc2RDQXJQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dNU0JkSUNvZ01pNHdJQ29nTUM0MU1URTJOalFnS2lCNU93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QXlJRjBnS2lBeUxqQWdLaUF3TGpVeE1UWTJOQ0FxSUhvN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklETWdYU0FxSURJdU1DQXFJREF1TlRFeE5qWTBJQ29nZURzS0NYSmxjM1ZzZENBclBTQnphRU52WldabWFXTnBaVzUwYzFzZ05DQmRJQ29nTWk0d0lDb2dNQzQwTWprd05ETWdLaUI0SUNvZ2VUc0tDWEpsYzNWc2RDQXJQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dOU0JkSUNvZ01pNHdJQ29nTUM0ME1qa3dORE1nS2lCNUlDb2dlanNLQ1hKbGMzVnNkQ0FyUFNCemFFTnZaV1ptYVdOcFpXNTBjMXNnTmlCZElDb2dLQ0F3TGpjME16RXlOU0FxSUhvZ0tpQjZJQzBnTUM0eU5EYzNNRGdnS1RzS0NYSmxjM1ZzZENBclBTQnphRU52WldabWFXTnBaVzUwYzFzZ055QmRJQ29nTWk0d0lDb2dNQzQwTWprd05ETWdLaUI0SUNvZ2Vqc0tDWEpsYzNWc2RDQXJQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dPQ0JkSUNvZ01DNDBNamt3TkRNZ0tpQW9JSGdnS2lCNElDMGdlU0FxSUhrZ0tUc0tDWEpsZEhWeWJpQnlaWE4xYkhRN0NuMEtkbVZqTXlCblpYUk1hV2RvZEZCeWIySmxTWEp5WVdScFlXNWpaU2dnWTI5dWMzUWdhVzRnZG1Wak15QnNhV2RvZEZCeWIySmxXeUE1SUYwc0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNJQ2tnZXdvSmRtVmpNeUIzYjNKc1pFNXZjbTFoYkNBOUlHbHVkbVZ5YzJWVWNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHNXZjbTFoYkN3Z2RtbGxkMDFoZEhKcGVDQXBPd29KZG1Wak15QnBjbkpoWkdsaGJtTmxJRDBnYzJoSFpYUkpjbkpoWkdsaGJtTmxRWFFvSUhkdmNteGtUbTl5YldGc0xDQnNhV2RvZEZCeWIySmxJQ2s3Q2dseVpYUjFjbTRnYVhKeVlXUnBZVzVqWlRzS2ZRcDJaV016SUdkbGRFRnRZbWxsYm5STWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdZVzFpYVdWdWRFeHBaMmgwUTI5c2IzSWdLU0I3Q2dsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCaGJXSnBaVzUwVEdsbmFIUkRiMnh2Y2pzS0NYSmxkSFZ5YmlCcGNuSmhaR2xoYm1ObE93cDlDbVpzYjJGMElHZGxkRVJwYzNSaGJtTmxRWFIwWlc1MVlYUnBiMjRvSUdOdmJuTjBJR2x1SUdac2IyRjBJR3hwWjJoMFJHbHpkR0Z1WTJVc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdOMWRHOW1aa1JwYzNSaGJtTmxMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmtaV05oZVVWNGNHOXVaVzUwSUNrZ2V3b0pJMmxtSUdSbFptbHVaV1FnS0NCTVJVZEJRMWxmVEVsSFNGUlRJQ2tLQ1FscFppQW9JR04xZEc5bVprUnBjM1JoYm1ObElENGdNQzR3SUNZbUlHUmxZMkY1Ulhod2IyNWxiblFnUGlBd0xqQWdLU0I3Q2drSkNYSmxkSFZ5YmlCd2IzY29JSE5oZEhWeVlYUmxLQ0F0SUd4cFoyaDBSR2x6ZEdGdVkyVWdMeUJqZFhSdlptWkVhWE4wWVc1alpTQXJJREV1TUNBcExDQmtaV05oZVVWNGNHOXVaVzUwSUNrN0Nna0pmUW9KQ1hKbGRIVnliaUF4TGpBN0Nna2paV3h6WlFvSkNXWnNiMkYwSUdScGMzUmhibU5sUm1Gc2JHOW1aaUE5SURFdU1DQXZJRzFoZUNnZ2NHOTNLQ0JzYVdkb2RFUnBjM1JoYm1ObExDQmtaV05oZVVWNGNHOXVaVzUwSUNrc0lEQXVNREVnS1RzS0NRbHBaaUFvSUdOMWRHOW1aa1JwYzNSaGJtTmxJRDRnTUM0d0lDa2dld29KQ1Fsa2FYTjBZVzVqWlVaaGJHeHZabVlnS2owZ2NHOTNNaWdnYzJGMGRYSmhkR1VvSURFdU1DQXRJSEJ2ZHpRb0lHeHBaMmgwUkdsemRHRnVZMlVnTHlCamRYUnZabVpFYVhOMFlXNWpaU0FwSUNrZ0tUc0tDUWw5Q2drSmNtVjBkWEp1SUdScGMzUmhibU5sUm1Gc2JHOW1aanNLQ1NObGJtUnBaZ3A5Q21ac2IyRjBJR2RsZEZOd2IzUkJkSFJsYm5WaGRHbHZiaWdnWTI5dWMzUWdhVzRnWm14dllYUWdZMjl1WlVOdmMybHVaU3dnWTI5dWMzUWdhVzRnWm14dllYUWdjR1Z1ZFcxaWNtRkRiM05wYm1Vc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdGdVoyeGxRMjl6YVc1bElDa2dld29KY21WMGRYSnVJSE50YjI5MGFITjBaWEFvSUdOdmJtVkRiM05wYm1Vc0lIQmxiblZ0WW5KaFEyOXphVzVsTENCaGJtZHNaVU52YzJsdVpTQXBPd3A5Q2lOcFppQk9WVTFmUkVsU1gweEpSMGhVVXlBK0lEQUtDWE4wY25WamRDQkVhWEpsWTNScGIyNWhiRXhwWjJoMElIc0tDUWwyWldNeklHUnBjbVZqZEdsdmJqc0tDUWwyWldNeklHTnZiRzl5T3dvSmZUc0tDWFZ1YVdadmNtMGdSR2x5WldOMGFXOXVZV3hNYVdkb2RDQmthWEpsWTNScGIyNWhiRXhwWjJoMGMxc2dUbFZOWDBSSlVsOU1TVWRJVkZNZ1hUc0tDWFp2YVdRZ1oyVjBSR2x5WldOMGFXOXVZV3hNYVdkb2RFbHVabThvSUdOdmJuTjBJR2x1SUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnWkdseVpXTjBhVzl1WVd4TWFXZG9kQ3dnYjNWMElFbHVZMmxrWlc1MFRHbG5hSFFnYkdsbmFIUWdLU0I3Q2drSmJHbG5hSFF1WTI5c2IzSWdQU0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMbU52Ykc5eU93b0pDV3hwWjJoMExtUnBjbVZqZEdsdmJpQTlJR1JwY21WamRHbHZibUZzVEdsbmFIUXVaR2x5WldOMGFXOXVPd29KQ1d4cFoyaDBMblpwYzJsaWJHVWdQU0IwY25WbE93b0pmUW9qWlc1a2FXWUtJMmxtSUU1VlRWOVFUMGxPVkY5TVNVZElWRk1nUGlBd0NnbHpkSEoxWTNRZ1VHOXBiblJNYVdkb2RDQjdDZ2tKZG1Wak15QndiM05wZEdsdmJqc0tDUWwyWldNeklHTnZiRzl5T3dvSkNXWnNiMkYwSUdScGMzUmhibU5sT3dvSkNXWnNiMkYwSUdSbFkyRjVPd29KZlRzS0NYVnVhV1p2Y20wZ1VHOXBiblJNYVdkb2RDQndiMmx1ZEV4cFoyaDBjMXNnVGxWTlgxQlBTVTVVWDB4SlIwaFVVeUJkT3dvSmRtOXBaQ0JuWlhSUWIybHVkRXhwWjJoMFNXNW1ieWdnWTI5dWMzUWdhVzRnVUc5cGJuUk1hV2RvZENCd2IybHVkRXhwWjJoMExDQmpiMjV6ZENCcGJpQjJaV016SUdkbGIyMWxkSEo1VUc5emFYUnBiMjRzSUc5MWRDQkpibU5wWkdWdWRFeHBaMmgwSUd4cFoyaDBJQ2tnZXdvSkNYWmxZek1nYkZabFkzUnZjaUE5SUhCdmFXNTBUR2xuYUhRdWNHOXphWFJwYjI0Z0xTQm5aVzl0WlhSeWVWQnZjMmwwYVc5dU93b0pDV3hwWjJoMExtUnBjbVZqZEdsdmJpQTlJRzV2Y20xaGJHbDZaU2dnYkZabFkzUnZjaUFwT3dvSkNXWnNiMkYwSUd4cFoyaDBSR2x6ZEdGdVkyVWdQU0JzWlc1bmRHZ29JR3hXWldOMGIzSWdLVHNLQ1Fsc2FXZG9kQzVqYjJ4dmNpQTlJSEJ2YVc1MFRHbG5hSFF1WTI5c2IzSTdDZ2tKYkdsbmFIUXVZMjlzYjNJZ0tqMGdaMlYwUkdsemRHRnVZMlZCZEhSbGJuVmhkR2x2YmlnZ2JHbG5hSFJFYVhOMFlXNWpaU3dnY0c5cGJuUk1hV2RvZEM1a2FYTjBZVzVqWlN3Z2NHOXBiblJNYVdkb2RDNWtaV05oZVNBcE93b0pDV3hwWjJoMExuWnBjMmxpYkdVZ1BTQW9JR3hwWjJoMExtTnZiRzl5SUNFOUlIWmxZek1vSURBdU1DQXBJQ2s3Q2dsOUNpTmxibVJwWmdvamFXWWdUbFZOWDFOUVQxUmZURWxIU0ZSVElENGdNQW9KYzNSeWRXTjBJRk53YjNSTWFXZG9kQ0I3Q2drSmRtVmpNeUJ3YjNOcGRHbHZianNLQ1FsMlpXTXpJR1JwY21WamRHbHZianNLQ1FsMlpXTXpJR052Ykc5eU93b0pDV1pzYjJGMElHUnBjM1JoYm1ObE93b0pDV1pzYjJGMElHUmxZMkY1T3dvSkNXWnNiMkYwSUdOdmJtVkRiM003Q2drSlpteHZZWFFnY0dWdWRXMWljbUZEYjNNN0NnbDlPd29KZFc1cFptOXliU0JUY0c5MFRHbG5hSFFnYzNCdmRFeHBaMmgwYzFzZ1RsVk5YMU5RVDFSZlRFbEhTRlJUSUYwN0NnbDJiMmxrSUdkbGRGTndiM1JNYVdkb2RFbHVabThvSUdOdmJuTjBJR2x1SUZOd2IzUk1hV2RvZENCemNHOTBUR2xuYUhRc0lHTnZibk4wSUdsdUlIWmxZek1nWjJWdmJXVjBjbmxRYjNOcGRHbHZiaXdnYjNWMElFbHVZMmxrWlc1MFRHbG5hSFFnYkdsbmFIUWdLU0I3Q2drSmRtVmpNeUJzVm1WamRHOXlJRDBnYzNCdmRFeHBaMmgwTG5CdmMybDBhVzl1SUMwZ1oyVnZiV1YwY25sUWIzTnBkR2x2YmpzS0NRbHNhV2RvZEM1a2FYSmxZM1JwYjI0Z1BTQnViM0p0WVd4cGVtVW9JR3hXWldOMGIzSWdLVHNLQ1FsbWJHOWhkQ0JoYm1kc1pVTnZjeUE5SUdSdmRDZ2diR2xuYUhRdVpHbHlaV04wYVc5dUxDQnpjRzkwVEdsbmFIUXVaR2x5WldOMGFXOXVJQ2s3Q2drSlpteHZZWFFnYzNCdmRFRjBkR1Z1ZFdGMGFXOXVJRDBnWjJWMFUzQnZkRUYwZEdWdWRXRjBhVzl1S0NCemNHOTBUR2xuYUhRdVkyOXVaVU52Y3l3Z2MzQnZkRXhwWjJoMExuQmxiblZ0WW5KaFEyOXpMQ0JoYm1kc1pVTnZjeUFwT3dvSkNXbG1JQ2dnYzNCdmRFRjBkR1Z1ZFdGMGFXOXVJRDRnTUM0d0lDa2dld29KQ1FsbWJHOWhkQ0JzYVdkb2RFUnBjM1JoYm1ObElEMGdiR1Z1WjNSb0tDQnNWbVZqZEc5eUlDazdDZ2tKQ1d4cFoyaDBMbU52Ykc5eUlEMGdjM0J2ZEV4cFoyaDBMbU52Ykc5eUlDb2djM0J2ZEVGMGRHVnVkV0YwYVc5dU93b0pDUWxzYVdkb2RDNWpiMnh2Y2lBcVBTQm5aWFJFYVhOMFlXNWpaVUYwZEdWdWRXRjBhVzl1S0NCc2FXZG9kRVJwYzNSaGJtTmxMQ0J6Y0c5MFRHbG5hSFF1WkdsemRHRnVZMlVzSUhOd2IzUk1hV2RvZEM1a1pXTmhlU0FwT3dvSkNRbHNhV2RvZEM1MmFYTnBZbXhsSUQwZ0tDQnNhV2RvZEM1amIyeHZjaUFoUFNCMlpXTXpLQ0F3TGpBZ0tTQXBPd29KQ1gwZ1pXeHpaU0I3Q2drSkNXeHBaMmgwTG1OdmJHOXlJRDBnZG1Wak15Z2dNQzR3SUNrN0Nna0pDV3hwWjJoMExuWnBjMmxpYkdVZ1BTQm1ZV3h6WlRzS0NRbDlDZ2w5Q2lObGJtUnBaZ29qYVdZZ1RsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTWdQaUF3Q2dsemRISjFZM1FnVW1WamRFRnlaV0ZNYVdkb2RDQjdDZ2tKZG1Wak15QmpiMnh2Y2pzS0NRbDJaV016SUhCdmMybDBhVzl1T3dvSkNYWmxZek1nYUdGc1psZHBaSFJvT3dvSkNYWmxZek1nYUdGc1praGxhV2RvZERzS0NYMDdDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JzZEdOZk1Uc0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdiSFJqWHpJN0NnbDFibWxtYjNKdElGSmxZM1JCY21WaFRHbG5hSFFnY21WamRFRnlaV0ZNYVdkb2RITmJJRTVWVFY5U1JVTlVYMEZTUlVGZlRFbEhTRlJUSUYwN0NpTmxibVJwWmdvamFXWWdUbFZOWDBoRlRVbGZURWxIU0ZSVElENGdNQW9KYzNSeWRXTjBJRWhsYldsemNHaGxjbVZNYVdkb2RDQjdDZ2tKZG1Wak15QmthWEpsWTNScGIyNDdDZ2tKZG1Wak15QnphM2xEYjJ4dmNqc0tDUWwyWldNeklHZHliM1Z1WkVOdmJHOXlPd29KZlRzS0NYVnVhV1p2Y20wZ1NHVnRhWE53YUdWeVpVeHBaMmgwSUdobGJXbHpjR2hsY21WTWFXZG9kSE5iSUU1VlRWOUlSVTFKWDB4SlIwaFVVeUJkT3dvSmRtVmpNeUJuWlhSSVpXMXBjM0JvWlhKbFRHbG5hSFJKY25KaFpHbGhibU5sS0NCamIyNXpkQ0JwYmlCSVpXMXBjM0JvWlhKbFRHbG5hSFFnYUdWdGFVeHBaMmgwTENCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDQXBJSHNLQ1FsbWJHOWhkQ0JrYjNST1RDQTlJR1J2ZENnZ2JtOXliV0ZzTENCb1pXMXBUR2xuYUhRdVpHbHlaV04wYVc5dUlDazdDZ2tKWm14dllYUWdhR1Z0YVVScFptWjFjMlZYWldsbmFIUWdQU0F3TGpVZ0tpQmtiM1JPVENBcklEQXVOVHNLQ1FsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCdGFYZ29JR2hsYldsTWFXZG9kQzVuY205MWJtUkRiMnh2Y2l3Z2FHVnRhVXhwWjJoMExuTnJlVU52Ykc5eUxDQm9aVzFwUkdsbVpuVnpaVmRsYVdkb2RDQXBPd29KQ1hKbGRIVnliaUJwY25KaFpHbGhibU5sT3dvSmZRb2paVzVrYVdaZ0xDQnRiU0E5SUdBamFXWmtaV1lnVlZORlgwVk9WazFCVUFvSmRtVmpNeUJuWlhSSlFreEpjbkpoWkdsaGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkNBcElIc0tDUWtqYVdaa1pXWWdSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWZ29KQ1FsMlpXTXpJSGR2Y214a1RtOXliV0ZzSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2JtOXliV0ZzTENCMmFXVjNUV0YwY21sNElDazdDZ2tKQ1habFl6UWdaVzUyVFdGd1EyOXNiM0lnUFNCMFpYaDBkWEpsUTNWaVpWVldLQ0JsYm5aTllYQXNJSGR2Y214a1RtOXliV0ZzTENBeExqQWdLVHNLQ1FrSmNtVjBkWEp1SUZCSklDb2daVzUyVFdGd1EyOXNiM0l1Y21kaUlDb2daVzUyVFdGd1NXNTBaVzV6YVhSNU93b0pDU05sYkhObENna0pDWEpsZEhWeWJpQjJaV016S0NBd0xqQWdLVHNLQ1FralpXNWthV1lLQ1gwS0NYWmxZek1nWjJWMFNVSk1VbUZrYVdGdVkyVW9JR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5QXBJSHNLQ1FramFXWmtaV1lnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmdvSkNRbDJaV016SUhKbFpteGxZM1JXWldNZ1BTQnlaV1pzWldOMEtDQXRJSFpwWlhkRWFYSXNJRzV2Y20xaGJDQXBPd29KQ1FseVpXWnNaV04wVm1WaklEMGdibTl5YldGc2FYcGxLQ0J0YVhnb0lISmxabXhsWTNSV1pXTXNJRzV2Y20xaGJDd2djbTkxWjJodVpYTnpJQ29nY205MVoyaHVaWE56S1NBcE93b0pDUWx5Wldac1pXTjBWbVZqSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2NtVm1iR1ZqZEZabFl5d2dkbWxsZDAxaGRISnBlQ0FwT3dvSkNRbDJaV00wSUdWdWRrMWhjRU52Ykc5eUlEMGdkR1Y0ZEhWeVpVTjFZbVZWVmlnZ1pXNTJUV0Z3TENCeVpXWnNaV04wVm1WakxDQnliM1ZuYUc1bGMzTWdLVHNLQ1FrSmNtVjBkWEp1SUdWdWRrMWhjRU52Ykc5eUxuSm5ZaUFxSUdWdWRrMWhjRWx1ZEdWdWMybDBlVHNLQ1FralpXeHpaUW9KQ1FseVpYUjFjbTRnZG1Wak15Z2dNQzR3SUNrN0Nna0pJMlZ1WkdsbUNnbDlDZ2tqYVdaa1pXWWdWVk5GWDBGT1NWTlBWRkpQVUZrS0NRbDJaV016SUdkbGRFbENURUZ1YVhOdmRISnZjSGxTWVdScFlXNWpaU2dnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdjbTkxWjJodVpYTnpMQ0JqYjI1emRDQnBiaUIyWldNeklHSnBkR0Z1WjJWdWRDd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lXNXBjMjkwY205d2VTQXBJSHNLQ1FrSkkybG1aR1ZtSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZS0NRa0pDWFpsWXpNZ1ltVnVkRTV2Y20xaGJDQTlJR055YjNOektDQmlhWFJoYm1kbGJuUXNJSFpwWlhkRWFYSWdLVHNLQ1FrSkNXSmxiblJPYjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUdOeWIzTnpLQ0JpWlc1MFRtOXliV0ZzTENCaWFYUmhibWRsYm5RZ0tTQXBPd29KQ1FrSlltVnVkRTV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnYldsNEtDQmlaVzUwVG05eWJXRnNMQ0J1YjNKdFlXd3NJSEJ2ZHpJb0lIQnZkeklvSURFdU1DQXRJR0Z1YVhOdmRISnZjSGtnS2lBb0lERXVNQ0F0SUhKdmRXZG9ibVZ6Y3lBcElDa2dLU0FwSUNrN0Nna0pDUWx5WlhSMWNtNGdaMlYwU1VKTVVtRmthV0Z1WTJVb0lIWnBaWGRFYVhJc0lHSmxiblJPYjNKdFlXd3NJSEp2ZFdkb2JtVnpjeUFwT3dvSkNRa2paV3h6WlFvSkNRa0pjbVYwZFhKdUlIWmxZek1vSURBdU1DQXBPd29KQ1FralpXNWthV1lLQ1FsOUNna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1oyMGdQU0JnVkc5dmJrMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc093cHRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpTzJBc0lGOXRJRDBnWUhaaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dwemRISjFZM1FnVkc5dmJrMWhkR1Z5YVdGc0lIc0tDWFpsWXpNZ1pHbG1ablZ6WlVOdmJHOXlPd3A5T3dwMmIybGtJRkpGWDBScGNtVmpkRjlVYjI5dUtDQmpiMjV6ZENCcGJpQkpibU5wWkdWdWRFeHBaMmgwSUdScGNtVmpkRXhwWjJoMExDQmpiMjV6ZENCcGJpQjJaV016SUdkbGIyMWxkSEo1VUc5emFYUnBiMjRzSUdOdmJuTjBJR2x1SUhabFl6TWdaMlZ2YldWMGNubE9iM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nWjJWdmJXVjBjbmxXYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVEyeGxZWEpqYjJGMFRtOXliV0ZzTENCamIyNXpkQ0JwYmlCVWIyOXVUV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSmRtVmpNeUJwY25KaFpHbGhibU5sSUQwZ1oyVjBSM0poWkdsbGJuUkpjbkpoWkdsaGJtTmxLQ0JuWlc5dFpYUnllVTV2Y20xaGJDd2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrZ0tpQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3owZ2FYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlRHRnRZbVZ5ZENnZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ2s3Q24wS2RtOXBaQ0JTUlY5SmJtUnBjbVZqZEVScFptWjFjMlZmVkc5dmJpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCcGNuSmhaR2xoYm1ObExDQmpiMjV6ZENCcGJpQjJaV016SUdkbGIyMWxkSEo1VUc5emFYUnBiMjRzSUdOdmJuTjBJR2x1SUhabFl6TWdaMlZ2YldWMGNubE9iM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nWjJWdmJXVjBjbmxXYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVEyeGxZWEpqYjJGMFRtOXliV0ZzTENCamIyNXpkQ0JwYmlCVWIyOXVUV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDB4aGJXSmxjblFvSUcxaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQXBPd3A5Q2lOa1pXWnBibVVnVWtWZlJHbHlaV04wQ1FrSkNWSkZYMFJwY21WamRGOVViMjl1Q2lOa1pXWnBibVVnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sQ1FsU1JWOUpibVJwY21WamRFUnBabVoxYzJWZlZHOXZibUFzSUhodElEMGdZRUpzYVc1dVVHaHZibWROWVhSbGNtbGhiQ0J0WVhSbGNtbGhiRHNLYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlEMGdaR2xtWm5WelpVTnZiRzl5TG5Kbllqc0tiV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2lBOUlITndaV04xYkdGeU93cHRZWFJsY21saGJDNXpjR1ZqZFd4aGNsTm9hVzVwYm1WemN5QTlJSE5vYVc1cGJtVnpjenNLYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0E5SUhOd1pXTjFiR0Z5VTNSeVpXNW5kR2c3WUN3Z2RtMGdQU0JnZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q25OMGNuVmpkQ0JDYkdsdWJsQm9iMjVuVFdGMFpYSnBZV3dnZXdvSmRtVmpNeUJrYVdabWRYTmxRMjlzYjNJN0NnbDJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSTdDZ2xtYkc5aGRDQnpjR1ZqZFd4aGNsTm9hVzVwYm1WemN6c0tDV1pzYjJGMElITndaV04xYkdGeVUzUnlaVzVuZEdnN0NuMDdDblp2YVdRZ1VrVmZSR2x5WldOMFgwSnNhVzV1VUdodmJtY29JR052Ym5OMElHbHVJRWx1WTJsa1pXNTBUR2xuYUhRZ1pHbHlaV04wVEdsbmFIUXNJR052Ym5OMElHbHVJSFpsWXpNZ1oyVnZiV1YwY25sUWIzTnBkR2x2Yml3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVTV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVZacFpYZEVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdaMlZ2YldWMGNubERiR1ZoY21OdllYUk9iM0p0WVd3c0lHTnZibk4wSUdsdUlFSnNhVzV1VUdodmJtZE5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdLU0I3Q2dsbWJHOWhkQ0JrYjNST1RDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHZGxiMjFsZEhKNVRtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLU0FwT3dvSmRtVmpNeUJwY25KaFpHbGhibU5sSUQwZ1pHOTBUa3dnS2lCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSVGNHVmpkV3hoY2lBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOUNiR2x1YmxCb2IyNW5LQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0c0lHZGxiMjFsZEhKNVZtbGxkMFJwY2l3Z1oyVnZiV1YwY25sT2IzSnRZV3dzSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSXNJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlVMmhwYm1sdVpYTnpJQ2tnS2lCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2xOMGNtVnVaM1JvT3dwOUNuWnZhV1FnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sWDBKc2FXNXVVR2h2Ym1jb0lHTnZibk4wSUdsdUlIWmxZek1nYVhKeVlXUnBZVzVqWlN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVkJ2YzJsMGFXOXVMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVRtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJR2RsYjIxbGRISjVWbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVVOc1pXRnlZMjloZEU1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnUW14cGJtNVFhRzl1WjAxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzTENCcGJtOTFkQ0JTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBcElIc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOU1ZVzFpWlhKMEtDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnS1RzS2ZRb2paR1ZtYVc1bElGSkZYMFJwY21WamRBa0pDUWxTUlY5RWFYSmxZM1JmUW14cGJtNVFhRzl1WndvalpHVm1hVzVsSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlFrSlVrVmZTVzVrYVhKbFkzUkVhV1ptZFhObFgwSnNhVzV1VUdodmJtZGdMQ0I1YlNBOUlHQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc093cHRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpSUNvZ0tDQXhMakFnTFNCdFpYUmhiRzVsYzNOR1lXTjBiM0lnS1RzS2RtVmpNeUJrZUhrZ1BTQnRZWGdvSUdGaWN5Z2daRVprZUNnZ2JtOXVVR1Z5ZEhWeVltVmtUbTl5YldGc0lDa2dLU3dnWVdKektDQmtSbVI1S0NCdWIyNVFaWEowZFhKaVpXUk9iM0p0WVd3Z0tTQXBJQ2s3Q21ac2IyRjBJR2RsYjIxbGRISjVVbTkxWjJodVpYTnpJRDBnYldGNEtDQnRZWGdvSUdSNGVTNTRMQ0JrZUhrdWVTQXBMQ0JrZUhrdWVpQXBPd3B0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01nUFNCdFlYZ29JSEp2ZFdkb2JtVnpjMFpoWTNSdmNpd2dNQzR3TlRJMUlDazdiV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpJQ3M5SUdkbGIyMWxkSEo1VW05MVoyaHVaWE56T3dwdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNZ1BTQnRhVzRvSUcxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3l3Z01TNHdJQ2s3Q2lOcFptUmxaaUJKVDFJS0NXMWhkR1Z5YVdGc0xtbHZjaUE5SUdsdmNqc0tDU05wWm1SbFppQlZVMFZmVTFCRlExVk1RVklLQ1FsbWJHOWhkQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpQTlJSE53WldOMWJHRnlTVzUwWlc1emFYUjVPd29KQ1habFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2taaFkzUnZjaUE5SUhOd1pXTjFiR0Z5UTI5c2IzSTdDZ2tKSTJsbVpHVm1JRlZUUlY5VFVFVkRWVXhCVWw5RFQweFBVazFCVUFvSkNRbHpjR1ZqZFd4aGNrTnZiRzl5Um1GamRHOXlJQ285SUhSbGVIUjFjbVV5UkNnZ2MzQmxZM1ZzWVhKRGIyeHZjazFoY0N3Z2RsTndaV04xYkdGeVEyOXNiM0pOWVhCVmRpQXBMbkpuWWpzS0NRa2paVzVrYVdZS0NRa2phV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNYMGxPVkVWT1UwbFVXVTFCVUFvSkNRbHpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVWmhZM1J2Y2lBcVBTQjBaWGgwZFhKbE1rUW9JSE53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TENCMlUzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQlZkaUFwTG1FN0Nna0pJMlZ1WkdsbUNna0piV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFnUFNCdGFYZ29JSE53WldOMWJHRnlTVzUwWlc1emFYUjVSbUZqZEc5eUxDQXhMakFzSUcxbGRHRnNibVZ6YzBaaFkzUnZjaUFwT3dvSkkyVnNjMlVLQ1FsbWJHOWhkQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpQTlJREV1TURzS0NRbDJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSkdZV04wYjNJZ1BTQjJaV016S0NBeExqQWdLVHNLQ1FsdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tZNU1DQTlJREV1TURzS0NTTmxibVJwWmdvSmJXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjaUE5SUcxcGVDZ2diV2x1S0NCd2IzY3lLQ0FvSUcxaGRHVnlhV0ZzTG1sdmNpQXRJREV1TUNBcElDOGdLQ0J0WVhSbGNtbGhiQzVwYjNJZ0t5QXhMakFnS1NBcElDb2djM0JsWTNWc1lYSkRiMnh2Y2taaFkzUnZjaXdnZG1Wak15Z2dNUzR3SUNrZ0tTQXFJSE53WldOMWJHRnlTVzUwWlc1emFYUjVSbUZqZEc5eUxDQmthV1ptZFhObFEyOXNiM0l1Y21kaUxDQnRaWFJoYkc1bGMzTkdZV04wYjNJZ0tUc0tJMlZzYzJVS0NXMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lnUFNCdGFYZ29JSFpsWXpNb0lEQXVNRFFnS1N3Z1pHbG1ablZ6WlVOdmJHOXlMbkpuWWl3Z2JXVjBZV3h1WlhOelJtRmpkRzl5SUNrN0NnbHRZWFJsY21saGJDNXpjR1ZqZFd4aGNrWTVNQ0E5SURFdU1Ec0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2x0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFFnUFNCamJHVmhjbU52WVhRN0NnbHRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdQU0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM003Q2dsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSR01DQTlJSFpsWXpNb0lEQXVNRFFnS1RzS0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWTVNQ0E5SURFdU1Ec0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVVFVGUUNna0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJQ285SUhSbGVIUjFjbVV5UkNnZ1kyeGxZWEpqYjJGMFRXRndMQ0IyUTJ4bFlYSmpiMkYwVFdGd1ZYWWdLUzU0T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZGOVNUMVZIU0U1RlUxTk5RVkFLQ1FsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ0tqMGdkR1Y0ZEhWeVpUSkVLQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBc0lIWkRiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEJWZGlBcExuazdDZ2tqWlc1a2FXWUtDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkQ0E5SUhOaGRIVnlZWFJsS0NCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhRZ0tUc0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJRDBnYldGNEtDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTXNJREF1TURVeU5TQXBPd29KYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNzOUlHZGxiMjFsZEhKNVVtOTFaMmh1WlhOek93b0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJRDBnYldsdUtDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTXNJREV1TUNBcE93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOUpVa2xFUlZORFJVNURSUW9KYldGMFpYSnBZV3d1YVhKcFpHVnpZMlZ1WTJVZ1BTQnBjbWxrWlhOalpXNWpaVHNLQ1cxaGRHVnlhV0ZzTG1seWFXUmxjMk5sYm1ObFNVOVNJRDBnYVhKcFpHVnpZMlZ1WTJWSlQxSTdDZ2tqYVdaa1pXWWdWVk5GWDBsU1NVUkZVME5GVGtORlRVRlFDZ2tKYldGMFpYSnBZV3d1YVhKcFpHVnpZMlZ1WTJVZ0tqMGdkR1Y0ZEhWeVpUSkVLQ0JwY21sa1pYTmpaVzVqWlUxaGNDd2dka2x5YVdSbGMyTmxibU5sVFdGd1ZYWWdLUzV5T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgwbFNTVVJGVTBORlRrTkZYMVJJU1VOTFRrVlRVMDFCVUFvSkNXMWhkR1Z5YVdGc0xtbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpJRDBnS0dseWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelRXRjRhVzExYlNBdElHbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpUV2x1YVcxMWJTa2dLaUIwWlhoMGRYSmxNa1FvSUdseWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelRXRndMQ0IyU1hKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQlZkaUFwTG1jZ0t5QnBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFwYm1sdGRXMDdDZ2tqWld4elpRb0pDVzFoZEdWeWFXRnNMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56SUQwZ2FYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTk5ZWGhwYlhWdE93b0pJMlZ1WkdsbUNpTmxibVJwWmdvamFXWmtaV1lnVlZORlgxTklSVVZPQ2dsdFlYUmxjbWxoYkM1emFHVmxia052Ykc5eUlEMGdjMmhsWlc1RGIyeHZjanNLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTVmUTA5TVQxSk5RVkFLQ1FsdFlYUmxjbWxoYkM1emFHVmxia052Ykc5eUlDbzlJSFJsZUhSMWNtVXlSQ2dnYzJobFpXNURiMnh2Y2sxaGNDd2dkbE5vWldWdVEyOXNiM0pOWVhCVmRpQXBMbkpuWWpzS0NTTmxibVJwWmdvSmJXRjBaWEpwWVd3dWMyaGxaVzVTYjNWbmFHNWxjM01nUFNCamJHRnRjQ2dnYzJobFpXNVNiM1ZuYUc1bGMzTXNJREF1TURjc0lERXVNQ0FwT3dvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGw5U1QxVkhTRTVGVTFOTlFWQUtDUWx0WVhSbGNtbGhiQzV6YUdWbGJsSnZkV2RvYm1WemN5QXFQU0IwWlhoMGRYSmxNa1FvSUhOb1pXVnVVbTkxWjJodVpYTnpUV0Z3TENCMlUyaGxaVzVTYjNWbmFHNWxjM05OWVhCVmRpQXBMbUU3Q2dralpXNWthV1lLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUVU1SlUwOVVVazlRV1FvSkkybG1aR1ZtSUZWVFJWOUJUa2xUVDFSU1QxQlpUVUZRQ2drSmJXRjBNaUJoYm1semIzUnliM0I1VFdGMElEMGdiV0YwTWlnZ1lXNXBjMjkwY205d2VWWmxZM1J2Y2k1NExDQmhibWx6YjNSeWIzQjVWbVZqZEc5eUxua3NJQzBnWVc1cGMyOTBjbTl3ZVZabFkzUnZjaTU1TENCaGJtbHpiM1J5YjNCNVZtVmpkRzl5TG5nZ0tUc0tDUWwyWldNeklHRnVhWE52ZEhKdmNIbFFiMnhoY2lBOUlIUmxlSFIxY21VeVJDZ2dZVzVwYzI5MGNtOXdlVTFoY0N3Z2RrRnVhWE52ZEhKdmNIbE5ZWEJWZGlBcExuSm5ZanNLQ1FsMlpXTXlJR0Z1YVhOdmRISnZjSGxXSUQwZ1lXNXBjMjkwY205d2VVMWhkQ0FxSUc1dmNtMWhiR2w2WlNnZ01pNHdJQ29nWVc1cGMyOTBjbTl3ZVZCdmJHRnlMbkpuSUMwZ2RtVmpNaWdnTVM0d0lDa2dLU0FxSUdGdWFYTnZkSEp2Y0hsUWIyeGhjaTVpT3dvSkkyVnNjMlVLQ1FsMlpXTXlJR0Z1YVhOdmRISnZjSGxXSUQwZ1lXNXBjMjkwY205d2VWWmxZM1J2Y2pzS0NTTmxibVJwWmdvSmJXRjBaWEpwWVd3dVlXNXBjMjkwY205d2VTQTlJR3hsYm1kMGFDZ2dZVzVwYzI5MGNtOXdlVllnS1RzS0NXRnVhWE52ZEhKdmNIbFdJQzg5SUcxaGRHVnlhV0ZzTG1GdWFYTnZkSEp2Y0hrN0NnbHRZWFJsY21saGJDNWhibWx6YjNSeWIzQjVJRDBnYzJGMGRYSmhkR1VvSUcxaGRHVnlhV0ZzTG1GdWFYTnZkSEp2Y0hrZ0tUc0tDVzFoZEdWeWFXRnNMbUZzY0doaFZDQTlJRzFwZUNnZ2NHOTNNaWdnYldGMFpYSnBZV3d1Y205MVoyaHVaWE56SUNrc0lERXVNQ3dnY0c5M01pZ2diV0YwWlhKcFlXd3VZVzVwYzI5MGNtOXdlU0FwSUNrN0NnbHRZWFJsY21saGJDNWhibWx6YjNSeWIzQjVWQ0E5SUhSaWJsc2dNQ0JkSUNvZ1lXNXBjMjkwY205d2VWWXVlQ0F0SUhSaWJsc2dNU0JkSUNvZ1lXNXBjMjkwY205d2VWWXVlVHNLQ1cxaGRHVnlhV0ZzTG1GdWFYTnZkSEp2Y0hsQ0lEMGdkR0p1V3lBeElGMGdLaUJoYm1semIzUnliM0I1Vmk1NElDc2dkR0p1V3lBd0lGMGdLaUJoYm1semIzUnliM0I1Vmk1NU93b2paVzVrYVdaZ0xDQk5iU0E5SUdCemRISjFZM1FnVUdoNWMybGpZV3hOWVhSbGNtbGhiQ0I3Q2dsMlpXTXpJR1JwWm1aMWMyVkRiMnh2Y2pzS0NXWnNiMkYwSUhKdmRXZG9ibVZ6Y3pzS0NYWmxZek1nYzNCbFkzVnNZWEpEYjJ4dmNqc0tDV1pzYjJGMElITndaV04xYkdGeVJqa3dPd29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NRbG1iRzloZENCamJHVmhjbU52WVhRN0Nna0pabXh2WVhRZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOek93b0pDWFpsWXpNZ1kyeGxZWEpqYjJGMFJqQTdDZ2tKWm14dllYUWdZMnhsWVhKamIyRjBSamt3T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgwbFNTVVJGVTBORlRrTkZDZ2tKWm14dllYUWdhWEpwWkdWelkyVnVZMlU3Q2drSlpteHZZWFFnYVhKcFpHVnpZMlZ1WTJWSlQxSTdDZ2tKWm14dllYUWdhWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM003Q2drSmRtVmpNeUJwY21sa1pYTmpaVzVqWlVaeVpYTnVaV3c3Q2drSmRtVmpNeUJwY21sa1pYTmpaVzVqWlVZd093b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMU5JUlVWT0Nna0pkbVZqTXlCemFHVmxia052Ykc5eU93b0pDV1pzYjJGMElITm9aV1Z1VW05MVoyaHVaWE56T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnU1U5U0Nna0pabXh2WVhRZ2FXOXlPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdWVk5GWDFSU1FVNVRUVWxUVTBsUFRnb0pDV1pzYjJGMElIUnlZVzV6YldsemMybHZianNLQ1FsbWJHOWhkQ0IwY21GdWMyMXBjM05wYjI1QmJIQm9ZVHNLQ1FsbWJHOWhkQ0IwYUdsamEyNWxjM003Q2drSlpteHZZWFFnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlRzS0NRbDJaV016SUdGMGRHVnVkV0YwYVc5dVEyOXNiM0k3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlFVNUpVMDlVVWs5UVdRb0pDV1pzYjJGMElHRnVhWE52ZEhKdmNIazdDZ2tKWm14dllYUWdZV3h3YUdGVU93b0pDWFpsWXpNZ1lXNXBjMjkwY205d2VWUTdDZ2tKZG1Wak15QmhibWx6YjNSeWIzQjVRanNLQ1NObGJtUnBaZ3A5T3dwMlpXTXpJR05zWldGeVkyOWhkRk53WldOMWJHRnlJRDBnZG1Wak15Z2dNQzR3SUNrN0NuWmxZek1nYzJobFpXNVRjR1ZqZFd4aGNpQTlJSFpsWXpNb0lEQXVNQ0FwT3dwMlpXTXpJRk5qYUd4cFkydGZkRzlmUmpBb0lHTnZibk4wSUdsdUlIWmxZek1nWml3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWmprd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUldTQ0FwSUhzS0lDQWdJR1pzYjJGMElIZ2dQU0JqYkdGdGNDZ2dNUzR3SUMwZ1pHOTBWa2dzSURBdU1Dd2dNUzR3SUNrN0NpQWdJQ0JtYkc5aGRDQjRNaUE5SUhnZ0tpQjRPd29nSUNBZ1pteHZZWFFnZURVZ1BTQmpiR0Z0Y0NnZ2VDQXFJSGd5SUNvZ2VESXNJREF1TUN3Z01DNDVPVGs1SUNrN0NpQWdJQ0J5WlhSMWNtNGdLQ0JtSUMwZ2RtVmpNeWdnWmprd0lDa2dLaUI0TlNBcElDOGdLQ0F4TGpBZ0xTQjROU0FwT3dwOUNtWnNiMkYwSUZaZlIwZFlYMU50YVhSb1EyOXljbVZzWVhSbFpDZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lXeHdhR0VzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1TUxDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUk9WaUFwSUhzS0NXWnNiMkYwSUdFeUlEMGdjRzkzTWlnZ1lXeHdhR0VnS1RzS0NXWnNiMkYwSUdkMklEMGdaRzkwVGt3Z0tpQnpjWEowS0NCaE1pQXJJQ2dnTVM0d0lDMGdZVElnS1NBcUlIQnZkeklvSUdSdmRFNVdJQ2tnS1RzS0NXWnNiMkYwSUdkc0lEMGdaRzkwVGxZZ0tpQnpjWEowS0NCaE1pQXJJQ2dnTVM0d0lDMGdZVElnS1NBcUlIQnZkeklvSUdSdmRFNU1JQ2tnS1RzS0NYSmxkSFZ5YmlBd0xqVWdMeUJ0WVhnb0lHZDJJQ3NnWjJ3c0lFVlFVMGxNVDA0Z0tUc0tmUXBtYkc5aGRDQkVYMGRIV0NnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnWVd4d2FHRXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRTVJSUNrZ2V3b0pabXh2WVhRZ1lUSWdQU0J3YjNjeUtDQmhiSEJvWVNBcE93b0pabXh2WVhRZ1pHVnViMjBnUFNCd2IzY3lLQ0JrYjNST1NDQXBJQ29nS0NCaE1pQXRJREV1TUNBcElDc2dNUzR3T3dvSmNtVjBkWEp1SUZKRlEwbFFVazlEUVV4ZlVFa2dLaUJoTWlBdklIQnZkeklvSUdSbGJtOXRJQ2s3Q24wS0kybG1aR1ZtSUZWVFJWOUJUa2xUVDFSU1QxQlpDZ2xtYkc5aGRDQldYMGRIV0Y5VGJXbDBhRU52Y25KbGJHRjBaV1JmUVc1cGMyOTBjbTl3YVdNb0lHTnZibk4wSUdsdUlHWnNiMkYwSUdGc2NHaGhWQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdZV3h3YUdGQ0xDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUlVWaXdnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwUWxZc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdSdmRGUk1MQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmtiM1JDVEN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWkc5MFRsWXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRTVNSUNrZ2V3b0pDV1pzYjJGMElHZDJJRDBnWkc5MFRrd2dLaUJzWlc1bmRHZ29JSFpsWXpNb0lHRnNjR2hoVkNBcUlHUnZkRlJXTENCaGJIQm9ZVUlnS2lCa2IzUkNWaXdnWkc5MFRsWWdLU0FwT3dvSkNXWnNiMkYwSUdkc0lEMGdaRzkwVGxZZ0tpQnNaVzVuZEdnb0lIWmxZek1vSUdGc2NHaGhWQ0FxSUdSdmRGUk1MQ0JoYkhCb1lVSWdLaUJrYjNSQ1RDd2daRzkwVGt3Z0tTQXBPd29KQ1dac2IyRjBJSFlnUFNBd0xqVWdMeUFvSUdkMklDc2daMndnS1RzS0NRbHlaWFIxY200Z2MyRjBkWEpoZEdVb2RpazdDZ2w5Q2dsbWJHOWhkQ0JFWDBkSFdGOUJibWx6YjNSeWIzQnBZeWdnWTI5dWMzUWdhVzRnWm14dllYUWdZV3h3YUdGVUxDQmpiMjV6ZENCcGJpQm1iRzloZENCaGJIQm9ZVUlzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1SUxDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUlVTQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwUWtnZ0tTQjdDZ2tKWm14dllYUWdZVElnUFNCaGJIQm9ZVlFnS2lCaGJIQm9ZVUk3Q2drSmFHbG5hSEFnZG1Wak15QjJJRDBnZG1Wak15Z2dZV3h3YUdGQ0lDb2daRzkwVkVnc0lHRnNjR2hoVkNBcUlHUnZkRUpJTENCaE1pQXFJR1J2ZEU1SUlDazdDZ2tKYUdsbmFIQWdabXh2WVhRZ2RqSWdQU0JrYjNRb0lIWXNJSFlnS1RzS0NRbG1iRzloZENCM01pQTlJR0V5SUM4Z2RqSTdDZ2tKY21WMGRYSnVJRkpGUTBsUVVrOURRVXhmVUVrZ0tpQmhNaUFxSUhCdmR6SWdLQ0IzTWlBcE93b0pmUW9qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlFLQ1habFl6TWdRbEpFUmw5SFIxaGZRMnhsWVhKamIyRjBLQ0JqYjI1emRDQnBiaUIyWldNeklHeHBaMmgwUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUhacFpYZEVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0xDQmpiMjV6ZENCcGJpQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0tTQjdDZ2tKZG1Wak15Qm1NQ0E5SUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZd093b0pDV1pzYjJGMElHWTVNQ0E5SUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZNU1Ec0tDUWxtYkc5aGRDQnliM1ZuYUc1bGMzTWdQU0J0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM003Q2drSlpteHZZWFFnWVd4d2FHRWdQU0J3YjNjeUtDQnliM1ZuYUc1bGMzTWdLVHNLQ1FsMlpXTXpJR2hoYkdaRWFYSWdQU0J1YjNKdFlXeHBlbVVvSUd4cFoyaDBSR2x5SUNzZ2RtbGxkMFJwY2lBcE93b0pDV1pzYjJGMElHUnZkRTVNSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0JzYVdkb2RFUnBjaUFwSUNrN0Nna0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSWdLU0FwT3dvSkNXWnNiMkYwSUdSdmRFNUlJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dibTl5YldGc0xDQm9ZV3htUkdseUlDa2dLVHNLQ1FsbWJHOWhkQ0JrYjNSV1NDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lIWnBaWGRFYVhJc0lHaGhiR1pFYVhJZ0tTQXBPd29KQ1habFl6TWdSaUE5SUVaZlUyTm9iR2xqYXlnZ1pqQXNJR1k1TUN3Z1pHOTBWa2dnS1RzS0NRbG1iRzloZENCV0lEMGdWbDlIUjFoZlUyMXBkR2hEYjNKeVpXeGhkR1ZrS0NCaGJIQm9ZU3dnWkc5MFRrd3NJR1J2ZEU1V0lDazdDZ2tKWm14dllYUWdSQ0E5SUVSZlIwZFlLQ0JoYkhCb1lTd2daRzkwVGtnZ0tUc0tDUWx5WlhSMWNtNGdSaUFxSUNnZ1ZpQXFJRVFnS1RzS0NYMEtJMlZ1WkdsbUNuWmxZek1nUWxKRVJsOUhSMWdvSUdOdmJuTjBJR2x1SUhabFl6TWdiR2xuYUhSRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2diV0YwWlhKcFlXd2dLU0I3Q2dsMlpXTXpJR1l3SUQwZ2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjanNLQ1dac2IyRjBJR1k1TUNBOUlHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVJqa3dPd29KWm14dllYUWdjbTkxWjJodVpYTnpJRDBnYldGMFpYSnBZV3d1Y205MVoyaHVaWE56T3dvSlpteHZZWFFnWVd4d2FHRWdQU0J3YjNjeUtDQnliM1ZuYUc1bGMzTWdLVHNLQ1habFl6TWdhR0ZzWmtScGNpQTlJRzV2Y20xaGJHbDZaU2dnYkdsbmFIUkVhWElnS3lCMmFXVjNSR2x5SUNrN0NnbG1iRzloZENCa2IzUk9UQ0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2diR2xuYUhSRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVGtnZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUdoaGJHWkVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBWa2dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0IyYVdWM1JHbHlMQ0JvWVd4bVJHbHlJQ2tnS1RzS0NYWmxZek1nUmlBOUlFWmZVMk5vYkdsamF5Z2daakFzSUdZNU1Dd2daRzkwVmtnZ0tUc0tDU05wWm1SbFppQlZVMFZmU1ZKSlJFVlRRMFZPUTBVS0NRbEdJRDBnYldsNEtDQkdMQ0J0WVhSbGNtbGhiQzVwY21sa1pYTmpaVzVqWlVaeVpYTnVaV3dzSUcxaGRHVnlhV0ZzTG1seWFXUmxjMk5sYm1ObElDazdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQlZVMFZmUVU1SlUwOVVVazlRV1FvSkNXWnNiMkYwSUdSdmRGUk1JRDBnWkc5MEtDQnRZWFJsY21saGJDNWhibWx6YjNSeWIzQjVWQ3dnYkdsbmFIUkVhWElnS1RzS0NRbG1iRzloZENCa2IzUlVWaUE5SUdSdmRDZ2diV0YwWlhKcFlXd3VZVzVwYzI5MGNtOXdlVlFzSUhacFpYZEVhWElnS1RzS0NRbG1iRzloZENCa2IzUlVTQ0E5SUdSdmRDZ2diV0YwWlhKcFlXd3VZVzVwYzI5MGNtOXdlVlFzSUdoaGJHWkVhWElnS1RzS0NRbG1iRzloZENCa2IzUkNUQ0E5SUdSdmRDZ2diV0YwWlhKcFlXd3VZVzVwYzI5MGNtOXdlVUlzSUd4cFoyaDBSR2x5SUNrN0Nna0pabXh2WVhRZ1pHOTBRbFlnUFNCa2IzUW9JRzFoZEdWeWFXRnNMbUZ1YVhOdmRISnZjSGxDTENCMmFXVjNSR2x5SUNrN0Nna0pabXh2WVhRZ1pHOTBRa2dnUFNCa2IzUW9JRzFoZEdWeWFXRnNMbUZ1YVhOdmRISnZjSGxDTENCb1lXeG1SR2x5SUNrN0Nna0pabXh2WVhRZ1ZpQTlJRlpmUjBkWVgxTnRhWFJvUTI5eWNtVnNZWFJsWkY5QmJtbHpiM1J5YjNCcFl5Z2diV0YwWlhKcFlXd3VZV3h3YUdGVUxDQmhiSEJvWVN3Z1pHOTBWRllzSUdSdmRFSldMQ0JrYjNSVVRDd2daRzkwUWt3c0lHUnZkRTVXTENCa2IzUk9UQ0FwT3dvSkNXWnNiMkYwSUVRZ1BTQkVYMGRIV0Y5QmJtbHpiM1J5YjNCcFl5Z2diV0YwWlhKcFlXd3VZV3h3YUdGVUxDQmhiSEJvWVN3Z1pHOTBUa2dzSUdSdmRGUklMQ0JrYjNSQ1NDQXBPd29KSTJWc2MyVUtDUWxtYkc5aGRDQldJRDBnVmw5SFIxaGZVMjFwZEdoRGIzSnlaV3hoZEdWa0tDQmhiSEJvWVN3Z1pHOTBUa3dzSUdSdmRFNVdJQ2s3Q2drSlpteHZZWFFnUkNBOUlFUmZSMGRZS0NCaGJIQm9ZU3dnWkc5MFRrZ2dLVHNLQ1NObGJtUnBaZ29KY21WMGRYSnVJRVlnS2lBb0lGWWdLaUJFSUNrN0NuMEtkbVZqTWlCTVZFTmZWWFlvSUdOdmJuTjBJR2x1SUhabFl6TWdUaXdnWTI5dWMzUWdhVzRnZG1Wak15QldMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2dsamIyNXpkQ0JtYkc5aGRDQk1WVlJmVTBsYVJTQTlJRFkwTGpBN0NnbGpiMjV6ZENCbWJHOWhkQ0JNVlZSZlUwTkJURVVnUFNBb0lFeFZWRjlUU1ZwRklDMGdNUzR3SUNrZ0x5Qk1WVlJmVTBsYVJUc0tDV052Ym5OMElHWnNiMkYwSUV4VlZGOUNTVUZUSUQwZ01DNDFJQzhnVEZWVVgxTkpXa1U3Q2dsbWJHOWhkQ0JrYjNST1ZpQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lFNHNJRllnS1NBcE93b0pkbVZqTWlCMWRpQTlJSFpsWXpJb0lISnZkV2RvYm1WemN5d2djM0Z5ZENnZ01TNHdJQzBnWkc5MFRsWWdLU0FwT3dvSmRYWWdQU0IxZGlBcUlFeFZWRjlUUTBGTVJTQXJJRXhWVkY5Q1NVRlRPd29KY21WMGRYSnVJSFYyT3dwOUNtWnNiMkYwSUV4VVExOURiR2x3Y0dWa1UzQm9aWEpsUm05eWJVWmhZM1J2Y2lnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJtSUNrZ2V3b0pabXh2WVhRZ2JDQTlJR3hsYm1kMGFDZ2daaUFwT3dvSmNtVjBkWEp1SUcxaGVDZ2dLQ0JzSUNvZ2JDQXJJR1l1ZWlBcElDOGdLQ0JzSUNzZ01TNHdJQ2tzSURBdU1DQXBPd3A5Q25abFl6TWdURlJEWDBWa1oyVldaV04wYjNKR2IzSnRSbUZqZEc5eUtDQmpiMjV6ZENCcGJpQjJaV016SUhZeExDQmpiMjV6ZENCcGJpQjJaV016SUhZeUlDa2dld29KWm14dllYUWdlQ0E5SUdSdmRDZ2dkakVzSUhZeUlDazdDZ2xtYkc5aGRDQjVJRDBnWVdKektDQjRJQ2s3Q2dsbWJHOWhkQ0JoSUQwZ01DNDROVFF6T1RnMUlDc2dLQ0F3TGpRNU5qVXhOVFVnS3lBd0xqQXhORFV5TURZZ0tpQjVJQ2tnS2lCNU93b0pabXh2WVhRZ1lpQTlJRE11TkRFM05UazBNQ0FySUNnZ05DNHhOakUyTnpJMElDc2dlU0FwSUNvZ2VUc0tDV1pzYjJGMElIWWdQU0JoSUM4Z1lqc0tDV1pzYjJGMElIUm9aWFJoWDNOcGJuUm9aWFJoSUQwZ0tDQjRJRDRnTUM0d0lDa2dQeUIySURvZ01DNDFJQ29nYVc1MlpYSnpaWE54Y25Rb0lHMWhlQ2dnTVM0d0lDMGdlQ0FxSUhnc0lERmxMVGNnS1NBcElDMGdkanNLQ1hKbGRIVnliaUJqY205emN5Z2dkakVzSUhZeUlDa2dLaUIwYUdWMFlWOXphVzUwYUdWMFlUc0tmUXAyWldNeklFeFVRMTlGZG1Gc2RXRjBaU2dnWTI5dWMzUWdhVzRnZG1Wak15Qk9MQ0JqYjI1emRDQnBiaUIyWldNeklGWXNJR052Ym5OMElHbHVJSFpsWXpNZ1VDd2dZMjl1YzNRZ2FXNGdiV0YwTXlCdFNXNTJMQ0JqYjI1emRDQnBiaUIyWldNeklISmxZM1JEYjI5eVpITmJJRFFnWFNBcElIc0tDWFpsWXpNZ2RqRWdQU0J5WldOMFEyOXZjbVJ6V3lBeElGMGdMU0J5WldOMFEyOXZjbVJ6V3lBd0lGMDdDZ2wyWldNeklIWXlJRDBnY21WamRFTnZiM0prYzFzZ015QmRJQzBnY21WamRFTnZiM0prYzFzZ01DQmRPd29KZG1Wak15QnNhV2RvZEU1dmNtMWhiQ0E5SUdOeWIzTnpLQ0IyTVN3Z2RqSWdLVHNLQ1dsbUtDQmtiM1FvSUd4cFoyaDBUbTl5YldGc0xDQlFJQzBnY21WamRFTnZiM0prYzFzZ01DQmRJQ2tnUENBd0xqQWdLU0J5WlhSMWNtNGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlpXTXpJRlF4TENCVU1qc0tDVlF4SUQwZ2JtOXliV0ZzYVhwbEtDQldJQzBnVGlBcUlHUnZkQ2dnVml3Z1RpQXBJQ2s3Q2dsVU1pQTlJQzBnWTNKdmMzTW9JRTRzSUZReElDazdDZ2x0WVhReklHMWhkQ0E5SUcxSmJuWWdLaUIwY21GdWMzQnZjMlZOWVhRektDQnRZWFF6S0NCVU1Td2dWRElzSUU0Z0tTQXBPd29KZG1Wak15QmpiMjl5WkhOYklEUWdYVHNLQ1dOdmIzSmtjMXNnTUNCZElEMGdiV0YwSUNvZ0tDQnlaV04wUTI5dmNtUnpXeUF3SUYwZ0xTQlFJQ2s3Q2dsamIyOXlaSE5iSURFZ1hTQTlJRzFoZENBcUlDZ2djbVZqZEVOdmIzSmtjMXNnTVNCZElDMGdVQ0FwT3dvSlkyOXZjbVJ6V3lBeUlGMGdQU0J0WVhRZ0tpQW9JSEpsWTNSRGIyOXlaSE5iSURJZ1hTQXRJRkFnS1RzS0NXTnZiM0prYzFzZ015QmRJRDBnYldGMElDb2dLQ0J5WldOMFEyOXZjbVJ6V3lBeklGMGdMU0JRSUNrN0NnbGpiMjl5WkhOYklEQWdYU0E5SUc1dmNtMWhiR2w2WlNnZ1kyOXZjbVJ6V3lBd0lGMGdLVHNLQ1dOdmIzSmtjMXNnTVNCZElEMGdibTl5YldGc2FYcGxLQ0JqYjI5eVpITmJJREVnWFNBcE93b0pZMjl2Y21Seld5QXlJRjBnUFNCdWIzSnRZV3hwZW1Vb0lHTnZiM0prYzFzZ01pQmRJQ2s3Q2dsamIyOXlaSE5iSURNZ1hTQTlJRzV2Y20xaGJHbDZaU2dnWTI5dmNtUnpXeUF6SUYwZ0tUc0tDWFpsWXpNZ2RtVmpkRzl5Um05eWJVWmhZM1J2Y2lBOUlIWmxZek1vSURBdU1DQXBPd29KZG1WamRHOXlSbTl5YlVaaFkzUnZjaUFyUFNCTVZFTmZSV1JuWlZabFkzUnZja1p2Y20xR1lXTjBiM0lvSUdOdmIzSmtjMXNnTUNCZExDQmpiMjl5WkhOYklERWdYU0FwT3dvSmRtVmpkRzl5Um05eWJVWmhZM1J2Y2lBclBTQk1WRU5mUldSblpWWmxZM1J2Y2tadmNtMUdZV04wYjNJb0lHTnZiM0prYzFzZ01TQmRMQ0JqYjI5eVpITmJJRElnWFNBcE93b0pkbVZqZEc5eVJtOXliVVpoWTNSdmNpQXJQU0JNVkVOZlJXUm5aVlpsWTNSdmNrWnZjbTFHWVdOMGIzSW9JR052YjNKa2Mxc2dNaUJkTENCamIyOXlaSE5iSURNZ1hTQXBPd29KZG1WamRHOXlSbTl5YlVaaFkzUnZjaUFyUFNCTVZFTmZSV1JuWlZabFkzUnZja1p2Y20xR1lXTjBiM0lvSUdOdmIzSmtjMXNnTXlCZExDQmpiMjl5WkhOYklEQWdYU0FwT3dvSlpteHZZWFFnY21WemRXeDBJRDBnVEZSRFgwTnNhWEJ3WldSVGNHaGxjbVZHYjNKdFJtRmpkRzl5S0NCMlpXTjBiM0pHYjNKdFJtRmpkRzl5SUNrN0NnbHlaWFIxY200Z2RtVmpNeWdnY21WemRXeDBJQ2s3Q24wS0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFVkZUaUFwQ21ac2IyRjBJRVJmUTJoaGNteHBaU2dnWm14dllYUWdjbTkxWjJodVpYTnpMQ0JtYkc5aGRDQmtiM1JPU0NBcElIc0tDV1pzYjJGMElHRnNjR2hoSUQwZ2NHOTNNaWdnY205MVoyaHVaWE56SUNrN0NnbG1iRzloZENCcGJuWkJiSEJvWVNBOUlERXVNQ0F2SUdGc2NHaGhPd29KWm14dllYUWdZMjl6TW1nZ1BTQmtiM1JPU0NBcUlHUnZkRTVJT3dvSlpteHZZWFFnYzJsdU1tZ2dQU0J0WVhnb0lERXVNQ0F0SUdOdmN6Sm9MQ0F3TGpBd056Z3hNalVnS1RzS0NYSmxkSFZ5YmlBb0lESXVNQ0FySUdsdWRrRnNjR2hoSUNrZ0tpQndiM2NvSUhOcGJqSm9MQ0JwYm5aQmJIQm9ZU0FxSURBdU5TQXBJQzhnS0NBeUxqQWdLaUJRU1NBcE93cDlDbVpzYjJGMElGWmZUbVYxWW1Wc2RDZ2dabXh2WVhRZ1pHOTBUbFlzSUdac2IyRjBJR1J2ZEU1TUlDa2dld29KY21WMGRYSnVJSE5oZEhWeVlYUmxLQ0F4TGpBZ0x5QW9JRFF1TUNBcUlDZ2daRzkwVGt3Z0t5QmtiM1JPVmlBdElHUnZkRTVNSUNvZ1pHOTBUbFlnS1NBcElDazdDbjBLZG1Wak15QkNVa1JHWDFOb1pXVnVLQ0JqYjI1emRDQnBiaUIyWldNeklHeHBaMmgwUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUhacFpYZEVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0xDQjJaV016SUhOb1pXVnVRMjlzYjNJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhOb1pXVnVVbTkxWjJodVpYTnpJQ2tnZXdvSmRtVmpNeUJvWVd4bVJHbHlJRDBnYm05eWJXRnNhWHBsS0NCc2FXZG9kRVJwY2lBcklIWnBaWGRFYVhJZ0tUc0tDV1pzYjJGMElHUnZkRTVNSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0JzYVdkb2RFUnBjaUFwSUNrN0NnbG1iRzloZENCa2IzUk9WaUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpQXBJQ2s3Q2dsbWJHOWhkQ0JrYjNST1NDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2FHRnNaa1JwY2lBcElDazdDZ2xtYkc5aGRDQkVJRDBnUkY5RGFHRnliR2xsS0NCemFHVmxibEp2ZFdkb2JtVnpjeXdnWkc5MFRrZ2dLVHNLQ1dac2IyRjBJRllnUFNCV1gwNWxkV0psYkhRb0lHUnZkRTVXTENCa2IzUk9UQ0FwT3dvSmNtVjBkWEp1SUhOb1pXVnVRMjlzYjNJZ0tpQW9JRVFnS2lCV0lDazdDbjBLSTJWdVpHbG1DbVpzYjJGMElFbENURk5vWldWdVFsSkVSaWdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nZG1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjbTkxWjJodVpYTnpJQ2tnZXdvSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJZ0tTQXBPd29KWm14dllYUWdjaklnUFNCeWIzVm5hRzVsYzNNZ0tpQnliM1ZuYUc1bGMzTTdDZ2xtYkc5aGRDQmhJRDBnY205MVoyaHVaWE56SUR3Z01DNHlOU0EvSUMwek16a3VNaUFxSUhJeUlDc2dNVFl4TGpRZ0tpQnliM1ZuYUc1bGMzTWdMU0F5TlM0NUlEb2dMVGd1TkRnZ0tpQnlNaUFySURFMExqTWdLaUJ5YjNWbmFHNWxjM01nTFNBNUxqazFPd29KWm14dllYUWdZaUE5SUhKdmRXZG9ibVZ6Y3lBOElEQXVNalVnUHlBME5DNHdJQ29nY2pJZ0xTQXlNeTQzSUNvZ2NtOTFaMmh1WlhOeklDc2dNeTR5TmlBNklERXVPVGNnS2lCeU1pQXRJRE11TWpjZ0tpQnliM1ZuYUc1bGMzTWdLeUF3TGpjeU93b0pabXh2WVhRZ1JFY2dQU0JsZUhBb0lHRWdLaUJrYjNST1ZpQXJJR0lnS1NBcklDZ2djbTkxWjJodVpYTnpJRHdnTUM0eU5TQS9JREF1TUNBNklEQXVNU0FxSUNnZ2NtOTFaMmh1WlhOeklDMGdNQzR5TlNBcElDazdDZ2x5WlhSMWNtNGdjMkYwZFhKaGRHVW9JRVJISUNvZ1VrVkRTVkJTVDBOQlRGOVFTU0FwT3dwOUNuWmxZeklnUkVaSFFYQndjbTk0S0NCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0NnbG1iRzloZENCa2IzUk9WaUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpQXBJQ2s3Q2dsamIyNXpkQ0IyWldNMElHTXdJRDBnZG1Wak5DZ2dMU0F4TENBdElEQXVNREkzTlN3Z0xTQXdMalUzTWl3Z01DNHdNaklnS1RzS0NXTnZibk4wSUhabFl6UWdZekVnUFNCMlpXTTBLQ0F4TENBd0xqQTBNalVzSURFdU1EUXNJQzBnTUM0d05DQXBPd29KZG1Wak5DQnlJRDBnY205MVoyaHVaWE56SUNvZ1l6QWdLeUJqTVRzS0NXWnNiMkYwSUdFd01EUWdQU0J0YVc0b0lISXVlQ0FxSUhJdWVDd2daWGh3TWlnZ0xTQTVMakk0SUNvZ1pHOTBUbFlnS1NBcElDb2djaTU0SUNzZ2NpNTVPd29KZG1Wak1pQm1ZV0lnUFNCMlpXTXlLQ0F0SURFdU1EUXNJREV1TURRZ0tTQXFJR0V3TURRZ0t5QnlMbnAzT3dvSmNtVjBkWEp1SUdaaFlqc0tmUXAyWldNeklFVnVkbWx5YjI1dFpXNTBRbEpFUmlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ6Y0dWamRXeGhja052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCemNHVmpkV3hoY2tZNU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KZG1Wak1pQm1ZV0lnUFNCRVJrZEJjSEJ5YjNnb0lHNXZjbTFoYkN3Z2RtbGxkMFJwY2l3Z2NtOTFaMmh1WlhOeklDazdDZ2x5WlhSMWNtNGdjM0JsWTNWc1lYSkRiMnh2Y2lBcUlHWmhZaTU0SUNzZ2MzQmxZM1ZzWVhKR09UQWdLaUJtWVdJdWVUc0tmUW9qYVdaa1pXWWdWVk5GWDBsU1NVUkZVME5GVGtORkNuWnZhV1FnWTI5dGNIVjBaVTExYkhScGMyTmhkSFJsY21sdVowbHlhV1JsYzJObGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklITndaV04xYkdGeVEyOXNiM0lzSUdOdmJuTjBJR2x1SUdac2IyRjBJSE53WldOMWJHRnlSamt3TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JwY21sa1pYTmpaVzVqWlN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJwY21sa1pYTmpaVzVqWlVZd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHbHViM1YwSUhabFl6TWdjMmx1WjJ4bFUyTmhkSFJsY2l3Z2FXNXZkWFFnZG1Wak15QnRkV3gwYVZOallYUjBaWElnS1NCN0NpTmxiSE5sQ25admFXUWdZMjl0Y0hWMFpVMTFiSFJwYzJOaGRIUmxjbWx1WnlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ6Y0dWamRXeGhja052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCemNHVmpkV3hoY2tZNU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOekxDQnBibTkxZENCMlpXTXpJSE5wYm1kc1pWTmpZWFIwWlhJc0lHbHViM1YwSUhabFl6TWdiWFZzZEdsVFkyRjBkR1Z5SUNrZ2V3b2paVzVrYVdZS0NYWmxZeklnWm1GaUlEMGdSRVpIUVhCd2NtOTRLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEp2ZFdkb2JtVnpjeUFwT3dvSkkybG1aR1ZtSUZWVFJWOUpVa2xFUlZORFJVNURSUW9KQ1habFl6TWdSbklnUFNCdGFYZ29JSE53WldOMWJHRnlRMjlzYjNJc0lHbHlhV1JsYzJObGJtTmxSakFzSUdseWFXUmxjMk5sYm1ObElDazdDZ2tqWld4elpRb0pDWFpsWXpNZ1JuSWdQU0J6Y0dWamRXeGhja052Ykc5eU93b0pJMlZ1WkdsbUNnbDJaV016SUVaemMwVnpjeUE5SUVaeUlDb2dabUZpTG5nZ0t5QnpjR1ZqZFd4aGNrWTVNQ0FxSUdaaFlpNTVPd29KWm14dllYUWdSWE56SUQwZ1ptRmlMbmdnS3lCbVlXSXVlVHNLQ1dac2IyRjBJRVZ0Y3lBOUlERXVNQ0F0SUVWemN6c0tDWFpsWXpNZ1JtRjJaeUE5SUVaeUlDc2dLQ0F4TGpBZ0xTQkdjaUFwSUNvZ01DNHdORGMyTVRrN0NYWmxZek1nUm0xeklEMGdSbk56UlhOeklDb2dSbUYyWnlBdklDZ2dNUzR3SUMwZ1JXMXpJQ29nUm1GMlp5QXBPd29KYzJsdVoyeGxVMk5oZEhSbGNpQXJQU0JHYzNORmMzTTdDZ2x0ZFd4MGFWTmpZWFIwWlhJZ0t6MGdSbTF6SUNvZ1JXMXpPd3A5Q2lOcFppQk9WVTFmVWtWRFZGOUJVa1ZCWDB4SlIwaFVVeUErSURBS0NYWnZhV1FnVWtWZlJHbHlaV04wWDFKbFkzUkJjbVZoWDFCb2VYTnBZMkZzS0NCamIyNXpkQ0JwYmlCU1pXTjBRWEpsWVV4cFoyaDBJSEpsWTNSQmNtVmhUR2xuYUhRc0lHTnZibk4wSUdsdUlIWmxZek1nWjJWdmJXVjBjbmxRYjNOcGRHbHZiaXdnWTI5dWMzUWdhVzRnZG1Wak15Qm5aVzl0WlhSeWVVNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVlpwWlhkRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ1oyVnZiV1YwY25sRGJHVmhjbU52WVhST2IzSnRZV3dzSUdOdmJuTjBJR2x1SUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnYldGMFpYSnBZV3dzSUdsdWIzVjBJRkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUNrZ2V3b0pDWFpsWXpNZ2JtOXliV0ZzSUQwZ1oyVnZiV1YwY25sT2IzSnRZV3c3Q2drSmRtVmpNeUIyYVdWM1JHbHlJRDBnWjJWdmJXVjBjbmxXYVdWM1JHbHlPd29KQ1habFl6TWdjRzl6YVhScGIyNGdQU0JuWlc5dFpYUnllVkJ2YzJsMGFXOXVPd29KQ1habFl6TWdiR2xuYUhSUWIzTWdQU0J5WldOMFFYSmxZVXhwWjJoMExuQnZjMmwwYVc5dU93b0pDWFpsWXpNZ2FHRnNabGRwWkhSb0lEMGdjbVZqZEVGeVpXRk1hV2RvZEM1b1lXeG1WMmxrZEdnN0Nna0pkbVZqTXlCb1lXeG1TR1ZwWjJoMElEMGdjbVZqZEVGeVpXRk1hV2RvZEM1b1lXeG1TR1ZwWjJoME93b0pDWFpsWXpNZ2JHbG5hSFJEYjJ4dmNpQTlJSEpsWTNSQmNtVmhUR2xuYUhRdVkyOXNiM0k3Q2drSlpteHZZWFFnY205MVoyaHVaWE56SUQwZ2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOek93b0pDWFpsWXpNZ2NtVmpkRU52YjNKa2Mxc2dOQ0JkT3dvSkNYSmxZM1JEYjI5eVpITmJJREFnWFNBOUlHeHBaMmgwVUc5eklDc2dhR0ZzWmxkcFpIUm9JQzBnYUdGc1praGxhV2RvZERzSkNYSmxZM1JEYjI5eVpITmJJREVnWFNBOUlHeHBaMmgwVUc5eklDMGdhR0ZzWmxkcFpIUm9JQzBnYUdGc1praGxhV2RvZERzS0NRbHlaV04wUTI5dmNtUnpXeUF5SUYwZ1BTQnNhV2RvZEZCdmN5QXRJR2hoYkdaWGFXUjBhQ0FySUdoaGJHWklaV2xuYUhRN0Nna0pjbVZqZEVOdmIzSmtjMXNnTXlCZElEMGdiR2xuYUhSUWIzTWdLeUJvWVd4bVYybGtkR2dnS3lCb1lXeG1TR1ZwWjJoME93b0pDWFpsWXpJZ2RYWWdQU0JNVkVOZlZYWW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpd2djbTkxWjJodVpYTnpJQ2s3Q2drSmRtVmpOQ0IwTVNBOUlIUmxlSFIxY21VeVJDZ2diSFJqWHpFc0lIVjJJQ2s3Q2drSmRtVmpOQ0IwTWlBOUlIUmxlSFIxY21VeVJDZ2diSFJqWHpJc0lIVjJJQ2s3Q2drSmJXRjBNeUJ0U1c1MklEMGdiV0YwTXlnS0NRa0pkbVZqTXlnZ2RERXVlQ3dnTUN3Z2RERXVlU0FwTEFvSkNRbDJaV016S0NBZ0lDQXdMQ0F4TENBZ0lDQXdJQ2tzQ2drSkNYWmxZek1vSUhReExub3NJREFzSUhReExuY2dLUW9KQ1NrN0Nna0pkbVZqTXlCbWNtVnpibVZzSUQwZ0tDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5SUNvZ2RESXVlQ0FySUNnZ2RtVmpNeWdnTVM0d0lDa2dMU0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUlDa2dLaUIwTWk1NUlDazdDZ2tKY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t6MGdiR2xuYUhSRGIyeHZjaUFxSUdaeVpYTnVaV3dnS2lCTVZFTmZSWFpoYkhWaGRHVW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpd2djRzl6YVhScGIyNHNJRzFKYm5Zc0lISmxZM1JEYjI5eVpITWdLVHNLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUkVhV1ptZFhObElDczlJR3hwWjJoMFEyOXNiM0lnS2lCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLaUJNVkVOZlJYWmhiSFZoZEdVb0lHNXZjbTFoYkN3Z2RtbGxkMFJwY2l3Z2NHOXphWFJwYjI0c0lHMWhkRE1vSURFdU1DQXBMQ0J5WldOMFEyOXZjbVJ6SUNrN0NnbDlDaU5sYm1ScFpncDJiMmxrSUZKRlgwUnBjbVZqZEY5UWFIbHphV05oYkNnZ1kyOXVjM1FnYVc0Z1NXNWphV1JsYm5STWFXZG9kQ0JrYVhKbFkzUk1hV2RvZEN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVkJ2YzJsMGFXOXVMQ0JqYjI1emRDQnBiaUIyWldNeklHZGxiMjFsZEhKNVRtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJR2RsYjIxbGRISjVWbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVVOc1pXRnlZMjloZEU1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnVUdoNWMybGpZV3hOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiQ3dnYVc1dmRYUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1NCN0NnbG1iRzloZENCa2IzUk9UQ0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JR2RsYjIxbGRISjVUbTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1NBcE93b0pkbVZqTXlCcGNuSmhaR2xoYm1ObElEMGdaRzkwVGt3Z0tpQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlpteHZZWFFnWkc5MFRreGpZeUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JR2RsYjIxbGRISjVRMnhsWVhKamIyRjBUbTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1NBcE93b0pDWFpsWXpNZ1kyTkpjbkpoWkdsaGJtTmxJRDBnWkc5MFRreGpZeUFxSUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSkNXTnNaV0Z5WTI5aGRGTndaV04xYkdGeUlDczlJR05qU1hKeVlXUnBZVzVqWlNBcUlFSlNSRVpmUjBkWVgwTnNaV0Z5WTI5aGRDZ2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1TENCblpXOXRaWFJ5ZVZacFpYZEVhWElzSUdkbGIyMWxkSEo1UTJ4bFlYSmpiMkYwVG05eWJXRnNMQ0J0WVhSbGNtbGhiQ0FwT3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgxTklSVVZPQ2drSmMyaGxaVzVUY0dWamRXeGhjaUFyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5VGFHVmxiaWdnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUxDQm5aVzl0WlhSeWVWWnBaWGRFYVhJc0lHZGxiMjFsZEhKNVRtOXliV0ZzTENCdFlYUmxjbWxoYkM1emFHVmxia052Ykc5eUxDQnRZWFJsY21saGJDNXphR1ZsYmxKdmRXZG9ibVZ6Y3lBcE93b0pJMlZ1WkdsbUNnbHlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JUY0dWamRXeGhjaUFyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5SFIxZ29JR1JwY21WamRFeHBaMmgwTG1ScGNtVmpkR2x2Yml3Z1oyVnZiV1YwY25sV2FXVjNSR2x5TENCblpXOXRaWFJ5ZVU1dmNtMWhiQ3dnYldGMFpYSnBZV3dnS1RzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLZG05cFpDQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZVR2g1YzJsallXd29JR052Ym5OMElHbHVJSFpsWXpNZ2FYSnlZV1JwWVc1alpTd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVZCdmMybDBhVzl1TENCamIyNXpkQ0JwYmlCMlpXTXpJR2RsYjIxbGRISjVUbTl5YldGc0xDQmpiMjV6ZENCcGJpQjJaV016SUdkbGIyMWxkSEo1Vm1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15Qm5aVzl0WlhSeWVVTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z1VHaDVjMmxqWVd4TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NuMEtkbTlwWkNCU1JWOUpibVJwY21WamRGTndaV04xYkdGeVgxQm9lWE5wWTJGc0tDQmpiMjV6ZENCcGJpQjJaV016SUhKaFpHbGhibU5sTENCamIyNXpkQ0JwYmlCMlpXTXpJR2x5Y21Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUhabFl6TWdZMnhsWVhKamIyRjBVbUZrYVdGdVkyVXNJR052Ym5OMElHbHVJSFpsWXpNZ1oyVnZiV1YwY25sUWIzTnBkR2x2Yml3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJuWlc5dFpYUnllVTV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCblpXOXRaWFJ5ZVZacFpYZEVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdaMlZ2YldWMGNubERiR1ZoY21OdllYUk9iM0p0WVd3c0lHTnZibk4wSUdsdUlGQm9lWE5wWTJGc1RXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3c0lHbHViM1YwSUZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMEtTQjdDZ2tqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSkNXTnNaV0Z5WTI5aGRGTndaV04xYkdGeUlDczlJR05zWldGeVkyOWhkRkpoWkdsaGJtTmxJQ29nUlc1MmFYSnZibTFsYm5SQ1VrUkdLQ0JuWlc5dFpYUnllVU5zWldGeVkyOWhkRTV2Y20xaGJDd2daMlZ2YldWMGNubFdhV1YzUkdseUxDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdNQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmprd0xDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdLVHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUZ29KQ1hOb1pXVnVVM0JsWTNWc1lYSWdLejBnYVhKeVlXUnBZVzVqWlNBcUlHMWhkR1Z5YVdGc0xuTm9aV1Z1UTI5c2IzSWdLaUJKUWt4VGFHVmxia0pTUkVZb0lHZGxiMjFsZEhKNVRtOXliV0ZzTENCblpXOXRaWFJ5ZVZacFpYZEVhWElzSUcxaGRHVnlhV0ZzTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLQ1habFl6TWdjMmx1WjJ4bFUyTmhkSFJsY21sdVp5QTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpNeUJ0ZFd4MGFWTmpZWFIwWlhKcGJtY2dQU0IyWldNektDQXdMakFnS1RzS0NYWmxZek1nWTI5emFXNWxWMlZwWjJoMFpXUkpjbkpoWkdsaGJtTmxJRDBnYVhKeVlXUnBZVzVqWlNBcUlGSkZRMGxRVWs5RFFVeGZVRWs3Q2dramFXWmtaV1lnVlZORlgwbFNTVVJGVTBORlRrTkZDZ2tKWTI5dGNIVjBaVTExYkhScGMyTmhkSFJsY21sdVowbHlhV1JsYzJObGJtTmxLQ0JuWlc5dFpYUnllVTV2Y20xaGJDd2daMlZ2YldWMGNubFdhV1YzUkdseUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5TENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tZNU1Dd2diV0YwWlhKcFlXd3VhWEpwWkdWelkyVnVZMlVzSUcxaGRHVnlhV0ZzTG1seWFXUmxjMk5sYm1ObFJuSmxjMjVsYkN3Z2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOekxDQnphVzVuYkdWVFkyRjBkR1Z5YVc1bkxDQnRkV3gwYVZOallYUjBaWEpwYm1jZ0tUc0tDU05sYkhObENna0pZMjl0Y0hWMFpVMTFiSFJwYzJOaGRIUmxjbWx1WnlnZ1oyVnZiV1YwY25sT2IzSnRZV3dzSUdkbGIyMWxkSEo1Vm1sbGQwUnBjaXdnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFzSUcxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3l3Z2MybHVaMnhsVTJOaGRIUmxjbWx1Wnl3Z2JYVnNkR2xUWTJGMGRHVnlhVzVuSUNrN0Nna2paVzVrYVdZS0NYWmxZek1nZEc5MFlXeFRZMkYwZEdWeWFXNW5JRDBnYzJsdVoyeGxVMk5oZEhSbGNtbHVaeUFySUcxMWJIUnBVMk5oZEhSbGNtbHVaenNLQ1habFl6TWdaR2xtWm5WelpTQTlJRzFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBcUlDZ2dNUzR3SUMwZ2JXRjRLQ0J0WVhnb0lIUnZkR0ZzVTJOaGRIUmxjbWx1Wnk1eUxDQjBiM1JoYkZOallYUjBaWEpwYm1jdVp5QXBMQ0IwYjNSaGJGTmpZWFIwWlhKcGJtY3VZaUFwSUNrN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzOUlISmhaR2xoYm1ObElDb2djMmx1WjJ4bFUyTmhkSFJsY21sdVp6c0tDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t6MGdiWFZzZEdsVFkyRjBkR1Z5YVc1bklDb2dZMjl6YVc1bFYyVnBaMmgwWldSSmNuSmhaR2xoYm1ObE93b0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzOUlHUnBabVoxYzJVZ0tpQmpiM05wYm1WWFpXbG5hSFJsWkVseWNtRmthV0Z1WTJVN0NuMEtJMlJsWm1sdVpTQlNSVjlFYVhKbFkzUUpDUWtKVWtWZlJHbHlaV04wWDFCb2VYTnBZMkZzQ2lOa1pXWnBibVVnVWtWZlJHbHlaV04wWDFKbFkzUkJjbVZoQ1FsU1JWOUVhWEpsWTNSZlVtVmpkRUZ5WldGZlVHaDVjMmxqWVd3S0kyUmxabWx1WlNCU1JWOUpibVJwY21WamRFUnBabVoxYzJVSkNWSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOVFhSGx6YVdOaGJBb2paR1ZtYVc1bElGSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSUpDVkpGWDBsdVpHbHlaV04wVTNCbFkzVnNZWEpmVUdoNWMybGpZV3dLWm14dllYUWdZMjl0Y0hWMFpWTndaV04xYkdGeVQyTmpiSFZ6YVc5dUtDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUk9WaXdnWTI5dWMzUWdhVzRnWm14dllYUWdZVzFpYVdWdWRFOWpZMngxYzJsdmJpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KY21WMGRYSnVJSE5oZEhWeVlYUmxLQ0J3YjNjb0lHUnZkRTVXSUNzZ1lXMWlhV1Z1ZEU5alkyeDFjMmx2Yml3Z1pYaHdNaWdnTFNBeE5pNHdJQ29nY205MVoyaHVaWE56SUMwZ01TNHdJQ2tnS1NBdElERXVNQ0FySUdGdFltbGxiblJQWTJOc2RYTnBiMjRnS1RzS2ZXQXNJRk50SUQwZ1lBcDJaV016SUdkbGIyMWxkSEo1VUc5emFYUnBiMjRnUFNBdElIWldhV1YzVUc5emFYUnBiMjQ3Q25abFl6TWdaMlZ2YldWMGNubE9iM0p0WVd3Z1BTQnViM0p0WVd3N0NuWmxZek1nWjJWdmJXVjBjbmxXYVdWM1JHbHlJRDBnS0NCcGMwOXlkR2h2WjNKaGNHaHBZeUFwSUQ4Z2RtVmpNeWdnTUN3Z01Dd2dNU0FwSURvZ2JtOXliV0ZzYVhwbEtDQjJWbWxsZDFCdmMybDBhVzl1SUNrN0NuWmxZek1nWjJWdmJXVjBjbmxEYkdWaGNtTnZZWFJPYjNKdFlXdzdDaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2dsblpXOXRaWFJ5ZVVOc1pXRnlZMjloZEU1dmNtMWhiQ0E5SUdOc1pXRnlZMjloZEU1dmNtMWhiRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmU1ZKSlJFVlRRMFZPUTBVS0NXWnNiMkYwSUdSdmRFNVdhU0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2daMlZ2YldWMGNubFdhV1YzUkdseUlDa2dLVHNLQ1dsbUlDZ2diV0YwWlhKcFlXd3VhWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM01nUFQwZ01DNHdJQ2tnZXdvSkNXMWhkR1Z5YVdGc0xtbHlhV1JsYzJObGJtTmxJRDBnTUM0d093b0pmU0JsYkhObElIc0tDUWx0WVhSbGNtbGhiQzVwY21sa1pYTmpaVzVqWlNBOUlITmhkSFZ5WVhSbEtDQnRZWFJsY21saGJDNXBjbWxrWlhOalpXNWpaU0FwT3dvSmZRb0phV1lnS0NCdFlYUmxjbWxoYkM1cGNtbGtaWE5qWlc1alpTQStJREF1TUNBcElIc0tDUWx0WVhSbGNtbGhiQzVwY21sa1pYTmpaVzVqWlVaeVpYTnVaV3dnUFNCbGRtRnNTWEpwWkdWelkyVnVZMlVvSURFdU1Dd2diV0YwWlhKcFlXd3VhWEpwWkdWelkyVnVZMlZKVDFJc0lHUnZkRTVXYVN3Z2JXRjBaWEpwWVd3dWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTXNJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJZ0tUc0tDUWx0WVhSbGNtbGhiQzVwY21sa1pYTmpaVzVqWlVZd0lEMGdVMk5vYkdsamExOTBiMTlHTUNnZ2JXRjBaWEpwWVd3dWFYSnBaR1Z6WTJWdVkyVkdjbVZ6Ym1Wc0xDQXhMakFzSUdSdmRFNVdhU0FwT3dvSmZRb2paVzVrYVdZS1NXNWphV1JsYm5STWFXZG9kQ0JrYVhKbFkzUk1hV2RvZERzS0kybG1JQ2dnVGxWTlgxQlBTVTVVWDB4SlIwaFVVeUErSURBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5RWFYSmxZM1FnS1FvSlVHOXBiblJNYVdkb2RDQndiMmx1ZEV4cFoyaDBPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDVkJ2YVc1MFRHbG5hSFJUYUdGa2IzY2djRzlwYm5STWFXZG9kRk5vWVdSdmR6c0tDU05sYm1ScFpnb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVGxWTlgxQlBTVTVVWDB4SlIwaFVVenNnYVNBckt5QXBJSHNLQ1Fsd2IybHVkRXhwWjJoMElEMGdjRzlwYm5STWFXZG9kSE5iSUdrZ1hUc0tDUWxuWlhSUWIybHVkRXhwWjJoMFNXNW1ieWdnY0c5cGJuUk1hV2RvZEN3Z1oyVnZiV1YwY25sUWIzTnBkR2x2Yml3Z1pHbHlaV04wVEdsbmFIUWdLVHNLQ1FramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElDWW1JQ2dnVlU1U1QweE1SVVJmVEU5UFVGOUpUa1JGV0NBOElFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUNrS0NRbHdiMmx1ZEV4cFoyaDBVMmhoWkc5M0lEMGdjRzlwYm5STWFXZG9kRk5vWVdSdmQzTmJJR2tnWFRzS0NRbGthWEpsWTNSTWFXZG9kQzVqYjJ4dmNpQXFQU0FvSUdScGNtVmpkRXhwWjJoMExuWnBjMmxpYkdVZ0ppWWdjbVZqWldsMlpWTm9ZV1J2ZHlBcElEOGdaMlYwVUc5cGJuUlRhR0ZrYjNjb0lIQnZhVzUwVTJoaFpHOTNUV0Z3V3lCcElGMHNJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1RXRndVMmw2WlN3Z2NHOXBiblJNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RDYVdGekxDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDFKaFpHbDFjeXdnZGxCdmFXNTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTd2djRzlwYm5STWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkRFlXMWxjbUZPWldGeUxDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDBOaGJXVnlZVVpoY2lBcElEb2dNUzR3T3dvSkNTTmxibVJwWmdvSkNWSkZYMFJwY21WamRDZ2daR2x5WldOMFRHbG5hSFFzSUdkbGIyMWxkSEo1VUc5emFYUnBiMjRzSUdkbGIyMWxkSEo1VG05eWJXRnNMQ0JuWlc5dFpYUnllVlpwWlhkRWFYSXNJR2RsYjIxbGRISjVRMnhsWVhKamIyRjBUbTl5YldGc0xDQnRZWFJsY21saGJDd2djbVZtYkdWamRHVmtUR2xuYUhRZ0tUc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFpnb2phV1lnS0NCT1ZVMWZVMUJQVkY5TVNVZElWRk1nUGlBd0lDa2dKaVlnWkdWbWFXNWxaQ2dnVWtWZlJHbHlaV04wSUNrS0NWTndiM1JNYVdkb2RDQnpjRzkwVEdsbmFIUTdDZ2wyWldNMElITndiM1JEYjJ4dmNqc0tDWFpsWXpNZ2MzQnZkRXhwWjJoMFEyOXZjbVE3Q2dsaWIyOXNJR2x1VTNCdmRFeHBaMmgwVFdGd093b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSlUzQnZkRXhwWjJoMFUyaGhaRzkzSUhOd2IzUk1hV2RvZEZOb1lXUnZkenNLQ1NObGJtUnBaZ29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMU5RVDFSZlRFbEhTRlJUT3lCcElDc3JJQ2tnZXdvSkNYTndiM1JNYVdkb2RDQTlJSE53YjNSTWFXZG9kSE5iSUdrZ1hUc0tDUWxuWlhSVGNHOTBUR2xuYUhSSmJtWnZLQ0J6Y0c5MFRHbG5hSFFzSUdkbGIyMWxkSEo1VUc5emFYUnBiMjRzSUdScGNtVmpkRXhwWjJoMElDazdDZ2tKSTJsbUlDZ2dWVTVTVDB4TVJVUmZURTlQVUY5SlRrUkZXQ0E4SUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTmZWMGxVU0Y5TlFWQlRJQ2tLQ1FralpHVm1hVzVsSUZOUVQxUmZURWxIU0ZSZlRVRlFYMGxPUkVWWUlGVk9VazlNVEVWRVgweFBUMUJmU1U1RVJWZ0tDUWtqWld4cFppQW9JRlZPVWs5TVRFVkVYMHhQVDFCZlNVNUVSVmdnUENCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJQ2tLQ1FralpHVm1hVzVsSUZOUVQxUmZURWxIU0ZSZlRVRlFYMGxPUkVWWUlFNVZUVjlUVUU5VVgweEpSMGhVWDAxQlVGTUtDUWtqWld4elpRb0pDU05rWldacGJtVWdVMUJQVkY5TVNVZElWRjlOUVZCZlNVNUVSVmdnS0NCVlRsSlBURXhGUkY5TVQwOVFYMGxPUkVWWUlDMGdUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlBcklFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU5mVjBsVVNGOU5RVkJUSUNrS0NRa2paVzVrYVdZS0NRa2phV1lnS0NCVFVFOVVYMHhKUjBoVVgwMUJVRjlKVGtSRldDQThJRTVWVFY5VFVFOVVYMHhKUjBoVVgwMUJVRk1nS1FvSkNRbHpjRzkwVEdsbmFIUkRiMjl5WkNBOUlIWlRjRzkwVEdsbmFIUkRiMjl5WkZzZ2FTQmRMbmg1ZWlBdklIWlRjRzkwVEdsbmFIUkRiMjl5WkZzZ2FTQmRMbmM3Q2drSkNXbHVVM0J2ZEV4cFoyaDBUV0Z3SUQwZ1lXeHNLQ0JzWlhOelZHaGhiaWdnWVdKektDQnpjRzkwVEdsbmFIUkRiMjl5WkNBcUlESXVJQzBnTVM0Z0tTd2dkbVZqTXlnZ01TNHdJQ2tnS1NBcE93b0pDUWx6Y0c5MFEyOXNiM0lnUFNCMFpYaDBkWEpsTWtRb0lITndiM1JNYVdkb2RFMWhjRnNnVTFCUFZGOU1TVWRJVkY5TlFWQmZTVTVFUlZnZ1hTd2djM0J2ZEV4cFoyaDBRMjl2Y21RdWVIa2dLVHNLQ1FrSlpHbHlaV04wVEdsbmFIUXVZMjlzYjNJZ1BTQnBibE53YjNSTWFXZG9kRTFoY0NBL0lHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eUlDb2djM0J2ZEVOdmJHOXlMbkpuWWlBNklHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pDU05sYm1ScFpnb0pDU04xYm1SbFppQlRVRTlVWDB4SlIwaFVYMDFCVUY5SlRrUkZXQW9KQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVTBoQlJFOVhUVUZRSUNrZ0ppWWdLQ0JWVGxKUFRFeEZSRjlNVDA5UVgwbE9SRVZZSUR3Z1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUFwQ2drSmMzQnZkRXhwWjJoMFUyaGhaRzkzSUQwZ2MzQnZkRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRPd29KQ1dScGNtVmpkRXhwWjJoMExtTnZiRzl5SUNvOUlDZ2daR2x5WldOMFRHbG5hSFF1ZG1semFXSnNaU0FtSmlCeVpXTmxhWFpsVTJoaFpHOTNJQ2tnUHlCblpYUlRhR0ZrYjNjb0lITndiM1JUYUdGa2IzZE5ZWEJiSUdrZ1hTd2djM0J2ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDAxaGNGTnBlbVVzSUhOd2IzUk1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZENhV0Z6TENCemNHOTBUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNVbUZrYVhWekxDQjJVM0J2ZEV4cFoyaDBRMjl2Y21SYklHa2dYU0FwSURvZ01TNHdPd29KQ1NObGJtUnBaZ29KQ1ZKRlgwUnBjbVZqZENnZ1pHbHlaV04wVEdsbmFIUXNJR2RsYjIxbGRISjVVRzl6YVhScGIyNHNJR2RsYjIxbGRISjVUbTl5YldGc0xDQm5aVzl0WlhSeWVWWnBaWGRFYVhJc0lHZGxiMjFsZEhKNVEyeGxZWEpqYjJGMFRtOXliV0ZzTENCdFlYUmxjbWxoYkN3Z2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1RzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdLQ0JPVlUxZlJFbFNYMHhKUjBoVVV5QStJREFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlFYVhKbFkzUWdLUW9KUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0NnbEVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzYzdDZ2tqWlc1a2FXWUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOUVTVkpmVEVsSFNGUlRPeUJwSUNzcklDa2dld29KQ1dScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnUFNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwYzFzZ2FTQmRPd29KQ1dkbGRFUnBjbVZqZEdsdmJtRnNUR2xuYUhSSmJtWnZLQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMQ0JrYVhKbFkzUk1hV2RvZENBcE93b0pDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ0tDQlZUbEpQVEV4RlJGOU1UMDlRWDBsT1JFVllJRHdnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElDa0tDUWxrYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lEMGdaR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYVHNLQ1Fsa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2lBcVBTQW9JR1JwY21WamRFeHBaMmgwTG5acGMybGliR1VnSmlZZ2NtVmpaV2wyWlZOb1lXUnZkeUFwSUQ4Z1oyVjBVMmhoWkc5M0tDQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRnNnYVNCZExDQmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzUW1saGN5d2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RTWVdScGRYTXNJSFpFYVhKbFkzUnBiMjVoYkZOb1lXUnZkME52YjNKa1d5QnBJRjBnS1NBNklERXVNRHNLQ1FralpXNWthV1lLQ1FsU1JWOUVhWEpsWTNRb0lHUnBjbVZqZEV4cFoyaDBMQ0JuWlc5dFpYUnllVkJ2YzJsMGFXOXVMQ0JuWlc5dFpYUnllVTV2Y20xaGJDd2daMlZ2YldWMGNubFdhV1YzUkdseUxDQm5aVzl0WlhSeWVVTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z2JXRjBaWEpwWVd3c0lISmxabXhsWTNSbFpFeHBaMmgwSUNrN0NnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb2paVzVrYVdZS0kybG1JQ2dnVGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNZ1BpQXdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1VrVmZSR2x5WldOMFgxSmxZM1JCY21WaElDa0tDVkpsWTNSQmNtVmhUR2xuYUhRZ2NtVmpkRUZ5WldGTWFXZG9kRHNLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlTUlVOVVgwRlNSVUZmVEVsSFNGUlRPeUJwSUNzcklDa2dld29KQ1hKbFkzUkJjbVZoVEdsbmFIUWdQU0J5WldOMFFYSmxZVXhwWjJoMGMxc2dhU0JkT3dvSkNWSkZYMFJwY21WamRGOVNaV04wUVhKbFlTZ2djbVZqZEVGeVpXRk1hV2RvZEN3Z1oyVnZiV1YwY25sUWIzTnBkR2x2Yml3Z1oyVnZiV1YwY25sT2IzSnRZV3dzSUdkbGIyMWxkSEo1Vm1sbGQwUnBjaXdnWjJWdmJXVjBjbmxEYkdWaGNtTnZZWFJPYjNKdFlXd3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLSTJWdVpHbG1DaU5wWmlCa1pXWnBibVZrS0NCU1JWOUpibVJwY21WamRFUnBabVoxYzJVZ0tRb0pkbVZqTXlCcFlteEpjbkpoWkdsaGJtTmxJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV016SUdseWNtRmthV0Z1WTJVZ1BTQm5aWFJCYldKcFpXNTBUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQmhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNpQXBPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlNU1VkSVZGOVFVazlDUlZNZ0tRb0pDV2x5Y21Ga2FXRnVZMlVnS3owZ1oyVjBUR2xuYUhSUWNtOWlaVWx5Y21Ga2FXRnVZMlVvSUd4cFoyaDBVSEp2WW1Vc0lHZGxiMjFsZEhKNVRtOXliV0ZzSUNrN0Nna2paVzVrYVdZS0NTTnBaaUFvSUU1VlRWOUlSVTFKWDB4SlIwaFVVeUErSURBZ0tRb0pDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDUWxtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZTRVZOU1Y5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSkNXbHljbUZrYVdGdVkyVWdLejBnWjJWMFNHVnRhWE53YUdWeVpVeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ2FHVnRhWE53YUdWeVpVeHBaMmgwYzFzZ2FTQmRMQ0JuWlc5dFpYUnllVTV2Y20xaGJDQXBPd29KQ1gwS0NRa2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkkyVnVaR2xtQ2lObGJtUnBaZ29qYVdZZ1pHVm1hVzVsWkNnZ1VrVmZTVzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXBDZ2wyWldNeklISmhaR2xoYm1ObElEMGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlpXTXpJR05zWldGeVkyOWhkRkpoWkdsaGJtTmxJRDBnZG1Wak15Z2dNQzR3SUNrN0NpTmxibVJwWm1Bc0lHSnRJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVWdLUW9KSTJsbVpHVm1JRlZUUlY5TVNVZElWRTFCVUFvSkNYWmxZelFnYkdsbmFIUk5ZWEJVWlhobGJDQTlJSFJsZUhSMWNtVXlSQ2dnYkdsbmFIUk5ZWEFzSUhaTWFXZG9kRTFoY0ZWMklDazdDZ2tKZG1Wak15QnNhV2RvZEUxaGNFbHljbUZrYVdGdVkyVWdQU0JzYVdkb2RFMWhjRlJsZUdWc0xuSm5ZaUFxSUd4cFoyaDBUV0Z3U1c1MFpXNXphWFI1T3dvSkNXbHljbUZrYVdGdVkyVWdLejBnYkdsbmFIUk5ZWEJKY25KaFpHbGhibU5sT3dvSkkyVnVaR2xtQ2dramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBWT1ZrMUJVQ0FwSUNZbUlHUmxabWx1WldRb0lGTlVRVTVFUVZKRUlDa2dKaVlnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENna0phV0pzU1hKeVlXUnBZVzVqWlNBclBTQm5aWFJKUWt4SmNuSmhaR2xoYm1ObEtDQm5aVzl0WlhSeWVVNXZjbTFoYkNBcE93b0pJMlZ1WkdsbUNpTmxibVJwWmdvamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBWT1ZrMUJVQ0FwSUNZbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSWdLUW9KSTJsbVpHVm1JRlZUUlY5QlRrbFRUMVJTVDFCWkNna0pjbUZrYVdGdVkyVWdLejBnWjJWMFNVSk1RVzVwYzI5MGNtOXdlVkpoWkdsaGJtTmxLQ0JuWlc5dFpYUnllVlpwWlhkRWFYSXNJR2RsYjIxbGRISjVUbTl5YldGc0xDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTXNJRzFoZEdWeWFXRnNMbUZ1YVhOdmRISnZjSGxDTENCdFlYUmxjbWxoYkM1aGJtbHpiM1J5YjNCNUlDazdDZ2tqWld4elpRb0pDWEpoWkdsaGJtTmxJQ3M5SUdkbGRFbENURkpoWkdsaGJtTmxLQ0JuWlc5dFpYUnllVlpwWlhkRWFYSXNJR2RsYjIxbGRISjVUbTl5YldGc0xDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTWdLVHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NRbGpiR1ZoY21OdllYUlNZV1JwWVc1alpTQXJQU0JuWlhSSlFreFNZV1JwWVc1alpTZ2daMlZ2YldWMGNubFdhV1YzUkdseUxDQm5aVzl0WlhSeWVVTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dSVzBnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaU0FwQ2dsU1JWOUpibVJwY21WamRFUnBabVoxYzJVb0lHbHljbUZrYVdGdVkyVXNJR2RsYjIxbGRISjVVRzl6YVhScGIyNHNJR2RsYjIxbGRISjVUbTl5YldGc0xDQm5aVzl0WlhSeWVWWnBaWGRFYVhJc0lHZGxiMjFsZEhKNVEyeGxZWEpqYjJGMFRtOXliV0ZzTENCdFlYUmxjbWxoYkN3Z2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1RzS0kyVnVaR2xtQ2lOcFppQmtaV1pwYm1Wa0tDQlNSVjlKYm1ScGNtVmpkRk53WldOMWJHRnlJQ2tLQ1ZKRlgwbHVaR2x5WldOMFUzQmxZM1ZzWVhJb0lISmhaR2xoYm1ObExDQnBZbXhKY25KaFpHbGhibU5sTENCamJHVmhjbU52WVhSU1lXUnBZVzVqWlN3Z1oyVnZiV1YwY25sUWIzTnBkR2x2Yml3Z1oyVnZiV1YwY25sT2IzSnRZV3dzSUdkbGIyMWxkSEo1Vm1sbGQwUnBjaXdnWjJWdmJXVjBjbmxEYkdWaGNtTnZZWFJPYjNKdFlXd3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29qWlc1a2FXWmdMQ0JVYlNBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgweFBSMFJGVUZSSVFsVkdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhQUjBSRlVGUklRbFZHWDBWWVZDQXBDZ2xuYkY5R2NtRm5SR1Z3ZEdoRldGUWdQU0IyU1hOUVpYSnpjR1ZqZEdsMlpTQTlQU0F3TGpBZ1B5Qm5iRjlHY21GblEyOXZjbVF1ZWlBNklHeHZaeklvSUhaR2NtRm5SR1Z3ZEdnZ0tTQXFJR3h2WjBSbGNIUm9RblZtUmtNZ0tpQXdMalU3Q2lObGJtUnBabUFzSUhkdElEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZURTlIUkVWUVZFaENWVVlnS1NBbUppQmtaV1pwYm1Wa0tDQlZVMFZmVEU5SFJFVlFWRWhDVlVaZlJWaFVJQ2tLQ1hWdWFXWnZjbTBnWm14dllYUWdiRzluUkdWd2RHaENkV1pHUXpzS0NYWmhjbmxwYm1jZ1pteHZZWFFnZGtaeVlXZEVaWEIwYURzS0NYWmhjbmxwYm1jZ1pteHZZWFFnZGtselVHVnljM0JsWTNScGRtVTdDaU5sYm1ScFptQXNJRUZ0SUQwZ1lDTnBabVJsWmlCVlUwVmZURTlIUkVWUVZFaENWVVlLQ1NOcFptUmxaaUJWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVQ2drSmRtRnllV2x1WnlCbWJHOWhkQ0IyUm5KaFowUmxjSFJvT3dvSkNYWmhjbmxwYm1jZ1pteHZZWFFnZGtselVHVnljM0JsWTNScGRtVTdDZ2tqWld4elpRb0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JHOW5SR1Z3ZEdoQ2RXWkdRenNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JTYlNBOUlHQWphV1prWldZZ1ZWTkZYMHhQUjBSRlVGUklRbFZHQ2dramFXWmtaV1lnVlZORlgweFBSMFJGVUZSSVFsVkdYMFZZVkFvSkNYWkdjbUZuUkdWd2RHZ2dQU0F4TGpBZ0t5Qm5iRjlRYjNOcGRHbHZiaTUzT3dvSkNYWkpjMUJsY25Od1pXTjBhWFpsSUQwZ1pteHZZWFFvSUdselVHVnljM0JsWTNScGRtVk5ZWFJ5YVhnb0lIQnliMnBsWTNScGIyNU5ZWFJ5YVhnZ0tTQXBPd29KSTJWc2MyVUtDUWxwWmlBb0lHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLU0FwSUhzS0NRa0paMnhmVUc5emFYUnBiMjR1ZWlBOUlHeHZaeklvSUcxaGVDZ2dSVkJUU1V4UFRpd2daMnhmVUc5emFYUnBiMjR1ZHlBcklERXVNQ0FwSUNrZ0tpQnNiMmRFWlhCMGFFSjFaa1pESUMwZ01TNHdPd29KQ1FsbmJGOVFiM05wZEdsdmJpNTZJQ285SUdkc1gxQnZjMmwwYVc5dUxuYzdDZ2tKZlFvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUVOdElEMGdZQ05wWm1SbFppQlZVMFZmVFVGUUNnbDJaV00wSUhOaGJYQnNaV1JFYVdabWRYTmxRMjlzYjNJZ1BTQjBaWGgwZFhKbE1rUW9JRzFoY0N3Z2RrMWhjRlYySUNrN0Nna2phV1prWldZZ1JFVkRUMFJGWDFaSlJFVlBYMVJGV0ZSVlVrVUtDUWx6WVcxd2JHVmtSR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnYldsNEtDQndiM2NvSUhOaGJYQnNaV1JFYVdabWRYTmxRMjlzYjNJdWNtZGlJQ29nTUM0NU5EYzROamN5T1RnMklDc2dkbVZqTXlnZ01DNHdOVEl4TXpJM01ERTBJQ2tzSUhabFl6TW9JREl1TkNBcElDa3NJSE5oYlhCc1pXUkVhV1ptZFhObFEyOXNiM0l1Y21kaUlDb2dNQzR3Tnpjek9Ua3pPREE0TENCMlpXTXpLQ0JzWlhOelZHaGhia1Z4ZFdGc0tDQnpZVzF3YkdWa1JHbG1ablZ6WlVOdmJHOXlMbkpuWWl3Z2RtVmpNeWdnTUM0d05EQTBOU0FwSUNrZ0tTQXBMQ0J6WVcxd2JHVmtSR2xtWm5WelpVTnZiRzl5TG5jZ0tUc0tDUW9KSTJWdVpHbG1DZ2xrYVdabWRYTmxRMjlzYjNJZ0tqMGdjMkZ0Y0d4bFpFUnBabVoxYzJWRGIyeHZjanNLSTJWdVpHbG1ZQ3dnVUcwZ1BTQmdJMmxtWkdWbUlGVlRSVjlOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHMWhjRHNLSTJWdVpHbG1ZQ3dnVEcwZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOU5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUVV4UVNFRk5RVkFnS1FvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5UVQwbE9WRk5mVlZZZ0tRb0pDWFpsWXpJZ2RYWWdQU0IyVlhZN0Nna2paV3h6WlFvSkNYWmxZeklnZFhZZ1BTQW9JSFYyVkhKaGJuTm1iM0p0SUNvZ2RtVmpNeWdnWjJ4ZlVHOXBiblJEYjI5eVpDNTRMQ0F4TGpBZ0xTQm5iRjlRYjJsdWRFTnZiM0prTG5rc0lERWdLU0FwTG5oNU93b0pJMlZ1WkdsbUNpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwMUJVQW9KWkdsbVpuVnpaVU52Ykc5eUlDbzlJSFJsZUhSMWNtVXlSQ2dnYldGd0xDQjFkaUFwT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5QlRGQklRVTFCVUFvSlpHbG1ablZ6WlVOdmJHOXlMbUVnS2owZ2RHVjRkSFZ5WlRKRUtDQmhiSEJvWVUxaGNDd2dkWFlnS1M1bk93b2paVzVrYVdaZ0xDQkpiU0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDFCUFNVNVVVMTlWVmlBcENnbDJZWEo1YVc1bklIWmxZeklnZGxWMk93b2paV3h6WlFvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5TlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVXhRU0VGTlFWQWdLUW9KQ1hWdWFXWnZjbTBnYldGME15QjFkbFJ5WVc1elptOXliVHNLQ1NObGJtUnBaZ29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHMWhjRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUVV4UVNFRk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdGc2NHaGhUV0Z3T3dvalpXNWthV1pnTENCVmJTQTlJR0JtYkc5aGRDQnRaWFJoYkc1bGMzTkdZV04wYjNJZ1BTQnRaWFJoYkc1bGMzTTdDaU5wWm1SbFppQlZVMFZmVFVWVVFVeE9SVk5UVFVGUUNnbDJaV00wSUhSbGVHVnNUV1YwWVd4dVpYTnpJRDBnZEdWNGRIVnlaVEpFS0NCdFpYUmhiRzVsYzNOTllYQXNJSFpOWlhSaGJHNWxjM05OWVhCVmRpQXBPd29KYldWMFlXeHVaWE56Um1GamRHOXlJQ285SUhSbGVHVnNUV1YwWVd4dVpYTnpMbUk3Q2lObGJtUnBabUFzSUVSdElEMGdZQ05wWm1SbFppQlZVMFZmVFVWVVFVeE9SVk5UVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnRaWFJoYkc1bGMzTk5ZWEE3Q2lObGJtUnBabUFzSUU1dElEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZUVTlTVUVoRFQweFBVbE1nS1NBbUppQmtaV1pwYm1Wa0tDQk5UMUpRU0ZSQlVrZEZWRk5mVkVWWVZGVlNSU0FwQ2dsMlEyOXNiM0lnS2owZ2JXOXljR2hVWVhKblpYUkNZWE5sU1c1bWJIVmxibU5sT3dvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUVTlTVUVoVVFWSkhSVlJUWDBOUFZVNVVPeUJwSUNzcklDa2dld29KQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSmZRVXhRU0VFZ0tRb0pDUWxwWmlBb0lHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZElDRTlJREF1TUNBcElIWkRiMnh2Y2lBclBTQm5aWFJOYjNKd2FDZ2daMnhmVm1WeWRHVjRTVVFzSUdrc0lESWdLU0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dhU0JkT3dvSkNTTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcENna0pDV2xtSUNnZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUJwSUYwZ0lUMGdNQzR3SUNrZ2RrTnZiRzl5SUNzOUlHZGxkRTF2Y25Cb0tDQm5iRjlXWlhKMFpYaEpSQ3dnYVN3Z01pQXBMbkpuWWlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZE93b0pDU05sYm1ScFpnb0pmUW9qWlc1a2FXWmdMQ0JQYlNBOUlHQWphV1prWldZZ1ZWTkZYMDFQVWxCSVRrOVNUVUZNVXdvSmIySnFaV04wVG05eWJXRnNJQ285SUcxdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaVHNLQ1NOcFptUmxaaUJOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlFvSkNXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTFQVWxCSVZFRlNSMFZVVTE5RFQxVk9WRHNnYVNBckt5QXBJSHNLQ1FrSmFXWWdLQ0J0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYU0FoUFNBd0xqQWdLU0J2WW1wbFkzUk9iM0p0WVd3Z0t6MGdaMlYwVFc5eWNHZ29JR2RzWDFabGNuUmxlRWxFTENCcExDQXhJQ2t1ZUhsNklDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCcElGMDdDZ2tKZlFvSkkyVnNjMlVLQ1FsdlltcGxZM1JPYjNKdFlXd2dLejBnYlc5eWNHaE9iM0p0WVd3d0lDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBd0lGMDdDZ2tKYjJKcVpXTjBUbTl5YldGc0lDczlJRzF2Y25Cb1RtOXliV0ZzTVNBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTVNCZE93b0pDVzlpYW1WamRFNXZjbTFoYkNBclBTQnRiM0p3YUU1dmNtMWhiRElnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRElnWFRzS0NRbHZZbXBsWTNST2IzSnRZV3dnS3owZ2JXOXljR2hPYjNKdFlXd3pJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXpJRjA3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnUm0wZ1BTQmdJMmxtWkdWbUlGVlRSVjlOVDFKUVNGUkJVa2RGVkZNS0NYVnVhV1p2Y20wZ1pteHZZWFFnYlc5eWNHaFVZWEpuWlhSQ1lYTmxTVzVtYkhWbGJtTmxPd29KSTJsbVpHVm1JRTFQVWxCSVZFRlNSMFZVVTE5VVJWaFVWVkpGQ2drSmRXNXBabTl5YlNCbWJHOWhkQ0J0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklFMVBVbEJJVkVGU1IwVlVVMTlEVDFWT1ZDQmRPd29KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFUVhKeVlYa2diVzl5Y0doVVlYSm5aWFJ6VkdWNGRIVnlaVHNLQ1FsMWJtbG1iM0p0SUdsMlpXTXlJRzF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVZUYVhwbE93b0pDWFpsWXpRZ1oyVjBUVzl5Y0dnb0lHTnZibk4wSUdsdUlHbHVkQ0IyWlhKMFpYaEpibVJsZUN3Z1kyOXVjM1FnYVc0Z2FXNTBJRzF2Y25Cb1ZHRnlaMlYwU1c1a1pYZ3NJR052Ym5OMElHbHVJR2x1ZENCdlptWnpaWFFnS1NCN0Nna0pDV2x1ZENCMFpYaGxiRWx1WkdWNElEMGdkbVZ5ZEdWNFNXNWtaWGdnS2lCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JWOVRWRkpKUkVVZ0t5QnZabVp6WlhRN0Nna0pDV2x1ZENCNUlEMGdkR1Y0Wld4SmJtUmxlQ0F2SUcxdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21WVGFYcGxMbmc3Q2drSkNXbHVkQ0I0SUQwZ2RHVjRaV3hKYm1SbGVDQXRJSGtnS2lCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbFUybDZaUzU0T3dvSkNRbHBkbVZqTXlCdGIzSndhRlZXSUQwZ2FYWmxZek1vSUhnc0lIa3NJRzF2Y25Cb1ZHRnlaMlYwU1c1a1pYZ2dLVHNLQ1FrSmNtVjBkWEp1SUhSbGVHVnNSbVYwWTJnb0lHMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVXNJRzF2Y25Cb1ZWWXNJREFnS1RzS0NRbDlDZ2tqWld4elpRb0pDU05wWm01a1pXWWdWVk5GWDAxUFVsQklUazlTVFVGTVV3b0pDUWwxYm1sbWIzSnRJR1pzYjJGMElHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnT0NCZE93b0pDU05sYkhObENna0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUEwSUYwN0Nna0pJMlZ1WkdsbUNna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1FtMGdQU0JnSTJsbVpHVm1JRlZUUlY5TlQxSlFTRlJCVWtkRlZGTUtDWFJ5WVc1elptOXliV1ZrSUNvOUlHMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlRzS0NTTnBabVJsWmlCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JRb0pDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUUxUFVsQklWRUZTUjBWVVUxOURUMVZPVkRzZ2FTQXJLeUFwSUhzS0NRa0phV1lnS0NCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJR2tnWFNBaFBTQXdMakFnS1NCMGNtRnVjMlp2Y20xbFpDQXJQU0JuWlhSTmIzSndhQ2dnWjJ4ZlZtVnlkR1Y0U1VRc0lHa3NJREFnS1M1NGVYb2dLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYVHNLQ1FsOUNna2paV3h6WlFvSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME1DQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ01DQmRPd29KQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTVNBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTVNCZE93b0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBNaUFxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNaUJkT3dvSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME15QXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ015QmRPd29KQ1NOcFptNWtaV1lnVlZORlgwMVBVbEJJVGs5U1RVRk1Vd29KQ1FsMGNtRnVjMlp2Y20xbFpDQXJQU0J0YjNKd2FGUmhjbWRsZERRZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURRZ1hUc0tDUWtKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFExSUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUExSUYwN0Nna0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBOaUFxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dOaUJkT3dvSkNRbDBjbUZ1YzJadmNtMWxaQ0FyUFNCdGIzSndhRlJoY21kbGREY2dLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklEY2dYVHNLQ1FralpXNWthV1lLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0I2YlNBOUlHQm1iRzloZENCbVlXTmxSR2x5WldOMGFXOXVJRDBnWjJ4ZlJuSnZiblJHWVdOcGJtY2dQeUF4TGpBZ09pQXRJREV1TURzS0kybG1aR1ZtSUVaTVFWUmZVMGhCUkVWRUNnbDJaV016SUdaa2VDQTlJR1JHWkhnb0lIWldhV1YzVUc5emFYUnBiMjRnS1RzS0NYWmxZek1nWm1SNUlEMGdaRVprZVNnZ2RsWnBaWGRRYjNOcGRHbHZiaUFwT3dvSmRtVmpNeUJ1YjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUdOeWIzTnpLQ0JtWkhnc0lHWmtlU0FwSUNrN0NpTmxiSE5sQ2dsMlpXTXpJRzV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnZGs1dmNtMWhiQ0FwT3dvSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDVzV2Y20xaGJDQXFQU0JtWVdObFJHbHlaV04wYVc5dU93b0pJMlZ1WkdsbUNpTmxibVJwWmdvamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDA1UFVrMUJURTFCVUY5VVFVNUhSVTVVVTFCQlEwVWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGVlRSVjlCVGtsVFQxUlNUMUJaSUNrS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDVzFoZERNZ2RHSnVJRDBnYldGME15Z2dibTl5YldGc2FYcGxLQ0IyVkdGdVoyVnVkQ0FwTENCdWIzSnRZV3hwZW1Vb0lIWkNhWFJoYm1kbGJuUWdLU3dnYm05eWJXRnNJQ2s3Q2dralpXeHpaUW9KQ1cxaGRETWdkR0p1SUQwZ1oyVjBWR0Z1WjJWdWRFWnlZVzFsS0NBdElIWldhV1YzVUc5emFYUnBiMjRzSUc1dmNtMWhiQ3dLQ1FramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDA1UFVrMUJURTFCVUNBcENna0pDWFpPYjNKdFlXeE5ZWEJWZGdvSkNTTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURURVZCVWtOUFFWUmZUazlTVFVGTVRVRlFJQ2tLQ1FrSmRrTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNGVjJDZ2tKSTJWc2MyVUtDUWtKZGxWMkNna0pJMlZ1WkdsbUNna0pLVHNLQ1NObGJtUnBaZ29KSTJsbUlHUmxabWx1WldRb0lFUlBWVUpNUlY5VFNVUkZSQ0FwSUNZbUlDRWdaR1ZtYVc1bFpDZ2dSa3hCVkY5VFNFRkVSVVFnS1FvSkNYUmlibHN3WFNBcVBTQm1ZV05sUkdseVpXTjBhVzl1T3dvSkNYUmlibHN4WFNBcVBTQm1ZV05sUkdseVpXTjBhVzl1T3dvSkkyVnVaR2xtQ2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkY5T1QxSk5RVXhOUVZBS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDVzFoZERNZ2RHSnVNaUE5SUcxaGRETW9JRzV2Y20xaGJHbDZaU2dnZGxSaGJtZGxiblFnS1N3Z2JtOXliV0ZzYVhwbEtDQjJRbWwwWVc1blpXNTBJQ2tzSUc1dmNtMWhiQ0FwT3dvSkkyVnNjMlVLQ1FsdFlYUXpJSFJpYmpJZ1BTQm5aWFJVWVc1blpXNTBSbkpoYldVb0lDMGdkbFpwWlhkUWIzTnBkR2x2Yml3Z2JtOXliV0ZzTENCMlEyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd1ZYWWdLVHNLQ1NObGJtUnBaZ29KSTJsbUlHUmxabWx1WldRb0lFUlBWVUpNUlY5VFNVUkZSQ0FwSUNZbUlDRWdaR1ZtYVc1bFpDZ2dSa3hCVkY5VFNFRkVSVVFnS1FvSkNYUmliakpiTUYwZ0tqMGdabUZqWlVScGNtVmpkR2x2YmpzS0NRbDBZbTR5V3pGZElDbzlJR1poWTJWRWFYSmxZM1JwYjI0N0Nna2paVzVrYVdZS0kyVnVaR2xtQ25abFl6TWdibTl1VUdWeWRIVnlZbVZrVG05eWJXRnNJRDBnYm05eWJXRnNPMkFzSUZadElEMGdZQ05wWm1SbFppQlZVMFZmVGs5U1RVRk1UVUZRWDA5Q1NrVkRWRk5RUVVORkNnbHViM0p0WVd3Z1BTQjBaWGgwZFhKbE1rUW9JRzV2Y20xaGJFMWhjQ3dnZGs1dmNtMWhiRTFoY0ZWMklDa3VlSGw2SUNvZ01pNHdJQzBnTVM0d093b0pJMmxtWkdWbUlFWk1TVkJmVTBsRVJVUUtDUWx1YjNKdFlXd2dQU0F0SUc1dmNtMWhiRHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNXNXZjbTFoYkNBOUlHNXZjbTFoYkNBcUlHWmhZMlZFYVhKbFkzUnBiMjQ3Q2dralpXNWthV1lLQ1c1dmNtMWhiQ0E5SUc1dmNtMWhiR2w2WlNnZ2JtOXliV0ZzVFdGMGNtbDRJQ29nYm05eWJXRnNJQ2s3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5T1QxSk5RVXhOUVZCZlZFRk9SMFZPVkZOUVFVTkZJQ2tLQ1habFl6TWdiV0Z3VGlBOUlIUmxlSFIxY21VeVJDZ2dibTl5YldGc1RXRndMQ0IyVG05eWJXRnNUV0Z3VlhZZ0tTNTRlWG9nS2lBeUxqQWdMU0F4TGpBN0NnbHRZWEJPTG5oNUlDbzlJRzV2Y20xaGJGTmpZV3hsT3dvSmJtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjBZbTRnS2lCdFlYQk9JQ2s3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5Q1ZVMVFUVUZRSUNrS0NXNXZjbTFoYkNBOUlIQmxjblIxY21KT2IzSnRZV3hCY21Jb0lDMGdkbFpwWlhkUWIzTnBkR2x2Yml3Z2JtOXliV0ZzTENCa1NHUjRlVjltZDJRb0tTd2dabUZqWlVScGNtVmpkR2x2YmlBcE93b2paVzVrYVdaZ0xDQnJiU0E5SUdBamFXWnVaR1ZtSUVaTVFWUmZVMGhCUkVWRUNnbDJZWEo1YVc1bklIWmxZek1nZGs1dmNtMWhiRHNLQ1NOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkFvSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVkdGdVoyVnVkRHNLQ1FsMllYSjVhVzVuSUhabFl6TWdka0pwZEdGdVoyVnVkRHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JJYlNBOUlHQWphV1p1WkdWbUlFWk1RVlJmVTBoQlJFVkVDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrNXZjbTFoYkRzS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDWFpoY25scGJtY2dkbVZqTXlCMlZHRnVaMlZ1ZERzS0NRbDJZWEo1YVc1bklIWmxZek1nZGtKcGRHRnVaMlZ1ZERzS0NTTmxibVJwWmdvalpXNWthV1pnTENCSGJTQTlJR0FqYVdadVpHVm1JRVpNUVZSZlUwaEJSRVZFQ2dsMlRtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDQXBPd29KSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2drSmRsUmhibWRsYm5RZ1BTQnViM0p0WVd4cGVtVW9JSFJ5WVc1elptOXliV1ZrVkdGdVoyVnVkQ0FwT3dvSkNYWkNhWFJoYm1kbGJuUWdQU0J1YjNKdFlXeHBlbVVvSUdOeWIzTnpLQ0IyVG05eWJXRnNMQ0IyVkdGdVoyVnVkQ0FwSUNvZ2RHRnVaMlZ1ZEM1M0lDazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dWMjBnUFNCZ0kybG1aR1ZtSUZWVFJWOU9UMUpOUVV4TlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJRzV2Y20xaGJFMWhjRHNLQ1hWdWFXWnZjbTBnZG1Wak1pQnViM0p0WVd4VFkyRnNaVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVGs5U1RVRk1UVUZRWDA5Q1NrVkRWRk5RUVVORkNnbDFibWxtYjNKdElHMWhkRE1nYm05eWJXRnNUV0YwY21sNE93b2paVzVrYVdZS0kybG1JQ0VnWkdWbWFXNWxaQ0FvSUZWVFJWOVVRVTVIUlU1VUlDa2dKaVlnS0NCa1pXWnBibVZrSUNnZ1ZWTkZYMDVQVWsxQlRFMUJVRjlVUVU1SFJVNVVVMUJCUTBVZ0tTQjhmQ0JrWldacGJtVmtJQ2dnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVTVKVTA5VVVrOVFXU0FwSUNrS0NXMWhkRE1nWjJWMFZHRnVaMlZ1ZEVaeVlXMWxLQ0IyWldNeklHVjVaVjl3YjNNc0lIWmxZek1nYzNWeVpsOXViM0p0TENCMlpXTXlJSFYySUNrZ2V3b0pDWFpsWXpNZ2NUQWdQU0JrUm1SNEtDQmxlV1ZmY0c5ekxuaDVlaUFwT3dvSkNYWmxZek1nY1RFZ1BTQmtSbVI1S0NCbGVXVmZjRzl6TG5oNWVpQXBPd29KQ1habFl6SWdjM1F3SUQwZ1pFWmtlQ2dnZFhZdWMzUWdLVHNLQ1FsMlpXTXlJSE4wTVNBOUlHUkdaSGtvSUhWMkxuTjBJQ2s3Q2drSmRtVmpNeUJPSUQwZ2MzVnlabDl1YjNKdE93b0pDWFpsWXpNZ2NURndaWEp3SUQwZ1kzSnZjM01vSUhFeExDQk9JQ2s3Q2drSmRtVmpNeUJ4TUhCbGNuQWdQU0JqY205emN5Z2dUaXdnY1RBZ0tUc0tDUWwyWldNeklGUWdQU0J4TVhCbGNuQWdLaUJ6ZERBdWVDQXJJSEV3Y0dWeWNDQXFJSE4wTVM1NE93b0pDWFpsWXpNZ1FpQTlJSEV4Y0dWeWNDQXFJSE4wTUM1NUlDc2djVEJ3WlhKd0lDb2djM1F4TG5rN0Nna0pabXh2WVhRZ1pHVjBJRDBnYldGNEtDQmtiM1FvSUZRc0lGUWdLU3dnWkc5MEtDQkNMQ0JDSUNrZ0tUc0tDUWxtYkc5aGRDQnpZMkZzWlNBOUlDZ2daR1YwSUQwOUlEQXVNQ0FwSUQ4Z01DNHdJRG9nYVc1MlpYSnpaWE54Y25Rb0lHUmxkQ0FwT3dvSkNYSmxkSFZ5YmlCdFlYUXpLQ0JVSUNvZ2MyTmhiR1VzSUVJZ0tpQnpZMkZzWlN3Z1RpQXBPd29KZlFvalpXNWthV1pnTENCWWJTQTlJR0FqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSmRtVmpNeUJqYkdWaGNtTnZZWFJPYjNKdFlXd2dQU0J1YjI1UVpYSjBkWEppWldST2IzSnRZV3c3Q2lObGJtUnBabUFzSUhGdElEMGdZQ05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUFvSmRtVmpNeUJqYkdWaGNtTnZZWFJOWVhCT0lEMGdkR1Y0ZEhWeVpUSkVLQ0JqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFzSUhaRGJHVmhjbU52WVhST2IzSnRZV3hOWVhCVmRpQXBMbmg1ZWlBcUlESXVNQ0F0SURFdU1Ec0tDV05zWldGeVkyOWhkRTFoY0U0dWVIa2dLajBnWTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVN0NnbGpiR1ZoY21OdllYUk9iM0p0WVd3Z1BTQnViM0p0WVd4cGVtVW9JSFJpYmpJZ0tpQmpiR1ZoY21OdllYUk5ZWEJPSUNrN0NpTmxibVJwWm1Bc0lGbHRJRDBnWUNOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JqYkdWaGNtTnZZWFJOWVhBN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRHNLQ1hWdWFXWnZjbTBnZG1Wak1pQmpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVWDFKUFZVZElUa1ZUVTAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3T3dvalpXNWthV1pnTENCYWJTQTlJR0FqYVdaa1pXWWdWVk5GWDBsU1NVUkZVME5GVGtORlRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JwY21sa1pYTmpaVzVqWlUxaGNEc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZTVkpKUkVWVFEwVk9RMFZmVkVoSlEwdE9SVk5UVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0RzS0kyVnVaR2xtWUN3Z1NtMGdQU0JnSTJsbVpHVm1JRTlRUVZGVlJRcGthV1ptZFhObFEyOXNiM0l1WVNBOUlERXVNRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NtUnBabVoxYzJWRGIyeHZjaTVoSUNvOUlHMWhkR1Z5YVdGc0xuUnlZVzV6YldsemMybHZia0ZzY0doaE93b2paVzVrYVdZS1oyeGZSbkpoWjBOdmJHOXlJRDBnZG1Wak5DZ2diM1YwWjI5cGJtZE1hV2RvZEN3Z1pHbG1ablZ6WlVOdmJHOXlMbUVnS1R0Z0xDQWtiU0E5SUdCMlpXTXpJSEJoWTJ0T2IzSnRZV3hVYjFKSFFpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dnS1NCN0NnbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQnViM0p0WVd3Z0tTQXFJREF1TlNBcklEQXVOVHNLZlFwMlpXTXpJSFZ1Y0dGamExSkhRbFJ2VG05eWJXRnNLQ0JqYjI1emRDQnBiaUIyWldNeklISm5ZaUFwSUhzS0NYSmxkSFZ5YmlBeUxqQWdLaUJ5WjJJdWVIbDZJQzBnTVM0d093cDlDbU52Ym5OMElHWnNiMkYwSUZCaFkydFZjSE5qWVd4bElEMGdNalUyTGlBdklESTFOUzQ3WTI5dWMzUWdabXh2WVhRZ1ZXNXdZV05yUkc5M2JuTmpZV3hsSUQwZ01qVTFMaUF2SURJMU5pNDdDbU52Ym5OMElIWmxZek1nVUdGamEwWmhZM1J2Y25NZ1BTQjJaV016S0NBeU5UWXVJQ29nTWpVMkxpQXFJREkxTmk0c0lESTFOaTRnS2lBeU5UWXVMQ0F5TlRZdUlDazdDbU52Ym5OMElIWmxZelFnVlc1d1lXTnJSbUZqZEc5eWN5QTlJRlZ1Y0dGamEwUnZkMjV6WTJGc1pTQXZJSFpsWXpRb0lGQmhZMnRHWVdOMGIzSnpMQ0F4TGlBcE93cGpiMjV6ZENCbWJHOWhkQ0JUYUdsbWRGSnBaMmgwT0NBOUlERXVJQzhnTWpVMkxqc0tkbVZqTkNCd1lXTnJSR1Z3ZEdoVWIxSkhRa0VvSUdOdmJuTjBJR2x1SUdac2IyRjBJSFlnS1NCN0NnbDJaV00wSUhJZ1BTQjJaV00wS0NCbWNtRmpkQ2dnZGlBcUlGQmhZMnRHWVdOMGIzSnpJQ2tzSUhZZ0tUc0tDWEl1ZVhwM0lDMDlJSEl1ZUhsNklDb2dVMmhwWm5SU2FXZG9kRGc3Q1hKbGRIVnliaUJ5SUNvZ1VHRmphMVZ3YzJOaGJHVTdDbjBLWm14dllYUWdkVzV3WVdOclVrZENRVlJ2UkdWd2RHZ29JR052Ym5OMElHbHVJSFpsWXpRZ2RpQXBJSHNLQ1hKbGRIVnliaUJrYjNRb0lIWXNJRlZ1Y0dGamEwWmhZM1J2Y25NZ0tUc0tmUXAyWldNeUlIQmhZMnRFWlhCMGFGUnZVa2NvSUdsdUlHaHBaMmh3SUdac2IyRjBJSFlnS1NCN0NnbHlaWFIxY200Z2NHRmphMFJsY0hSb1ZHOVNSMEpCS0NCMklDa3VlWGc3Q24wS1pteHZZWFFnZFc1d1lXTnJVa2RVYjBSbGNIUm9LQ0JqYjI1emRDQnBiaUJvYVdkb2NDQjJaV015SUhZZ0tTQjdDZ2x5WlhSMWNtNGdkVzV3WVdOclVrZENRVlJ2UkdWd2RHZ29JSFpsWXpRb0lIWXVlSGtzSURBdU1Dd2dNQzR3SUNrZ0tUc0tmUXAyWldNMElIQmhZMnN5U0dGc1psUnZVa2RDUVNnZ2RtVmpNaUIySUNrZ2V3b0pkbVZqTkNCeUlEMGdkbVZqTkNnZ2RpNTRMQ0JtY21GamRDZ2dkaTU0SUNvZ01qVTFMakFnS1N3Z2RpNTVMQ0JtY21GamRDZ2dkaTU1SUNvZ01qVTFMakFnS1NBcE93b0pjbVYwZFhKdUlIWmxZelFvSUhJdWVDQXRJSEl1ZVNBdklESTFOUzR3TENCeUxua3NJSEl1ZWlBdElISXVkeUF2SURJMU5TNHdMQ0J5TG5jZ0tUc0tmUXAyWldNeUlIVnVjR0ZqYTFKSFFrRlViekpJWVd4bUtDQjJaV00wSUhZZ0tTQjdDZ2x5WlhSMWNtNGdkbVZqTWlnZ2RpNTRJQ3NnS0NCMkxua2dMeUF5TlRVdU1DQXBMQ0IyTG5vZ0t5QW9JSFl1ZHlBdklESTFOUzR3SUNrZ0tUc0tmUXBtYkc5aGRDQjJhV1YzV2xSdlQzSjBhRzluY21Gd2FHbGpSR1Z3ZEdnb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhacFpYZGFMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnVaV0Z5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JtWVhJZ0tTQjdDZ2x5WlhSMWNtNGdLQ0IyYVdWM1dpQXJJRzVsWVhJZ0tTQXZJQ2dnYm1WaGNpQXRJR1poY2lBcE93cDlDbVpzYjJGMElHOXlkR2h2WjNKaGNHaHBZMFJsY0hSb1ZHOVdhV1YzV2lnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnWkdWd2RHZ3NJR052Ym5OMElHbHVJR1pzYjJGMElHNWxZWElzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1poY2lBcElIc0tDWEpsZEhWeWJpQmtaWEIwYUNBcUlDZ2dibVZoY2lBdElHWmhjaUFwSUMwZ2JtVmhjanNLZlFwbWJHOWhkQ0IyYVdWM1dsUnZVR1Z5YzNCbFkzUnBkbVZFWlhCMGFDZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2RtbGxkMW9zSUdOdmJuTjBJR2x1SUdac2IyRjBJRzVsWVhJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdaaGNpQXBJSHNLQ1hKbGRIVnliaUFvSUNnZ2JtVmhjaUFySUhacFpYZGFJQ2tnS2lCbVlYSWdLU0F2SUNnZ0tDQm1ZWElnTFNCdVpXRnlJQ2tnS2lCMmFXVjNXaUFwT3dwOUNtWnNiMkYwSUhCbGNuTndaV04wYVhabFJHVndkR2hVYjFacFpYZGFLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmtaWEIwYUN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnYm1WaGNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1ptRnlJQ2tnZXdvSmNtVjBkWEp1SUNnZ2JtVmhjaUFxSUdaaGNpQXBJQzhnS0NBb0lHWmhjaUF0SUc1bFlYSWdLU0FxSUdSbGNIUm9JQzBnWm1GeUlDazdDbjFnTENCTGJTQTlJR0FqYVdaa1pXWWdVRkpGVFZWTVZFbFFURWxGUkY5QlRGQklRUW9KWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUFxUFNCbmJGOUdjbUZuUTI5c2IzSXVZVHNLSTJWdVpHbG1ZQ3dnVVcwZ1BTQmdkbVZqTkNCdGRsQnZjMmwwYVc5dUlEMGdkbVZqTkNnZ2RISmhibk5tYjNKdFpXUXNJREV1TUNBcE93b2phV1prWldZZ1ZWTkZYMGxPVTFSQlRrTkpUa2NLQ1cxMlVHOXphWFJwYjI0Z1BTQnBibk4wWVc1alpVMWhkSEpwZUNBcUlHMTJVRzl6YVhScGIyNDdDaU5sYm1ScFpncHRkbEJ2YzJsMGFXOXVJRDBnYlc5a1pXeFdhV1YzVFdGMGNtbDRJQ29nYlhaUWIzTnBkR2x2YmpzS1oyeGZVRzl6YVhScGIyNGdQU0J3Y205cVpXTjBhVzl1VFdGMGNtbDRJQ29nYlhaUWIzTnBkR2x2Ymp0Z0xDQnFiU0E5SUdBamFXWmtaV1lnUkVsVVNFVlNTVTVIQ2dsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUQwZ1pHbDBhR1Z5YVc1bktDQm5iRjlHY21GblEyOXNiM0l1Y21kaUlDazdDaU5sYm1ScFptQXNJR1ZuSUQwZ1lDTnBabVJsWmlCRVNWUklSVkpKVGtjS0NYWmxZek1nWkdsMGFHVnlhVzVuS0NCMlpXTXpJR052Ykc5eUlDa2dld29KQ1dac2IyRjBJR2R5YVdSZmNHOXphWFJwYjI0Z1BTQnlZVzVrS0NCbmJGOUdjbUZuUTI5dmNtUXVlSGtnS1RzS0NRbDJaV016SUdScGRHaGxjbDl6YUdsbWRGOVNSMElnUFNCMlpXTXpLQ0F3TGpJMUlDOGdNalUxTGpBc0lDMHdMakkxSUM4Z01qVTFMakFzSURBdU1qVWdMeUF5TlRVdU1DQXBPd29KQ1dScGRHaGxjbDl6YUdsbWRGOVNSMElnUFNCdGFYZ29JREl1TUNBcUlHUnBkR2hsY2w5emFHbG1kRjlTUjBJc0lDMHlMakFnS2lCa2FYUm9aWEpmYzJocFpuUmZVa2RDTENCbmNtbGtYM0J2YzJsMGFXOXVJQ2s3Q2drSmNtVjBkWEp1SUdOdmJHOXlJQ3NnWkdsMGFHVnlYM05vYVdaMFgxSkhRanNLQ1gwS0kyVnVaR2xtWUN3Z2RHY2dQU0JnWm14dllYUWdjbTkxWjJodVpYTnpSbUZqZEc5eUlEMGdjbTkxWjJodVpYTnpPd29qYVdaa1pXWWdWVk5GWDFKUFZVZElUa1ZUVTAxQlVBb0pkbVZqTkNCMFpYaGxiRkp2ZFdkb2JtVnpjeUE5SUhSbGVIUjFjbVV5UkNnZ2NtOTFaMmh1WlhOelRXRndMQ0IyVW05MVoyaHVaWE56VFdGd1ZYWWdLVHNLQ1hKdmRXZG9ibVZ6YzBaaFkzUnZjaUFxUFNCMFpYaGxiRkp2ZFdkb2JtVnpjeTVuT3dvalpXNWthV1pnTENCdVp5QTlJR0FqYVdaa1pXWWdWVk5GWDFKUFZVZElUa1ZUVTAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjbTkxWjJodVpYTnpUV0Z3T3dvalpXNWthV1pnTENCcFp5QTlJR0FqYVdZZ1RsVk5YMU5RVDFSZlRFbEhTRlJmUTA5UFVrUlRJRDRnTUFvSmRtRnllV2x1WnlCMlpXTTBJSFpUY0c5MFRHbG5hSFJEYjI5eVpGc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlEwOVBVa1JUSUYwN0NpTmxibVJwWmdvamFXWWdUbFZOWDFOUVQxUmZURWxIU0ZSZlRVRlFVeUErSURBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITndiM1JNYVdkb2RFMWhjRnNnVGxWTlgxTlFUMVJmVEVsSFNGUmZUVUZRVXlCZE93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRTRUZFVDFkTlFWQUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1pHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYQmJJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWFpoY25scGJtY2dkbVZqTkNCMlJHbHlaV04wYVc5dVlXeFRhR0ZrYjNkRGIyOXlaRnNnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKYzNSeWRXTjBJRVJwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjZ2V3b0pDUWxtYkc5aGRDQnphR0ZrYjNkQ2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZFNZV1JwZFhNN0Nna0pDWFpsWXpJZ2MyaGhaRzkzVFdGd1UybDZaVHNLQ1FsOU93b0pDWFZ1YVdadmNtMGdSR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHlCa2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNjMXNnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITndiM1JUYUdGa2IzZE5ZWEJiSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsemRISjFZM1FnVTNCdmRFeHBaMmgwVTJoaFpHOTNJSHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pmVHNLQ1FsMWJtbG1iM0p0SUZOd2IzUk1hV2RvZEZOb1lXUnZkeUJ6Y0c5MFRHbG5hSFJUYUdGa2IzZHpXeUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQndiMmx1ZEZOb1lXUnZkMDFoY0ZzZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbDJZWEo1YVc1bklIWmxZelFnZGxCdmFXNTBVMmhoWkc5M1EyOXZjbVJiSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmMzUnlkV04wSUZCdmFXNTBUR2xuYUhSVGFHRmtiM2NnZXdvSkNRbG1iRzloZENCemFHRmtiM2RDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNYWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpUc0tDUWtKWm14dllYUWdjMmhoWkc5M1EyRnRaWEpoVG1WaGNqc0tDUWtKWm14dllYUWdjMmhoWkc5M1EyRnRaWEpoUm1GeU93b0pDWDA3Q2drSmRXNXBabTl5YlNCUWIybHVkRXhwWjJoMFUyaGhaRzkzSUhCdmFXNTBUR2xuYUhSVGFHRmtiM2R6V3lCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkkyVnVaR2xtQ2dsbWJHOWhkQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6WVcxd2JHVnlNa1FnWkdWd2RHaHpMQ0IyWldNeUlIVjJMQ0JtYkc5aGRDQmpiMjF3WVhKbElDa2dld29KQ1hKbGRIVnliaUJ6ZEdWd0tDQmpiMjF3WVhKbExDQjFibkJoWTJ0U1IwSkJWRzlFWlhCMGFDZ2dkR1Y0ZEhWeVpUSkVLQ0JrWlhCMGFITXNJSFYySUNrZ0tTQXBPd29KZlFvSmRtVmpNaUIwWlhoMGRYSmxNa1JFYVhOMGNtbGlkWFJwYjI0b0lITmhiWEJzWlhJeVJDQnphR0ZrYjNjc0lIWmxZeklnZFhZZ0tTQjdDZ2tKY21WMGRYSnVJSFZ1Y0dGamExSkhRa0ZVYnpKSVlXeG1LQ0IwWlhoMGRYSmxNa1FvSUhOb1lXUnZkeXdnZFhZZ0tTQXBPd29KZlFvSlpteHZZWFFnVmxOTlUyaGhaRzkzSUNoellXMXdiR1Z5TWtRZ2MyaGhaRzkzTENCMlpXTXlJSFYyTENCbWJHOWhkQ0JqYjIxd1lYSmxJQ2w3Q2drSlpteHZZWFFnYjJOamJIVnphVzl1SUQwZ01TNHdPd29KQ1habFl6SWdaR2x6ZEhKcFluVjBhVzl1SUQwZ2RHVjRkSFZ5WlRKRVJHbHpkSEpwWW5WMGFXOXVLQ0J6YUdGa2IzY3NJSFYySUNrN0Nna0pabXh2WVhRZ2FHRnlaRjl6YUdGa2IzY2dQU0J6ZEdWd0tDQmpiMjF3WVhKbElDd2daR2x6ZEhKcFluVjBhVzl1TG5nZ0tUc0tDUWxwWmlBb2FHRnlaRjl6YUdGa2IzY2dJVDBnTVM0d0lDa2dld29KQ1FsbWJHOWhkQ0JrYVhOMFlXNWpaU0E5SUdOdmJYQmhjbVVnTFNCa2FYTjBjbWxpZFhScGIyNHVlQ0E3Q2drSkNXWnNiMkYwSUhaaGNtbGhibU5sSUQwZ2JXRjRLQ0F3TGpBd01EQXdMQ0JrYVhOMGNtbGlkWFJwYjI0dWVTQXFJR1JwYzNSeWFXSjFkR2x2Ymk1NUlDazdDZ2tKQ1dac2IyRjBJSE52Wm5SdVpYTnpYM0J5YjJKaFltbHNhWFI1SUQwZ2RtRnlhV0Z1WTJVZ0x5QW9kbUZ5YVdGdVkyVWdLeUJrYVhOMFlXNWpaU0FxSUdScGMzUmhibU5sSUNrN0NRa0pjMjltZEc1bGMzTmZjSEp2WW1GaWFXeHBkSGtnUFNCamJHRnRjQ2dnS0NCemIyWjBibVZ6YzE5d2NtOWlZV0pwYkdsMGVTQXRJREF1TXlBcElDOGdLQ0F3TGprMUlDMGdNQzR6SUNrc0lEQXVNQ3dnTVM0d0lDazdDUWtKYjJOamJIVnphVzl1SUQwZ1kyeGhiWEFvSUcxaGVDZ2dhR0Z5WkY5emFHRmtiM2NzSUhOdlpuUnVaWE56WDNCeWIySmhZbWxzYVhSNUlDa3NJREF1TUN3Z01TNHdJQ2s3Q2drSmZRb0pDWEpsZEhWeWJpQnZZMk5zZFhOcGIyNDdDZ2w5Q2dsbWJHOWhkQ0JuWlhSVGFHRmtiM2NvSUhOaGJYQnNaWEl5UkNCemFHRmtiM2ROWVhBc0lIWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpTd2dabXh2WVhRZ2MyaGhaRzkzUW1saGN5d2dabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpMQ0IyWldNMElITm9ZV1J2ZDBOdmIzSmtJQ2tnZXdvSkNXWnNiMkYwSUhOb1lXUnZkeUE5SURFdU1Ec0tDUWx6YUdGa2IzZERiMjl5WkM1NGVYb2dMejBnYzJoaFpHOTNRMjl2Y21RdWR6c0tDUWx6YUdGa2IzZERiMjl5WkM1NklDczlJSE5vWVdSdmQwSnBZWE03Q2drSlltOXZiQ0JwYmtaeWRYTjBkVzBnUFNCemFHRmtiM2REYjI5eVpDNTRJRDQ5SURBdU1DQW1KaUJ6YUdGa2IzZERiMjl5WkM1NElEdzlJREV1TUNBbUppQnphR0ZrYjNkRGIyOXlaQzU1SUQ0OUlEQXVNQ0FtSmlCemFHRmtiM2REYjI5eVpDNTVJRHc5SURFdU1Ec0tDUWxpYjI5c0lHWnlkWE4wZFcxVVpYTjBJRDBnYVc1R2NuVnpkSFZ0SUNZbUlITm9ZV1J2ZDBOdmIzSmtMbm9nUEQwZ01TNHdPd29KQ1dsbUlDZ2dabkoxYzNSMWJWUmxjM1FnS1NCN0Nna0pJMmxtSUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMUJEUmlBcENna0pDWFpsWXpJZ2RHVjRaV3hUYVhwbElEMGdkbVZqTWlnZ01TNHdJQ2tnTHlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1FsbWJHOWhkQ0JrZURBZ1BTQXRJSFJsZUdWc1UybDZaUzU0SUNvZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsbWJHOWhkQ0JrZVRBZ1BTQXRJSFJsZUdWc1UybDZaUzU1SUNvZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsbWJHOWhkQ0JrZURFZ1BTQXJJSFJsZUdWc1UybDZaUzU0SUNvZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsbWJHOWhkQ0JrZVRFZ1BTQXJJSFJsZUdWc1UybDZaUzU1SUNvZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsbWJHOWhkQ0JrZURJZ1BTQmtlREFnTHlBeUxqQTdDZ2tKQ1dac2IyRjBJR1I1TWlBOUlHUjVNQ0F2SURJdU1Ec0tDUWtKWm14dllYUWdaSGd6SUQwZ1pIZ3hJQzhnTWk0d093b0pDUWxtYkc5aGRDQmtlVE1nUFNCa2VURWdMeUF5TGpBN0Nna0pDWE5vWVdSdmR5QTlJQ2dLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VEQXNJR1I1TUNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JREF1TUN3Z1pIa3dJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3hMQ0JrZVRBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURJc0lHUjVNaUFwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lEQXVNQ3dnWkhreUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhnekxDQmtlVElnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREFzSURBdU1DQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1pd2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE15d2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd4TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VESXNJR1I1TXlBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JREF1TUN3Z1pIa3pJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3pMQ0JrZVRNZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURBc0lHUjVNU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lEQXVNQ3dnWkhreElDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhneExDQmtlVEVnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwQ2drSkNTa2dLaUFvSURFdU1DQXZJREUzTGpBZ0tUc0tDUWtqWld4cFppQmtaV1pwYm1Wa0tDQlRTRUZFVDFkTlFWQmZWRmxRUlY5UVEwWmZVMDlHVkNBcENna0pDWFpsWXpJZ2RHVjRaV3hUYVhwbElEMGdkbVZqTWlnZ01TNHdJQ2tnTHlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1FsbWJHOWhkQ0JrZUNBOUlIUmxlR1ZzVTJsNlpTNTRPd29KQ1FsbWJHOWhkQ0JrZVNBOUlIUmxlR1ZzVTJsNlpTNTVPd29KQ1FsMlpXTXlJSFYySUQwZ2MyaGhaRzkzUTI5dmNtUXVlSGs3Q2drSkNYWmxZeklnWmlBOUlHWnlZV04wS0NCMWRpQXFJSE5vWVdSdmQwMWhjRk5wZW1VZ0t5QXdMalVnS1RzS0NRa0pkWFlnTFQwZ1ppQXFJSFJsZUdWc1UybDZaVHNLQ1FrSmMyaGhaRzkzSUQwZ0tBb0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQmtlQ3dnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNQzR3TENCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhSbGVHVnNVMmw2WlN3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDVzFwZUNnZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JQzFrZUN3Z01DNHdJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmdnS1NBckNna0pDUWx0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F0Wkhnc0lHUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSklHWXVlQ0FwSUNzS0NRa0pDVzFwZUNnZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JREF1TUN3Z0xXUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURBdU1Dd2dNaTR3SUNvZ1pIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmtnS1NBckNna0pDUWx0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0JrZUN3Z0xXUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUdSNExDQXlMakFnS2lCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSklHWXVlU0FwSUNzS0NRa0pDVzFwZUNnZ2JXbDRLQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ0xXUjRMQ0F0WkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1FrZ0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F5TGpBZ0tpQmtlQ3dnTFdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd0tDUWtKQ1FrSklDQm1MbmdnS1N3S0NRa0pDUWtnYldsNEtDQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTFdSNExDQXlMakFnS2lCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSkNTQWdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENBeUxqQWdLaUJrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0Nna0pDUWtKQ1NBZ1ppNTRJQ2tzQ2drSkNRa0pJR1l1ZVNBcENna0pDU2tnS2lBb0lERXVNQ0F2SURrdU1DQXBPd29KQ1NObGJHbG1JR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxWlRUU0FwQ2drSkNYTm9ZV1J2ZHlBOUlGWlRUVk5vWVdSdmR5Z2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcE93b0pDU05sYkhObENna0pDWE5vWVdSdmR5QTlJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tUc0tDUWtqWlc1a2FXWUtDUWw5Q2drSmNtVjBkWEp1SUhOb1lXUnZkenNLQ1gwS0NYWmxZeklnWTNWaVpWUnZWVllvSUhabFl6TWdkaXdnWm14dllYUWdkR1Y0Wld4VGFYcGxXU0FwSUhzS0NRbDJaV016SUdGaWMxWWdQU0JoWW5Nb0lIWWdLVHNLQ1FsbWJHOWhkQ0J6WTJGc1pWUnZRM1ZpWlNBOUlERXVNQ0F2SUcxaGVDZ2dZV0p6Vmk1NExDQnRZWGdvSUdGaWMxWXVlU3dnWVdKelZpNTZJQ2tnS1RzS0NRbGhZbk5XSUNvOUlITmpZV3hsVkc5RGRXSmxPd29KQ1hZZ0tqMGdjMk5oYkdWVWIwTjFZbVVnS2lBb0lERXVNQ0F0SURJdU1DQXFJSFJsZUdWc1UybDZaVmtnS1RzS0NRbDJaV015SUhCc1lXNWhjaUE5SUhZdWVIazdDZ2tKWm14dllYUWdZV3h0YjNOMFFWUmxlR1ZzSUQwZ01TNDFJQ29nZEdWNFpXeFRhWHBsV1RzS0NRbG1iRzloZENCaGJHMXZjM1JQYm1VZ1BTQXhMakFnTFNCaGJHMXZjM1JCVkdWNFpXdzdDZ2tKYVdZZ0tDQmhZbk5XTG5vZ1BqMGdZV3h0YjNOMFQyNWxJQ2tnZXdvSkNRbHBaaUFvSUhZdWVpQStJREF1TUNBcENna0pDUWx3YkdGdVlYSXVlQ0E5SURRdU1DQXRJSFl1ZURzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JoWW5OV0xuZ2dQajBnWVd4dGIzTjBUMjVsSUNrZ2V3b0pDUWxtYkc5aGRDQnphV2R1V0NBOUlITnBaMjRvSUhZdWVDQXBPd29KQ1Fsd2JHRnVZWEl1ZUNBOUlIWXVlaUFxSUhOcFoyNVlJQ3NnTWk0d0lDb2djMmxuYmxnN0Nna0pmU0JsYkhObElHbG1JQ2dnWVdKelZpNTVJRDQ5SUdGc2JXOXpkRTl1WlNBcElIc0tDUWtKWm14dllYUWdjMmxuYmxrZ1BTQnphV2R1S0NCMkxua2dLVHNLQ1FrSmNHeGhibUZ5TG5nZ1BTQjJMbmdnS3lBeUxqQWdLaUJ6YVdkdVdTQXJJREl1TURzS0NRa0pjR3hoYm1GeUxua2dQU0IyTG5vZ0tpQnphV2R1V1NBdElESXVNRHNLQ1FsOUNna0pjbVYwZFhKdUlIWmxZeklvSURBdU1USTFMQ0F3TGpJMUlDa2dLaUJ3YkdGdVlYSWdLeUIyWldNeUtDQXdMak0zTlN3Z01DNDNOU0FwT3dvSmZRb0pabXh2WVhRZ1oyVjBVRzlwYm5SVGFHRmtiM2NvSUhOaGJYQnNaWEl5UkNCemFHRmtiM2ROWVhBc0lIWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpTd2dabXh2WVhRZ2MyaGhaRzkzUW1saGN5d2dabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpMQ0IyWldNMElITm9ZV1J2ZDBOdmIzSmtMQ0JtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZPWldGeUxDQm1iRzloZENCemFHRmtiM2REWVcxbGNtRkdZWElnS1NCN0Nna0pkbVZqTWlCMFpYaGxiRk5wZW1VZ1BTQjJaV015S0NBeExqQWdLU0F2SUNnZ2MyaGhaRzkzVFdGd1UybDZaU0FxSUhabFl6SW9JRFF1TUN3Z01pNHdJQ2tnS1RzS0NRbDJaV016SUd4cFoyaDBWRzlRYjNOcGRHbHZiaUE5SUhOb1lXUnZkME52YjNKa0xuaDVlanNLQ1FsbWJHOWhkQ0JrY0NBOUlDZ2diR1Z1WjNSb0tDQnNhV2RvZEZSdlVHOXphWFJwYjI0Z0tTQXRJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSWdLU0F2SUNnZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5SUMwZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2lBcE93a0paSEFnS3owZ2MyaGhaRzkzUW1saGN6c0tDUWwyWldNeklHSmtNMFFnUFNCdWIzSnRZV3hwZW1Vb0lHeHBaMmgwVkc5UWIzTnBkR2x2YmlBcE93b0pDU05wWmlCa1pXWnBibVZrS0NCVFNFRkVUMWROUVZCZlZGbFFSVjlRUTBZZ0tTQjhmQ0JrWldacGJtVmtLQ0JUU0VGRVQxZE5RVkJmVkZsUVJWOVFRMFpmVTA5R1ZDQXBJSHg4SUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMVpUVFNBcENna0pDWFpsWXpJZ2IyWm1jMlYwSUQwZ2RtVmpNaWdnTFNBeExDQXhJQ2tnS2lCemFHRmtiM2RTWVdScGRYTWdLaUIwWlhobGJGTnBlbVV1ZVRzS0NRa0pjbVYwZFhKdUlDZ0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z1kzVmlaVlJ2VlZZb0lHSmtNMFFnS3lCdlptWnpaWFF1ZUhsNUxDQjBaWGhsYkZOcGVtVXVlU0FwTENCa2NDQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRZ0t5QnZabVp6WlhRdWVYbDVMQ0IwWlhobGJGTnBlbVV1ZVNBcExDQmtjQ0FwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnWTNWaVpWUnZWVllvSUdKa00wUWdLeUJ2Wm1aelpYUXVlSGw0TENCMFpYaGxiRk5wZW1VdWVTQXBMQ0JrY0NBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z1kzVmlaVlJ2VlZZb0lHSmtNMFFnS3lCdlptWnpaWFF1ZVhsNExDQjBaWGhsYkZOcGVtVXVlU0FwTENCa2NDQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NGVIa3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTVlSGtzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU0ZUhnc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NWVIZ3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tLQ1FrSktTQXFJQ2dnTVM0d0lDOGdPUzR3SUNrN0Nna0pJMlZzYzJVS0NRa0pjbVYwZFhKdUlIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDazdDZ2tKSTJWdVpHbG1DZ2w5Q2lObGJtUnBabUFzSUhObklEMGdZQ05wWmlCT1ZVMWZVMUJQVkY5TVNVZElWRjlEVDA5U1JGTWdQaUF3Q2dsMWJtbG1iM0p0SUcxaGREUWdjM0J2ZEV4cFoyaDBUV0YwY21sNFd5Qk9WVTFmVTFCUFZGOU1TVWRJVkY5RFQwOVNSRk1nWFRzS0NYWmhjbmxwYm1jZ2RtVmpOQ0IyVTNCdmRFeHBaMmgwUTI5dmNtUmJJRTVWVFY5VFVFOVVYMHhKUjBoVVgwTlBUMUpFVXlCZE93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRTRUZFVDFkTlFWQUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCdFlYUTBJR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNFd5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbDJZWEo1YVc1bklIWmxZelFnZGtScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzUTI5dmNtUmJJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWE4wY25WamRDQkVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUhzS0NRa0pabXh2WVhRZ2MyaGhaRzkzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1RtOXliV0ZzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1VtRmthWFZ6T3dvSkNRbDJaV015SUhOb1lXUnZkMDFoY0ZOcGVtVTdDZ2tKZlRzS0NRbDFibWxtYjNKdElFUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTmJJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1FsemRISjFZM1FnVTNCdmRFeHBaMmgwVTJoaFpHOTNJSHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pmVHNLQ1FsMWJtbG1iM0p0SUZOd2IzUk1hV2RvZEZOb1lXUnZkeUJ6Y0c5MFRHbG5hSFJUYUdGa2IzZHpXeUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NRbDFibWxtYjNKdElHMWhkRFFnY0c5cGJuUlRhR0ZrYjNkTllYUnlhWGhiSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmRtRnllV2x1WnlCMlpXTTBJSFpRYjJsdWRGTm9ZV1J2ZDBOdmIzSmtXeUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1hOMGNuVmpkQ0JRYjJsdWRFeHBaMmgwVTJoaFpHOTNJSHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVTVsWVhJN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVVpoY2pzS0NRbDlPd29KQ1hWdWFXWnZjbTBnVUc5cGJuUk1hV2RvZEZOb1lXUnZkeUJ3YjJsdWRFeHBaMmgwVTJoaFpHOTNjMXNnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0J5WnlBOUlHQWphV1lnS0NCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ0tDQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0lIeDhJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQ0FwSUNrZ2ZId2dLQ0JPVlUxZlUxQlBWRjlNU1VkSVZGOURUMDlTUkZNZ1BpQXdJQ2tLQ1habFl6TWdjMmhoWkc5M1YyOXliR1JPYjNKdFlXd2dQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0IwY21GdWMyWnZjbTFsWkU1dmNtMWhiQ3dnZG1sbGQwMWhkSEpwZUNBcE93b0pkbVZqTkNCemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dU93b2paVzVrYVdZS0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFRkVUMWROUVZBZ0tRb0pJMmxtSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1FramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2drSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUT3lCcElDc3JJQ2tnZXdvSkNRbHphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpQXJJSFpsWXpRb0lITm9ZV1J2ZDFkdmNteGtUbTl5YldGc0lDb2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYUzV6YUdGa2IzZE9iM0p0WVd4Q2FXRnpMQ0F3SUNrN0Nna0pDWFpFYVhKbFkzUnBiMjVoYkZOb1lXUnZkME52YjNKa1d5QnBJRjBnUFNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGRISnBlRnNnYVNCZElDb2djMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZianNLQ1FsOUNna0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1FsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRa0pjMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNGdLeUIyWldNMEtDQnphR0ZrYjNkWGIzSnNaRTV2Y20xaGJDQXFJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwdWMyaGhaRzkzVG05eWJXRnNRbWxoY3l3Z01DQXBPd29KQ1FsMlVHOXBiblJUYUdGa2IzZERiMjl5WkZzZ2FTQmRJRDBnY0c5cGJuUlRhR0ZrYjNkTllYUnlhWGhiSUdrZ1hTQXFJSE5vWVdSdmQxZHZjbXhrVUc5emFYUnBiMjQ3Q2drSmZRb0pDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2paVzVrYVdZS0kyVnVaR2xtQ2lOcFppQk9WVTFmVTFCUFZGOU1TVWRJVkY5RFQwOVNSRk1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlUxQlBWRjlNU1VkSVZGOURUMDlTUkZNN0lHa2dLeXNnS1NCN0Nna0pjMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNDdDZ2tKSTJsbUlDZ2daR1ZtYVc1bFpDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElDWW1JRlZPVWs5TVRFVkVYMHhQVDFCZlNVNUVSVmdnUENCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJQ2tLQ1FrSmMyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJpNTRlWG9nS3owZ2MyaGhaRzkzVjI5eWJHUk9iM0p0WVd3Z0tpQnpjRzkwVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjB1YzJoaFpHOTNUbTl5YldGc1FtbGhjenNLQ1FralpXNWthV1lLQ1FsMlUzQnZkRXhwWjJoMFEyOXZjbVJiSUdrZ1hTQTlJSE53YjNSTWFXZG9kRTFoZEhKcGVGc2dhU0JkSUNvZ2MyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJqc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFptQXNJR0ZuSUQwZ1lHWnNiMkYwSUdkbGRGTm9ZV1J2ZDAxaGMyc29LU0I3Q2dsbWJHOWhkQ0J6YUdGa2IzY2dQU0F4TGpBN0Nna2phV1prWldZZ1ZWTkZYMU5JUVVSUFYwMUJVQW9KSTJsbUlFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NVUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnWkdseVpXTjBhVzl1WVd4TWFXZG9kRHNLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVenNnYVNBckt5QXBJSHNLQ1Fsa2FYSmxZM1JwYjI1aGJFeHBaMmgwSUQwZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM05iSUdrZ1hUc0tDUWx6YUdGa2IzY2dLajBnY21WalpXbDJaVk5vWVdSdmR5QS9JR2RsZEZOb1lXUnZkeWdnWkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhCYklHa2dYU3dnWkdseVpXTjBhVzl1WVd4TWFXZG9kQzV6YUdGa2IzZE5ZWEJUYVhwbExDQmthWEpsWTNScGIyNWhiRXhwWjJoMExuTm9ZV1J2ZDBKcFlYTXNJR1JwY21WamRHbHZibUZzVEdsbmFIUXVjMmhoWkc5M1VtRmthWFZ6TENCMlJHbHlaV04wYVc5dVlXeFRhR0ZrYjNkRGIyOXlaRnNnYVNCZElDa2dPaUF4TGpBN0NnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1ZOd2IzUk1hV2RvZEZOb1lXUnZkeUJ6Y0c5MFRHbG5hSFE3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUT3lCcElDc3JJQ2tnZXdvSkNYTndiM1JNYVdkb2RDQTlJSE53YjNSTWFXZG9kRk5vWVdSdmQzTmJJR2tnWFRzS0NRbHphR0ZrYjNjZ0tqMGdjbVZqWldsMlpWTm9ZV1J2ZHlBL0lHZGxkRk5vWVdSdmR5Z2djM0J2ZEZOb1lXUnZkMDFoY0ZzZ2FTQmRMQ0J6Y0c5MFRHbG5hSFF1YzJoaFpHOTNUV0Z3VTJsNlpTd2djM0J2ZEV4cFoyaDBMbk5vWVdSdmQwSnBZWE1zSUhOd2IzUk1hV2RvZEM1emFHRmtiM2RTWVdScGRYTXNJSFpUY0c5MFRHbG5hSFJEYjI5eVpGc2dhU0JkSUNrZ09pQXhMakE3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xRYjJsdWRFeHBaMmgwVTJoaFpHOTNJSEJ2YVc1MFRHbG5hSFE3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHdiMmx1ZEV4cFoyaDBJRDBnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM05iSUdrZ1hUc0tDUWx6YUdGa2IzY2dLajBnY21WalpXbDJaVk5vWVdSdmR5QS9JR2RsZEZCdmFXNTBVMmhoWkc5M0tDQndiMmx1ZEZOb1lXUnZkMDFoY0ZzZ2FTQmRMQ0J3YjJsdWRFeHBaMmgwTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJSEJ2YVc1MFRHbG5hSFF1YzJoaFpHOTNRbWxoY3l3Z2NHOXBiblJNYVdkb2RDNXphR0ZrYjNkU1lXUnBkWE1zSUhaUWIybHVkRk5vWVdSdmQwTnZiM0prV3lCcElGMHNJSEJ2YVc1MFRHbG5hSFF1YzJoaFpHOTNRMkZ0WlhKaFRtVmhjaXdnY0c5cGJuUk1hV2RvZEM1emFHRmtiM2REWVcxbGNtRkdZWElnS1NBNklERXVNRHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dralpXNWthV1lLQ1NObGJtUnBaZ29KY21WMGRYSnVJSE5vWVdSdmR6c0tmV0FzSUc5bklEMGdZQ05wWm1SbFppQlZVMFZmVTB0SlRrNUpUa2NLQ1cxaGREUWdZbTl1WlUxaGRGZ2dQU0JuWlhSQ2IyNWxUV0YwY21sNEtDQnphMmx1U1c1a1pYZ3VlQ0FwT3dvSmJXRjBOQ0JpYjI1bFRXRjBXU0E5SUdkbGRFSnZibVZOWVhSeWFYZ29JSE5yYVc1SmJtUmxlQzU1SUNrN0NnbHRZWFEwSUdKdmJtVk5ZWFJhSUQwZ1oyVjBRbTl1WlUxaGRISnBlQ2dnYzJ0cGJrbHVaR1Y0TG5vZ0tUc0tDVzFoZERRZ1ltOXVaVTFoZEZjZ1BTQm5aWFJDYjI1bFRXRjBjbWw0S0NCemEybHVTVzVrWlhndWR5QXBPd29qWlc1a2FXWmdMQ0JqWnlBOUlHQWphV1prWldZZ1ZWTkZYMU5MU1U1T1NVNUhDZ2wxYm1sbWIzSnRJRzFoZERRZ1ltbHVaRTFoZEhKcGVEc0tDWFZ1YVdadmNtMGdiV0YwTkNCaWFXNWtUV0YwY21sNFNXNTJaWEp6WlRzS0NYVnVhV1p2Y20wZ2FHbG5hSEFnYzJGdGNHeGxjakpFSUdKdmJtVlVaWGgwZFhKbE93b0pkVzVwWm05eWJTQnBiblFnWW05dVpWUmxlSFIxY21WVGFYcGxPd29KYldGME5DQm5aWFJDYjI1bFRXRjBjbWw0S0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0JwSUNrZ2V3b0pDV1pzYjJGMElHb2dQU0JwSUNvZ05DNHdPd29KQ1dac2IyRjBJSGdnUFNCdGIyUW9JR29zSUdac2IyRjBLQ0JpYjI1bFZHVjRkSFZ5WlZOcGVtVWdLU0FwT3dvSkNXWnNiMkYwSUhrZ1BTQm1iRzl2Y2lnZ2FpQXZJR1pzYjJGMEtDQmliMjVsVkdWNGRIVnlaVk5wZW1VZ0tTQXBPd29KQ1dac2IyRjBJR1I0SUQwZ01TNHdJQzhnWm14dllYUW9JR0p2Ym1WVVpYaDBkWEpsVTJsNlpTQXBPd29KQ1dac2IyRjBJR1I1SUQwZ01TNHdJQzhnWm14dllYUW9JR0p2Ym1WVVpYaDBkWEpsVTJsNlpTQXBPd29KQ1hrZ1BTQmtlU0FxSUNnZ2VTQXJJREF1TlNBcE93b0pDWFpsWXpRZ2RqRWdQU0IwWlhoMGRYSmxNa1FvSUdKdmJtVlVaWGgwZFhKbExDQjJaV015S0NCa2VDQXFJQ2dnZUNBcklEQXVOU0FwTENCNUlDa2dLVHNLQ1FsMlpXTTBJSFl5SUQwZ2RHVjRkSFZ5WlRKRUtDQmliMjVsVkdWNGRIVnlaU3dnZG1Wak1pZ2daSGdnS2lBb0lIZ2dLeUF4TGpVZ0tTd2dlU0FwSUNrN0Nna0pkbVZqTkNCMk15QTlJSFJsZUhSMWNtVXlSQ2dnWW05dVpWUmxlSFIxY21Vc0lIWmxZeklvSUdSNElDb2dLQ0I0SUNzZ01pNDFJQ2tzSUhrZ0tTQXBPd29KQ1habFl6UWdkalFnUFNCMFpYaDBkWEpsTWtRb0lHSnZibVZVWlhoMGRYSmxMQ0IyWldNeUtDQmtlQ0FxSUNnZ2VDQXJJRE11TlNBcExDQjVJQ2tnS1RzS0NRbHRZWFEwSUdKdmJtVWdQU0J0WVhRMEtDQjJNU3dnZGpJc0lIWXpMQ0IyTkNBcE93b0pDWEpsZEhWeWJpQmliMjVsT3dvSmZRb2paVzVrYVdaZ0xDQnNaeUE5SUdBamFXWmtaV1lnVlZORlgxTkxTVTVPU1U1SENnbDJaV00wSUhOcmFXNVdaWEowWlhnZ1BTQmlhVzVrVFdGMGNtbDRJQ29nZG1Wak5DZ2dkSEpoYm5ObWIzSnRaV1FzSURFdU1DQXBPd29KZG1Wak5DQnphMmx1Ym1Wa0lEMGdkbVZqTkNnZ01DNHdJQ2s3Q2dsemEybHVibVZrSUNzOUlHSnZibVZOWVhSWUlDb2djMnRwYmxabGNuUmxlQ0FxSUhOcmFXNVhaV2xuYUhRdWVEc0tDWE5yYVc1dVpXUWdLejBnWW05dVpVMWhkRmtnS2lCemEybHVWbVZ5ZEdWNElDb2djMnRwYmxkbGFXZG9kQzU1T3dvSmMydHBibTVsWkNBclBTQmliMjVsVFdGMFdpQXFJSE5yYVc1V1pYSjBaWGdnS2lCemEybHVWMlZwWjJoMExubzdDZ2x6YTJsdWJtVmtJQ3M5SUdKdmJtVk5ZWFJYSUNvZ2MydHBibFpsY25SbGVDQXFJSE5yYVc1WFpXbG5hSFF1ZHpzS0NYUnlZVzV6Wm05eWJXVmtJRDBnS0NCaWFXNWtUV0YwY21sNFNXNTJaWEp6WlNBcUlITnJhVzV1WldRZ0tTNTRlWG83Q2lObGJtUnBabUFzSUdobklEMGdZQ05wWm1SbFppQlZVMFZmVTB0SlRrNUpUa2NLQ1cxaGREUWdjMnRwYmsxaGRISnBlQ0E5SUcxaGREUW9JREF1TUNBcE93b0pjMnRwYmsxaGRISnBlQ0FyUFNCemEybHVWMlZwWjJoMExuZ2dLaUJpYjI1bFRXRjBXRHNLQ1hOcmFXNU5ZWFJ5YVhnZ0t6MGdjMnRwYmxkbGFXZG9kQzU1SUNvZ1ltOXVaVTFoZEZrN0NnbHphMmx1VFdGMGNtbDRJQ3M5SUhOcmFXNVhaV2xuYUhRdWVpQXFJR0p2Ym1WTllYUmFPd29KYzJ0cGJrMWhkSEpwZUNBclBTQnphMmx1VjJWcFoyaDBMbmNnS2lCaWIyNWxUV0YwVnpzS0NYTnJhVzVOWVhSeWFYZ2dQU0JpYVc1a1RXRjBjbWw0U1c1MlpYSnpaU0FxSUhOcmFXNU5ZWFJ5YVhnZ0tpQmlhVzVrVFdGMGNtbDRPd29KYjJKcVpXTjBUbTl5YldGc0lEMGdkbVZqTkNnZ2MydHBiazFoZEhKcGVDQXFJSFpsWXpRb0lHOWlhbVZqZEU1dmNtMWhiQ3dnTUM0d0lDa2dLUzU0ZVhvN0Nna2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDUWx2WW1wbFkzUlVZVzVuWlc1MElEMGdkbVZqTkNnZ2MydHBiazFoZEhKcGVDQXFJSFpsWXpRb0lHOWlhbVZqZEZSaGJtZGxiblFzSURBdU1DQXBJQ2t1ZUhsNk93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lIVm5JRDBnWUdac2IyRjBJSE53WldOMWJHRnlVM1J5Wlc1bmRHZzdDaU5wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpOUVZBS0NYWmxZelFnZEdWNFpXeFRjR1ZqZFd4aGNpQTlJSFJsZUhSMWNtVXlSQ2dnYzNCbFkzVnNZWEpOWVhBc0lIWlRjR1ZqZFd4aGNrMWhjRlYySUNrN0NnbHpjR1ZqZFd4aGNsTjBjbVZ1WjNSb0lEMGdkR1Y0Wld4VGNHVmpkV3hoY2k1eU93b2paV3h6WlFvSmMzQmxZM1ZzWVhKVGRISmxibWQwYUNBOUlERXVNRHNLSTJWdVpHbG1ZQ3dnWkdjZ1BTQmdJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVazFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MzQmxZM1ZzWVhKTllYQTdDaU5sYm1ScFptQXNJR1puSUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JVVDA1RlgwMUJVRkJKVGtjZ0tRb0paMnhmUm5KaFowTnZiRzl5TG5KbllpQTlJSFJ2Ym1WTllYQndhVzVuS0NCbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUNrN0NpTmxibVJwWm1Bc0lIQm5JRDBnWUNOcFptNWtaV1lnYzJGMGRYSmhkR1VLSTJSbFptbHVaU0J6WVhSMWNtRjBaU2dnWVNBcElHTnNZVzF3S0NCaExDQXdMakFzSURFdU1DQXBDaU5sYm1ScFpncDFibWxtYjNKdElHWnNiMkYwSUhSdmJtVk5ZWEJ3YVc1blJYaHdiM04xY21VN0NuWmxZek1nVEdsdVpXRnlWRzl1WlUxaGNIQnBibWNvSUhabFl6TWdZMjlzYjNJZ0tTQjdDZ2x5WlhSMWNtNGdjMkYwZFhKaGRHVW9JSFJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVVnS2lCamIyeHZjaUFwT3dwOUNuWmxZek1nVW1WcGJtaGhjbVJVYjI1bFRXRndjR2x1WnlnZ2RtVmpNeUJqYjJ4dmNpQXBJSHNLQ1dOdmJHOXlJQ285SUhSdmJtVk5ZWEJ3YVc1blJYaHdiM04xY21VN0NnbHlaWFIxY200Z2MyRjBkWEpoZEdVb0lHTnZiRzl5SUM4Z0tDQjJaV016S0NBeExqQWdLU0FySUdOdmJHOXlJQ2tnS1RzS2ZRcDJaV016SUU5d2RHbHRhWHBsWkVOcGJtVnZibFJ2Ym1WTllYQndhVzVuS0NCMlpXTXpJR052Ykc5eUlDa2dld29KWTI5c2IzSWdLajBnZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlRzS0NXTnZiRzl5SUQwZ2JXRjRLQ0IyWldNektDQXdMakFnS1N3Z1kyOXNiM0lnTFNBd0xqQXdOQ0FwT3dvSmNtVjBkWEp1SUhCdmR5Z2dLQ0JqYjJ4dmNpQXFJQ2dnTmk0eUlDb2dZMjlzYjNJZ0t5QXdMalVnS1NBcElDOGdLQ0JqYjJ4dmNpQXFJQ2dnTmk0eUlDb2dZMjlzYjNJZ0t5QXhMamNnS1NBcklEQXVNRFlnS1N3Z2RtVmpNeWdnTWk0eUlDa2dLVHNLZlFwMlpXTXpJRkpTVkVGdVpFOUVWRVpwZENnZ2RtVmpNeUIySUNrZ2V3b0pkbVZqTXlCaElEMGdkaUFxSUNnZ2RpQXJJREF1TURJME5UYzROaUFwSUMwZ01DNHdNREF3T1RBMU16YzdDZ2wyWldNeklHSWdQU0IySUNvZ0tDQXdMams0TXpjeU9TQXFJSFlnS3lBd0xqUXpNamsxTVRBZ0tTQXJJREF1TWpNNE1EZ3hPd29KY21WMGRYSnVJR0VnTHlCaU93cDlDblpsWXpNZ1FVTkZVMFpwYkcxcFkxUnZibVZOWVhCd2FXNW5LQ0IyWldNeklHTnZiRzl5SUNrZ2V3b0pZMjl1YzNRZ2JXRjBNeUJCUTBWVFNXNXdkWFJOWVhRZ1BTQnRZWFF6S0FvSkNYWmxZek1vSURBdU5UazNNVGtzSURBdU1EYzJNREFzSURBdU1ESTROREFnS1N3SkNYWmxZek1vSURBdU16VTBOVGdzSURBdU9UQTRNelFzSURBdU1UTXpPRE1nS1N3S0NRbDJaV016S0NBd0xqQTBPREl6TENBd0xqQXhOVFkyTENBd0xqZ3pOemMzSUNrS0NTazdDZ2xqYjI1emRDQnRZWFF6SUVGRFJWTlBkWFJ3ZFhSTllYUWdQU0J0WVhRektBb0pDWFpsWXpNb0lDQXhMall3TkRjMUxDQXRNQzR4TURJd09Dd2dMVEF1TURBek1qY2dLU3dKQ1habFl6TW9JQzB3TGpVek1UQTRMQ0FnTVM0eE1EZ3hNeXdnTFRBdU1EY3lOellnS1N3S0NRbDJaV016S0NBdE1DNHdOek0yTnl3Z0xUQXVNREEyTURVc0lDQXhMakEzTmpBeUlDa0tDU2s3Q2dsamIyeHZjaUFxUFNCMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbElDOGdNQzQyT3dvSlkyOXNiM0lnUFNCQlEwVlRTVzV3ZFhSTllYUWdLaUJqYjJ4dmNqc0tDV052Ykc5eUlEMGdVbEpVUVc1a1QwUlVSbWwwS0NCamIyeHZjaUFwT3dvSlkyOXNiM0lnUFNCQlEwVlRUM1YwY0hWMFRXRjBJQ29nWTI5c2IzSTdDZ2x5WlhSMWNtNGdjMkYwZFhKaGRHVW9JR052Ykc5eUlDazdDbjBLZG1Wak15QkRkWE4wYjIxVWIyNWxUV0Z3Y0dsdVp5Z2dkbVZqTXlCamIyeHZjaUFwSUhzZ2NtVjBkWEp1SUdOdmJHOXlPeUI5WUN3Z2JXY2dQU0JnSTJsbVpHVm1JRlZUUlY5VVVrRk9VMDFKVTFOSlQwNEtDVzFoZEdWeWFXRnNMblJ5WVc1emJXbHpjMmx2YmlBOUlIUnlZVzV6YldsemMybHZianNLQ1cxaGRHVnlhV0ZzTG5SeVlXNXpiV2x6YzJsdmJrRnNjR2hoSUQwZ01TNHdPd29KYldGMFpYSnBZV3d1ZEdocFkydHVaWE56SUQwZ2RHaHBZMnR1WlhOek93b0piV0YwWlhKcFlXd3VZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0E5SUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVN0NnbHRZWFJsY21saGJDNWhkSFJsYm5WaGRHbHZia052Ykc5eUlEMGdZWFIwWlc1MVlYUnBiMjVEYjJ4dmNqc0tDU05wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T1RVRlFDZ2tKYldGMFpYSnBZV3d1ZEhKaGJuTnRhWE56YVc5dUlDbzlJSFJsZUhSMWNtVXlSQ2dnZEhKaGJuTnRhWE56YVc5dVRXRndMQ0IyVkhKaGJuTnRhWE56YVc5dVRXRndWWFlnS1M1eU93b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUFvSkNXMWhkR1Z5YVdGc0xuUm9hV05yYm1WemN5QXFQU0IwWlhoMGRYSmxNa1FvSUhSb2FXTnJibVZ6YzAxaGNDd2dkbFJvYVdOcmJtVnpjMDFoY0ZWMklDa3VaenNLQ1NObGJtUnBaZ29KZG1Wak15QndiM01nUFNCMlYyOXliR1JRYjNOcGRHbHZianNLQ1habFl6TWdkaUE5SUc1dmNtMWhiR2w2WlNnZ1kyRnRaWEpoVUc5emFYUnBiMjRnTFNCd2IzTWdLVHNLQ1habFl6TWdiaUE5SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUc1dmNtMWhiQ3dnZG1sbGQwMWhkSEpwZUNBcE93b0pkbVZqTkNCMGNtRnVjMjFwZEhSbFpDQTlJR2RsZEVsQ1RGWnZiSFZ0WlZKbFpuSmhZM1JwYjI0b0Nna0piaXdnZGl3Z2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOekxDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lzSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSXNJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlSamt3TEFvSkNYQnZjeXdnYlc5a1pXeE5ZWFJ5YVhnc0lIWnBaWGROWVhSeWFYZ3NJSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3NJRzFoZEdWeWFXRnNMbWx2Y2l3Z2JXRjBaWEpwWVd3dWRHaHBZMnR1WlhOekxBb0pDVzFoZEdWeWFXRnNMbUYwZEdWdWRXRjBhVzl1UTI5c2IzSXNJRzFoZEdWeWFXRnNMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnS1RzS0NXMWhkR1Z5YVdGc0xuUnlZVzV6YldsemMybHZia0ZzY0doaElEMGdiV2w0S0NCdFlYUmxjbWxoYkM1MGNtRnVjMjFwYzNOcGIyNUJiSEJvWVN3Z2RISmhibk50YVhSMFpXUXVZU3dnYldGMFpYSnBZV3d1ZEhKaGJuTnRhWE56YVc5dUlDazdDZ2wwYjNSaGJFUnBabVoxYzJVZ1BTQnRhWGdvSUhSdmRHRnNSR2xtWm5WelpTd2dkSEpoYm5OdGFYUjBaV1F1Y21kaUxDQnRZWFJsY21saGJDNTBjbUZ1YzIxcGMzTnBiMjRnS1RzS0kyVnVaR2xtWUN3Z1oyY2dQU0JnSTJsbVpHVm1JRlZUUlY5VVVrRk9VMDFKVTFOSlQwNEtDWFZ1YVdadmNtMGdabXh2WVhRZ2RISmhibk50YVhOemFXOXVPd29KZFc1cFptOXliU0JtYkc5aGRDQjBhR2xqYTI1bGMzTTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVTdDZ2wxYm1sbWIzSnRJSFpsWXpNZ1lYUjBaVzUxWVhScGIyNURiMnh2Y2pzS0NTTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPVFVGUUNna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdkSEpoYm5OdGFYTnphVzl1VFdGd093b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUm9hV05yYm1WemMwMWhjRHNLQ1NObGJtUnBaZ29KZFc1cFptOXliU0IyWldNeUlIUnlZVzV6YldsemMybHZibE5oYlhCc1pYSlRhWHBsT3dvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNrMWhjRHNLQ1hWdWFXWnZjbTBnYldGME5DQnRiMlJsYkUxaGRISnBlRHNLQ1hWdWFXWnZjbTBnYldGME5DQndjbTlxWldOMGFXOXVUV0YwY21sNE93b0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29KWm14dllYUWdkekFvSUdac2IyRjBJR0VnS1NCN0Nna0pjbVYwZFhKdUlDZ2dNUzR3SUM4Z05pNHdJQ2tnS2lBb0lHRWdLaUFvSUdFZ0tpQW9JQzBnWVNBcklETXVNQ0FwSUMwZ015NHdJQ2tnS3lBeExqQWdLVHNLQ1gwS0NXWnNiMkYwSUhjeEtDQm1iRzloZENCaElDa2dld29KQ1hKbGRIVnliaUFvSURFdU1DQXZJRFl1TUNBcElDb2dLQ0JoSUNvZ0lHRWdLaUFvSURNdU1DQXFJR0VnTFNBMkxqQWdLU0FySURRdU1DQXBPd29KZlFvSlpteHZZWFFnZHpJb0lHWnNiMkYwSUdFZ0tYc0tDUWx5WlhSMWNtNGdLQ0F4TGpBZ0x5QTJMakFnS1NBcUlDZ2dZU0FxSUNnZ1lTQXFJQ2dnTFNBekxqQWdLaUJoSUNzZ015NHdJQ2tnS3lBekxqQWdLU0FySURFdU1DQXBPd29KZlFvSlpteHZZWFFnZHpNb0lHWnNiMkYwSUdFZ0tTQjdDZ2tKY21WMGRYSnVJQ2dnTVM0d0lDOGdOaTR3SUNrZ0tpQW9JR0VnS2lCaElDb2dZU0FwT3dvSmZRb0pabXh2WVhRZ1p6QW9JR1pzYjJGMElHRWdLU0I3Q2drSmNtVjBkWEp1SUhjd0tDQmhJQ2tnS3lCM01TZ2dZU0FwT3dvSmZRb0pabXh2WVhRZ1p6RW9JR1pzYjJGMElHRWdLU0I3Q2drSmNtVjBkWEp1SUhjeUtDQmhJQ2tnS3lCM015Z2dZU0FwT3dvSmZRb0pabXh2WVhRZ2FEQW9JR1pzYjJGMElHRWdLU0I3Q2drSmNtVjBkWEp1SUMwZ01TNHdJQ3NnZHpFb0lHRWdLU0F2SUNnZ2R6QW9JR0VnS1NBcklIY3hLQ0JoSUNrZ0tUc0tDWDBLQ1dac2IyRjBJR2d4S0NCbWJHOWhkQ0JoSUNrZ2V3b0pDWEpsZEhWeWJpQXhMakFnS3lCM015Z2dZU0FwSUM4Z0tDQjNNaWdnWVNBcElDc2dkek1vSUdFZ0tTQXBPd29KZlFvSmRtVmpOQ0JpYVdOMVltbGpLQ0J6WVcxd2JHVnlNa1FnZEdWNExDQjJaV015SUhWMkxDQjJaV00wSUhSbGVHVnNVMmw2WlN3Z1pteHZZWFFnYkc5a0lDa2dld29KQ1hWMklEMGdkWFlnS2lCMFpYaGxiRk5wZW1VdWVuY2dLeUF3TGpVN0Nna0pkbVZqTWlCcGRYWWdQU0JtYkc5dmNpZ2dkWFlnS1RzS0NRbDJaV015SUdaMWRpQTlJR1p5WVdOMEtDQjFkaUFwT3dvSkNXWnNiMkYwSUdjd2VDQTlJR2N3S0NCbWRYWXVlQ0FwT3dvSkNXWnNiMkYwSUdjeGVDQTlJR2N4S0NCbWRYWXVlQ0FwT3dvSkNXWnNiMkYwSUdnd2VDQTlJR2d3S0NCbWRYWXVlQ0FwT3dvSkNXWnNiMkYwSUdneGVDQTlJR2d4S0NCbWRYWXVlQ0FwT3dvSkNXWnNiMkYwSUdnd2VTQTlJR2d3S0NCbWRYWXVlU0FwT3dvSkNXWnNiMkYwSUdneGVTQTlJR2d4S0NCbWRYWXVlU0FwT3dvSkNYWmxZeklnY0RBZ1BTQW9JSFpsWXpJb0lHbDFkaTU0SUNzZ2FEQjRMQ0JwZFhZdWVTQXJJR2d3ZVNBcElDMGdNQzQxSUNrZ0tpQjBaWGhsYkZOcGVtVXVlSGs3Q2drSmRtVmpNaUJ3TVNBOUlDZ2dkbVZqTWlnZ2FYVjJMbmdnS3lCb01YZ3NJR2wxZGk1NUlDc2dhREI1SUNrZ0xTQXdMalVnS1NBcUlIUmxlR1ZzVTJsNlpTNTRlVHNLQ1FsMlpXTXlJSEF5SUQwZ0tDQjJaV015S0NCcGRYWXVlQ0FySUdnd2VDd2dhWFYyTG5rZ0t5Qm9NWGtnS1NBdElEQXVOU0FwSUNvZ2RHVjRaV3hUYVhwbExuaDVPd29KQ1habFl6SWdjRE1nUFNBb0lIWmxZeklvSUdsMWRpNTRJQ3NnYURGNExDQnBkWFl1ZVNBcklHZ3hlU0FwSUMwZ01DNDFJQ2tnS2lCMFpYaGxiRk5wZW1VdWVIazdDZ2tKY21WMGRYSnVJR2N3S0NCbWRYWXVlU0FwSUNvZ0tDQm5NSGdnS2lCMFpYaDBkWEpsVEc5a0tDQjBaWGdzSUhBd0xDQnNiMlFnS1NBcklHY3hlQ0FxSUhSbGVIUjFjbVZNYjJRb0lIUmxlQ3dnY0RFc0lHeHZaQ0FwSUNrZ0t3b0pDUWxuTVNnZ1puVjJMbmtnS1NBcUlDZ2daekI0SUNvZ2RHVjRkSFZ5WlV4dlpDZ2dkR1Y0TENCd01pd2diRzlrSUNrZ0t5Qm5NWGdnS2lCMFpYaDBkWEpsVEc5a0tDQjBaWGdzSUhBekxDQnNiMlFnS1NBcE93b0pmUW9KZG1Wak5DQjBaWGgwZFhKbFFtbGpkV0pwWXlnZ2MyRnRjR3hsY2pKRUlITmhiWEJzWlhJc0lIWmxZeklnZFhZc0lHWnNiMkYwSUd4dlpDQXBJSHNLQ1FsMlpXTXlJR1pNYjJSVGFYcGxJRDBnZG1Wak1pZ2dkR1Y0ZEhWeVpWTnBlbVVvSUhOaGJYQnNaWElzSUdsdWRDZ2diRzlrSUNrZ0tTQXBPd29KQ1habFl6SWdZMHh2WkZOcGVtVWdQU0IyWldNeUtDQjBaWGgwZFhKbFUybDZaU2dnYzJGdGNHeGxjaXdnYVc1MEtDQnNiMlFnS3lBeExqQWdLU0FwSUNrN0Nna0pkbVZqTWlCbVRHOWtVMmw2WlVsdWRpQTlJREV1TUNBdklHWk1iMlJUYVhwbE93b0pDWFpsWXpJZ1kweHZaRk5wZW1WSmJuWWdQU0F4TGpBZ0x5QmpURzlrVTJsNlpUc0tDUWwyWldNMElHWlRZVzF3YkdVZ1BTQmlhV04xWW1saktDQnpZVzF3YkdWeUxDQjFkaXdnZG1Wak5DZ2daa3h2WkZOcGVtVkpibllzSUdaTWIyUlRhWHBsSUNrc0lHWnNiMjl5S0NCc2IyUWdLU0FwT3dvSkNYWmxZelFnWTFOaGJYQnNaU0E5SUdKcFkzVmlhV01vSUhOaGJYQnNaWElzSUhWMkxDQjJaV00wS0NCalRHOWtVMmw2WlVsdWRpd2dZMHh2WkZOcGVtVWdLU3dnWTJWcGJDZ2diRzlrSUNrZ0tUc0tDUWx5WlhSMWNtNGdiV2w0S0NCbVUyRnRjR3hsTENCalUyRnRjR3hsTENCbWNtRmpkQ2dnYkc5a0lDa2dLVHNLQ1gwS0NYWmxZek1nWjJWMFZtOXNkVzFsVkhKaGJuTnRhWE56YVc5dVVtRjVLQ0JqYjI1emRDQnBiaUIyWldNeklHNHNJR052Ym5OMElHbHVJSFpsWXpNZ2Rpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2RHaHBZMnR1WlhOekxDQmpiMjV6ZENCcGJpQm1iRzloZENCcGIzSXNJR052Ym5OMElHbHVJRzFoZERRZ2JXOWtaV3hOWVhSeWFYZ2dLU0I3Q2drSmRtVmpNeUJ5WldaeVlXTjBhVzl1Vm1WamRHOXlJRDBnY21WbWNtRmpkQ2dnTFNCMkxDQnViM0p0WVd4cGVtVW9JRzRnS1N3Z01TNHdJQzhnYVc5eUlDazdDZ2tKZG1Wak15QnRiMlJsYkZOallXeGxPd29KQ1cxdlpHVnNVMk5oYkdVdWVDQTlJR3hsYm1kMGFDZ2dkbVZqTXlnZ2JXOWtaV3hOWVhSeWFYaGJJREFnWFM1NGVYb2dLU0FwT3dvSkNXMXZaR1ZzVTJOaGJHVXVlU0E5SUd4bGJtZDBhQ2dnZG1Wak15Z2diVzlrWld4TllYUnlhWGhiSURFZ1hTNTRlWG9nS1NBcE93b0pDVzF2WkdWc1UyTmhiR1V1ZWlBOUlHeGxibWQwYUNnZ2RtVmpNeWdnYlc5a1pXeE5ZWFJ5YVhoYklESWdYUzU0ZVhvZ0tTQXBPd29KQ1hKbGRIVnliaUJ1YjNKdFlXeHBlbVVvSUhKbFpuSmhZM1JwYjI1V1pXTjBiM0lnS1NBcUlIUm9hV05yYm1WemN5QXFJRzF2WkdWc1UyTmhiR1U3Q2dsOUNnbG1iRzloZENCaGNIQnNlVWx2Y2xSdlVtOTFaMmh1WlhOektDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdsdmNpQXBJSHNLQ1FseVpYUjFjbTRnY205MVoyaHVaWE56SUNvZ1kyeGhiWEFvSUdsdmNpQXFJREl1TUNBdElESXVNQ3dnTUM0d0xDQXhMakFnS1RzS0NYMEtDWFpsWXpRZ1oyVjBWSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxLQ0JqYjI1emRDQnBiaUIyWldNeUlHWnlZV2REYjI5eVpDd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOekxDQmpiMjV6ZENCcGJpQm1iRzloZENCcGIzSWdLU0I3Q2drSlpteHZZWFFnYkc5a0lEMGdiRzluTWlnZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNsTnBlbVV1ZUNBcElDb2dZWEJ3YkhsSmIzSlViMUp2ZFdkb2JtVnpjeWdnY205MVoyaHVaWE56TENCcGIzSWdLVHNLQ1FseVpYUjFjbTRnZEdWNGRIVnlaVUpwWTNWaWFXTW9JSFJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpOWVhBc0lHWnlZV2REYjI5eVpDNTRlU3dnYkc5a0lDazdDZ2w5Q2dsMlpXTXpJSFp2YkhWdFpVRjBkR1Z1ZFdGMGFXOXVLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQjBjbUZ1YzIxcGMzTnBiMjVFYVhOMFlXNWpaU3dnWTI5dWMzUWdhVzRnZG1Wak15QmhkSFJsYm5WaGRHbHZia052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElDa2dld29KQ1dsbUlDZ2dhWE5wYm1Zb0lHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdLU0FwSUhzS0NRa0pjbVYwZFhKdUlIWmxZek1vSURFdU1DQXBPd29KQ1gwZ1pXeHpaU0I3Q2drSkNYWmxZek1nWVhSMFpXNTFZWFJwYjI1RGIyVm1abWxqYVdWdWRDQTlJQzFzYjJjb0lHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJZ0tTQXZJR0YwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlU3Q2drSkNYWmxZek1nZEhKaGJuTnRhWFIwWVc1alpTQTlJR1Y0Y0NnZ0xTQmhkSFJsYm5WaGRHbHZia052WldabWFXTnBaVzUwSUNvZ2RISmhibk50YVhOemFXOXVSR2x6ZEdGdVkyVWdLVHNKQ1FseVpYUjFjbTRnZEhKaGJuTnRhWFIwWVc1alpUc0tDUWw5Q2dsOUNnbDJaV00wSUdkbGRFbENURlp2YkhWdFpWSmxabkpoWTNScGIyNG9JR052Ym5OMElHbHVJSFpsWXpNZ2Jpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMkxDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHTnZibk4wSUdsdUlIWmxZek1nWkdsbVpuVnpaVU52Ykc5eUxBb0pDV052Ym5OMElHbHVJSFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjM0JsWTNWc1lYSkdPVEFzSUdOdmJuTjBJR2x1SUhabFl6TWdjRzl6YVhScGIyNHNJR052Ym5OMElHbHVJRzFoZERRZ2JXOWtaV3hOWVhSeWFYZ3NDZ2tKWTI5dWMzUWdhVzRnYldGME5DQjJhV1YzVFdGMGNtbDRMQ0JqYjI1emRDQnBiaUJ0WVhRMElIQnliMnBOWVhSeWFYZ3NJR052Ym5OMElHbHVJR1pzYjJGMElHbHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdkR2hwWTJ0dVpYTnpMQW9KQ1dOdmJuTjBJR2x1SUhabFl6TWdZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQXBJSHNLQ1FsMlpXTXpJSFJ5WVc1emJXbHpjMmx2YmxKaGVTQTlJR2RsZEZadmJIVnRaVlJ5WVc1emJXbHpjMmx2YmxKaGVTZ2diaXdnZGl3Z2RHaHBZMnR1WlhOekxDQnBiM0lzSUcxdlpHVnNUV0YwY21sNElDazdDZ2tKZG1Wak15QnlaV1p5WVdOMFpXUlNZWGxGZUdsMElEMGdjRzl6YVhScGIyNGdLeUIwY21GdWMyMXBjM05wYjI1U1lYazdDZ2tKZG1Wak5DQnVaR05RYjNNZ1BTQndjbTlxVFdGMGNtbDRJQ29nZG1sbGQwMWhkSEpwZUNBcUlIWmxZelFvSUhKbFpuSmhZM1JsWkZKaGVVVjRhWFFzSURFdU1DQXBPd29KQ1habFl6SWdjbVZtY21GamRHbHZia052YjNKa2N5QTlJRzVrWTFCdmN5NTRlU0F2SUc1a1kxQnZjeTUzT3dvSkNYSmxabkpoWTNScGIyNURiMjl5WkhNZ0t6MGdNUzR3T3dvSkNYSmxabkpoWTNScGIyNURiMjl5WkhNZ0x6MGdNaTR3T3dvSkNYWmxZelFnZEhKaGJuTnRhWFIwWldSTWFXZG9kQ0E5SUdkbGRGUnlZVzV6YldsemMybHZibE5oYlhCc1pTZ2djbVZtY21GamRHbHZia052YjNKa2N5d2djbTkxWjJodVpYTnpMQ0JwYjNJZ0tUc0tDUWwyWldNeklIUnlZVzV6YldsMGRHRnVZMlVnUFNCa2FXWm1kWE5sUTI5c2IzSWdLaUIyYjJ4MWJXVkJkSFJsYm5WaGRHbHZiaWdnYkdWdVozUm9LQ0IwY21GdWMyMXBjM05wYjI1U1lYa2dLU3dnWVhSMFpXNTFZWFJwYjI1RGIyeHZjaXdnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBcE93b0pDWFpsWXpNZ1lYUjBaVzUxWVhSbFpFTnZiRzl5SUQwZ2RISmhibk50YVhSMFlXNWpaU0FxSUhSeVlXNXpiV2wwZEdWa1RHbG5hSFF1Y21kaU93b0pDWFpsWXpNZ1JpQTlJRVZ1ZG1seWIyNXRaVzUwUWxKRVJpZ2diaXdnZGl3Z2MzQmxZM1ZzWVhKRGIyeHZjaXdnYzNCbFkzVnNZWEpHT1RBc0lISnZkV2RvYm1WemN5QXBPd29KQ1dac2IyRjBJSFJ5WVc1emJXbDBkR0Z1WTJWR1lXTjBiM0lnUFNBb0lIUnlZVzV6YldsMGRHRnVZMlV1Y2lBcklIUnlZVzV6YldsMGRHRnVZMlV1WnlBcklIUnlZVzV6YldsMGRHRnVZMlV1WWlBcElDOGdNeTR3T3dvSkNYSmxkSFZ5YmlCMlpXTTBLQ0FvSURFdU1DQXRJRVlnS1NBcUlHRjBkR1Z1ZFdGMFpXUkRiMnh2Y2l3Z01TNHdJQzBnS0NBeExqQWdMU0IwY21GdWMyMXBkSFJsWkV4cFoyaDBMbUVnS1NBcUlIUnlZVzV6YldsMGRHRnVZMlZHWVdOMGIzSWdLVHNLQ1gwS0kyVnVaR2xtWUN3Z1gyY2dQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlWVmlBcElIeDhJR1JsWm1sdVpXUW9JRlZUUlY5QlRrbFRUMVJTVDFCWklDa0tDWFpoY25scGJtY2dkbVZqTWlCMlZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMDFCVUFvSmRtRnllV2x1WnlCMlpXTXlJSFpOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVXhRU0VGTlFWQUtDWFpoY25scGJtY2dkbVZqTWlCMlFXeHdhR0ZOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZURWxIU0ZSTlFWQUtDWFpoY25scGJtY2dkbVZqTWlCMlRHbG5hSFJOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVTlOUVZBS0NYWmhjbmxwYm1jZ2RtVmpNaUIyUVc5TllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUWxWTlVFMUJVQW9KZG1GeWVXbHVaeUIyWldNeUlIWkNkVzF3VFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMDVQVWsxQlRFMUJVQW9KZG1GeWVXbHVaeUIyWldNeUlIWk9iM0p0WVd4TllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUlUxSlUxTkpWa1ZOUVZBS0NYWmhjbmxwYm1jZ2RtVmpNaUIyUlcxcGMzTnBkbVZOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZUVVZVUVV4T1JWTlRUVUZRQ2dsMllYSjVhVzVuSUhabFl6SWdkazFsZEdGc2JtVnpjMDFoY0ZWMk93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVNUMVZIU0U1RlUxTk5RVkFLQ1haaGNubHBibWNnZG1Wak1pQjJVbTkxWjJodVpYTnpUV0Z3VlhZN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwRk9TVk5QVkZKUFVGbE5RVkFLQ1haaGNubHBibWNnZG1Wak1pQjJRVzVwYzI5MGNtOXdlVTFoY0ZWMk93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUk5RVkFLQ1haaGNubHBibWNnZG1Wak1pQjJRMnhsWVhKamIyRjBUV0Z3VlhZN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQUtDWFpoY25scGJtY2dkbVZqTWlCMlEyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWRjlTVDFWSFNFNUZVMU5OUVZBS0NYWmhjbmxwYm1jZ2RtVmpNaUIyUTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMGxTU1VSRlUwTkZUa05GVFVGUUNnbDJZWEo1YVc1bklIWmxZeklnZGtseWFXUmxjMk5sYm1ObFRXRndWWFk3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBsU1NVUkZVME5GVGtORlgxUklTVU5MVGtWVFUwMUJVQW9KZG1GeWVXbHVaeUIyWldNeUlIWkpjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0ZWMk93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRTRVZGVGw5RFQweFBVazFCVUFvSmRtRnllV2x1WnlCMlpXTXlJSFpUYUdWbGJrTnZiRzl5VFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMU5JUlVWT1gxSlBWVWRJVGtWVFUwMUJVQW9KZG1GeWVXbHVaeUIyWldNeUlIWlRhR1ZsYmxKdmRXZG9ibVZ6YzAxaGNGVjJPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVazFCVUFvSmRtRnllV2x1WnlCMlpXTXlJSFpUY0dWamRXeGhjazFoY0ZWMk93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRVRVZEVlV4QlVsOURUMHhQVWsxQlVBb0pkbUZ5ZVdsdVp5QjJaV015SUhaVGNHVmpkV3hoY2tOdmJHOXlUV0Z3VlhZN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgxTlFSVU5WVEVGU1gwbE9WRVZPVTBsVVdVMUJVQW9KZG1GeWVXbHVaeUIyWldNeUlIWlRjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjRlYyT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VVVrRk9VMDFKVTFOSlQwNU5RVkFLQ1hWdWFXWnZjbTBnYldGME15QjBjbUZ1YzIxcGMzTnBiMjVOWVhCVWNtRnVjMlp2Y20wN0NnbDJZWEo1YVc1bklIWmxZeklnZGxSeVlXNXpiV2x6YzJsdmJrMWhjRlYyT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VVNFbERTMDVGVTFOTlFWQUtDWFZ1YVdadmNtMGdiV0YwTXlCMGFHbGphMjVsYzNOTllYQlVjbUZ1YzJadmNtMDdDZ2wyWVhKNWFXNW5JSFpsWXpJZ2RsUm9hV05yYm1WemMwMWhjRlYyT3dvalpXNWthV1pnTENCNFp5QTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMVZXSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBGT1NWTlBWRkpQVUZrZ0tRb0pkbUZ5ZVdsdVp5QjJaV015SUhaVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZUVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdiV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVXhRU0VGTlFWQUtDWFZ1YVdadmNtMGdiV0YwTXlCaGJIQm9ZVTFoY0ZSeVlXNXpabTl5YlRzS0NYWmhjbmxwYm1jZ2RtVmpNaUIyUVd4d2FHRk5ZWEJWZGpzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlRFbEhTRlJOUVZBS0NYVnVhV1p2Y20wZ2JXRjBNeUJzYVdkb2RFMWhjRlJ5WVc1elptOXliVHNLQ1haaGNubHBibWNnZG1Wak1pQjJUR2xuYUhSTllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUVU5TlFWQUtDWFZ1YVdadmNtMGdiV0YwTXlCaGIwMWhjRlJ5WVc1elptOXliVHNLQ1haaGNubHBibWNnZG1Wak1pQjJRVzlOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRbFZOVUUxQlVBb0pkVzVwWm05eWJTQnRZWFF6SUdKMWJYQk5ZWEJVY21GdWMyWnZjbTA3Q2dsMllYSjVhVzVuSUhabFl6SWdka0oxYlhCTllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVGs5U1RVRk1UVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdibTl5YldGc1RXRndWSEpoYm5ObWIzSnRPd29KZG1GeWVXbHVaeUIyWldNeUlIWk9iM0p0WVd4TllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUkVsVFVFeEJRMFZOUlU1VVRVRlFDZ2wxYm1sbWIzSnRJRzFoZERNZ1pHbHpjR3hoWTJWdFpXNTBUV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpFYVhOd2JHRmpaVzFsYm5STllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUlUxSlUxTkpWa1ZOUVZBS0NYVnVhV1p2Y20wZ2JXRjBNeUJsYldsemMybDJaVTFoY0ZSeVlXNXpabTl5YlRzS0NYWmhjbmxwYm1jZ2RtVmpNaUIyUlcxcGMzTnBkbVZOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZUVVZVUVV4T1JWTlRUVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdiV1YwWVd4dVpYTnpUV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpOWlhSaGJHNWxjM05OWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZVazlWUjBoT1JWTlRUVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdjbTkxWjJodVpYTnpUV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpTYjNWbmFHNWxjM05OWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVTVKVTA5VVVrOVFXVTFCVUFvSmRXNXBabTl5YlNCdFlYUXpJR0Z1YVhOdmRISnZjSGxOWVhCVWNtRnVjMlp2Y20wN0NnbDJZWEo1YVc1bklIWmxZeklnZGtGdWFYTnZkSEp2Y0hsTllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVVFVGUUNnbDFibWxtYjNKdElHMWhkRE1nWTJ4bFlYSmpiMkYwVFdGd1ZISmhibk5tYjNKdE93b0pkbUZ5ZVdsdVp5QjJaV015SUhaRGJHVmhjbU52WVhSTllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUFvSmRXNXBabTl5YlNCdFlYUXpJR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRlJ5WVc1elptOXliVHNLQ1haaGNubHBibWNnZG1Wak1pQjJRMnhsWVhKamIyRjBUbTl5YldGc1RXRndWWFk3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkY5U1QxVkhTRTVGVTFOTlFWQUtDWFZ1YVdadmNtMGdiV0YwTXlCamJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQlVjbUZ1YzJadmNtMDdDZ2wyWVhKNWFXNW5JSFpsWXpJZ2RrTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjRlYyT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VFNFVkZUbDlEVDB4UFVrMUJVQW9KZFc1cFptOXliU0J0WVhReklITm9aV1Z1UTI5c2IzSk5ZWEJVY21GdWMyWnZjbTA3Q2dsMllYSjVhVzVuSUhabFl6SWdkbE5vWldWdVEyOXNiM0pOWVhCVmRqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZVMGhGUlU1ZlVrOVZSMGhPUlZOVFRVRlFDZ2wxYm1sbWIzSnRJRzFoZERNZ2MyaGxaVzVTYjNWbmFHNWxjM05OWVhCVWNtRnVjMlp2Y20wN0NnbDJZWEo1YVc1bklIWmxZeklnZGxOb1pXVnVVbTkxWjJodVpYTnpUV0Z3VlhZN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwbFNTVVJGVTBORlRrTkZUVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdhWEpwWkdWelkyVnVZMlZOWVhCVWNtRnVjMlp2Y20wN0NnbDJZWEo1YVc1bklIWmxZeklnZGtseWFXUmxjMk5sYm1ObFRXRndWWFk3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBsU1NVUkZVME5GVGtORlgxUklTVU5MVGtWVFUwMUJVQW9KZFc1cFptOXliU0J0WVhReklHbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpUV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpKY21sa1pYTmpaVzVqWlZSb2FXTnJibVZ6YzAxaGNGVjJPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVazFCVUFvSmRXNXBabTl5YlNCdFlYUXpJSE53WldOMWJHRnlUV0Z3VkhKaGJuTm1iM0p0T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpUY0dWamRXeGhjazFoY0ZWMk93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRVRVZEVlV4QlVsOURUMHhQVWsxQlVBb0pkVzVwWm05eWJTQnRZWFF6SUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEJVY21GdWMyWnZjbTA3Q2dsMllYSjVhVzVuSUhabFl6SWdkbE53WldOMWJHRnlRMjlzYjNKTllYQlZkanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpmU1U1VVJVNVRTVlJaVFVGUUNnbDFibWxtYjNKdElHMWhkRE1nYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhCVWNtRnVjMlp2Y20wN0NnbDJZWEo1YVc1bklIWmxZeklnZGxOd1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVBb0pkVzVwWm05eWJTQnRZWFF6SUhSeVlXNXpiV2x6YzJsdmJrMWhjRlJ5WVc1elptOXliVHNLQ1haaGNubHBibWNnZG1Wak1pQjJWSEpoYm5OdGFYTnphVzl1VFdGd1ZYWTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUFvSmRXNXBabTl5YlNCdFlYUXpJSFJvYVdOcmJtVnpjMDFoY0ZSeVlXNXpabTl5YlRzS0NYWmhjbmxwYm1jZ2RtVmpNaUIyVkdocFkydHVaWE56VFdGd1ZYWTdDaU5sYm1ScFptQXNJSFpuSUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlZWWWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVTVKVTA5VVVrOVFXU0FwQ2dsMlZYWWdQU0IyWldNektDQjFkaXdnTVNBcExuaDVPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlOUVZBS0NYWk5ZWEJWZGlBOUlDZ2diV0Z3VkhKaGJuTm1iM0p0SUNvZ2RtVmpNeWdnVFVGUVgxVldMQ0F4SUNrZ0tTNTRlVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUVV4UVNFRk5RVkFLQ1haQmJIQm9ZVTFoY0ZWMklEMGdLQ0JoYkhCb1lVMWhjRlJ5WVc1elptOXliU0FxSUhabFl6TW9JRUZNVUVoQlRVRlFYMVZXTENBeElDa2dLUzU0ZVRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlRFbEhTRlJOUVZBS0NYWk1hV2RvZEUxaGNGVjJJRDBnS0NCc2FXZG9kRTFoY0ZSeVlXNXpabTl5YlNBcUlIWmxZek1vSUV4SlIwaFVUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVTlOUVZBS0NYWkJiMDFoY0ZWMklEMGdLQ0JoYjAxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lFRlBUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRbFZOVUUxQlVBb0pka0oxYlhCTllYQlZkaUE5SUNnZ1luVnRjRTFoY0ZSeVlXNXpabTl5YlNBcUlIWmxZek1vSUVKVlRWQk5RVkJmVlZZc0lERWdLU0FwTG5oNU93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOU9UMUpOUVV4TlFWQUtDWFpPYjNKdFlXeE5ZWEJWZGlBOUlDZ2dibTl5YldGc1RXRndWSEpoYm5ObWIzSnRJQ29nZG1Wak15Z2dUazlTVFVGTVRVRlFYMVZXTENBeElDa2dLUzU0ZVRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlJFbFRVRXhCUTBWTlJVNVVUVUZRQ2dsMlJHbHpjR3hoWTJWdFpXNTBUV0Z3VlhZZ1BTQW9JR1JwYzNCc1lXTmxiV1Z1ZEUxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lFUkpVMUJNUVVORlRVVk9WRTFCVUY5VlZpd2dNU0FwSUNrdWVIazdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMFZOU1ZOVFNWWkZUVUZRQ2dsMlJXMXBjM05wZG1WTllYQlZkaUE5SUNnZ1pXMXBjM05wZG1WTllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQkZUVWxUVTBsV1JVMUJVRjlWVml3Z01TQXBJQ2t1ZUhrN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwMUZWRUZNVGtWVFUwMUJVQW9KZGsxbGRHRnNibVZ6YzAxaGNGVjJJRDBnS0NCdFpYUmhiRzVsYzNOTllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQk5SVlJCVEU1RlUxTk5RVkJmVlZZc0lERWdLU0FwTG5oNU93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVNUMVZIU0U1RlUxTk5RVkFLQ1haU2IzVm5hRzVsYzNOTllYQlZkaUE5SUNnZ2NtOTFaMmh1WlhOelRXRndWSEpoYm5ObWIzSnRJQ29nZG1Wak15Z2dVazlWUjBoT1JWTlRUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVTVKVTA5VVVrOVFXVTFCVUFvSmRrRnVhWE52ZEhKdmNIbE5ZWEJWZGlBOUlDZ2dZVzVwYzI5MGNtOXdlVTFoY0ZSeVlXNXpabTl5YlNBcUlIWmxZek1vSUVGT1NWTlBWRkpQVUZsTlFWQmZWVllzSURFZ0tTQXBMbmg1T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSTlFWQUtDWFpEYkdWaGNtTnZZWFJOWVhCVmRpQTlJQ2dnWTJ4bFlYSmpiMkYwVFdGd1ZISmhibk5tYjNKdElDb2dkbVZqTXlnZ1EweEZRVkpEVDBGVVRVRlFYMVZXTENBeElDa2dLUzU0ZVRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVBb0pka05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRlYySUQwZ0tDQmpiR1ZoY21OdllYUk9iM0p0WVd4TllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQkRURVZCVWtOUFFWUmZUazlTVFVGTVRVRlFYMVZXTENBeElDa2dLUzU0ZVRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVVgxSlBWVWRJVGtWVFUwMUJVQW9KZGtOc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNGVjJJRDBnS0NCamJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQkRURVZCVWtOUFFWUmZVazlWUjBoT1JWTlRUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZTVkpKUkVWVFEwVk9RMFZOUVZBS0NYWkpjbWxrWlhOalpXNWpaVTFoY0ZWMklEMGdLQ0JwY21sa1pYTmpaVzVqWlUxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lFbFNTVVJGVTBORlRrTkZUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZTVkpKUkVWVFEwVk9RMFZmVkVoSlEwdE9SVk5UVFVGUUNnbDJTWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM05OWVhCVmRpQTlJQ2dnYVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQkpVa2xFUlZORFJVNURSVjlVU0VsRFMwNUZVMU5OUVZCZlZWWXNJREVnS1NBcExuaDVPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUU0VWRlRsOURUMHhQVWsxQlVBb0pkbE5vWldWdVEyOXNiM0pOWVhCVmRpQTlJQ2dnYzJobFpXNURiMnh2Y2sxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lGTklSVVZPWDBOUFRFOVNUVUZRWDFWV0xDQXhJQ2tnS1M1NGVUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZVMGhGUlU1ZlVrOVZSMGhPUlZOVFRVRlFDZ2wyVTJobFpXNVNiM1ZuYUc1bGMzTk5ZWEJWZGlBOUlDZ2djMmhsWlc1U2IzVm5hRzVsYzNOTllYQlVjbUZ1YzJadmNtMGdLaUIyWldNektDQlRTRVZGVGw5U1QxVkhTRTVGVTFOTlFWQmZWVllzSURFZ0tTQXBMbmg1T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VFVFVkRWVXhCVWsxQlVBb0pkbE53WldOMWJHRnlUV0Z3VlhZZ1BTQW9JSE53WldOMWJHRnlUV0Z3VkhKaGJuTm1iM0p0SUNvZ2RtVmpNeWdnVTFCRlExVk1RVkpOUVZCZlZWWXNJREVnS1NBcExuaDVPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVbDlEVDB4UFVrMUJVQW9KZGxOd1pXTjFiR0Z5UTI5c2IzSk5ZWEJWZGlBOUlDZ2djM0JsWTNWc1lYSkRiMnh2Y2sxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lGTlFSVU5WVEVGU1gwTlBURTlTVFVGUVgxVldMQ0F4SUNrZ0tTNTRlVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpmU1U1VVJVNVRTVlJaVFVGUUNnbDJVM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEJWZGlBOUlDZ2djM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEJVY21GdWMyWnZjbTBnS2lCMlpXTXpLQ0JUVUVWRFZVeEJVbDlKVGxSRlRsTkpWRmxOUVZCZlZWWXNJREVnS1NBcExuaDVPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlVVWtGT1UwMUpVMU5KVDA1TlFWQUtDWFpVY21GdWMyMXBjM05wYjI1TllYQlZkaUE5SUNnZ2RISmhibk50YVhOemFXOXVUV0Z3VkhKaGJuTm1iM0p0SUNvZ2RtVmpNeWdnVkZKQlRsTk5TVk5UU1U5T1RVRlFYMVZXTENBeElDa2dLUzU0ZVRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlZFaEpRMHRPUlZOVFRVRlFDZ2wyVkdocFkydHVaWE56VFdGd1ZYWWdQU0FvSUhSb2FXTnJibVZ6YzAxaGNGUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lGUklTVU5MVGtWVFUwMUJVRjlWVml3Z01TQXBJQ2t1ZUhrN0NpTmxibVJwWm1Bc0lIbG5JRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUlU1V1RVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1JFbFRWRUZPUTBVZ0tTQjhmQ0JrWldacGJtVmtJQ2dnVlZORlgxTklRVVJQVjAxQlVDQXBJSHg4SUdSbFptbHVaV1FnS0NCVlUwVmZWRkpCVGxOTlNWTlRTVTlPSUNrZ2ZId2dUbFZOWDFOUVQxUmZURWxIU0ZSZlEwOVBVa1JUSUQ0Z01Bb0pkbVZqTkNCM2IzSnNaRkJ2YzJsMGFXOXVJRDBnZG1Wak5DZ2dkSEpoYm5ObWIzSnRaV1FzSURFdU1DQXBPd29KSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SENna0pkMjl5YkdSUWIzTnBkR2x2YmlBOUlHbHVjM1JoYm1ObFRXRjBjbWw0SUNvZ2QyOXliR1JRYjNOcGRHbHZianNLQ1NObGJtUnBaZ29KZDI5eWJHUlFiM05wZEdsdmJpQTlJRzF2WkdWc1RXRjBjbWw0SUNvZ2QyOXliR1JRYjNOcGRHbHZianNLSTJWdVpHbG1ZQ3dnVFdjZ1BTQmdkbUZ5ZVdsdVp5QjJaV015SUhaVmRqc0tkVzVwWm05eWJTQnRZWFF6SUhWMlZISmhibk5tYjNKdE93cDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlZYWWdQU0FvSUhWMlZISmhibk5tYjNKdElDb2dkbVZqTXlnZ2RYWXNJREVnS1NBcExuaDVPd29KWjJ4ZlVHOXphWFJwYjI0Z1BTQjJaV00wS0NCd2IzTnBkR2x2Ymk1NGVTd2dNUzR3TENBeExqQWdLVHNLZldBc0lGTm5JRDBnWUhWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhReVJEc0tkVzVwWm05eWJTQm1iRzloZENCaVlXTnJaM0p2ZFc1a1NXNTBaVzV6YVhSNU93cDJZWEo1YVc1bklIWmxZeklnZGxWMk93cDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlpXTTBJSFJsZUVOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCME1rUXNJSFpWZGlBcE93b0pJMmxtWkdWbUlFUkZRMDlFUlY5V1NVUkZUMTlVUlZoVVZWSkZDZ2tKZEdWNFEyOXNiM0lnUFNCMlpXTTBLQ0J0YVhnb0lIQnZkeWdnZEdWNFEyOXNiM0l1Y21kaUlDb2dNQzQ1TkRjNE5qY3lPVGcySUNzZ2RtVmpNeWdnTUM0d05USXhNekkzTURFMElDa3NJSFpsWXpNb0lESXVOQ0FwSUNrc0lIUmxlRU52Ykc5eUxuSm5ZaUFxSURBdU1EYzNNems1TXpnd09Dd2dkbVZqTXlnZ2JHVnpjMVJvWVc1RmNYVmhiQ2dnZEdWNFEyOXNiM0l1Y21kaUxDQjJaV016S0NBd0xqQTBNRFExSUNrZ0tTQXBJQ2tzSUhSbGVFTnZiRzl5TG5jZ0tUc0tDU05sYm1ScFpnb0pkR1Y0UTI5c2IzSXVjbWRpSUNvOUlHSmhZMnRuY205MWJtUkpiblJsYm5OcGRIazdDZ2xuYkY5R2NtRm5RMjlzYjNJZ1BTQjBaWGhEYjJ4dmNqc0tDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y25Od1lXTmxYMlp5WVdkdFpXNTBQZ3A5WUN3Z1ltY2dQU0JnZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkVScGNtVmpkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S2RtOXBaQ0J0WVdsdUtDa2dld29KZGxkdmNteGtSR2x5WldOMGFXOXVJRDBnZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCd2IzTnBkR2x2Yml3Z2JXOWtaV3hOWVhSeWFYZ2dLVHNLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2xuYkY5UWIzTnBkR2x2Ymk1NklEMGdaMnhmVUc5emFYUnBiMjR1ZHpzS2ZXQXNJRVZuSUQwZ1lDTnBabVJsWmlCRlRsWk5RVkJmVkZsUVJWOURWVUpGQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEpEZFdKbElHVnVkazFoY0RzS0kyVnNhV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmxiblpOWVhBN0NpTmxibVJwWmdwMWJtbG1iM0p0SUdac2IyRjBJR1pzYVhCRmJuWk5ZWEE3Q25WdWFXWnZjbTBnWm14dllYUWdZbUZqYTJkeWIzVnVaRUpzZFhKeWFXNWxjM003Q25WdWFXWnZjbTBnWm14dllYUWdZbUZqYTJkeWIzVnVaRWx1ZEdWdWMybDBlVHNLZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkVScGNtVmpkR2x2YmpzS0kybHVZMngxWkdVZ1BHTjFZbVZmZFhaZmNtVm1iR1ZqZEdsdmJsOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybG1aR1ZtSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1VLQ1FsMlpXTTBJSFJsZUVOdmJHOXlJRDBnZEdWNGRIVnlaVU4xWW1Vb0lHVnVkazFoY0N3Z2RtVmpNeWdnWm14cGNFVnVkazFoY0NBcUlIWlhiM0pzWkVScGNtVmpkR2x2Ymk1NExDQjJWMjl5YkdSRWFYSmxZM1JwYjI0dWVYb2dLU0FwT3dvSkkyVnNhV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENna0pkbVZqTkNCMFpYaERiMnh2Y2lBOUlIUmxlSFIxY21WRGRXSmxWVllvSUdWdWRrMWhjQ3dnZGxkdmNteGtSR2x5WldOMGFXOXVMQ0JpWVdOclozSnZkVzVrUW14MWNuSnBibVZ6Y3lBcE93b0pJMlZzYzJVS0NRbDJaV00wSUhSbGVFTnZiRzl5SUQwZ2RtVmpOQ2dnTUM0d0xDQXdMakFzSURBdU1Dd2dNUzR3SUNrN0Nna2paVzVrYVdZS0NYUmxlRU52Ykc5eUxuSm5ZaUFxUFNCaVlXTnJaM0p2ZFc1a1NXNTBaVzV6YVhSNU93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2RHVjRRMjlzYjNJN0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0p6Y0dGalpWOW1jbUZuYldWdWRENEtmV0FzSUZSbklEMGdZSFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ25admFXUWdiV0ZwYmlncElIc0tDWFpYYjNKc1pFUnBjbVZqZEdsdmJpQTlJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnY0c5emFYUnBiMjRzSUcxdlpHVnNUV0YwY21sNElDazdDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0paMnhmVUc5emFYUnBiMjR1ZWlBOUlHZHNYMUJ2YzJsMGFXOXVMbmM3Q24xZ0xDQjNaeUE5SUdCMWJtbG1iM0p0SUhOaGJYQnNaWEpEZFdKbElIUkRkV0psT3dwMWJtbG1iM0p0SUdac2IyRjBJSFJHYkdsd093cDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q25aaGNubHBibWNnZG1Wak15QjJWMjl5YkdSRWFYSmxZM1JwYjI0N0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1habFl6UWdkR1Y0UTI5c2IzSWdQU0IwWlhoMGRYSmxRM1ZpWlNnZ2RFTjFZbVVzSUhabFl6TW9JSFJHYkdsd0lDb2dkbGR2Y214a1JHbHlaV04wYVc5dUxuZ3NJSFpYYjNKc1pFUnBjbVZqZEdsdmJpNTVlaUFwSUNrN0NnbG5iRjlHY21GblEyOXNiM0lnUFNCMFpYaERiMnh2Y2pzS0NXZHNYMFp5WVdkRGIyeHZjaTVoSUNvOUlHOXdZV05wZEhrN0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0p6Y0dGalpWOW1jbUZuYldWdWRENEtmV0FzSUVGbklEMGdZQ05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbUZ5ZVdsdVp5QjJaV015SUhaSWFXZG9VSEpsWTJsemFXOXVXbGM3Q25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybG1aR1ZtSUZWVFJWOUVTVk5RVEVGRFJVMUZUbFJOUVZBS0NRa2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJWdVpHbG1DZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NYWklhV2RvVUhKbFkybHphVzl1V2xjZ1BTQm5iRjlRYjNOcGRHbHZiaTU2ZHpzS2ZXQXNJRkpuSUQwZ1lDTnBaaUJFUlZCVVNGOVFRVU5MU1U1SElEMDlJRE15TURBS0NYVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWmhjbmxwYm1jZ2RtVmpNaUIyU0dsbmFGQnlaV05wYzJsdmJscFhPd3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQXhMakFnS1RzS0NTTnBaaUJFUlZCVVNGOVFRVU5MU1U1SElEMDlJRE15TURBS0NRbGthV1ptZFhObFEyOXNiM0l1WVNBOUlHOXdZV05wZEhrN0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhhR0Z6YUY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1dac2IyRjBJR1p5WVdkRGIyOXlaRm9nUFNBd0xqVWdLaUIyU0dsbmFGQnlaV05wYzJsdmJscFhXekJkSUM4Z2RraHBaMmhRY21WamFYTnBiMjVhVjFzeFhTQXJJREF1TlRzS0NTTnBaaUJFUlZCVVNGOVFRVU5MU1U1SElEMDlJRE15TURBS0NRbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0IyWldNektDQXhMakFnTFNCbWNtRm5RMjl2Y21SYUlDa3NJRzl3WVdOcGRIa2dLVHNLQ1NObGJHbG1JRVJGVUZSSVgxQkJRMHRKVGtjZ1BUMGdNekl3TVFvSkNXZHNYMFp5WVdkRGIyeHZjaUE5SUhCaFkydEVaWEIwYUZSdlVrZENRU2dnWm5KaFowTnZiM0prV2lBcE93b0pJMlZ1WkdsbUNuMWdMQ0JEWnlBOUlHQWpaR1ZtYVc1bElFUkpVMVJCVGtORkNuWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVdaa1pXWWdWVk5GWDBSSlUxQk1RVU5GVFVWT1ZFMUJVQW9KQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1FramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pkbGR2Y214a1VHOXphWFJwYjI0Z1BTQjNiM0pzWkZCdmMybDBhVzl1TG5oNWVqc0tmV0FzSUZCbklEMGdZQ05rWldacGJtVWdSRWxUVkVGT1EwVUtkVzVwWm05eWJTQjJaV016SUhKbFptVnlaVzVqWlZCdmMybDBhVzl1T3dwMWJtbG1iM0p0SUdac2IyRjBJRzVsWVhKRWFYTjBZVzVqWlRzS2RXNXBabTl5YlNCbWJHOWhkQ0JtWVhKRWFYTjBZVzVqWlRzS2RtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pGQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGFHRnphRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlBb0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KZG1Wak5DQmthV1ptZFhObFEyOXNiM0lnUFNCMlpXTTBLQ0F4TGpBZ0tUc0tDU05wYm1Oc2RXUmxJRHh0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYUdGemFGOW1jbUZuYldWdWRENEtDV1pzYjJGMElHUnBjM1FnUFNCc1pXNW5kR2dvSUhaWGIzSnNaRkJ2YzJsMGFXOXVJQzBnY21WbVpYSmxibU5sVUc5emFYUnBiMjRnS1RzS0NXUnBjM1FnUFNBb0lHUnBjM1FnTFNCdVpXRnlSR2x6ZEdGdVkyVWdLU0F2SUNnZ1ptRnlSR2x6ZEdGdVkyVWdMU0J1WldGeVJHbHpkR0Z1WTJVZ0tUc0tDV1JwYzNRZ1BTQnpZWFIxY21GMFpTZ2daR2x6ZENBcE93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2NHRmphMFJsY0hSb1ZHOVNSMEpCS0NCa2FYTjBJQ2s3Q24xZ0xDQk1aeUE5SUdCMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1JHbHlaV04wYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlYyOXliR1JFYVhKbFkzUnBiMjRnUFNCMGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lIQnZjMmwwYVc5dUxDQnRiMlJsYkUxaGRISnBlQ0FwT3dvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLZldBc0lFbG5JRDBnWUhWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSRmNYVnBjbVZqZERzS2RtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pFUnBjbVZqZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtkbTlwWkNCdFlXbHVLQ2tnZXdvSmRtVmpNeUJrYVhKbFkzUnBiMjRnUFNCdWIzSnRZV3hwZW1Vb0lIWlhiM0pzWkVScGNtVmpkR2x2YmlBcE93b0pkbVZqTWlCellXMXdiR1ZWVmlBOUlHVnhkV2x5WldOMFZYWW9JR1JwY21WamRHbHZiaUFwT3dvSloyeGZSbkpoWjBOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCMFJYRjFhWEpsWTNRc0lITmhiWEJzWlZWV0lDazdDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKemNHRmpaVjltY21GbmJXVnVkRDRLZldBc0lGVm5JRDBnWUhWdWFXWnZjbTBnWm14dllYUWdjMk5oYkdVN0NtRjBkSEpwWW5WMFpTQm1iRzloZENCc2FXNWxSR2x6ZEdGdVkyVTdDblpoY25scGJtY2dabXh2WVhRZ2RreHBibVZFYVhOMFlXNWpaVHNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTI5c2IzSmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2wyVEdsdVpVUnBjM1JoYm1ObElEMGdjMk5oYkdVZ0tpQnNhVzVsUkdsemRHRnVZMlU3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCRVp5QTlJR0IxYm1sbWIzSnRJSFpsWXpNZ1pHbG1ablZ6WlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd3AxYm1sbWIzSnRJR1pzYjJGMElHUmhjMmhUYVhwbE93cDFibWxtYjNKdElHWnNiMkYwSUhSdmRHRnNVMmw2WlRzS2RtRnllV2x1WnlCbWJHOWhkQ0IyVEdsdVpVUnBjM1JoYm1ObE93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KYVdZZ0tDQnRiMlFvSUhaTWFXNWxSR2x6ZEdGdVkyVXNJSFJ2ZEdGc1UybDZaU0FwSUQ0Z1pHRnphRk5wZW1VZ0tTQjdDZ2tKWkdselkyRnlaRHNLQ1gwS0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KYjNWMFoyOXBibWRNYVdkb2RDQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdDZ2tqYVc1amJIVmtaU0E4YjNCaGNYVmxYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eWMzQmhZMlZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0NuMWdMQ0JPWnlBOUlHQWphVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGxiblp0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doamIyeHZjbDkyWlhKMFpYZytDZ2tqYVdZZ1pHVm1hVzVsWkNBb0lGVlRSVjlGVGxaTlFWQWdLU0I4ZkNCa1pXWnBibVZrSUNnZ1ZWTkZYMU5MU1U1T1NVNUhJQ2tLQ1FramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2drSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NRa2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tKSTJsdVkyeDFaR1VnUEdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMlZ1WkdsbUNna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGQyOXliR1J3YjNOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHVnVkbTFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUU5bklEMGdZSFZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5wWm01a1pXWWdSa3hCVkY5VFNFRkVSVVFLQ1haaGNubHBibWNnZG1Wak15QjJUbTl5YldGc093b2paVzVrYVdZS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGFHRnphRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZVzl0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4cFoyaDBiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhsYm5adFlYQmZZMjl0Ylc5dVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzNCbFkzVnNZWEp0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYMlp5WVdkdFpXNTBQZ29KVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ1BTQlNaV1pzWldOMFpXUk1hV2RvZENnZ2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tnS1RzS0NTTnBabVJsWmlCVlUwVmZURWxIU0ZSTlFWQUtDUWwyWldNMElHeHBaMmgwVFdGd1ZHVjRaV3dnUFNCMFpYaDBkWEpsTWtRb0lHeHBaMmgwVFdGd0xDQjJUR2xuYUhSTllYQlZkaUFwT3dvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCc2FXZG9kRTFoY0ZSbGVHVnNMbkpuWWlBcUlHeHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlDb2dVa1ZEU1ZCU1QwTkJURjlRU1RzS0NTTmxiSE5sQ2drSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUhabFl6TW9JREV1TUNBcE93b0pJMlZ1WkdsbUNna2phVzVqYkhWa1pTQThZVzl0WVhCZlpuSmhaMjFsYm5RK0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS2owZ1pHbG1ablZ6WlVOdmJHOXlMbkpuWWpzS0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlRzS0NTTnBibU5zZFdSbElEeGxiblp0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiM0JoY1hWbFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5YzNCaFkyVmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnUm1jZ1BTQmdJMlJsWm1sdVpTQk1RVTFDUlZKVUNuWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhsYm5adFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pkbFpwWlhkUWIzTnBkR2x2YmlBOUlDMGdiWFpRYjNOcGRHbHZiaTU0ZVhvN0Nna2phVzVqYkhWa1pTQThkMjl5YkdSd2IzTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dRbWNnUFNCZ0kyUmxabWx1WlNCTVFVMUNSVkpVQ25WdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElIWmxZek1nWlcxcGMzTnBkbVU3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZV2hoYzJoZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5amIyMXRiMjVmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGljMlJtY3o0S0kybHVZMngxWkdVZ1BHeHBaMmgwYzE5d1lYSnpYMkpsWjJsdVBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mYkdGdFltVnlkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDVkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUQwZ1VtVm1iR1ZqZEdWa1RHbG5hSFFvSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBJQ2s3Q2dsMlpXTXpJSFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBOUlHVnRhWE56YVhabE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NTTnBibU5zZFdSbElEeGxiV2x6YzJsMlpXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mYkdGdFltVnlkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mWm5KaFoyMWxiblJmWW1WbmFXNCtDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMjFoY0hNK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyVnVaRDRLQ1NOcGJtTnNkV1JsSUR4aGIyMWhjRjltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t5QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlU3Q2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHOXdZWEYxWlY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbk53WVdObFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHdjbVZ0ZFd4MGFYQnNhV1ZrWDJGc2NHaGhYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJSHBuSUQwZ1lDTmtaV1pwYm1VZ1RVRlVRMEZRQ25aaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doamIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHVm1ZWFZzZEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDZ2wyVm1sbGQxQnZjMmwwYVc5dUlEMGdMU0J0ZGxCdmMybDBhVzl1TG5oNWVqc0tmV0FzSUZabklEMGdZQ05rWldacGJtVWdUVUZVUTBGUUNuVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NuVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHMWhkR05oY0RzS2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXaGhjMmhmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDWFpsWXpNZ2RtbGxkMFJwY2lBOUlHNXZjbTFoYkdsNlpTZ2dkbFpwWlhkUWIzTnBkR2x2YmlBcE93b0pkbVZqTXlCNElEMGdibTl5YldGc2FYcGxLQ0IyWldNektDQjJhV1YzUkdseUxub3NJREF1TUN3Z0xTQjJhV1YzUkdseUxuZ2dLU0FwT3dvSmRtVmpNeUI1SUQwZ1kzSnZjM01vSUhacFpYZEVhWElzSUhnZ0tUc0tDWFpsWXpJZ2RYWWdQU0IyWldNeUtDQmtiM1FvSUhnc0lHNXZjbTFoYkNBcExDQmtiM1FvSUhrc0lHNXZjbTFoYkNBcElDa2dLaUF3TGpRNU5TQXJJREF1TlRzS0NTTnBabVJsWmlCVlUwVmZUVUZVUTBGUUNna0pkbVZqTkNCdFlYUmpZWEJEYjJ4dmNpQTlJSFJsZUhSMWNtVXlSQ2dnYldGMFkyRndMQ0IxZGlBcE93b0pJMlZzYzJVS0NRbDJaV00wSUcxaGRHTmhjRU52Ykc5eUlEMGdkbVZqTkNnZ2RtVmpNeWdnYldsNEtDQXdMaklzSURBdU9Dd2dkWFl1ZVNBcElDa3NJREV1TUNBcE93b0pJMlZ1WkdsbUNnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0JrYVdabWRYTmxRMjlzYjNJdWNtZGlJQ29nYldGMFkyRndRMjlzYjNJdWNtZGlPd29KSTJsdVkyeDFaR1VnUEc5d1lYRjFaVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNuTndZV05sWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4d2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTltY21GbmJXVnVkRDRLZldBc0lHdG5JRDBnWUNOa1pXWnBibVVnVGs5U1RVRk1DaU5wWmlCa1pXWnBibVZrS0NCR1RFRlVYMU5JUVVSRlJDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOUNWVTFRVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwNVBVazFCVEUxQlVGOVVRVTVIUlU1VVUxQkJRMFVnS1FvSmRtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTmxibVJwWmdvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4MWRsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9ibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdWbVlYVnNkRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29qYVdZZ1pHVm1hVzVsWkNnZ1JreEJWRjlUU0VGRVJVUWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOU9UMUpOUVV4TlFWQmZWRUZPUjBWT1ZGTlFRVU5GSUNrS0NYWldhV1YzVUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dvalpXNWthV1lLZldBc0lFaG5JRDBnWUNOa1pXWnBibVVnVGs5U1RVRk1DblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybG1JR1JsWm1sdVpXUW9JRVpNUVZSZlUwaEJSRVZFSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBKVlRWQk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmVGs5U1RVRk1UVUZRWDFSQlRrZEZUbFJUVUVGRFJTQXBDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZblZ0Y0cxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjl0WVhCelBnb0paMnhmUm5KaFowTnZiRzl5SUQwZ2RtVmpOQ2dnY0dGamEwNXZjbTFoYkZSdlVrZENLQ0J1YjNKdFlXd2dLU3dnYjNCaFkybDBlU0FwT3dvSkkybG1aR1ZtSUU5UVFWRlZSUW9KQ1dkc1gwWnlZV2REYjJ4dmNpNWhJRDBnTVM0d093b0pJMlZ1WkdsbUNuMWdMQ0JIWnlBOUlHQWpaR1ZtYVc1bElGQklUMDVIQ25aaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGxiblp0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doamIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHVm1ZWFZzZEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSmRsWnBaWGRRYjNOcGRHbHZiaUE5SUMwZ2JYWlFiM05wZEdsdmJpNTRlWG83Q2dramFXNWpiSFZrWlNBOGQyOXliR1J3YjNOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHVnVkbTFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeG1iMmRmZG1WeWRHVjRQZ3A5WUN3Z1YyY2dQU0JnSTJSbFptbHVaU0JRU0U5T1J3cDFibWxtYjNKdElIWmxZek1nWkdsbVpuVnpaVHNLZFc1cFptOXliU0IyWldNeklHVnRhWE56YVhabE93cDFibWxtYjNKdElIWmxZek1nYzNCbFkzVnNZWEk3Q25WdWFXWnZjbTBnWm14dllYUWdjMmhwYm1sdVpYTnpPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeHdZV05yYVc1blBnb2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYjIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmWTI5dGJXOXVYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGxiblp0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluTmtabk0rQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dGeWMxOWlaV2RwYmo0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JvYjI1blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKMWJYQnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjM0JsWTNWc1lYSnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSlVtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdQU0JTWldac1pXTjBaV1JNYVdkb2RDZ2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrZ0tUc0tDWFpsWXpNZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxJRDBnWlcxcGMzTnBkbVU3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVdoaGMyaGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YzNCbFkzVnNZWEp0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdhRzl1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZlpuSmhaMjFsYm5SZlltVm5hVzQrQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDIxaGNITStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMlZ1WkQ0S0NTTnBibU5zZFdSbElEeGhiMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSVGNHVmpkV3hoY2lBcklISmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wVTNCbFkzVnNZWElnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc5d1lYRjFaVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNuTndZV05sWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4d2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTltY21GbmJXVnVkRDRLZldBc0lGaG5JRDBnWUNOa1pXWnBibVVnVTFSQlRrUkJVa1FLZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DZ2wyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrVUc5emFYUnBiMjQ3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pkbFpwWlhkUWIzTnBkR2x2YmlBOUlDMGdiWFpRYjNOcGRHbHZiaTU0ZVhvN0Nna2phVzVqYkhWa1pTQThkMjl5YkdSd2IzTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S0kybG1aR1ZtSUZWVFJWOVVVa0ZPVTAxSlUxTkpUMDRLQ1haWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpNTRlWG83Q2lObGJtUnBaZ3A5WUN3Z2NXY2dQU0JnSTJSbFptbHVaU0JUVkVGT1JFRlNSQW9qYVdaa1pXWWdVRWhaVTBsRFFVd0tDU05rWldacGJtVWdTVTlTQ2dralpHVm1hVzVsSUZWVFJWOVRVRVZEVlV4QlVnb2paVzVrYVdZS2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdkbVZqTXlCbGJXbHpjMmwyWlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J5YjNWbmFHNWxjM003Q25WdWFXWnZjbTBnWm14dllYUWdiV1YwWVd4dVpYTnpPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBabVJsWmlCSlQxSUtDWFZ1YVdadmNtMGdabXh2WVhRZ2FXOXlPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVZ29KZFc1cFptOXliU0JtYkc5aGRDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVUc0tDWFZ1YVdadmNtMGdkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlPd29KSTJsbVpHVm1JRlZUUlY5VFVFVkRWVXhCVWw5RFQweFBVazFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITndaV04xYkdGeVEyOXNiM0pOWVhBN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMUJGUTFWTVFWSmZTVTVVUlU1VFNWUlpUVUZRQ2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2wxYm1sbWIzSnRJR1pzYjJGMElHTnNaV0Z5WTI5aGREc0tDWFZ1YVdadmNtMGdabXh2WVhRZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOek93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOUpVa2xFUlZORFJVNURSUW9KZFc1cFptOXliU0JtYkc5aGRDQnBjbWxrWlhOalpXNWpaVHNLQ1hWdWFXWnZjbTBnWm14dllYUWdhWEpwWkdWelkyVnVZMlZKVDFJN0NnbDFibWxtYjNKdElHWnNiMkYwSUdseWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelRXbHVhVzExYlRzS0NYVnVhV1p2Y20wZ1pteHZZWFFnYVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYaHBiWFZ0T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VFNFVkZUZ29KZFc1cFptOXliU0IyWldNeklITm9aV1Z1UTI5c2IzSTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElITm9aV1Z1VW05MVoyaHVaWE56T3dvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGw5RFQweFBVazFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITm9aV1Z1UTI5c2IzSk5ZWEE3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTVmVWs5VlIwaE9SVk5UVFVGUUNna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjMmhsWlc1U2IzVm5hRzVsYzNOTllYQTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRVTVKVTA5VVVrOVFXUW9KZFc1cFptOXliU0IyWldNeUlHRnVhWE52ZEhKdmNIbFdaV04wYjNJN0Nna2phV1prWldZZ1ZWTkZYMEZPU1ZOUFZGSlBVRmxOUVZBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmhibWx6YjNSeWIzQjVUV0Z3T3dvSkkyVnVaR2xtQ2lObGJtUnBaZ3AyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVdoaGMyaGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnZiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR2x5YVdSbGMyTmxibU5sWDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYM0JvZVhOcFkyRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdZWEp6WDJKbFoybHVQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHaDVjMmxqWVd4ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhSeVlXNXpiV2x6YzJsdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWRXMXdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zWldGeVkyOWhkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThhWEpwWkdWelkyVnVZMlZmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSEp2ZFdkb2JtVnpjMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldWMFlXeHVaWE56YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDVkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUQwZ1VtVm1iR1ZqZEdWa1RHbG5hSFFvSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBJQ2s3Q2dsMlpXTXpJSFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBOUlHVnRhWE56YVhabE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BISnZkV2RvYm1WemMyMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFpYUmhiRzVsYzNOdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOXRZWEJ6UGdvSkkybHVZMngxWkdVZ1BHTnNaV0Z5WTI5aGRGOXViM0p0WVd4ZlpuSmhaMjFsYm5SZlltVm5hVzQrQ2dramFXNWpiSFZrWlNBOFkyeGxZWEpqYjJGMFgyNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdhSGx6YVdOaGJGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJWdVpENEtDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWFpsWXpNZ2RHOTBZV3hFYVdabWRYTmxJRDBnY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBcklISmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaVHNLQ1habFl6TWdkRzkwWVd4VGNHVmpkV3hoY2lBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRk53WldOMWJHRnlJQ3NnY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUlRjR1ZqZFd4aGNqc0tDU05wYm1Oc2RXUmxJRHgwY21GdWMyMXBjM05wYjI1ZlpuSmhaMjFsYm5RK0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0IwYjNSaGJFUnBabVoxYzJVZ0t5QjBiM1JoYkZOd1pXTjFiR0Z5SUNzZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxPd29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUZ29KQ1dac2IyRjBJSE5vWldWdVJXNWxjbWQ1UTI5dGNDQTlJREV1TUNBdElEQXVNVFUzSUNvZ2JXRjRNeWdnYldGMFpYSnBZV3d1YzJobFpXNURiMnh2Y2lBcE93b0pDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQnZkWFJuYjJsdVoweHBaMmgwSUNvZ2MyaGxaVzVGYm1WeVozbERiMjF3SUNzZ2MyaGxaVzVUY0dWamRXeGhjanNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NRbG1iRzloZENCa2IzUk9WbU5qSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnWjJWdmJXVjBjbmxEYkdWaGNtTnZZWFJPYjNKdFlXd3NJR2RsYjIxbGRISjVWbWxsZDBScGNpQXBJQ2s3Q2drSmRtVmpNeUJHWTJNZ1BTQkdYMU5qYUd4cFkyc29JRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVl3TENCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSR09UQXNJR1J2ZEU1V1kyTWdLVHNLQ1FsdmRYUm5iMmx1WjB4cFoyaDBJRDBnYjNWMFoyOXBibWRNYVdkb2RDQXFJQ2dnTVM0d0lDMGdiV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJQ29nUm1OaklDa2dLeUJqYkdWaGNtTnZZWFJUY0dWamRXeGhjaUFxSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZERzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHOXdZWEYxWlY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbk53WVdObFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHdjbVZ0ZFd4MGFYQnNhV1ZrWDJGc2NHaGhYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRmxuSUQwZ1lDTmtaV1pwYm1VZ1ZFOVBUZ3AyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9ZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDWFpXYVdWM1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93b0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JhWnlBOUlHQWpaR1ZtYVc1bElGUlBUMDRLZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ2RtVmpNeUJsYldsemMybDJaVHNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhhR0Z6YUY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVc5dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHBaMmgwYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFozSmhaR2xsYm5SdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZbk5rWm5NK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHRnljMTlpWldkcGJqNEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNSdmIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluVnRjRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblErQ2dsMlpXTTBJR1JwWm1aMWMyVkRiMnh2Y2lBOUlIWmxZelFvSUdScFptWjFjMlVzSUc5d1lXTnBkSGtnS1RzS0NWSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJRDBnVW1WbWJHVmpkR1ZrVEdsbmFIUW9JSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcElDazdDZ2wyWldNeklIUnZkR0ZzUlcxcGMzTnBkbVZTWVdScFlXNWpaU0E5SUdWdGFYTnphWFpsT3dvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGb1lYTm9YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NTTnBibU5zZFdSbElEeGxiV2x6YzJsMlpXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mZEc5dmJsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJWdVpENEtDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4YjNCaGNYVmxYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eWMzQmhZMlZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1NtY2dQU0JnZFc1cFptOXliU0JtYkc5aGRDQnphWHBsT3dwMWJtbG1iM0p0SUdac2IyRjBJSE5qWVd4bE93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ29qYVdaa1pXWWdWVk5GWDFCUFNVNVVVMTlWVmdvSmRtRnllV2x1WnlCMlpXTXlJSFpWZGpzS0NYVnVhV1p2Y20wZ2JXRjBNeUIxZGxSeVlXNXpabTl5YlRzS0kyVnVaR2xtQ25admFXUWdiV0ZwYmlncElIc0tDU05wWm1SbFppQlZVMFZmVUU5SlRsUlRYMVZXQ2drSmRsVjJJRDBnS0NCMWRsUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lIVjJMQ0F4SUNrZ0tTNTRlVHNLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHTnZiRzl5WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSloyeGZVRzlwYm5SVGFYcGxJRDBnYzJsNlpUc0tDU05wWm1SbFppQlZVMFZmVTBsYVJVRlVWRVZPVlVGVVNVOU9DZ2tKWW05dmJDQnBjMUJsY25Od1pXTjBhWFpsSUQwZ2FYTlFaWEp6Y0dWamRHbDJaVTFoZEhKcGVDZ2djSEp2YW1WamRHbHZiazFoZEhKcGVDQXBPd29KQ1dsbUlDZ2dhWE5RWlhKemNHVmpkR2wyWlNBcElHZHNYMUJ2YVc1MFUybDZaU0FxUFNBb0lITmpZV3hsSUM4Z0xTQnRkbEJ2YzJsMGFXOXVMbm9nS1RzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dKR2NnUFNCZ2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnlkR2xqYkdWZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRm9ZWE5vWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYM0JoY25ScFkyeGxYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVdoaGMyaGZabkpoWjIxbGJuUStDZ2x2ZFhSbmIybHVaMHhwWjJoMElEMGdaR2xtWm5WelpVTnZiRzl5TG5Kbllqc0tDU05wYm1Oc2RXUmxJRHh2Y0dGeGRXVmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKemNHRmpaVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y0hKbGJYVnNkR2x3YkdsbFpGOWhiSEJvWVY5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRXRuSUQwZ1lDTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4ZDI5eWJHUndiM05mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUZGbklEMGdZSFZ1YVdadmNtMGdkbVZqTXlCamIyeHZjanNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WW5Oa1puTStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR0Z5YzE5aVpXZHBiajRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoYzJ0ZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSloyeGZSbkpoWjBOdmJHOXlJRDBnZG1Wak5DZ2dZMjlzYjNJc0lHOXdZV05wZEhrZ0tpQW9JREV1TUNBdElHZGxkRk5vWVdSdmQwMWhjMnNvS1NBcElDazdDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKemNHRmpaVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDbjFnTENCcVp5QTlJR0IxYm1sbWIzSnRJR1pzYjJGMElISnZkR0YwYVc5dU93cDFibWxtYjNKdElIWmxZeklnWTJWdWRHVnlPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1habFl6UWdiWFpRYjNOcGRHbHZiaUE5SUcxdlpHVnNWbWxsZDAxaGRISnBlQ0FxSUhabFl6UW9JREF1TUN3Z01DNHdMQ0F3TGpBc0lERXVNQ0FwT3dvSmRtVmpNaUJ6WTJGc1pUc0tDWE5qWVd4bExuZ2dQU0JzWlc1bmRHZ29JSFpsWXpNb0lHMXZaR1ZzVFdGMGNtbDRXeUF3SUYwdWVDd2diVzlrWld4TllYUnlhWGhiSURBZ1hTNTVMQ0J0YjJSbGJFMWhkSEpwZUZzZ01DQmRMbm9nS1NBcE93b0pjMk5oYkdVdWVTQTlJR3hsYm1kMGFDZ2dkbVZqTXlnZ2JXOWtaV3hOWVhSeWFYaGJJREVnWFM1NExDQnRiMlJsYkUxaGRISnBlRnNnTVNCZExua3NJRzF2WkdWc1RXRjBjbWw0V3lBeElGMHVlaUFwSUNrN0Nna2phV1p1WkdWbUlGVlRSVjlUU1ZwRlFWUlVSVTVWUVZSSlQwNEtDUWxpYjI5c0lHbHpVR1Z5YzNCbFkzUnBkbVVnUFNCcGMxQmxjbk53WldOMGFYWmxUV0YwY21sNEtDQndjbTlxWldOMGFXOXVUV0YwY21sNElDazdDZ2tKYVdZZ0tDQnBjMUJsY25Od1pXTjBhWFpsSUNrZ2MyTmhiR1VnS2owZ0xTQnRkbEJ2YzJsMGFXOXVMbm83Q2dralpXNWthV1lLQ1habFl6SWdZV3hwWjI1bFpGQnZjMmwwYVc5dUlEMGdLQ0J3YjNOcGRHbHZiaTU0ZVNBdElDZ2dZMlZ1ZEdWeUlDMGdkbVZqTWlnZ01DNDFJQ2tnS1NBcElDb2djMk5oYkdVN0NnbDJaV015SUhKdmRHRjBaV1JRYjNOcGRHbHZianNLQ1hKdmRHRjBaV1JRYjNOcGRHbHZiaTU0SUQwZ1kyOXpLQ0J5YjNSaGRHbHZiaUFwSUNvZ1lXeHBaMjVsWkZCdmMybDBhVzl1TG5nZ0xTQnphVzRvSUhKdmRHRjBhVzl1SUNrZ0tpQmhiR2xuYm1Wa1VHOXphWFJwYjI0dWVUc0tDWEp2ZEdGMFpXUlFiM05wZEdsdmJpNTVJRDBnYzJsdUtDQnliM1JoZEdsdmJpQXBJQ29nWVd4cFoyNWxaRkJ2YzJsMGFXOXVMbmdnS3lCamIzTW9JSEp2ZEdGMGFXOXVJQ2tnS2lCaGJHbG5ibVZrVUc5emFYUnBiMjR1ZVRzS0NXMTJVRzl6YVhScGIyNHVlSGtnS3owZ2NtOTBZWFJsWkZCdmMybDBhVzl1T3dvSloyeGZVRzl6YVhScGIyNGdQU0J3Y205cVpXTjBhVzl1VFdGMGNtbDRJQ29nYlhaUWIzTnBkR2x2YmpzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2daVjhnUFNCZ2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYUdGemFGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0ZvWVhOb1gyWnlZV2R0Wlc1MFBnb0piM1YwWjI5cGJtZE1hV2RvZENBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN0Nna2phVzVqYkhWa1pTQThiM0JoY1hWbFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5YzNCaFkyVmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBncDlZQ3dnYTJVZ1BTQjdDaUFnSUNCaGJIQm9ZV2hoYzJoZlpuSmhaMjFsYm5RNklFVndMQW9nSUNBZ1lXeHdhR0ZvWVhOb1gzQmhjbk5mWm5KaFoyMWxiblE2SUZSd0xBb2dJQ0FnWVd4d2FHRnRZWEJmWm5KaFoyMWxiblE2SUhkd0xBb2dJQ0FnWVd4d2FHRnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dRWEFzQ2lBZ0lDQmhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUTZJRkp3TEFvZ0lDQWdZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RNklFTndMQW9nSUNBZ1lXOXRZWEJmWm5KaFoyMWxiblE2SUZCd0xBb2dJQ0FnWVc5dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1RIQXNDaUFnSUNCaVpXZHBibDkyWlhKMFpYZzZJRWx3TEFvZ0lDQWdZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRPaUJWY0N3S0lDQWdJR0p6Wkdaek9pQkVjQ3dLSUNBZ0lHbHlhV1JsYzJObGJtTmxYMlp5WVdkdFpXNTBPaUJPY0N3S0lDQWdJR0oxYlhCdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1QzQXNDaUFnSUNCamJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblE2SUVad0xBb2dJQ0FnWTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RNklFSndMQW9nSUNBZ1kyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNE9pQjZjQ3dLSUNBZ0lHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGc2SUZad0xBb2dJQ0FnWTI5c2IzSmZabkpoWjIxbGJuUTZJR3R3TEFvZ0lDQWdZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRG9nU0hBc0NpQWdJQ0JqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRG9nUjNBc0NpQWdJQ0JqYjJ4dmNsOTJaWEowWlhnNklGZHdMQW9nSUNBZ1kyOXRiVzl1T2lCWWNDd0tJQ0FnSUdOMVltVmZkWFpmY21WbWJHVmpkR2x2Ymw5bWNtRm5iV1Z1ZERvZ2NYQXNDaUFnSUNCa1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVEb2dXWEFzQ2lBZ0lDQmthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZzZJRnB3TEFvZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZURvZ1NuQXNDaUFnSUNCbGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWREb2dKSEFzQ2lBZ0lDQmxiV2x6YzJsMlpXMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQkxjQ3dLSUNBZ0lHTnZiRzl5YzNCaFkyVmZabkpoWjIxbGJuUTZJRkZ3TEFvZ0lDQWdZMjlzYjNKemNHRmpaVjl3WVhKelgyWnlZV2R0Wlc1ME9pQnFjQ3dLSUNBZ0lHVnVkbTFoY0Y5bWNtRm5iV1Z1ZERvZ1pXMHNDaUFnSUNCbGJuWnRZWEJmWTI5dGJXOXVYM0JoY25OZlpuSmhaMjFsYm5RNklIUnRMQW9nSUNBZ1pXNTJiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJRzV0TEFvZ0lDQWdaVzUyYldGd1gzQmhjbk5mZG1WeWRHVjRPaUJwYlN3S0lDQWdJR1Z1ZG0xaGNGOXdhSGx6YVdOaGJGOXdZWEp6WDJaeVlXZHRaVzUwT2lCdGJTd0tJQ0FnSUdWdWRtMWhjRjkyWlhKMFpYZzZJSE50TEFvZ0lDQWdabTluWDNabGNuUmxlRG9nY20wc0NpQWdJQ0JtYjJkZmNHRnljMTkyWlhKMFpYZzZJR0Z0TEFvZ0lDQWdabTluWDJaeVlXZHRaVzUwT2lCdmJTd0tJQ0FnSUdadloxOXdZWEp6WDJaeVlXZHRaVzUwT2lCamJTd0tJQ0FnSUdkeVlXUnBaVzUwYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUd4dExBb2dJQ0FnYkdsbmFIUnRZWEJmWm5KaFoyMWxiblE2SUdodExBb2dJQ0FnYkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dkVzBzQ2lBZ0lDQnNhV2RvZEhOZmJHRnRZbVZ5ZEY5bWNtRm5iV1Z1ZERvZ1pHMHNDaUFnSUNCc2FXZG9kSE5mYkdGdFltVnlkRjl3WVhKelgyWnlZV2R0Wlc1ME9pQm1iU3dLSUNBZ0lHeHBaMmgwYzE5d1lYSnpYMkpsWjJsdU9pQndiU3dLSUNBZ0lHeHBaMmgwYzE5MGIyOXVYMlp5WVdkdFpXNTBPaUJuYlN3S0lDQWdJR3hwWjJoMGMxOTBiMjl1WDNCaGNuTmZabkpoWjIxbGJuUTZJRjl0TEFvZ0lDQWdiR2xuYUhSelgzQm9iMjVuWDJaeVlXZHRaVzUwT2lCNGJTd0tJQ0FnSUd4cFoyaDBjMTl3YUc5dVoxOXdZWEp6WDJaeVlXZHRaVzUwT2lCMmJTd0tJQ0FnSUd4cFoyaDBjMTl3YUhsemFXTmhiRjltY21GbmJXVnVkRG9nZVcwc0NpQWdJQ0JzYVdkb2RITmZjR2g1YzJsallXeGZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1RXMHNDaUFnSUNCc2FXZG9kSE5mWm5KaFoyMWxiblJmWW1WbmFXNDZJRk50TEFvZ0lDQWdiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE02SUdKdExBb2dJQ0FnYkdsbmFIUnpYMlp5WVdkdFpXNTBYMlZ1WkRvZ1JXMHNDaUFnSUNCc2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWREb2dWRzBzQ2lBZ0lDQnNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1ME9pQjNiU3dLSUNBZ0lHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0T2lCQmJTd0tJQ0FnSUd4dloyUmxjSFJvWW5WbVgzWmxjblJsZURvZ1VtMHNDaUFnSUNCdFlYQmZabkpoWjIxbGJuUTZJRU50TEFvZ0lDQWdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJRkJ0TEFvZ0lDQWdiV0Z3WDNCaGNuUnBZMnhsWDJaeVlXZHRaVzUwT2lCTWJTd0tJQ0FnSUcxaGNGOXdZWEowYVdOc1pWOXdZWEp6WDJaeVlXZHRaVzUwT2lCSmJTd0tJQ0FnSUcxbGRHRnNibVZ6YzIxaGNGOW1jbUZuYldWdWREb2dWVzBzQ2lBZ0lDQnRaWFJoYkc1bGMzTnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dSRzBzQ2lBZ0lDQnRiM0p3YUdOdmJHOXlYM1psY25SbGVEb2dUbTBzQ2lBZ0lDQnRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZzZJRTl0TEFvZ0lDQWdiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnNklFWnRMQW9nSUNBZ2JXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNE9pQkNiU3dLSUNBZ0lHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiam9nZW0wc0NpQWdJQ0J1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3pvZ1ZtMHNDaUFnSUNCdWIzSnRZV3hmY0dGeWMxOW1jbUZuYldWdWREb2dhMjBzQ2lBZ0lDQnViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZzZJRWh0TEFvZ0lDQWdibTl5YldGc1gzWmxjblJsZURvZ1IyMHNDaUFnSUNCdWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nVjIwc0NpQWdJQ0JqYkdWaGNtTnZZWFJmYm05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdU9pQlliU3dLSUNBZ0lHTnNaV0Z5WTI5aGRGOXViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjem9nY1cwc0NpQWdJQ0JqYkdWaGNtTnZZWFJmY0dGeWMxOW1jbUZuYldWdWREb2dXVzBzQ2lBZ0lDQnBjbWxrWlhOalpXNWpaVjl3WVhKelgyWnlZV2R0Wlc1ME9pQmFiU3dLSUNBZ0lHOXdZWEYxWlY5bWNtRm5iV1Z1ZERvZ1NtMHNDaUFnSUNCd1lXTnJhVzVuT2lBa2JTd0tJQ0FnSUhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RNklFdHRMQW9nSUNBZ2NISnZhbVZqZEY5MlpYSjBaWGc2SUZGdExBb2dJQ0FnWkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwT2lCcWJTd0tJQ0FnSUdScGRHaGxjbWx1WjE5d1lYSnpYMlp5WVdkdFpXNTBPaUJsWnl3S0lDQWdJSEp2ZFdkb2JtVnpjMjFoY0Y5bWNtRm5iV1Z1ZERvZ2RHY3NDaUFnSUNCeWIzVm5hRzVsYzNOdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2JtY3NDaUFnSUNCemFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nYVdjc0NpQWdJQ0J6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnNklITm5MQW9nSUNBZ2MyaGhaRzkzYldGd1gzWmxjblJsZURvZ2NtY3NDaUFnSUNCemFHRmtiM2R0WVhOclgzQmhjbk5mWm5KaFoyMWxiblE2SUdGbkxBb2dJQ0FnYzJ0cGJtSmhjMlZmZG1WeWRHVjRPaUJ2Wnl3S0lDQWdJSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0T2lCalp5d0tJQ0FnSUhOcmFXNXVhVzVuWDNabGNuUmxlRG9nYkdjc0NpQWdJQ0J6YTJsdWJtOXliV0ZzWDNabGNuUmxlRG9nYUdjc0NpQWdJQ0J6Y0dWamRXeGhjbTFoY0Y5bWNtRm5iV1Z1ZERvZ2RXY3NDaUFnSUNCemNHVmpkV3hoY20xaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCa1p5d0tJQ0FnSUhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1ME9pQm1aeXdLSUNBZ0lIUnZibVZ0WVhCd2FXNW5YM0JoY25OZlpuSmhaMjFsYm5RNklIQm5MQW9nSUNBZ2RISmhibk50YVhOemFXOXVYMlp5WVdkdFpXNTBPaUJ0Wnl3S0lDQWdJSFJ5WVc1emJXbHpjMmx2Ymw5d1lYSnpYMlp5WVdkdFpXNTBPaUJuWnl3S0lDQWdJSFYyWDNCaGNuTmZabkpoWjIxbGJuUTZJRjluTEFvZ0lDQWdkWFpmY0dGeWMxOTJaWEowWlhnNklIaG5MQW9nSUNBZ2RYWmZkbVZ5ZEdWNE9pQjJaeXdLSUNBZ0lIZHZjbXhrY0c5elgzWmxjblJsZURvZ2VXY3NDaUFnSUNCaVlXTnJaM0p2ZFc1a1gzWmxjblE2SUUxbkxBb2dJQ0FnWW1GamEyZHliM1Z1WkY5bWNtRm5PaUJUWnl3S0lDQWdJR0poWTJ0bmNtOTFibVJEZFdKbFgzWmxjblE2SUdKbkxBb2dJQ0FnWW1GamEyZHliM1Z1WkVOMVltVmZabkpoWnpvZ1JXY3NDaUFnSUNCamRXSmxYM1psY25RNklGUm5MQW9nSUNBZ1kzVmlaVjltY21Gbk9pQjNaeXdLSUNBZ0lHUmxjSFJvWDNabGNuUTZJRUZuTEFvZ0lDQWdaR1Z3ZEdoZlpuSmhaem9nVW1jc0NpQWdJQ0JrYVhOMFlXNWpaVkpIUWtGZmRtVnlkRG9nUTJjc0NpQWdJQ0JrYVhOMFlXNWpaVkpIUWtGZlpuSmhaem9nVUdjc0NpQWdJQ0JsY1hWcGNtVmpkRjkyWlhKME9pQk1aeXdLSUNBZ0lHVnhkV2x5WldOMFgyWnlZV2M2SUVsbkxBb2dJQ0FnYkdsdVpXUmhjMmhsWkY5MlpYSjBPaUJWWnl3S0lDQWdJR3hwYm1Wa1lYTm9aV1JmWm5KaFp6b2dSR2NzQ2lBZ0lDQnRaWE5vWW1GemFXTmZkbVZ5ZERvZ1RtY3NDaUFnSUNCdFpYTm9ZbUZ6YVdOZlpuSmhaem9nVDJjc0NpQWdJQ0J0WlhOb2JHRnRZbVZ5ZEY5MlpYSjBPaUJHWnl3S0lDQWdJRzFsYzJoc1lXMWlaWEowWDJaeVlXYzZJRUpuTEFvZ0lDQWdiV1Z6YUcxaGRHTmhjRjkyWlhKME9pQjZaeXdLSUNBZ0lHMWxjMmh0WVhSallYQmZabkpoWnpvZ1ZtY3NDaUFnSUNCdFpYTm9ibTl5YldGc1gzWmxjblE2SUd0bkxBb2dJQ0FnYldWemFHNXZjbTFoYkY5bWNtRm5PaUJJWnl3S0lDQWdJRzFsYzJod2FHOXVaMTkyWlhKME9pQkhaeXdLSUNBZ0lHMWxjMmh3YUc5dVoxOW1jbUZuT2lCWFp5d0tJQ0FnSUcxbGMyaHdhSGx6YVdOaGJGOTJaWEowT2lCWVp5d0tJQ0FnSUcxbGMyaHdhSGx6YVdOaGJGOW1jbUZuT2lCeFp5d0tJQ0FnSUcxbGMyaDBiMjl1WDNabGNuUTZJRmxuTEFvZ0lDQWdiV1Z6YUhSdmIyNWZabkpoWnpvZ1dtY3NDaUFnSUNCd2IybHVkSE5mZG1WeWREb2dTbWNzQ2lBZ0lDQndiMmx1ZEhOZlpuSmhaem9nSkdjc0NpQWdJQ0J6YUdGa2IzZGZkbVZ5ZERvZ1MyY3NDaUFnSUNCemFHRmtiM2RmWm5KaFp6b2dVV2NzQ2lBZ0lDQnpjSEpwZEdWZmRtVnlkRG9nYW1jc0NpQWdJQ0J6Y0hKcGRHVmZabkpoWnpvZ1pWOEtmU3dnYkdVZ1BTQjdDaUFnSUNCamIyMXRiMjQ2SUhzS0lDQWdJQ0FnSUNCa2FXWm1kWE5sT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnY0dVb01UWTNOemN5TVRVcENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdFlYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzFoY0ZSeVlXNXpabTl5YlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUVobENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiSEJvWVUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZV3h3YUdGTllYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QklaUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRlVaWE4wT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOd1pXTjFiR0Z5YldGd09pQjdDaUFnSUNBZ0lDQWdjM0JsWTNWc1lYSk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5VFdGd1ZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1NHVUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWlc1MmJXRndPaUI3Q2lBZ0lDQWdJQ0FnWlc1MlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JtYkdsd1JXNTJUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXRNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY21WbWJHVmpkR2wyYVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCcGIzSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFdU5Rb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjbVZtY21GamRHbHZibEpoZEdsdk9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF1T1RnS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdZVzl0WVhBNklIc0tJQ0FnSUNBZ0lDQmhiMDFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1lXOU5ZWEJKYm5SbGJuTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0Z2VFdGd1ZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1NHVUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYkdsbmFIUnRZWEE2SUhzS0lDQWdJQ0FnSUNCc2FXZG9kRTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2JHbG5hSFJOWVhCSmJuUmxibk5wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUd4cFoyaDBUV0Z3VkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnU0dVS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdZblZ0Y0cxaGNEb2dld29nSUNBZ0lDQWdJR0oxYlhCTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0oxYlhCTllYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QklaUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWW5WdGNGTmpZV3hsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUc1dmNtMWhiRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHNXZjbTFoYkUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdibTl5YldGc1RXRndWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dTR1VLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUc1dmNtMWhiRk5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1dpZ3hMQ0F4S1FvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQmthWE53YkdGalpXMWxiblJ0WVhBNklIc0tJQ0FnSUNBZ0lDQmthWE53YkdGalpXMWxiblJOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHUnBjM0JzWVdObGJXVnVkRTFoY0ZSeVlXNXpabTl5YlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUVobENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmthWE53YkdGalpXMWxiblJUWTJGc1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHpjR3hoWTJWdFpXNTBRbWxoY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCbGJXbHpjMmwyWlcxaGNEb2dld29nSUNBZ0lDQWdJR1Z0YVhOemFYWmxUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCbGJXbHpjMmwyWlUxaGNGUnlZVzV6Wm05eWJUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lFaGxDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUcxbGRHRnNibVZ6YzIxaGNEb2dld29nSUNBZ0lDQWdJRzFsZEdGc2JtVnpjMDFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2JXVjBZV3h1WlhOelRXRndWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dTR1VLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2NtOTFaMmh1WlhOemJXRndPaUI3Q2lBZ0lDQWdJQ0FnY205MVoyaHVaWE56VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnliM1ZuYUc1bGMzTk5ZWEJVY21GdWMyWnZjbTA2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJJWlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQm5jbUZrYVdWdWRHMWhjRG9nZXdvZ0lDQWdJQ0FnSUdkeVlXUnBaVzUwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR1p2WnpvZ2V3b2dJQ0FnSUNBZ0lHWnZaMFJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURJMVpTMDFDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JtYjJkT1pXRnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm1iMmRHWVhJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREpsTXdvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1ptOW5RMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCd1pTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYkdsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnWVcxaWFXVnVkRXhwWjJoMFEyOXNiM0k2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JzYVdkb2RGQnliMkpsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4TWFXZG9kSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlRhWHBsT2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzNCdmRFeHBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpUb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bFEyOXpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGJuVnRZbkpoUTI5ek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWTJGNU9pQjdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVEdsbmFIUlRhR0ZrYjNkek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlRhWHBsT2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCemNHOTBUR2xuYUhSTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVTJoaFpHOTNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzNCdmRFeHBaMmgwVFdGMGNtbDRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjRzlwYm5STWFXZG9kSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldOaGVUb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nZTMwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkQ2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRMkZ0WlhKaFRtVmhjam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2REWVcxbGNtRkdZWEk2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhCdmFXNTBVMmhoWkc5M1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjRzlwYm5SVGFHRmtiM2ROWVhSeWFYZzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm9aVzFwYzNCb1pYSmxUR2xuYUhSek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnJlVU52Ykc5eU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2R5YjNWdVpFTnZiRzl5T2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCeVpXTjBRWEpsWVV4cFoyaDBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQmxjblJwWlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dlMzBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiSFJqWHpFNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHeDBZMTh5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lIQnZhVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lHUnBabVoxYzJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCd1pTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzl3WVdOcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITnBlbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdFlYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0ZzY0doaFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lVMWhjRlJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRWhsQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGJIQm9ZVlJsYzNRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWMlZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1NHVUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzNCeWFYUmxPaUI3Q2lBZ0lDQWdJQ0FnWkdsbVpuVnpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJSEJsS0RFMk56YzNNakUxS1FvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWTJWdWRHVnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXaWd1TlN3Z0xqVXBDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5YjNSaGRHbHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdFlYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QklaUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdGc2NHaGhUV0Z3VkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnU0dVS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHRnNjR2hoVkdWemREb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlN3Z2JtNGdQU0I3Q2lBZ0lDQmlZWE5wWXpvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQk1kQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdWMzQmxZM1ZzWVhKdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtVnVkbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1WVc5dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExteHBaMmgwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JzWlM1bWIyY0tJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHdGxMbTFsYzJoaVlYTnBZMTkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCclpTNXRaWE5vWW1GemFXTmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHeGhiV0psY25RNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dUSFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExuTndaV04xYkdGeWJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNWxiblp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG1GdmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNXNhV2RvZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVpXMXBjM05wZG1WdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtSjFiWEJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG01dmNtMWhiRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJSEJsS0RBcENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR3RsTG0xbGMyaHNZVzFpWlhKMFgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG0xbGMyaHNZVzFpWlhKMFgyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCd2FHOXVaem9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCTWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1YzNCbFkzVnNZWEp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG1WdWRtMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHVXVZVzl0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG14cFoyaDBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVsYldsemMybDJaVzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1WW5WdGNHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHVXVibTl5YldGc2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNWthWE53YkdGalpXMWxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG1adlp5d0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdWJHbG5hSFJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiV2x6YzJsMlpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ2NHVW9NQ2tLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Y0dWamRXeGhjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2djR1VvTVRFeE9EUTRNU2tLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdsdWFXNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ016QUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYTJVdWJXVnphSEJvYjI1blgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG0xbGMyaHdhRzl1WjE5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYzNSaGJtUmhjbVE2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1RIUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCc1pTNWpiMjF0YjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG1WdWRtMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHVXVZVzl0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG14cFoyaDBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVsYldsemMybDJaVzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1WW5WdGNHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHVXVibTl5YldGc2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNWthWE53YkdGalpXMWxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG5KdmRXZG9ibVZ6YzIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdWJXVjBZV3h1WlhOemJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJSEJsS0RBcENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtOTFaMmh1WlhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WlhSaGJHNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkazFoY0VsdWRHVnVjMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUd0bExtMWxjMmh3YUhsemFXTmhiRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCclpTNXRaWE5vY0doNWMybGpZV3hmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJSFJ2YjI0NklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dUSFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtRnZiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVzYVdkb2RHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHVXVaVzFwYzNOcGRtVnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbUoxYlhCdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtNXZjbTFoYkcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVuY21Ga2FXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0JzWlM1c2FXZG9kSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCd1pTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCclpTNXRaWE5vZEc5dmJsOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJyWlM1dFpYTm9kRzl2Ymw5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYldGMFkyRndPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUV4MEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVpZFcxd2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCc1pTNXViM0p0WVd4dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtUnBjM0JzWVdObGJXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSallYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJyWlM1dFpYTm9iV0YwWTJGd1gzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG0xbGMyaHRZWFJqWVhCZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUhCdmFXNTBjem9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCTWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUd4bExuQnZhVzUwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1Wm05bkNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCclpTNXdiMmx1ZEhOZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dhMlV1Y0c5cGJuUnpYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQmtZWE5vWldRNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dUSFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhjMmhUYVhwbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNSaGJGTnBlbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJyWlM1c2FXNWxaR0Z6YUdWa1gzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG14cGJtVmtZWE5vWldSZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUdSbGNIUm9PaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUV4MEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVrYVhOd2JHRmpaVzFsYm5SdFlYQUtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHdGxMbVJsY0hSb1gzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG1SbGNIUm9YMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQnViM0p0WVd3NklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dUSFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUd4bExtSjFiWEJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG01dmNtMWhiRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYTJVdWJXVnphRzV2Y20xaGJGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJyWlM1dFpYTm9ibTl5YldGc1gyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCemNISnBkR1U2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1RIUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCc1pTNXpjSEpwZEdVc0NpQWdJQ0FnSUNBZ0lDQWdJR3hsTG1adlp3b2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ2EyVXVjM0J5YVhSbFgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR3RsTG5Od2NtbDBaVjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFYyVkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lFaGxDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFF5UkRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRWx1ZEdWdWMybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCclpTNWlZV05yWjNKdmRXNWtYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUd0bExtSmhZMnRuY205MWJtUmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHSmhZMnRuY205MWJtUkRkV0psT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1MlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCbWJHbHdSVzUyVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ0xURUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRUpzZFhKeWFXNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1SSmJuUmxibk5wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dhMlV1WW1GamEyZHliM1Z1WkVOMVltVmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nYTJVdVltRmphMmR5YjNWdVpFTjFZbVZmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR04xWW1VNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMFEzVmlaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RFWnNhWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF0TVFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHdGxMbU4xWW1WZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dhMlV1WTNWaVpWOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1pYRjFhWEpsWTNRNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMFJYRjFhWEpsWTNRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYTJVdVpYRjFhWEpsWTNSZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dhMlV1WlhGMWFYSmxZM1JmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR1JwYzNSaGJtTmxVa2RDUVRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQk1kQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV1psY21WdVkyVlFiM05wZEdsdmJqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1FRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWxZWEpFYVhOMFlXNWpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRnlSR2x6ZEdGdVkyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVdVekNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR3RsTG1ScGMzUmhibU5sVWtkQ1FWOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJyWlM1a2FYTjBZVzVqWlZKSFFrRmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZHpvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQk1kQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHeGxMbXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnYkdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2djR1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYTJVdWMyaGhaRzkzWDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHdGxMbk5vWVdSdmQxOW1jbUZuQ2lBZ0lDQjlDbjA3Q201dUxuQm9lWE5wWTJGc0lEMGdld29nSUNBZ2RXNXBabTl5YlhNNklFeDBLRnNLSUNBZ0lDQWdJQ0J1Ymk1emRHRnVaR0Z5WkM1MWJtbG1iM0p0Y3l3S0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJOWVhCVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dTR1VLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUk9iM0p0WVd4TllYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnU0dVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnV2lneExDQXhLUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd1ZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRWhsQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdseWFXUmxjMk5sYm1ObE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBjbWxrWlhOalpXNWpaVTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhWEpwWkdWelkyVnVZMlZOWVhCVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dTR1VLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhKcFpHVnpZMlZ1WTJWSlQxSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhMak1LSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTmFXNXBiWFZ0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVRBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpUV0Y0YVcxMWJUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEUXdNQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwY21sa1pYTmpaVzVqWlZSb2FXTnJibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnU0dVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzQ2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2djR1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVEYjJ4dmNrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVEYjJ4dmNrMWhjRlJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCSVpRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmxKdmRXZG9ibVZ6Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVTYjNWbmFHNWxjM05OWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVVtOTFaMmh1WlhOelRXRndWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUVobENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6YldsemMybHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnRhWE56YVc5dVRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMjFwYzNOcGIyNU5ZWEJVY21GdWMyWnZjbTA2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1NHVUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjbE5wZW1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXZ29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wYjI1VFlXMXdiR1Z5VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsamEyNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FXTnJibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocFkydHVaWE56VFdGd1ZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRWhsQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2djR1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKRGIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCd1pTZ3hMQ0F4TENBeEtRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6Y0dWamRXeGhja052Ykc5eVRXRndWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUVobENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVNXNTBaVzV6YVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnU0dVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXNXBjMjkwY205d2VWWmxZM1J2Y2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmFDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z1YVhOdmRISnZjSGxOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z1YVhOdmRISnZjSGxOWVhCVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dTR1VLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUYwcExBb2dJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQnJaUzV0WlhOb2NHaDVjMmxqWVd4ZmRtVnlkQ3dLSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCclpTNXRaWE5vY0doNWMybGpZV3hmWm5KaFp3cDlPd3AyWVhJZ1kzSWdQU0I3Q2lBZ0lDQnlPaUF3TEFvZ0lDQWdZam9nTUN3S0lDQWdJR2M2SURBS2ZUc0tablZ1WTNScGIyNGdkRjhvY3pFc0lHVXNJSFFzSUc0c0lHa3NJSElzSUdFcElIc0tJQ0FnSUd4bGRDQnZJRDBnYm1WM0lIQmxLREFwTENCaklEMGdjaUE5UFQwZ0lUQWdQeUF3SURvZ01Td2diQ3dnYUN3Z2RTQTlJRzUxYkd3c0lHUWdQU0F3TENCbUlEMGdiblZzYkRzS0lDQWdJR1oxYm1OMGFXOXVJRzBvWnl3Z2NDa2dld29nSUNBZ0lDQWdJR3hsZENCMklEMGdJVEVzSUhnZ1BTQndMbWx6VTJObGJtVWdQVDA5SUNFd0lEOGdjQzVpWVdOclozSnZkVzVrSURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I0SUNZbUlIZ3VhWE5VWlhoMGRYSmxJQ1ltSUNoNElEMGdLSEF1WW1GamEyZHliM1Z1WkVKc2RYSnlhVzVsYzNNZ1BpQXdJRDhnZENBNklHVXBMbWRsZENoNEtTa3NJSGdnUFQwOUlHNTFiR3dnUHlCZktHOHNJR01wSURvZ2VDQW1KaUI0TG1selEyOXNiM0lnSmlZZ0tGOG9lQ3dnTVNrc0lIWWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCek1TNTRjaTVuWlhSRmJuWnBjbTl1YldWdWRFSnNaVzVrVFc5a1pTZ3BPd29nSUNBZ0lDQWdJSGtnUFQwOUlDSmhaR1JwZEdsMlpTSWdQeUJ1TG1KMVptWmxjbk11WTI5c2IzSXVjMlYwUTJ4bFlYSW9NQ3dnTUN3Z01Dd2dNU3dnWVNrZ09pQjVJRDA5UFNBaVlXeHdhR0V0WW14bGJtUWlJQ1ltSUc0dVluVm1abVZ5Y3k1amIyeHZjaTV6WlhSRGJHVmhjaWd3TENBd0xDQXdMQ0F3TENCaEtTd2dLSE14TG1GMWRHOURiR1ZoY2lCOGZDQjJLU0FtSmlCek1TNWpiR1ZoY2loek1TNWhkWFJ2UTJ4bFlYSkRiMnh2Y2l3Z2N6RXVZWFYwYjBOc1pXRnlSR1Z3ZEdnc0lITXhMbUYxZEc5RGJHVmhjbE4wWlc1amFXd3BMQ0I0SUNZbUlDaDRMbWx6UTNWaVpWUmxlSFIxY21VZ2ZId2dlQzV0WVhCd2FXNW5JRDA5UFNCV2N5a2dQeUFvYUNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hvSUQwZ2JtVjNJRTEwS0c1bGR5QkthU2d4TENBeExDQXhLU3dnYm1WM0lHcDBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSWtKaFkydG5jbTkxYm1SRGRXSmxUV0YwWlhKcFlXd2lMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ0pHa29ibTR1WW1GamEyZHliM1Z1WkVOMVltVXVkVzVwWm05eWJYTXBMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRzV1TG1KaFkydG5jbTkxYm1SRGRXSmxMblpsY25SbGVGTm9ZV1JsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHNXVMbUpoWTJ0bmNtOTFibVJEZFdKbExtWnlZV2R0Wlc1MFUyaGhaR1Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphV1JsT2lCR2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdadlp6b2dJVEVLSUNBZ0lDQWdJQ0I5S1Nrc0lHZ3VaMlZ2YldWMGNua3VaR1ZzWlhSbFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUtTd2dhQzVuWlc5dFpYUnllUzVrWld4bGRHVkJkSFJ5YVdKMWRHVW9JblYySWlrc0lHZ3ViMjVDWldadmNtVlNaVzVrWlhJZ1BTQm1kVzVqZEdsdmJpaGlMQ0IzTENCU0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNFYyOXliR1F1WTI5d2VWQnZjMmwwYVc5dUtGSXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUgwc0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hvTG0xaGRHVnlhV0ZzTENBaVpXNTJUV0Z3SWl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFc1cFptOXliWE11Wlc1MlRXRndMblpoYkhWbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrc0lHa3VkWEJrWVhSbEtHZ3BLU3dnYUM1dFlYUmxjbWxoYkM1MWJtbG1iM0p0Y3k1bGJuWk5ZWEF1ZG1Gc2RXVWdQU0I0TENCb0xtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxtWnNhWEJGYm5aTllYQXVkbUZzZFdVZ1BTQjRMbWx6UTNWaVpWUmxlSFIxY21VZ0ppWWdlQzVwYzFKbGJtUmxjbFJoY21kbGRGUmxlSFIxY21VZ1BUMDlJQ0V4SUQ4Z0xURWdPaUF4TENCb0xtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxtSmhZMnRuY205MWJtUkNiSFZ5Y21sdVpYTnpMblpoYkhWbElEMGdjQzVpWVdOclozSnZkVzVrUW14MWNuSnBibVZ6Y3l3Z2FDNXRZWFJsY21saGJDNTFibWxtYjNKdGN5NWlZV05yWjNKdmRXNWtTVzUwWlc1emFYUjVMblpoYkhWbElEMGdjQzVpWVdOclozSnZkVzVrU1c1MFpXNXphWFI1TENCb0xtMWhkR1Z5YVdGc0xuUnZibVZOWVhCd1pXUWdQU0JSWlM1blpYUlVjbUZ1YzJabGNpaDRMbU52Ykc5eVUzQmhZMlVwSUNFOVBTQnVkQ3dnS0hVZ0lUMDlJSGdnZkh3Z1pDQWhQVDBnZUM1MlpYSnphVzl1SUh4OElHWWdJVDA5SUhNeExuUnZibVZOWVhCd2FXNW5LU0FtSmlBb2FDNXRZWFJsY21saGJDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjFJRDBnZUN3Z1pDQTlJSGd1ZG1WeWMybHZiaXdnWmlBOUlITXhMblJ2Ym1WTllYQndhVzVuS1N3Z2FDNXNZWGxsY25NdVpXNWhZbXhsUVd4c0tDa3NJR2N1ZFc1emFHbG1kQ2hvTENCb0xtZGxiMjFsZEhKNUxDQm9MbTFoZEdWeWFXRnNMQ0F3TENBd0xDQnVkV3hzS1NrZ09pQjRJQ1ltSUhndWFYTlVaWGgwZFhKbElDWW1JQ2hzSUQwOVBTQjJiMmxrSURBZ0ppWWdLR3dnUFNCdVpYY2dUWFFvYm1WM0lDUnlLRElzSURJcExDQnVaWGNnYW5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQWlRbUZqYTJkeWIzVnVaRTFoZEdWeWFXRnNJaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklDUnBLRzV1TG1KaFkydG5jbTkxYm1RdWRXNXBabTl5YlhNcExBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHNXVMbUpoWTJ0bmNtOTFibVF1ZG1WeWRHVjRVMmhoWkdWeUxBb2dJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dibTR1WW1GamEyZHliM1Z1WkM1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ2MybGtaVG9nUW00c0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1ZHVnpkRG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1YzSnBkR1U2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjJjNklDRXhDaUFnSUNBZ0lDQWdmU2twTENCc0xtZGxiMjFsZEhKNUxtUmxiR1YwWlVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWlrc0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hzTG0xaGRHVnlhV0ZzTENBaWJXRndJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkVzVwWm05eWJYTXVkREpFTG5aaGJIVmxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3NJR2t1ZFhCa1lYUmxLR3dwS1N3Z2JDNXRZWFJsY21saGJDNTFibWxtYjNKdGN5NTBNa1F1ZG1Gc2RXVWdQU0I0TENCc0xtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxtSmhZMnRuY205MWJtUkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbUpoWTJ0bmNtOTFibVJKYm5SbGJuTnBkSGtzSUd3dWJXRjBaWEpwWVd3dWRHOXVaVTFoY0hCbFpDQTlJRkZsTG1kbGRGUnlZVzV6Wm1WeUtIZ3VZMjlzYjNKVGNHRmpaU2tnSVQwOUlHNTBMQ0I0TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJQ1ltSUhndWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUd3dWJXRjBaWEpwWVd3dWRXNXBabTl5YlhNdWRYWlVjbUZ1YzJadmNtMHVkbUZzZFdVdVkyOXdlU2g0TG0xaGRISnBlQ2tzSUNoMUlDRTlQU0I0SUh4OElHUWdJVDA5SUhndWRtVnljMmx2YmlCOGZDQm1JQ0U5UFNCek1TNTBiMjVsVFdGd2NHbHVaeWtnSmlZZ0tHd3ViV0YwWlhKcFlXd3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dkU0E5SUhnc0lHUWdQU0I0TG5abGNuTnBiMjRzSUdZZ1BTQnpNUzUwYjI1bFRXRndjR2x1Wnlrc0lHd3ViR0Y1WlhKekxtVnVZV0pzWlVGc2JDZ3BMQ0JuTG5WdWMyaHBablFvYkN3Z2JDNW5aVzl0WlhSeWVTd2diQzV0WVhSbGNtbGhiQ3dnTUN3Z01Dd2diblZzYkNrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdYeWhuTENCd0tTQjdDaUFnSUNBZ0lDQWdaeTVuWlhSU1IwSW9ZM0lzSUdKa0tITXhLU2tzSUc0dVluVm1abVZ5Y3k1amIyeHZjaTV6WlhSRGJHVmhjaWhqY2k1eUxDQmpjaTVuTENCamNpNWlMQ0J3TENCaEtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwUTJ4bFlYSkRiMnh2Y2pvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMnhsWVhKRGIyeHZjam9nWm5WdVkzUnBiMjRvWnl3Z2NDQTlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdieTV6WlhRb1p5a3NJR01nUFNCd0xDQmZLRzhzSUdNcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdaMlYwUTJ4bFlYSkJiSEJvWVRvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMnhsWVhKQmJIQm9ZVG9nWm5WdVkzUnBiMjRvWnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqSUQwZ1p5d2dYeWh2TENCaktUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEpsYm1SbGNqb2diUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJ1WHloek1Td2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCek1TNW5aWFJRWVhKaGJXVjBaWElvY3pFdVRVRllYMVpGVWxSRldGOUJWRlJTU1VKVEtTd2djaUE5SUc0dWFYTlhaV0pIVERJZ1B5QnVkV3hzSURvZ1pTNW5aWFFvSWs5RlUxOTJaWEowWlhoZllYSnlZWGxmYjJKcVpXTjBJaWtzSUdFZ1BTQnVMbWx6VjJWaVIwd3lJSHg4SUhJZ0lUMDlJRzUxYkd3c0lHOGdQU0I3ZlN3Z1l5QTlJR2NvYm5Wc2JDa3NJR3dnUFNCakxDQm9JRDBnSVRFN0NpQWdJQ0JtZFc1amRHbHZiaUIxS0ZVc0lIb3NJSEVzSUVnc0lHNWxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGY2dQU0FoTVRzS0lDQWdJQ0FnSUNCcFppQW9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3lBOUlGOG9TQ3dnY1N3Z2VpazdDaUFnSUNBZ0lDQWdJQ0FnSUd3Z0lUMDlJRXNnSmlZZ0tHd2dQU0JMTENCbUtHd3ViMkpxWldOMEtTa3NJRmNnUFNCd0tGVXNJRWdzSUhFc0lHNWxLU3dnVnlBbUppQjJLRlVzSUVnc0lIRXNJRzVsS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3lBOUlIb3VkMmx5WldaeVlXMWxJRDA5UFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnS0d3dVoyVnZiV1YwY25rZ0lUMDlJRWd1YVdRZ2ZId2diQzV3Y205bmNtRnRJQ0U5UFNCeExtbGtJSHg4SUd3dWQybHlaV1p5WVcxbElDRTlQU0JMS1NBbUppQW9iQzVuWlc5dFpYUnllU0E5SUVndWFXUXNJR3d1Y0hKdlozSmhiU0E5SUhFdWFXUXNJR3d1ZDJseVpXWnlZVzFsSUQwZ1N5d2dWeUE5SUNFd0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdibVVnSVQwOUlHNTFiR3dnSmlZZ2RDNTFjR1JoZEdVb2JtVXNJSE14TGtWTVJVMUZUbFJmUVZKU1FWbGZRbFZHUmtWU0tTd2dLRmNnZkh3Z2FDa2dKaVlnS0dnZ1BTQWhNU3dnU1NoVkxDQjZMQ0J4TENCSUtTd2dibVVnSVQwOUlHNTFiR3dnSmlZZ2N6RXVZbWx1WkVKMVptWmxjaWh6TVM1RlRFVk5SVTVVWDBGU1VrRlpYMEpWUmtaRlVpd2dkQzVuWlhRb2JtVXBMbUoxWm1abGNpa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXBjMWRsWWtkTU1pQS9JSE14TG1OeVpXRjBaVlpsY25SbGVFRnljbUY1S0NrZ09pQnlMbU55WldGMFpWWmxjblJsZUVGeWNtRjVUMFZUS0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm1LRlVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1cGMxZGxZa2RNTWlBL0lITXhMbUpwYm1SV1pYSjBaWGhCY25KaGVTaFZLU0E2SUhJdVltbHVaRlpsY25SbGVFRnljbUY1VDBWVEtGVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYlNoVktTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVhWE5YWldKSFRESWdQeUJ6TVM1a1pXeGxkR1ZXWlhKMFpYaEJjbkpoZVNoVktTQTZJSEl1WkdWc1pYUmxWbVZ5ZEdWNFFYSnlZWGxQUlZNb1ZTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJmS0ZVc0lIb3NJSEVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdTQ0E5SUhFdWQybHlaV1p5WVcxbElEMDlQU0FoTUN3Z2JtVWdQU0J2VzFVdWFXUmRPd29nSUNBZ0lDQWdJRzVsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRzVsSUQwZ2UzMHNJRzliVlM1cFpGMGdQU0J1WlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCdVpWdDZMbWxrWFRzS0lDQWdJQ0FnSUNCWElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZjZ1BTQjdmU3dnYm1WYmVpNXBaRjBnUFNCWEtUc0tJQ0FnSUNBZ0lDQnNaWFFnU3lBOUlGZGJTRjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRXNnUFQwOUlIWnZhV1FnTUNBbUppQW9TeUE5SUdjb1pDZ3BLU3dnVjF0SVhTQTlJRXNwTENCTE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaeWhWS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSG9nUFNCYlhTd2djU0E5SUZ0ZExDQklJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQTlJREE3SUc1bElEd2dhVHNnYm1Vckt5bDZXMjVsWFNBOUlEQXNJSEZiYm1WZElEMGdNQ3dnU0Z0dVpWMGdQU0F3T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxiMjFsZEhKNU9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTluY21GdE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhWEpsWm5KaGJXVTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGRCZEhSeWFXSjFkR1Z6T2lCNkxBb2dJQ0FnSUNBZ0lDQWdJQ0JsYm1GaWJHVmtRWFIwY21saWRYUmxjem9nY1N3S0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY21saWRYUmxSR2wyYVhOdmNuTTZJRWdzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ1ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNtbGlkWFJsY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSEFvVlN3Z2Vpd2djU3dnU0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1WlNBOUlHd3VZWFIwY21saWRYUmxjeXdnVnlBOUlIb3VZWFIwY21saWRYUmxjeXdnU3lBOUlEQXNJRVFnUFNCeExtZGxkRUYwZEhKcFluVjBaWE1vS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjZ2FXNGdSQ2xwWmlBb1JGdEhYUzVzYjJOaGRHbHZiaUErUFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1aU0E5SUc1bFcwZGRMQ0JmWlNBOUlGZGJSMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hmWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hISUQwOVBTQWlhVzV6ZEdGdVkyVk5ZWFJ5YVhnaUlDWW1JRlV1YVc1emRHRnVZMlZOWVhSeWFYZ2dKaVlnS0Y5bElEMGdWUzVwYm5OMFlXNWpaVTFoZEhKcGVDa3NJRWNnUFQwOUlDSnBibk4wWVc1alpVTnZiRzl5SWlBbUppQlZMbWx1YzNSaGJtTmxRMjlzYjNJZ0ppWWdLRjlsSUQwZ1ZTNXBibk4wWVc1alpVTnZiRzl5S1Nrc0lHWmxJRDA5UFNCMmIybGtJREFnZkh3Z1ptVXVZWFIwY21saWRYUmxJQ0U5UFNCZlpTQjhmQ0JmWlNBbUppQm1aUzVrWVhSaElDRTlQU0JmWlM1a1lYUmhLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lFc3JLenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR3d1WVhSMGNtbGlkWFJsYzA1MWJTQWhQVDBnU3lCOGZDQnNMbWx1WkdWNElDRTlQU0JJT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RpaFZMQ0I2TENCeExDQklLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNWxJRDBnZTMwc0lGY2dQU0I2TG1GMGRISnBZblYwWlhNc0lFc2dQU0F3TENCRUlEMGdjUzVuWlhSQmRIUnlhV0oxZEdWektDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkhJR2x1SUVRcGFXWWdLRVJiUjEwdWJHOWpZWFJwYjI0Z1BqMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQlhXMGRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1aU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEhJRDA5UFNBaWFXNXpkR0Z1WTJWTllYUnlhWGdpSUNZbUlGVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ0ppWWdLR1psSUQwZ1ZTNXBibk4wWVc1alpVMWhkSEpwZUNrc0lFY2dQVDA5SUNKcGJuTjBZVzVqWlVOdmJHOXlJaUFtSmlCVkxtbHVjM1JoYm1ObFEyOXNiM0lnSmlZZ0tHWmxJRDBnVlM1cGJuTjBZVzVqWlVOdmJHOXlLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmWlNBOUlIdDlPd29nSUNBZ0lDQWdJQ0FnSUNCZlpTNWhkSFJ5YVdKMWRHVWdQU0JtWlN3Z1ptVWdKaVlnWm1VdVpHRjBZU0FtSmlBb1gyVXVaR0YwWVNBOUlHWmxMbVJoZEdFcExDQnVaVnRIWFNBOUlGOWxMQ0JMS3lzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHd3VZWFIwY21saWRYUmxjeUE5SUc1bExDQnNMbUYwZEhKcFluVjBaWE5PZFcwZ1BTQkxMQ0JzTG1sdVpHVjRJRDBnU0RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGVWdQU0JzTG01bGQwRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjZJRDBnTUN3Z2NTQTlJRlV1YkdWdVozUm9PeUI2SUR3Z2NUc2dlaXNyS1ZWYmVsMGdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VTaFZLU0I3Q2lBZ0lDQWdJQ0FnWWloVkxDQXdLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdJb1ZTd2dlaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnhJRDBnYkM1dVpYZEJkSFJ5YVdKMWRHVnpMQ0JJSUQwZ2JDNWxibUZpYkdWa1FYUjBjbWxpZFhSbGN5d2dibVVnUFNCc0xtRjBkSEpwWW5WMFpVUnBkbWx6YjNKek93b2dJQ0FnSUNBZ0lIRmJWVjBnUFNBeExDQklXMVZkSUQwOVBTQXdJQ1ltSUNoek1TNWxibUZpYkdWV1pYSjBaWGhCZEhSeWFXSkJjbkpoZVNoVktTd2dTRnRWWFNBOUlERXBMQ0J1WlZ0VlhTQWhQVDBnZWlBbUppQW9LRzR1YVhOWFpXSkhURElnUHlCek1TQTZJR1V1WjJWMEtDSkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6SWlrcFcyNHVhWE5YWldKSFRESWdQeUFpZG1WeWRHVjRRWFIwY21saVJHbDJhWE52Y2lJZ09pQWlkbVZ5ZEdWNFFYUjBjbWxpUkdsMmFYTnZja0ZPUjB4RklsMG9WU3dnZWlrc0lHNWxXMVZkSUQwZ2VpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIzS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ2JDNXVaWGRCZEhSeWFXSjFkR1Z6TENCNklEMGdiQzVsYm1GaWJHVmtRWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEVnUFNBd0xDQklJRDBnZWk1c1pXNW5kR2c3SUhFZ1BDQklPeUJ4S3lzcGVsdHhYU0FoUFQwZ1ZWdHhYU0FtSmlBb2N6RXVaR2x6WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtIRXBMQ0I2VzNGZElEMGdNQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCU0tGVXNJSG9zSUhFc0lFZ3NJRzVsTENCWExDQkxLU0I3Q2lBZ0lDQWdJQ0FnU3lBOVBUMGdJVEFnUHlCek1TNTJaWEowWlhoQmRIUnlhV0pKVUc5cGJuUmxjaWhWTENCNkxDQnhMQ0J1WlN3Z1Z5a2dPaUJ6TVM1MlpYSjBaWGhCZEhSeWFXSlFiMmx1ZEdWeUtGVXNJSG9zSUhFc0lFZ3NJRzVsTENCWEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRWtvVlN3Z2Vpd2djU3dnU0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1selYyVmlSMHd5SUQwOVBTQWhNU0FtSmlBb1ZTNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ2ZId2dTQzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVLU0FtSmlCbExtZGxkQ2dpUVU1SFRFVmZhVzV6ZEdGdVkyVmtYMkZ5Y21GNWN5SXBJRDA5UFNCdWRXeHNLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdlQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUVndVlYUjBjbWxpZFhSbGN5d2dWeUE5SUhFdVoyVjBRWFIwY21saWRYUmxjeWdwTENCTElEMGdlaTVrWldaaGRXeDBRWFIwY21saWRYUmxWbUZzZFdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1JDQnBiaUJYS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVjZ1BTQlhXMFJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUnk1c2IyTmhkR2x2YmlBK1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FHVWdQU0J1WlZ0RVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hvWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hFSUQwOVBTQWlhVzV6ZEdGdVkyVk5ZWFJ5YVhnaUlDWW1JRlV1YVc1emRHRnVZMlZOWVhSeWFYZ2dKaVlnS0dobElEMGdWUzVwYm5OMFlXNWpaVTFoZEhKcGVDa3NJRVFnUFQwOUlDSnBibk4wWVc1alpVTnZiRzl5SWlBbUppQlZMbWx1YzNSaGJtTmxRMjlzYjNJZ0ppWWdLR2hsSUQwZ1ZTNXBibk4wWVc1alpVTnZiRzl5S1Nrc0lHaGxJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQm9aUzV1YjNKdFlXeHBlbVZrTENCZlpTQTlJR2hsTG1sMFpXMVRhWHBsTENCM1pTQTlJSFF1WjJWMEtHaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kMlVnUFQwOUlIWnZhV1FnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVWbElEMGdkMlV1WW5WbVptVnlMQ0JVWlNBOUlIZGxMblI1Y0dVc0lGbGxJRDBnZDJVdVlubDBaWE5RWlhKRmJHVnRaVzUwTENCcGRDQTlJRzR1YVhOWFpXSkhURElnUFQwOUlDRXdJQ1ltSUNoVVpTQTlQVDBnY3pFdVNVNVVJSHg4SUZSbElEMDlQU0J6TVM1VlRsTkpSMDVGUkY5SlRsUWdmSHdnYUdVdVozQjFWSGx3WlNBOVBUMGdaR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hvWlM1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JEWlNBOUlHaGxMbVJoZEdFc0lFd2dQU0JEWlM1emRISnBaR1VzSUc5bElEMGdhR1V1YjJabWMyVjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUTJVdWFYTkpibk4wWVc1alpXUkpiblJsY214bFlYWmxaRUoxWm1abGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JZSUQwZ01Ec2dXQ0E4SUVjdWJHOWpZWFJwYjI1VGFYcGxPeUJZS3lzcFlpaEhMbXh2WTJGMGFXOXVJQ3NnV0N3Z1EyVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JWTG1selNXNXpkR0Z1WTJWa1RXVnphQ0FoUFQwZ0lUQWdKaVlnU0M1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2hJTGw5dFlYaEpibk4wWVc1alpVTnZkVzUwSUQwZ1EyVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQXFJRU5sTG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHWnZjaWhzWlhRZ1dDQTlJREE3SUZnZ1BDQkhMbXh2WTJGMGFXOXVVMmw2WlRzZ1dDc3JLWGtvUnk1c2IyTmhkR2x2YmlBcklGZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzVpYVc1a1FuVm1abVZ5S0hNeExrRlNVa0ZaWDBKVlJrWkZVaXdnUldVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZnZ1BTQXdPeUJZSUR3Z1J5NXNiMk5oZEdsdmJsTnBlbVU3SUZnckt5bFNLRWN1Ykc5allYUnBiMjRnS3lCWUxDQmZaU0F2SUVjdWJHOWpZWFJwYjI1VGFYcGxMQ0JVWlN3Z1ptVXNJRXdnS2lCWlpTd2dLRzlsSUNzZ1gyVWdMeUJITG14dlkyRjBhVzl1VTJsNlpTQXFJRmdwSUNvZ1dXVXNJR2wwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hR1V1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1EyVWdQU0F3T3lCRFpTQThJRWN1Ykc5allYUnBiMjVUYVhwbE95QkRaU3NyS1dJb1J5NXNiMk5oZEdsdmJpQXJJRU5sTENCb1pTNXRaWE5vVUdWeVFYUjBjbWxpZFhSbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRlV1YVhOSmJuTjBZVzVqWldSTlpYTm9JQ0U5UFNBaE1DQW1KaUJJTGw5dFlYaEpibk4wWVc1alpVTnZkVzUwSUQwOVBTQjJiMmxrSURBZ0ppWWdLRWd1WDIxaGVFbHVjM1JoYm1ObFEyOTFiblFnUFNCb1pTNXRaWE5vVUdWeVFYUjBjbWxpZFhSbElDb2dhR1V1WTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1ptOXlLR3hsZENCRFpTQTlJREE3SUVObElEd2dSeTVzYjJOaGRHbHZibE5wZW1VN0lFTmxLeXNwZVNoSExteHZZMkYwYVc5dUlDc2dRMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TVM1aWFXNWtRblZtWm1WeUtITXhMa0ZTVWtGWlgwSlZSa1pGVWl3Z1JXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFTmxJRDBnTURzZ1EyVWdQQ0JITG14dlkyRjBhVzl1VTJsNlpUc2dRMlVyS3lsU0tFY3ViRzlqWVhScGIyNGdLeUJEWlN3Z1gyVWdMeUJITG14dlkyRjBhVzl1VTJsNlpTd2dWR1VzSUdabExDQmZaU0FxSUZsbExDQmZaU0F2SUVjdWJHOWpZWFJwYjI1VGFYcGxJQ29nUTJVZ0tpQlpaU3dnYVhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvU3lBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWmxJRDBnUzF0RVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1ptVWdJVDA5SUhadmFXUWdNQ2tnYzNkcGRHTm9LR1psTG14bGJtZDBhQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE14TG5abGNuUmxlRUYwZEhKcFlqSm1kaWhITG14dlkyRjBhVzl1TENCbVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVkbVZ5ZEdWNFFYUjBjbWxpTTJaMktFY3ViRzlqWVhScGIyNHNJR1psS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TVM1MlpYSjBaWGhCZEhSeWFXSTBabllvUnk1c2IyTmhkR2x2Yml3Z1ptVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzUyWlhKMFpYaEJkSFJ5YVdJeFpuWW9SeTVzYjJOaGRHbHZiaXdnWm1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjNLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTktDa2dld29nSUNBZ0lDQWdJRmtvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZVZ2FXNGdieWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ2IxdFZYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeElHbHVJSG9wZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFZ2dQU0I2VzNGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQnBiaUJJS1cwb1NGdHVaVjB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRWhiYm1WZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhwYmNWMDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHOWJWVjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ZDaFZLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOWJWUzVwWkYwZ1BUMDlJSFp2YVdRZ01Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ2IxdFZMbWxrWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhFZ2FXNGdlaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JJSUQwZ2VsdHhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQnBiaUJJS1cwb1NGdHVaVjB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRWhiYm1WZE93b2dJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdlbHR4WFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pHVnNaWFJsSUc5YlZTNXBaRjA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUEtGVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSG9nYVc0Z2J5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnhJRDBnYjF0NlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIRmJWUzVwWkYwZ1BUMDlJSFp2YVdRZ01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQklJRDBnY1Z0VkxtbGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQnBiaUJJS1cwb1NGdHVaVjB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRWhiYm1WZE93b2dJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdjVnRWTG1sa1hUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJaS0NrZ2V3b2dJQ0FnSUNBZ0lDUW9LU3dnYUNBOUlDRXdMQ0JzSUNFOVBTQmpJQ1ltSUNoc0lEMGdZeXdnWmloc0xtOWlhbVZqZENrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdKQ2dwSUhzS0lDQWdJQ0FnSUNCakxtZGxiMjFsZEhKNUlEMGdiblZzYkN3Z1l5NXdjbTluY21GdElEMGdiblZzYkN3Z1l5NTNhWEpsWm5KaGJXVWdQU0FoTVRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2MyVjBkWEE2SUhVc0NpQWdJQ0FnSUNBZ2NtVnpaWFE2SUZrc0NpQWdJQ0FnSUNBZ2NtVnpaWFJFWldaaGRXeDBVM1JoZEdVNklDUXNDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2dUU3dLSUNBZ0lDQWdJQ0J5Wld4bFlYTmxVM1JoZEdWelQyWkhaVzl0WlhSeWVUb2dWQ3dLSUNBZ0lDQWdJQ0J5Wld4bFlYTmxVM1JoZEdWelQyWlFjbTluY21GdE9pQlBMQW9nSUNBZ0lDQWdJR2x1YVhSQmRIUnlhV0oxZEdWek9pQjRMQW9nSUNBZ0lDQWdJR1Z1WVdKc1pVRjBkSEpwWW5WMFpUb2dlU3dLSUNBZ0lDQWdJQ0JrYVhOaFlteGxWVzUxYzJWa1FYUjBjbWxpZFhSbGN6b2dkd29nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJwWHloek1Td2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCdUxtbHpWMlZpUjB3eUxDQnlPd29nSUNBZ1puVnVZM1JwYjI0Z1lTaHNLU0I3Q2lBZ0lDQWdJQ0FnY2lBOUlHdzdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ2S0d3c0lHZ3BJSHNLSUNBZ0lDQWdJQ0J6TVM1a2NtRjNRWEp5WVhsektISXNJR3dzSUdncExDQjBMblZ3WkdGMFpTaG9MQ0J5TENBeEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR01vYkN3Z2FDd2dkU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDFJRDA5UFNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJR1FzSUdZN0NpQWdJQ0FnSUNBZ2FXWWdLR2twSUdRZ1BTQnpNU3dnWmlBOUlDSmtjbUYzUVhKeVlYbHpTVzV6ZEdGdVkyVmtJanNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hrSUQwZ1pTNW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU3dnWmlBOUlDSmtjbUYzUVhKeVlYbHpTVzV6ZEdGdVkyVmtRVTVIVEVVaUxDQmtJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVFuVm1abVZ5VW1WdVpHVnlaWEk2SUhWemFXNW5JRlJJVWtWRkxrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUdKMWRDQm9ZWEprZDJGeVpTQmtiMlZ6SUc1dmRDQnpkWEJ3YjNKMElHVjRkR1Z1YzJsdmJpQkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1JiWmwwb2Npd2diQ3dnYUN3Z2RTa3NJSFF1ZFhCa1lYUmxLR2dzSUhJc0lIVXBPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NXpaWFJOYjJSbElEMGdZU3dnZEdocGN5NXlaVzVrWlhJZ1BTQnZMQ0IwYUdsekxuSmxibVJsY2tsdWMzUmhibU5sY3lBOUlHTTdDbjBLWm5WdVkzUnBiMjRnYzE4b2N6RXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVPd29nSUNBZ1puVnVZM1JwYjI0Z2FTZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2JpQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdianNLSUNBZ0lDQWdJQ0JwWmlBb1pTNW9ZWE1vSWtWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVaUE5SUdVdVoyVjBLQ0pGV0ZSZmRHVjRkSFZ5WlY5bWFXeDBaWEpmWVc1cGMyOTBjbTl3YVdNaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYmlBOUlITXhMbWRsZEZCaGNtRnRaWFJsY2loU0xrMUJXRjlVUlZoVVZWSkZYMDFCV0Y5QlRrbFRUMVJTVDFCWlgwVllWQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRzRnUFNBd093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjaWhTS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRklnUFQwOUlDSm9hV2RvY0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITXhMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDaHpNUzVXUlZKVVJWaGZVMGhCUkVWU0xDQnpNUzVJU1VkSVgwWk1UMEZVS1M1d2NtVmphWE5wYjI0Z1BpQXdJQ1ltSUhNeExtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENoek1TNUdVa0ZIVFVWT1ZGOVRTRUZFUlZJc0lITXhMa2hKUjBoZlJreFBRVlFwTG5CeVpXTnBjMmx2YmlBK0lEQXBJSEpsZEhWeWJpQWlhR2xuYUhBaU93b2dJQ0FnSUNBZ0lDQWdJQ0JTSUQwZ0ltMWxaR2wxYlhBaU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1VpQTlQVDBnSW0xbFpHbDFiWEFpSUNZbUlITXhMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDaHpNUzVXUlZKVVJWaGZVMGhCUkVWU0xDQnpNUzVOUlVSSlZVMWZSa3hQUVZRcExuQnlaV05wYzJsdmJpQStJREFnSmlZZ2N6RXVaMlYwVTJoaFpHVnlVSEpsWTJsemFXOXVSbTl5YldGMEtITXhMa1pTUVVkTlJVNVVYMU5JUVVSRlVpd2djekV1VFVWRVNWVk5YMFpNVDBGVUtTNXdjbVZqYVhOcGIyNGdQaUF3SUQ4Z0ltMWxaR2wxYlhBaUlEb2dJbXh2ZDNBaU93b2dJQ0FnZlFvZ0lDQWdiR1YwSUdFZ1BTQjBlWEJsYjJZZ1YyVmlSMHd5VW1WdVpHVnlhVzVuUTI5dWRHVjRkQ0E4SUNKMUlpQW1KaUJ6TVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsSUQwOVBTQWlWMlZpUjB3eVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZENJc0lHOGdQU0IwTG5CeVpXTnBjMmx2YmlBaFBUMGdkbTlwWkNBd0lEOGdkQzV3Y21WamFYTnBiMjRnT2lBaWFHbG5hSEFpTENCaklEMGdjaWh2S1RzS0lDQWdJR01nSVQwOUlHOGdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9pTENCdkxDQWlibTkwSUhOMWNIQnZjblJsWkN3Z2RYTnBibWNpTENCakxDQWlhVzV6ZEdWaFpDNGlLU3dnYnlBOUlHTXBPd29nSUNBZ2JHVjBJR3dnUFNCaElIeDhJR1V1YUdGektDSlhSVUpIVEY5a2NtRjNYMkoxWm1abGNuTWlLU3dnYUNBOUlIUXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lBOVBUMGdJVEFzSUhVZ1BTQnpNUzVuWlhSUVlYSmhiV1YwWlhJb2N6RXVUVUZZWDFSRldGUlZVa1ZmU1UxQlIwVmZWVTVKVkZNcExDQmtJRDBnY3pFdVoyVjBVR0Z5WVcxbGRHVnlLSE14TGsxQldGOVdSVkpVUlZoZlZFVllWRlZTUlY5SlRVRkhSVjlWVGtsVVV5a3NJR1lnUFNCek1TNW5aWFJRWVhKaGJXVjBaWElvY3pFdVRVRllYMVJGV0ZSVlVrVmZVMGxhUlNrc0lHMGdQU0J6TVM1blpYUlFZWEpoYldWMFpYSW9jekV1VFVGWVgwTlZRa1ZmVFVGUVgxUkZXRlJWVWtWZlUwbGFSU2tzSUY4Z1BTQnpNUzVuWlhSUVlYSmhiV1YwWlhJb2N6RXVUVUZZWDFaRlVsUkZXRjlCVkZSU1NVSlRLU3dnWnlBOUlITXhMbWRsZEZCaGNtRnRaWFJsY2loek1TNU5RVmhmVmtWU1ZFVllYMVZPU1VaUFVrMWZWa1ZEVkU5U1V5a3NJSEFnUFNCek1TNW5aWFJRWVhKaGJXVjBaWElvY3pFdVRVRllYMVpCVWxsSlRrZGZWa1ZEVkU5U1V5a3NJSFlnUFNCek1TNW5aWFJRWVhKaGJXVjBaWElvY3pFdVRVRllYMFpTUVVkTlJVNVVYMVZPU1VaUFVrMWZWa1ZEVkU5U1V5a3NJSGdnUFNCa0lENGdNQ3dnZVNBOUlHRWdmSHdnWlM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBJaWtzSUdJZ1BTQjRJQ1ltSUhrc0lIY2dQU0JoSUQ4Z2N6RXVaMlYwVUdGeVlXMWxkR1Z5S0hNeExrMUJXRjlUUVUxUVRFVlRLU0E2SURBN0NpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2x6VjJWaVIwd3lPaUJoTEFvZ0lDQWdJQ0FnSUdSeVlYZENkV1ptWlhKek9pQnNMQW9nSUNBZ0lDQWdJR2RsZEUxaGVFRnVhWE52ZEhKdmNIazZJR2tzQ2lBZ0lDQWdJQ0FnWjJWMFRXRjRVSEpsWTJsemFXOXVPaUJ5TEFvZ0lDQWdJQ0FnSUhCeVpXTnBjMmx2YmpvZ2J5d0tJQ0FnSUNBZ0lDQnNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5T2lCb0xBb2dJQ0FnSUNBZ0lHMWhlRlJsZUhSMWNtVnpPaUIxTEFvZ0lDQWdJQ0FnSUcxaGVGWmxjblJsZUZSbGVIUjFjbVZ6T2lCa0xBb2dJQ0FnSUNBZ0lHMWhlRlJsZUhSMWNtVlRhWHBsT2lCbUxBb2dJQ0FnSUNBZ0lHMWhlRU4xWW1WdFlYQlRhWHBsT2lCdExBb2dJQ0FnSUNBZ0lHMWhlRUYwZEhKcFluVjBaWE02SUY4c0NpQWdJQ0FnSUNBZ2JXRjRWbVZ5ZEdWNFZXNXBabTl5YlhNNklHY3NDaUFnSUNBZ0lDQWdiV0Y0Vm1GeWVXbHVaM002SUhBc0NpQWdJQ0FnSUNBZ2JXRjRSbkpoWjIxbGJuUlZibWxtYjNKdGN6b2dkaXdLSUNBZ0lDQWdJQ0IyWlhKMFpYaFVaWGgwZFhKbGN6b2dlQ3dLSUNBZ0lDQWdJQ0JtYkc5aGRFWnlZV2R0Wlc1MFZHVjRkSFZ5WlhNNklIa3NDaUFnSUNBZ0lDQWdabXh2WVhSV1pYSjBaWGhVWlhoMGRYSmxjem9nWWl3S0lDQWdJQ0FnSUNCdFlYaFRZVzF3YkdWek9pQjNDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJSEpmS0hNeEtTQjdDaUFnSUNCc1pYUWdaU0E5SUhSb2FYTXNJSFFnUFNCdWRXeHNMQ0J1SUQwZ01Dd2dhU0E5SUNFeExDQnlJRDBnSVRFc0lHRWdQU0J1WlhjZ2JXNHNJRzhnUFNCdVpYY2dTR1VzSUdNZ1BTQjdDaUFnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnYm1WbFpITlZjR1JoZEdVNklDRXhDaUFnSUNCOU93b2dJQ0FnZEdocGN5NTFibWxtYjNKdElEMGdZeXdnZEdocGN5NXVkVzFRYkdGdVpYTWdQU0F3TENCMGFHbHpMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJREFzSUhSb2FYTXVhVzVwZENBOUlHWjFibU4wYVc5dUtIVXNJR1FwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUhVdWJHVnVaM1JvSUNFOVBTQXdJSHg4SUdRZ2ZId2diaUFoUFQwZ01DQjhmQ0JwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwSUQwZ1pDd2diaUE5SUhVdWJHVnVaM1JvTENCbU93b2dJQ0FnZlN3Z2RHaHBjeTVpWldkcGJsTm9ZV1J2ZDNNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5SUQwZ0lUQXNJR2dvYm5Wc2JDazdDaUFnSUNCOUxDQjBhR2x6TG1WdVpGTm9ZV1J2ZDNNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5SUQwZ0lURTdDaUFnSUNCOUxDQjBhR2x6TG5ObGRFZHNiMkpoYkZOMFlYUmxJRDBnWm5WdVkzUnBiMjRvZFN3Z1pDa2dld29nSUNBZ0lDQWdJSFFnUFNCb0tIVXNJR1FzSURBcE93b2dJQ0FnZlN3Z2RHaHBjeTV6WlhSVGRHRjBaU0E5SUdaMWJtTjBhVzl1S0hVc0lHUXNJR1lwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUhVdVkyeHBjSEJwYm1kUWJHRnVaWE1zSUY4Z1BTQjFMbU5zYVhCSmJuUmxjbk5sWTNScGIyNHNJR2NnUFNCMUxtTnNhWEJUYUdGa2IzZHpMQ0J3SUQwZ2N6RXVaMlYwS0hVcE93b2dJQ0FnSUNBZ0lHbG1JQ2doYVNCOGZDQnRJRDA5UFNCdWRXeHNJSHg4SUcwdWJHVnVaM1JvSUQwOVBTQXdJSHg4SUhJZ0ppWWdJV2NwSUhJZ1B5Qm9LRzUxYkd3cElEb2diQ2dwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUhJZ1B5QXdJRG9nYml3Z2VDQTlJSFlnS2lBMExDQjVJRDBnY0M1amJHbHdjR2x1WjFOMFlYUmxJSHg4SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUdNdWRtRnNkV1VnUFNCNUxDQjVJRDBnYUNodExDQmtMQ0I0TENCbUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JpSUQwZ01Ec2dZaUFoUFQwZ2VEc2dLeXRpS1hsYllsMGdQU0IwVzJKZE93b2dJQ0FnSUNBZ0lDQWdJQ0J3TG1Oc2FYQndhVzVuVTNSaGRHVWdQU0I1TENCMGFHbHpMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJRjhnUHlCMGFHbHpMbTUxYlZCc1lXNWxjeUE2SURBc0lIUm9hWE11Ym5WdFVHeGhibVZ6SUNzOUlIWTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZUc0tJQ0FnSUdaMWJtTjBhVzl1SUd3b0tTQjdDaUFnSUNBZ0lDQWdZeTUyWVd4MVpTQWhQVDBnZENBbUppQW9ZeTUyWVd4MVpTQTlJSFFzSUdNdWJtVmxaSE5WY0dSaGRHVWdQU0J1SUQ0Z01Da3NJR1V1Ym5WdFVHeGhibVZ6SUQwZ2Jpd2daUzV1ZFcxSmJuUmxjbk5sWTNScGIyNGdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FDaDFMQ0JrTENCbUxDQnRLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGOGdQU0IxSUNFOVBTQnVkV3hzSUQ4Z2RTNXNaVzVuZEdnZ09pQXdMQ0JuSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb1h5QWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1p5QTlJR011ZG1Gc2RXVXNJRzBnSVQwOUlDRXdJSHg4SUdjZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ1ppQXJJRjhnS2lBMExDQjJJRDBnWkM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdkxtZGxkRTV2Y20xaGJFMWhkSEpwZUNoMktTd2dLR2NnUFQwOUlHNTFiR3dnZkh3Z1p5NXNaVzVuZEdnZ1BDQndLU0FtSmlBb1p5QTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29jQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I0SUQwZ01Dd2dlU0E5SUdZN0lIZ2dJVDA5SUY4N0lDc3JlQ3dnZVNBclBTQTBLV0V1WTI5d2VTaDFXM2hkS1M1aGNIQnNlVTFoZEhKcGVEUW9kaXdnYnlrc0lHRXVibTl5YldGc0xuUnZRWEp5WVhrb1p5d2dlU2tzSUdkYmVTQXJJRE5kSUQwZ1lTNWpiMjV6ZEdGdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmpMblpoYkhWbElEMGdaeXdnWXk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dWRXMVFiR0Z1WlhNZ1BTQmZMQ0JsTG01MWJVbHVkR1Z5YzJWamRHbHZiaUE5SURBc0lHYzdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdZVjhvY3pFcElIc0tJQ0FnSUd4bGRDQmxJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUIwS0dFc0lHOHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieUE5UFQwZ1NYSWdQeUJoTG0xaGNIQnBibWNnUFNCNmJpQTZJRzhnUFQwOUlGVnlJQ1ltSUNoaExtMWhjSEJwYm1jZ1BTQmphU2tzSUdFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLR0VwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZU0FtSmlCaExtbHpWR1Y0ZEhWeVpTQW1KaUJoTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0JoTG0xaGNIQnBibWM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2SUQwOVBTQkpjaUI4ZkNCdklEMDlQU0JWY2lrZ2FXWWdLR1V1YUdGektHRXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR1V1WjJWMEtHRXBMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDaGpMQ0JoTG0xaGNIQnBibWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCaExtbHRZV2RsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTWdKaVlnWXk1b1pXbG5hSFFnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1WlhjZ2VHOG9ZeTVvWldsbmFIUWdMeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDNW1jbTl0UlhGMWFYSmxZM1JoYm1kMWJHRnlWR1Y0ZEhWeVpTaHpNU3dnWVNrc0lHVXVjMlYwS0dFc0lHd3BMQ0JoTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCcEtTd2dkQ2hzTG5SbGVIUjFjbVVzSUdFdWJXRndjR2x1WnlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtHRXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR0V1ZEdGeVoyVjBPd29nSUNBZ0lDQWdJRzh1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lHa3BPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdaUzVuWlhRb2J5azdDaUFnSUNBZ0lDQWdZeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbVJsYkdWMFpTaHZLU3dnWXk1a2FYTndiM05sS0NrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjaWdwSUhzS0lDQWdJQ0FnSUNCbElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2diaXdLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJ5Q2lBZ0lDQjlPd3A5Q25aaGNpQk1jeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDMHhMQ0IwSUQwZ01Td2diaUE5SURFc0lHa2dQU0F0TVN3Z2NpQTlJQzR4TENCaElEMGdNbVV6S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6VDNKMGFHOW5jbUZ3YUdsalEyRnRaWEpoSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FaUxDQjBhR2x6TG5wdmIyMGdQU0F4TENCMGFHbHpMblpwWlhjZ1BTQnVkV3hzTENCMGFHbHpMbXhsWm5RZ1BTQmxMQ0IwYUdsekxuSnBaMmgwSUQwZ2RDd2dkR2hwY3k1MGIzQWdQU0J1TENCMGFHbHpMbUp2ZEhSdmJTQTlJR2tzSUhSb2FYTXVibVZoY2lBOUlISXNJSFJvYVhNdVptRnlJRDBnWVN3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnZEdocGN5NXNaV1owSUQwZ1pTNXNaV1owTENCMGFHbHpMbkpwWjJoMElEMGdaUzV5YVdkb2RDd2dkR2hwY3k1MGIzQWdQU0JsTG5SdmNDd2dkR2hwY3k1aWIzUjBiMjBnUFNCbExtSnZkSFJ2YlN3Z2RHaHBjeTV1WldGeUlEMGdaUzV1WldGeUxDQjBhR2x6TG1aaGNpQTlJR1V1Wm1GeUxDQjBhR2x6TG5wdmIyMGdQU0JsTG5wdmIyMHNJSFJvYVhNdWRtbGxkeUE5SUdVdWRtbGxkeUE5UFQwZ2JuVnNiQ0EvSUc1MWJHd2dPaUJQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5acFpYY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVm1sbGQwOW1abk5sZENobExDQjBMQ0J1TENCcExDQnlMQ0JoS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTUyYVdWM0lEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxuWnBaWGNnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WVdKc1pXUTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1kV3hzVjJsa2RHZzZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWjFiR3hJWldsbmFIUTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEZnNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRms2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MmFXVjNMbVZ1WVdKc1pXUWdQU0FoTUN3Z2RHaHBjeTUyYVdWM0xtWjFiR3hYYVdSMGFDQTlJR1VzSUhSb2FYTXVkbWxsZHk1bWRXeHNTR1ZwWjJoMElEMGdkQ3dnZEdocGN5NTJhV1YzTG05bVpuTmxkRmdnUFNCdUxDQjBhR2x6TG5acFpYY3ViMlptYzJWMFdTQTlJR2tzSUhSb2FYTXVkbWxsZHk1M2FXUjBhQ0E5SUhJc0lIUm9hWE11ZG1sbGR5NW9aV2xuYUhRZ1BTQmhMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5Vm1sbGQwOW1abk5sZENncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5acFpYY2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVkbWxsZHk1bGJtRmliR1ZrSUQwZ0lURXBMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBb2RHaHBjeTV5YVdkb2RDQXRJSFJvYVhNdWJHVm1kQ2tnTHlBb01pQXFJSFJvYVhNdWVtOXZiU2tzSUhRZ1BTQW9kR2hwY3k1MGIzQWdMU0IwYUdsekxtSnZkSFJ2YlNrZ0x5QW9NaUFxSUhSb2FYTXVlbTl2YlNrc0lHNGdQU0FvZEdocGN5NXlhV2RvZENBcklIUm9hWE11YkdWbWRDa2dMeUF5TENCcElEMGdLSFJvYVhNdWRHOXdJQ3NnZEdocGN5NWliM1IwYjIwcElDOGdNaXdnY2lBOUlHNGdMU0JsTENCaElEMGdiaUFySUdVc0lHOGdQU0JwSUNzZ2RDd2dZeUE5SUdrZ0xTQjBPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1MmFXVjNMbVZ1WVdKc1pXUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNBb2RHaHBjeTV5YVdkb2RDQXRJSFJvYVhNdWJHVm1kQ2tnTHlCMGFHbHpMblpwWlhjdVpuVnNiRmRwWkhSb0lDOGdkR2hwY3k1NmIyOXRMQ0JvSUQwZ0tIUm9hWE11ZEc5d0lDMGdkR2hwY3k1aWIzUjBiMjBwSUM4Z2RHaHBjeTUyYVdWM0xtWjFiR3hJWldsbmFIUWdMeUIwYUdsekxucHZiMjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdLejBnYkNBcUlIUm9hWE11ZG1sbGR5NXZabVp6WlhSWUxDQmhJRDBnY2lBcklHd2dLaUIwYUdsekxuWnBaWGN1ZDJsa2RHZ3NJRzhnTFQwZ2FDQXFJSFJvYVhNdWRtbGxkeTV2Wm1aelpYUlpMQ0JqSUQwZ2J5QXRJR2dnS2lCMGFHbHpMblpwWlhjdWFHVnBaMmgwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3ViV0ZyWlU5eWRHaHZaM0poY0docFl5aHlMQ0JoTENCdkxDQmpMQ0IwYUdsekxtNWxZWElzSUhSb2FYTXVabUZ5TENCMGFHbHpMbU52YjNKa2FXNWhkR1ZUZVhOMFpXMHBMQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sTG1OdmNIa29kR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1M1cGJuWmxjblFvS1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWIySnFaV04wTG5wdmIyMGdQU0IwYUdsekxucHZiMjBzSUhRdWIySnFaV04wTG14bFpuUWdQU0IwYUdsekxteGxablFzSUhRdWIySnFaV04wTG5KcFoyaDBJRDBnZEdocGN5NXlhV2RvZEN3Z2RDNXZZbXBsWTNRdWRHOXdJRDBnZEdocGN5NTBiM0FzSUhRdWIySnFaV04wTG1KdmRIUnZiU0E5SUhSb2FYTXVZbTkwZEc5dExDQjBMbTlpYW1WamRDNXVaV0Z5SUQwZ2RHaHBjeTV1WldGeUxDQjBMbTlpYW1WamRDNW1ZWElnUFNCMGFHbHpMbVpoY2l3Z2RHaHBjeTUyYVdWM0lDRTlQU0J1ZFd4c0lDWW1JQ2gwTG05aWFtVmpkQzUyYVdWM0lEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2dkR2hwY3k1MmFXVjNLU2tzSUhRN0NpQWdJQ0I5Q24wc0lFaHBJRDBnTkN3Z2FHZ2dQU0JiQ2lBZ0lDQXVNVEkxTEFvZ0lDQWdMakl4TlN3S0lDQWdJQzR6TlN3S0lDQWdJQzQwTkRZc0NpQWdJQ0F1TlRJMkxBb2dJQ0FnTGpVNE1ncGRMQ0JsYVNBOUlESXdMQ0FrWVNBOUlHNWxkeUJNY3l3Z2RXZ2dQU0J1WlhjZ2NHVXNJRXRoSUQwZ2JuVnNiQ3dnYW00Z1BTQW9NU0FySUUxaGRHZ3VjM0Z5ZENnMUtTa2dMeUF5TENCTWFTQTlJREVnTHlCcWJpd2daR2dnUFNCYkNpQWdJQ0J1WlhjZ1FTZ3hMQ0F4TENBeEtTd0tJQ0FnSUc1bGR5QkJLQzB4TENBeExDQXhLU3dLSUNBZ0lHNWxkeUJCS0RFc0lERXNJQzB4S1N3S0lDQWdJRzVsZHlCQktDMHhMQ0F4TENBdE1Ta3NDaUFnSUNCdVpYY2dRU2d3TENCcWJpd2dUR2twTEFvZ0lDQWdibVYzSUVFb01Dd2dhbTRzSUMxTWFTa3NDaUFnSUNCdVpYY2dRU2hNYVN3Z01Dd2dhbTRwTEFvZ0lDQWdibVYzSUVFb0xVeHBMQ0F3TENCcWJpa3NDaUFnSUNCdVpYY2dRU2hxYml3Z1RHa3NJREFwTEFvZ0lDQWdibVYzSUVFb0xXcHVMQ0JNYVN3Z01Da0tYU3dnUzNJZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5eVpXNWtaWEpsY2lBOUlHVXNJSFJvYVhNdVgzQnBibWRRYjI1blVtVnVaR1Z5VkdGeVoyVjBJRDBnYm5Wc2JDd2dkR2hwY3k1ZmJHOWtUV0Y0SUQwZ01Dd2dkR2hwY3k1ZlkzVmlaVk5wZW1VZ1BTQXdMQ0IwYUdsekxsOXNiMlJRYkdGdVpYTWdQU0JiWFN3Z2RHaHBjeTVmYzJsNlpVeHZaSE1nUFNCYlhTd2dkR2hwY3k1ZmMybG5iV0Z6SUQwZ1cxMHNJSFJvYVhNdVgySnNkWEpOWVhSbGNtbGhiQ0E5SUc1MWJHd3NJSFJvYVhNdVgyTjFZbVZ0WVhCTllYUmxjbWxoYkNBOUlHNTFiR3dzSUhSb2FYTXVYMlZ4ZFdseVpXTjBUV0YwWlhKcFlXd2dQU0J1ZFd4c0xDQjBhR2x6TGw5amIyMXdhV3hsVFdGMFpYSnBZV3dvZEdocGN5NWZZbXgxY2sxaGRHVnlhV0ZzS1RzS0lDQWdJSDBLSUNBZ0lHWnliMjFUWTJWdVpTaGxMQ0IwSUQwZ01Dd2diaUE5SUM0eExDQnBJRDBnTVRBd0tTQjdDaUFnSUNBZ0lDQWdTMkVnUFNCMGFHbHpMbDl5Wlc1a1pYSmxjaTVuWlhSU1pXNWtaWEpVWVhKblpYUW9LU3dnZEdocGN5NWZjMlYwVTJsNlpTZ3lOVFlwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5NWZZV3hzYjJOaGRHVlVZWEpuWlhSektDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISXVaR1Z3ZEdoQ2RXWm1aWElnUFNBaE1Dd2dkR2hwY3k1ZmMyTmxibVZVYjBOMVltVlZWaWhsTENCdUxDQnBMQ0J5S1N3Z2RDQStJREFnSmlZZ2RHaHBjeTVmWW14MWNpaHlMQ0F3TENBd0xDQjBLU3dnZEdocGN5NWZZWEJ3YkhsUVRWSkZUU2h5S1N3Z2RHaHBjeTVmWTJ4bFlXNTFjQ2h5S1N3Z2Nqc0tJQ0FnSUgwS0lDQWdJR1p5YjIxRmNYVnBjbVZqZEdGdVozVnNZWElvWlN3Z2RDQTlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWm5KdmJWUmxlSFIxY21Vb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRM1ZpWlcxaGNDaGxMQ0IwSUQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOW1jbTl0VkdWNGRIVnlaU2hsTENCMEtUc0tJQ0FnSUgwS0lDQWdJR052YlhCcGJHVkRkV0psYldGd1UyaGhaR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDJOMVltVnRZWEJOWVhSbGNtbGhiQ0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWTNWaVpXMWhjRTFoZEdWeWFXRnNJRDBnYldnb0tTd2dkR2hwY3k1ZlkyOXRjR2xzWlUxaGRHVnlhV0ZzS0hSb2FYTXVYMk4xWW1WdFlYQk5ZWFJsY21saGJDa3BPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNHbHNaVVZ4ZFdseVpXTjBZVzVuZFd4aGNsTm9ZV1JsY2lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5bGNYVnBjbVZqZEUxaGRHVnlhV0ZzSUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5bGNYVnBjbVZqZEUxaGRHVnlhV0ZzSUQwZ2NHZ29LU3dnZEdocGN5NWZZMjl0Y0dsc1pVMWhkR1Z5YVdGc0tIUm9hWE11WDJWeGRXbHlaV04wVFdGMFpYSnBZV3dwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZlpHbHpjRzl6WlNncExDQjBhR2x6TGw5amRXSmxiV0Z3VFdGMFpYSnBZV3dnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVmWTNWaVpXMWhjRTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWZaWEYxYVhKbFkzUk5ZWFJsY21saGJDQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxsOWxjWFZwY21WamRFMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSVGFYcGxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDlzYjJSTllYZ2dQU0JOWVhSb0xtWnNiMjl5S0UxaGRHZ3ViRzluTWlobEtTa3NJSFJvYVhNdVgyTjFZbVZUYVhwbElEMGdUV0YwYUM1d2IzY29NaXdnZEdocGN5NWZiRzlrVFdGNEtUc0tJQ0FnSUgwS0lDQWdJRjlrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYMkpzZFhKTllYUmxjbWxoYkNBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5aWJIVnlUV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BMQ0IwYUdsekxsOXdhVzVuVUc5dVoxSmxibVJsY2xSaGNtZGxkQ0FoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbDl3YVc1blVHOXVaMUpsYm1SbGNsUmhjbWRsZEM1a2FYTndiM05sS0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNRHNnWlNBOElIUm9hWE11WDJ4dlpGQnNZVzVsY3k1c1pXNW5kR2c3SUdVckt5bDBhR2x6TGw5c2IyUlFiR0Z1WlhOYlpWMHVaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWDJOc1pXRnVkWEFvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNKbGJtUmxjbVZ5TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2hMWVNrc0lHVXVjMk5wYzNOdmNsUmxjM1FnUFNBaE1Td2diSElvWlN3Z01Dd2dNQ3dnWlM1M2FXUjBhQ3dnWlM1b1pXbG5hSFFwT3dvZ0lDQWdmUW9nSUNBZ1gyWnliMjFVWlhoMGRYSmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQmxMbTFoY0hCcGJtY2dQVDA5SUhwdUlIeDhJR1V1YldGd2NHbHVaeUE5UFQwZ1kya2dQeUIwYUdsekxsOXpaWFJUYVhwbEtHVXVhVzFoWjJVdWJHVnVaM1JvSUQwOVBTQXdJRDhnTVRZZ09pQmxMbWx0WVdkbFd6QmRMbmRwWkhSb0lIeDhJR1V1YVcxaFoyVmJNRjB1YVcxaFoyVXVkMmxrZEdncElEb2dkR2hwY3k1ZmMyVjBVMmw2WlNobExtbHRZV2RsTG5kcFpIUm9JQzhnTkNrc0lFdGhJRDBnZEdocGN5NWZjbVZ1WkdWeVpYSXVaMlYwVW1WdVpHVnlWR0Z5WjJWMEtDazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBJSHg4SUhSb2FYTXVYMkZzYkc5allYUmxWR0Z5WjJWMGN5Z3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MFpYaDBkWEpsVkc5RGRXSmxWVllvWlN3Z2Jpa3NJSFJvYVhNdVgyRndjR3g1VUUxU1JVMG9iaWtzSUhSb2FYTXVYMk5zWldGdWRYQW9iaWtzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmZZV3hzYjJOaGRHVlVZWEpuWlhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdNeUFxSUUxaGRHZ3ViV0Y0S0hSb2FYTXVYMk4xWW1WVGFYcGxMQ0F4TVRJcExDQjBJRDBnTkNBcUlIUm9hWE11WDJOMVltVlRhWHBsTENCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFlXZEdhV3gwWlhJNklHMTBMQW9nSUNBZ0lDQWdJQ0FnSUNCdGFXNUdhV3gwWlhJNklHMTBMQW9nSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwWlUxcGNHMWhjSE02SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQlVjeXdLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCWGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSlRjR0ZqWlRvZ1RXNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9RblZtWm1WeU9pQWhNUW9nSUNBZ0lDQWdJSDBzSUdrZ1BTQm1hQ2hsTENCMExDQnVLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmY0dsdVoxQnZibWRTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJRzUxYkd3Z2ZId2dkR2hwY3k1ZmNHbHVaMUJ2Ym1kU1pXNWtaWEpVWVhKblpYUXVkMmxrZEdnZ0lUMDlJR1VnZkh3Z2RHaHBjeTVmY0dsdVoxQnZibWRTWlc1a1pYSlVZWEpuWlhRdWFHVnBaMmgwSUNFOVBTQjBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNCcGJtZFFiMjVuVW1WdVpHVnlWR0Z5WjJWMElDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdVgyUnBjM0J2YzJVb0tTd2dkR2hwY3k1ZmNHbHVaMUJ2Ym1kU1pXNWtaWEpVWVhKblpYUWdQU0JtYUNobExDQjBMQ0J1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhzZ1gyeHZaRTFoZURvZ2NpQWdmU0E5SUhSb2FYTTdDaUFnSUNBZ0lDQWdJQ0FnSUNoN0lITnBlbVZNYjJSek9pQjBhR2x6TGw5emFYcGxURzlrY3lBc0lHeHZaRkJzWVc1bGN6b2dkR2hwY3k1ZmJHOWtVR3hoYm1WeklDd2djMmxuYldGek9pQjBhR2x6TGw5emFXZHRZWE1nSUgwZ1BTQnZYeWh5S1Nrc0lIUm9hWE11WDJKc2RYSk5ZWFJsY21saGJDQTlJR05mS0hJc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJSDBLSUNBZ0lGOWpiMjF3YVd4bFRXRjBaWEpwWVd3b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUUxMEtIUm9hWE11WDJ4dlpGQnNZVzVsYzFzd1hTd2daU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjbVZ1WkdWeVpYSXVZMjl0Y0dsc1pTaDBMQ0FrWVNrN0NpQWdJQ0I5Q2lBZ0lDQmZjMk5sYm1WVWIwTjFZbVZWVmlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQnVaWGNnZVhRb09UQXNJREVzSUhRc0lHNHBMQ0JqSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJR3dnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURUtJQ0FnSUNBZ0lDQmRMQ0JvSUQwZ2RHaHBjeTVmY21WdVpHVnlaWElzSUhVZ1BTQm9MbUYxZEc5RGJHVmhjaXdnWkNBOUlHZ3VkRzl1WlUxaGNIQnBibWM3Q2lBZ0lDQWdJQ0FnYUM1blpYUkRiR1ZoY2tOdmJHOXlLSFZvS1N3Z2FDNTBiMjVsVFdGd2NHbHVaeUE5SUU1dUxDQm9MbUYxZEc5RGJHVmhjaUE5SUNFeE93b2dJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2JtVjNJRk51S0hzS0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0lsQk5Va1ZOTGtKaFkydG5jbTkxYm1RaUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YVdSbE9pQkdkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJVEVLSUNBZ0lDQWdJQ0I5S1N3Z2JTQTlJRzVsZHlCTmRDaHVaWGNnU21rc0lHWXBMQ0JmSUQwZ0lURXNJR2NnUFNCbExtSmhZMnRuY205MWJtUTdDaUFnSUNBZ0lDQWdaeUEvSUdjdWFYTkRiMnh2Y2lBbUppQW9aaTVqYjJ4dmNpNWpiM0I1S0djcExDQmxMbUpoWTJ0bmNtOTFibVFnUFNCdWRXeHNMQ0JmSUQwZ0lUQXBJRG9nS0dZdVkyOXNiM0l1WTI5d2VTaDFhQ2tzSUY4Z1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Ec2djQ0E4SURZN0lIQXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ2NDQWxJRE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIWWdQVDA5SURBZ1B5QW9ieTUxY0M1elpYUW9NQ3dnWTF0d1hTd2dNQ2tzSUc4dWJHOXZhMEYwS0d4YmNGMHNJREFzSURBcEtTQTZJSFlnUFQwOUlERWdQeUFvYnk1MWNDNXpaWFFvTUN3Z01Dd2dZMXR3WFNrc0lHOHViRzl2YTBGMEtEQXNJR3hiY0Ywc0lEQXBLU0E2SUNodkxuVndMbk5sZENnd0xDQmpXM0JkTENBd0tTd2dieTVzYjI5clFYUW9NQ3dnTUN3Z2JGdHdYU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlIUm9hWE11WDJOMVltVlRhWHBsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNjaWhwTENCMklDb2dlQ3dnY0NBK0lESWdQeUI0SURvZ01Dd2dlQ3dnZUNrc0lHZ3VjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHa3BMQ0JmSUNZbUlHZ3VjbVZ1WkdWeUtHMHNJRzhwTENCb0xuSmxibVJsY2lobExDQnZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYlM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lHMHViV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BMQ0JvTG5SdmJtVk5ZWEJ3YVc1bklEMGdaQ3dnYUM1aGRYUnZRMnhsWVhJZ1BTQjFMQ0JsTG1KaFkydG5jbTkxYm1RZ1BTQm5Pd29nSUNBZ2ZRb2dJQ0FnWDNSbGVIUjFjbVZVYjBOMVltVlZWaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z2FTQTlJR1V1YldGd2NHbHVaeUE5UFQwZ2VtNGdmSHdnWlM1dFlYQndhVzVuSUQwOVBTQmphVHNLSUNBZ0lDQWdJQ0JwSUQ4Z0tIUm9hWE11WDJOMVltVnRZWEJOWVhSbGNtbGhiQ0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWTNWaVpXMWhjRTFoZEdWeWFXRnNJRDBnYldnb0tTa3NJSFJvYVhNdVgyTjFZbVZ0WVhCTllYUmxjbWxoYkM1MWJtbG1iM0p0Y3k1bWJHbHdSVzUyVFdGd0xuWmhiSFZsSUQwZ1pTNXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFQwOUlDRXhJRDhnTFRFZ09pQXhLU0E2SUhSb2FYTXVYMlZ4ZFdseVpXTjBUV0YwWlhKcFlXd2dQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMlZ4ZFdseVpXTjBUV0YwWlhKcFlXd2dQU0J3YUNncEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHa2dQeUIwYUdsekxsOWpkV0psYldGd1RXRjBaWEpwWVd3Z09pQjBhR2x6TGw5bGNYVnBjbVZqZEUxaGRHVnlhV0ZzTENCaElEMGdibVYzSUUxMEtIUm9hWE11WDJ4dlpGQnNZVzVsYzFzd1hTd2djaWtzSUc4Z1BTQnlMblZ1YVdadmNtMXpPd29nSUNBZ0lDQWdJRzh1Wlc1MlRXRndMblpoYkhWbElEMGdaVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJSFJvYVhNdVgyTjFZbVZUYVhwbE93b2dJQ0FnSUNBZ0lHeHlLSFFzSURBc0lEQXNJRE1nS2lCakxDQXlJQ29nWXlrc0lHNHVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIUXBMQ0J1TG5KbGJtUmxjaWhoTENBa1lTazdDaUFnSUNCOUNpQWdJQ0JmWVhCd2JIbFFUVkpGVFNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z2JpQTlJSFF1WVhWMGIwTnNaV0Z5T3dvZ0lDQWdJQ0FnSUhRdVlYVjBiME5zWldGeUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Uc2dhU0E4SUhSb2FYTXVYMnh2WkZCc1lXNWxjeTVzWlc1bmRHZzdJR2tyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdUV0YwYUM1emNYSjBLSFJvYVhNdVgzTnBaMjFoYzF0cFhTQXFJSFJvYVhNdVgzTnBaMjFoYzF0cFhTQXRJSFJvYVhNdVgzTnBaMjFoYzF0cElDMGdNVjBnS2lCMGFHbHpMbDl6YVdkdFlYTmJhU0F0SURGZEtTd2dZU0E5SUdSb1d5aHBJQzBnTVNrZ0pTQmthQzVzWlc1bmRHaGRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlpYkhWeUtHVXNJR2tnTFNBeExDQnBMQ0J5TENCaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzVoZFhSdlEyeGxZWElnUFNCdU93b2dJQ0FnZlFvZ0lDQWdYMkpzZFhJb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NWZjR2x1WjFCdmJtZFNaVzVrWlhKVVlYSm5aWFE3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZhR0ZzWmtKc2RYSW9aU3dnWVN3Z2RDd2diaXdnYVN3Z0lteGhkR2wwZFdScGJtRnNJaXdnY2lrc0lIUm9hWE11WDJoaGJHWkNiSFZ5S0dFc0lHVXNJRzRzSUc0c0lHa3NJQ0pzYjI1bmFYUjFaR2x1WVd3aUxDQnlLVHNLSUNBZ0lIMEtJQ0FnSUY5b1lXeG1RbXgxY2lobExDQjBMQ0J1TENCcExDQnlMQ0JoTENCdktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z2JDQTlJSFJvYVhNdVgySnNkWEpOWVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0JoSUNFOVBTQWliR0YwYVhSMVpHbHVZV3dpSUNZbUlHRWdJVDA5SUNKc2IyNW5hWFIxWkdsdVlXd2lJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9JbUpzZFhJZ1pHbHlaV04wYVc5dUlHMTFjM1FnWW1VZ1pXbDBhR1Z5SUd4aGRHbDBkV1JwYm1Gc0lHOXlJR3h2Ym1kcGRIVmthVzVoYkNFaUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlETXNJSFVnUFNCdVpYY2dUWFFvZEdocGN5NWZiRzlrVUd4aGJtVnpXMmxkTENCc0tTd2daQ0E5SUd3dWRXNXBabTl5YlhNc0lHWWdQU0IwYUdsekxsOXphWHBsVEc5a2MxdHVYU0F0SURFc0lHMGdQU0JwYzBacGJtbDBaU2h5S1NBL0lFMWhkR2d1VUVrZ0x5QW9NaUFxSUdZcElEb2dNaUFxSUUxaGRHZ3VVRWtnTHlBb01pQXFJR1ZwSUMwZ01Ta3NJRjhnUFNCeUlDOGdiU3dnWnlBOUlHbHpSbWx1YVhSbEtISXBJRDhnTVNBcklFMWhkR2d1Wm14dmIzSW9hQ0FxSUY4cElEb2daV2s3Q2lBZ0lDQWdJQ0FnWnlBK0lHVnBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpaGdjMmxuYldGU1lXUnBZVzV6TENBa2UzSjlMQ0JwY3lCMGIyOGdiR0Z5WjJVZ1lXNWtJSGRwYkd3Z1kyeHBjQ3dnWVhNZ2FYUWdjbVZ4ZFdWemRHVmtJQ1I3WjMwZ2MyRnRjR3hsY3lCM2FHVnVJSFJvWlNCdFlYaHBiWFZ0SUdseklITmxkQ0IwYnlBa2UyVnBmV0FwT3dvZ0lDQWdJQ0FnSUd4bGRDQndJRDBnVzEwc0lIWWdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVWlBOUlEQTdJRklnUENCbGFUc2dLeXRTS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVrZ1BTQlNJQzhnWHl3Z1RTQTlJRTFoZEdndVpYaHdLQzFKSUNvZ1NTQXZJRElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQndMbkIxYzJnb1RTa3NJRklnUFQwOUlEQWdQeUIySUNzOUlFMGdPaUJTSUR3Z1p5QW1KaUFvZGlBclBTQXlJQ29nVFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1VpQTlJREE3SUZJZ1BDQndMbXhsYm1kMGFEc2dVaXNyS1hCYlVsMGdQU0J3VzFKZElDOGdkanNLSUNBZ0lDQWdJQ0JrTG1WdWRrMWhjQzUyWVd4MVpTQTlJR1V1ZEdWNGRIVnlaU3dnWkM1ellXMXdiR1Z6TG5aaGJIVmxJRDBnWnl3Z1pDNTNaV2xuYUhSekxuWmhiSFZsSUQwZ2NDd2daQzVzWVhScGRIVmthVzVoYkM1MllXeDFaU0E5SUdFZ1BUMDlJQ0pzWVhScGRIVmthVzVoYkNJc0lHOGdKaVlnS0dRdWNHOXNaVUY0YVhNdWRtRnNkV1VnUFNCdktUc0tJQ0FnSUNBZ0lDQnNaWFFnZXlCZmJHOWtUV0Y0T2lCNElDQjlJRDBnZEdocGN6c0tJQ0FnSUNBZ0lDQmtMbVJVYUdWMFlTNTJZV3gxWlNBOUlHMHNJR1F1Yldsd1NXNTBMblpoYkhWbElEMGdlQ0F0SUc0N0NpQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCMGFHbHpMbDl6YVhwbFRHOWtjMXRwWFN3Z1lpQTlJRE1nS2lCNUlDb2dLR2tnUGlCNElDMGdTR2tnUHlCcElDMGdlQ0FySUVocElEb2dNQ2tzSUhjZ1BTQTBJQ29nS0hSb2FYTXVYMk4xWW1WVGFYcGxJQzBnZVNrN0NpQWdJQ0FnSUNBZ2JISW9kQ3dnWWl3Z2R5d2dNeUFxSUhrc0lESWdLaUI1S1N3Z1l5NXpaWFJTWlc1a1pYSlVZWEpuWlhRb2RDa3NJR011Y21WdVpHVnlLSFVzSUNSaEtUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdiMThvY3pFcElIc0tJQ0FnSUd4bGRDQmxJRDBnVzEwc0lIUWdQU0JiWFN3Z2JpQTlJRnRkTENCcElEMGdjekVzSUhJZ1BTQnpNU0F0SUVocElDc2dNU0FySUdob0xteGxibWQwYURzS0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdQQ0J5T3lCaEt5c3Bld29nSUNBZ0lDQWdJR3hsZENCdklEMGdUV0YwYUM1d2IzY29NaXdnYVNrN0NpQWdJQ0FnSUNBZ2RDNXdkWE5vS0c4cE93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ01TQXZJRzg3Q2lBZ0lDQWdJQ0FnWVNBK0lITXhJQzBnU0drZ1B5QmpJRDBnYUdoYllTQXRJSE14SUNzZ1NHa2dMU0F4WFNBNklHRWdQVDA5SURBZ0ppWWdLR01nUFNBd0tTd2diaTV3ZFhOb0tHTXBPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdNU0F2SUNodklDMGdNaWtzSUdnZ1BTQXRiQ3dnZFNBOUlERWdLeUJzTENCa0lEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCb0xBb2dJQ0FnSUNBZ0lDQWdJQ0JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFMQW9nSUNBZ0lDQWdJQ0FnSUNCb0xBb2dJQ0FnSUNBZ0lDQWdJQ0IxTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFMQW9nSUNBZ0lDQWdJQ0FnSUNCb0xBb2dJQ0FnSUNBZ0lDQWdJQ0JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFMQW9nSUNBZ0lDQWdJQ0FnSUNCMUxBb2dJQ0FnSUNBZ0lDQWdJQ0JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFDaUFnSUNBZ0lDQWdYU3dnWmlBOUlEWXNJRzBnUFNBMkxDQmZJRDBnTXl3Z1p5QTlJRElzSUhBZ1BTQXhMQ0IySUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNoZklDb2diU0FxSUdZcExDQjRJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2huSUNvZ2JTQXFJR1lwTENCNUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaHdJQ29nYlNBcUlHWXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkeUE5SURBN0lIY2dQQ0JtT3lCM0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVaUE5SUhjZ0pTQXpJQ29nTWlBdklETWdMU0F4TENCSklEMGdkeUErSURJZ1B5QXdJRG9nTFRFc0lFMGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JTTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCU0lDc2dNaUF2SURNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdLeUF5SUM4Z015d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFa2dLeUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdLeUF5SUM4Z015d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFa2dLeUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSklDc2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnZGk1elpYUW9UU3dnWHlBcUlHMGdLaUIzS1N3Z2VDNXpaWFFvWkN3Z1p5QXFJRzBnS2lCM0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGUWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZHl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhjc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2R5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIY0tJQ0FnSUNBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNBZ0lDQWdlUzV6WlhRb1ZDd2djQ0FxSUcwZ0tpQjNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHSWdQU0J1WlhjZ1IyVTdDaUFnSUNBZ0lDQWdZaTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdWMEtIWXNJRjhwS1N3Z1lpNXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdWMEtIZ3NJR2NwS1N3Z1lpNXpaWFJCZEhSeWFXSjFkR1VvSW1aaFkyVkpibVJsZUNJc0lHNWxkeUJsZENoNUxDQndLU2tzSUdVdWNIVnphQ2hpS1N3Z2FTQStJRWhwSUNZbUlHa3RMVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYkc5a1VHeGhibVZ6T2lCbExBb2dJQ0FnSUNBZ0lITnBlbVZNYjJSek9pQjBMQW9nSUNBZ0lDQWdJSE5wWjIxaGN6b2diZ29nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJtYUNoek1Td2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J1WlhjZ2NYUW9jekVzSUdVc0lIUXBPd29nSUNBZ2NtVjBkWEp1SUc0dWRHVjRkSFZ5WlM1dFlYQndhVzVuSUQwZ1ZuTXNJRzR1ZEdWNGRIVnlaUzV1WVcxbElEMGdJbEJOVWtWTkxtTjFZbVZWZGlJc0lHNHVjMk5wYzNOdmNsUmxjM1FnUFNBaE1Dd2dianNLZlFwbWRXNWpkR2x2YmlCc2NpaHpNU3dnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnY3pFdWRtbGxkM0J2Y25RdWMyVjBLR1VzSUhRc0lHNHNJR2twTENCek1TNXpZMmx6YzI5eUxuTmxkQ2hsTENCMExDQnVMQ0JwS1RzS2ZRcG1kVzVqZEdsdmJpQmpYeWh6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHVnBLU3dnYVNBOUlHNWxkeUJCS0RBc0lERXNJREFwT3dvZ0lDQWdjbVYwZFhKdUlHNWxkeUJxZENoN0NpQWdJQ0FnSUNBZ2JtRnRaVG9nSWxOd2FHVnlhV05oYkVkaGRYTnphV0Z1UW14MWNpSXNDaUFnSUNBZ0lDQWdaR1ZtYVc1bGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCdU9pQmxhU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ExVkNSVlZXWDFSRldFVk1YMWRKUkZSSU9pQXhJQzhnWlN3S0lDQWdJQ0FnSUNBZ0lDQWdRMVZDUlZWV1gxUkZXRVZNWDBoRlNVZElWRG9nTVNBdklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUVOVlFrVlZWbDlOUVZoZlRVbFFPaUJnSkh0ek1YMHVNR0FLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJGdGNHeGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZDJWcFoyaDBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzRLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdGMGFYUjFaR2x1WVd3NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBaE1Rb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtWR2hsZEdFNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBjRWx1ZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXNaVUY0YVhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCcENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dXbU1vS1N3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nWUFvS0NRa0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR2x1ZERzS0Nna0pDWFpoY25scGJtY2dkbVZqTXlCMlQzVjBjSFYwUkdseVpXTjBhVzl1T3dvS0NRa0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzUyVFdGd093b0pDUWwxYm1sbWIzSnRJR2x1ZENCellXMXdiR1Z6T3dvSkNRbDFibWxtYjNKdElHWnNiMkYwSUhkbGFXZG9kSE5iSUc0Z1hUc0tDUWtKZFc1cFptOXliU0JpYjI5c0lHeGhkR2wwZFdScGJtRnNPd29KQ1FsMWJtbG1iM0p0SUdac2IyRjBJR1JVYUdWMFlUc0tDUWtKZFc1cFptOXliU0JtYkc5aGRDQnRhWEJKYm5RN0Nna0pDWFZ1YVdadmNtMGdkbVZqTXlCd2IyeGxRWGhwY3pzS0Nna0pDU05rWldacGJtVWdSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWZ29KQ1FramFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb0tDUWtKZG1Wak15Qm5aWFJUWVcxd2JHVW9JR1pzYjJGMElIUm9aWFJoTENCMlpXTXpJR0Y0YVhNZ0tTQjdDZ29KQ1FrSlpteHZZWFFnWTI5elZHaGxkR0VnUFNCamIzTW9JSFJvWlhSaElDazdDZ2tKQ1Frdkx5QlNiMlJ5YVdkMVpYTW5JR0Y0YVhNdFlXNW5iR1VnY205MFlYUnBiMjRLQ1FrSkNYWmxZek1nYzJGdGNHeGxSR2x5WldOMGFXOXVJRDBnZGs5MWRIQjFkRVJwY21WamRHbHZiaUFxSUdOdmMxUm9aWFJoQ2drSkNRa0pLeUJqY205emN5Z2dZWGhwY3l3Z2RrOTFkSEIxZEVScGNtVmpkR2x2YmlBcElDb2djMmx1S0NCMGFHVjBZU0FwQ2drSkNRa0pLeUJoZUdseklDb2daRzkwS0NCaGVHbHpMQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVJQ2tnS2lBb0lERXVNQ0F0SUdOdmMxUm9aWFJoSUNrN0Nnb0pDUWtKY21WMGRYSnVJR0pwYkdsdVpXRnlRM1ZpWlZWV0tDQmxiblpOWVhBc0lITmhiWEJzWlVScGNtVmpkR2x2Yml3Z2JXbHdTVzUwSUNrN0Nnb0pDUWw5Q2dvSkNRbDJiMmxrSUcxaGFXNG9LU0I3Q2dvSkNRa0pkbVZqTXlCaGVHbHpJRDBnYkdGMGFYUjFaR2x1WVd3Z1B5QndiMnhsUVhocGN5QTZJR055YjNOektDQndiMnhsUVhocGN5d2dkazkxZEhCMWRFUnBjbVZqZEdsdmJpQXBPd29LQ1FrSkNXbG1JQ2dnWVd4c0tDQmxjWFZoYkNnZ1lYaHBjeXdnZG1Wak15Z2dNQzR3SUNrZ0tTQXBJQ2tnZXdvS0NRa0pDUWxoZUdseklEMGdkbVZqTXlnZ2RrOTFkSEIxZEVScGNtVmpkR2x2Ymk1NkxDQXdMakFzSUMwZ2RrOTFkSEIxZEVScGNtVmpkR2x2Ymk1NElDazdDZ29KQ1FrSmZRb0tDUWtKQ1dGNGFYTWdQU0J1YjNKdFlXeHBlbVVvSUdGNGFYTWdLVHNLQ2drSkNRbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0F3TGpBc0lEQXVNQ3dnTUM0d0xDQXhMakFnS1RzS0NRa0pDV2RzWDBaeVlXZERiMnh2Y2k1eVoySWdLejBnZDJWcFoyaDBjMXNnTUNCZElDb2daMlYwVTJGdGNHeGxLQ0F3TGpBc0lHRjRhWE1nS1RzS0Nna0pDUWxtYjNJZ0tDQnBiblFnYVNBOUlERTdJR2tnUENCdU95QnBLeXNnS1NCN0Nnb0pDUWtKQ1dsbUlDZ2dhU0ErUFNCellXMXdiR1Z6SUNrZ2V3b0tDUWtKQ1FrSlluSmxZV3M3Q2dvSkNRa0pDWDBLQ2drSkNRa0pabXh2WVhRZ2RHaGxkR0VnUFNCa1ZHaGxkR0VnS2lCbWJHOWhkQ2dnYVNBcE93b0pDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpNXlaMklnS3owZ2QyVnBaMmgwYzFzZ2FTQmRJQ29nWjJWMFUyRnRjR3hsS0NBdE1TNHdJQ29nZEdobGRHRXNJR0Y0YVhNZ0tUc0tDUWtKQ1FsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUNzOUlIZGxhV2RvZEhOYklHa2dYU0FxSUdkbGRGTmhiWEJzWlNnZ2RHaGxkR0VzSUdGNGFYTWdLVHNLQ2drSkNRbDlDZ29KQ1FsOUNna0pZQ3dLSUNBZ0lDQWdJQ0JpYkdWdVpHbHVaem9nUkc0c0NpQWdJQ0FnSUNBZ1pHVndkR2hVWlhOME9pQWhNU3dLSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Rb2dJQ0FnZlNrN0NuMEtablZ1WTNScGIyNGdjR2dvS1NCN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUdwMEtIc0tJQ0FnSUNBZ0lDQnVZVzFsT2lBaVJYRjFhWEpsWTNSaGJtZDFiR0Z5Vkc5RGRXSmxWVllpTEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCYVl5Z3BMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQmdDZ29KQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCbWJHOWhkRHNLQ1FrSmNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ2FXNTBPd29LQ1FrSmRtRnllV2x1WnlCMlpXTXpJSFpQZFhSd2RYUkVhWEpsWTNScGIyNDdDZ29KQ1FsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCbGJuWk5ZWEE3Q2dvSkNRa2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb0tDUWtKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKQ1habFl6TWdiM1YwY0hWMFJHbHlaV04wYVc5dUlEMGdibTl5YldGc2FYcGxLQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVJQ2s3Q2drSkNRbDJaV015SUhWMklEMGdaWEYxYVhKbFkzUlZkaWdnYjNWMGNIVjBSR2x5WldOMGFXOXVJQ2s3Q2dvSkNRa0paMnhmUm5KaFowTnZiRzl5SUQwZ2RtVmpOQ2dnZEdWNGRIVnlaVEpFSUNnZ1pXNTJUV0Z3TENCMWRpQXBMbkpuWWl3Z01TNHdJQ2s3Q2dvSkNRbDlDZ2tKWUN3S0lDQWdJQ0FnSUNCaWJHVnVaR2x1WnpvZ1JHNHNDaUFnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNUW9nSUNBZ2ZTazdDbjBLWm5WdVkzUnBiMjRnYldnb0tTQjdDaUFnSUNCeVpYUjFjbTRnYm1WM0lHcDBLSHNLSUNBZ0lDQWdJQ0J1WVcxbE9pQWlRM1ZpWlcxaGNGUnZRM1ZpWlZWV0lpd0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCbGJuWk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnNhWEJGYm5aTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXRNUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUZwaktDa3NDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHQUtDZ2tKQ1hCeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUdac2IyRjBPd29KQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCcGJuUTdDZ29KQ1FsMWJtbG1iM0p0SUdac2IyRjBJR1pzYVhCRmJuWk5ZWEE3Q2dvSkNRbDJZWEo1YVc1bklIWmxZek1nZGs5MWRIQjFkRVJwY21WamRHbHZianNLQ2drSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2tOMVltVWdaVzUyVFdGd093b0tDUWtKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSFJsZUhSMWNtVkRkV0psS0NCbGJuWk5ZWEFzSUhabFl6TW9JR1pzYVhCRmJuWk5ZWEFnS2lCMlQzVjBjSFYwUkdseVpXTjBhVzl1TG5nc0lIWlBkWFJ3ZFhSRWFYSmxZM1JwYjI0dWVYb2dLU0FwT3dvS0NRa0pmUW9KQ1dBc0NpQWdJQ0FnSUNBZ1lteGxibVJwYm1jNklFUnVMQW9nSUNBZ0lDQWdJR1JsY0hSb1ZHVnpkRG9nSVRFc0NpQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUZwaktDa2dld29nSUNBZ2NtVjBkWEp1SUdBS0Nna0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdhVzUwT3dvS0NRbGhkSFJ5YVdKMWRHVWdabXh2WVhRZ1ptRmpaVWx1WkdWNE93b0tDUWwyWVhKNWFXNW5JSFpsWXpNZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmpzS0Nna0pMeThnVWtnZ1kyOXZjbVJwYm1GMFpTQnplWE4wWlcwN0lGQk5Va1ZOSUdaaFkyVXRhVzVrWlhocGJtY2dZMjl1ZG1WdWRHbHZiZ29KQ1habFl6TWdaMlYwUkdseVpXTjBhVzl1S0NCMlpXTXlJSFYyTENCbWJHOWhkQ0JtWVdObElDa2dld29LQ1FrSmRYWWdQU0F5TGpBZ0tpQjFkaUF0SURFdU1Ec0tDZ2tKQ1habFl6TWdaR2x5WldOMGFXOXVJRDBnZG1Wak15Z2dkWFlzSURFdU1DQXBPd29LQ1FrSmFXWWdLQ0JtWVdObElEMDlJREF1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0Z1BTQmthWEpsWTNScGIyNHVlbmw0T3lBdkx5QW9JREVzSUhZc0lIVWdLU0J3YjNNZ2VBb0tDUWtKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBeExqQWdLU0I3Q2dvSkNRa0paR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1TG5oNmVUc0tDUWtKQ1dScGNtVmpkR2x2Ymk1NGVpQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQXhMQ0F0ZGlBcElIQnZjeUI1Q2dvSkNRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJREl1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0dWVDQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQjJMQ0F4SUNrZ2NHOXpJSG9LQ2drSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNeTR3SUNrZ2V3b0tDUWtKQ1dScGNtVmpkR2x2YmlBOUlHUnBjbVZqZEdsdmJpNTZlWGc3Q2drSkNRbGthWEpsWTNScGIyNHVlSG9nS2owZ0xURXVNRHNnTHk4Z0tDQXRNU3dnZGl3Z0xYVWdLU0J1WldjZ2VBb0tDUWtKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBMExqQWdLU0I3Q2dvSkNRa0paR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1TG5oNmVUc0tDUWtKQ1dScGNtVmpkR2x2Ymk1NGVTQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQXRNU3dnZGlBcElHNWxaeUI1Q2dvSkNRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJRFV1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0dWVpQXFQU0F0TVM0d095QXZMeUFvSUhVc0lIWXNJQzB4SUNrZ2JtVm5JSG9LQ2drSkNYMEtDZ2tKQ1hKbGRIVnliaUJrYVhKbFkzUnBiMjQ3Q2dvSkNYMEtDZ2tKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKZGs5MWRIQjFkRVJwY21WamRHbHZiaUE5SUdkbGRFUnBjbVZqZEdsdmJpZ2dkWFlzSUdaaFkyVkpibVJsZUNBcE93b0pDUWxuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvSUhCdmMybDBhVzl1TENBeExqQWdLVHNLQ2drSmZRb0pZRHNLZlFwbWRXNWpkR2x2YmlCc1h5aHpNU2tnZXdvZ0lDQWdiR1YwSUdVZ1BTQnVaWGNnVjJWaGEwMWhjQ3dnZENBOUlHNTFiR3c3Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLRzhwSUhzS0lDQWdJQ0FnSUNCcFppQW9ieUFtSmlCdkxtbHpWR1Y0ZEhWeVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUc4dWJXRndjR2x1Wnl3Z2JDQTlJR01nUFQwOUlFbHlJSHg4SUdNZ1BUMDlJRlZ5TENCb0lEMGdZeUE5UFQwZ2VtNGdmSHdnWXlBOVBUMGdZMms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzSUh4OElHZ3BJR2xtSUNodkxtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0FtSmlCdkxtNWxaV1J6VUUxU1JVMVZjR1JoZEdVZ1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdkxtNWxaV1J6VUUxU1JVMVZjR1JoZEdVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdaUzVuWlhRb2J5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlQVDBnYm5Wc2JDQW1KaUFvZENBOUlHNWxkeUJMY2loek1Ta3BMQ0IxSUQwZ2JDQS9JSFF1Wm5KdmJVVnhkV2x5WldOMFlXNW5kV3hoY2lodkxDQjFLU0E2SUhRdVpuSnZiVU4xWW1WdFlYQW9ieXdnZFNrc0lHVXVjMlYwS0c4c0lIVXBMQ0IxTG5SbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aUzVvWVhNb2J5a3BJSEpsZEhWeWJpQmxMbWRsZENodktTNTBaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdieTVwYldGblpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDQW1KaUIxSUNZbUlIVXVhR1ZwWjJoMElENGdNQ0I4ZkNCb0lDWW1JSFVnSmlZZ2FTaDFLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwOVBTQnVkV3hzSUNZbUlDaDBJRDBnYm1WM0lFdHlLSE14S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYkNBL0lIUXVabkp2YlVWeGRXbHlaV04wWVc1bmRXeGhjaWh2S1NBNklIUXVabkp2YlVOMVltVnRZWEFvYnlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRDaHZMQ0JrS1N3Z2J5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2djaWtzSUdRdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4N0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLRzhwSUhzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SURBc0lHd2dQU0EyT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQTdJR2dnUENCc095Qm9LeXNwYjF0b1hTQWhQVDBnZG05cFpDQXdJQ1ltSUdNckt6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1l5QTlQVDBnYkRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISW9ieWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYnk1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnWXk1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2djaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsTG1kbGRDaGpLVHNLSUNBZ0lDQWdJQ0JzSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1WkdWc1pYUmxLR01wTENCc0xtUnBjM0J2YzJVb0tTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoS0NrZ2V3b2dJQ0FnSUNBZ0lHVWdQU0J1WlhjZ1YyVmhhMDFoY0N3Z2RDQWhQVDBnYm5Wc2JDQW1KaUFvZEM1a2FYTndiM05sS0Nrc0lIUWdQU0J1ZFd4c0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCdUxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklHRUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdhRjhvY3pFcElIc0tJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0JtZFc1amRHbHZiaUIwS0c0cElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlZ0dVhTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdaVnR1WFRzS0lDQWdJQ0FnSUNCc1pYUWdhVHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29iaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxkRlFrZE1YMlJsY0hSb1gzUmxlSFIxY21VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJSE14TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUjB4ZlpHVndkR2hmZEdWNGRIVnlaU0lwSUh4OElITXhMbWRsZEVWNGRHVnVjMmx2YmlnaVRVOWFYMWRGUWtkTVgyUmxjSFJvWDNSbGVIUjFjbVVpS1NCOGZDQnpNUzVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa3RKVkY5WFJVSkhURjlrWlhCMGFGOTBaWGgwZFhKbElpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCek1TNW5aWFJGZUhSbGJuTnBiMjRvSWtWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBJSHg4SUhNeExtZGxkRVY0ZEdWdWMybHZiaWdpVFU5YVgwVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwSUh4OElITXhMbWRsZEVWNGRHVnVjMmx2YmlnaVYwVkNTMGxVWDBWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCek1TNW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSaklpa2dmSHdnY3pFdVoyVjBSWGgwWlc1emFXOXVLQ0pOVDFwZlYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNNemRHTWlLU0I4ZkNCek1TNW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrdEpWRjlYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjek4wWXlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnY3pFdVoyVjBSWGgwWlc1emFXOXVLQ0pYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjSFp5ZEdNaUtTQjhmQ0J6TVM1blpYUkZlSFJsYm5OcGIyNG9JbGRGUWt0SlZGOVhSVUpIVEY5amIyMXdjbVZ6YzJWa1gzUmxlSFIxY21WZmNIWnlkR01pS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOUlITXhMbWRsZEVWNGRHVnVjMmx2YmlodUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJibDBnUFNCcExDQnBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JvWVhNNklHWjFibU4wYVc5dUtHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRb2Jpa2dJVDA5SUc1MWJHdzdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JwYm1sME9pQm1kVzVqZEdsdmJpaHVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVhWE5YWldKSFRESWdQeUIwS0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJac2IyRjBJaWtnT2lBb2RDZ2lWMFZDUjB4ZlpHVndkR2hmZEdWNGRIVnlaU0lwTENCMEtDSlBSVk5mZEdWNGRIVnlaVjltYkc5aGRDSXBMQ0IwS0NKUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBJaWtzSUhRb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFJmYkdsdVpXRnlJaWtzSUhRb0lrOUZVMTl6ZEdGdVpHRnlaRjlrWlhKcGRtRjBhWFpsY3lJcExDQjBLQ0pQUlZOZlpXeGxiV1Z1ZEY5cGJtUmxlRjkxYVc1MElpa3NJSFFvSWs5RlUxOTJaWEowWlhoZllYSnlZWGxmYjJKcVpXTjBJaWtzSUhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1Nrc0lIUW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBYMnhwYm1WaGNpSXBMQ0IwS0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJoaGJHWmZabXh2WVhRaUtTd2dkQ2dpVjBWQ1IweGZiWFZzZEdsellXMXdiR1ZrWDNKbGJtUmxjbDkwYjE5MFpYaDBkWEpsSWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0c0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwS0c0cE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhU0E5UFQwZ2JuVnNiQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUNJZ0t5QnVJQ3NnSWlCbGVIUmxibk5wYjI0Z2JtOTBJSE4xY0hCdmNuUmxaQzRpS1N3Z2FUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJSFZmS0hNeExDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUh0OUxDQnlJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUJoS0hVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlIVXVkR0Z5WjJWME93b2dJQ0FnSUNBZ0lHUXVhVzVrWlhnZ0lUMDlJRzUxYkd3Z0ppWWdaUzV5WlcxdmRtVW9aQzVwYm1SbGVDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnRJR2x1SUdRdVlYUjBjbWxpZFhSbGN5bGxMbkpsYlc5MlpTaGtMbUYwZEhKcFluVjBaWE5iYlYwcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQnBiaUJrTG0xdmNuQm9RWFIwY21saWRYUmxjeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ1pDNXRiM0p3YUVGMGRISnBZblYwWlhOYmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQXNJSEFnUFNCZkxteGxibWQwYURzZ1p5QThJSEE3SUdjckt5bGxMbkpsYlc5MlpTaGZXMmRkS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnWVNrc0lHUmxiR1YwWlNCcFcyUXVhV1JkT3dvZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnY2k1blpYUW9aQ2s3Q2lBZ0lDQWdJQ0FnWmlBbUppQW9aUzV5WlcxdmRtVW9aaWtzSUhJdVpHVnNaWFJsS0dRcEtTd2diaTV5Wld4bFlYTmxVM1JoZEdWelQyWkhaVzl0WlhSeWVTaGtLU3dnWkM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUQwOVBTQWhNQ0FtSmlCa1pXeGxkR1VnWkM1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZEN3Z2RDNXRaVzF2Y25rdVoyVnZiV1YwY21sbGN5MHRPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnloMUxDQmtLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2xiWkM1cFpGMGdQVDA5SUNFd0lIeDhJQ2hrTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCaEtTd2dhVnRrTG1sa1hTQTlJQ0V3TENCMExtMWxiVzl5ZVM1blpXOXRaWFJ5YVdWekt5c3BMQ0JrT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1l5aDFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0IxTG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElHbHVJR1FwWlM1MWNHUmhkR1VvWkZ0dFhTd2djekV1UVZKU1FWbGZRbFZHUmtWU0tUc0tJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlIVXViVzl5Y0doQmRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQnBiaUJtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQm1XMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHY2dQU0F3TENCd0lEMGdYeTVzWlc1bmRHZzdJR2NnUENCd095Qm5LeXNwWlM1MWNHUmhkR1VvWDF0blhTd2djekV1UVZKU1FWbGZRbFZHUmtWU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzS0hVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlGdGRMQ0JtSUQwZ2RTNXBibVJsZUN3Z2JTQTlJSFV1WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z1h5QTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHWWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCbUxtRnljbUY1T3dvZ0lDQWdJQ0FnSUNBZ0lDQmZJRDBnWmk1MlpYSnphVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0F3TENCNUlEMGdkaTVzWlc1bmRHZzdJSGdnUENCNU95QjRJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCMlczZ2dLeUF3WFN3Z2R5QTlJSFpiZUNBcklERmRMQ0JTSUQwZ2RsdDRJQ3NnTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0xuQjFjMmdvWWl3Z2R5d2dkeXdnVWl3Z1Vpd2dZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRzBnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJRzB1WVhKeVlYazdDaUFnSUNBZ0lDQWdJQ0FnSUY4Z1BTQnRMblpsY25OcGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQXNJSGtnUFNCMkxteGxibWQwYUNBdklETWdMU0F4T3lCNElEd2dlVHNnZUNBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdlQ0FySURBc0lIY2dQU0I0SUNzZ01Td2dVaUE5SUhnZ0t5QXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQzV3ZFhOb0tHSXNJSGNzSUhjc0lGSXNJRklzSUdJcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHNWxkeUFvVFdRb1pDa2dQeUJLY2lBNklGcHlLU2hrTENBeEtUc0tJQ0FnSUNBZ0lDQm5MblpsY25OcGIyNGdQU0JmT3dvZ0lDQWdJQ0FnSUd4bGRDQndJRDBnY2k1blpYUW9kU2s3Q2lBZ0lDQWdJQ0FnY0NBbUppQmxMbkpsYlc5MlpTaHdLU3dnY2k1elpYUW9kU3dnWnlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm9LSFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUhJdVoyVjBLSFVwT3dvZ0lDQWdJQ0FnSUdsbUlDaGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2RTNXBibVJsZURzS0lDQWdJQ0FnSUNBZ0lDQWdaaUFoUFQwZ2JuVnNiQ0FtSmlCa0xuWmxjbk5wYjI0Z1BDQm1MblpsY25OcGIyNGdKaVlnYkNoMUtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2JDaDFLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjaTVuWlhRb2RTazdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ2J5d0tJQ0FnSUNBZ0lDQjFjR1JoZEdVNklHTXNDaUFnSUNBZ0lDQWdaMlYwVjJseVpXWnlZVzFsUVhSMGNtbGlkWFJsT2lCb0NpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHUmZLSE14TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJRzR1YVhOWFpXSkhURElzSUhJN0NpQWdJQ0JtZFc1amRHbHZiaUJoS0dRcElIc0tJQ0FnSUNBZ0lDQnlJRDBnWkRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0J2TENCak93b2dJQ0FnWm5WdVkzUnBiMjRnYkNoa0tTQjdDaUFnSUNBZ0lDQWdieUE5SUdRdWRIbHdaU3dnWXlBOUlHUXVZbmwwWlhOUVpYSkZiR1Z0Wlc1ME93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhQ2hrTENCbUtTQjdDaUFnSUNBZ0lDQWdjekV1WkhKaGQwVnNaVzFsYm5SektISXNJR1lzSUc4c0lHUWdLaUJqS1N3Z2RDNTFjR1JoZEdVb1ppd2djaXdnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjFLR1FzSUdZc0lHMHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2JTQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQmZMQ0JuT3dvZ0lDQWdJQ0FnSUdsbUlDaHBLU0JmSUQwZ2N6RXNJR2NnUFNBaVpISmhkMFZzWlcxbGJuUnpTVzV6ZEdGdVkyVmtJanNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hmSUQwZ1pTNW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU3dnWnlBOUlDSmtjbUYzUld4bGJXVnVkSE5KYm5OMFlXNWpaV1JCVGtkTVJTSXNJRjhnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweEpibVJsZUdWa1FuVm1abVZ5VW1WdVpHVnlaWEk2SUhWemFXNW5JRlJJVWtWRkxrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUdKMWRDQm9ZWEprZDJGeVpTQmtiMlZ6SUc1dmRDQnpkWEJ3YjNKMElHVjRkR1Z1YzJsdmJpQkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjliWjEwb2Npd2daaXdnYnl3Z1pDQXFJR01zSUcwcExDQjBMblZ3WkdGMFpTaG1MQ0J5TENCdEtUc0tJQ0FnSUgwS0lDQWdJSFJvYVhNdWMyVjBUVzlrWlNBOUlHRXNJSFJvYVhNdWMyVjBTVzVrWlhnZ1BTQnNMQ0IwYUdsekxuSmxibVJsY2lBOUlHZ3NJSFJvYVhNdWNtVnVaR1Z5U1c1emRHRnVZMlZ6SUQwZ2RUc0tmUXBtZFc1amRHbHZiaUJtWHloek1Ta2dld29nSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ1oyVnZiV1YwY21sbGN6b2dNQ3dLSUNBZ0lDQWdJQ0IwWlhoMGRYSmxjem9nTUFvZ0lDQWdmU3dnZENBOUlIc0tJQ0FnSUNBZ0lDQm1jbUZ0WlRvZ01Dd0tJQ0FnSUNBZ0lDQmpZV3hzY3pvZ01Dd0tJQ0FnSUNBZ0lDQjBjbWxoYm1kc1pYTTZJREFzQ2lBZ0lDQWdJQ0FnY0c5cGJuUnpPaUF3TEFvZ0lDQWdJQ0FnSUd4cGJtVnpPaUF3Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z2JpaHlMQ0JoTENCdktTQjdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tIUXVZMkZzYkhNckt5d2dZU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnY3pFdVZGSkpRVTVIVEVWVE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNTBjbWxoYm1kc1pYTWdLejBnYnlBcUlDaHlJQzhnTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0J6TVM1TVNVNUZVem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1YkdsdVpYTWdLejBnYnlBcUlDaHlJQzhnTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0J6TVM1TVNVNUZYMU5VVWtsUU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNXNhVzVsY3lBclBTQnZJQ29nS0hJZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElITXhMa3hKVGtWZlRFOVBVRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1YkdsdVpYTWdLejBnYnlBcUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCek1TNVFUMGxPVkZNNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExuQnZhVzUwY3lBclBTQnZJQ29nY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhKYm1adk9pQlZibXR1YjNkdUlHUnlZWGNnYlc5a1pUb2lMQ0JoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdrb0tTQjdDaUFnSUNBZ0lDQWdkQzVqWVd4c2N5QTlJREFzSUhRdWRISnBZVzVuYkdWeklEMGdNQ3dnZEM1d2IybHVkSE1nUFNBd0xDQjBMbXhwYm1WeklEMGdNRHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYldWdGIzSjVPaUJsTEFvZ0lDQWdJQ0FnSUhKbGJtUmxjam9nZEN3S0lDQWdJQ0FnSUNCd2NtOW5jbUZ0Y3pvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0JoZFhSdlVtVnpaWFE2SUNFd0xBb2dJQ0FnSUNBZ0lISmxjMlYwT2lCcExBb2dJQ0FnSUNBZ0lIVndaR0YwWlRvZ2Jnb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQndYeWh6TVN3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNeFd6QmRJQzBnWlZzd1hUc0tmUXBtZFc1amRHbHZiaUJ0WHloek1Td2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdKektHVmJNVjBwSUMwZ1RXRjBhQzVoWW5Nb2N6RmJNVjBwT3dwOUNtWjFibU4wYVc5dUlHZGZLSE14TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlIdDlMQ0JwSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNnNEtTd2djaUE5SUc1bGR5QlhaV0ZyVFdGd0xDQmhJRDBnYm1WM0lHcGxMQ0J2SUQwZ1cxMDdDaUFnSUNCbWIzSW9iR1YwSUd3Z1BTQXdPeUJzSUR3Z09Ec2diQ3NyS1c5YmJGMGdQU0JiQ2lBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBd0NpQWdJQ0JkT3dvZ0lDQWdablZ1WTNScGIyNGdZeWhzTENCb0xDQjFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0JzTG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN6c0tJQ0FnSUNBZ0lDQnBaaUFvWlM1cGMxZGxZa2RNTWlBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQm9MbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpQjhmQ0JvTG0xdmNuQm9RWFIwY21saWRYUmxjeTV1YjNKdFlXd2dmSHdnYUM1dGIzSndhRUYwZEhKcFluVjBaWE11WTI5c2IzSXNJRzBnUFNCbUlDRTlQU0IyYjJsa0lEQWdQeUJtTG14bGJtZDBhQ0E2SURBc0lGOGdQU0J5TG1kbGRDaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRjhnUFQwOUlIWnZhV1FnTUNCOGZDQmZMbU52ZFc1MElDRTlQU0J0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRmt1WkdsemNHOXpaU2dwTENCeUxtUmxiR1YwWlNob0tTd2dhQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYeUFoUFQwZ2RtOXBaQ0F3SUNZbUlGOHVkR1Y0ZEhWeVpTNWthWE53YjNObEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUlDRTlQU0IyYjJsa0lEQXNJSGdnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dnSVQwOUlIWnZhV1FnTUN3Z2VTQTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbU52Ykc5eUlDRTlQU0IyYjJsa0lEQXNJR0lnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2YmlCOGZDQmJYU3dnZHlBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkNCOGZDQmJYU3dnVWlBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtTnZiRzl5SUh4OElGdGRMQ0JKSUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWWdQVDA5SUNFd0lDWW1JQ2hKSUQwZ01Ta3NJSGdnUFQwOUlDRXdJQ1ltSUNoSklEMGdNaWtzSUhrZ1BUMDlJQ0V3SUNZbUlDaEpJRDBnTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUU0E5SUdndVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpNWpiM1Z1ZENBcUlFa3NJRlFnUFNBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RTQStJR1V1YldGNFZHVjRkSFZ5WlZOcGVtVWdKaVlnS0ZRZ1BTQk5ZWFJvTG1ObGFXd29UU0F2SUdVdWJXRjRWR1Y0ZEhWeVpWTnBlbVVwTENCTklEMGdaUzV0WVhoVVpYaDBkWEpsVTJsNlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVHlBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1RTQXFJRlFnS2lBMElDb2diU2tzSUZrZ1BTQnVaWGNnUVhNb1R5d2dUU3dnVkN3Z2JTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlpMblI1Y0dVZ1BTQjRiaXdnV1M1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0JKSUNvZ05Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VpQTlJREE3SUhvZ1BDQnRPeUI2S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeElEMGdZbHQ2WFN3Z1NDQTlJSGRiZWwwc0lHNWxJRDBnVWx0NlhTd2dWeUE5SUUwZ0tpQlVJQ29nTkNBcUlIbzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JMSUQwZ01Ec2dTeUE4SUhFdVkyOTFiblE3SUVzckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JFSUQwZ1N5QXFJQ1E3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFlnUFQwOUlDRXdJQ1ltSUNoaExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9jU3dnU3lrc0lFOWJWeUFySUVRZ0t5QXdYU0E5SUdFdWVDd2dUMXRYSUNzZ1JDQXJJREZkSUQwZ1lTNTVMQ0JQVzFjZ0t5QkVJQ3NnTWwwZ1BTQmhMbm9zSUU5YlZ5QXJJRVFnS3lBelhTQTlJREFwTENCNElEMDlQU0FoTUNBbUppQW9ZUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0Vnc0lFc3BMQ0JQVzFjZ0t5QkVJQ3NnTkYwZ1BTQmhMbmdzSUU5YlZ5QXJJRVFnS3lBMVhTQTlJR0V1ZVN3Z1QxdFhJQ3NnUkNBcklEWmRJRDBnWVM1NkxDQlBXMWNnS3lCRUlDc2dOMTBnUFNBd0tTd2dlU0E5UFQwZ0lUQWdKaVlnS0dFdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHVaU3dnU3lrc0lFOWJWeUFySUVRZ0t5QTRYU0E5SUdFdWVDd2dUMXRYSUNzZ1JDQXJJRGxkSUQwZ1lTNTVMQ0JQVzFjZ0t5QkVJQ3NnTVRCZElEMGdZUzU2TENCUFcxY2dLeUJFSUNzZ01URmRJRDBnYm1VdWFYUmxiVk5wZW1VZ1BUMDlJRFFnUHlCaExuY2dPaUF4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lCdExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVTZJRmtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MybDZaVG9nYm1WM0lGb29UU3dnVkNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0lISXVjMlYwS0dnc0lGOHBMQ0JvTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCVktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZGlBOUlEQTdJSFlnUENCa0xteGxibWQwYURzZ2Rpc3JLV2NnS3owZ1pGdDJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCb0xtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDhnTVNBNklERWdMU0JuT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N6RXNJQ0p0YjNKd2FGUmhjbWRsZEVKaGMyVkpibVpzZFdWdVkyVWlMQ0J3S1N3Z2RTNW5aWFJWYm1sbWIzSnRjeWdwTG5ObGRGWmhiSFZsS0hNeExDQWliVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SWl3Z1pDa3NJSFV1WjJWMFZXNXBabTl5YlhNb0tTNXpaWFJXWVd4MVpTaHpNU3dnSW0xdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21VaUxDQmZMblJsZUhSMWNtVXNJSFFwTENCMUxtZGxkRlZ1YVdadmNtMXpLQ2t1YzJWMFZtRnNkV1VvY3pFc0lDSnRiM0p3YUZSaGNtZGxkSE5VWlhoMGRYSmxVMmw2WlNJc0lGOHVjMmw2WlNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQmtJRDA5UFNCMmIybGtJREFnUHlBd0lEb2daQzVzWlc1bmRHZ3NJRzBnUFNCdVcyZ3VhV1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlNBOVBUMGdkbTlwWkNBd0lIeDhJRzB1YkdWdVozUm9JQ0U5UFNCbUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhnZ1BTQXdPeUI0SUR3Z1pqc2dlQ3NyS1cxYmVGMGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmx0b0xtbGtYU0E5SUcwN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNRHNnZUNBOElHWTdJSGdyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUcxYmVGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVXekJkSUQwZ2VDd2dlVnN4WFNBOUlHUmJlRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYlM1emIzSjBLRzFmS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTURzZ2VDQThJRGc3SUhnckt5bDRJRHdnWmlBbUppQnRXM2hkV3pGZElEOGdLRzliZUYxYk1GMGdQU0J0VzNoZFd6QmRMQ0J2VzNoZFd6RmRJRDBnYlZ0NFhWc3hYU2tnT2lBb2IxdDRYVnN3WFNBOUlFNTFiV0psY2k1TlFWaGZVMEZHUlY5SlRsUkZSMFZTTENCdlczaGRXekZkSUQwZ01DazdDaUFnSUNBZ0lDQWdJQ0FnSUc4dWMyOXlkQ2h3WHlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdhQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJR2NnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dzSUhBZ1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhnZ1BTQXdPeUI0SUR3Z09Ec2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnYjF0NFhTd2dZaUE5SUhsYk1GMHNJSGNnUFNCNVd6RmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaUFoUFQwZ1RuVnRZbVZ5TGsxQldGOVRRVVpGWDBsT1ZFVkhSVklnSmlZZ2R5QS9JQ2hmSUNZbUlHZ3VaMlYwUVhSMGNtbGlkWFJsS0NKdGIzSndhRlJoY21kbGRDSWdLeUI0S1NBaFBUMGdYMXRpWFNBbUppQm9Mbk5sZEVGMGRISnBZblYwWlNnaWJXOXljR2hVWVhKblpYUWlJQ3NnZUN3Z1gxdGlYU2tzSUdjZ0ppWWdhQzVuWlhSQmRIUnlhV0oxZEdVb0ltMXZjbkJvVG05eWJXRnNJaUFySUhncElDRTlQU0JuVzJKZElDWW1JR2d1YzJWMFFYUjBjbWxpZFhSbEtDSnRiM0p3YUU1dmNtMWhiQ0lnS3lCNExDQm5XMkpkS1N3Z2FWdDRYU0E5SUhjc0lIQWdLejBnZHlrZ09pQW9YeUFtSmlCb0xtaGhjMEYwZEhKcFluVjBaU2dpYlc5eWNHaFVZWEpuWlhRaUlDc2dlQ2tnUFQwOUlDRXdJQ1ltSUdndVpHVnNaWFJsUVhSMGNtbGlkWFJsS0NKdGIzSndhRlJoY21kbGRDSWdLeUI0S1N3Z1p5QW1KaUJvTG1oaGMwRjBkSEpwWW5WMFpTZ2liVzl5Y0doT2IzSnRZV3dpSUNzZ2VDa2dQVDA5SUNFd0lDWW1JR2d1WkdWc1pYUmxRWFIwY21saWRYUmxLQ0p0YjNKd2FFNXZjbTFoYkNJZ0t5QjRLU3dnYVZ0NFhTQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYUM1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQS9JREVnT2lBeElDMGdjRHNLSUNBZ0lDQWdJQ0FnSUNBZ2RTNW5aWFJWYm1sbWIzSnRjeWdwTG5ObGRGWmhiSFZsS0hNeExDQWliVzl5Y0doVVlYSm5aWFJDWVhObFNXNW1iSFZsYm1ObElpd2dkaWtzSUhVdVoyVjBWVzVwWm05eWJYTW9LUzV6WlhSV1lXeDFaU2h6TVN3Z0ltMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUlzSUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdkWEJrWVhSbE9pQmpDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRjlmS0hNeExDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnY2loaktTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVMbkpsYm1SbGNpNW1jbUZ0WlN3Z2FDQTlJR011WjJWdmJXVjBjbmtzSUhVZ1BTQmxMbWRsZENoakxDQm9LVHNLSUNBZ0lDQWdJQ0JwWmlBb2FTNW5aWFFvZFNrZ0lUMDlJR3dnSmlZZ0tHVXVkWEJrWVhSbEtIVXBMQ0JwTG5ObGRDaDFMQ0JzS1Nrc0lHTXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lDWW1JQ2hqTG1oaGMwVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCdktTQTlQVDBnSVRFZ0ppWWdZeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnYnlrc0lHa3VaMlYwS0dNcElDRTlQU0JzSUNZbUlDaDBMblZ3WkdGMFpTaGpMbWx1YzNSaGJtTmxUV0YwY21sNExDQnpNUzVCVWxKQldWOUNWVVpHUlZJcExDQmpMbWx1YzNSaGJtTmxRMjlzYjNJZ0lUMDlJRzUxYkd3Z0ppWWdkQzUxY0dSaGRHVW9ZeTVwYm5OMFlXNWpaVU52Ykc5eUxDQnpNUzVCVWxKQldWOUNWVVpHUlZJcExDQnBMbk5sZENoakxDQnNLU2twTENCakxtbHpVMnRwYm01bFpFMWxjMmdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQmpMbk5yWld4bGRHOXVPd29nSUNBZ0lDQWdJQ0FnSUNCcExtZGxkQ2hrS1NBaFBUMGdiQ0FtSmlBb1pDNTFjR1JoZEdVb0tTd2dhUzV6WlhRb1pDd2diQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRW9LU0I3Q2lBZ0lDQWdJQ0FnYVNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnloaktTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmpMblJoY21kbGREc0tJQ0FnSUNBZ0lDQnNMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCdktTd2dkQzV5WlcxdmRtVW9iQzVwYm5OMFlXNWpaVTFoZEhKcGVDa3NJR3d1YVc1emRHRnVZMlZEYjJ4dmNpQWhQVDBnYm5Wc2JDQW1KaUIwTG5KbGJXOTJaU2hzTG1sdWMzUmhibU5sUTI5c2IzSXBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0IxY0dSaGRHVTZJSElzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nWVFvZ0lDQWdmVHNLZlFwMllYSWdWR1FnUFNCdVpYY2dVM1FzSUhka0lEMGdibVYzSUVGekxDQkJaQ0E5SUc1bGR5QnhjaXdnVW1RZ1BTQnVaWGNnUzJrc0lHZG9JRDBnVzEwc0lGOW9JRDBnVzEwc0lIaG9JRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2d4Tmlrc0lIWm9JRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2c1S1N3Z2VXZ2dQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRFFwT3dwbWRXNWpkR2x2YmlCaGN5aHpNU3dnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCek1Wc3dYVHNLSUNBZ0lHbG1JQ2h1SUR3OUlEQWdmSHdnYmlBK0lEQXBJSEpsZEhWeWJpQnpNVHNLSUNBZ0lHeGxkQ0JwSUQwZ1pTQXFJSFFzSUhJZ1BTQm5hRnRwWFRzS0lDQWdJR2xtSUNoeUlEMDlQU0IyYjJsa0lEQWdKaVlnS0hJZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHa3BMQ0JuYUZ0cFhTQTlJSElwTENCbElDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JpNTBiMEZ5Y21GNUtISXNJREFwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlERXNJRzhnUFNBd095QmhJQ0U5UFNCbE95QXJLMkVwYnlBclBTQjBMQ0J6TVZ0aFhTNTBiMEZ5Y21GNUtISXNJRzhwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhJN0NuMEtablZ1WTNScGIyNGdaM1FvY3pFc0lHVXBJSHNLSUNBZ0lHbG1JQ2h6TVM1c1pXNW5kR2dnSVQwOUlHVXViR1Z1WjNSb0tTQnlaWFIxY200Z0lURTdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2N6RXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLV2xtSUNoek1WdDBYU0FoUFQwZ1pWdDBYU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdjbVYwZFhKdUlDRXdPd3A5Q21aMWJtTjBhVzl1SUY5MEtITXhMQ0JsS1NCN0NpQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGN6RmJkRjBnUFNCbFczUmRPd3A5Q21aMWJtTjBhVzl1SUhsaEtITXhMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRjlvVzJWZE93b2dJQ0FnZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwSUQwZ2JtVjNJRWx1ZERNeVFYSnlZWGtvWlNrc0lGOW9XMlZkSUQwZ2RDazdDaUFnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUNFOVBTQmxPeUFySzI0cGRGdHVYU0E5SUhNeExtRnNiRzlqWVhSbFZHVjRkSFZ5WlZWdWFYUW9LVHNLSUNBZ0lISmxkSFZ5YmlCME93cDlDbVoxYm1OMGFXOXVJSGhmS0hNeExDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCMFd6QmRJQ0U5UFNCbElDWW1JQ2h6TVM1MWJtbG1iM0p0TVdZb2RHaHBjeTVoWkdSeUxDQmxLU3dnZEZzd1hTQTlJR1VwT3dwOUNtWjFibU4wYVc5dUlIWmZLSE14TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JwWmlBb1pTNTRJQ0U5UFNCMmIybGtJREFwSUNoMFd6QmRJQ0U5UFNCbExuZ2dmSHdnZEZzeFhTQWhQVDBnWlM1NUtTQW1KaUFvY3pFdWRXNXBabTl5YlRKbUtIUm9hWE11WVdSa2Npd2daUzU0TENCbExua3BMQ0IwV3pCZElEMGdaUzU0TENCMFd6RmRJRDBnWlM1NUtUc0tJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNobmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNeExuVnVhV1p2Y20weVpuWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z2VWOG9jekVzSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJR2xtSUNobExuZ2dJVDA5SUhadmFXUWdNQ2tnS0hSYk1GMGdJVDA5SUdVdWVDQjhmQ0IwV3pGZElDRTlQU0JsTG5rZ2ZId2dkRnN5WFNBaFBUMGdaUzU2S1NBbUppQW9jekV1ZFc1cFptOXliVE5tS0hSb2FYTXVZV1JrY2l3Z1pTNTRMQ0JsTG5rc0lHVXVlaWtzSUhSYk1GMGdQU0JsTG5nc0lIUmJNVjBnUFNCbExua3NJSFJiTWwwZ1BTQmxMbm9wT3dvZ0lDQWdaV3h6WlNCcFppQW9aUzV5SUNFOVBTQjJiMmxrSURBcElDaDBXekJkSUNFOVBTQmxMbklnZkh3Z2RGc3hYU0FoUFQwZ1pTNW5JSHg4SUhSYk1sMGdJVDA5SUdVdVlpa2dKaVlnS0hNeExuVnVhV1p2Y20welppaDBhR2x6TG1Ga1pISXNJR1V1Y2l3Z1pTNW5MQ0JsTG1JcExDQjBXekJkSUQwZ1pTNXlMQ0IwV3pGZElEMGdaUzVuTENCMFd6SmRJRDBnWlM1aUtUc0tJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNobmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNeExuVnVhV1p2Y20welpuWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1RWOG9jekVzSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJR2xtSUNobExuZ2dJVDA5SUhadmFXUWdNQ2tnS0hSYk1GMGdJVDA5SUdVdWVDQjhmQ0IwV3pGZElDRTlQU0JsTG5rZ2ZId2dkRnN5WFNBaFBUMGdaUzU2SUh4OElIUmJNMTBnSVQwOUlHVXVkeWtnSmlZZ0tITXhMblZ1YVdadmNtMDBaaWgwYUdsekxtRmtaSElzSUdVdWVDd2daUzU1TENCbExub3NJR1V1ZHlrc0lIUmJNRjBnUFNCbExuZ3NJSFJiTVYwZ1BTQmxMbmtzSUhSYk1sMGdQU0JsTG5vc0lIUmJNMTBnUFNCbExuY3BPd29nSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHZDBLSFFzSUdVcEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2N6RXVkVzVwWm05eWJUUm1kaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQlRYeWh6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobExDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1ozUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCek1TNTFibWxtYjNKdFRXRjBjbWw0TW1aMktIUm9hWE11WVdSa2Npd2dJVEVzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHZDBLSFFzSUc0cEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2VXZ3VjMlYwS0c0cExDQnpNUzUxYm1sbWIzSnRUV0YwY21sNE1tWjJLSFJvYVhNdVlXUmtjaXdnSVRFc0lIbG9LU3dnWDNRb2RDd2diaWs3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnWWw4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aU3dnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNCcFppQW9iaUE5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR2QwS0hRc0lHVXBLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdjekV1ZFc1cFptOXliVTFoZEhKcGVETm1kaWgwYUdsekxtRmtaSElzSUNFeExDQmxLU3dnWDNRb2RDd2daU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2huZENoMExDQnVLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSFpvTG5ObGRDaHVLU3dnY3pFdWRXNXBabTl5YlUxaGRISnBlRE5tZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0IyYUNrc0lGOTBLSFFzSUc0cE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlFVmZLSE14TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdhV1lnS0c0Z1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNobmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNeExuVnVhV1p2Y20xTllYUnlhWGcwWm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnWlNrc0lGOTBLSFFzSUdVcE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1ozUW9kQ3dnYmlrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCNGFDNXpaWFFvYmlrc0lITXhMblZ1YVdadmNtMU5ZWFJ5YVhnMFpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2VHZ3BMQ0JmZENoMExDQnVLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJVWHloek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ2RGc3dYU0FoUFQwZ1pTQW1KaUFvY3pFdWRXNXBabTl5YlRGcEtIUm9hWE11WVdSa2Npd2daU2tzSUhSYk1GMGdQU0JsS1RzS2ZRcG1kVzVqZEdsdmJpQjNYeWh6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnYVdZZ0tHVXVlQ0FoUFQwZ2RtOXBaQ0F3S1NBb2RGc3dYU0FoUFQwZ1pTNTRJSHg4SUhSYk1WMGdJVDA5SUdVdWVTa2dKaVlnS0hNeExuVnVhV1p2Y20weWFTaDBhR2x6TG1Ga1pISXNJR1V1ZUN3Z1pTNTVLU3dnZEZzd1hTQTlJR1V1ZUN3Z2RGc3hYU0E5SUdVdWVTazdDaUFnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1ozUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCek1TNTFibWxtYjNKdE1tbDJLSFJvYVhNdVlXUmtjaXdnWlNrc0lGOTBLSFFzSUdVcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlFRmZLSE14TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JwWmlBb1pTNTRJQ0U5UFNCMmIybGtJREFwSUNoMFd6QmRJQ0U5UFNCbExuZ2dmSHdnZEZzeFhTQWhQVDBnWlM1NUlIeDhJSFJiTWwwZ0lUMDlJR1V1ZWlrZ0ppWWdLSE14TG5WdWFXWnZjbTB6YVNoMGFHbHpMbUZrWkhJc0lHVXVlQ3dnWlM1NUxDQmxMbm9wTENCMFd6QmRJRDBnWlM1NExDQjBXekZkSUQwZ1pTNTVMQ0IwV3pKZElEMGdaUzU2S1RzS0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2huZENoMExDQmxLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSE14TG5WdWFXWnZjbTB6YVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnVWw4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lHbG1JQ2hsTG5nZ0lUMDlJSFp2YVdRZ01Da2dLSFJiTUYwZ0lUMDlJR1V1ZUNCOGZDQjBXekZkSUNFOVBTQmxMbmtnZkh3Z2RGc3lYU0FoUFQwZ1pTNTZJSHg4SUhSYk0xMGdJVDA5SUdVdWR5a2dKaVlnS0hNeExuVnVhV1p2Y20wMGFTaDBhR2x6TG1Ga1pISXNJR1V1ZUN3Z1pTNTVMQ0JsTG5vc0lHVXVkeWtzSUhSYk1GMGdQU0JsTG5nc0lIUmJNVjBnUFNCbExua3NJSFJiTWwwZ1BTQmxMbm9zSUhSYk0xMGdQU0JsTG5jcE93b2dJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0dkMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3pFdWRXNXBabTl5YlRScGRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCRFh5aHpNU3dnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdkRnN3WFNBaFBUMGdaU0FtSmlBb2N6RXVkVzVwWm05eWJURjFhU2gwYUdsekxtRmtaSElzSUdVcExDQjBXekJkSUQwZ1pTazdDbjBLWm5WdVkzUnBiMjRnVUY4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lHbG1JQ2hsTG5nZ0lUMDlJSFp2YVdRZ01Da2dLSFJiTUYwZ0lUMDlJR1V1ZUNCOGZDQjBXekZkSUNFOVBTQmxMbmtwSUNZbUlDaHpNUzUxYm1sbWIzSnRNblZwS0hSb2FYTXVZV1JrY2l3Z1pTNTRMQ0JsTG5rcExDQjBXekJkSUQwZ1pTNTRMQ0IwV3pGZElEMGdaUzU1S1RzS0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2huZENoMExDQmxLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSE14TG5WdWFXWnZjbTB5ZFdsMktIUm9hWE11WVdSa2Npd2daU2tzSUY5MEtIUXNJR1VwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUV4ZktITXhMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1U3Q2lBZ0lDQnBaaUFvWlM1NElDRTlQU0IyYjJsa0lEQXBJQ2gwV3pCZElDRTlQU0JsTG5nZ2ZId2dkRnN4WFNBaFBUMGdaUzU1SUh4OElIUmJNbDBnSVQwOUlHVXVlaWtnSmlZZ0tITXhMblZ1YVdadmNtMHpkV2tvZEdocGN5NWhaR1J5TENCbExuZ3NJR1V1ZVN3Z1pTNTZLU3dnZEZzd1hTQTlJR1V1ZUN3Z2RGc3hYU0E5SUdVdWVTd2dkRnN5WFNBOUlHVXVlaWs3Q2lBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNCcFppQW9aM1FvZEN3Z1pTa3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnpNUzUxYm1sbWIzSnRNM1ZwZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJKWHloek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ2FXWWdLR1V1ZUNBaFBUMGdkbTlwWkNBd0tTQW9kRnN3WFNBaFBUMGdaUzU0SUh4OElIUmJNVjBnSVQwOUlHVXVlU0I4ZkNCMFd6SmRJQ0U5UFNCbExub2dmSHdnZEZzelhTQWhQVDBnWlM1M0tTQW1KaUFvY3pFdWRXNXBabTl5YlRSMWFTaDBhR2x6TG1Ga1pISXNJR1V1ZUN3Z1pTNTVMQ0JsTG5vc0lHVXVkeWtzSUhSYk1GMGdQU0JsTG5nc0lIUmJNVjBnUFNCbExua3NJSFJiTWwwZ1BTQmxMbm9zSUhSYk0xMGdQU0JsTG5jcE93b2dJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0dkMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3pFdWRXNXBabTl5YlRSMWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1ZWOG9jekVzSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVqWVdOb1pTd2dhU0E5SUhRdVlXeHNiMk5oZEdWVVpYaDBkWEpsVlc1cGRDZ3BPd29nSUNBZ2Jsc3dYU0FoUFQwZ2FTQW1KaUFvY3pFdWRXNXBabTl5YlRGcEtIUm9hWE11WVdSa2Npd2dhU2tzSUc1Yk1GMGdQU0JwS1N3Z2RDNXpaWFJVWlhoMGRYSmxNa1FvWlNCOGZDQlVaQ3dnYVNrN0NuMEtablZ1WTNScGIyNGdSRjhvY3pFc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1allXTm9aU3dnYVNBOUlIUXVZV3hzYjJOaGRHVlVaWGgwZFhKbFZXNXBkQ2dwT3dvZ0lDQWdibHN3WFNBaFBUMGdhU0FtSmlBb2N6RXVkVzVwWm05eWJURnBLSFJvYVhNdVlXUmtjaXdnYVNrc0lHNWJNRjBnUFNCcEtTd2dkQzV6WlhSVVpYaDBkWEpsTTBRb1pTQjhmQ0JCWkN3Z2FTazdDbjBLWm5WdVkzUnBiMjRnVGw4b2N6RXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWpZV05vWlN3Z2FTQTlJSFF1WVd4c2IyTmhkR1ZVWlhoMGRYSmxWVzVwZENncE93b2dJQ0FnYmxzd1hTQWhQVDBnYVNBbUppQW9jekV1ZFc1cFptOXliVEZwS0hSb2FYTXVZV1JrY2l3Z2FTa3NJRzViTUYwZ1BTQnBLU3dnZEM1elpYUlVaWGgwZFhKbFEzVmlaU2hsSUh4OElGSmtMQ0JwS1RzS2ZRcG1kVzVqZEdsdmJpQlBYeWh6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OaFkyaGxMQ0JwSUQwZ2RDNWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBLQ2s3Q2lBZ0lDQnVXekJkSUNFOVBTQnBJQ1ltSUNoek1TNTFibWxtYjNKdE1Xa29kR2hwY3k1aFpHUnlMQ0JwS1N3Z2Jsc3dYU0E5SUdrcExDQjBMbk5sZEZSbGVIUjFjbVV5UkVGeWNtRjVLR1VnZkh3Z2QyUXNJR2twT3dwOUNtWjFibU4wYVc5dUlFWmZLSE14S1NCN0NpQWdJQ0J6ZDJsMFkyZ29jekVwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIaGZPd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOalE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMlh6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qWTFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZVY4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFmT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlRYenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamMxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lsODdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVWZk93b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3dPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVkY4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk56b0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3hPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZDE4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3lPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUVY4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3pPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVWw4N0NpQWdJQ0FnSUNBZ1kyRnpaU0ExTVRJMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRMTg3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TkRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGQmZPd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTVh6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazJPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnU1Y4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM09Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1UazRPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVGc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13TmpvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpneU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWVjg3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzT1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprNU9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EYzZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJFWHpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpnd09nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EQTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNamt6T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RsODdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTRPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekF6T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TVRFNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU1qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTlmT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUVKZktITXhMQ0JsS1NCN0NpQWdJQ0J6TVM1MWJtbG1iM0p0TVdaMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z2VsOG9jekVzSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnWVhNb1pTd2dkR2hwY3k1emFYcGxMQ0F5S1RzS0lDQWdJSE14TG5WdWFXWnZjbTB5Wm5Zb2RHaHBjeTVoWkdSeUxDQjBLVHNLZlFwbWRXNWpkR2x2YmlCV1h5aHpNU3dnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0JoY3lobExDQjBhR2x6TG5OcGVtVXNJRE1wT3dvZ0lDQWdjekV1ZFc1cFptOXliVE5tZGloMGFHbHpMbUZrWkhJc0lIUXBPd3A5Q21aMWJtTjBhVzl1SUd0ZktITXhMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJR0Z6S0dVc0lIUm9hWE11YzJsNlpTd2dOQ2s3Q2lBZ0lDQnpNUzUxYm1sbWIzSnROR1oyS0hSb2FYTXVZV1JrY2l3Z2RDazdDbjBLWm5WdVkzUnBiMjRnU0Y4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdZWE1vWlN3Z2RHaHBjeTV6YVhwbExDQTBLVHNLSUNBZ0lITXhMblZ1YVdadmNtMU5ZWFJ5YVhneVpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnUjE4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdZWE1vWlN3Z2RHaHBjeTV6YVhwbExDQTVLVHNLSUNBZ0lITXhMblZ1YVdadmNtMU5ZWFJ5YVhnelpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnVjE4b2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdZWE1vWlN3Z2RHaHBjeTV6YVhwbExDQXhOaWs3Q2lBZ0lDQnpNUzUxYm1sbWIzSnRUV0YwY21sNE5HWjJLSFJvYVhNdVlXUmtjaXdnSVRFc0lIUXBPd3A5Q21aMWJtTjBhVzl1SUZoZktITXhMQ0JsS1NCN0NpQWdJQ0J6TVM1MWJtbG1iM0p0TVdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z2NWOG9jekVzSUdVcElIc0tJQ0FnSUhNeExuVnVhV1p2Y20weWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQlpYeWh6TVN3Z1pTa2dld29nSUNBZ2N6RXVkVzVwWm05eWJUTnBkaWgwYUdsekxtRmtaSElzSUdVcE93cDlDbVoxYm1OMGFXOXVJRnBmS0hNeExDQmxLU0I3Q2lBZ0lDQnpNUzUxYm1sbWIzSnROR2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnU2w4b2N6RXNJR1VwSUhzS0lDQWdJSE14TG5WdWFXWnZjbTB4ZFdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z0pGOG9jekVzSUdVcElIc0tJQ0FnSUhNeExuVnVhV1p2Y20weWRXbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdTMThvY3pFc0lHVXBJSHNLSUNBZ0lITXhMblZ1YVdadmNtMHpkV2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVVY4b2N6RXNJR1VwSUhzS0lDQWdJSE14TG5WdWFXWnZjbTAwZFdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z2FsOG9jekVzSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVqWVdOb1pTd2dhU0E5SUdVdWJHVnVaM1JvTENCeUlEMGdlV0VvZEN3Z2FTazdDaUFnSUNCbmRDaHVMQ0J5S1NCOGZDQW9jekV1ZFc1cFptOXliVEZwZGloMGFHbHpMbUZrWkhJc0lISXBMQ0JmZENodUxDQnlLU2s3Q2lBZ0lDQm1iM0lvYkdWMElHRWdQU0F3T3lCaElDRTlQU0JwT3lBcksyRXBkQzV6WlhSVVpYaDBkWEpsTWtRb1pWdGhYU0I4ZkNCVVpDd2djbHRoWFNrN0NuMEtablZ1WTNScGIyNGdaVEFvY3pFc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1allXTm9aU3dnYVNBOUlHVXViR1Z1WjNSb0xDQnlJRDBnZVdFb2RDd2dhU2s3Q2lBZ0lDQm5kQ2h1TENCeUtTQjhmQ0FvY3pFdWRXNXBabTl5YlRGcGRpaDBhR2x6TG1Ga1pISXNJSElwTENCZmRDaHVMQ0J5S1NrN0NpQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd095QmhJQ0U5UFNCcE95QXJLMkVwZEM1elpYUlVaWGgwZFhKbE0wUW9aVnRoWFNCOGZDQkJaQ3dnY2x0aFhTazdDbjBLWm5WdVkzUnBiMjRnZERBb2N6RXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWpZV05vWlN3Z2FTQTlJR1V1YkdWdVozUm9MQ0J5SUQwZ2VXRW9kQ3dnYVNrN0NpQWdJQ0JuZENodUxDQnlLU0I4ZkNBb2N6RXVkVzVwWm05eWJURnBkaWgwYUdsekxtRmtaSElzSUhJcExDQmZkQ2h1TENCeUtTazdDaUFnSUNCbWIzSW9iR1YwSUdFZ1BTQXdPeUJoSUNFOVBTQnBPeUFySzJFcGRDNXpaWFJVWlhoMGRYSmxRM1ZpWlNobFcyRmRJSHg4SUZKa0xDQnlXMkZkS1RzS2ZRcG1kVzVqZEdsdmJpQnVNQ2h6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OaFkyaGxMQ0JwSUQwZ1pTNXNaVzVuZEdnc0lISWdQU0I1WVNoMExDQnBLVHNLSUNBZ0lHZDBLRzRzSUhJcElIeDhJQ2h6TVM1MWJtbG1iM0p0TVdsMktIUm9hWE11WVdSa2Npd2djaWtzSUY5MEtHNHNJSElwS1RzS0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUdrN0lDc3JZU2wwTG5ObGRGUmxlSFIxY21VeVJFRnljbUY1S0dWYllWMGdmSHdnZDJRc0lISmJZVjBwT3dwOUNtWjFibU4wYVc5dUlHa3dLSE14S1NCN0NpQWdJQ0J6ZDJsMFkyZ29jekVwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFSmZPd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOalE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCNlh6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qWTFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVmw4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR3RmT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQklYenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamMxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1IxODdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZkZk93b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3dPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnV0Y4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk56b0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3hPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY1Y4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3lPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnV1Y4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3pPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnV2w4N0NpQWdJQ0FnSUNBZ1kyRnpaU0ExTVRJMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdTbDg3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TkRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDUmZPd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTFh6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazJPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVVY4N0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM09Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1UazRPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVGc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13TmpvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpneU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhbDg3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzT1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprNU9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EYzZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTURzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpnd09nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EQTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNamt6T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2REQTdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTRPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekF6T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TVRFNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU1qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzR3T3dvZ0lDQWdmUXA5Q25aaGNpQjJieUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSFJvYVhNdWFXUWdQU0JsTENCMGFHbHpMbUZrWkhJZ1BTQnVMQ0IwYUdsekxtTmhZMmhsSUQwZ1cxMHNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQkdYeWgwTG5SNWNHVXBPd29nSUNBZ2ZRcDlMQ0I1YnlBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhV1FnUFNCbExDQjBhR2x6TG1Ga1pISWdQU0J1TENCMGFHbHpMbU5oWTJobElEMGdXMTBzSUhSb2FYTXVjMmw2WlNBOUlIUXVjMmw2WlN3Z2RHaHBjeTV6WlhSV1lXeDFaU0E5SUdrd0tIUXVkSGx3WlNrN0NpQWdJQ0I5Q24wc0lFMXZJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBaQ0E5SUdVc0lIUm9hWE11YzJWeElEMGdXMTBzSUhSb2FYTXViV0Z3SUQwZ2UzMDdDaUFnSUNCOUNpQWdJQ0J6WlhSV1lXeDFaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxuTmxjVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQmhJRDBnYVM1c1pXNW5kR2c3SUhJZ0lUMDlJR0U3SUNzcmNpbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYVZ0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYnk1elpYUldZV3gxWlNobExDQjBXMjh1YVdSZExDQnVLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBzSUZGaElEMGdMeWhjZHlzcEtGeGRLVDhvWEZ0OFhDNHBQeTluT3dwbWRXNWpkR2x2YmlCTmFDaHpNU3dnWlNrZ2V3b2dJQ0FnY3pFdWMyVnhMbkIxYzJnb1pTa3NJSE14TG0xaGNGdGxMbWxrWFNBOUlHVTdDbjBLWm5WdVkzUnBiMjRnY3pBb2N6RXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnY3pFdWJtRnRaU3dnYVNBOUlHNHViR1Z1WjNSb093b2dJQ0FnWm05eUtGRmhMbXhoYzNSSmJtUmxlQ0E5SURBN095bDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQlJZUzVsZUdWaktHNHBMQ0JoSUQwZ1VXRXViR0Z6ZEVsdVpHVjRMQ0J2SUQwZ2Nsc3hYU3dnWXlBOUlISmJNbDBnUFQwOUlDSmRJaXdnYkNBOUlISmJNMTA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHTWdKaVlnS0c4Z1BTQnZJSHdnTUNrc0lHd2dQVDA5SUhadmFXUWdNQ0I4ZkNCc0lEMDlQU0FpV3lJZ0ppWWdZU0FySURJZ1BUMDlJR2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdUV2dvZEN3Z2JDQTlQVDBnZG05cFpDQXdJRDhnYm1WM0lIWnZLRzhzSUhNeExDQmxLU0E2SUc1bGR5QjVieWh2TENCek1Td2daU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlIUXViV0Z3VzI5ZE93b2dJQ0FnSUNBZ0lDQWdJQ0IxSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFVnUFNCdVpYY2dUVzhvYnlrc0lFMW9LSFFzSUhVcEtTd2dkQ0E5SUhVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUNuWmhjaUJ4YVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSFJvYVhNdWMyVnhJRDBnVzEwc0lIUm9hWE11YldGd0lEMGdlMzA3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG1kbGRGQnliMmR5WVcxUVlYSmhiV1YwWlhJb2RDd2daUzVCUTFSSlZrVmZWVTVKUms5U1RWTXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0J1T3lBcksya3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVoyVjBRV04wYVhabFZXNXBabTl5YlNoMExDQnBLU3dnWVNBOUlHVXVaMlYwVlc1cFptOXliVXh2WTJGMGFXOXVLSFFzSUhJdWJtRnRaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXdLSElzSUdFc0lIUm9hWE1wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITmxkRlpoYkhWbEtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWJXRndXM1JkT3dvZ0lDQWdJQ0FnSUhJZ0lUMDlJSFp2YVdRZ01DQW1KaUJ5TG5ObGRGWmhiSFZsS0dVc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ2MyVjBUM0IwYVc5dVlXd29aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkRnR1WFRzS0lDQWdJQ0FnSUNCcElDRTlQU0IyYjJsa0lEQWdKaVlnZEdocGN5NXpaWFJXWVd4MVpTaGxMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QjFjR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHRWdQU0IwTG14bGJtZDBhRHNnY2lBaFBUMGdZVHNnS3l0eUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwVzNKZExDQmpJRDBnYmx0dkxtbGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1l5NXVaV1ZrYzFWd1pHRjBaU0FoUFQwZ0lURWdKaVlnYnk1elpYUldZV3gxWlNobExDQmpMblpoYkhWbExDQnBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYzJWeFYybDBhRlpoYkhWbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQmxMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxXMmxkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhMbWxrSUdsdUlIUWdKaVlnYmk1d2RYTm9LR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1UyZ29jekVzSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2N6RXVZM0psWVhSbFUyaGhaR1Z5S0dVcE93b2dJQ0FnY21WMGRYSnVJSE14TG5Ob1lXUmxjbE52ZFhKalpTaHVMQ0IwS1N3Z2N6RXVZMjl0Y0dsc1pWTm9ZV1JsY2lodUtTd2dianNLZlFwMllYSWdjakFnUFNBd093cG1kVzVqZEdsdmJpQmhNQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCek1TNXpjR3hwZENoZ0NtQXBMQ0J1SUQwZ1cxMHNJR2tnUFNCTllYUm9MbTFoZUNobElDMGdOaXdnTUNrc0lISWdQU0JOWVhSb0xtMXBiaWhsSUNzZ05pd2dkQzVzWlc1bmRHZ3BPd29nSUNBZ1ptOXlLR3hsZENCaElEMGdhVHNnWVNBOElISTdJR0VyS3lsN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCaElDc2dNVHNLSUNBZ0lDQWdJQ0J1TG5CMWMyZ29ZQ1I3YnlBOVBUMGdaU0EvSUNJK0lpQTZJQ0lnSW4wZ0pIdHZmVG9nSkh0MFcyRmRmV0FwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUc0dWFtOXBiaWhnQ21BcE93cDlDbVoxYm1OMGFXOXVJRzh3S0hNeEtTQjdDaUFnSUNCc1pYUWdaU0E5SUZGbExtZGxkRkJ5YVcxaGNtbGxjeWhSWlM1M2IzSnJhVzVuUTI5c2IzSlRjR0ZqWlNrc0lIUWdQU0JSWlM1blpYUlFjbWx0WVhKcFpYTW9jekVwTENCdU93b2dJQ0FnYzNkcGRHTm9LR1VnUFQwOUlIUWdQeUJ1SUQwZ0lpSWdPaUJsSUQwOVBTQnJjaUFtSmlCMElEMDlQU0JXY2lBL0lHNGdQU0FpVEdsdVpXRnlSR2x6Y0d4aGVWQXpWRzlNYVc1bFlYSlRVa2RDSWlBNklHVWdQVDA5SUZaeUlDWW1JSFFnUFQwOUlHdHlJQ1ltSUNodUlEMGdJa3hwYm1WaGNsTlNSMEpVYjB4cGJtVmhja1JwYzNCc1lYbFFNeUlwTENCek1TbDdDaUFnSUNBZ0lDQWdZMkZ6WlNCTmJqb0tJQ0FnSUNBZ0lDQmpZWE5sSUhaaE9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0pNYVc1bFlYSlVjbUZ1YzJabGNrOUZWRVlpQ2lBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdZMkZ6WlNCMmREb0tJQ0FnSUNBZ0lDQmpZWE5sSUhGak9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0p6VWtkQ1ZISmhibk5tWlhKUFJWUkdJZ29nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlRvZ1ZXNXpkWEJ3YjNKMFpXUWdZMjlzYjNJZ2MzQmhZMlU2SWl3Z2N6RXBMQ0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSWt4cGJtVmhjbFJ5WVc1elptVnlUMFZVUmlJS0lDQWdJQ0FnSUNBZ0lDQWdYVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJpYUNoek1Td2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J6TVM1blpYUlRhR0ZrWlhKUVlYSmhiV1YwWlhJb1pTd2djekV1UTA5TlVFbE1SVjlUVkVGVVZWTXBMQ0JwSUQwZ2N6RXVaMlYwVTJoaFpHVnlTVzVtYjB4dlp5aGxLUzUwY21sdEtDazdDaUFnSUNCcFppQW9iaUFtSmlCcElEMDlQU0FpSWlrZ2NtVjBkWEp1SUNJaU93b2dJQ0FnYkdWMElISWdQU0F2UlZKU1QxSTZJREE2S0Z4a0t5a3ZMbVY0WldNb2FTazdDaUFnSUNCcFppQW9jaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnY0dGeWMyVkpiblFvY2xzeFhTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVkRzlWY0hCbGNrTmhjMlVvS1NBcklHQUtDbUFnS3lCcElDc2dZQW9LWUNBcklHRXdLSE14TG1kbGRGTm9ZV1JsY2xOdmRYSmpaU2hsS1N3Z1lTazdDaUFnSUNCOUlHVnNjMlVnY21WMGRYSnVJR2s3Q24wS1puVnVZM1JwYjI0Z1l6QW9jekVzSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnYnpBb1pTazdDaUFnSUNCeVpYUjFjbTRnWUhabFl6UWdKSHR6TVgwb0lIWmxZelFnZG1Gc2RXVWdLU0I3SUhKbGRIVnliaUFrZTNSYk1GMTlLQ0FrZTNSYk1WMTlLQ0IyWVd4MVpTQXBJQ2s3SUgxZ093cDlDbVoxYm1OMGFXOXVJR3d3S0hNeExDQmxLU0I3Q2lBZ0lDQnNaWFFnZERzS0lDQWdJSE4zYVhSamFDaGxLWHNLSUNBZ0lDQWdJQ0JqWVhObElHUm1PZ29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdJa3hwYm1WaGNpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1ptWTZDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQWlVbVZwYm1oaGNtUWlPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElIQm1PZ29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdJazl3ZEdsdGFYcGxaRU5wYm1WdmJpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ2JXWTZDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQWlRVU5GVTBacGJHMXBZeUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdaMlk2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpUTNWemRHOXRJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZCeWIyZHlZVzA2SUZWdWMzVndjRzl5ZEdWa0lIUnZibVZOWVhCd2FXNW5PaUlzSUdVcExDQjBJRDBnSWt4cGJtVmhjaUk3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnSW5abFl6TWdJaUFySUhNeElDc2dJaWdnZG1Wak15QmpiMnh2Y2lBcElIc2djbVYwZFhKdUlDSWdLeUIwSUNzZ0lsUnZibVZOWVhCd2FXNW5LQ0JqYjJ4dmNpQXBPeUI5SWpzS2ZRcG1kVzVqZEdsdmJpQm9NQ2h6TVNrZ2V3b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0J6TVM1bGVIUmxibk5wYjI1RVpYSnBkbUYwYVhabGN5QjhmQ0J6TVM1bGJuWk5ZWEJEZFdKbFZWWklaV2xuYUhRZ2ZId2djekV1WW5WdGNFMWhjQ0I4ZkNCek1TNXViM0p0WVd4TllYQlVZVzVuWlc1MFUzQmhZMlVnZkh3Z2N6RXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJSHg4SUhNeExtWnNZWFJUYUdGa2FXNW5JSHg4SUhNeExuTm9ZV1JsY2tsRUlEMDlQU0FpY0doNWMybGpZV3dpSUQ4Z0lpTmxlSFJsYm5OcGIyNGdSMHhmVDBWVFgzTjBZVzVrWVhKa1gyUmxjbWwyWVhScGRtVnpJRG9nWlc1aFlteGxJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lDaHpNUzVsZUhSbGJuTnBiMjVHY21GblJHVndkR2dnZkh3Z2N6RXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lrZ0ppWWdjekV1Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVHY21GblJHVndkR2dnUHlBaUkyVjRkR1Z1YzJsdmJpQkhURjlGV0ZSZlpuSmhaMTlrWlhCMGFDQTZJR1Z1WVdKc1pTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCek1TNWxlSFJsYm5OcGIyNUVjbUYzUW5WbVptVnljeUFtSmlCek1TNXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrUnlZWGRDZFdabVpYSnpJRDhnSWlObGVIUmxibk5wYjI0Z1IweGZSVmhVWDJSeVlYZGZZblZtWm1WeWN5QTZJSEpsY1hWcGNtVWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0tITXhMbVY0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTVQwUWdmSHdnY3pFdVpXNTJUV0Z3SUh4OElITXhMblJ5WVc1emJXbHpjMmx2YmlrZ0ppWWdjekV1Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVUYUdGa1pYSlVaWGgwZFhKbFRHOWtJRDhnSWlObGVIUmxibk5wYjI0Z1IweGZSVmhVWDNOb1lXUmxjbDkwWlhoMGRYSmxYMnh2WkNBNklHVnVZV0pzWlNJZ09pQWlJZ29nSUNBZ1hTNW1hV3gwWlhJb2RuTXBMbXB2YVc0b1lBcGdLVHNLZlFwbWRXNWpkR2x2YmlCMU1DaHpNU2tnZXdvZ0lDQWdiR1YwSUdVZ1BTQmJYVHNLSUNBZ0lHWnZjaWhzWlhRZ2RDQnBiaUJ6TVNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCek1WdDBYVHNLSUNBZ0lDQWdJQ0J1SUNFOVBTQWhNU0FtSmlCbExuQjFjMmdvSWlOa1pXWnBibVVnSWlBcklIUWdLeUFpSUNJZ0t5QnVLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsTG1wdmFXNG9ZQXBnS1RzS2ZRcG1kVzVqZEdsdmJpQmtNQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCN2ZTd2diaUE5SUhNeExtZGxkRkJ5YjJkeVlXMVFZWEpoYldWMFpYSW9aU3dnY3pFdVFVTlVTVlpGWDBGVVZGSkpRbFZVUlZNcE93b2dJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Ec2dhU0E4SUc0N0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J6TVM1blpYUkJZM1JwZG1WQmRIUnlhV0lvWlN3Z2FTa3NJR0VnUFNCeUxtNWhiV1VzSUc4Z1BTQXhPd29nSUNBZ0lDQWdJSEl1ZEhsd1pTQTlQVDBnY3pFdVJreFBRVlJmVFVGVU1pQW1KaUFvYnlBOUlESXBMQ0J5TG5SNWNHVWdQVDA5SUhNeExrWk1UMEZVWDAxQlZETWdKaVlnS0c4Z1BTQXpLU3dnY2k1MGVYQmxJRDA5UFNCek1TNUdURTlCVkY5TlFWUTBJQ1ltSUNodklEMGdOQ2tzSUhSYllWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhJdWRIbHdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHOWpZWFJwYjI0NklITXhMbWRsZEVGMGRISnBZa3h2WTJGMGFXOXVLR1VzSUdFcExBb2dJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGRHbHZibE5wZW1VNklHOEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSFE3Q24wS1puVnVZM1JwYjI0Z2RuTW9jekVwSUhzS0lDQWdJSEpsZEhWeWJpQnpNU0FoUFQwZ0lpSTdDbjBLWm5WdVkzUnBiMjRnUldnb2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdaUzV1ZFcxVGNHOTBUR2xuYUhSVGFHRmtiM2R6SUNzZ1pTNXVkVzFUY0c5MFRHbG5hSFJOWVhCeklDMGdaUzV1ZFcxVGNHOTBUR2xuYUhSVGFHRmtiM2R6VjJsMGFFMWhjSE03Q2lBZ0lDQnlaWFIxY200Z2N6RXVjbVZ3YkdGalpTZ3ZUbFZOWDBSSlVsOU1TVWRJVkZNdlp5d2daUzV1ZFcxRWFYSk1hV2RvZEhNcExuSmxjR3hoWTJVb0wwNVZUVjlUVUU5VVgweEpSMGhVVXk5bkxDQmxMbTUxYlZOd2IzUk1hV2RvZEhNcExuSmxjR3hoWTJVb0wwNVZUVjlUVUU5VVgweEpSMGhVWDAxQlVGTXZaeXdnWlM1dWRXMVRjRzkwVEdsbmFIUk5ZWEJ6S1M1eVpYQnNZV05sS0M5T1ZVMWZVMUJQVkY5TVNVZElWRjlEVDA5U1JGTXZaeXdnZENrdWNtVndiR0ZqWlNndlRsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTXZaeXdnWlM1dWRXMVNaV04wUVhKbFlVeHBaMmgwY3lrdWNtVndiR0ZqWlNndlRsVk5YMUJQU1U1VVgweEpSMGhVVXk5bkxDQmxMbTUxYlZCdmFXNTBUR2xuYUhSektTNXlaWEJzWVdObEtDOU9WVTFmU0VWTlNWOU1TVWRJVkZNdlp5d2daUzV1ZFcxSVpXMXBUR2xuYUhSektTNXlaWEJzWVdObEtDOU9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU12Wnl3Z1pTNXVkVzFFYVhKTWFXZG9kRk5vWVdSdmQzTXBMbkpsY0d4aFkyVW9MMDVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFOZlYwbFVTRjlOUVZCVEwyY3NJR1V1Ym5WdFUzQnZkRXhwWjJoMFUyaGhaRzkzYzFkcGRHaE5ZWEJ6S1M1eVpYQnNZV05sS0M5T1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRMMmNzSUdVdWJuVnRVM0J2ZEV4cFoyaDBVMmhoWkc5M2N5a3VjbVZ3YkdGalpTZ3ZUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNdlp5d2daUzV1ZFcxUWIybHVkRXhwWjJoMFUyaGhaRzkzY3lrN0NuMEtablZ1WTNScGIyNGdWR2dvY3pFc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCek1TNXlaWEJzWVdObEtDOU9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRMMmNzSUdVdWJuVnRRMnhwY0hCcGJtZFFiR0Z1WlhNcExuSmxjR3hoWTJVb0wxVk9TVTlPWDBOTVNWQlFTVTVIWDFCTVFVNUZVeTluTENCbExtNTFiVU5zYVhCd2FXNW5VR3hoYm1WeklDMGdaUzV1ZFcxRGJHbHdTVzUwWlhKelpXTjBhVzl1S1RzS2ZRcDJZWElnWmpBZ1BTQXZYbHNnWEhSZEtpTnBibU5zZFdSbElDczhLRnRjZDF4a0xpOWRLeWsrTDJkdE93cG1kVzVqZEdsdmJpQlRieWh6TVNrZ2V3b2dJQ0FnY21WMGRYSnVJSE14TG5KbGNHeGhZMlVvWmpBc0lHMHdLVHNLZlFwMllYSWdjREFnUFNCdVpYY2dUV0Z3S0ZzS0lDQWdJRnNLSUNBZ0lDQWdJQ0FpWlc1amIyUnBibWR6WDJaeVlXZHRaVzUwSWl3S0lDQWdJQ0FnSUNBaVkyOXNiM0p6Y0dGalpWOW1jbUZuYldWdWRDSUtJQ0FnSUYwc0NpQWdJQ0JiQ2lBZ0lDQWdJQ0FnSW1WdVkyOWthVzVuYzE5d1lYSnpYMlp5WVdkdFpXNTBJaXdLSUNBZ0lDQWdJQ0FpWTI5c2IzSnpjR0ZqWlY5d1lYSnpYMlp5WVdkdFpXNTBJZ29nSUNBZ1hTd0tJQ0FnSUZzS0lDQWdJQ0FnSUNBaWIzVjBjSFYwWDJaeVlXZHRaVzUwSWl3S0lDQWdJQ0FnSUNBaWIzQmhjWFZsWDJaeVlXZHRaVzUwSWdvZ0lDQWdYUXBkS1RzS1puVnVZM1JwYjI0Z2JUQW9jekVzSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnYTJWYlpWMDdDaUFnSUNCcFppQW9kQ0E5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCd01DNW5aWFFvWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLRzRnSVQwOUlIWnZhV1FnTUNrZ2RDQTlJR3RsVzI1ZExDQmpiMjV6YjJ4bExuZGhjbTRvSjFSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGTm9ZV1JsY2lCamFIVnVheUFpSlhNaUlHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNBaUpYTWlJR2x1YzNSbFlXUXVKeXdnWlN3Z2JpazdDaUFnSUNBZ0lDQWdaV3h6WlNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWtOaGJpQnViM1FnY21WemIyeDJaU0FqYVc1amJIVmtaU0E4SWlBcklHVWdLeUFpUGlJcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlGTnZLSFFwT3dwOUNuWmhjaUJuTUNBOUlDOGpjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMFhITXJabTl5WEhNcVhDaGNjeXBwYm5SY2N5dHBYSE1xUFZ4ektpaGNaQ3NwWEhNcU8xeHpLbWxjY3lvOFhITXFLRnhrS3lsY2N5bzdYSE1xYVZ4ektsd3JYQ3RjY3lwY0tWeHpLbnNvVzF4elhGTmRLejhwZlZ4ekt5TndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrTDJjN0NtWjFibU4wYVc5dUlIZG9LSE14S1NCN0NpQWdJQ0J5WlhSMWNtNGdjekV1Y21Wd2JHRmpaU2huTUN3Z1h6QXBPd3A5Q21aMWJtTjBhVzl1SUY4d0tITXhMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlDSWlPd29nSUNBZ1ptOXlLR3hsZENCeUlEMGdjR0Z5YzJWSmJuUW9aU2s3SUhJZ1BDQndZWEp6WlVsdWRDaDBLVHNnY2lzcktXa2dLejBnYmk1eVpYQnNZV05sS0M5Y1cxeHpLbWxjY3lwY1hTOW5MQ0FpV3lBaUlDc2djaUFySUNJZ1hTSXBMbkpsY0d4aFkyVW9MMVZPVWs5TVRFVkVYMHhQVDFCZlNVNUVSVmd2Wnl3Z2NpazdDaUFnSUNCeVpYUjFjbTRnYVRzS2ZRcG1kVzVqZEdsdmJpQkJhQ2h6TVNrZ2V3b2dJQ0FnYkdWMElHVWdQU0FpY0hKbFkybHphVzl1SUNJZ0t5QnpNUzV3Y21WamFYTnBiMjRnS3lCZ0lHWnNiMkYwT3dwd2NtVmphWE5wYjI0Z1lDQXJJSE14TG5CeVpXTnBjMmx2YmlBcklDSWdhVzUwT3lJN0NpQWdJQ0J5WlhSMWNtNGdjekV1Y0hKbFkybHphVzl1SUQwOVBTQWlhR2xuYUhBaUlEOGdaU0FyUFNCZ0NpTmtaV1pwYm1VZ1NFbEhTRjlRVWtWRFNWTkpUMDVnSURvZ2N6RXVjSEpsWTJsemFXOXVJRDA5UFNBaWJXVmthWFZ0Y0NJZ1B5QmxJQ3M5SUdBS0kyUmxabWx1WlNCTlJVUkpWVTFmVUZKRlEwbFRTVTlPWUNBNklITXhMbkJ5WldOcGMybHZiaUE5UFQwZ0lteHZkM0FpSUNZbUlDaGxJQ3M5SUdBS0kyUmxabWx1WlNCTVQxZGZVRkpGUTBsVFNVOU9ZQ2tzSUdVN0NuMEtablZ1WTNScGIyNGdlREFvY3pFcElIc0tJQ0FnSUd4bGRDQmxJRDBnSWxOSVFVUlBWMDFCVUY5VVdWQkZYMEpCVTBsRElqc0tJQ0FnSUhKbGRIVnliaUJ6TVM1emFHRmtiM2ROWVhCVWVYQmxJRDA5UFNCalpDQS9JR1VnUFNBaVUwaEJSRTlYVFVGUVgxUlpVRVZmVUVOR0lpQTZJSE14TG5Ob1lXUnZkMDFoY0ZSNWNHVWdQVDA5SUVka0lEOGdaU0E5SUNKVFNFRkVUMWROUVZCZlZGbFFSVjlRUTBaZlUwOUdWQ0lnT2lCek1TNXphR0ZrYjNkTllYQlVlWEJsSUQwOVBTQndiaUFtSmlBb1pTQTlJQ0pUU0VGRVQxZE5RVkJmVkZsUVJWOVdVMDBpS1N3Z1pUc0tmUXBtZFc1amRHbHZiaUIyTUNoek1Ta2dld29nSUNBZ2JHVjBJR1VnUFNBaVJVNVdUVUZRWDFSWlVFVmZRMVZDUlNJN0NpQWdJQ0JwWmlBb2N6RXVaVzUyVFdGd0tTQnpkMmwwWTJnb2N6RXVaVzUyVFdGd1RXOWtaU2w3Q2lBZ0lDQWdJQ0FnWTJGelpTQjZiam9LSUNBZ0lDQWdJQ0JqWVhObElHTnBPZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOVVXVkJGWDBOVlFrVWlPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElGWnpPZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJSGt3S0hNeEtTQjdDaUFnSUNCc1pYUWdaU0E5SUNKRlRsWk5RVkJmVFU5RVJWOVNSVVpNUlVOVVNVOU9JanNLSUNBZ0lHbG1JQ2h6TVM1bGJuWk5ZWEFwSUhOM2FYUmphQ2h6TVM1bGJuWk5ZWEJOYjJSbEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUdOcE9nb2dJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ0lrVk9WazFCVUY5TlQwUkZYMUpGUmxKQlExUkpUMDRpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJRTB3S0hNeEtTQjdDaUFnSUNCc1pYUWdaU0E5SUNKRlRsWk5RVkJmUWt4RlRrUkpUa2RmVGs5T1JTSTdDaUFnSUNCcFppQW9jekV1Wlc1MlRXRndLU0J6ZDJsMFkyZ29jekV1WTI5dFltbHVaU2w3Q2lBZ0lDQWdJQ0FnWTJGelpTQjRZVG9LSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ0pGVGxaTlFWQmZRa3hGVGtSSlRrZGZUVlZNVkVsUVRGa2lPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElHaG1PZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOUNURVZPUkVsT1IxOU5TVmdpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJSFZtT2dvZ0lDQWdJQ0FnSUNBZ0lDQmxJRDBnSWtWT1ZrMUJVRjlDVEVWT1JFbE9SMTlCUkVRaU93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q21aMWJtTjBhVzl1SUZNd0tITXhLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlITXhMbVZ1ZGsxaGNFTjFZbVZWVmtobGFXZG9kRHNLSUNBZ0lHbG1JQ2hsSUQwOVBTQnVkV3hzS1NCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUd4bGRDQjBJRDBnVFdGMGFDNXNiMmN5S0dVcElDMGdNaXdnYmlBOUlERWdMeUJsT3dvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQjBaWGhsYkZkcFpIUm9PaUF4SUM4Z0tETWdLaUJOWVhSb0xtMWhlQ2hOWVhSb0xuQnZkeWd5TENCMEtTd2dOeUFxSURFMktTa3NDaUFnSUNBZ0lDQWdkR1Y0Wld4SVpXbG5hSFE2SUc0c0NpQWdJQ0FnSUNBZ2JXRjRUV2x3T2lCMENpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHSXdLSE14TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSE14TG1kbGRFTnZiblJsZUhRb0tTd2djaUE5SUhRdVpHVm1hVzVsY3l3Z1lTQTlJSFF1ZG1WeWRHVjRVMmhoWkdWeUxDQnZJRDBnZEM1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdnWXlBOUlIZ3dLSFFwTENCc0lEMGdkakFvZENrc0lHZ2dQU0I1TUNoMEtTd2dkU0E5SUUwd0tIUXBMQ0JrSUQwZ1V6QW9kQ2tzSUdZZ1BTQjBMbWx6VjJWaVIwd3lJRDhnSWlJZ09pQm9NQ2gwS1N3Z2JTQTlJSFV3S0hJcExDQmZJRDBnYVM1amNtVmhkR1ZRY205bmNtRnRLQ2tzSUdjc0lIQXNJSFlnUFNCMExtZHNjMnhXWlhKemFXOXVJRDhnSWlOMlpYSnphVzl1SUNJZ0t5QjBMbWRzYzJ4V1pYSnphVzl1SUNzZ1lBcGdJRG9nSWlJN0NpQWdJQ0IwTG1selVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3Z1B5QW9aeUE5SUZzS0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCVFNFRkVSVkpmVkZsUVJTQWlJQ3NnZEM1emFHRmtaWEpVZVhCbExBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElGTklRVVJGVWw5T1FVMUZJQ0lnS3lCMExuTm9ZV1JsY2s1aGJXVXNDaUFnSUNBZ0lDQWdiUW9nSUNBZ1hTNW1hV3gwWlhJb2RuTXBMbXB2YVc0b1lBcGdLU3dnWnk1c1pXNW5kR2dnUGlBd0lDWW1JQ2huSUNzOUlHQUtZQ2tzSUhBZ1BTQmJDaUFnSUNBZ0lDQWdaaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0JUU0VGRVJWSmZWRmxRUlNBaUlDc2dkQzV6YUdGa1pYSlVlWEJsTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUZOSVFVUkZVbDlPUVUxRklDSWdLeUIwTG5Ob1lXUmxjazVoYldVc0NpQWdJQ0FnSUNBZ2JRb2dJQ0FnWFM1bWFXeDBaWElvZG5NcExtcHZhVzRvWUFwZ0tTd2djQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHdJQ3M5SUdBS1lDa3BJRG9nS0djZ1BTQmJDaUFnSUNBZ0lDQWdRV2dvZENrc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ1UwaEJSRVZTWDFSWlVFVWdJaUFySUhRdWMyaGhaR1Z5Vkhsd1pTd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQlRTRUZFUlZKZlRrRk5SU0FpSUNzZ2RDNXphR0ZrWlhKT1lXMWxMQW9nSUNBZ0lDQWdJRzBzQ2lBZ0lDQWdJQ0FnZEM1cGJuTjBZVzVqYVc1bklEOGdJaU5rWldacGJtVWdWVk5GWDBsT1UxUkJUa05KVGtjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1cGJuTjBZVzVqYVc1blEyOXNiM0lnUHlBaUkyUmxabWx1WlNCVlUwVmZTVTVUVkVGT1EwbE9SMTlEVDB4UFVpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuVnpaVVp2WnlBbUppQjBMbVp2WnlBL0lDSWpaR1ZtYVc1bElGVlRSVjlHVDBjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MWMyVkdiMmNnSmlZZ2RDNW1iMmRGZUhBeUlEOGdJaU5rWldacGJtVWdSazlIWDBWWVVESWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wlc1MlRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwVk9WazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdWRrMWhjQ0EvSUNJalpHVm1hVzVsSUNJZ0t5Qm9JRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXNhV2RvZEUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVNVZElWRTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1GdlRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwRlBUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WW5WdGNFMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUNWVTFRVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG01dmNtMWhiRTFoY0U5aWFtVmpkRk53WVdObElEOGdJaU5rWldacGJtVWdWVk5GWDA1UFVrMUJURTFCVUY5UFFrcEZRMVJUVUVGRFJTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtNXZjbTFoYkUxaGNGUmhibWRsYm5SVGNHRmpaU0EvSUNJalpHVm1hVzVsSUZWVFJWOU9UMUpOUVV4TlFWQmZWRUZPUjBWT1ZGTlFRVU5GSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwUkpVMUJNUVVORlRVVk9WRTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdGFYTnphWFpsVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBWTlNWTlRTVlpGVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVlXNXBjMjkwY205d2VTQS9JQ0lqWkdWbWFXNWxJRlZUUlY5QlRrbFRUMVJTVDFCWklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVlXNXBjMjkwY205d2VVMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUJUa2xUVDFSU1QxQlpUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBOTVJVRlNRMDlCVkUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOURURVZCVWtOUFFWUmZVazlWUjBoT1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5NUlVGU1EwOUJWRjlPVDFKTlFVeE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVwY21sa1pYTmpaVzVqWlUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5SlVrbEVSVk5EUlU1RFJVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBsU1NVUkZVME5GVGtORlgxUklTVU5MVGtWVFUwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk53WldOMWJHRnlUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5RUlVOVlRFRlNUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRVRVZEVlV4QlVsOURUMHhQVWsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTlFSVU5WVEVGU1gwbE9WRVZPVTBsVVdVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbkp2ZFdkb2JtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dFpYUmhiRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRVVlVRVXhPUlZOVFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZV3h3YUdGTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVeFFTRUZOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGJIQm9ZVWhoYzJnZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUVV4UVNFRklRVk5JSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEhKaGJuTnRhWE56YVc5dUlEOGdJaU5rWldacGJtVWdWVk5GWDFSU1FVNVRUVWxUVTBsUFRpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUnlZVzV6YldsemMybHZiazFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlVVWtGT1UwMUpVMU5KVDA1TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTBhR2xqYTI1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZWRWhKUTB0T1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJobFpXNURiMnh2Y2sxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFNFVkZUbDlEVDB4UFVrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWldWdVVtOTFaMmh1WlhOelRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTklSVVZPWDFKUFZVZElUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMWhjRlYySUQ4Z0lpTmtaV1pwYm1VZ1RVRlFYMVZXSUNJZ0t5QjBMbTFoY0ZWMklEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGJIQm9ZVTFoY0ZWMklEOGdJaU5rWldacGJtVWdRVXhRU0VGTlFWQmZWVllnSWlBcklIUXVZV3h3YUdGTllYQlZkaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViR2xuYUhSTllYQlZkaUEvSUNJalpHVm1hVzVsSUV4SlIwaFVUVUZRWDFWV0lDSWdLeUIwTG14cFoyaDBUV0Z3VlhZZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1GdlRXRndWWFlnUHlBaUkyUmxabWx1WlNCQlQwMUJVRjlWVmlBaUlDc2dkQzVoYjAxaGNGVjJJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiV2x6YzJsMlpVMWhjRlYySUQ4Z0lpTmtaV1pwYm1VZ1JVMUpVMU5KVmtWTlFWQmZWVllnSWlBcklIUXVaVzFwYzNOcGRtVk5ZWEJWZGlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WW5WdGNFMWhjRlYySUQ4Z0lpTmtaV1pwYm1VZ1FsVk5VRTFCVUY5VlZpQWlJQ3NnZEM1aWRXMXdUV0Z3VlhZZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG01dmNtMWhiRTFoY0ZWMklEOGdJaU5rWldacGJtVWdUazlTVFVGTVRVRlFYMVZXSUNJZ0t5QjBMbTV2Y20xaGJFMWhjRlYySURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVrYVhOd2JHRmpaVzFsYm5STllYQlZkaUEvSUNJalpHVm1hVzVsSUVSSlUxQk1RVU5GVFVWT1ZFMUJVRjlWVmlBaUlDc2dkQzVrYVhOd2JHRmpaVzFsYm5STllYQlZkaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV1YwWVd4dVpYTnpUV0Z3VlhZZ1B5QWlJMlJsWm1sdVpTQk5SVlJCVEU1RlUxTk5RVkJmVlZZZ0lpQXJJSFF1YldWMFlXeHVaWE56VFdGd1ZYWWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuSnZkV2RvYm1WemMwMWhjRlYySUQ4Z0lpTmtaV1pwYm1VZ1VrOVZSMGhPUlZOVFRVRlFYMVZXSUNJZ0t5QjBMbkp2ZFdkb2JtVnpjMDFoY0ZWMklEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGJtbHpiM1J5YjNCNVRXRndWWFlnUHlBaUkyUmxabWx1WlNCQlRrbFRUMVJTVDFCWlRVRlFYMVZXSUNJZ0t5QjBMbUZ1YVhOdmRISnZjSGxOWVhCVmRpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVkyeGxZWEpqYjJGMFRXRndWWFlnUHlBaUkyUmxabWx1WlNCRFRFVkJVa05QUVZSTlFWQmZWVllnSWlBcklIUXVZMnhsWVhKamIyRjBUV0Z3VlhZZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0ZWMklEOGdJaU5rWldacGJtVWdRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVRjlWVmlBaUlDc2dkQzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEJWZGlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd1ZYWWdQeUFpSTJSbFptbHVaU0JEVEVWQlVrTlBRVlJmVWs5VlIwaE9SVk5UVFVGUVgxVldJQ0lnS3lCMExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjRlYySURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVwY21sa1pYTmpaVzVqWlUxaGNGVjJJRDhnSWlOa1pXWnBibVVnU1ZKSlJFVlRRMFZPUTBWTlFWQmZWVllnSWlBcklIUXVhWEpwWkdWelkyVnVZMlZOWVhCVmRpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTk5ZWEJWZGlBL0lDSWpaR1ZtYVc1bElFbFNTVVJGVTBORlRrTkZYMVJJU1VOTFRrVlRVMDFCVUY5VlZpQWlJQ3NnZEM1cGNtbGtaWE5qWlc1alpWUm9hV05yYm1WemMwMWhjRlYySURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJrTnZiRzl5VFdGd1ZYWWdQeUFpSTJSbFptbHVaU0JUU0VWRlRsOURUMHhQVWsxQlVGOVZWaUFpSUNzZ2RDNXphR1ZsYmtOdmJHOXlUV0Z3VlhZZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3VlhZZ1B5QWlJMlJsWm1sdVpTQlRTRVZGVGw5U1QxVkhTRTVGVTFOTlFWQmZWVllnSWlBcklIUXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQlZkaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM0JsWTNWc1lYSk5ZWEJWZGlBL0lDSWpaR1ZtYVc1bElGTlFSVU5WVEVGU1RVRlFYMVZXSUNJZ0t5QjBMbk53WldOMWJHRnlUV0Z3VlhZZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEJWZGlBL0lDSWpaR1ZtYVc1bElGTlFSVU5WVEVGU1gwTlBURTlTVFVGUVgxVldJQ0lnS3lCMExuTndaV04xYkdGeVEyOXNiM0pOWVhCVmRpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQlZkaUEvSUNJalpHVm1hVzVsSUZOUVJVTlZURUZTWDBsT1ZFVk9VMGxVV1UxQlVGOVZWaUFpSUNzZ2RDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjRlYySURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI1TllYQlZkaUEvSUNJalpHVm1hVzVsSUZSU1FVNVRUVWxUVTBsUFRrMUJVRjlWVmlBaUlDc2dkQzUwY21GdWMyMXBjM05wYjI1TllYQlZkaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkR2hwWTJ0dVpYTnpUV0Z3VlhZZ1B5QWlJMlJsWm1sdVpTQlVTRWxEUzA1RlUxTk5RVkJmVlZZZ0lpQXJJSFF1ZEdocFkydHVaWE56VFdGd1ZYWWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZSaGJtZGxiblJ6SUNZbUlIUXVabXhoZEZOb1lXUnBibWNnUFQwOUlDRXhJRDhnSWlOa1pXWnBibVVnVlZORlgxUkJUa2RGVGxRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhEYjJ4dmNuTWdQeUFpSTJSbFptbHVaU0JWVTBWZlEwOU1UMUlpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaEJiSEJvWVhNZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTA5TVQxSmZRVXhRU0VFaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhWZGpGeklEOGdJaU5rWldacGJtVWdWVk5GWDFWV01TSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZWMk1uTWdQeUFpSTJSbFptbHVaU0JWVTBWZlZWWXlJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFZYWXpjeUEvSUNJalpHVm1hVzVsSUZWVFJWOVZWak1pSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV3YjJsdWRITlZkbk1nUHlBaUkyUmxabWx1WlNCVlUwVmZVRTlKVGxSVFgxVldJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhoZEZOb1lXUnBibWNnUHlBaUkyUmxabWx1WlNCR1RFRlVYMU5JUVVSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTnJhVzV1YVc1bklEOGdJaU5rWldacGJtVWdWVk5GWDFOTFNVNU9TVTVISWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ylc5eWNHaFVZWEpuWlhSeklEOGdJaU5rWldacGJtVWdWVk5GWDAxUFVsQklWRUZTUjBWVVV5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMXZjbkJvVG05eWJXRnNjeUFtSmlCMExtWnNZWFJUYUdGa2FXNW5JRDA5UFNBaE1TQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlQxSlFTRTVQVWsxQlRGTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRiM0p3YUVOdmJHOXljeUFtSmlCMExtbHpWMlZpUjB3eUlEOGdJaU5rWldacGJtVWdWVk5GWDAxUFVsQklRMDlNVDFKVElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXOXljR2hVWVhKblpYUnpRMjkxYm5RZ1BpQXdJQ1ltSUhRdWFYTlhaV0pIVERJZ1B5QWlJMlJsWm1sdVpTQk5UMUpRU0ZSQlVrZEZWRk5mVkVWWVZGVlNSU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTF2Y25Cb1ZHRnlaMlYwYzBOdmRXNTBJRDRnTUNBbUppQjBMbWx6VjJWaVIwd3lJRDhnSWlOa1pXWnBibVVnVFU5U1VFaFVRVkpIUlZSVFgxUkZXRlJWVWtWZlUxUlNTVVJGSUNJZ0t5QjBMbTF2Y25Cb1ZHVjRkSFZ5WlZOMGNtbGtaU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUWdQaUF3SUNZbUlIUXVhWE5YWldKSFRESWdQeUFpSTJSbFptbHVaU0JOVDFKUVNGUkJVa2RGVkZOZlEwOVZUbFFnSWlBcklIUXViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtUnZkV0pzWlZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUkU5VlFreEZYMU5KUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteHBjRk5wWkdWa0lEOGdJaU5rWldacGJtVWdSa3hKVUY5VFNVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEJSRTlYVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBL0lDSWpaR1ZtYVc1bElDSWdLeUJqSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YVhwbFFYUjBaVzUxWVhScGIyNGdQeUFpSTJSbFptbHVaU0JWVTBWZlUwbGFSVUZVVkVWT1ZVRlVTVTlPSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym5WdFRHbG5hSFJRY205aVpYTWdQaUF3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhKUjBoVVgxQlNUMEpGVXlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5WelpVeGxaMkZqZVV4cFoyaDBjeUEvSUNJalpHVm1hVzVsSUV4RlIwRkRXVjlNU1VkSVZGTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhQUjBSRlVGUklRbFZHSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQW1KaUIwTG5KbGJtUmxjbVZ5UlhoMFpXNXphVzl1Um5KaFowUmxjSFJvSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhQUjBSRlVGUklRbFZHWDBWWVZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCdFlYUTBJRzF2WkdWc1RXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2JXRjBOQ0J0YjJSbGJGWnBaWGROWVhSeWFYZzdJaXdLSUNBZ0lDQWdJQ0FpZFc1cFptOXliU0J0WVhRMElIQnliMnBsWTNScGIyNU5ZWFJ5YVhnN0lpd0tJQ0FnSUNBZ0lDQWlkVzVwWm05eWJTQnRZWFEwSUhacFpYZE5ZWFJ5YVhnN0lpd0tJQ0FnSUNBZ0lDQWlkVzVwWm05eWJTQnRZWFF6SUc1dmNtMWhiRTFoZEhKcGVEc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJSFpsWXpNZ1kyRnRaWEpoVUc5emFYUnBiMjQ3SWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCaWIyOXNJR2x6VDNKMGFHOW5jbUZ3YUdsak95SXNDaUFnSUNBZ0lDQWdJaU5wWm1SbFppQlZVMFZmU1U1VFZFRk9RMGxPUnlJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdiV0YwTkNCcGJuTjBZVzVqWlUxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNJalpXNWthV1lpTEFvZ0lDQWdJQ0FnSUNJamFXWmtaV1lnVlZORlgwbE9VMVJCVGtOSlRrZGZRMDlNVDFJaUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpNZ2FXNXpkR0Z1WTJWRGIyeHZjanNpTEFvZ0lDQWdJQ0FnSUNJalpXNWthV1lpTEFvZ0lDQWdJQ0FnSUNKaGRIUnlhV0oxZEdVZ2RtVmpNeUJ3YjNOcGRHbHZianNpTEFvZ0lDQWdJQ0FnSUNKaGRIUnlhV0oxZEdVZ2RtVmpNeUJ1YjNKdFlXdzdJaXdLSUNBZ0lDQWdJQ0FpWVhSMGNtbGlkWFJsSUhabFl6SWdkWFk3SWl3S0lDQWdJQ0FnSUNBaUkybG1aR1ZtSUZWVFJWOVZWakVpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZeklnZFhZeE95SXNDaUFnSUNBZ0lDQWdJaU5sYm1ScFppSXNDaUFnSUNBZ0lDQWdJaU5wWm1SbFppQlZVMFZmVlZZeUlpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNeUlIVjJNanNpTEFvZ0lDQWdJQ0FnSUNJalpXNWthV1lpTEFvZ0lDQWdJQ0FnSUNJamFXWmtaV1lnVlZORlgxVldNeUlzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpNaUIxZGpNN0lpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTTBJSFJoYm1kbGJuUTdJaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpSTJsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVsOUJURkJJUVNBcElpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNMElHTnZiRzl5T3lJc0NpQWdJQ0FnSUNBZ0lpTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcElpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNeklHTnZiRzl5T3lJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0lpTnBaaUFvSUdSbFptbHVaV1FvSUZWVFJWOU5UMUpRU0ZSQlVrZEZWRk1nS1NBbUppQWhJR1JsWm1sdVpXUW9JRTFQVWxCSVZFRlNSMFZVVTE5VVJWaFVWVkpGSUNrZ0tTSXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUZSaGNtZGxkREE3SWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME1Uc2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFF5T3lJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTXlCdGIzSndhRlJoY21kbGRETTdJaXdLSUNBZ0lDQWdJQ0FpQ1NOcFptUmxaaUJWVTBWZlRVOVNVRWhPVDFKTlFVeFRJaXdLSUNBZ0lDQWdJQ0FpQ1FsaGRIUnlhV0oxZEdVZ2RtVmpNeUJ0YjNKd2FFNXZjbTFoYkRBN0lpd0tJQ0FnSUNBZ0lDQWlDUWxoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUU1dmNtMWhiREU3SWl3S0lDQWdJQ0FnSUNBaUNRbGhkSFJ5YVdKMWRHVWdkbVZqTXlCdGIzSndhRTV2Y20xaGJESTdJaXdLSUNBZ0lDQWdJQ0FpQ1FsaGRIUnlhV0oxZEdVZ2RtVmpNeUJ0YjNKd2FFNXZjbTFoYkRNN0lpd0tJQ0FnSUNBZ0lDQWlDU05sYkhObElpd0tJQ0FnSUNBZ0lDQWlDUWxoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUZSaGNtZGxkRFE3SWl3S0lDQWdJQ0FnSUNBaUNRbGhkSFJ5YVdKMWRHVWdkbVZqTXlCdGIzSndhRlJoY21kbGREVTdJaXdLSUNBZ0lDQWdJQ0FpQ1FsaGRIUnlhV0oxZEdVZ2RtVmpNeUJ0YjNKd2FGUmhjbWRsZERZN0lpd0tJQ0FnSUNBZ0lDQWlDUWxoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUZSaGNtZGxkRGM3SWl3S0lDQWdJQ0FnSUNBaUNTTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0lpTnBabVJsWmlCVlUwVmZVMHRKVGs1SlRrY2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6UWdjMnRwYmtsdVpHVjRPeUlzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpOQ0J6YTJsdVYyVnBaMmgwT3lJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ1lBcGdDaUFnSUNCZExtWnBiSFJsY2loMmN5a3VhbTlwYmloZ0NtQXBMQ0J3SUQwZ1d3b2dJQ0FnSUNBZ0lHWXNDaUFnSUNBZ0lDQWdRV2dvZENrc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ1UwaEJSRVZTWDFSWlVFVWdJaUFySUhRdWMyaGhaR1Z5Vkhsd1pTd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQlRTRUZFUlZKZlRrRk5SU0FpSUNzZ2RDNXphR0ZrWlhKT1lXMWxMQW9nSUNBZ0lDQWdJRzBzQ2lBZ0lDQWdJQ0FnZEM1MWMyVkdiMmNnSmlZZ2RDNW1iMmNnUHlBaUkyUmxabWx1WlNCVlUwVmZSazlISWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZFhObFJtOW5JQ1ltSUhRdVptOW5SWGh3TWlBL0lDSWpaR1ZtYVc1bElFWlBSMTlGV0ZBeUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTFoZEdOaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlFWUkRRVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlJVNVdUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wlc1MlRXRndJRDhnSWlOa1pXWnBibVVnSWlBcklHd2dPaUFpSWl3S0lDQWdJQ0FnSUNCMExtVnVkazFoY0NBL0lDSWpaR1ZtYVc1bElDSWdLeUJvSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0FpSUNzZ2RTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUdRZ1B5QWlJMlJsWm1sdVpTQkRWVUpGVlZaZlZFVllSVXhmVjBsRVZFZ2dJaUFySUdRdWRHVjRaV3hYYVdSMGFDQTZJQ0lpTEFvZ0lDQWdJQ0FnSUdRZ1B5QWlJMlJsWm1sdVpTQkRWVUpGVlZaZlZFVllSVXhmU0VWSlIwaFVJQ0lnS3lCa0xuUmxlR1ZzU0dWcFoyaDBJRG9nSWlJc0NpQWdJQ0FnSUNBZ1pDQS9JQ0lqWkdWbWFXNWxJRU5WUWtWVlZsOU5RVmhmVFVsUUlDSWdLeUJrTG0xaGVFMXBjQ0FySUNJdU1DSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHBaMmgwVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDB4SlIwaFVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVc5TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVOU5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVpZFcxd1RXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwSlZUVkJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dWIzSnRZV3hOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3VDJKcVpXTjBVM0JoWTJVZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVGs5U1RVRk1UVUZRWDA5Q1NrVkRWRk5RUVVORklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd1ZHRnVaMlZ1ZEZOd1lXTmxJRDhnSWlOa1pXWnBibVVnVlZORlgwNVBVazFCVEUxQlVGOVVRVTVIUlU1VVUxQkJRMFVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYldsemMybDJaVTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlGVFVsVFUwbFdSVTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1GdWFYTnZkSEp2Y0hrZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUVU1SlUwOVVVazlRV1NJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1GdWFYTnZkSEp2Y0hsTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVNUpVMDlVVWs5UVdVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbU5zWldGeVkyOWhkQ0EvSUNJalpHVm1hVzVsSUZWVFJWOURURVZCVWtOUFFWUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBOTVJVRlNRMDlCVkY5U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtbHlhV1JsYzJObGJtTmxJRDhnSWlOa1pXWnBibVVnVlZORlgwbFNTVVJGVTBORlRrTkZJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVhWEpwWkdWelkyVnVZMlZOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmU1ZKSlJFVlRRMFZPUTBWTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlKVWtsRVJWTkRSVTVEUlY5VVNFbERTMDVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXpjR1ZqZFd4aGNrMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRVRVZEVlV4QlVrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKZlEwOU1UMUpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFVFVkRWVXhCVWw5SlRsUkZUbE5KVkZsTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXliM1ZuYUc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVazlWUjBoT1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldWMFlXeHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDAxRlZFRk1Ua1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtRnNjR2hoVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBGTVVFaEJUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVd4d2FHRlVaWE4wSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMEZNVUVoQlZFVlRWQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbUZzY0doaFNHRnphQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUJURkJJUVVoQlUwZ2lJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXphR1ZsYmlBL0lDSWpaR1ZtYVc1bElGVlRSVjlUU0VWRlRpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTm9aV1Z1UTI5c2IzSk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhGUlU1ZlEwOU1UMUpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUU0VWRlRsOVNUMVZIU0U1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI0Z1B5QWlJMlJsWm1sdVpTQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRISmhibk50YVhOemFXOXVUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUm9hV05yYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVVTRWxEUzA1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaFVZVzVuWlc1MGN5QW1KaUIwTG1ac1lYUlRhR0ZrYVc1bklEMDlQU0FoTVNBL0lDSWpaR1ZtYVc1bElGVlRSVjlVUVU1SFJVNVVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFEyOXNiM0p6SUh4OElIUXVhVzV6ZEdGdVkybHVaME52Ykc5eUlEOGdJaU5rWldacGJtVWdWVk5GWDBOUFRFOVNJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFFXeHdhR0Z6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZG1WeWRHVjRWWFl4Y3lBL0lDSWpaR1ZtYVc1bElGVlRSVjlWVmpFaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhWZGpKeklEOGdJaU5rWldacGJtVWdWVk5GWDFWV01pSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZWMk0zTWdQeUFpSTJSbFptbHVaU0JWVTBWZlZWWXpJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjRzlwYm5SelZYWnpJRDhnSWlOa1pXWnBibVVnVlZORlgxQlBTVTVVVTE5VlZpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtZHlZV1JwWlc1MFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwZFNRVVJKUlU1VVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhoZEZOb1lXUnBibWNnUHlBaUkyUmxabWx1WlNCR1RFRlVYMU5JUVVSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtUnZkV0pzWlZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUkU5VlFreEZYMU5KUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteHBjRk5wWkdWa0lEOGdJaU5rWldacGJtVWdSa3hKVUY5VFNVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEJSRTlYVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBL0lDSWpaR1ZtYVc1bElDSWdLeUJqSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnUHlBaUkyUmxabWx1WlNCUVVrVk5WVXhVU1ZCTVNVVkVYMEZNVUVoQklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJuVnRUR2xuYUhSUWNtOWlaWE1nUGlBd0lEOGdJaU5rWldacGJtVWdWVk5GWDB4SlIwaFVYMUJTVDBKRlV5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuVnpaVXhsWjJGamVVeHBaMmgwY3lBL0lDSWpaR1ZtYVc1bElFeEZSMEZEV1Y5TVNVZElWRk1pSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVrWldOdlpHVldhV1JsYjFSbGVIUjFjbVVnUHlBaUkyUmxabWx1WlNCRVJVTlBSRVZmVmtsRVJVOWZWRVZZVkZWU1JTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnUHlBaUkyUmxabWx1WlNCVlUwVmZURTlIUkVWUVZFaENWVVlpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVzYjJkaGNtbDBhRzFwWTBSbGNIUm9RblZtWm1WeUlDWW1JSFF1Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVHY21GblJHVndkR2dnUHlBaUkyUmxabWx1WlNCVlUwVmZURTlIUkVWUVZFaENWVVpmUlZoVUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGREUWdkbWxsZDAxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUhabFl6TWdZMkZ0WlhKaFVHOXphWFJwYjI0N0lpd0tJQ0FnSUNBZ0lDQWlkVzVwWm05eWJTQmliMjlzSUdselQzSjBhRzluY21Gd2FHbGpPeUlzQ2lBZ0lDQWdJQ0FnZEM1MGIyNWxUV0Z3Y0dsdVp5QWhQVDBnVG00Z1B5QWlJMlJsWm1sdVpTQlVUMDVGWDAxQlVGQkpUa2NpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwYjI1bFRXRndjR2x1WnlBaFBUMGdUbTRnUHlCclpTNTBiMjVsYldGd2NHbHVaMTl3WVhKelgyWnlZV2R0Wlc1MElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MGIyNWxUV0Z3Y0dsdVp5QWhQVDBnVG00Z1B5QnNNQ2dpZEc5dVpVMWhjSEJwYm1jaUxDQjBMblJ2Ym1WTllYQndhVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WkdsMGFHVnlhVzVuSUQ4Z0lpTmtaV1pwYm1VZ1JFbFVTRVZTU1U1SElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWIzQmhjWFZsSUQ4Z0lpTmtaV1pwYm1VZ1QxQkJVVlZGSWlBNklDSWlMQW9nSUNBZ0lDQWdJR3RsTG1OdmJHOXljM0JoWTJWZmNHRnljMTltY21GbmJXVnVkQ3dLSUNBZ0lDQWdJQ0JqTUNnaWJHbHVaV0Z5Vkc5UGRYUndkWFJVWlhobGJDSXNJSFF1YjNWMGNIVjBRMjlzYjNKVGNHRmpaU2tzQ2lBZ0lDQWdJQ0FnZEM1MWMyVkVaWEIwYUZCaFkydHBibWNnUHlBaUkyUmxabWx1WlNCRVJWQlVTRjlRUVVOTFNVNUhJQ0lnS3lCMExtUmxjSFJvVUdGamEybHVaeUE2SUNJaUxBb2dJQ0FnSUNBZ0lHQUtZQW9nSUNBZ1hTNW1hV3gwWlhJb2RuTXBMbXB2YVc0b1lBcGdLU2tzSUdFZ1BTQlRieWhoS1N3Z1lTQTlJRVZvS0dFc0lIUXBMQ0JoSUQwZ1ZHZ29ZU3dnZENrc0lHOGdQU0JUYnlodktTd2dieUE5SUVWb0tHOHNJSFFwTENCdklEMGdWR2dvYnl3Z2RDa3NJR0VnUFNCM2FDaGhLU3dnYnlBOUlIZG9LRzhwTENCMExtbHpWMlZpUjB3eUlDWW1JSFF1YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNBaFBUMGdJVEFnSmlZZ0tIWWdQU0JnSTNabGNuTnBiMjRnTXpBd0lHVnpDbUFzSUdjZ1BTQmJDaUFnSUNBZ0lDQWdJbkJ5WldOcGMybHZiaUJ0WldScGRXMXdJSE5oYlhCc1pYSXlSRUZ5Y21GNU95SXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdZWFIwY21saWRYUmxJR2x1SWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMllYSjVhVzVuSUc5MWRDSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdkR1Y0ZEhWeVpUSkVJSFJsZUhSMWNtVWlDaUFnSUNCZExtcHZhVzRvWUFwZ0tTQXJJR0FLWUNBcklHY3NJSEFnUFNCYkNpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RtRnllV2x1WnlCcGJpSXNDaUFnSUNBZ0lDQWdkQzVuYkhOc1ZtVnljMmx2YmlBOVBUMGdUMndnUHlBaUlpQTZJQ0pzWVhsdmRYUW9iRzlqWVhScGIyNGdQU0F3S1NCdmRYUWdhR2xuYUhBZ2RtVmpOQ0J3WTE5bWNtRm5RMjlzYjNJN0lpd0tJQ0FnSUNBZ0lDQjBMbWRzYzJ4V1pYSnphVzl1SUQwOVBTQlBiQ0EvSUNJaUlEb2dJaU5rWldacGJtVWdaMnhmUm5KaFowTnZiRzl5SUhCalgyWnlZV2REYjJ4dmNpSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdaMnhmUm5KaFowUmxjSFJvUlZoVUlHZHNYMFp5WVdkRVpYQjBhQ0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVEpFSUhSbGVIUjFjbVVpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVZEZFdKbElIUmxlSFIxY21VaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJGQnliMm9nZEdWNGRIVnlaVkJ5YjJvaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJFeHZaRVZZVkNCMFpYaDBkWEpsVEc5a0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUlFjbTlxVEc5a1JWaFVJSFJsZUhSMWNtVlFjbTlxVEc5a0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbFEzVmlaVXh2WkVWWVZDQjBaWGgwZFhKbFRHOWtJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxNa1JIY21Ga1JWaFVJSFJsZUhSMWNtVkhjbUZrSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsTWtSUWNtOXFSM0poWkVWWVZDQjBaWGgwZFhKbFVISnZha2R5WVdRaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21WRGRXSmxSM0poWkVWWVZDQjBaWGgwZFhKbFIzSmhaQ0lLSUNBZ0lGMHVhbTlwYmloZ0NtQXBJQ3NnWUFwZ0lDc2djQ2s3Q2lBZ0lDQnNaWFFnZUNBOUlIWWdLeUJuSUNzZ1lTd2dlU0E5SUhZZ0t5QndJQ3NnYnl3Z1lpQTlJRk5vS0drc0lHa3VWa1ZTVkVWWVgxTklRVVJGVWl3Z2VDa3NJSGNnUFNCVGFDaHBMQ0JwTGtaU1FVZE5SVTVVWDFOSVFVUkZVaXdnZVNrN0NpQWdJQ0JwWmlBb2FTNWhkSFJoWTJoVGFHRmtaWElvWHl3Z1lpa3NJR2t1WVhSMFlXTm9VMmhoWkdWeUtGOHNJSGNwTENCMExtbHVaR1Y0TUVGMGRISnBZblYwWlU1aGJXVWdJVDA5SUhadmFXUWdNQ0EvSUdrdVltbHVaRUYwZEhKcFlreHZZMkYwYVc5dUtGOHNJREFzSUhRdWFXNWtaWGd3UVhSMGNtbGlkWFJsVG1GdFpTa2dPaUIwTG0xdmNuQm9WR0Z5WjJWMGN5QTlQVDBnSVRBZ0ppWWdhUzVpYVc1a1FYUjBjbWxpVEc5allYUnBiMjRvWHl3Z01Dd2dJbkJ2YzJsMGFXOXVJaWtzSUdrdWJHbHVhMUJ5YjJkeVlXMG9YeWtzSUhNeExtUmxZblZuTG1Ob1pXTnJVMmhoWkdWeVJYSnliM0p6S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRTBnUFNCcExtZGxkRkJ5YjJkeVlXMUpibVp2VEc5bktGOHBMblJ5YVcwb0tTd2dWQ0E5SUdrdVoyVjBVMmhoWkdWeVNXNW1iMHh2WnloaUtTNTBjbWx0S0Nrc0lFOGdQU0JwTG1kbGRGTm9ZV1JsY2tsdVptOU1iMmNvZHlrdWRISnBiU2dwTENCWklEMGdJVEFzSUNRZ1BTQWhNRHNLSUNBZ0lDQWdJQ0JwWmlBb2FTNW5aWFJRY205bmNtRnRVR0Z5WVcxbGRHVnlLRjhzSUdrdVRFbE9TMTlUVkVGVVZWTXBJRDA5UFNBaE1Ta2dhV1lnS0ZrZ1BTQWhNU3dnZEhsd1pXOW1JSE14TG1SbFluVm5MbTl1VTJoaFpHVnlSWEp5YjNJZ1BUMGdJbVoxYm1OMGFXOXVJaWtnY3pFdVpHVmlkV2N1YjI1VGFHRmtaWEpGY25KdmNpaHBMQ0JmTENCaUxDQjNLVHNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGVWdQU0JpYUNocExDQmlMQ0FpZG1WeWRHVjRJaWtzSUhvZ1BTQmlhQ2hwTENCM0xDQWlabkpoWjIxbGJuUWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0T2lCVGFHRmtaWElnUlhKeWIzSWdJaUFySUdrdVoyVjBSWEp5YjNJb0tTQXJJQ0lnTFNCV1FVeEpSRUZVUlY5VFZFRlVWVk1nSWlBcklHa3VaMlYwVUhKdlozSmhiVkJoY21GdFpYUmxjaWhmTENCcExsWkJURWxFUVZSRlgxTlVRVlJWVXlrZ0t5QmdDZ3BRY205bmNtRnRJRWx1Wm04Z1RHOW5PaUJnSUNzZ1RTQXJJR0FLWUNBcklGVWdLeUJnQ21BZ0t5QjZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWld4elpTQk5JQ0U5UFNBaUlpQS9JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFFjbTluY21GdE9pQlFjbTluY21GdElFbHVabThnVEc5bk9pSXNJRTBwSURvZ0tGUWdQVDA5SUNJaUlIeDhJRThnUFQwOUlDSWlLU0FtSmlBb0pDQTlJQ0V4S1RzS0lDQWdJQ0FnSUNBa0lDWW1JQ2gwYUdsekxtUnBZV2R1YjNOMGFXTnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlkVzV1WVdKc1pUb2dXU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZaM0poYlV4dlp6b2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJjNklGUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbVZtYVhnNklHY0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHZaem9nVHl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeVpXWnBlRG9nY0FvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCcExtUmxiR1YwWlZOb1lXUmxjaWhpS1N3Z2FTNWtaV3hsZEdWVGFHRmtaWElvZHlrN0NpQWdJQ0JzWlhRZ1Vqc0tJQ0FnSUhSb2FYTXVaMlYwVlc1cFptOXliWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VpQTlQVDBnZG05cFpDQXdJQ1ltSUNoU0lEMGdibVYzSUhGcEtHa3NJRjhwS1N3Z1Vqc0tJQ0FnSUgwN0NpQWdJQ0JzWlhRZ1NUc0tJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRUYwZEhKcFluVjBaWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1NTQTlQVDBnZG05cFpDQXdJQ1ltSUNoSklEMGdaREFvYVN3Z1h5a3BMQ0JKT3dvZ0lDQWdmU3dnZEdocGN5NWtaWE4wY205NUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnYmk1eVpXeGxZWE5sVTNSaGRHVnpUMlpRY205bmNtRnRLSFJvYVhNcExDQnBMbVJsYkdWMFpWQnliMmR5WVcwb1h5a3NJSFJvYVhNdWNISnZaM0poYlNBOUlIWnZhV1FnTURzS0lDQWdJSDBzSUhSb2FYTXVkSGx3WlNBOUlIUXVjMmhoWkdWeVZIbHdaU3dnZEdocGN5NXVZVzFsSUQwZ2RDNXphR0ZrWlhKT1lXMWxMQ0IwYUdsekxtbGtJRDBnY2pBckt5d2dkR2hwY3k1allXTm9aVXRsZVNBOUlHVXNJSFJvYVhNdWRYTmxaRlJwYldWeklEMGdNU3dnZEdocGN5NXdjbTluY21GdElEMGdYeXdnZEdocGN5NTJaWEowWlhoVGFHRmtaWElnUFNCaUxDQjBhR2x6TG1aeVlXZHRaVzUwVTJoaFpHVnlJRDBnZHl3Z2RHaHBjenNLZlFwMllYSWdSVEFnUFNBd0xDQmlieUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphR0ZrWlhKRFlXTm9aU0E5SUc1bGR5Qk5ZWEFzSUhSb2FYTXViV0YwWlhKcFlXeERZV05vWlNBOUlHNWxkeUJOWVhBN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzUyWlhKMFpYaFRhR0ZrWlhJc0lHNGdQU0JsTG1aeVlXZHRaVzUwVTJoaFpHVnlMQ0JwSUQwZ2RHaHBjeTVmWjJWMFUyaGhaR1Z5VTNSaFoyVW9kQ2tzSUhJZ1BTQjBhR2x6TGw5blpYUlRhR0ZrWlhKVGRHRm5aU2h1S1N3Z1lTQTlJSFJvYVhNdVgyZGxkRk5vWVdSbGNrTmhZMmhsUm05eVRXRjBaWEpwWVd3b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRXVhR0Z6S0drcElEMDlQU0FoTVNBbUppQW9ZUzVoWkdRb2FTa3NJR2t1ZFhObFpGUnBiV1Z6S3lzcExDQmhMbWhoY3loeUtTQTlQVDBnSVRFZ0ppWWdLR0V1WVdSa0tISXBMQ0J5TG5WelpXUlVhVzFsY3lzcktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmxiVzkyWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVXVaMlYwS0dVcE93b2dJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHNGdiMllnZENsdUxuVnpaV1JVYVcxbGN5MHRMQ0J1TG5WelpXUlVhVzFsY3lBOVBUMGdNQ0FtSmlCMGFHbHpMbk5vWVdSbGNrTmhZMmhsTG1SbGJHVjBaU2h1TG1OdlpHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVXVaR1ZzWlhSbEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwVm1WeWRHVjRVMmhoWkdWeVNVUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOW5aWFJUYUdGa1pYSlRkR0ZuWlNobExuWmxjblJsZUZOb1lXUmxjaWt1YVdRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHY21GbmJXVnVkRk5vWVdSbGNrbEVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZaMlYwVTJoaFpHVnlVM1JoWjJVb1pTNW1jbUZuYldWdWRGTm9ZV1JsY2lrdWFXUTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjMmhoWkdWeVEyRmphR1V1WTJ4bFlYSW9LU3dnZEdocGN5NXRZWFJsY21saGJFTmhZMmhsTG1Oc1pXRnlLQ2s3Q2lBZ0lDQjlDaUFnSUNCZloyVjBVMmhoWkdWeVEyRmphR1ZHYjNKTllYUmxjbWxoYkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVXNJRzRnUFNCMExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1SUQwZ2JtVjNJRk5sZEN3Z2RDNXpaWFFvWlN3Z2Jpa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRk5vWVdSbGNsTjBZV2RsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YzJoaFpHVnlRMkZqYUdVc0lHNGdQU0IwTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVJRDBnYm1WM0lFVnZLR1VwTENCMExuTmxkQ2hsTENCdUtTa3NJRzQ3Q2lBZ0lDQjlDbjBzSUVWdklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1cFpDQTlJRVV3S3lzc0lIUm9hWE11WTI5a1pTQTlJR1VzSUhSb2FYTXVkWE5sWkZScGJXVnpJRDBnTURzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1ZEQW9jekVzSUdVc0lIUXNJRzRzSUdrc0lISXNJR0VwSUhzS0lDQWdJR3hsZENCdklEMGdibVYzSUZKekxDQmpJRDBnYm1WM0lHSnZMQ0JzSUQwZ1cxMHNJR2dnUFNCcExtbHpWMlZpUjB3eUxDQjFJRDBnYVM1c2IyZGhjbWwwYUcxcFkwUmxjSFJvUW5WbVptVnlMQ0JrSUQwZ2FTNTJaWEowWlhoVVpYaDBkWEpsY3l3Z1ppQTlJR2t1Y0hKbFkybHphVzl1TENCdElEMGdld29nSUNBZ0lDQWdJRTFsYzJoRVpYQjBhRTFoZEdWeWFXRnNPaUFpWkdWd2RHZ2lMQW9nSUNBZ0lDQWdJRTFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzT2lBaVpHbHpkR0Z1WTJWU1IwSkJJaXdLSUNBZ0lDQWdJQ0JOWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3c2SUNKdWIzSnRZV3dpTEFvZ0lDQWdJQ0FnSUUxbGMyaENZWE5wWTAxaGRHVnlhV0ZzT2lBaVltRnphV01pTEFvZ0lDQWdJQ0FnSUUxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3NklDSnNZVzFpWlhKMElpd0tJQ0FnSUNBZ0lDQk5aWE5vVUdodmJtZE5ZWFJsY21saGJEb2dJbkJvYjI1bklpd0tJQ0FnSUNBZ0lDQk5aWE5vVkc5dmJrMWhkR1Z5YVdGc09pQWlkRzl2YmlJc0NpQWdJQ0FnSUNBZ1RXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXdzZJQ0p3YUhsemFXTmhiQ0lzQ2lBZ0lDQWdJQ0FnVFdWemFGQm9lWE5wWTJGc1RXRjBaWEpwWVd3NklDSndhSGx6YVdOaGJDSXNDaUFnSUNBZ0lDQWdUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNPaUFpYldGMFkyRndJaXdLSUNBZ0lDQWdJQ0JNYVc1bFFtRnphV05OWVhSbGNtbGhiRG9nSW1KaGMybGpJaXdLSUNBZ0lDQWdJQ0JNYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3c2SUNKa1lYTm9aV1FpTEFvZ0lDQWdJQ0FnSUZCdmFXNTBjMDFoZEdWeWFXRnNPaUFpY0c5cGJuUnpJaXdLSUNBZ0lDQWdJQ0JUYUdGa2IzZE5ZWFJsY21saGJEb2dJbk5vWVdSdmR5SXNDaUFnSUNBZ0lDQWdVM0J5YVhSbFRXRjBaWEpwWVd3NklDSnpjSEpwZEdVaUNpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdYeWhOS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUwZ1BUMDlJREFnUHlBaWRYWWlJRG9nWUhWMkpIdE5mV0E3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCbktFMHNJRlFzSUU4c0lGa3NJQ1FwSUhzS0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUZrdVptOW5MQ0I2SUQwZ0pDNW5aVzl0WlhSeWVTd2djU0E5SUUwdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUZrdVpXNTJhWEp2Ym0xbGJuUWdPaUJ1ZFd4c0xDQklJRDBnS0UwdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUhRZ09pQmxLUzVuWlhRb1RTNWxiblpOWVhBZ2ZId2djU2tzSUc1bElEMGdTQ0FtSmlCSUxtMWhjSEJwYm1jZ1BUMDlJRlp6SUQ4Z1NDNXBiV0ZuWlM1b1pXbG5hSFFnT2lCdWRXeHNMQ0JYSUQwZ2JWdE5MblI1Y0dWZE93b2dJQ0FnSUNBZ0lFMHVjSEpsWTJsemFXOXVJQ0U5UFNCdWRXeHNJQ1ltSUNobUlEMGdhUzVuWlhSTllYaFFjbVZqYVhOcGIyNG9UUzV3Y21WamFYTnBiMjRwTENCbUlDRTlQU0JOTG5CeVpXTnBjMmx2YmlBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlM1blpYUlFZWEpoYldWMFpYSnpPaUlzSUUwdWNISmxZMmx6YVc5dUxDQWlibTkwSUhOMWNIQnZjblJsWkN3Z2RYTnBibWNpTENCbUxDQWlhVzV6ZEdWaFpDNGlLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElFc2dQU0I2TG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaUI4ZkNCNkxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dnZkh3Z2VpNXRiM0p3YUVGMGRISnBZblYwWlhNdVkyOXNiM0lzSUVRZ1BTQkxJQ0U5UFNCMmIybGtJREFnUHlCTExteGxibWQwYUNBNklEQXNJRWNnUFNBd093b2dJQ0FnSUNBZ0lIb3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0VjZ1BTQXhLU3dnZWk1dGIzSndhRUYwZEhKcFluVjBaWE11Ym05eWJXRnNJQ0U5UFNCMmIybGtJREFnSmlZZ0tFY2dQU0F5S1N3Z2VpNXRiM0p3YUVGMGRISnBZblYwWlhNdVkyOXNiM0lnSVQwOUlIWnZhV1FnTUNBbUppQW9SeUE5SURNcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvWlN3Z1ptVXNJRjlsTENCM1pUc0tJQ0FnSUNBZ0lDQnBaaUFvVnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RIUWdQU0J1Ymx0WFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUdVZ1BTQjBkQzUyWlhKMFpYaFRhR0ZrWlhJc0lHWmxJRDBnZEhRdVpuSmhaMjFsYm5SVGFHRmtaWEk3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2hsSUQwZ1RTNTJaWEowWlhoVGFHRmtaWElzSUdabElEMGdUUzVtY21GbmJXVnVkRk5vWVdSbGNpd2dZeTUxY0dSaGRHVW9UU2tzSUY5bElEMGdZeTVuWlhSV1pYSjBaWGhUYUdGa1pYSkpSQ2hOS1N3Z2QyVWdQU0JqTG1kbGRFWnlZV2R0Wlc1MFUyaGhaR1Z5U1VRb1RTazdDaUFnSUNBZ0lDQWdiR1YwSUVWbElEMGdjekV1WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2tzSUZSbElEMGdKQzVwYzBsdWMzUmhibU5sWkUxbGMyZ2dQVDA5SUNFd0xDQlpaU0E5SUNFaFRTNXRZWEFzSUdsMElEMGdJU0ZOTG0xaGRHTmhjQ3dnUTJVZ1BTQWhJVWdzSUV3Z1BTQWhJVTB1WVc5TllYQXNJRzlsSUQwZ0lTRk5MbXhwWjJoMFRXRndMQ0JZSUQwZ0lTRk5MbUoxYlhCTllYQXNJR2xsSUQwZ0lTRk5MbTV2Y20xaGJFMWhjQ3dnU2lBOUlDRWhUUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJRk5sSUQwZ0lTRk5MbVZ0YVhOemFYWmxUV0Z3TENCdFpTQTlJQ0VoVFM1dFpYUmhiRzVsYzNOTllYQXNJSGxsSUQwZ0lTRk5Mbkp2ZFdkb2JtVnpjMDFoY0N3Z1RtVWdQU0JOTG1GdWFYTnZkSEp2Y0hrZ1BpQXdMQ0J4WlNBOUlFMHVZMnhsWVhKamIyRjBJRDRnTUN3Z2NuUWdQU0JOTG1seWFXUmxjMk5sYm1ObElENGdNQ3dnUXlBOUlFMHVjMmhsWlc0Z1BpQXdMQ0JUSUQwZ1RTNTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0xDQkNJRDBnVG1VZ0ppWWdJU0ZOTG1GdWFYTnZkSEp2Y0hsTllYQXNJR1ZsSUQwZ2NXVWdKaVlnSVNGTkxtTnNaV0Z5WTI5aGRFMWhjQ3dnYWlBOUlIRmxJQ1ltSUNFaFRTNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQXNJSFJsSUQwZ2NXVWdKaVlnSVNGTkxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ3dnVFdVZ1BTQnlkQ0FtSmlBaElVMHVhWEpwWkdWelkyVnVZMlZOWVhBc0lISmxJRDBnY25RZ0ppWWdJU0ZOTG1seWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelRXRndMQ0JrWlNBOUlFTWdKaVlnSVNGTkxuTm9aV1Z1UTI5c2IzSk5ZWEFzSUV4bElEMGdReUFtSmlBaElVMHVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNJRnBsSUQwZ0lTRk5Mbk53WldOMWJHRnlUV0Z3TENCelpTQTlJQ0VoVFM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TENBa1pTQTlJQ0VoVFM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDd2dUMlVnUFNCVElDWW1JQ0VoVFM1MGNtRnVjMjFwYzNOcGIyNU5ZWEFzSUVsbElEMGdVeUFtSmlBaElVMHVkR2hwWTJ0dVpYTnpUV0Z3TENCU1pTQTlJQ0VoVFM1bmNtRmthV1Z1ZEUxaGNDd2dVQ0E5SUNFaFRTNWhiSEJvWVUxaGNDd2dZMlVnUFNCTkxtRnNjR2hoVkdWemRDQStJREFzSUdGbElEMGdJU0ZOTG1Gc2NHaGhTR0Z6YUN3Z1oyVWdQU0FoSVUwdVpYaDBaVzV6YVc5dWN5d2dkV1VnUFNBaElYb3VZWFIwY21saWRYUmxjeTUxZGpFc0lGRWdQU0FoSVhvdVlYUjBjbWxpZFhSbGN5NTFkaklzSUdKbElEMGdJU0Y2TG1GMGRISnBZblYwWlhNdWRYWXpMQ0JHWlNBOUlFNXVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5MblJ2Ym1WTllYQndaV1FnSmlZZ0tFVmxJRDA5UFNCdWRXeHNJSHg4SUVWbExtbHpXRkpTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJQ0V3S1NBbUppQW9SbVVnUFNCek1TNTBiMjVsVFdGd2NHbHVaeWtzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhWE5YWldKSFRESTZJR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1JsY2tsRU9pQlhMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHRmtaWEpVZVhCbE9pQk5MblI1Y0dVc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSbGNrNWhiV1U2SUUwdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJvWlN3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHWmxMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pXWnBibVZ6T2lCTkxtUmxabWx1WlhNc0NpQWdJQ0FnSUNBZ0lDQWdJR04xYzNSdmJWWmxjblJsZUZOb1lXUmxja2xFT2lCZlpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTNWemRHOXRSbkpoWjIxbGJuUlRhR0ZrWlhKSlJEb2dkMlVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHpVbUYzVTJoaFpHVnlUV0YwWlhKcFlXdzZJRTB1YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNBOVBUMGdJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHZHNjMnhXWlhKemFXOXVPaUJOTG1kc2MyeFdaWEp6YVc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y21WamFYTnBiMjQ2SUdZc0NpQWdJQ0FnSUNBZ0lDQWdJR2x1YzNSaGJtTnBibWM2SUZSbExBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm5OMFlXNWphVzVuUTI5c2IzSTZJRlJsSUNZbUlDUXVhVzV6ZEdGdVkyVkRiMnh2Y2lBaFBUMGdiblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjM1Z3Y0c5eWRITldaWEowWlhoVVpYaDBkWEpsY3pvZ1pDd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNWMGNIVjBRMjlzYjNKVGNHRmpaVG9nUldVZ1BUMDlJRzUxYkd3Z1B5QnpNUzV2ZFhSd2RYUkRiMnh2Y2xOd1lXTmxJRG9nUldVdWFYTllVbEpsYm1SbGNsUmhjbWRsZENBOVBUMGdJVEFnUHlCRlpTNTBaWGgwZFhKbExtTnZiRzl5VTNCaFkyVWdPaUJOYml3S0lDQWdJQ0FnSUNBZ0lDQWdiV0Z3T2lCWlpTd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFkyRndPaUJwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd09pQkRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNTJUV0Z3VFc5a1pUb2dRMlVnSmlZZ1NDNXRZWEJ3YVc1bkxBb2dJQ0FnSUNBZ0lDQWdJQ0JsYm5aTllYQkRkV0psVlZaSVpXbG5hSFE2SUc1bExBb2dJQ0FnSUNBZ0lDQWdJQ0JoYjAxaGNEb2dUQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHbG5hSFJOWVhBNklHOWxMQW9nSUNBZ0lDQWdJQ0FnSUNCaWRXMXdUV0Z3T2lCWUxBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeE5ZWEE2SUdsbExBb2dJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRmpaVzFsYm5STllYQTZJR1FnSmlZZ1Npd0tJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVZOWVhBNklGTmxMQW9nSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hOWVhCUFltcGxZM1JUY0dGalpUb2dhV1VnSmlZZ1RTNXViM0p0WVd4TllYQlVlWEJsSUQwOVBTQk1aaXdLSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzVFdGd1ZHRnVaMlZ1ZEZOd1lXTmxPaUJwWlNBbUppQk5MbTV2Y20xaGJFMWhjRlI1Y0dVZ1BUMDlJRzFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoYkc1bGMzTk5ZWEE2SUcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0J5YjNWbmFHNWxjM05OWVhBNklIbGxMQW9nSUNBZ0lDQWdJQ0FnSUNCaGJtbHpiM1J5YjNCNU9pQk9aU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXNXBjMjkwY205d2VVMWhjRG9nUWl3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBPaUJ4WlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBUV0Z3T2lCbFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3T2lCcUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBNklIUmxMQW9nSUNBZ0lDQWdJQ0FnSUNCcGNtbGtaWE5qWlc1alpUb2djblFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHlhV1JsYzJObGJtTmxUV0Z3T2lCTlpTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQTZJSEpsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmpvZ1F5d0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNURiMnh2Y2sxaGNEb2daR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9aV1Z1VW05MVoyaHVaWE56VFdGd09pQk1aU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKTllYQTZJRnBsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd09pQnpaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQTZJQ1JsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBiMjQ2SUZNc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmx2YmsxaGNEb2dUMlVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hV05yYm1WemMwMWhjRG9nU1dVc0NpQWdJQ0FnSUNBZ0lDQWdJR2R5WVdScFpXNTBUV0Z3T2lCU1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNCaGNYVmxPaUJOTG5SeVlXNXpjR0Z5Wlc1MElEMDlQU0FoTVNBbUppQk5MbUpzWlc1a2FXNW5JRDA5UFNCWGFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVd4d2FHRk5ZWEE2SUZBc0NpQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaFZHVnpkRG9nWTJVc0NpQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaFNHRnphRG9nWVdVc0NpQWdJQ0FnSUNBZ0lDQWdJR052YldKcGJtVTZJRTB1WTI5dFltbHVaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXRndWWFk2SUZsbElDWW1JRjhvVFM1dFlYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdGdlRXRndWWFk2SUV3Z0ppWWdYeWhOTG1GdlRXRndMbU5vWVc1dVpXd3BMQW9nSUNBZ0lDQWdJQ0FnSUNCc2FXZG9kRTFoY0ZWMk9pQnZaU0FtSmlCZktFMHViR2xuYUhSTllYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdKMWJYQk5ZWEJWZGpvZ1dDQW1KaUJmS0UwdVluVnRjRTFoY0M1amFHRnVibVZzS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc1RXRndWWFk2SUdsbElDWW1JRjhvVFM1dWIzSnRZV3hOWVhBdVkyaGhibTVsYkNrc0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lXTmxiV1Z1ZEUxaGNGVjJPaUJLSUNZbUlGOG9UUzVrYVhOd2JHRmpaVzFsYm5STllYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdWdGFYTnphWFpsVFdGd1ZYWTZJRk5sSUNZbUlGOG9UUzVsYldsemMybDJaVTFoY0M1amFHRnVibVZzS1N3S0lDQWdJQ0FnSUNBZ0lDQWdiV1YwWVd4dVpYTnpUV0Z3VlhZNklHMWxJQ1ltSUY4b1RTNXRaWFJoYkc1bGMzTk5ZWEF1WTJoaGJtNWxiQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lISnZkV2RvYm1WemMwMWhjRlYyT2lCNVpTQW1KaUJmS0UwdWNtOTFaMmh1WlhOelRXRndMbU5vWVc1dVpXd3BMQW9nSUNBZ0lDQWdJQ0FnSUNCaGJtbHpiM1J5YjNCNVRXRndWWFk2SUVJZ0ppWWdYeWhOTG1GdWFYTnZkSEp2Y0hsTllYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEUxaGNGVjJPaUJsWlNBbUppQmZLRTB1WTJ4bFlYSmpiMkYwVFdGd0xtTm9ZVzV1Wld3cExBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEJWZGpvZ2FpQW1KaUJmS0UwdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0xtTm9ZVzV1Wld3cExBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhCVmRqb2dkR1VnSmlZZ1h5aE5MbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0M1amFHRnVibVZzS1N3S0lDQWdJQ0FnSUNBZ0lDQWdhWEpwWkdWelkyVnVZMlZOWVhCVmRqb2dUV1VnSmlZZ1h5aE5MbWx5YVdSbGMyTmxibU5sVFdGd0xtTm9ZVzV1Wld3cExBb2dJQ0FnSUNBZ0lDQWdJQ0JwY21sa1pYTmpaVzVqWlZSb2FXTnJibVZ6YzAxaGNGVjJPaUJ5WlNBbUppQmZLRTB1YVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVRMjlzYjNKTllYQlZkam9nWkdVZ0ppWWdYeWhOTG5Ob1pXVnVRMjlzYjNKTllYQXVZMmhoYm01bGJDa3NDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVVbTkxWjJodVpYTnpUV0Z3VlhZNklFeGxJQ1ltSUY4b1RTNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDNWphR0Z1Ym1Wc0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpOWVhCVmRqb2dXbVVnSmlZZ1h5aE5Mbk53WldOMWJHRnlUV0Z3TG1Ob1lXNXVaV3dwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd1ZYWTZJSE5sSUNZbUlGOG9UUzV6Y0dWamRXeGhja052Ykc5eVRXRndMbU5vWVc1dVpXd3BMQW9nSUNBZ0lDQWdJQ0FnSUNCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNGVjJPaUFrWlNBbUppQmZLRTB1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBdVkyaGhibTVsYkNrc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmx2YmsxaGNGVjJPaUJQWlNBbUppQmZLRTB1ZEhKaGJuTnRhWE56YVc5dVRXRndMbU5vWVc1dVpXd3BMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbGphMjVsYzNOTllYQlZkam9nU1dVZ0ppWWdYeWhOTG5Sb2FXTnJibVZ6YzAxaGNDNWphR0Z1Ym1Wc0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVd4d2FHRk5ZWEJWZGpvZ1VDQW1KaUJmS0UwdVlXeHdhR0ZOWVhBdVkyaGhibTVsYkNrc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGUmhibWRsYm5Sek9pQWhJWG91WVhSMGNtbGlkWFJsY3k1MFlXNW5aVzUwSUNZbUlDaHBaU0I4ZkNCT1pTa3NDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRU52Ykc5eWN6b2dUUzUyWlhKMFpYaERiMnh2Y25Nc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVFRnNjR2hoY3pvZ1RTNTJaWEowWlhoRGIyeHZjbk1nUFQwOUlDRXdJQ1ltSUNFaGVpNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUlDWW1JSG91WVhSMGNtbGlkWFJsY3k1amIyeHZjaTVwZEdWdFUybDZaU0E5UFQwZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRWWFl4Y3pvZ2RXVXNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRlYyTW5NNklGRXNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRlYyTTNNNklHSmxMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IybHVkSE5WZG5NNklDUXVhWE5RYjJsdWRITWdQVDA5SUNFd0lDWW1JQ0VoZWk1aGRIUnlhV0oxZEdWekxuVjJJQ1ltSUNoWlpTQjhmQ0JRS1N3S0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaElWVXNDaUFnSUNBZ0lDQWdJQ0FnSUhWelpVWnZaem9nVFM1bWIyY2dQVDA5SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjJkRmVIQXlPaUJWSUNZbUlGVXVhWE5HYjJkRmVIQXlMQW9nSUNBZ0lDQWdJQ0FnSUNCbWJHRjBVMmhoWkdsdVp6b2dUUzVtYkdGMFUyaGhaR2x1WnlBOVBUMGdJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnBlbVZCZEhSbGJuVmhkR2x2YmpvZ1RTNXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BUMDlJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5T2lCMUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YTJsdWJtbHVaem9nSkM1cGMxTnJhVzV1WldSTlpYTm9JRDA5UFNBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5eWNHaFVZWEpuWlhSek9pQjZMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpQWhQVDBnZG05cFpDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCdGIzSndhRTV2Y20xaGJITTZJSG91Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDQWhQVDBnZG05cFpDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCdGIzSndhRU52Ykc5eWN6b2dlaTV0YjNKd2FFRjBkSEpwWW5WMFpYTXVZMjlzYjNJZ0lUMDlJSFp2YVdRZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5eWNHaFVZWEpuWlhSelEyOTFiblE2SUVRc0NpQWdJQ0FnSUNBZ0lDQWdJRzF2Y25Cb1ZHVjRkSFZ5WlZOMGNtbGtaVG9nUnl3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UkdseVRHbG5hSFJ6T2lCVUxtUnBjbVZqZEdsdmJtRnNMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHOXBiblJNYVdkb2RITTZJRlF1Y0c5cGJuUXViR1Z1WjNSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxVGNHOTBUR2xuYUhSek9pQlVMbk53YjNRdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFUY0c5MFRHbG5hSFJOWVhCek9pQlVMbk53YjNSTWFXZG9kRTFoY0M1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkpsWTNSQmNtVmhUR2xuYUhSek9pQlVMbkpsWTNSQmNtVmhMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFNHVnRhVXhwWjJoMGN6b2dWQzVvWlcxcExteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UkdseVRHbG5hSFJUYUdGa2IzZHpPaUJVTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd0xteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VUc5cGJuUk1hV2RvZEZOb1lXUnZkM002SUZRdWNHOXBiblJUYUdGa2IzZE5ZWEF1YkdWdVozUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMVRjRzkwVEdsbmFIUlRhR0ZrYjNkek9pQlVMbk53YjNSVGFHRmtiM2ROWVhBdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFUY0c5MFRHbG5hSFJUYUdGa2IzZHpWMmwwYUUxaGNITTZJRlF1Ym5WdFUzQnZkRXhwWjJoMFUyaGhaRzkzYzFkcGRHaE5ZWEJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFNYVdkb2RGQnliMkpsY3pvZ1ZDNXVkVzFNYVdkb2RGQnliMkpsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJ4cGNIQnBibWRRYkdGdVpYTTZJR0V1Ym5WdFVHeGhibVZ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYkdsd1NXNTBaWEp6WldOMGFXOXVPaUJoTG01MWJVbHVkR1Z5YzJWamRHbHZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHbDBhR1Z5YVc1bk9pQk5MbVJwZEdobGNtbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVFdGd1JXNWhZbXhsWkRvZ2N6RXVjMmhoWkc5M1RXRndMbVZ1WVdKc1pXUWdKaVlnVHk1c1pXNW5kR2dnUGlBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJVZVhCbE9pQnpNUzV6YUdGa2IzZE5ZWEF1ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJwYm1jNklFWmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMWMyVk1aV2RoWTNsTWFXZG9kSE02SUhNeExsOTFjMlZNWldkaFkzbE1hV2RvZEhNc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWTI5a1pWWnBaR1Z2VkdWNGRIVnlaVG9nV1dVZ0ppWWdUUzV0WVhBdWFYTldhV1JsYjFSbGVIUjFjbVVnUFQwOUlDRXdJQ1ltSUZGbExtZGxkRlJ5WVc1elptVnlLRTB1YldGd0xtTnZiRzl5VTNCaFkyVXBJRDA5UFNCdWRDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoT2lCTkxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkc5MVlteGxVMmxrWldRNklFMHVjMmxrWlNBOVBUMGdaMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnNhWEJUYVdSbFpEb2dUUzV6YVdSbElEMDlQU0JHZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkWE5sUkdWd2RHaFFZV05yYVc1bk9pQk5MbVJsY0hSb1VHRmphMmx1WnlBK1BTQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRkJoWTJ0cGJtYzZJRTB1WkdWd2RHaFFZV05yYVc1bklIeDhJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0TUVGMGRISnBZblYwWlU1aGJXVTZJRTB1YVc1a1pYZ3dRWFIwY21saWRYUmxUbUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdaWGgwWlc1emFXOXVSR1Z5YVhaaGRHbDJaWE02SUdkbElDWW1JRTB1WlhoMFpXNXphVzl1Y3k1a1pYSnBkbUYwYVhabGN5QTlQVDBnSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJR1Y0ZEdWdWMybHZia1p5WVdkRVpYQjBhRG9nWjJVZ0ppWWdUUzVsZUhSbGJuTnBiMjV6TG1aeVlXZEVaWEIwYUNBOVBUMGdJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVjRkR1Z1YzJsdmJrUnlZWGRDZFdabVpYSnpPaUJuWlNBbUppQk5MbVY0ZEdWdWMybHZibk11WkhKaGQwSjFabVpsY25NZ1BUMDlJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmxlSFJsYm5OcGIyNVRhR0ZrWlhKVVpYaDBkWEpsVEU5RU9pQm5aU0FtSmlCTkxtVjRkR1Z1YzJsdmJuTXVjMmhoWkdWeVZHVjRkSFZ5WlV4UFJDQTlQVDBnSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlSWGgwWlc1emFXOXVSbkpoWjBSbGNIUm9PaUJvSUh4OElHNHVhR0Z6S0NKRldGUmZabkpoWjE5a1pYQjBhQ0lwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrUnlZWGRDZFdabVpYSnpPaUJvSUh4OElHNHVhR0Z6S0NKWFJVSkhURjlrY21GM1gySjFabVpsY25NaUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWEpGZUhSbGJuTnBiMjVUYUdGa1pYSlVaWGgwZFhKbFRHOWtPaUJvSUh4OElHNHVhR0Z6S0NKRldGUmZjMmhoWkdWeVgzUmxlSFIxY21WZmJHOWtJaWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlVG9nVFM1amRYTjBiMjFRY205bmNtRnRRMkZqYUdWTFpYa29LUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCd0tFMHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdsbUlDaE5Mbk5vWVdSbGNrbEVJRDhnVkM1d2RYTm9LRTB1YzJoaFpHVnlTVVFwSURvZ0tGUXVjSFZ6YUNoTkxtTjFjM1J2YlZabGNuUmxlRk5vWVdSbGNrbEVLU3dnVkM1d2RYTm9LRTB1WTNWemRHOXRSbkpoWjIxbGJuUlRhR0ZrWlhKSlJDa3BMQ0JOTG1SbFptbHVaWE1nSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCUElHbHVJRTB1WkdWbWFXNWxjeWxVTG5CMWMyZ29UeWtzSUZRdWNIVnphQ2hOTG1SbFptbHVaWE5iVDEwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTkxtbHpVbUYzVTJoaFpHVnlUV0YwWlhKcFlXd2dQVDA5SUNFeElDWW1JQ2gyS0ZRc0lFMHBMQ0I0S0ZRc0lFMHBMQ0JVTG5CMWMyZ29jekV1YjNWMGNIVjBRMjlzYjNKVGNHRmpaU2twTENCVUxuQjFjMmdvVFM1amRYTjBiMjFRY205bmNtRnRRMkZqYUdWTFpYa3BMQ0JVTG1wdmFXNG9LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhZb1RTd2dWQ2tnZXdvZ0lDQWdJQ0FnSUUwdWNIVnphQ2hVTG5CeVpXTnBjMmx2Ymlrc0lFMHVjSFZ6YUNoVUxtOTFkSEIxZEVOdmJHOXlVM0JoWTJVcExDQk5MbkIxYzJnb1ZDNWxiblpOWVhCTmIyUmxLU3dnVFM1d2RYTm9LRlF1Wlc1MlRXRndRM1ZpWlZWV1NHVnBaMmgwS1N3Z1RTNXdkWE5vS0ZRdWJXRndWWFlwTENCTkxuQjFjMmdvVkM1aGJIQm9ZVTFoY0ZWMktTd2dUUzV3ZFhOb0tGUXViR2xuYUhSTllYQlZkaWtzSUUwdWNIVnphQ2hVTG1GdlRXRndWWFlwTENCTkxuQjFjMmdvVkM1aWRXMXdUV0Z3VlhZcExDQk5MbkIxYzJnb1ZDNXViM0p0WVd4TllYQlZkaWtzSUUwdWNIVnphQ2hVTG1ScGMzQnNZV05sYldWdWRFMWhjRlYyS1N3Z1RTNXdkWE5vS0ZRdVpXMXBjM05wZG1WTllYQlZkaWtzSUUwdWNIVnphQ2hVTG0xbGRHRnNibVZ6YzAxaGNGVjJLU3dnVFM1d2RYTm9LRlF1Y205MVoyaHVaWE56VFdGd1ZYWXBMQ0JOTG5CMWMyZ29WQzVoYm1semIzUnliM0I1VFdGd1ZYWXBMQ0JOTG5CMWMyZ29WQzVqYkdWaGNtTnZZWFJOWVhCVmRpa3NJRTB1Y0hWemFDaFVMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjRlYyS1N3Z1RTNXdkWE5vS0ZRdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndWWFlwTENCTkxuQjFjMmdvVkM1cGNtbGtaWE5qWlc1alpVMWhjRlYyS1N3Z1RTNXdkWE5vS0ZRdWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTk5ZWEJWZGlrc0lFMHVjSFZ6YUNoVUxuTm9aV1Z1UTI5c2IzSk5ZWEJWZGlrc0lFMHVjSFZ6YUNoVUxuTm9aV1Z1VW05MVoyaHVaWE56VFdGd1ZYWXBMQ0JOTG5CMWMyZ29WQzV6Y0dWamRXeGhjazFoY0ZWMktTd2dUUzV3ZFhOb0tGUXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNGVjJLU3dnVFM1d2RYTm9LRlF1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhCVmRpa3NJRTB1Y0hWemFDaFVMblJ5WVc1emJXbHpjMmx2YmsxaGNGVjJLU3dnVFM1d2RYTm9LRlF1ZEdocFkydHVaWE56VFdGd1ZYWXBMQ0JOTG5CMWMyZ29WQzVqYjIxaWFXNWxLU3dnVFM1d2RYTm9LRlF1Wm05blJYaHdNaWtzSUUwdWNIVnphQ2hVTG5OcGVtVkJkSFJsYm5WaGRHbHZiaWtzSUUwdWNIVnphQ2hVTG0xdmNuQm9WR0Z5WjJWMGMwTnZkVzUwS1N3Z1RTNXdkWE5vS0ZRdWJXOXljR2hCZEhSeWFXSjFkR1ZEYjNWdWRDa3NJRTB1Y0hWemFDaFVMbTUxYlVScGNreHBaMmgwY3lrc0lFMHVjSFZ6YUNoVUxtNTFiVkJ2YVc1MFRHbG5hSFJ6S1N3Z1RTNXdkWE5vS0ZRdWJuVnRVM0J2ZEV4cFoyaDBjeWtzSUUwdWNIVnphQ2hVTG01MWJWTndiM1JNYVdkb2RFMWhjSE1wTENCTkxuQjFjMmdvVkM1dWRXMUlaVzFwVEdsbmFIUnpLU3dnVFM1d2RYTm9LRlF1Ym5WdFVtVmpkRUZ5WldGTWFXZG9kSE1wTENCTkxuQjFjMmdvVkM1dWRXMUVhWEpNYVdkb2RGTm9ZV1J2ZDNNcExDQk5MbkIxYzJnb1ZDNXVkVzFRYjJsdWRFeHBaMmgwVTJoaFpHOTNjeWtzSUUwdWNIVnphQ2hVTG01MWJWTndiM1JNYVdkb2RGTm9ZV1J2ZDNNcExDQk5MbkIxYzJnb1ZDNXVkVzFUY0c5MFRHbG5hSFJUYUdGa2IzZHpWMmwwYUUxaGNITXBMQ0JOTG5CMWMyZ29WQzV1ZFcxTWFXZG9kRkJ5YjJKbGN5a3NJRTB1Y0hWemFDaFVMbk5vWVdSdmQwMWhjRlI1Y0dVcExDQk5MbkIxYzJnb1ZDNTBiMjVsVFdGd2NHbHVaeWtzSUUwdWNIVnphQ2hVTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6S1N3Z1RTNXdkWE5vS0ZRdWJuVnRRMnhwY0VsdWRHVnljMlZqZEdsdmJpa3NJRTB1Y0hWemFDaFVMbVJsY0hSb1VHRmphMmx1WnlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjRLRTBzSUZRcElIc0tJQ0FnSUNBZ0lDQnZMbVJwYzJGaWJHVkJiR3dvS1N3Z1ZDNXBjMWRsWWtkTU1pQW1KaUJ2TG1WdVlXSnNaU2d3S1N3Z1ZDNXpkWEJ3YjNKMGMxWmxjblJsZUZSbGVIUjFjbVZ6SUNZbUlHOHVaVzVoWW14bEtERXBMQ0JVTG1sdWMzUmhibU5wYm1jZ0ppWWdieTVsYm1GaWJHVW9NaWtzSUZRdWFXNXpkR0Z1WTJsdVowTnZiRzl5SUNZbUlHOHVaVzVoWW14bEtETXBMQ0JVTG0xaGRHTmhjQ0FtSmlCdkxtVnVZV0pzWlNnMEtTd2dWQzVsYm5aTllYQWdKaVlnYnk1bGJtRmliR1VvTlNrc0lGUXVibTl5YldGc1RXRndUMkpxWldOMFUzQmhZMlVnSmlZZ2J5NWxibUZpYkdVb05pa3NJRlF1Ym05eWJXRnNUV0Z3VkdGdVoyVnVkRk53WVdObElDWW1JRzh1Wlc1aFlteGxLRGNwTENCVUxtTnNaV0Z5WTI5aGRDQW1KaUJ2TG1WdVlXSnNaU2c0S1N3Z1ZDNXBjbWxrWlhOalpXNWpaU0FtSmlCdkxtVnVZV0pzWlNnNUtTd2dWQzVoYkhCb1lWUmxjM1FnSmlZZ2J5NWxibUZpYkdVb01UQXBMQ0JVTG5abGNuUmxlRU52Ykc5eWN5QW1KaUJ2TG1WdVlXSnNaU2d4TVNrc0lGUXVkbVZ5ZEdWNFFXeHdhR0Z6SUNZbUlHOHVaVzVoWW14bEtERXlLU3dnVkM1MlpYSjBaWGhWZGpGeklDWW1JRzh1Wlc1aFlteGxLREV6S1N3Z1ZDNTJaWEowWlhoVmRqSnpJQ1ltSUc4dVpXNWhZbXhsS0RFMEtTd2dWQzUyWlhKMFpYaFZkak56SUNZbUlHOHVaVzVoWW14bEtERTFLU3dnVkM1MlpYSjBaWGhVWVc1blpXNTBjeUFtSmlCdkxtVnVZV0pzWlNneE5pa3NJRlF1WVc1cGMyOTBjbTl3ZVNBbUppQnZMbVZ1WVdKc1pTZ3hOeWtzSUUwdWNIVnphQ2h2TG0xaGMyc3BMQ0J2TG1ScGMyRmliR1ZCYkd3b0tTd2dWQzVtYjJjZ0ppWWdieTVsYm1GaWJHVW9NQ2tzSUZRdWRYTmxSbTluSUNZbUlHOHVaVzVoWW14bEtERXBMQ0JVTG1ac1lYUlRhR0ZrYVc1bklDWW1JRzh1Wlc1aFlteGxLRElwTENCVUxteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnSmlZZ2J5NWxibUZpYkdVb015a3NJRlF1YzJ0cGJtNXBibWNnSmlZZ2J5NWxibUZpYkdVb05Da3NJRlF1Ylc5eWNHaFVZWEpuWlhSeklDWW1JRzh1Wlc1aFlteGxLRFVwTENCVUxtMXZjbkJvVG05eWJXRnNjeUFtSmlCdkxtVnVZV0pzWlNnMktTd2dWQzV0YjNKd2FFTnZiRzl5Y3lBbUppQnZMbVZ1WVdKc1pTZzNLU3dnVkM1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFZ0ppWWdieTVsYm1GaWJHVW9PQ2tzSUZRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBbUppQnZMbVZ1WVdKc1pTZzVLU3dnVkM1MWMyVk1aV2RoWTNsTWFXZG9kSE1nSmlZZ2J5NWxibUZpYkdVb01UQXBMQ0JVTG1SdmRXSnNaVk5wWkdWa0lDWW1JRzh1Wlc1aFlteGxLREV4S1N3Z1ZDNW1iR2x3VTJsa1pXUWdKaVlnYnk1bGJtRmliR1VvTVRJcExDQlVMblZ6WlVSbGNIUm9VR0ZqYTJsdVp5QW1KaUJ2TG1WdVlXSnNaU2d4TXlrc0lGUXVaR2wwYUdWeWFXNW5JQ1ltSUc4dVpXNWhZbXhsS0RFMEtTd2dWQzUwY21GdWMyMXBjM05wYjI0Z0ppWWdieTVsYm1GaWJHVW9NVFVwTENCVUxuTm9aV1Z1SUNZbUlHOHVaVzVoWW14bEtERTJLU3dnVkM1dmNHRnhkV1VnSmlZZ2J5NWxibUZpYkdVb01UY3BMQ0JVTG5CdmFXNTBjMVYyY3lBbUppQnZMbVZ1WVdKc1pTZ3hPQ2tzSUZRdVpHVmpiMlJsVm1sa1pXOVVaWGgwZFhKbElDWW1JRzh1Wlc1aFlteGxLREU1S1N3Z1RTNXdkWE5vS0c4dWJXRnpheWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNUtFMHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRzFiVFM1MGVYQmxYU3dnVHpzS0lDQWdJQ0FnSUNCcFppQW9WQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV1NBOUlHNXVXMVJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQlBJRDBnZUhBdVkyeHZibVVvV1M1MWJtbG1iM0p0Y3lrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUU4Z1BTQk5MblZ1YVdadmNtMXpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQlBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWWloTkxDQlVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlpJRDBnTUN3Z0pDQTlJR3d1YkdWdVozUm9PeUJaSUR3Z0pEc2dXU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZVZ1BTQnNXMWxkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVlM1allXTm9aVXRsZVNBOVBUMGdWQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVHlBOUlGVXNJQ3NyVHk1MWMyVmtWR2x0WlhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1R5QTlQVDBnZG05cFpDQXdJQ1ltSUNoUElEMGdibVYzSUdJd0tITXhMQ0JVTENCTkxDQnlLU3dnYkM1d2RYTm9LRThwS1N3Z1R6c0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGNvVFNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2d0TFUwdWRYTmxaRlJwYldWeklEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVUlEMGdiQzVwYm1SbGVFOW1LRTBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNXMVJkSUQwZ2JGdHNMbXhsYm1kMGFDQXRJREZkTENCc0xuQnZjQ2dwTENCTkxtUmxjM1J5YjNrb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJTS0UwcElIc0tJQ0FnSUNBZ0lDQmpMbkpsYlc5MlpTaE5LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVrb0tTQjdDaUFnSUNBZ0lDQWdZeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGRGQmhjbUZ0WlhSbGNuTTZJR2NzQ2lBZ0lDQWdJQ0FnWjJWMFVISnZaM0poYlVOaFkyaGxTMlY1T2lCd0xBb2dJQ0FnSUNBZ0lHZGxkRlZ1YVdadmNtMXpPaUI1TEFvZ0lDQWdJQ0FnSUdGamNYVnBjbVZRY205bmNtRnRPaUJpTEFvZ0lDQWdJQ0FnSUhKbGJHVmhjMlZRY205bmNtRnRPaUIzTEFvZ0lDQWdJQ0FnSUhKbGJHVmhjMlZUYUdGa1pYSkRZV05vWlRvZ1Vpd0tJQ0FnSUNBZ0lDQndjbTluY21GdGN6b2diQ3dLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJKQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUhjd0tDa2dld29nSUNBZ2JHVjBJSE14SUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCbEtISXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSE14TG1kbGRDaHlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGhJRDBnZTMwc0lITXhMbk5sZENoeUxDQmhLU2tzSUdFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjBLSElwSUhzS0lDQWdJQ0FnSUNCek1TNWtaV3hsZEdVb2NpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ1S0hJc0lHRXNJRzhwSUhzS0lDQWdJQ0FnSUNCek1TNW5aWFFvY2lsYllWMGdQU0J2T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FTZ3BJSHNLSUNBZ0lDQWdJQ0J6TVNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHVXNDaUFnSUNBZ0lDQWdjbVZ0YjNabE9pQjBMQW9nSUNBZ0lDQWdJSFZ3WkdGMFpUb2diaXdLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJwQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUVFd0tITXhMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjekV1WjNKdmRYQlBjbVJsY2lBaFBUMGdaUzVuY205MWNFOXlaR1Z5SUQ4Z2N6RXVaM0p2ZFhCUGNtUmxjaUF0SUdVdVozSnZkWEJQY21SbGNpQTZJSE14TG5KbGJtUmxjazl5WkdWeUlDRTlQU0JsTG5KbGJtUmxjazl5WkdWeUlEOGdjekV1Y21WdVpHVnlUM0prWlhJZ0xTQmxMbkpsYm1SbGNrOXlaR1Z5SURvZ2N6RXViV0YwWlhKcFlXd3VhV1FnSVQwOUlHVXViV0YwWlhKcFlXd3VhV1FnUHlCek1TNXRZWFJsY21saGJDNXBaQ0F0SUdVdWJXRjBaWEpwWVd3dWFXUWdPaUJ6TVM1NklDRTlQU0JsTG5vZ1B5QnpNUzU2SUMwZ1pTNTZJRG9nY3pFdWFXUWdMU0JsTG1sa093cDlDbVoxYm1OMGFXOXVJRkpvS0hNeExDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N6RXVaM0p2ZFhCUGNtUmxjaUFoUFQwZ1pTNW5jbTkxY0U5eVpHVnlJRDhnY3pFdVozSnZkWEJQY21SbGNpQXRJR1V1WjNKdmRYQlBjbVJsY2lBNklITXhMbkpsYm1SbGNrOXlaR1Z5SUNFOVBTQmxMbkpsYm1SbGNrOXlaR1Z5SUQ4Z2N6RXVjbVZ1WkdWeVQzSmtaWElnTFNCbExuSmxibVJsY2s5eVpHVnlJRG9nY3pFdWVpQWhQVDBnWlM1NklEOGdaUzU2SUMwZ2N6RXVlaUE2SUhNeExtbGtJQzBnWlM1cFpEc0tmUXBtZFc1amRHbHZiaUJEYUNncElIc0tJQ0FnSUd4bGRDQnpNU0E5SUZ0ZExDQmxJRDBnTUN3Z2RDQTlJRnRkTENCdUlEMGdXMTBzSUdrZ1BTQmJYVHNLSUNBZ0lHWjFibU4wYVc5dUlISW9LU0I3Q2lBZ0lDQWdJQ0FnWlNBOUlEQXNJSFF1YkdWdVozUm9JRDBnTUN3Z2JpNXNaVzVuZEdnZ1BTQXdMQ0JwTG14bGJtZDBhQ0E5SURBN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhLSFVzSUdRc0lHWXNJRzBzSUY4c0lHY3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJSE14VzJWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCd0lEMDlQU0IyYjJsa0lEQWdQeUFvY0NBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklIVXVhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ2RTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdmJXVjBjbms2SUdRc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNPaUJtTEFvZ0lDQWdJQ0FnSUNBZ0lDQm5jbTkxY0U5eVpHVnlPaUJ0TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKUGNtUmxjam9nZFM1eVpXNWtaWEpQY21SbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnZWpvZ1h5d0tJQ0FnSUNBZ0lDQWdJQ0FnWjNKdmRYQTZJR2NLSUNBZ0lDQWdJQ0I5TENCek1WdGxYU0E5SUhBcElEb2dLSEF1YVdRZ1BTQjFMbWxrTENCd0xtOWlhbVZqZENBOUlIVXNJSEF1WjJWdmJXVjBjbmtnUFNCa0xDQndMbTFoZEdWeWFXRnNJRDBnWml3Z2NDNW5jbTkxY0U5eVpHVnlJRDBnYlN3Z2NDNXlaVzVrWlhKUGNtUmxjaUE5SUhVdWNtVnVaR1Z5VDNKa1pYSXNJSEF1ZWlBOUlGOHNJSEF1WjNKdmRYQWdQU0JuS1N3Z1pTc3JMQ0J3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2J5aDFMQ0JrTENCbUxDQnRMQ0JmTENCbktTQjdDaUFnSUNBZ0lDQWdiR1YwSUhBZ1BTQmhLSFVzSUdRc0lHWXNJRzBzSUY4c0lHY3BPd29nSUNBZ0lDQWdJR1l1ZEhKaGJuTnRhWE56YVc5dUlENGdNQ0EvSUc0dWNIVnphQ2h3S1NBNklHWXVkSEpoYm5Od1lYSmxiblFnUFQwOUlDRXdJRDhnYVM1d2RYTm9LSEFwSURvZ2RDNXdkWE5vS0hBcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZeWgxTENCa0xDQm1MQ0J0TENCZkxDQm5LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIQWdQU0JoS0hVc0lHUXNJR1lzSUcwc0lGOHNJR2NwT3dvZ0lDQWdJQ0FnSUdZdWRISmhibk50YVhOemFXOXVJRDRnTUNBL0lHNHVkVzV6YUdsbWRDaHdLU0E2SUdZdWRISmhibk53WVhKbGJuUWdQVDA5SUNFd0lEOGdhUzUxYm5Ob2FXWjBLSEFwSURvZ2RDNTFibk5vYVdaMEtIQXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYkNoMUxDQmtLU0I3Q2lBZ0lDQWdJQ0FnZEM1c1pXNW5kR2dnUGlBeElDWW1JSFF1YzI5eWRDaDFJSHg4SUVFd0tTd2diaTVzWlc1bmRHZ2dQaUF4SUNZbUlHNHVjMjl5ZENoa0lIeDhJRkpvS1N3Z2FTNXNaVzVuZEdnZ1BpQXhJQ1ltSUdrdWMyOXlkQ2hrSUh4OElGSm9LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdnb0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnWlN3Z1pDQTlJSE14TG14bGJtZDBhRHNnZFNBOElHUTdJSFVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdjekZiZFYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobUxtbGtJRDA5UFNCdWRXeHNLU0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWmk1cFpDQTlJRzUxYkd3c0lHWXViMkpxWldOMElEMGdiblZzYkN3Z1ppNW5aVzl0WlhSeWVTQTlJRzUxYkd3c0lHWXViV0YwWlhKcFlXd2dQU0J1ZFd4c0xDQm1MbWR5YjNWd0lEMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHOXdZWEYxWlRvZ2RDd0tJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBkbVU2SUc0c0NpQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUTZJR2tzQ2lBZ0lDQWdJQ0FnYVc1cGREb2djaXdLSUNBZ0lDQWdJQ0J3ZFhOb09pQnZMQW9nSUNBZ0lDQWdJSFZ1YzJocFpuUTZJR01zQ2lBZ0lDQWdJQ0FnWm1sdWFYTm9PaUJvTEFvZ0lDQWdJQ0FnSUhOdmNuUTZJR3dLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnVWpBb0tTQjdDaUFnSUNCc1pYUWdjekVnUFNCdVpYY2dWMlZoYTAxaGNEc0tJQ0FnSUdaMWJtTjBhVzl1SUdVb2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnY3pFdVoyVjBLRzRwTENCaE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeUlEMDlQU0IyYjJsa0lEQWdQeUFvWVNBOUlHNWxkeUJEYUN3Z2N6RXVjMlYwS0c0c0lGc0tJQ0FnSUNBZ0lDQWdJQ0FnWVFvZ0lDQWdJQ0FnSUYwcEtTQTZJR2tnUGowZ2NpNXNaVzVuZEdnZ1B5QW9ZU0E5SUc1bGR5QkRhQ3dnY2k1d2RYTm9LR0VwS1NBNklHRWdQU0J5VzJsZExDQmhPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZENncElIc0tJQ0FnSUNBZ0lDQnpNU0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdVc0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ2RBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQkRNQ2dwSUhzS0lDQWdJR3hsZENCek1TQTlJSHQ5T3dvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITXhXMlV1YVdSZElDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQnpNVnRsTG1sa1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsTG5SNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJHbHlaV04wYVc5dVlXeE1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCdVpYY2dRU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHNWxkeUJ3WlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKVGNHOTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCdVpYY2dRU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUJ1WlhjZ1FTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUc1bGR5QndaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1WRGIzTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJsYm5WdFluSmhRMjl6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXTmhlVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2JtVjNJRUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnVaWGNnY0dVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXTmhlVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSVpXMXBjM0JvWlhKbFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nYm1WM0lFRXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnJlVU52Ykc5eU9pQnVaWGNnY0dVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkeWIzVnVaRU52Ykc5eU9pQnVaWGNnY0dVS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVtVmpkRUZ5WldGTWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHNWxkeUJ3WlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUc1bGR5QkJMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZV3htVjJsa2RHZzZJRzVsZHlCQkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXeG1TR1ZwWjJoME9pQnVaWGNnUVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITXhXMlV1YVdSZElEMGdkQ3dnZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlGQXdLQ2tnZXdvZ0lDQWdiR1YwSUhNeElEMGdlMzA3Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2N6RmJaUzVwWkYwZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlITXhXMlV1YVdSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LR1V1ZEhsd1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKRWFYSmxZM1JwYjI1aGJFeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZENhV0Z6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RPYjNKdFlXeENhV0Z6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RTWVdScGRYTTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRk5wZW1VNklHNWxkeUJhQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxOd2IzUk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQnVaWGNnV2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RDYVdGek9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkU1lXUnBkWE02SURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJRzVsZHlCYUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2REWVcxbGNtRk9aV0Z5T2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2REWVcxbGNtRkdZWEk2SURGbE13b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSE14VzJVdWFXUmRJRDBnZEN3Z2REc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDblpoY2lCTU1DQTlJREE3Q21aMWJtTjBhVzl1SUVrd0tITXhMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdLR1V1WTJGemRGTm9ZV1J2ZHlBL0lESWdPaUF3S1NBdElDaHpNUzVqWVhOMFUyaGhaRzkzSUQ4Z01pQTZJREFwSUNzZ0tHVXViV0Z3SUQ4Z01TQTZJREFwSUMwZ0tITXhMbTFoY0NBL0lERWdPaUF3S1RzS2ZRcG1kVzVqZEdsdmJpQlZNQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCdVpYY2dRekFzSUc0Z1BTQlFNQ2dwTENCcElEMGdld29nSUNBZ0lDQWdJSFpsY25OcGIyNDZJREFzQ2lBZ0lDQWdJQ0FnYUdGemFEb2dld29nSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJFeGxibWQwYURvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBUR1Z1WjNSb09pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQnZkRXhsYm1kMGFEb2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxZM1JCY21WaFRHVnVaM1JvT2lBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWdGFVeGxibWQwYURvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVUnBjbVZqZEdsdmJtRnNVMmhoWkc5M2N6b2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJ2YVc1MFUyaGhaRzkzY3pvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWTndiM1JUYUdGa2IzZHpPaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VTNCdmRFMWhjSE02SUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxTWFXZG9kRkJ5YjJKbGN6b2dMVEVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdGdFltbGxiblE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUYwc0NpQWdJQ0FnSUNBZ2NISnZZbVU2SUZ0ZExBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNPaUJiWFN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZHpvZ1cxMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEE2SUZ0ZExBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0T2lCYlhTd0tJQ0FnSUNBZ0lDQnpjRzkwT2lCYlhTd0tJQ0FnSUNBZ0lDQnpjRzkwVEdsbmFIUk5ZWEE2SUZ0ZExBb2dJQ0FnSUNBZ0lITndiM1JUYUdGa2IzYzZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUlRhR0ZrYjNkTllYQTZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUk1hV2RvZEUxaGRISnBlRG9nVzEwc0NpQWdJQ0FnSUNBZ2NtVmpkRUZ5WldFNklGdGRMQW9nSUNBZ0lDQWdJSEpsWTNSQmNtVmhURlJETVRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0J5WldOMFFYSmxZVXhVUXpJNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnY0c5cGJuUTZJRnRkTEFvZ0lDQWdJQ0FnSUhCdmFXNTBVMmhoWkc5M09pQmJYU3dLSUNBZ0lDQWdJQ0J3YjJsdWRGTm9ZV1J2ZDAxaGNEb2dXMTBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUlRhR0ZrYjNkTllYUnlhWGc2SUZ0ZExBb2dJQ0FnSUNBZ0lHaGxiV2s2SUZ0ZExBb2dJQ0FnSUNBZ0lHNTFiVk53YjNSTWFXZG9kRk5vWVdSdmQzTlhhWFJvVFdGd2N6b2dNQ3dLSUNBZ0lDQWdJQ0J1ZFcxTWFXZG9kRkJ5YjJKbGN6b2dNQW9nSUNBZ2ZUc0tJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQTdJR2dnUENBNU95Qm9LeXNwYVM1d2NtOWlaUzV3ZFhOb0tHNWxkeUJCS1RzS0lDQWdJR3hsZENCeUlEMGdibVYzSUVFc0lHRWdQU0J1WlhjZ2VtVXNJRzhnUFNCdVpYY2dlbVU3Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLR2dzSUhVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlEQXNJR1lnUFNBd0xDQnRJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZrZ1BTQXdPeUJaSUR3Z09Uc2dXU3NyS1drdWNISnZZbVZiV1YwdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCZklEMGdNQ3dnWnlBOUlEQXNJSEFnUFNBd0xDQjJJRDBnTUN3Z2VDQTlJREFzSUhrZ1BTQXdMQ0JpSUQwZ01Dd2dkeUE5SURBc0lGSWdQU0F3TENCSklEMGdNQ3dnVFNBOUlEQTdDaUFnSUNBZ0lDQWdhQzV6YjNKMEtFa3dLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJSFVnUFQwOUlDRXdJRDhnVFdGMGFDNVFTU0E2SURFN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCWklEMGdNQ3dnSkNBOUlHZ3ViR1Z1WjNSb095QlpJRHdnSkRzZ1dTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRlVnUFNCb1cxbGRMQ0I2SUQwZ1ZTNWpiMnh2Y2l3Z2NTQTlJRlV1YVc1MFpXNXphWFI1TENCSUlEMGdWUzVrYVhOMFlXNWpaU3dnYm1VZ1BTQlZMbk5vWVdSdmR5QW1KaUJWTG5Ob1lXUnZkeTV0WVhBZ1B5QlZMbk5vWVdSdmR5NXRZWEF1ZEdWNGRIVnlaU0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFZMbWx6UVcxaWFXVnVkRXhwWjJoMEtTQmtJQ3M5SUhvdWNpQXFJSEVnS2lCVUxDQm1JQ3M5SUhvdVp5QXFJSEVnS2lCVUxDQnRJQ3M5SUhvdVlpQXFJSEVnS2lCVU93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hWTG1selRHbG5hSFJRY205aVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlhJRDBnTURzZ1Z5QThJRGs3SUZjckt5bHBMbkJ5YjJKbFcxZGRMbUZrWkZOallXeGxaRlpsWTNSdmNpaFZMbk5vTG1OdlpXWm1hV05wWlc1MGMxdFhYU3dnY1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCTkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1ZTNXBjMFJwY21WamRHbHZibUZzVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdkQzVuWlhRb1ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVnk1amIyeHZjaTVqYjNCNUtGVXVZMjlzYjNJcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZVdWFXNTBaVzV6YVhSNUlDb2dWQ2tzSUZVdVkyRnpkRk5vWVdSdmR5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkxJRDBnVlM1emFHRmtiM2NzSUVRZ1BTQnVMbWRsZENoVktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JFTG5Ob1lXUnZkMEpwWVhNZ1BTQkxMbUpwWVhNc0lFUXVjMmhoWkc5M1RtOXliV0ZzUW1saGN5QTlJRXN1Ym05eWJXRnNRbWxoY3l3Z1JDNXphR0ZrYjNkU1lXUnBkWE1nUFNCTExuSmhaR2wxY3l3Z1JDNXphR0ZrYjNkTllYQlRhWHBsSUQwZ1N5NXRZWEJUYVhwbExDQnBMbVJwY21WamRHbHZibUZzVTJoaFpHOTNXMTlkSUQwZ1JDd2dhUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0Z0ZlhTQTlJRzVsTENCcExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0VzE5ZElEMGdWUzV6YUdGa2IzY3ViV0YwY21sNExDQjVLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG1ScGNtVmpkR2x2Ym1Gc1cxOWRJRDBnVnl3Z1h5c3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGVXVhWE5UY0c5MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlhJRDBnZEM1blpYUW9WU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JYTG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaFZMbTFoZEhKcGVGZHZjbXhrS1N3Z1Z5NWpiMnh2Y2k1amIzQjVLSG9wTG0xMWJIUnBjR3g1VTJOaGJHRnlLSEVnS2lCVUtTd2dWeTVrYVhOMFlXNWpaU0E5SUVnc0lGY3VZMjl1WlVOdmN5QTlJRTFoZEdndVkyOXpLRlV1WVc1bmJHVXBMQ0JYTG5CbGJuVnRZbkpoUTI5eklEMGdUV0YwYUM1amIzTW9WUzVoYm1kc1pTQXFJQ2d4SUMwZ1ZTNXdaVzUxYldKeVlTa3BMQ0JYTG1SbFkyRjVJRDBnVlM1a1pXTmhlU3dnYVM1emNHOTBXM0JkSUQwZ1Z6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JMSUQwZ1ZTNXphR0ZrYjNjN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9WUzV0WVhBZ0ppWWdLR2t1YzNCdmRFeHBaMmgwVFdGd1cxSmRJRDBnVlM1dFlYQXNJRklyS3l3Z1N5NTFjR1JoZEdWTllYUnlhV05sY3loVktTd2dWUzVqWVhOMFUyaGhaRzkzSUNZbUlFa3JLeWtzSUdrdWMzQnZkRXhwWjJoMFRXRjBjbWw0VzNCZElEMGdTeTV0WVhSeWFYZ3NJRlV1WTJGemRGTm9ZV1J2ZHlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRUlEMGdiaTVuWlhRb1ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUkM1emFHRmtiM2RDYVdGeklEMGdTeTVpYVdGekxDQkVMbk5vWVdSdmQwNXZjbTFoYkVKcFlYTWdQU0JMTG01dmNtMWhiRUpwWVhNc0lFUXVjMmhoWkc5M1VtRmthWFZ6SUQwZ1N5NXlZV1JwZFhNc0lFUXVjMmhoWkc5M1RXRndVMmw2WlNBOUlFc3ViV0Z3VTJsNlpTd2dhUzV6Y0c5MFUyaGhaRzkzVzNCZElEMGdSQ3dnYVM1emNHOTBVMmhoWkc5M1RXRndXM0JkSUQwZ2JtVXNJSGNyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhBckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoVkxtbHpVbVZqZEVGeVpXRk1hV2RvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCMExtZGxkQ2hWS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZjdVkyOXNiM0l1WTI5d2VTaDZLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHhLU3dnVnk1b1lXeG1WMmxrZEdndWMyVjBLRlV1ZDJsa2RHZ2dLaUF1TlN3Z01Dd2dNQ2tzSUZjdWFHRnNaa2hsYVdkb2RDNXpaWFFvTUN3Z1ZTNW9aV2xuYUhRZ0tpQXVOU3dnTUNrc0lHa3VjbVZqZEVGeVpXRmJkbDBnUFNCWExDQjJLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9WUzVwYzFCdmFXNTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2RDNW5aWFFvVlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9WeTVqYjJ4dmNpNWpiM0I1S0ZVdVkyOXNiM0lwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRlV1YVc1MFpXNXphWFI1SUNvZ1ZDa3NJRmN1WkdsemRHRnVZMlVnUFNCVkxtUnBjM1JoYm1ObExDQlhMbVJsWTJGNUlEMGdWUzVrWldOaGVTd2dWUzVqWVhOMFUyaGhaRzkzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzZ1BTQlZMbk5vWVdSdmR5d2dSQ0E5SUc0dVoyVjBLRlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFUXVjMmhoWkc5M1FtbGhjeUE5SUVzdVltbGhjeXdnUkM1emFHRmtiM2RPYjNKdFlXeENhV0Z6SUQwZ1N5NXViM0p0WVd4Q2FXRnpMQ0JFTG5Ob1lXUnZkMUpoWkdsMWN5QTlJRXN1Y21Ga2FYVnpMQ0JFTG5Ob1lXUnZkMDFoY0ZOcGVtVWdQU0JMTG0xaGNGTnBlbVVzSUVRdWMyaGhaRzkzUTJGdFpYSmhUbVZoY2lBOUlFc3VZMkZ0WlhKaExtNWxZWElzSUVRdWMyaGhaRzkzUTJGdFpYSmhSbUZ5SUQwZ1N5NWpZVzFsY21FdVptRnlMQ0JwTG5CdmFXNTBVMmhoWkc5M1cyZGRJRDBnUkN3Z2FTNXdiMmx1ZEZOb1lXUnZkMDFoY0Z0blhTQTlJRzVsTENCcExuQnZhVzUwVTJoaFpHOTNUV0YwY21sNFcyZGRJRDBnVlM1emFHRmtiM2N1YldGMGNtbDRMQ0JpS3lzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExuQnZhVzUwVzJkZElEMGdWeXdnWnlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZVdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2RDNW5aWFFvVlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWExuTnJlVU52Ykc5eUxtTnZjSGtvVlM1amIyeHZjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9jU0FxSUZRcExDQlhMbWR5YjNWdVpFTnZiRzl5TG1OdmNIa29WUzVuY205MWJtUkRiMnh2Y2lrdWJYVnNkR2x3YkhsVFkyRnNZWElvY1NBcUlGUXBMQ0JwTG1obGJXbGJlRjBnUFNCWExDQjRLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkaUErSURBZ0ppWWdLR1V1YVhOWFpXSkhURElnZkh3Z2N6RXVhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZEY5c2FXNWxZWElpS1NBOVBUMGdJVEFnUHlBb2FTNXlaV04wUVhKbFlVeFVRekVnUFNCc1pTNU1WRU5mUmt4UFFWUmZNU3dnYVM1eVpXTjBRWEpsWVV4VVF6SWdQU0JzWlM1TVZFTmZSa3hQUVZSZk1pa2dPaUJ6TVM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJoaGJHWmZabXh2WVhSZmJHbHVaV0Z5SWlrZ1BUMDlJQ0V3SUQ4Z0tHa3VjbVZqZEVGeVpXRk1WRU14SUQwZ2JHVXVURlJEWDBoQlRFWmZNU3dnYVM1eVpXTjBRWEpsWVV4VVF6SWdQU0JzWlM1TVZFTmZTRUZNUmw4eUtTQTZJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlZ1WVdKc1pTQjBieUIxYzJVZ1VtVmpkRUZ5WldGTWFXZG9kQzRnVFdsemMybHVaeUJYWldKSFRDQmxlSFJsYm5OcGIyNXpMaUlwS1N3Z2FTNWhiV0pwWlc1MFd6QmRJRDBnWkN3Z2FTNWhiV0pwWlc1MFd6RmRJRDBnWml3Z2FTNWhiV0pwWlc1MFd6SmRJRDBnYlRzS0lDQWdJQ0FnSUNCc1pYUWdUeUE5SUdrdWFHRnphRHNLSUNBZ0lDQWdJQ0FvVHk1a2FYSmxZM1JwYjI1aGJFeGxibWQwYUNBaFBUMGdYeUI4ZkNCUExuQnZhVzUwVEdWdVozUm9JQ0U5UFNCbklIeDhJRTh1YzNCdmRFeGxibWQwYUNBaFBUMGdjQ0I4ZkNCUExuSmxZM1JCY21WaFRHVnVaM1JvSUNFOVBTQjJJSHg4SUU4dWFHVnRhVXhsYm1kMGFDQWhQVDBnZUNCOGZDQlBMbTUxYlVScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzY3lBaFBUMGdlU0I4ZkNCUExtNTFiVkJ2YVc1MFUyaGhaRzkzY3lBaFBUMGdZaUI4ZkNCUExtNTFiVk53YjNSVGFHRmtiM2R6SUNFOVBTQjNJSHg4SUU4dWJuVnRVM0J2ZEUxaGNITWdJVDA5SUZJZ2ZId2dUeTV1ZFcxTWFXZG9kRkJ5YjJKbGN5QWhQVDBnVFNrZ0ppWWdLR2t1WkdseVpXTjBhVzl1WVd3dWJHVnVaM1JvSUQwZ1h5d2dhUzV6Y0c5MExteGxibWQwYUNBOUlIQXNJR2t1Y21WamRFRnlaV0V1YkdWdVozUm9JRDBnZGl3Z2FTNXdiMmx1ZEM1c1pXNW5kR2dnUFNCbkxDQnBMbWhsYldrdWJHVnVaM1JvSUQwZ2VDd2dhUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkeTVzWlc1bmRHZ2dQU0I1TENCcExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndMbXhsYm1kMGFDQTlJSGtzSUdrdWNHOXBiblJUYUdGa2IzY3ViR1Z1WjNSb0lEMGdZaXdnYVM1d2IybHVkRk5vWVdSdmQwMWhjQzVzWlc1bmRHZ2dQU0JpTENCcExuTndiM1JUYUdGa2IzY3ViR1Z1WjNSb0lEMGdkeXdnYVM1emNHOTBVMmhoWkc5M1RXRndMbXhsYm1kMGFDQTlJSGNzSUdrdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGd1YkdWdVozUm9JRDBnZVN3Z2FTNXdiMmx1ZEZOb1lXUnZkMDFoZEhKcGVDNXNaVzVuZEdnZ1BTQmlMQ0JwTG5Od2IzUk1hV2RvZEUxaGRISnBlQzVzWlc1bmRHZ2dQU0IzSUNzZ1VpQXRJRWtzSUdrdWMzQnZkRXhwWjJoMFRXRndMbXhsYm1kMGFDQTlJRklzSUdrdWJuVnRVM0J2ZEV4cFoyaDBVMmhoWkc5M2MxZHBkR2hOWVhCeklEMGdTU3dnYVM1dWRXMU1hV2RvZEZCeWIySmxjeUE5SUUwc0lFOHVaR2x5WldOMGFXOXVZV3hNWlc1bmRHZ2dQU0JmTENCUExuQnZhVzUwVEdWdVozUm9JRDBnWnl3Z1R5NXpjRzkwVEdWdVozUm9JRDBnY0N3Z1R5NXlaV04wUVhKbFlVeGxibWQwYUNBOUlIWXNJRTh1YUdWdGFVeGxibWQwYUNBOUlIZ3NJRTh1Ym5WdFJHbHlaV04wYVc5dVlXeFRhR0ZrYjNkeklEMGdlU3dnVHk1dWRXMVFiMmx1ZEZOb1lXUnZkM01nUFNCaUxDQlBMbTUxYlZOd2IzUlRhR0ZrYjNkeklEMGdkeXdnVHk1dWRXMVRjRzkwVFdGd2N5QTlJRklzSUU4dWJuVnRUR2xuYUhSUWNtOWlaWE1nUFNCTkxDQnBMblpsY25OcGIyNGdQU0JNTUNzcktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3dvYUN3Z2RTa2dld29nSUNBZ0lDQWdJR3hsZENCa0lEMGdNQ3dnWmlBOUlEQXNJRzBnUFNBd0xDQmZJRDBnTUN3Z1p5QTlJREFzSUhBZ1BTQjFMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFlnUFNBd0xDQjRJRDBnYUM1c1pXNW5kR2c3SUhZZ1BDQjRPeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJR2hiZGwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNUxtbHpSR2x5WldOMGFXOXVZV3hNYVdkb2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQnBMbVJwY21WamRHbHZibUZzVzJSZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpNWthWEpsWTNScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0J5TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMblJoY21kbGRDNXRZWFJ5YVhoWGIzSnNaQ2tzSUdJdVpHbHlaV04wYVc5dUxuTjFZaWh5S1N3Z1lpNWthWEpsWTNScGIyNHVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLSEFwTENCa0t5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2VTNXBjMU53YjNSTWFXZG9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0JwTG5Od2IzUmJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lpNXdiM05wZEdsdmJpNWhjSEJzZVUxaGRISnBlRFFvY0Nrc0lHSXVaR2x5WldOMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxtMWhkSEpwZUZkdmNteGtLU3dnY2k1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9lUzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCaUxtUnBjbVZqZEdsdmJpNXpkV0lvY2lrc0lHSXVaR2x5WldOMGFXOXVMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWh3S1N3Z2JTc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIa3VhWE5TWldOMFFYSmxZVXhwWjJoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlHa3VjbVZqZEVGeVpXRmJYMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lpNXdiM05wZEdsdmJpNWhjSEJzZVUxaGRISnBlRFFvY0Nrc0lHOHVhV1JsYm5ScGRIa29LU3dnWVM1amIzQjVLSGt1YldGMGNtbDRWMjl5YkdRcExDQmhMbkJ5WlcxMWJIUnBjR3g1S0hBcExDQnZMbVY0ZEhKaFkzUlNiM1JoZEdsdmJpaGhLU3dnWWk1b1lXeG1WMmxrZEdndWMyVjBLSGt1ZDJsa2RHZ2dLaUF1TlN3Z01Dd2dNQ2tzSUdJdWFHRnNaa2hsYVdkb2RDNXpaWFFvTUN3Z2VTNW9aV2xuYUhRZ0tpQXVOU3dnTUNrc0lHSXVhR0ZzWmxkcFpIUm9MbUZ3Y0d4NVRXRjBjbWw0TkNodktTd2dZaTVvWVd4bVNHVnBaMmgwTG1Gd2NHeDVUV0YwY21sNE5DaHZLU3dnWHlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hrdWFYTlFiMmx1ZEV4cFoyaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJR2t1Y0c5cGJuUmJabDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lpNXdiM05wZEdsdmJpNWhjSEJzZVUxaGRISnBlRFFvY0Nrc0lHWXJLenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDVMbWx6U0dWdGFYTndhR1Z5WlV4cFoyaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJR2t1YUdWdGFWdG5YVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0l1WkdseVpXTjBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lpNWthWEpsWTNScGIyNHVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLSEFwTENCbkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lITmxkSFZ3T2lCakxBb2dJQ0FnSUNBZ0lITmxkSFZ3Vm1sbGR6b2diQ3dLSUNBZ0lDQWdJQ0J6ZEdGMFpUb2dhUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJRYUNoek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQnVaWGNnVlRBb2N6RXNJR1VwTENCdUlEMGdXMTBzSUdrZ1BTQmJYVHNLSUNBZ0lHWjFibU4wYVc5dUlISW9LU0I3Q2lBZ0lDQWdJQ0FnYmk1c1pXNW5kR2dnUFNBd0xDQnBMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtIVXBJSHNLSUNBZ0lDQWdJQ0J1TG5CMWMyZ29kU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdktIVXBJSHNLSUNBZ0lDQWdJQ0JwTG5CMWMyZ29kU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktIVXBJSHNLSUNBZ0lDQWdJQ0IwTG5ObGRIVndLRzRzSUhVcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiQ2gxS1NCN0NpQWdJQ0FnSUNBZ2RDNXpaWFIxY0ZacFpYY29iaXdnZFNrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHbHVhWFE2SUhJc0NpQWdJQ0FnSUNBZ2MzUmhkR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR2xuYUhSelFYSnlZWGs2SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQzTkJjbkpoZVRvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdsbmFIUnpPaUIwQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUjFjRXhwWjJoMGN6b2dZeXdLSUNBZ0lDQWdJQ0J6WlhSMWNFeHBaMmgwYzFacFpYYzZJR3dzQ2lBZ0lDQWdJQ0FnY0hWemFFeHBaMmgwT2lCaExBb2dJQ0FnSUNBZ0lIQjFjMmhUYUdGa2IzYzZJRzhLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnUkRBb2N6RXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLSElzSUdFZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwTG1kbGRDaHlLU3dnWXpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnlBOVBUMGdkbTlwWkNBd0lEOGdLR01nUFNCdVpYY2dVR2dvY3pFc0lHVXBMQ0IwTG5ObGRDaHlMQ0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHTUtJQ0FnSUNBZ0lDQmRLU2tnT2lCaElENDlJRzh1YkdWdVozUm9JRDhnS0dNZ1BTQnVaWGNnVUdnb2N6RXNJR1VwTENCdkxuQjFjMmdvWXlrcElEb2dZeUE5SUc5YllWMHNJR003Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtDa2dld29nSUNBZ0lDQWdJSFFnUFNCdVpYY2dWMlZoYTAxaGNEc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCdUxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklHa0tJQ0FnSUgwN0NuMEtkbUZ5SUZGeUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpUV1Z6YUVSbGNIUm9UV0YwWlhKcFlXd2dQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJazFsYzJoRVpYQjBhRTFoZEdWeWFXRnNJaXdnZEdocGN5NWtaWEIwYUZCaFkydHBibWNnUFNCRFppd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1SbGNIUm9VR0ZqYTJsdVp5QTlJR1V1WkdWd2RHaFFZV05yYVc1bkxDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ1pTNWhiSEJvWVUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dhbklnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJDQTlJQ0V3TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUVScGMzUmhibU5sVFdGMFpYSnBZV3dpTENCMGFHbHpMbTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQXdMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ1pTNWhiSEJvWVUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnVGpBZ1BTQmdkbTlwWkNCdFlXbHVLQ2tnZXdvSloyeGZVRzl6YVhScGIyNGdQU0IyWldNMEtDQndiM05wZEdsdmJpd2dNUzR3SUNrN0NuMWdMQ0JQTUNBOUlHQjFibWxtYjNKdElITmhiWEJzWlhJeVJDQnphR0ZrYjNkZmNHRnpjenNLZFc1cFptOXliU0IyWldNeUlISmxjMjlzZFhScGIyNDdDblZ1YVdadmNtMGdabXh2WVhRZ2NtRmthWFZ6T3dvamFXNWpiSFZrWlNBOGNHRmphMmx1Wno0S2RtOXBaQ0J0WVdsdUtDa2dld29KWTI5dWMzUWdabXh2WVhRZ2MyRnRjR3hsY3lBOUlHWnNiMkYwS0NCV1UwMWZVMEZOVUV4RlV5QXBPd29KWm14dllYUWdiV1ZoYmlBOUlEQXVNRHNLQ1dac2IyRjBJSE54ZFdGeVpXUmZiV1ZoYmlBOUlEQXVNRHNLQ1dac2IyRjBJSFYyVTNSeWFXUmxJRDBnYzJGdGNHeGxjeUE4UFNBeExqQWdQeUF3TGpBZ09pQXlMakFnTHlBb0lITmhiWEJzWlhNZ0xTQXhMakFnS1RzS0NXWnNiMkYwSUhWMlUzUmhjblFnUFNCellXMXdiR1Z6SUR3OUlERXVNQ0EvSURBdU1DQTZJQzBnTVM0d093b0pabTl5SUNnZ1pteHZZWFFnYVNBOUlEQXVNRHNnYVNBOElITmhiWEJzWlhNN0lHa2dLeXNnS1NCN0Nna0pabXh2WVhRZ2RYWlBabVp6WlhRZ1BTQjFkbE4wWVhKMElDc2dhU0FxSUhWMlUzUnlhV1JsT3dvSkNTTnBabVJsWmlCSVQxSkpXazlPVkVGTVgxQkJVMU1LQ1FrSmRtVmpNaUJrYVhOMGNtbGlkWFJwYjI0Z1BTQjFibkJoWTJ0U1IwSkJWRzh5U0dGc1ppZ2dkR1Y0ZEhWeVpUSkVLQ0J6YUdGa2IzZGZjR0Z6Y3l3Z0tDQm5iRjlHY21GblEyOXZjbVF1ZUhrZ0t5QjJaV015S0NCMWRrOW1abk5sZEN3Z01DNHdJQ2tnS2lCeVlXUnBkWE1nS1NBdklISmxjMjlzZFhScGIyNGdLU0FwT3dvSkNRbHRaV0Z1SUNzOUlHUnBjM1J5YVdKMWRHbHZiaTU0T3dvSkNRbHpjWFZoY21Wa1gyMWxZVzRnS3owZ1pHbHpkSEpwWW5WMGFXOXVMbmtnS2lCa2FYTjBjbWxpZFhScGIyNHVlU0FySUdScGMzUnlhV0oxZEdsdmJpNTRJQ29nWkdsemRISnBZblYwYVc5dUxuZzdDZ2tKSTJWc2MyVUtDUWtKWm14dllYUWdaR1Z3ZEdnZ1BTQjFibkJoWTJ0U1IwSkJWRzlFWlhCMGFDZ2dkR1Y0ZEhWeVpUSkVLQ0J6YUdGa2IzZGZjR0Z6Y3l3Z0tDQm5iRjlHY21GblEyOXZjbVF1ZUhrZ0t5QjJaV015S0NBd0xqQXNJSFYyVDJabWMyVjBJQ2tnS2lCeVlXUnBkWE1nS1NBdklISmxjMjlzZFhScGIyNGdLU0FwT3dvSkNRbHRaV0Z1SUNzOUlHUmxjSFJvT3dvSkNRbHpjWFZoY21Wa1gyMWxZVzRnS3owZ1pHVndkR2dnS2lCa1pYQjBhRHNLQ1FralpXNWthV1lLQ1gwS0NXMWxZVzRnUFNCdFpXRnVJQzhnYzJGdGNHeGxjenNLQ1hOeGRXRnlaV1JmYldWaGJpQTlJSE54ZFdGeVpXUmZiV1ZoYmlBdklITmhiWEJzWlhNN0NnbG1iRzloZENCemRHUmZaR1YySUQwZ2MzRnlkQ2dnYzNGMVlYSmxaRjl0WldGdUlDMGdiV1ZoYmlBcUlHMWxZVzRnS1RzS0NXZHNYMFp5WVdkRGIyeHZjaUE5SUhCaFkyc3lTR0ZzWmxSdlVrZENRU2dnZG1Wak1pZ2diV1ZoYml3Z2MzUmtYMlJsZGlBcElDazdDbjFnT3dwbWRXNWpkR2x2YmlCR01DaHpNU3dnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCdVpYY2dVSE1zSUdrZ1BTQnVaWGNnV2l3Z2NpQTlJRzVsZHlCYUxDQmhJRDBnYm1WM0lHcGxMQ0J2SUQwZ2JtVjNJRkZ5S0hzS0lDQWdJQ0FnSUNCa1pYQjBhRkJoWTJ0cGJtYzZJRkJtQ2lBZ0lDQjlLU3dnWXlBOUlHNWxkeUJxY2l3Z2JDQTlJSHQ5TENCb0lEMGdkQzV0WVhoVVpYaDBkWEpsVTJsNlpTd2dkU0E5SUhzS0lDQWdJQ0FnSUNCYlFtNWRPaUJHZEN3S0lDQWdJQ0FnSUNCYlJuUmRPaUJDYml3S0lDQWdJQ0FnSUNCYloyNWRPaUJuYmdvZ0lDQWdmU3dnWkNBOUlHNWxkeUJxZENoN0NpQWdJQ0FnSUNBZ1pHVm1hVzVsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JXVTAxZlUwRk5VRXhGVXpvZ09Bb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzWDNCaGMzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhKbGMyOXNkWFJwYjI0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXZ29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQTBDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nVGpBc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUU4d0NpQWdJQ0I5S1N3Z1ppQTlJR1F1WTJ4dmJtVW9LVHNLSUNBZ0lHWXVaR1ZtYVc1bGN5NUlUMUpKV2s5T1ZFRk1YMUJCVTFNZ1BTQXhPd29nSUNBZ2JHVjBJRzBnUFNCdVpYY2dSMlU3Q2lBZ0lDQnRMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWlhRb2JtVjNJRVpzYjJGME16SkJjbkpoZVNoYkNpQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnTGpVc0NpQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0F1TlN3S0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQzQxQ2lBZ0lDQmRLU3dnTXlrcE93b2dJQ0FnYkdWMElGOGdQU0J1WlhjZ1RYUW9iU3dnWkNrc0lHY2dQU0IwYUdsek93b2dJQ0FnZEdocGN5NWxibUZpYkdWa0lEMGdJVEVzSUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6TG01bFpXUnpWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVkSGx3WlNBOUlHTmtPd29nSUNBZ2JHVjBJSEFnUFNCMGFHbHpMblI1Y0dVN0NpQWdJQ0IwYUdsekxuSmxibVJsY2lBOUlHWjFibU4wYVc5dUtHSXNJSGNzSUZJcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWnk1bGJtRmliR1ZrSUQwOVBTQWhNU0I4ZkNCbkxtRjFkRzlWY0dSaGRHVWdQVDA5SUNFeElDWW1JR2N1Ym1WbFpITlZjR1JoZEdVZ1BUMDlJQ0V4SUh4OElHSXViR1Z1WjNSb0lEMDlQU0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElFa2dQU0J6TVM1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1N3Z1RTQTlJSE14TG1kbGRFRmpkR2wyWlVOMVltVkdZV05sS0Nrc0lGUWdQU0J6TVM1blpYUkJZM1JwZG1WTmFYQnRZWEJNWlhabGJDZ3BMQ0JQSUQwZ2N6RXVjM1JoZEdVN0NpQWdJQ0FnSUNBZ1R5NXpaWFJDYkdWdVpHbHVaeWhFYmlrc0lFOHVZblZtWm1WeWN5NWpiMnh2Y2k1elpYUkRiR1ZoY2lneExDQXhMQ0F4TENBeEtTd2dUeTVpZFdabVpYSnpMbVJsY0hSb0xuTmxkRlJsYzNRb0lUQXBMQ0JQTG5ObGRGTmphWE56YjNKVVpYTjBLQ0V4S1RzS0lDQWdJQ0FnSUNCc1pYUWdXU0E5SUhBZ0lUMDlJSEJ1SUNZbUlIUm9hWE11ZEhsd1pTQTlQVDBnY0c0c0lDUWdQU0J3SUQwOVBTQndiaUFtSmlCMGFHbHpMblI1Y0dVZ0lUMDlJSEJ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlNBOUlEQXNJSG9nUFNCaUxteGxibWQwYURzZ1ZTQThJSG83SUZVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnhJRDBnWWx0VlhTd2dTQ0E5SUhFdWMyaGhaRzkzT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvU0NBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVUyaGhaRzkzVFdGd09pSXNJSEVzSUNKb1lYTWdibThnYzJoaFpHOTNMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFZ3VZWFYwYjFWd1pHRjBaU0E5UFQwZ0lURWdKaVlnU0M1dVpXVmtjMVZ3WkdGMFpTQTlQVDBnSVRFcElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0JwTG1OdmNIa29TQzV0WVhCVGFYcGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzVsSUQwZ1NDNW5aWFJHY21GdFpVVjRkR1Z1ZEhNb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa3ViWFZzZEdsd2JIa29ibVVwTENCeUxtTnZjSGtvU0M1dFlYQlRhWHBsS1N3Z0tHa3VlQ0ErSUdnZ2ZId2dhUzU1SUQ0Z2FDa2dKaVlnS0drdWVDQStJR2dnSmlZZ0tISXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2FDQXZJRzVsTG5ncExDQnBMbmdnUFNCeUxuZ2dLaUJ1WlM1NExDQklMbTFoY0ZOcGVtVXVlQ0E5SUhJdWVDa3NJR2t1ZVNBK0lHZ2dKaVlnS0hJdWVTQTlJRTFoZEdndVpteHZiM0lvYUNBdklHNWxMbmtwTENCcExua2dQU0J5TG5rZ0tpQnVaUzU1TENCSUxtMWhjRk5wZW1VdWVTQTlJSEl1ZVNrcExDQklMbTFoY0NBOVBUMGdiblZzYkNCOGZDQlpJRDA5UFNBaE1DQjhmQ0FrSUQwOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0IwYUdsekxuUjVjR1VnSVQwOUlIQnVJRDhnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2djSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRm5SbWxzZEdWeU9pQndkQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUh0OU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1NDNXRZWEFnSVQwOUlHNTFiR3dnSmlZZ1NDNXRZWEF1WkdsemNHOXpaU2dwTENCSUxtMWhjQ0E5SUc1bGR5QnhkQ2hwTG5nc0lHa3VlU3dnU3lrc0lFZ3ViV0Z3TG5SbGVIUjFjbVV1Ym1GdFpTQTlJSEV1Ym1GdFpTQXJJQ0l1YzJoaFpHOTNUV0Z3SWl3Z1NDNWpZVzFsY21FdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhNeExuTmxkRkpsYm1SbGNsUmhjbWRsZENoSUxtMWhjQ2tzSUhNeExtTnNaV0Z5S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdTQzVuWlhSV2FXVjNjRzl5ZEVOdmRXNTBLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1N5QTlJREE3SUVzZ1BDQlhPeUJMS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCSUxtZGxkRlpwWlhkd2IzSjBLRXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1elpYUW9jaTU0SUNvZ1JDNTRMQ0J5TG5rZ0tpQkVMbmtzSUhJdWVDQXFJRVF1ZWl3Z2NpNTVJQ29nUkM1M0tTd2dUeTUyYVdWM2NHOXlkQ2hoS1N3Z1NDNTFjR1JoZEdWTllYUnlhV05sY3loeExDQkxLU3dnYmlBOUlFZ3VaMlYwUm5KMWMzUjFiU2dwTENCNUtIY3NJRklzSUVndVkyRnRaWEpoTENCeExDQjBhR2x6TG5SNWNHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRWd1YVhOUWIybHVkRXhwWjJoMFUyaGhaRzkzSUNFOVBTQWhNQ0FtSmlCMGFHbHpMblI1Y0dVZ1BUMDlJSEJ1SUNZbUlIWW9TQ3dnVWlrc0lFZ3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjQ0E5SUhSb2FYTXVkSGx3WlN3Z1p5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFeExDQnpNUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9TU3dnVFN3Z1ZDazdDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnZGloaUxDQjNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGSWdQU0JsTG5Wd1pHRjBaU2hmS1RzS0lDQWdJQ0FnSUNCa0xtUmxabWx1WlhNdVZsTk5YMU5CVFZCTVJWTWdJVDA5SUdJdVlteDFjbE5oYlhCc1pYTWdKaVlnS0dRdVpHVm1hVzVsY3k1V1UwMWZVMEZOVUV4RlV5QTlJR0l1WW14MWNsTmhiWEJzWlhNc0lHWXVaR1ZtYVc1bGN5NVdVMDFmVTBGTlVFeEZVeUE5SUdJdVlteDFjbE5oYlhCc1pYTXNJR1F1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnWmk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3S1N3Z1lpNXRZWEJRWVhOeklEMDlQU0J1ZFd4c0lDWW1JQ2hpTG0xaGNGQmhjM01nUFNCdVpYY2djWFFvYVM1NExDQnBMbmtwS1N3Z1pDNTFibWxtYjNKdGN5NXphR0ZrYjNkZmNHRnpjeTUyWVd4MVpTQTlJR0l1YldGd0xuUmxlSFIxY21Vc0lHUXVkVzVwWm05eWJYTXVjbVZ6YjJ4MWRHbHZiaTUyWVd4MVpTQTlJR0l1YldGd1UybDZaU3dnWkM1MWJtbG1iM0p0Y3k1eVlXUnBkWE11ZG1Gc2RXVWdQU0JpTG5KaFpHbDFjeXdnY3pFdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0dJdWJXRndVR0Z6Y3lrc0lITXhMbU5zWldGeUtDa3NJSE14TG5KbGJtUmxja0oxWm1abGNrUnBjbVZqZENoM0xDQnVkV3hzTENCU0xDQmtMQ0JmTENCdWRXeHNLU3dnWmk1MWJtbG1iM0p0Y3k1emFHRmtiM2RmY0dGemN5NTJZV3gxWlNBOUlHSXViV0Z3VUdGemN5NTBaWGgwZFhKbExDQm1MblZ1YVdadmNtMXpMbkpsYzI5c2RYUnBiMjR1ZG1Gc2RXVWdQU0JpTG0xaGNGTnBlbVVzSUdZdWRXNXBabTl5YlhNdWNtRmthWFZ6TG5aaGJIVmxJRDBnWWk1eVlXUnBkWE1zSUhNeExuTmxkRkpsYm1SbGNsUmhjbWRsZENoaUxtMWhjQ2tzSUhNeExtTnNaV0Z5S0Nrc0lITXhMbkpsYm1SbGNrSjFabVpsY2tScGNtVmpkQ2gzTENCdWRXeHNMQ0JTTENCbUxDQmZMQ0J1ZFd4c0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGdvWWl3Z2R5d2dVaXdnU1NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JOSUQwZ2JuVnNiQ3dnVkNBOUlGSXVhWE5RYjJsdWRFeHBaMmgwSUQwOVBTQWhNQ0EvSUdJdVkzVnpkRzl0UkdsemRHRnVZMlZOWVhSbGNtbGhiQ0E2SUdJdVkzVnpkRzl0UkdWd2RHaE5ZWFJsY21saGJEc0tJQ0FnSUNBZ0lDQnBaaUFvVkNBaFBUMGdkbTlwWkNBd0tTQk5JRDBnVkRzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoTklEMGdVaTVwYzFCdmFXNTBUR2xuYUhRZ1BUMDlJQ0V3SUQ4Z1l5QTZJRzhzSUhNeExteHZZMkZzUTJ4cGNIQnBibWRGYm1GaWJHVmtJQ1ltSUhjdVkyeHBjRk5vWVdSdmQzTWdQVDA5SUNFd0lDWW1JRUZ5Y21GNUxtbHpRWEp5WVhrb2R5NWpiR2x3Y0dsdVoxQnNZVzVsY3lrZ0ppWWdkeTVqYkdsd2NHbHVaMUJzWVc1bGN5NXNaVzVuZEdnZ0lUMDlJREFnZkh3Z2R5NWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdkeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0FoUFQwZ01DQjhmQ0IzTG1Gc2NHaGhUV0Z3SUNZbUlIY3VZV3h3YUdGVVpYTjBJRDRnTUNCOGZDQjNMbTFoY0NBbUppQjNMbUZzY0doaFZHVnpkQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0JOTG5WMWFXUXNJRmtnUFNCM0xuVjFhV1FzSUNRZ1BTQnNXMDlkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWtJRDA5UFNCMmIybGtJREFnSmlZZ0tDUWdQU0I3ZlN3Z2JGdFBYU0E5SUNRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZTQTlJQ1JiV1YwN0NpQWdJQ0FnSUNBZ0lDQWdJRlVnUFQwOUlIWnZhV1FnTUNBbUppQW9WU0E5SUUwdVkyeHZibVVvS1N3Z0pGdFpYU0E5SUZVcExDQk5JRDBnVlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLRTB1ZG1semFXSnNaU0E5SUhjdWRtbHphV0pzWlN3Z1RTNTNhWEpsWm5KaGJXVWdQU0IzTG5kcGNtVm1jbUZ0WlN3Z1NTQTlQVDBnY0c0Z1B5Qk5Mbk5wWkdVZ1BTQjNMbk5vWVdSdmQxTnBaR1VnSVQwOUlHNTFiR3dnUHlCM0xuTm9ZV1J2ZDFOcFpHVWdPaUIzTG5OcFpHVWdPaUJOTG5OcFpHVWdQU0IzTG5Ob1lXUnZkMU5wWkdVZ0lUMDlJRzUxYkd3Z1B5QjNMbk5vWVdSdmQxTnBaR1VnT2lCMVczY3VjMmxrWlYwc0lFMHVZV3h3YUdGTllYQWdQU0IzTG1Gc2NHaGhUV0Z3TENCTkxtRnNjR2hoVkdWemRDQTlJSGN1WVd4d2FHRlVaWE4wTENCTkxtMWhjQ0E5SUhjdWJXRndMQ0JOTG1Oc2FYQlRhR0ZrYjNkeklEMGdkeTVqYkdsd1UyaGhaRzkzY3l3Z1RTNWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlIY3VZMnhwY0hCcGJtZFFiR0Z1WlhNc0lFMHVZMnhwY0VsdWRHVnljMlZqZEdsdmJpQTlJSGN1WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaXdnVFM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCM0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1RTNWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJSGN1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUUwdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlIY3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dUUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCM0xuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dUUzVzYVc1bGQybGtkR2dnUFNCM0xteHBibVYzYVdSMGFDd2dVaTVwYzFCdmFXNTBUR2xuYUhRZ1BUMDlJQ0V3SUNZbUlFMHVhWE5OWlhOb1JHbHpkR0Z1WTJWTllYUmxjbWxoYkNBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU4Z1BTQnpNUzV3Y205d1pYSjBhV1Z6TG1kbGRDaE5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1R5NXNhV2RvZENBOUlGSTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQk5Pd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZVNoaUxDQjNMQ0JTTENCSkxDQk5LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHSXVkbWx6YVdKc1pTQTlQVDBnSVRFcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCcFppQW9ZaTVzWVhsbGNuTXVkR1Z6ZENoM0xteGhlV1Z5Y3lrZ0ppWWdLR0l1YVhOTlpYTm9JSHg4SUdJdWFYTk1hVzVsSUh4OElHSXVhWE5RYjJsdWRITXBJQ1ltSUNoaUxtTmhjM1JUYUdGa2IzY2dmSHdnWWk1eVpXTmxhWFpsVTJoaFpHOTNJQ1ltSUUwZ1BUMDlJSEJ1S1NBbUppQW9JV0l1Wm5KMWMzUjFiVU4xYkd4bFpDQjhmQ0J1TG1sdWRHVnljMlZqZEhOUFltcGxZM1FvWWlrcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdJdWJXOWtaV3hXYVdWM1RXRjBjbWw0TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vVWk1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVc0lHSXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV1NBOUlHVXVkWEJrWVhSbEtHSXBMQ0FrSUQwZ1lpNXRZWFJsY21saGJEc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvSkNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ1dTNW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhvZ1BTQXdMQ0J4SUQwZ1ZTNXNaVzVuZEdnN0lIb2dQQ0J4T3lCNkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQklJRDBnVlZ0NlhTd2dibVVnUFNBa1cwZ3ViV0YwWlhKcFlXeEpibVJsZUYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c1bElDWW1JRzVsTG5acGMybGliR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0I0S0dJc0lHNWxMQ0JKTENCTktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLRklzSUc1MWJHd3NJRmtzSUZjc0lHSXNJRWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNna0xuWnBjMmxpYkdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ2VDaGlMQ0FrTENCSkxDQk5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE14TG5KbGJtUmxja0oxWm1abGNrUnBjbVZqZENoU0xDQnVkV3hzTENCWkxDQlZMQ0JpTENCdWRXeHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnVHlBOUlHSXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlpJRDBnTUN3Z0pDQTlJRTh1YkdWdVozUm9PeUJaSUR3Z0pEc2dXU3NyS1hrb1QxdFpYU3dnZHl3Z1Vpd2dTU3dnVFNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1FqQW9jekVzSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RDNXBjMWRsWWtkTU1qc0tJQ0FnSUdaMWJtTjBhVzl1SUdrb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZBZ1BTQWhNU3dnWTJVZ1BTQnVaWGNnYW1Vc0lHRmxJRDBnYm5Wc2JDd2daMlVnUFNCdVpYY2dhbVVvTUN3Z01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVFdGemF6b2dablZ1WTNScGIyNG9kV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGbElDRTlQU0IxWlNBbUppQWhVQ0FtSmlBb2N6RXVZMjlzYjNKTllYTnJLSFZsTENCMVpTd2dkV1VzSUhWbEtTd2dZV1VnUFNCMVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEV4dlkydGxaRG9nWm5WdVkzUnBiMjRvZFdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGQWdQU0IxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBRMnhsWVhJNklHWjFibU4wYVc5dUtIVmxMQ0JSTENCaVpTd2dSbVVzSUVGMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJkQ0E5UFQwZ0lUQWdKaVlnS0hWbElDbzlJRVpsTENCUklDbzlJRVpsTENCaVpTQXFQU0JHWlNrc0lHTmxMbk5sZENoMVpTd2dVU3dnWW1Vc0lFWmxLU3dnWjJVdVpYRjFZV3h6S0dObEtTQTlQVDBnSVRFZ0ppWWdLSE14TG1Oc1pXRnlRMjlzYjNJb2RXVXNJRkVzSUdKbExDQkdaU2tzSUdkbExtTnZjSGtvWTJVcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVQ0E5SUNFeExDQmhaU0E5SUc1MWJHd3NJR2RsTG5ObGRDZ3RNU3dnTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY2lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlDRXhMQ0JqWlNBOUlHNTFiR3dzSUdGbElEMGdiblZzYkN3Z1oyVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEZSbGMzUTZJR1oxYm1OMGFXOXVLSFZsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMVpTQS9JRVZsS0hNeExrUkZVRlJJWDFSRlUxUXBJRG9nVkdVb2N6RXVSRVZRVkVoZlZFVlRWQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFMWhjMnM2SUdaMWJtTjBhVzl1S0hWbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpaU0FoUFQwZ2RXVWdKaVlnSVZBZ0ppWWdLSE14TG1SbGNIUm9UV0Z6YXloMVpTa3NJR05sSUQwZ2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSR2RXNWpPaUJtZFc1amRHbHZiaWgxWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0ZsSUNFOVBTQjFaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNoMVpTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYm1ZNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzVrWlhCMGFFWjFibU1vY3pFdVRrVldSVklwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2MyWTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TVM1a1pYQjBhRVoxYm1Nb2N6RXVRVXhYUVZsVEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSEptT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVaR1Z3ZEdoR2RXNWpLSE14TGt4RlUxTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZFc4NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzVrWlhCMGFFWjFibU1vY3pFdVRFVlJWVUZNS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHRm1PZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3pFdVpHVndkR2hHZFc1aktITXhMa1ZSVlVGTUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRzltT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVaR1Z3ZEdoR2RXNWpLSE14TGtkRlVWVkJUQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCalpqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE14TG1SbGNIUm9SblZ1WXloek1TNUhVa1ZCVkVWU0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJR3htT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVaR1Z3ZEdoR2RXNWpLSE14TGs1UFZFVlJWVUZNS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3pFdVpHVndkR2hHZFc1aktITXhMa3hGVVZWQlRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmxJRDBnZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRXh2WTJ0bFpEb2dablZ1WTNScGIyNG9kV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZBZ1BTQjFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFEyeGxZWEk2SUdaMWJtTjBhVzl1S0hWbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5aU0FoUFQwZ2RXVWdKaVlnS0hNeExtTnNaV0Z5UkdWd2RHZ29kV1VwTENCblpTQTlJSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VDQTlJQ0V4TENCalpTQTlJRzUxYkd3c0lHRmxJRDBnYm5Wc2JDd2daMlVnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRkFnUFNBaE1Td2dZMlVnUFNCdWRXeHNMQ0JoWlNBOUlHNTFiR3dzSUdkbElEMGdiblZzYkN3Z2RXVWdQU0J1ZFd4c0xDQlJJRDBnYm5Wc2JDd2dZbVVnUFNCdWRXeHNMQ0JHWlNBOUlHNTFiR3dzSUVGMElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJVWlhOME9pQm1kVzVqZEdsdmJpaDBkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVUNCOGZDQW9kSFFnUHlCRlpTaHpNUzVUVkVWT1EwbE1YMVJGVTFRcElEb2dWR1VvY3pFdVUxUkZUa05KVEY5VVJWTlVLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFMWhjMnM2SUdaMWJtTjBhVzl1S0hSMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpaU0FoUFQwZ2RIUWdKaVlnSVZBZ0ppWWdLSE14TG5OMFpXNWphV3hOWVhOcktIUjBLU3dnWTJVZ1BTQjBkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFWjFibU02SUdaMWJtTjBhVzl1S0hSMExDQjBiaXdnVW5RcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaGhaU0FoUFQwZ2RIUWdmSHdnWjJVZ0lUMDlJSFJ1SUh4OElIVmxJQ0U5UFNCU2RDa2dKaVlnS0hNeExuTjBaVzVqYVd4R2RXNWpLSFIwTENCMGJpd2dVblFwTENCaFpTQTlJSFIwTENCblpTQTlJSFJ1TENCMVpTQTlJRkowS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBUM0E2SUdaMWJtTjBhVzl1S0hSMExDQjBiaXdnVW5RcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaFJJQ0U5UFNCMGRDQjhmQ0JpWlNBaFBUMGdkRzRnZkh3Z1JtVWdJVDA5SUZKMEtTQW1KaUFvY3pFdWMzUmxibU5wYkU5d0tIUjBMQ0IwYml3Z1VuUXBMQ0JSSUQwZ2RIUXNJR0psSUQwZ2RHNHNJRVpsSUQwZ1VuUXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSTWIyTnJaV1E2SUdaMWJtTjBhVzl1S0hSMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlFJRDBnZEhRN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRU5zWldGeU9pQm1kVzVqZEdsdmJpaDBkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVhRZ0lUMDlJSFIwSUNZbUlDaHpNUzVqYkdWaGNsTjBaVzVqYVd3b2RIUXBMQ0JCZENBOUlIUjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVUNBOUlDRXhMQ0JqWlNBOUlHNTFiR3dzSUdGbElEMGdiblZzYkN3Z1oyVWdQU0J1ZFd4c0xDQjFaU0E5SUc1MWJHd3NJRkVnUFNCdWRXeHNMQ0JpWlNBOUlHNTFiR3dzSUVabElEMGdiblZzYkN3Z1FYUWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0J2SUQwZ2JtVjNJR2tzSUdNZ1BTQnVaWGNnY2l3Z2JDQTlJRzVsZHlCaExDQm9JRDBnYm1WM0lGZGxZV3ROWVhBc0lIVWdQU0J1WlhjZ1YyVmhhMDFoY0N3Z1pDQTlJSHQ5TENCbUlEMGdlMzBzSUcwZ1BTQnVaWGNnVjJWaGEwMWhjQ3dnWHlBOUlGdGRMQ0JuSUQwZ2JuVnNiQ3dnY0NBOUlDRXhMQ0IySUQwZ2JuVnNiQ3dnZUNBOUlHNTFiR3dzSUhrZ1BTQnVkV3hzTENCaUlEMGdiblZzYkN3Z2R5QTlJRzUxYkd3c0lGSWdQU0J1ZFd4c0xDQkpJRDBnYm5Wc2JDd2dUU0E5SUNFeExDQlVJRDBnYm5Wc2JDd2dUeUE5SUc1MWJHd3NJRmtnUFNCdWRXeHNMQ0FrSUQwZ2JuVnNiQ3dnVlNBOUlHNTFiR3dzSUhvZ1BTQnpNUzVuWlhSUVlYSmhiV1YwWlhJb2N6RXVUVUZZWDBOUFRVSkpUa1ZFWDFSRldGUlZVa1ZmU1UxQlIwVmZWVTVKVkZNcExDQnhJRDBnSVRFc0lFZ2dQU0F3TENCdVpTQTlJSE14TG1kbGRGQmhjbUZ0WlhSbGNpaHpNUzVXUlZKVFNVOU9LVHNLSUNBZ0lHNWxMbWx1WkdWNFQyWW9JbGRsWWtkTUlpa2dJVDA5SUMweElEOGdLRWdnUFNCd1lYSnpaVVpzYjJGMEtDOWVWMlZpUjB3Z0tGeGtLUzh1WlhobFl5aHVaU2xiTVYwcExDQnhJRDBnU0NBK1BTQXhLU0E2SUc1bExtbHVaR1Y0VDJZb0lrOXdaVzVIVENCRlV5SXBJQ0U5UFNBdE1TQW1KaUFvU0NBOUlIQmhjbk5sUm14dllYUW9MMTVQY0dWdVIwd2dSVk1nS0Z4a0tTOHVaWGhsWXlodVpTbGJNVjBwTENCeElEMGdTQ0ErUFNBeUtUc0tJQ0FnSUd4bGRDQlhJRDBnYm5Wc2JDd2dTeUE5SUh0OUxDQkVJRDBnY3pFdVoyVjBVR0Z5WVcxbGRHVnlLSE14TGxORFNWTlRUMUpmUWs5WUtTd2dSeUE5SUhNeExtZGxkRkJoY21GdFpYUmxjaWh6TVM1V1NVVlhVRTlTVkNrc0lHaGxJRDBnYm1WM0lHcGxLQ2t1Wm5KdmJVRnljbUY1S0VRcExDQm1aU0E5SUc1bGR5QnFaU2dwTG1aeWIyMUJjbkpoZVNoSEtUc0tJQ0FnSUdaMWJtTjBhVzl1SUY5bEtGQXNJR05sTENCaFpTd2daMlVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkV1VnUFNCdVpYY2dWV2x1ZERoQmNuSmhlU2cwS1N3Z1VTQTlJSE14TG1OeVpXRjBaVlJsZUhSMWNtVW9LVHNLSUNBZ0lDQWdJQ0J6TVM1aWFXNWtWR1Y0ZEhWeVpTaFFMQ0JSS1N3Z2N6RXVkR1Y0VUdGeVlXMWxkR1Z5YVNoUUxDQnpNUzVVUlZoVVZWSkZYMDFKVGw5R1NVeFVSVklzSUhNeExrNUZRVkpGVTFRcExDQnpNUzUwWlhoUVlYSmhiV1YwWlhKcEtGQXNJSE14TGxSRldGUlZVa1ZmVFVGSFgwWkpURlJGVWl3Z2N6RXVUa1ZCVWtWVFZDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmlaU0E5SURBN0lHSmxJRHdnWVdVN0lHSmxLeXNwYmlBbUppQW9VQ0E5UFQwZ2N6RXVWRVZZVkZWU1JWOHpSQ0I4ZkNCUUlEMDlQU0J6TVM1VVJWaFVWVkpGWHpKRVgwRlNVa0ZaS1NBL0lITXhMblJsZUVsdFlXZGxNMFFvWTJVc0lEQXNJSE14TGxKSFFrRXNJREVzSURFc0lHZGxMQ0F3TENCek1TNVNSMEpCTENCek1TNVZUbE5KUjA1RlJGOUNXVlJGTENCMVpTa2dPaUJ6TVM1MFpYaEpiV0ZuWlRKRUtHTmxJQ3NnWW1Vc0lEQXNJSE14TGxKSFFrRXNJREVzSURFc0lEQXNJSE14TGxKSFFrRXNJSE14TGxWT1UwbEhUa1ZFWDBKWlZFVXNJSFZsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVVRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0IzWlNBOUlIdDlPd29nSUNBZ2QyVmJjekV1VkVWWVZGVlNSVjh5UkYwZ1BTQmZaU2h6TVM1VVJWaFVWVkpGWHpKRUxDQnpNUzVVUlZoVVZWSkZYekpFTENBeEtTd2dkMlZiY3pFdVZFVllWRlZTUlY5RFZVSkZYMDFCVUYwZ1BTQmZaU2h6TVM1VVJWaFVWVkpGWDBOVlFrVmZUVUZRTENCek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUVgxQlBVMGxVU1ZaRlgxZ3NJRFlwTENCdUlDWW1JQ2gzWlZ0ek1TNVVSVmhVVlZKRlh6SkVYMEZTVWtGWlhTQTlJRjlsS0hNeExsUkZXRlJWVWtWZk1rUmZRVkpTUVZrc0lITXhMbFJGV0ZSVlVrVmZNa1JmUVZKU1FWa3NJREVzSURFcExDQjNaVnR6TVM1VVJWaFVWVkpGWHpORVhTQTlJRjlsS0hNeExsUkZXRlJWVWtWZk0wUXNJSE14TGxSRldGUlZVa1ZmTTBRc0lERXNJREVwS1N3Z2J5NXpaWFJEYkdWaGNpZ3dMQ0F3TENBd0xDQXhLU3dnWXk1elpYUkRiR1ZoY2lneEtTd2diQzV6WlhSRGJHVmhjaWd3S1N3Z1JXVW9jekV1UkVWUVZFaGZWRVZUVkNrc0lHTXVjMlYwUm5WdVl5aDFieWtzSUVvb0lURXBMQ0JUWlNoeWJDa3NJRVZsS0hNeExrTlZURXhmUmtGRFJTa3NJRmdvUkc0cE93b2dJQ0FnWm5WdVkzUnBiMjRnUldVb1VDa2dld29nSUNBZ0lDQWdJR1JiVUYwZ0lUMDlJQ0V3SUNZbUlDaHpNUzVsYm1GaWJHVW9VQ2tzSUdSYlVGMGdQU0FoTUNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlVaU2hRS1NCN0NpQWdJQ0FnSUNBZ1pGdFFYU0FoUFQwZ0lURWdKaVlnS0hNeExtUnBjMkZpYkdVb1VDa3NJR1JiVUYwZ1BTQWhNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCWlpTaFFMQ0JqWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVcxQmRJQ0U5UFNCalpTQS9JQ2h6TVM1aWFXNWtSbkpoYldWaWRXWm1aWElvVUN3Z1kyVXBMQ0JtVzFCZElEMGdZMlVzSUc0Z0ppWWdLRkFnUFQwOUlITXhMa1JTUVZkZlJsSkJUVVZDVlVaR1JWSWdKaVlnS0daYmN6RXVSbEpCVFVWQ1ZVWkdSVkpkSUQwZ1kyVXBMQ0JRSUQwOVBTQnpNUzVHVWtGTlJVSlZSa1pGVWlBbUppQW9abHR6TVM1RVVrRlhYMFpTUVUxRlFsVkdSa1ZTWFNBOUlHTmxLU2tzSUNFd0tTQTZJQ0V4T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FYUW9VQ3dnWTJVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWVdVZ1BTQmZMQ0JuWlNBOUlDRXhPd29nSUNBZ0lDQWdJR2xtSUNoUUtTQnBaaUFvWVdVZ1BTQnRMbWRsZENoalpTa3NJR0ZsSUQwOVBTQjJiMmxrSURBZ0ppWWdLR0ZsSUQwZ1cxMHNJRzB1YzJWMEtHTmxMQ0JoWlNrcExDQlFMbWx6VjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhWbElEMGdVQzUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZV1V1YkdWdVozUm9JQ0U5UFNCMVpTNXNaVzVuZEdnZ2ZId2dZV1ZiTUYwZ0lUMDlJSE14TGtOUFRFOVNYMEZVVkVGRFNFMUZUbFF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZFZ1BTQXdMQ0JpWlNBOUlIVmxMbXhsYm1kMGFEc2dVU0E4SUdKbE95QlJLeXNwWVdWYlVWMGdQU0J6TVM1RFQweFBVbDlCVkZSQlEwaE5SVTVVTUNBcklGRTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhaUzVzWlc1bmRHZ2dQU0IxWlM1c1pXNW5kR2dzSUdkbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1lXVmJNRjBnSVQwOUlITXhMa05QVEU5U1gwRlVWRUZEU0UxRlRsUXdJQ1ltSUNoaFpWc3dYU0E5SUhNeExrTlBURTlTWDBGVVZFRkRTRTFGVGxRd0xDQm5aU0E5SUNFd0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdGbFd6QmRJQ0U5UFNCek1TNUNRVU5MSUNZbUlDaGhaVnN3WFNBOUlITXhMa0pCUTBzc0lHZGxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHZGxJQ1ltSUNoMExtbHpWMlZpUjB3eUlEOGdjekV1WkhKaGQwSjFabVpsY25Nb1lXVXBJRG9nWlM1blpYUW9JbGRGUWtkTVgyUnlZWGRmWW5WbVptVnljeUlwTG1SeVlYZENkV1ptWlhKelYwVkNSMHdvWVdVcEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRU5sS0ZBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1p5QWhQVDBnVUNBL0lDaHpNUzUxYzJWUWNtOW5jbUZ0S0ZBcExDQm5JRDBnVUN3Z0lUQXBJRG9nSVRFN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnVENBOUlIc0tJQ0FnSUNBZ0lDQmJRbWxkT2lCek1TNUdWVTVEWDBGRVJDd0tJQ0FnSUNBZ0lDQmJXR1JkT2lCek1TNUdWVTVEWDFOVlFsUlNRVU5VTEFvZ0lDQWdJQ0FnSUZ0eFpGMDZJSE14TGtaVlRrTmZVa1ZXUlZKVFJWOVRWVUpVVWtGRFZBb2dJQ0FnZlRzS0lDQWdJR2xtSUNodUtTQk1XMnhzWFNBOUlITXhMazFKVGl3Z1RGdG9iRjBnUFNCek1TNU5RVmc3Q2lBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNCc1pYUWdVQ0E5SUdVdVoyVjBLQ0pGV0ZSZllteGxibVJmYldsdWJXRjRJaWs3Q2lBZ0lDQWdJQ0FnVUNBaFBUMGdiblZzYkNBbUppQW9URnRzYkYwZ1BTQlFMazFKVGw5RldGUXNJRXhiYUd4ZElEMGdVQzVOUVZoZlJWaFVLVHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQnZaU0E5SUhzS0lDQWdJQ0FnSUNCYldXUmRPaUJ6TVM1YVJWSlBMQW9nSUNBZ0lDQWdJRnRhWkYwNklITXhMazlPUlN3S0lDQWdJQ0FnSUNCYlNtUmRPaUJ6TVM1VFVrTmZRMDlNVDFJc0NpQWdJQ0FnSUNBZ1cyeGtYVG9nY3pFdVUxSkRYMEZNVUVoQkxBb2dJQ0FnSUNBZ0lGdDBabDA2SUhNeExsTlNRMTlCVEZCSVFWOVRRVlJWVWtGVVJTd0tJQ0FnSUNBZ0lDQmJhbVJkT2lCek1TNUVVMVJmUTA5TVQxSXNDaUFnSUNBZ0lDQWdXMHRrWFRvZ2N6RXVSRk5VWDBGTVVFaEJMQW9nSUNBZ0lDQWdJRnNrWkYwNklITXhMazlPUlY5TlNVNVZVMTlUVWtOZlEwOU1UMUlzQ2lBZ0lDQWdJQ0FnVzJoa1hUb2djekV1VDA1RlgwMUpUbFZUWDFOU1ExOUJURkJJUVN3S0lDQWdJQ0FnSUNCYlpXWmRPaUJ6TVM1UFRrVmZUVWxPVlZOZlJGTlVYME5QVEU5U0xBb2dJQ0FnSUNBZ0lGdFJaRjA2SUhNeExrOU9SVjlOU1U1VlUxOUVVMVJmUVV4UVNFRUtJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJZS0ZBc0lHTmxMQ0JoWlN3Z1oyVXNJSFZsTENCUkxDQmlaU3dnUm1VcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVUNBOVBUMGdSRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjQ0E5UFQwZ0lUQWdKaVlnS0ZSbEtITXhMa0pNUlU1RUtTd2djQ0E5SUNFeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2NDQTlQVDBnSVRFZ0ppWWdLRVZsS0hNeExrSk1SVTVFS1N3Z2NDQTlJQ0V3S1N3Z1VDQWhQVDBnVjJRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGQWdJVDA5SUhZZ2ZId2dSbVVnSVQwOUlFMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnb2VDQWhQVDBnUW1rZ2ZId2dkeUFoUFQwZ1Fta3BJQ1ltSUNoek1TNWliR1Z1WkVWeGRXRjBhVzl1S0hNeExrWlZUa05mUVVSRUtTd2dlQ0E5SUVKcExDQjNJRDBnUW1rcExDQkdaU2tnYzNkcGRHTm9LRkFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVjJrNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNeExtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtITXhMazlPUlN3Z2N6RXVUMDVGWDAxSlRsVlRYMU5TUTE5QlRGQklRU3dnY3pFdVQwNUZMQ0J6TVM1UFRrVmZUVWxPVlZOZlUxSkRYMEZNVUVoQktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JoYkRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3pFdVlteGxibVJHZFc1aktITXhMazlPUlN3Z2N6RXVUMDVGS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQnZiRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjekV1WW14bGJtUkdkVzVqVTJWd1lYSmhkR1VvY3pFdVdrVlNUeXdnY3pFdVQwNUZYMDFKVGxWVFgxTlNRMTlEVDB4UFVpd2djekV1V2tWU1R5d2djekV1VDA1RktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JqYkRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3pFdVlteGxibVJHZFc1alUyVndZWEpoZEdVb2N6RXVXa1ZTVHl3Z2N6RXVVMUpEWDBOUFRFOVNMQ0J6TVM1YVJWSlBMQ0J6TVM1VFVrTmZRVXhRU0VFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pQkpiblpoYkdsa0lHSnNaVzVrYVc1bk9pQWlMQ0JRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhOM2FYUmphQ2hRS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZkcE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCek1TNWliR1Z1WkVaMWJtTlRaWEJoY21GMFpTaHpNUzVUVWtOZlFVeFFTRUVzSUhNeExrOU9SVjlOU1U1VlUxOVRVa05mUVV4UVNFRXNJSE14TGs5T1JTd2djekV1VDA1RlgwMUpUbFZUWDFOU1ExOUJURkJJUVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdZV3c2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE14TG1Kc1pXNWtSblZ1WXloek1TNVRVa05mUVV4UVNFRXNJSE14TGs5T1JTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYjJ3NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNeExtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtITXhMbHBGVWs4c0lITXhMazlPUlY5TlNVNVZVMTlUVWtOZlEwOU1UMUlzSUhNeExscEZVazhzSUhNeExrOU9SU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1kydzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXhMbUpzWlc1a1JuVnVZeWh6TVM1YVJWSlBMQ0J6TVM1VFVrTmZRMDlNVDFJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pQkpiblpoYkdsa0lHSnNaVzVrYVc1bk9pQWlMQ0JRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVJRDBnYm5Wc2JDd2dZaUE5SUc1MWJHd3NJRklnUFNCdWRXeHNMQ0JKSUQwZ2JuVnNiQ3dnZGlBOUlGQXNJRTBnUFNCR1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIVmxJRDBnZFdVZ2ZId2dZMlVzSUZFZ1BTQlJJSHg4SUdGbExDQmlaU0E5SUdKbElIeDhJR2RsTENBb1kyVWdJVDA5SUhnZ2ZId2dkV1VnSVQwOUlIY3BJQ1ltSUNoek1TNWliR1Z1WkVWeGRXRjBhVzl1VTJWd1lYSmhkR1VvVEZ0alpWMHNJRXhiZFdWZEtTd2dlQ0E5SUdObExDQjNJRDBnZFdVcExDQW9ZV1VnSVQwOUlIa2dmSHdnWjJVZ0lUMDlJR0lnZkh3Z1VTQWhQVDBnVWlCOGZDQmlaU0FoUFQwZ1NTa2dKaVlnS0hNeExtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtHOWxXMkZsWFN3Z2IyVmJaMlZkTENCdlpWdFJYU3dnYjJWYlltVmRLU3dnZVNBOUlHRmxMQ0JpSUQwZ1oyVXNJRklnUFNCUkxDQkpJRDBnWW1VcExDQjJJRDBnVUN3Z1RTQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FXVW9VQ3dnWTJVcElIc0tJQ0FnSUNBZ0lDQlFMbk5wWkdVZ1BUMDlJR2R1SUQ4Z1ZHVW9jekV1UTFWTVRGOUdRVU5GS1NBNklFVmxLSE14TGtOVlRFeGZSa0ZEUlNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0ZsSUQwZ1VDNXphV1JsSUQwOVBTQkdkRHNLSUNBZ0lDQWdJQ0JqWlNBbUppQW9ZV1VnUFNBaFlXVXBMQ0JLS0dGbEtTd2dVQzVpYkdWdVpHbHVaeUE5UFQwZ1Yya2dKaVlnVUM1MGNtRnVjM0JoY21WdWRDQTlQVDBnSVRFZ1B5QllLRVJ1S1NBNklGZ29VQzVpYkdWdVpHbHVaeXdnVUM1aWJHVnVaRVZ4ZFdGMGFXOXVMQ0JRTG1Kc1pXNWtVM0pqTENCUUxtSnNaVzVrUkhOMExDQlFMbUpzWlc1a1JYRjFZWFJwYjI1QmJIQm9ZU3dnVUM1aWJHVnVaRk55WTBGc2NHaGhMQ0JRTG1Kc1pXNWtSSE4wUVd4d2FHRXNJRkF1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoS1N3Z1l5NXpaWFJHZFc1aktGQXVaR1Z3ZEdoR2RXNWpLU3dnWXk1elpYUlVaWE4wS0ZBdVpHVndkR2hVWlhOMEtTd2dZeTV6WlhSTllYTnJLRkF1WkdWd2RHaFhjbWwwWlNrc0lHOHVjMlYwVFdGemF5aFFMbU52Ykc5eVYzSnBkR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQm5aU0E5SUZBdWMzUmxibU5wYkZkeWFYUmxPd29nSUNBZ0lDQWdJR3d1YzJWMFZHVnpkQ2huWlNrc0lHZGxJQ1ltSUNoc0xuTmxkRTFoYzJzb1VDNXpkR1Z1WTJsc1YzSnBkR1ZOWVhOcktTd2diQzV6WlhSR2RXNWpLRkF1YzNSbGJtTnBiRVoxYm1Nc0lGQXVjM1JsYm1OcGJGSmxaaXdnVUM1emRHVnVZMmxzUm5WdVkwMWhjMnNwTENCc0xuTmxkRTl3S0ZBdWMzUmxibU5wYkVaaGFXd3NJRkF1YzNSbGJtTnBiRnBHWVdsc0xDQlFMbk4wWlc1amFXeGFVR0Z6Y3lrcExDQjVaU2hRTG5CdmJIbG5iMjVQWm1aelpYUXNJRkF1Y0c5c2VXZHZiazltWm5ObGRFWmhZM1J2Y2l3Z1VDNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITXBMQ0JRTG1Gc2NHaGhWRzlEYjNabGNtRm5aU0E5UFQwZ0lUQWdQeUJGWlNoek1TNVRRVTFRVEVWZlFVeFFTRUZmVkU5ZlEwOVdSVkpCUjBVcElEb2dWR1VvY3pFdVUwRk5VRXhGWDBGTVVFaEJYMVJQWDBOUFZrVlNRVWRGS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFb29VQ2tnZXdvZ0lDQWdJQ0FnSUZRZ0lUMDlJRkFnSmlZZ0tGQWdQeUJ6TVM1bWNtOXVkRVpoWTJVb2N6RXVRMWNwSURvZ2N6RXVabkp2Ym5SR1lXTmxLSE14TGtORFZ5a3NJRlFnUFNCUUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRk5sS0ZBcElIc0tJQ0FnSUNBZ0lDQlFJQ0U5UFNCclpDQS9JQ2hGWlNoek1TNURWVXhNWDBaQlEwVXBMQ0JRSUNFOVBTQlBJQ1ltSUNoUUlEMDlQU0J5YkNBL0lITXhMbU4xYkd4R1lXTmxLSE14TGtKQlEwc3BJRG9nVUNBOVBUMGdTR1FnUHlCek1TNWpkV3hzUm1GalpTaHpNUzVHVWs5T1ZDa2dPaUJ6TVM1amRXeHNSbUZqWlNoek1TNUdVazlPVkY5QlRrUmZRa0ZEU3lrcEtTQTZJRlJsS0hNeExrTlZURXhmUmtGRFJTa3NJRThnUFNCUU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiV1VvVUNrZ2V3b2dJQ0FnSUNBZ0lGQWdJVDA5SUZrZ0ppWWdLSEVnSmlZZ2N6RXViR2x1WlZkcFpIUm9LRkFwTENCWklEMGdVQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNVpTaFFMQ0JqWlN3Z1lXVXBJSHNLSUNBZ0lDQWdJQ0JRSUQ4Z0tFVmxLSE14TGxCUFRGbEhUMDVmVDBaR1UwVlVYMFpKVEV3cExDQW9KQ0FoUFQwZ1kyVWdmSHdnVlNBaFBUMGdZV1VwSUNZbUlDaHpNUzV3YjJ4NVoyOXVUMlptYzJWMEtHTmxMQ0JoWlNrc0lDUWdQU0JqWlN3Z1ZTQTlJR0ZsS1NrZ09pQlVaU2h6TVM1UVQweFpSMDlPWDA5R1JsTkZWRjlHU1V4TUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRTVsS0ZBcElIc0tJQ0FnSUNBZ0lDQlFJRDhnUldVb2N6RXVVME5KVTFOUFVsOVVSVk5VS1NBNklGUmxLSE14TGxORFNWTlRUMUpmVkVWVFZDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ4WlNoUUtTQjdDaUFnSUNBZ0lDQWdVQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaFFJRDBnY3pFdVZFVllWRlZTUlRBZ0t5QjZJQzBnTVNrc0lGY2dJVDA5SUZBZ0ppWWdLSE14TG1GamRHbDJaVlJsZUhSMWNtVW9VQ2tzSUZjZ1BTQlFLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhKMEtGQXNJR05sTENCaFpTa2dld29nSUNBZ0lDQWdJR0ZsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRmNnUFQwOUlHNTFiR3dnUHlCaFpTQTlJSE14TGxSRldGUlZVa1V3SUNzZ2VpQXRJREVnT2lCaFpTQTlJRmNwT3dvZ0lDQWdJQ0FnSUd4bGRDQm5aU0E5SUV0YllXVmRPd29nSUNBZ0lDQWdJR2RsSUQwOVBTQjJiMmxrSURBZ0ppWWdLR2RsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQjJiMmxrSURBc0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVTZJSFp2YVdRZ01Bb2dJQ0FnSUNBZ0lIMHNJRXRiWVdWZElEMGdaMlVwTENBb1oyVXVkSGx3WlNBaFBUMGdVQ0I4ZkNCblpTNTBaWGgwZFhKbElDRTlQU0JqWlNrZ0ppWWdLRmNnSVQwOUlHRmxJQ1ltSUNoek1TNWhZM1JwZG1WVVpYaDBkWEpsS0dGbEtTd2dWeUE5SUdGbEtTd2djekV1WW1sdVpGUmxlSFIxY21Vb1VDd2dZMlVnZkh3Z2QyVmJVRjBwTENCblpTNTBlWEJsSUQwZ1VDd2daMlV1ZEdWNGRIVnlaU0E5SUdObEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRU1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCTFcxZGRPd29nSUNBZ0lDQWdJRkFnSVQwOUlIWnZhV1FnTUNBbUppQlFMblI1Y0dVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY3pFdVltbHVaRlJsZUhSMWNtVW9VQzUwZVhCbExDQnVkV3hzS1N3Z1VDNTBlWEJsSUQwZ2RtOXBaQ0F3TENCUUxuUmxlSFIxY21VZ1BTQjJiMmxrSURBcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdVeWdwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCek1TNWpiMjF3Y21WemMyVmtWR1Y0U1cxaFoyVXlSQzVoY0hCc2VTaHpNU3dnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoUUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRaWdwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCek1TNWpiMjF3Y21WemMyVmtWR1Y0U1cxaFoyVXpSQzVoY0hCc2VTaHpNU3dnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoUUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaV1VvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVkR1Y0VTNWaVNXMWhaMlV5UkM1aGNIQnNlU2h6TVN3Z1lYSm5kVzFsYm5SektUc0tJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaFFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVUzUmhkR1U2SWl3Z1VDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYWlncElIc0tJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpNUzUwWlhoVGRXSkpiV0ZuWlRORUxtRndjR3g1S0hNeExDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRkFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlFLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMFpTZ3BJSHNLSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6TVM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQzVoY0hCc2VTaHpNU3dnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoUUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdUV1VvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N6RXVZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTTBRdVlYQndiSGtvY3pFc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9VQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lJc0lGQXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhKbEtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE14TG5SbGVGTjBiM0poWjJVeVJDNWhjSEJzZVNoek1Td2dZWEpuZFcxbGJuUnpLVHNLSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hRS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklpd2dVQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1pHVW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3pFdWRHVjRVM1J2Y21GblpUTkVMbUZ3Y0d4NUtITXhMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JRS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQk1aU2dwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCek1TNTBaWGhKYldGblpUSkVMbUZ3Y0d4NUtITXhMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JRS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmFaU2dwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCek1TNTBaWGhKYldGblpUTkVMbUZ3Y0d4NUtITXhMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JRS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnpaU2hRS1NCN0NpQWdJQ0FnSUNBZ2FHVXVaWEYxWVd4ektGQXBJRDA5UFNBaE1TQW1KaUFvY3pFdWMyTnBjM052Y2loUUxuZ3NJRkF1ZVN3Z1VDNTZMQ0JRTG5jcExDQm9aUzVqYjNCNUtGQXBLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUNSbEtGQXBJSHNLSUNBZ0lDQWdJQ0JtWlM1bGNYVmhiSE1vVUNrZ1BUMDlJQ0V4SUNZbUlDaHpNUzUyYVdWM2NHOXlkQ2hRTG5nc0lGQXVlU3dnVUM1NkxDQlFMbmNwTENCbVpTNWpiM0I1S0ZBcEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRTlsS0ZBc0lHTmxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRmxJRDBnZFM1blpYUW9ZMlVwT3dvZ0lDQWdJQ0FnSUdGbElEMDlQU0IyYjJsa0lEQWdKaVlnS0dGbElEMGdibVYzSUZkbFlXdE5ZWEFzSUhVdWMyVjBLR05sTENCaFpTa3BPd29nSUNBZ0lDQWdJR3hsZENCblpTQTlJR0ZsTG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0JuWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2huWlNBOUlITXhMbWRsZEZWdWFXWnZjbTFDYkc5amEwbHVaR1Y0S0dObExDQlFMbTVoYldVcExDQmhaUzV6WlhRb1VDd2daMlVwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFbGxLRkFzSUdObEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdkbElEMGdkUzVuWlhRb1kyVXBMbWRsZENoUUtUc0tJQ0FnSUNBZ0lDQm9MbWRsZENoalpTa2dJVDA5SUdkbElDWW1JQ2h6TVM1MWJtbG1iM0p0UW14dlkydENhVzVrYVc1bktHTmxMQ0JuWlN3Z1VDNWZYMkpwYm1ScGJtZFFiMmx1ZEVsdVpHVjRLU3dnYUM1elpYUW9ZMlVzSUdkbEtTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJTWlNncElIc0tJQ0FnSUNBZ0lDQnpNUzVrYVhOaFlteGxLSE14TGtKTVJVNUVLU3dnY3pFdVpHbHpZV0pzWlNoek1TNURWVXhNWDBaQlEwVXBMQ0J6TVM1a2FYTmhZbXhsS0hNeExrUkZVRlJJWDFSRlUxUXBMQ0J6TVM1a2FYTmhZbXhsS0hNeExsQlBURmxIVDA1ZlQwWkdVMFZVWDBaSlRFd3BMQ0J6TVM1a2FYTmhZbXhsS0hNeExsTkRTVk5UVDFKZlZFVlRWQ2tzSUhNeExtUnBjMkZpYkdVb2N6RXVVMVJGVGtOSlRGOVVSVk5VS1N3Z2N6RXVaR2x6WVdKc1pTaHpNUzVUUVUxUVRFVmZRVXhRU0VGZlZFOWZRMDlXUlZKQlIwVXBMQ0J6TVM1aWJHVnVaRVZ4ZFdGMGFXOXVLSE14TGtaVlRrTmZRVVJFS1N3Z2N6RXVZbXhsYm1SR2RXNWpLSE14TGs5T1JTd2djekV1V2tWU1R5a3NJSE14TG1Kc1pXNWtSblZ1WTFObGNHRnlZWFJsS0hNeExrOU9SU3dnY3pFdVdrVlNUeXdnY3pFdVQwNUZMQ0J6TVM1YVJWSlBLU3dnY3pFdVkyOXNiM0pOWVhOcktDRXdMQ0FoTUN3Z0lUQXNJQ0V3S1N3Z2N6RXVZMnhsWVhKRGIyeHZjaWd3TENBd0xDQXdMQ0F3S1N3Z2N6RXVaR1Z3ZEdoTllYTnJLQ0V3S1N3Z2N6RXVaR1Z3ZEdoR2RXNWpLSE14TGt4RlUxTXBMQ0J6TVM1amJHVmhja1JsY0hSb0tERXBMQ0J6TVM1emRHVnVZMmxzVFdGemF5ZzBNamswT1RZM01qazFLU3dnY3pFdWMzUmxibU5wYkVaMWJtTW9jekV1UVV4WFFWbFRMQ0F3TENBME1qazBPVFkzTWprMUtTd2djekV1YzNSbGJtTnBiRTl3S0hNeExrdEZSVkFzSUhNeExrdEZSVkFzSUhNeExrdEZSVkFwTENCek1TNWpiR1ZoY2xOMFpXNWphV3dvTUNrc0lITXhMbU4xYkd4R1lXTmxLSE14TGtKQlEwc3BMQ0J6TVM1bWNtOXVkRVpoWTJVb2N6RXVRME5YS1N3Z2N6RXVjRzlzZVdkdmJrOW1abk5sZENnd0xDQXdLU3dnY3pFdVlXTjBhWFpsVkdWNGRIVnlaU2h6TVM1VVJWaFVWVkpGTUNrc0lITXhMbUpwYm1SR2NtRnRaV0oxWm1abGNpaHpNUzVHVWtGTlJVSlZSa1pGVWl3Z2JuVnNiQ2tzSUc0Z1BUMDlJQ0V3SUNZbUlDaHpNUzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9jekV1UkZKQlYxOUdVa0ZOUlVKVlJrWkZVaXdnYm5Wc2JDa3NJSE14TG1KcGJtUkdjbUZ0WldKMVptWmxjaWh6TVM1U1JVRkVYMFpTUVUxRlFsVkdSa1ZTTENCdWRXeHNLU2tzSUhNeExuVnpaVkJ5YjJkeVlXMG9iblZzYkNrc0lITXhMbXhwYm1WWGFXUjBhQ2d4S1N3Z2N6RXVjMk5wYzNOdmNpZ3dMQ0F3TENCek1TNWpZVzUyWVhNdWQybGtkR2dzSUhNeExtTmhiblpoY3k1b1pXbG5hSFFwTENCek1TNTJhV1YzY0c5eWRDZ3dMQ0F3TENCek1TNWpZVzUyWVhNdWQybGtkR2dzSUhNeExtTmhiblpoY3k1b1pXbG5hSFFwTENCa0lEMGdlMzBzSUZjZ1BTQnVkV3hzTENCTElEMGdlMzBzSUdZZ1BTQjdmU3dnYlNBOUlHNWxkeUJYWldGclRXRndMQ0JmSUQwZ1cxMHNJR2NnUFNCdWRXeHNMQ0J3SUQwZ0lURXNJSFlnUFNCdWRXeHNMQ0I0SUQwZ2JuVnNiQ3dnZVNBOUlHNTFiR3dzSUdJZ1BTQnVkV3hzTENCM0lEMGdiblZzYkN3Z1VpQTlJRzUxYkd3c0lFa2dQU0J1ZFd4c0xDQk5JRDBnSVRFc0lGUWdQU0J1ZFd4c0xDQlBJRDBnYm5Wc2JDd2dXU0E5SUc1MWJHd3NJQ1FnUFNCdWRXeHNMQ0JWSUQwZ2JuVnNiQ3dnYUdVdWMyVjBLREFzSURBc0lITXhMbU5oYm5aaGN5NTNhV1IwYUN3Z2N6RXVZMkZ1ZG1GekxtaGxhV2RvZENrc0lHWmxMbk5sZENnd0xDQXdMQ0J6TVM1allXNTJZWE11ZDJsa2RHZ3NJSE14TG1OaGJuWmhjeTVvWldsbmFIUXBMQ0J2TG5KbGMyVjBLQ2tzSUdNdWNtVnpaWFFvS1N3Z2JDNXlaWE5sZENncE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQmlkV1ptWlhKek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJ2TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYURvZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSbGJtTnBiRG9nYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pXNWhZbXhsT2lCRlpTd0tJQ0FnSUNBZ0lDQmthWE5oWW14bE9pQlVaU3dLSUNBZ0lDQWdJQ0JpYVc1a1JuSmhiV1ZpZFdabVpYSTZJRmxsTEFvZ0lDQWdJQ0FnSUdSeVlYZENkV1ptWlhKek9pQnBkQ3dLSUNBZ0lDQWdJQ0IxYzJWUWNtOW5jbUZ0T2lCRFpTd0tJQ0FnSUNBZ0lDQnpaWFJDYkdWdVpHbHVaem9nV0N3S0lDQWdJQ0FnSUNCelpYUk5ZWFJsY21saGJEb2dhV1VzQ2lBZ0lDQWdJQ0FnYzJWMFJteHBjRk5wWkdWa09pQktMQW9nSUNBZ0lDQWdJSE5sZEVOMWJHeEdZV05sT2lCVFpTd0tJQ0FnSUNBZ0lDQnpaWFJNYVc1bFYybGtkR2c2SUcxbExBb2dJQ0FnSUNBZ0lITmxkRkJ2YkhsbmIyNVBabVp6WlhRNklIbGxMQW9nSUNBZ0lDQWdJSE5sZEZOamFYTnpiM0pVWlhOME9pQk9aU3dLSUNBZ0lDQWdJQ0JoWTNScGRtVlVaWGgwZFhKbE9pQnhaU3dLSUNBZ0lDQWdJQ0JpYVc1a1ZHVjRkSFZ5WlRvZ2NuUXNDaUFnSUNBZ0lDQWdkVzVpYVc1a1ZHVjRkSFZ5WlRvZ1F5d0tJQ0FnSUNBZ0lDQmpiMjF3Y21WemMyVmtWR1Y0U1cxaFoyVXlSRG9nVXl3S0lDQWdJQ0FnSUNCamIyMXdjbVZ6YzJWa1ZHVjRTVzFoWjJVelJEb2dRaXdLSUNBZ0lDQWdJQ0IwWlhoSmJXRm5aVEpFT2lCTVpTd0tJQ0FnSUNBZ0lDQjBaWGhKYldGblpUTkVPaUJhWlN3S0lDQWdJQ0FnSUNCMWNHUmhkR1ZWUWs5TllYQndhVzVuT2lCUFpTd0tJQ0FnSUNBZ0lDQjFibWxtYjNKdFFteHZZMnRDYVc1a2FXNW5PaUJKWlN3S0lDQWdJQ0FnSUNCMFpYaFRkRzl5WVdkbE1rUTZJSEpsTEFvZ0lDQWdJQ0FnSUhSbGVGTjBiM0poWjJVelJEb2daR1VzQ2lBZ0lDQWdJQ0FnZEdWNFUzVmlTVzFoWjJVeVJEb2daV1VzQ2lBZ0lDQWdJQ0FnZEdWNFUzVmlTVzFoWjJVelJEb2dhaXdLSUNBZ0lDQWdJQ0JqYjIxd2NtVnpjMlZrVkdWNFUzVmlTVzFoWjJVeVJEb2dkR1VzQ2lBZ0lDQWdJQ0FnWTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE0wUTZJRTFsTEFvZ0lDQWdJQ0FnSUhOamFYTnpiM0k2SUhObExBb2dJQ0FnSUNBZ0lIWnBaWGR3YjNKME9pQWtaU3dLSUNBZ0lDQWdJQ0J5WlhObGREb2dVbVVLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnZWpBb2N6RXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXBJSHNLSUNBZ0lHeGxkQ0J2SUQwZ2FTNXBjMWRsWWtkTU1pd2dZeUE5SUdrdWJXRjRWR1Y0ZEhWeVpYTXNJR3dnUFNCcExtMWhlRU4xWW1WdFlYQlRhWHBsTENCb0lEMGdhUzV0WVhoVVpYaDBkWEpsVTJsNlpTd2dkU0E5SUdrdWJXRjRVMkZ0Y0d4bGN5d2daQ0E5SUdVdWFHRnpLQ0pYUlVKSFRGOXRkV3gwYVhOaGJYQnNaV1JmY21WdVpHVnlYM1J2WDNSbGVIUjFjbVVpS1NBL0lHVXVaMlYwS0NKWFJVSkhURjl0ZFd4MGFYTmhiWEJzWldSZmNtVnVaR1Z5WDNSdlgzUmxlSFIxY21VaUtTQTZJRzUxYkd3c0lHWWdQU0IwZVhCbGIyWWdibUYyYVdkaGRHOXlJRDRnSW5VaUlEOGdJVEVnT2lBdlQyTjFiSFZ6UW5KdmQzTmxjaTluTG5SbGMzUW9ibUYyYVdkaGRHOXlMblZ6WlhKQloyVnVkQ2tzSUcwZ1BTQnVaWGNnVjJWaGEwMWhjQ3dnWHl3Z1p5QTlJRzVsZHlCWFpXRnJUV0Z3TENCd0lEMGdJVEU3Q2lBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUhBZ1BTQjBlWEJsYjJZZ1QyWm1jMk55WldWdVEyRnVkbUZ6SUR3Z0luVWlJQ1ltSUc1bGR5QlBabVp6WTNKbFpXNURZVzUyWVhNb01Td2dNU2t1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLU0FoUFQwZ2JuVnNiRHNLSUNBZ0lIMGdZMkYwWTJnZ0lIdDlDaUFnSUNCbWRXNWpkR2x2YmlCMktFTXNJRk1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0NBL0lHNWxkeUJQWm1aelkzSmxaVzVEWVc1MllYTW9ReXdnVXlrZ09pQjNjeWdpWTJGdWRtRnpJaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNEtFTXNJRk1zSUVJc0lHVmxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHb2dQU0F4T3dvZ0lDQWdJQ0FnSUdsbUlDZ29ReTUzYVdSMGFDQStJR1ZsSUh4OElFTXVhR1ZwWjJoMElENGdaV1VwSUNZbUlDaHFJRDBnWldVZ0x5Qk5ZWFJvTG0xaGVDaERMbmRwWkhSb0xDQkRMbWhsYVdkb2RDa3BMQ0JxSUR3Z01TQjhmQ0JUSUQwOVBTQWhNQ2tnYVdZZ0tIUjVjR1Z2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUR3Z0luVWlJQ1ltSUVNZ2FXNXpkR0Z1WTJWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElIeDhJSFI1Y0dWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQThJQ0oxSWlBbUppQkRJR2x1YzNSaGJtTmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFnZkh3Z2RIbHdaVzltSUVsdFlXZGxRbWwwYldGd0lEd2dJblVpSUNZbUlFTWdhVzV6ZEdGdVkyVnZaaUJKYldGblpVSnBkRzFoY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHVWdQU0JUSUQ4Z1YzSWdPaUJOWVhSb0xtWnNiMjl5TENCTlpTQTlJSFJsS0dvZ0tpQkRMbmRwWkhSb0tTd2djbVVnUFNCMFpTaHFJQ29nUXk1b1pXbG5hSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmZJRDA5UFNCMmIybGtJREFnSmlZZ0tGOGdQU0IyS0UxbExDQnlaU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkdVZ1BTQkNJRDhnZGloTlpTd2djbVVwSURvZ1h6c0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1JsTG5kcFpIUm9JRDBnVFdVc0lHUmxMbWhsYVdkb2RDQTlJSEpsTENCa1pTNW5aWFJEYjI1MFpYaDBLQ0l5WkNJcExtUnlZWGRKYldGblpTaERMQ0F3TENBd0xDQk5aU3dnY21VcExDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGUmxlSFIxY21VZ2FHRnpJR0psWlc0Z2NtVnphWHBsWkNCbWNtOXRJQ2dpSUNzZ1F5NTNhV1IwYUNBcklDSjRJaUFySUVNdWFHVnBaMmgwSUNzZ0lpa2dkRzhnS0NJZ0t5Qk5aU0FySUNKNElpQXJJSEpsSUNzZ0lpa3VJaWtzSUdSbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnSW1SaGRHRWlJR2x1SUVNZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkpiV0ZuWlNCcGJpQkVZWFJoVkdWNGRIVnlaU0JwY3lCMGIyOGdZbWxuSUNnaUlDc2dReTUzYVdSMGFDQXJJQ0o0SWlBcklFTXVhR1ZwWjJoMElDc2dJaWt1SWlrc0lFTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFTTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI1S0VNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXOG9ReTUzYVdSMGFDa2dKaVlnYlc4b1F5NW9aV2xuYUhRcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZaWhES1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4Z1B5QWhNU0E2SUVNdWQzSmhjRk1nSVQwOUlFbDBJSHg4SUVNdWQzSmhjRlFnSVQwOUlFbDBJSHg4SUVNdWJXbHVSbWxzZEdWeUlDRTlQU0J3ZENBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2JYUTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIzS0VNc0lGTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdReTVuWlc1bGNtRjBaVTFwY0cxaGNITWdKaVlnVXlBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2NIUWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJRzEwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1VpaERLU0I3Q2lBZ0lDQWdJQ0FnY3pFdVoyVnVaWEpoZEdWTmFYQnRZWEFvUXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkpLRU1zSUZNc0lFSXNJR1ZsTENCcUlEMGdJVEVwSUhzS0lDQWdJQ0FnSUNCcFppQW9ieUE5UFQwZ0lURXBJSEpsZEhWeWJpQlRPd29nSUNBZ0lDQWdJR2xtSUNoRElDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpNVnREWFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2N6RmJRMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1FYUjBaVzF3ZENCMGJ5QjFjMlVnYm05dUxXVjRhWE4wYVc1bklGZGxZa2RNSUdsdWRHVnlibUZzSUdadmNtMWhkQ0FuSWlBcklFTWdLeUFpSnlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnZEdVZ1BTQlRPd29nSUNBZ0lDQWdJR2xtSUNoVElEMDlQU0J6TVM1U1JVUWdKaVlnS0VJZ1BUMDlJSE14TGtaTVQwRlVJQ1ltSUNoMFpTQTlJSE14TGxJek1rWXBMQ0JDSUQwOVBTQnpNUzVJUVV4R1gwWk1UMEZVSUNZbUlDaDBaU0E5SUhNeExsSXhOa1lwTENCQ0lEMDlQU0J6TVM1VlRsTkpSMDVGUkY5Q1dWUkZJQ1ltSUNoMFpTQTlJSE14TGxJNEtTa3NJRk1nUFQwOUlITXhMbEpGUkY5SlRsUkZSMFZTSUNZbUlDaENJRDA5UFNCek1TNVZUbE5KUjA1RlJGOUNXVlJGSUNZbUlDaDBaU0E5SUhNeExsSTRWVWtwTENCQ0lEMDlQU0J6TVM1VlRsTkpSMDVGUkY5VFNFOVNWQ0FtSmlBb2RHVWdQU0J6TVM1U01UWlZTU2tzSUVJZ1BUMDlJSE14TGxWT1UwbEhUa1ZFWDBsT1ZDQW1KaUFvZEdVZ1BTQnpNUzVTTXpKVlNTa3NJRUlnUFQwOUlITXhMa0paVkVVZ0ppWWdLSFJsSUQwZ2N6RXVVamhKS1N3Z1FpQTlQVDBnY3pFdVUwaFBVbFFnSmlZZ0tIUmxJRDBnY3pFdVVqRTJTU2tzSUVJZ1BUMDlJSE14TGtsT1ZDQW1KaUFvZEdVZ1BTQnpNUzVTTXpKSktTa3NJRk1nUFQwOUlITXhMbEpISUNZbUlDaENJRDA5UFNCek1TNUdURTlCVkNBbUppQW9kR1VnUFNCek1TNVNSek15Umlrc0lFSWdQVDA5SUhNeExraEJURVpmUmt4UFFWUWdKaVlnS0hSbElEMGdjekV1VWtjeE5rWXBMQ0JDSUQwOVBTQnpNUzVWVGxOSlIwNUZSRjlDV1ZSRklDWW1JQ2gwWlNBOUlITXhMbEpIT0NrcExDQlRJRDA5UFNCek1TNVNSMEpCS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTlpTQTlJR29nUHlCNmNpQTZJRkZsTG1kbGRGUnlZVzV6Wm1WeUtHVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1FpQTlQVDBnY3pFdVJreFBRVlFnSmlZZ0tIUmxJRDBnY3pFdVVrZENRVE15Umlrc0lFSWdQVDA5SUhNeExraEJURVpmUmt4UFFWUWdKaVlnS0hSbElEMGdjekV1VWtkQ1FURTJSaWtzSUVJZ1BUMDlJSE14TGxWT1UwbEhUa1ZFWDBKWlZFVWdKaVlnS0hSbElEMGdUV1VnUFQwOUlHNTBJRDhnY3pFdVUxSkhRamhmUVV4UVNFRTRJRG9nY3pFdVVrZENRVGdwTENCQ0lEMDlQU0J6TVM1VlRsTkpSMDVGUkY5VFNFOVNWRjgwWHpSZk5GODBJQ1ltSUNoMFpTQTlJSE14TGxKSFFrRTBLU3dnUWlBOVBUMGdjekV1VlU1VFNVZE9SVVJmVTBoUFVsUmZOVjgxWHpWZk1TQW1KaUFvZEdVZ1BTQnpNUzVTUjBJMVgwRXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ2gwWlNBOVBUMGdjekV1VWpFMlJpQjhmQ0IwWlNBOVBUMGdjekV1VWpNeVJpQjhmQ0IwWlNBOVBUMGdjekV1VWtjeE5rWWdmSHdnZEdVZ1BUMDlJSE14TGxKSE16SkdJSHg4SUhSbElEMDlQU0J6TVM1U1IwSkJNVFpHSUh4OElIUmxJRDA5UFNCek1TNVNSMEpCTXpKR0tTQW1KaUJsTG1kbGRDZ2lSVmhVWDJOdmJHOXlYMkoxWm1abGNsOW1iRzloZENJcExDQjBaVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUUwb1F5d2dVeXdnUWlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCM0tFTXNJRUlwSUQwOVBTQWhNQ0I4ZkNCRExtbHpSbkpoYldWaWRXWm1aWEpVWlhoMGRYSmxJQ1ltSUVNdWJXbHVSbWxzZEdWeUlDRTlQU0J3ZENBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2JYUWdQeUJOWVhSb0xteHZaeklvVFdGMGFDNXRZWGdvVXk1M2FXUjBhQ3dnVXk1b1pXbG5hSFFwS1NBcklERWdPaUJETG0xcGNHMWhjSE1nSVQwOUlIWnZhV1FnTUNBbUppQkRMbTFwY0cxaGNITXViR1Z1WjNSb0lENGdNQ0EvSUVNdWJXbHdiV0Z3Y3k1c1pXNW5kR2dnT2lCRExtbHpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdKaVlnUVhKeVlYa3VhWE5CY25KaGVTaERMbWx0WVdkbEtTQS9JRk11Yldsd2JXRndjeTVzWlc1bmRHZ2dPaUF4T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ZDaERLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU1nUFQwOUlIQjBJSHg4SUVNZ1BUMDlJR1p2SUh4OElFTWdQVDA5SUV4eUlEOGdjekV1VGtWQlVrVlRWQ0E2SUhNeExreEpUa1ZCVWpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFOG9ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnUXk1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnVXk1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dUeWtzSUNRb1V5a3NJRk11YVhOV2FXUmxiMVJsZUhSMWNtVWdKaVlnYlM1a1pXeGxkR1VvVXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlpLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdVeUE5SUVNdWRHRnlaMlYwT3dvZ0lDQWdJQ0FnSUZNdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJRmtwTENCNktGTXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnSkNoREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZNZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQnBaaUFvVXk1ZlgzZGxZbWRzU1c1cGRDQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUVJZ1BTQkRMbk52ZFhKalpTd2daV1VnUFNCbkxtZGxkQ2hDS1RzS0lDQWdJQ0FnSUNCcFppQW9aV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdvZ1BTQmxaVnRUTGw5ZlkyRmphR1ZMWlhsZE93b2dJQ0FnSUNBZ0lDQWdJQ0JxTG5WelpXUlVhVzFsY3kwdExDQnFMblZ6WldSVWFXMWxjeUE5UFQwZ01DQW1KaUJWS0VNcExDQlBZbXBsWTNRdWEyVjVjeWhsWlNrdWJHVnVaM1JvSUQwOVBTQXdJQ1ltSUdjdVpHVnNaWFJsS0VJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnVMbkpsYlc5MlpTaERLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZVb1F5a2dld29nSUNBZ0lDQWdJR3hsZENCVElEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdjekV1WkdWc1pYUmxWR1Y0ZEhWeVpTaFRMbDlmZDJWaVoyeFVaWGgwZFhKbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnUWlBOUlFTXVjMjkxY21ObExDQmxaU0E5SUdjdVoyVjBLRUlwT3dvZ0lDQWdJQ0FnSUdSbGJHVjBaU0JsWlZ0VExsOWZZMkZqYUdWTFpYbGRMQ0JoTG0xbGJXOXllUzUwWlhoMGRYSmxjeTB0T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VpaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGTWdQU0JETG5SbGVIUjFjbVVzSUVJZ1BTQnVMbWRsZENoREtTd2daV1VnUFNCdUxtZGxkQ2hUS1RzS0lDQWdJQ0FnSUNCcFppQW9aV1V1WDE5M1pXSm5iRlJsZUhSMWNtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2N6RXVaR1ZzWlhSbFZHVjRkSFZ5WlNobFpTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lHRXViV1Z0YjNKNUxuUmxlSFIxY21WekxTMHBMQ0JETG1SbGNIUm9WR1Y0ZEhWeVpTQW1KaUJETG1SbGNIUm9WR1Y0ZEhWeVpTNWthWE53YjNObEtDa3NJRU11YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUXBJR1p2Y2loc1pYUWdhaUE5SURBN0lHb2dQQ0EyT3lCcUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoQ0xsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNsdHFYU2twSUdadmNpaHNaWFFnZEdVZ1BTQXdPeUIwWlNBOElFSXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXMnBkTG14bGJtZDBhRHNnZEdVckt5bHpNUzVrWld4bGRHVkdjbUZ0WldKMVptWmxjaWhDTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0cVhWdDBaVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhNeExtUmxiR1YwWlVaeVlXMWxZblZtWm1WeUtFSXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXMnBkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdRaTVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElnSmlZZ2N6RXVaR1ZzWlhSbFVtVnVaR1Z5WW5WbVptVnlLRUl1WDE5M1pXSm5iRVJsY0hSb1luVm1abVZ5VzJwZEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLRUl1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5S1NrZ1ptOXlLR3hsZENCcUlEMGdNRHNnYWlBOElFSXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlMbXhsYm1kMGFEc2dhaXNyS1hNeExtUmxiR1YwWlVaeVlXMWxZblZtWm1WeUtFSXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXMnBkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCek1TNWtaV3hsZEdWR2NtRnRaV0oxWm1abGNpaENMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hDTGw5ZmQyVmlaMnhFWlhCMGFHSjFabVpsY2lBbUppQnpNUzVrWld4bGRHVlNaVzVrWlhKaWRXWm1aWElvUWk1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJcExDQkNMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lBbUppQnpNUzVrWld4bGRHVkdjbUZ0WldKMVptWmxjaWhDTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpa3NJRUl1WDE5M1pXSm5iRU52Ykc5eVVtVnVaR1Z5WW5WbVptVnlLU0JtYjNJb2JHVjBJR29nUFNBd095QnFJRHdnUWk1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWEl1YkdWdVozUm9PeUJxS3lzcFFpNWZYM2RsWW1kc1EyOXNiM0pTWlc1a1pYSmlkV1ptWlhKYmFsMGdKaVlnY3pFdVpHVnNaWFJsVW1WdVpHVnlZblZtWm1WeUtFSXVYMTkzWldKbmJFTnZiRzl5VW1WdVpHVnlZblZtWm1WeVcycGRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1FpNWZYM2RsWW1kc1JHVndkR2hTWlc1a1pYSmlkV1ptWlhJZ0ppWWdjekV1WkdWc1pYUmxVbVZ1WkdWeVluVm1abVZ5S0VJdVgxOTNaV0puYkVSbGNIUm9VbVZ1WkdWeVluVm1abVZ5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLRU11YVhOWFpXSkhURTExYkhScGNHeGxVbVZ1WkdWeVZHRnlaMlYwY3lrZ1ptOXlLR3hsZENCcUlEMGdNQ3dnZEdVZ1BTQlRMbXhsYm1kMGFEc2dhaUE4SUhSbE95QnFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVFdVZ1BTQnVMbWRsZENoVFcycGRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1RXVXVYMTkzWldKbmJGUmxlSFIxY21VZ0ppWWdLSE14TG1SbGJHVjBaVlJsZUhSMWNtVW9UV1V1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0JoTG0xbGJXOXllUzUwWlhoMGRYSmxjeTB0S1N3Z2JpNXlaVzF2ZG1Vb1UxdHFYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUc0dWNtVnRiM1psS0ZNcExDQnVMbkpsYlc5MlpTaERLVHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQnhJRDBnTURzS0lDQWdJR1oxYm1OMGFXOXVJRWdvS1NCN0NpQWdJQ0FnSUNBZ2NTQTlJREE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdVpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1F5QTlJSEU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU1nUGowZ1l5QW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1WR1Y0ZEhWeVpYTTZJRlJ5ZVdsdVp5QjBieUIxYzJVZ0lpQXJJRU1nS3lBaUlIUmxlSFIxY21VZ2RXNXBkSE1nZDJocGJHVWdkR2hwY3lCSFVGVWdjM1Z3Y0c5eWRITWdiMjVzZVNBaUlDc2dZeWtzSUhFZ0t6MGdNU3dnUXpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGY29ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnVzEwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZNdWNIVnphQ2hETG5keVlYQlRLU3dnVXk1d2RYTm9LRU11ZDNKaGNGUXBMQ0JUTG5CMWMyZ29ReTUzY21Gd1VpQjhmQ0F3S1N3Z1V5NXdkWE5vS0VNdWJXRm5SbWxzZEdWeUtTd2dVeTV3ZFhOb0tFTXViV2x1Um1sc2RHVnlLU3dnVXk1d2RYTm9LRU11WVc1cGMyOTBjbTl3ZVNrc0lGTXVjSFZ6YUNoRExtbHVkR1Z5Ym1Gc1JtOXliV0YwS1N3Z1V5NXdkWE5vS0VNdVptOXliV0YwS1N3Z1V5NXdkWE5vS0VNdWRIbHdaU2tzSUZNdWNIVnphQ2hETG1kbGJtVnlZWFJsVFdsd2JXRndjeWtzSUZNdWNIVnphQ2hETG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VwTENCVExuQjFjMmdvUXk1bWJHbHdXU2tzSUZNdWNIVnphQ2hETG5WdWNHRmphMEZzYVdkdWJXVnVkQ2tzSUZNdWNIVnphQ2hETG1OdmJHOXlVM0JoWTJVcExDQlRMbXB2YVc0b0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRXNvUXl3Z1V5a2dld29nSUNBZ0lDQWdJR3hsZENCQ0lEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdhV1lnS0VNdWFYTldhV1JsYjFSbGVIUjFjbVVnSmlZZ2NXVW9ReWtzSUVNdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDA5UFNBaE1TQW1KaUJETG5abGNuTnBiMjRnUGlBd0lDWW1JRUl1WDE5MlpYSnphVzl1SUNFOVBTQkRMblpsY25OcGIyNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1ZsSUQwZ1F5NXBiV0ZuWlRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWbElEMDlQU0J1ZFd4c0tTQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGUmxlSFIxY21VZ2JXRnlhMlZrSUdadmNpQjFjR1JoZEdVZ1luVjBJRzV2SUdsdFlXZGxJR1JoZEdFZ1ptOTFibVF1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLR1ZsTG1OdmJYQnNaWFJsSUQwOVBTQWhNU2tnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJVWlhoMGRYSmxJRzFoY210bFpDQm1iM0lnZFhCa1lYUmxJR0oxZENCcGJXRm5aU0JwY3lCcGJtTnZiWEJzWlhSbElpazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXV1VvUWl3Z1F5d2dVeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDNWlhVzVrVkdWNGRIVnlaU2h6TVM1VVJWaFVWVkpGWHpKRUxDQkNMbDlmZDJWaVoyeFVaWGgwZFhKbExDQnpNUzVVUlZoVVZWSkZNQ0FySUZNcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdSQ2hETENCVEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUVJZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQnBaaUFvUXk1MlpYSnphVzl1SUQ0Z01DQW1KaUJDTGw5ZmRtVnljMmx2YmlBaFBUMGdReTUyWlhKemFXOXVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGbGxLRUlzSUVNc0lGTXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhRdVltbHVaRlJsZUhSMWNtVW9jekV1VkVWWVZGVlNSVjh5UkY5QlVsSkJXU3dnUWk1ZlgzZGxZbWRzVkdWNGRIVnlaU3dnY3pFdVZFVllWRlZTUlRBZ0t5QlRLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVjb1F5d2dVeWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkNJRDBnYmk1blpYUW9ReWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTXVkbVZ5YzJsdmJpQStJREFnSmlZZ1FpNWZYM1psY25OcGIyNGdJVDA5SUVNdWRtVnljMmx2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JaWlNoQ0xDQkRMQ0JUS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUpwYm1SVVpYaDBkWEpsS0hNeExsUkZXRlJWVWtWZk0wUXNJRUl1WDE5M1pXSm5iRlJsZUhSMWNtVXNJSE14TGxSRldGUlZVa1V3SUNzZ1V5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJvWlNoRExDQlRLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFSWdQU0J1TG1kbGRDaERLVHNLSUNBZ0lDQWdJQ0JwWmlBb1F5NTJaWEp6YVc5dUlENGdNQ0FtSmlCQ0xsOWZkbVZ5YzJsdmJpQWhQVDBnUXk1MlpYSnphVzl1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2wwS0VJc0lFTXNJRk1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUXVZbWx1WkZSbGVIUjFjbVVvY3pFdVZFVllWRlZTUlY5RFZVSkZYMDFCVUN3Z1FpNWZYM2RsWW1kc1ZHVjRkSFZ5WlN3Z2N6RXVWRVZZVkZWU1JUQWdLeUJUS1RzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JtWlNBOUlIc0tJQ0FnSUNBZ0lDQmJSSEpkT2lCek1TNVNSVkJGUVZRc0NpQWdJQ0FnSUNBZ1cwbDBYVG9nY3pFdVEweEJUVkJmVkU5ZlJVUkhSU3dLSUNBZ0lDQWdJQ0JiVG5KZE9pQnpNUzVOU1ZKU1QxSkZSRjlTUlZCRlFWUUtJQ0FnSUgwc0lGOWxJRDBnZXdvZ0lDQWdJQ0FnSUZ0d2RGMDZJSE14TGs1RlFWSkZVMVFzQ2lBZ0lDQWdJQ0FnVzJadlhUb2djekV1VGtWQlVrVlRWRjlOU1ZCTlFWQmZUa1ZCVWtWVFZDd0tJQ0FnSUNBZ0lDQmJUSEpkT2lCek1TNU9SVUZTUlZOVVgwMUpVRTFCVUY5TVNVNUZRVklzQ2lBZ0lDQWdJQ0FnVzIxMFhUb2djekV1VEVsT1JVRlNMQW9nSUNBZ0lDQWdJRnQxWkYwNklITXhMa3hKVGtWQlVsOU5TVkJOUVZCZlRrVkJVa1ZUVkN3S0lDQWdJQ0FnSUNCYmJHbGRPaUJ6TVM1TVNVNUZRVkpmVFVsUVRVRlFYMHhKVGtWQlVnb2dJQ0FnZlN3Z2QyVWdQU0I3Q2lBZ0lDQWdJQ0FnVzFWbVhUb2djekV1VGtWV1JWSXNDaUFnSUNBZ0lDQWdXMVptWFRvZ2N6RXVRVXhYUVZsVExBb2dJQ0FnSUNBZ0lGdEVabDA2SUhNeExreEZVMU1zQ2lBZ0lDQWdJQ0FnVzA5bVhUb2djekV1VEVWUlZVRk1MQW9nSUNBZ0lDQWdJRnRPWmwwNklITXhMa1ZSVlVGTUxBb2dJQ0FnSUNBZ0lGdDZabDA2SUhNeExrZEZVVlZCVEN3S0lDQWdJQ0FnSUNCYlJtWmRPaUJ6TVM1SFVrVkJWRVZTTEFvZ0lDQWdJQ0FnSUZ0Q1psMDZJSE14TGs1UFZFVlJWVUZNQ2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1JXVW9ReXdnVXl3Z1Fpa2dld29nSUNBZ0lDQWdJR2xtSUNoQ0lEOGdLSE14TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnY3pFdVZFVllWRlZTUlY5WFVrRlFYMU1zSUdabFcxTXVkM0poY0ZOZEtTd2djekV1ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0J6TVM1VVJWaFVWVkpGWDFkU1FWQmZWQ3dnWm1WYlV5NTNjbUZ3VkYwcExDQW9ReUE5UFQwZ2N6RXVWRVZZVkZWU1JWOHpSQ0I4ZkNCRElEMDlQU0J6TVM1VVJWaFVWVkpGWHpKRVgwRlNVa0ZaS1NBbUppQnpNUzUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJSE14TGxSRldGUlZVa1ZmVjFKQlVGOVNMQ0JtWlZ0VExuZHlZWEJTWFNrc0lITXhMblJsZUZCaGNtRnRaWFJsY21rb1F5d2djekV1VkVWWVZGVlNSVjlOUVVkZlJrbE1WRVZTTENCZlpWdFRMbTFoWjBacGJIUmxjbDBwTENCek1TNTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lITXhMbFJGV0ZSVlVrVmZUVWxPWDBaSlRGUkZVaXdnWDJWYlV5NXRhVzVHYVd4MFpYSmRLU2tnT2lBb2N6RXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQnpNUzVVUlZoVVZWSkZYMWRTUVZCZlV5d2djekV1UTB4QlRWQmZWRTlmUlVSSFJTa3NJSE14TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnY3pFdVZFVllWRlZTUlY5WFVrRlFYMVFzSUhNeExrTk1RVTFRWDFSUFgwVkVSMFVwTENBb1F5QTlQVDBnY3pFdVZFVllWRlZTUlY4elJDQjhmQ0JESUQwOVBTQnpNUzVVUlZoVVZWSkZYekpFWDBGU1VrRlpLU0FtSmlCek1TNTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lITXhMbFJGV0ZSVlVrVmZWMUpCVUY5U0xDQnpNUzVEVEVGTlVGOVVUMTlGUkVkRktTd2dLRk11ZDNKaGNGTWdJVDA5SUVsMElIeDhJRk11ZDNKaGNGUWdJVDA5SUVsMEtTQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlJsZUhSMWNtVWdhWE1nYm05MElIQnZkMlZ5SUc5bUlIUjNieTRnVkdWNGRIVnlaUzUzY21Gd1V5QmhibVFnVkdWNGRIVnlaUzUzY21Gd1ZDQnphRzkxYkdRZ1ltVWdjMlYwSUhSdklGUklVa1ZGTGtOc1lXMXdWRzlGWkdkbFYzSmhjSEJwYm1jdUlpa3NJSE14TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnY3pFdVZFVllWRlZTUlY5TlFVZGZSa2xNVkVWU0xDQlVLRk11YldGblJtbHNkR1Z5S1Nrc0lITXhMblJsZUZCaGNtRnRaWFJsY21rb1F5d2djekV1VkVWWVZGVlNSVjlOU1U1ZlJrbE1WRVZTTENCVUtGTXViV2x1Um1sc2RHVnlLU2tzSUZNdWJXbHVSbWxzZEdWeUlDRTlQU0J3ZENBbUppQlRMbTFwYmtacGJIUmxjaUFoUFQwZ2JYUWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJVWlhoMGRYSmxJR2x6SUc1dmRDQndiM2RsY2lCdlppQjBkMjh1SUZSbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUhOb2IzVnNaQ0JpWlNCelpYUWdkRzhnVkVoU1JVVXVUbVZoY21WemRFWnBiSFJsY2lCdmNpQlVTRkpGUlM1TWFXNWxZWEpHYVd4MFpYSXVJaWtwTENCVExtTnZiWEJoY21WR2RXNWpkR2x2YmlBbUppQW9jekV1ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0J6TVM1VVJWaFVWVkpGWDBOUFRWQkJVa1ZmVFU5RVJTd2djekV1UTA5TlVFRlNSVjlTUlVaZlZFOWZWRVZZVkZWU1JTa3NJSE14TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnY3pFdVZFVllWRlZTUlY5RFQwMVFRVkpGWDBaVlRrTXNJSGRsVzFNdVkyOXRjR0Z5WlVaMWJtTjBhVzl1WFNrcExDQmxMbWhoY3lnaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJaWtnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JsWlNBOUlHVXVaMlYwS0NKRldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRk11YldGblJtbHNkR1Z5SUQwOVBTQndkQ0I4ZkNCVExtMXBia1pwYkhSbGNpQWhQVDBnVEhJZ0ppWWdVeTV0YVc1R2FXeDBaWElnSVQwOUlHeHBJSHg4SUZNdWRIbHdaU0E5UFQwZ2VHNGdKaVlnWlM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBYMnhwYm1WaGNpSXBJRDA5UFNBaE1TQjhmQ0J2SUQwOVBTQWhNU0FtSmlCVExuUjVjR1VnUFQwOUlGUnpJQ1ltSUdVdWFHRnpLQ0pQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMFgyeHBibVZoY2lJcElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQW9VeTVoYm1semIzUnliM0I1SUQ0Z01TQjhmQ0J1TG1kbGRDaFRLUzVmWDJOMWNuSmxiblJCYm1semIzUnliM0I1S1NBbUppQW9jekV1ZEdWNFVHRnlZVzFsZEdWeVppaERMQ0JsWlM1VVJWaFVWVkpGWDAxQldGOUJUa2xUVDFSU1QxQlpYMFZZVkN3Z1RXRjBhQzV0YVc0b1V5NWhibWx6YjNSeWIzQjVMQ0JwTG1kbGRFMWhlRUZ1YVhOdmRISnZjSGtvS1NrcExDQnVMbWRsZENoVEtTNWZYMk4xY25KbGJuUkJibWx6YjNSeWIzQjVJRDBnVXk1aGJtbHpiM1J5YjNCNUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJVWlNoRExDQlRLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFSWdQU0FoTVRzS0lDQWdJQ0FnSUNCRExsOWZkMlZpWjJ4SmJtbDBJRDA5UFNCMmIybGtJREFnSmlZZ0tFTXVYMTkzWldKbmJFbHVhWFFnUFNBaE1Dd2dVeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnVHlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JsWlNBOUlGTXVjMjkxY21ObExDQnFJRDBnWnk1blpYUW9aV1VwT3dvZ0lDQWdJQ0FnSUdvZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYWlBOUlIdDlMQ0JuTG5ObGRDaGxaU3dnYWlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwWlNBOUlGY29VeWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUmxJQ0U5UFNCRExsOWZZMkZqYUdWTFpYa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FsdDBaVjBnUFQwOUlIWnZhV1FnTUNBbUppQW9hbHQwWlYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwZFhKbE9pQnpNUzVqY21WaGRHVlVaWGgwZFhKbEtDa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFjMlZrVkdsdFpYTTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dZUzV0WlcxdmNua3VkR1Y0ZEhWeVpYTXJLeXdnUWlBOUlDRXdLU3dnYWx0MFpWMHVkWE5sWkZScGJXVnpLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JOWlNBOUlHcGJReTVmWDJOaFkyaGxTMlY1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdUV1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hbHRETGw5ZlkyRmphR1ZMWlhsZExuVnpaV1JVYVcxbGN5MHRMQ0JOWlM1MWMyVmtWR2x0WlhNZ1BUMDlJREFnSmlZZ1ZTaFRLU2tzSUVNdVgxOWpZV05vWlV0bGVTQTlJSFJsTENCRExsOWZkMlZpWjJ4VVpYaDBkWEpsSUQwZ2FsdDBaVjB1ZEdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRUk3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCWlpTaERMQ0JUTENCQ0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdWbElEMGdjekV1VkVWWVZGVlNSVjh5UkRzS0lDQWdJQ0FnSUNBb1V5NXBjMFJoZEdGQmNuSmhlVlJsZUhSMWNtVWdmSHdnVXk1cGMwTnZiWEJ5WlhOelpXUkJjbkpoZVZSbGVIUjFjbVVwSUNZbUlDaGxaU0E5SUhNeExsUkZXRlJWVWtWZk1rUmZRVkpTUVZrcExDQlRMbWx6UkdGMFlUTkVWR1Y0ZEhWeVpTQW1KaUFvWldVZ1BTQnpNUzVVUlZoVVZWSkZYek5FS1RzS0lDQWdJQ0FnSUNCc1pYUWdhaUE5SUZSbEtFTXNJRk1wTENCMFpTQTlJRk11YzI5MWNtTmxPd29nSUNBZ0lDQWdJSFF1WW1sdVpGUmxlSFIxY21Vb1pXVXNJRU11WDE5M1pXSm5iRlJsZUhSMWNtVXNJSE14TGxSRldGUlZVa1V3SUNzZ1FpazdDaUFnSUNBZ0lDQWdiR1YwSUUxbElEMGdiaTVuWlhRb2RHVXBPd29nSUNBZ0lDQWdJR2xtSUNoMFpTNTJaWEp6YVc5dUlDRTlQU0JOWlM1ZlgzWmxjbk5wYjI0Z2ZId2dhaUE5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNWhZM1JwZG1WVVpYaDBkWEpsS0hNeExsUkZXRlJWVWtVd0lDc2dRaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlGRmxMbWRsZEZCeWFXMWhjbWxsY3loUlpTNTNiM0pyYVc1blEyOXNiM0pUY0dGalpTa3NJR1JsSUQwZ1V5NWpiMnh2Y2xOd1lXTmxJRDA5UFNCWWRDQS9JRzUxYkd3Z09pQlJaUzVuWlhSUWNtbHRZWEpwWlhNb1V5NWpiMnh2Y2xOd1lXTmxLU3dnVEdVZ1BTQlRMbU52Ykc5eVUzQmhZMlVnUFQwOUlGaDBJSHg4SUhKbElEMDlQU0JrWlNBL0lITXhMazVQVGtVZ09pQnpNUzVDVWs5WFUwVlNYMFJGUmtGVlRGUmZWMFZDUjB3N0NpQWdJQ0FnSUNBZ0lDQWdJSE14TG5CcGVHVnNVM1J2Y21WcEtITXhMbFZPVUVGRFMxOUdURWxRWDFsZlYwVkNSMHdzSUZNdVpteHBjRmtwTENCek1TNXdhWGhsYkZOMGIzSmxhU2h6TVM1VlRsQkJRMHRmVUZKRlRWVk1WRWxRVEZsZlFVeFFTRUZmVjBWQ1Iwd3NJRk11Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU2tzSUhNeExuQnBlR1ZzVTNSdmNtVnBLSE14TGxWT1VFRkRTMTlCVEVsSFRrMUZUbFFzSUZNdWRXNXdZV05yUVd4cFoyNXRaVzUwS1N3Z2N6RXVjR2w0Wld4VGRHOXlaV2tvY3pFdVZVNVFRVU5MWDBOUFRFOVNVMUJCUTBWZlEwOU9Wa1ZTVTBsUFRsOVhSVUpIVEN3Z1RHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXbVVnUFNCaUtGTXBJQ1ltSUhrb1V5NXBiV0ZuWlNrZ1BUMDlJQ0V4TENCelpTQTlJSGdvVXk1cGJXRm5aU3dnV21Vc0lDRXhMQ0JvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjMlVnUFNCeWRDaFRMQ0J6WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENBa1pTQTlJSGtvYzJVcElIeDhJRzhzSUU5bElEMGdjaTVqYjI1MlpYSjBLRk11Wm05eWJXRjBMQ0JUTG1OdmJHOXlVM0JoWTJVcExDQkpaU0E5SUhJdVkyOXVkbVZ5ZENoVExuUjVjR1VwTENCU1pTQTlJRWtvVXk1cGJuUmxjbTVoYkVadmNtMWhkQ3dnVDJVc0lFbGxMQ0JUTG1OdmJHOXlVM0JoWTJVc0lGTXVhWE5XYVdSbGIxUmxlSFIxY21VcE93b2dJQ0FnSUNBZ0lDQWdJQ0JGWlNobFpTd2dVeXdnSkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VDd2dZMlVnUFNCVExtMXBjRzFoY0hNc0lHRmxJRDBnYnlBbUppQlRMbWx6Vm1sa1pXOVVaWGgwZFhKbElDRTlQU0FoTUN3Z1oyVWdQU0JOWlM1ZlgzWmxjbk5wYjI0Z1BUMDlJSFp2YVdRZ01DQjhmQ0JxSUQwOVBTQWhNQ3dnZFdVZ1BTQk5LRk1zSUhObExDQWtaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hUTG1selJHVndkR2hVWlhoMGRYSmxLU0JTWlNBOUlITXhMa1JGVUZSSVgwTlBUVkJQVGtWT1ZDd2dieUEvSUZNdWRIbHdaU0E5UFQwZ2VHNGdQeUJTWlNBOUlITXhMa1JGVUZSSVgwTlBUVkJQVGtWT1ZETXlSaUE2SUZNdWRIbHdaU0E5UFQwZ1RHNGdQeUJTWlNBOUlITXhMa1JGVUZSSVgwTlBUVkJQVGtWT1ZESTBJRG9nVXk1MGVYQmxJRDA5UFNCcGFTQS9JRkpsSUQwZ2N6RXVSRVZRVkVneU5GOVRWRVZPUTBsTU9DQTZJRkpsSUQwZ2N6RXVSRVZRVkVoZlEwOU5VRTlPUlU1VU1UWWdPaUJUTG5SNWNHVWdQVDA5SUhodUlDWW1JR052Ym5OdmJHVXVaWEp5YjNJb0lsZGxZa2RNVW1WdVpHVnlaWEk2SUVac2IyRjBhVzVuSUhCdmFXNTBJR1JsY0hSb0lIUmxlSFIxY21VZ2NtVnhkV2x5WlhNZ1YyVmlSMHd5TGlJcExDQlRMbVp2Y20xaGRDQTlQVDBnYzJrZ0ppWWdVbVVnUFQwOUlITXhMa1JGVUZSSVgwTlBUVkJQVGtWT1ZDQW1KaUJUTG5SNWNHVWdJVDA5SUZkaklDWW1JRk11ZEhsd1pTQWhQVDBnVEc0Z0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWWE5sSUZWdWMybG5ibVZrVTJodmNuUlVlWEJsSUc5eUlGVnVjMmxuYm1Wa1NXNTBWSGx3WlNCbWIzSWdSR1Z3ZEdoR2IzSnRZWFFnUkdWd2RHaFVaWGgwZFhKbExpSXBMQ0JUTG5SNWNHVWdQU0JNYml3Z1NXVWdQU0J5TG1OdmJuWmxjblFvVXk1MGVYQmxLU2tzSUZNdVptOXliV0YwSUQwOVBTQlphU0FtSmlCU1pTQTlQVDBnY3pFdVJFVlFWRWhmUTA5TlVFOU9SVTVVSUNZbUlDaFNaU0E5SUhNeExrUkZVRlJJWDFOVVJVNURTVXdzSUZNdWRIbHdaU0FoUFQwZ2FXa2dKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVlhObElGVnVjMmxuYm1Wa1NXNTBNalE0Vkhsd1pTQm1iM0lnUkdWd2RHaFRkR1Z1WTJsc1JtOXliV0YwSUVSbGNIUm9WR1Y0ZEhWeVpTNGlLU3dnVXk1MGVYQmxJRDBnYVdrc0lFbGxJRDBnY2k1amIyNTJaWEowS0ZNdWRIbHdaU2twS1N3Z1oyVWdKaVlnS0dGbElEOGdkQzUwWlhoVGRHOXlZV2RsTWtRb2N6RXVWRVZZVkZWU1JWOHlSQ3dnTVN3Z1VtVXNJSE5sTG5kcFpIUm9MQ0J6WlM1b1pXbG5hSFFwSURvZ2RDNTBaWGhKYldGblpUSkVLSE14TGxSRldGUlZVa1ZmTWtRc0lEQXNJRkpsTENCelpTNTNhV1IwYUN3Z2MyVXVhR1ZwWjJoMExDQXdMQ0JQWlN3Z1NXVXNJRzUxYkd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVXk1cGMwUmhkR0ZVWlhoMGRYSmxLU0JwWmlBb1kyVXViR1Z1WjNSb0lENGdNQ0FtSmlBa1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1VnSmlZZ1oyVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z2RXVXNJRkpsTENCalpWc3dYUzUzYVdSMGFDd2dZMlZiTUYwdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVVNBOUlEQXNJR0psSUQwZ1kyVXViR1Z1WjNSb095QlJJRHdnWW1VN0lGRXJLeWxRSUQwZ1kyVmJVVjBzSUdGbElEOGdkQzUwWlhoVGRXSkpiV0ZuWlRKRUtITXhMbFJGV0ZSVlVrVmZNa1FzSUZFc0lEQXNJREFzSUZBdWQybGtkR2dzSUZBdWFHVnBaMmgwTENCUFpTd2dTV1VzSUZBdVpHRjBZU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z1VTd2dVbVVzSUZBdWQybGtkR2dzSUZBdWFHVnBaMmgwTENBd0xDQlBaU3dnU1dVc0lGQXVaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnWVdVZ1B5QW9aMlVnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvY3pFdVZFVllWRlZTUlY4eVJDd2dkV1VzSUZKbExDQnpaUzUzYVdSMGFDd2djMlV1YUdWcFoyaDBLU3dnZEM1MFpYaFRkV0pKYldGblpUSkVLSE14TGxSRldGUlZVa1ZmTWtRc0lEQXNJREFzSURBc0lITmxMbmRwWkhSb0xDQnpaUzVvWldsbmFIUXNJRTlsTENCSlpTd2djMlV1WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtITXhMbFJGV0ZSVlVrVmZNa1FzSURBc0lGSmxMQ0J6WlM1M2FXUjBhQ3dnYzJVdWFHVnBaMmgwTENBd0xDQlBaU3dnU1dVc0lITmxMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hUTG1selEyOXRjSEpsYzNObFpGUmxlSFIxY21VcElHbG1JQ2hUTG1selEyOXRjSEpsYzNObFpFRnljbUY1VkdWNGRIVnlaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdVZ0ppWWdaMlVnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNMFFvY3pFdVZFVllWRlZTUlY4eVJGOUJVbEpCV1N3Z2RXVXNJRkpsTENCalpWc3dYUzUzYVdSMGFDd2dZMlZiTUYwdWFHVnBaMmgwTENCelpTNWtaWEIwYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZFZ1BTQXdMQ0JpWlNBOUlHTmxMbXhsYm1kMGFEc2dVU0E4SUdKbE95QlJLeXNwVUNBOUlHTmxXMUZkTENCVExtWnZjbTFoZENBaFBUMGdWM1FnUHlCUFpTQWhQVDBnYm5Wc2JDQS9JR0ZsSUQ4Z2RDNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV6UkNoek1TNVVSVmhVVlZKRlh6SkVYMEZTVWtGWkxDQlJMQ0F3TENBd0xDQXdMQ0JRTG5kcFpIUm9MQ0JRTG1obGFXZG9kQ3dnYzJVdVpHVndkR2dzSUU5bExDQlFMbVJoZEdFc0lEQXNJREFwSURvZ2RDNWpiMjF3Y21WemMyVmtWR1Y0U1cxaFoyVXpSQ2h6TVM1VVJWaFVWVkpGWHpKRVgwRlNVa0ZaTENCUkxDQlNaU3dnVUM1M2FXUjBhQ3dnVUM1b1pXbG5hSFFzSUhObExtUmxjSFJvTENBd0xDQlFMbVJoZEdFc0lEQXNJREFwSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCQmRIUmxiWEIwSUhSdklHeHZZV1FnZFc1emRYQndiM0owWldRZ1kyOXRjSEpsYzNObFpDQjBaWGgwZFhKbElHWnZjbTFoZENCcGJpQXVkWEJzYjJGa1ZHVjRkSFZ5WlNncElpa2dPaUJoWlNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV6UkNoek1TNVVSVmhVVlZKRlh6SkVYMEZTVWtGWkxDQlJMQ0F3TENBd0xDQXdMQ0JRTG5kcFpIUm9MQ0JRTG1obGFXZG9kQ3dnYzJVdVpHVndkR2dzSUU5bExDQkpaU3dnVUM1a1lYUmhLU0E2SUhRdWRHVjRTVzFoWjJVelJDaHpNUzVVUlZoVVZWSkZYekpFWDBGU1VrRlpMQ0JSTENCU1pTd2dVQzUzYVdSMGFDd2dVQzVvWldsbmFIUXNJSE5sTG1SbGNIUm9MQ0F3TENCUFpTd2dTV1VzSUZBdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpTQW1KaUJuWlNBbUppQjBMblJsZUZOMGIzSmhaMlV5UkNoek1TNVVSVmhVVlZKRlh6SkVMQ0IxWlN3Z1VtVXNJR05sV3pCZExuZHBaSFJvTENCalpWc3dYUzVvWldsbmFIUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlJJRDBnTUN3Z1ltVWdQU0JqWlM1c1pXNW5kR2c3SUZFZ1BDQmlaVHNnVVNzcktWQWdQU0JqWlZ0UlhTd2dVeTVtYjNKdFlYUWdJVDA5SUZkMElEOGdUMlVnSVQwOUlHNTFiR3dnUHlCaFpTQS9JSFF1WTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z1VTd2dNQ3dnTUN3Z1VDNTNhV1IwYUN3Z1VDNW9aV2xuYUhRc0lFOWxMQ0JRTG1SaGRHRXBJRG9nZEM1amIyMXdjbVZ6YzJWa1ZHVjRTVzFoWjJVeVJDaHpNUzVVUlZoVVZWSkZYekpFTENCUkxDQlNaU3dnVUM1M2FXUjBhQ3dnVUM1b1pXbG5hSFFzSURBc0lGQXVaR0YwWVNrZ09pQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklFRjBkR1Z0Y0hRZ2RHOGdiRzloWkNCMWJuTjFjSEJ2Y25SbFpDQmpiMjF3Y21WemMyVmtJSFJsZUhSMWNtVWdabTl5YldGMElHbHVJQzUxY0d4dllXUlVaWGgwZFhKbEtDa2lLU0E2SUdGbElEOGdkQzUwWlhoVGRXSkpiV0ZuWlRKRUtITXhMbFJGV0ZSVlVrVmZNa1FzSUZFc0lEQXNJREFzSUZBdWQybGtkR2dzSUZBdWFHVnBaMmgwTENCUFpTd2dTV1VzSUZBdVpHRjBZU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z1VTd2dVbVVzSUZBdWQybGtkR2dzSUZBdWFHVnBaMmgwTENBd0xDQlBaU3dnU1dVc0lGQXVaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1V5NXBjMFJoZEdGQmNuSmhlVlJsZUhSMWNtVXBJR0ZsSUQ4Z0tHZGxJQ1ltSUhRdWRHVjRVM1J2Y21GblpUTkVLSE14TGxSRldGUlZVa1ZmTWtSZlFWSlNRVmtzSUhWbExDQlNaU3dnYzJVdWQybGtkR2dzSUhObExtaGxhV2RvZEN3Z2MyVXVaR1Z3ZEdncExDQjBMblJsZUZOMVlrbHRZV2RsTTBRb2N6RXVWRVZZVkZWU1JWOHlSRjlCVWxKQldTd2dNQ3dnTUN3Z01Dd2dNQ3dnYzJVdWQybGtkR2dzSUhObExtaGxhV2RvZEN3Z2MyVXVaR1Z3ZEdnc0lFOWxMQ0JKWlN3Z2MyVXVaR0YwWVNrcElEb2dkQzUwWlhoSmJXRm5aVE5FS0hNeExsUkZXRlJWVWtWZk1rUmZRVkpTUVZrc0lEQXNJRkpsTENCelpTNTNhV1IwYUN3Z2MyVXVhR1ZwWjJoMExDQnpaUzVrWlhCMGFDd2dNQ3dnVDJVc0lFbGxMQ0J6WlM1a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1V5NXBjMFJoZEdFelJGUmxlSFIxY21VcElHRmxJRDhnS0dkbElDWW1JSFF1ZEdWNFUzUnZjbUZuWlRORUtITXhMbFJGV0ZSVlVrVmZNMFFzSUhWbExDQlNaU3dnYzJVdWQybGtkR2dzSUhObExtaGxhV2RvZEN3Z2MyVXVaR1Z3ZEdncExDQjBMblJsZUZOMVlrbHRZV2RsTTBRb2N6RXVWRVZZVkZWU1JWOHpSQ3dnTUN3Z01Dd2dNQ3dnTUN3Z2MyVXVkMmxrZEdnc0lITmxMbWhsYVdkb2RDd2djMlV1WkdWd2RHZ3NJRTlsTENCSlpTd2djMlV1WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRORUtITXhMbFJGV0ZSVlVrVmZNMFFzSURBc0lGSmxMQ0J6WlM1M2FXUjBhQ3dnYzJVdWFHVnBaMmgwTENCelpTNWtaWEIwYUN3Z01Dd2dUMlVzSUVsbExDQnpaUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVXk1cGMwWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dkbEtTQnBaaUFvWVdVcElIUXVkR1Y0VTNSdmNtRm5aVEpFS0hNeExsUkZXRlJWVWtWZk1rUXNJSFZsTENCU1pTd2djMlV1ZDJsa2RHZ3NJSE5sTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VTQTlJSE5sTG5kcFpIUm9MQ0JpWlNBOUlITmxMbWhsYVdkb2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRVpsSUQwZ01Ec2dSbVVnUENCMVpUc2dSbVVyS3lsMExuUmxlRWx0WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z1JtVXNJRkpsTENCUkxDQmlaU3dnTUN3Z1QyVXNJRWxsTENCdWRXeHNLU3dnVVNBK1BqMGdNU3dnWW1VZ1BqNDlJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZMlV1YkdWdVozUm9JRDRnTUNBbUppQWtaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdVZ0ppWWdaMlVnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvY3pFdVZFVllWRlZTUlY4eVJDd2dkV1VzSUZKbExDQmpaVnN3WFM1M2FXUjBhQ3dnWTJWYk1GMHVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1VTQTlJREFzSUdKbElEMGdZMlV1YkdWdVozUm9PeUJSSUR3Z1ltVTdJRkVyS3lsUUlEMGdZMlZiVVYwc0lHRmxJRDhnZEM1MFpYaFRkV0pKYldGblpUSkVLSE14TGxSRldGUlZVa1ZmTWtRc0lGRXNJREFzSURBc0lFOWxMQ0JKWlN3Z1VDa2dPaUIwTG5SbGVFbHRZV2RsTWtRb2N6RXVWRVZZVkZWU1JWOHlSQ3dnVVN3Z1VtVXNJRTlsTENCSlpTd2dVQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JUTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZV1VnUHlBb1oyVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9jekV1VkVWWVZGVlNSVjh5UkN3Z2RXVXNJRkpsTENCelpTNTNhV1IwYUN3Z2MyVXVhR1ZwWjJoMEtTd2dkQzUwWlhoVGRXSkpiV0ZuWlRKRUtITXhMbFJGV0ZSVlVrVmZNa1FzSURBc0lEQXNJREFzSUU5bExDQkpaU3dnYzJVcEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNoek1TNVVSVmhVVlZKRlh6SkVMQ0F3TENCU1pTd2dUMlVzSUVsbExDQnpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIY29VeXdnSkdVcElDWW1JRklvWldVcExDQk5aUzVmWDNabGNuTnBiMjRnUFNCMFpTNTJaWEp6YVc5dUxDQlRMbTl1VlhCa1lYUmxJQ1ltSUZNdWIyNVZjR1JoZEdVb1V5azdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRU11WDE5MlpYSnphVzl1SUQwZ1V5NTJaWEp6YVc5dU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhWFFvUXl3Z1V5d2dRaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaFRMbWx0WVdkbExteGxibWQwYUNBaFBUMGdOaWtnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCbFpTQTlJRlJsS0VNc0lGTXBMQ0JxSUQwZ1V5NXpiM1Z5WTJVN0NpQWdJQ0FnSUNBZ2RDNWlhVzVrVkdWNGRIVnlaU2h6TVM1VVJWaFVWVkpGWDBOVlFrVmZUVUZRTENCRExsOWZkMlZpWjJ4VVpYaDBkWEpsTENCek1TNVVSVmhVVlZKRk1DQXJJRUlwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBaU0E5SUc0dVoyVjBLR29wT3dvZ0lDQWdJQ0FnSUdsbUlDaHFMblpsY25OcGIyNGdJVDA5SUhSbExsOWZkbVZ5YzJsdmJpQjhmQ0JsWlNBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQzVoWTNScGRtVlVaWGgwZFhKbEtITXhMbFJGV0ZSVlVrVXdJQ3NnUWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTlpTQTlJRkZsTG1kbGRGQnlhVzFoY21sbGN5aFJaUzUzYjNKcmFXNW5RMjlzYjNKVGNHRmpaU2tzSUhKbElEMGdVeTVqYjJ4dmNsTndZV05sSUQwOVBTQllkQ0EvSUc1MWJHd2dPaUJSWlM1blpYUlFjbWx0WVhKcFpYTW9VeTVqYjJ4dmNsTndZV05sS1N3Z1pHVWdQU0JUTG1OdmJHOXlVM0JoWTJVZ1BUMDlJRmgwSUh4OElFMWxJRDA5UFNCeVpTQS9JSE14TGs1UFRrVWdPaUJ6TVM1Q1VrOVhVMFZTWDBSRlJrRlZURlJmVjBWQ1IwdzdDaUFnSUNBZ0lDQWdJQ0FnSUhNeExuQnBlR1ZzVTNSdmNtVnBLSE14TGxWT1VFRkRTMTlHVEVsUVgxbGZWMFZDUjB3c0lGTXVabXhwY0ZrcExDQnpNUzV3YVhobGJGTjBiM0psYVNoek1TNVZUbEJCUTB0ZlVGSkZUVlZNVkVsUVRGbGZRVXhRU0VGZlYwVkNSMHdzSUZNdWNISmxiWFZzZEdsd2JIbEJiSEJvWVNrc0lITXhMbkJwZUdWc1UzUnZjbVZwS0hNeExsVk9VRUZEUzE5QlRFbEhUazFGVGxRc0lGTXVkVzV3WVdOclFXeHBaMjV0Wlc1MEtTd2djekV1Y0dsNFpXeFRkRzl5Wldrb2N6RXVWVTVRUVVOTFgwTlBURTlTVTFCQlEwVmZRMDlPVmtWU1UwbFBUbDlYUlVKSFRDd2daR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVEdVZ1BTQlRMbWx6UTI5dGNISmxjM05sWkZSbGVIUjFjbVVnZkh3Z1V5NXBiV0ZuWlZzd1hTNXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxMQ0JhWlNBOUlGTXVhVzFoWjJWYk1GMGdKaVlnVXk1cGJXRm5aVnN3WFM1cGMwUmhkR0ZVWlhoMGRYSmxMQ0J6WlNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZFZ1BTQXdPeUJSSUR3Z05qc2dVU3NyS1NGTVpTQW1KaUFoV21VZ1B5QnpaVnRSWFNBOUlIZ29VeTVwYldGblpWdFJYU3dnSVRFc0lDRXdMQ0JzS1NBNklITmxXMUZkSUQwZ1dtVWdQeUJUTG1sdFlXZGxXMUZkTG1sdFlXZGxJRG9nVXk1cGJXRm5aVnRSWFN3Z2MyVmJVVjBnUFNCeWRDaFRMQ0J6WlZ0UlhTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQWtaU0E5SUhObFd6QmRMQ0JQWlNBOUlIa29KR1VwSUh4OElHOHNJRWxsSUQwZ2NpNWpiMjUyWlhKMEtGTXVabTl5YldGMExDQlRMbU52Ykc5eVUzQmhZMlVwTENCU1pTQTlJSEl1WTI5dWRtVnlkQ2hUTG5SNWNHVXBMQ0JRSUQwZ1NTaFRMbWx1ZEdWeWJtRnNSbTl5YldGMExDQkpaU3dnVW1Vc0lGTXVZMjlzYjNKVGNHRmpaU2tzSUdObElEMGdieUFtSmlCVExtbHpWbWxrWlc5VVpYaDBkWEpsSUNFOVBTQWhNQ3dnWVdVZ1BTQjBaUzVmWDNabGNuTnBiMjRnUFQwOUlIWnZhV1FnTUNCOGZDQmxaU0E5UFQwZ0lUQXNJR2RsSUQwZ1RTaFRMQ0FrWlN3Z1QyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCRlpTaHpNUzVVUlZoVVZWSkZYME5WUWtWZlRVRlFMQ0JUTENCUFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRXhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCalpTQW1KaUJoWlNBbUppQjBMblJsZUZOMGIzSmhaMlV5UkNoek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUUxDQm5aU3dnVUN3Z0pHVXVkMmxrZEdnc0lDUmxMbWhsYVdkb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGRWdQU0F3T3lCUklEd2dOanNnVVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxWlNBOUlITmxXMUZkTG0xcGNHMWhjSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaVpTQTlJREE3SUdKbElEd2dkV1V1YkdWdVozUm9PeUJpWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVpsSUQwZ2RXVmJZbVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JUTG1admNtMWhkQ0FoUFQwZ1YzUWdQeUJKWlNBaFBUMGdiblZzYkNBL0lHTmxJRDhnZEM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQ2h6TVM1VVJWaFVWVkpGWDBOVlFrVmZUVUZRWDFCUFUwbFVTVlpGWDFnZ0t5QlJMQ0JpWlN3Z01Dd2dNQ3dnUm1VdWQybGtkR2dzSUVabExtaGxhV2RvZEN3Z1NXVXNJRVpsTG1SaGRHRXBJRG9nZEM1amIyMXdjbVZ6YzJWa1ZHVjRTVzFoWjJVeVJDaHpNUzVVUlZoVVZWSkZYME5WUWtWZlRVRlFYMUJQVTBsVVNWWkZYMWdnS3lCUkxDQmlaU3dnVUN3Z1JtVXVkMmxrZEdnc0lFWmxMbWhsYVdkb2RDd2dNQ3dnUm1VdVpHRjBZU2tnT2lCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUVGMGRHVnRjSFFnZEc4Z2JHOWhaQ0IxYm5OMWNIQnZjblJsWkNCamIyMXdjbVZ6YzJWa0lIUmxlSFIxY21VZ1ptOXliV0YwSUdsdUlDNXpaWFJVWlhoMGRYSmxRM1ZpWlNncElpa2dPaUJqWlNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNoek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUVgxQlBVMGxVU1ZaRlgxZ2dLeUJSTENCaVpTd2dNQ3dnTUN3Z1JtVXVkMmxrZEdnc0lFWmxMbWhsYVdkb2RDd2dTV1VzSUZKbExDQkdaUzVrWVhSaEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNoek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUVgxQlBVMGxVU1ZaRlgxZ2dLeUJSTENCaVpTd2dVQ3dnUm1VdWQybGtkR2dzSUVabExtaGxhV2RvZEN3Z01Dd2dTV1VzSUZKbExDQkdaUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMVpTQTlJRk11Yldsd2JXRndjeXdnWTJVZ0ppWWdZV1VnSmlZZ0tIVmxMbXhsYm1kMGFDQStJREFnSmlZZ1oyVXJLeXdnZEM1MFpYaFRkRzl5WVdkbE1rUW9jekV1VkVWWVZGVlNSVjlEVlVKRlgwMUJVQ3dnWjJVc0lGQXNJSE5sV3pCZExuZHBaSFJvTENCelpWc3dYUzVvWldsbmFIUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdVU0E5SURBN0lGRWdQQ0EyT3lCUkt5c3BhV1lnS0ZwbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb2N6RXVWRVZZVkZWU1JWOURWVUpGWDAxQlVGOVFUMU5KVkVsV1JWOVlJQ3NnVVN3Z01Dd2dNQ3dnTUN3Z2MyVmJVVjB1ZDJsa2RHZ3NJSE5sVzFGZExtaGxhV2RvZEN3Z1NXVXNJRkpsTENCelpWdFJYUzVrWVhSaEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNoek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUVgxQlBVMGxVU1ZaRlgxZ2dLeUJSTENBd0xDQlFMQ0J6WlZ0UlhTNTNhV1IwYUN3Z2MyVmJVVjB1YUdWcFoyaDBMQ0F3TENCSlpTd2dVbVVzSUhObFcxRmRMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZbVVnUFNBd095QmlaU0E4SUhWbExteGxibWQwYURzZ1ltVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQmRDQTlJSFZsVzJKbFhTNXBiV0ZuWlZ0UlhTNXBiV0ZuWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb2N6RXVWRVZZVkZWU1JWOURWVUpGWDAxQlVGOVFUMU5KVkVsV1JWOVlJQ3NnVVN3Z1ltVWdLeUF4TENBd0xDQXdMQ0JCZEM1M2FXUjBhQ3dnUVhRdWFHVnBaMmgwTENCSlpTd2dVbVVzSUVGMExtUmhkR0VwSURvZ2RDNTBaWGhKYldGblpUSkVLSE14TGxSRldGUlZVa1ZmUTFWQ1JWOU5RVkJmVUU5VFNWUkpWa1ZmV0NBcklGRXNJR0psSUNzZ01Td2dVQ3dnUVhRdWQybGtkR2dzSUVGMExtaGxhV2RvZEN3Z01Dd2dTV1VzSUZKbExDQkJkQzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdObElEOGdkQzUwWlhoVGRXSkpiV0ZuWlRKRUtITXhMbFJGV0ZSVlVrVmZRMVZDUlY5TlFWQmZVRTlUU1ZSSlZrVmZXQ0FySUZFc0lEQXNJREFzSURBc0lFbGxMQ0JTWlN3Z2MyVmJVVjBwSURvZ2RDNTBaWGhKYldGblpUSkVLSE14TGxSRldGUlZVa1ZmUTFWQ1JWOU5RVkJmVUU5VFNWUkpWa1ZmV0NBcklGRXNJREFzSUZBc0lFbGxMQ0JTWlN3Z2MyVmJVVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ltVWdQU0F3T3lCaVpTQThJSFZsTG14bGJtZDBhRHNnWW1Vckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHWlNBOUlIVmxXMkpsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb2N6RXVWRVZZVkZWU1JWOURWVUpGWDAxQlVGOVFUMU5KVkVsV1JWOVlJQ3NnVVN3Z1ltVWdLeUF4TENBd0xDQXdMQ0JKWlN3Z1VtVXNJRVpsTG1sdFlXZGxXMUZkS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2h6TVM1VVJWaFVWVkpGWDBOVlFrVmZUVUZRWDFCUFUwbFVTVlpGWDFnZ0t5QlJMQ0JpWlNBcklERXNJRkFzSUVsbExDQlNaU3dnUm1VdWFXMWhaMlZiVVYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IzS0ZNc0lFOWxLU0FtSmlCU0tITXhMbFJGV0ZSVlVrVmZRMVZDUlY5TlFWQXBMQ0IwWlM1ZlgzWmxjbk5wYjI0Z1BTQnFMblpsY25OcGIyNHNJRk11YjI1VmNHUmhkR1VnSmlZZ1V5NXZibFZ3WkdGMFpTaFRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnUXk1ZlgzWmxjbk5wYjI0Z1BTQlRMblpsY25OcGIyNDdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJEWlNoRExDQlRMQ0JDTENCbFpTd2dhaXdnZEdVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVFdVZ1BTQnlMbU52Ym5abGNuUW9RaTVtYjNKdFlYUXNJRUl1WTI5c2IzSlRjR0ZqWlNrc0lISmxJRDBnY2k1amIyNTJaWEowS0VJdWRIbHdaU2tzSUdSbElEMGdTU2hDTG1sdWRHVnlibUZzUm05eWJXRjBMQ0JOWlN3Z2NtVXNJRUl1WTI5c2IzSlRjR0ZqWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLQ0Z1TG1kbGRDaFRLUzVmWDJoaGMwVjRkR1Z5Ym1Gc1ZHVjRkSFZ5WlhNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGcGxJRDBnVFdGMGFDNXRZWGdvTVN3Z1V5NTNhV1IwYUNBK1BpQjBaU2tzSUhObElEMGdUV0YwYUM1dFlYZ29NU3dnVXk1b1pXbG5hSFFnUGo0Z2RHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCcUlEMDlQU0J6TVM1VVJWaFVWVkpGWHpORUlIeDhJR29nUFQwOUlITXhMbFJGV0ZSVlVrVmZNa1JmUVZKU1FWa2dQeUIwTG5SbGVFbHRZV2RsTTBRb2Fpd2dkR1VzSUdSbExDQmFaU3dnYzJVc0lGTXVaR1Z3ZEdnc0lEQXNJRTFsTENCeVpTd2diblZzYkNrZ09pQjBMblJsZUVsdFlXZGxNa1FvYWl3Z2RHVXNJR1JsTENCYVpTd2djMlVzSURBc0lFMWxMQ0J5WlN3Z2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0hNeExrWlNRVTFGUWxWR1JrVlNMQ0JES1N3Z1RtVW9VeWtnUHlCa0xtWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpUSkVUWFZzZEdsellXMXdiR1ZGV0ZRb2N6RXVSbEpCVFVWQ1ZVWkdSVklzSUdWbExDQnFMQ0J1TG1kbGRDaENLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTd2dNQ3dnZVdVb1V5a3BJRG9nS0dvZ1BUMDlJSE14TGxSRldGUlZVa1ZmTWtRZ2ZId2dhaUErUFNCek1TNVVSVmhVVlZKRlgwTlZRa1ZmVFVGUVgxQlBVMGxVU1ZaRlgxZ2dKaVlnYWlBOFBTQnpNUzVVUlZoVVZWSkZYME5WUWtWZlRVRlFYMDVGUjBGVVNWWkZYMW9wSUNZbUlITXhMbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVEpFS0hNeExrWlNRVTFGUWxWR1JrVlNMQ0JsWlN3Z2Fpd2diaTVuWlhRb1Fpa3VYMTkzWldKbmJGUmxlSFIxY21Vc0lIUmxLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvY3pFdVJsSkJUVVZDVlVaR1JWSXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdUQ2hETENCVExDQkNLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tITXhMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9jekV1VWtWT1JFVlNRbFZHUmtWU0xDQkRLU3dnVXk1a1pYQjBhRUoxWm1abGNpQW1KaUFoVXk1emRHVnVZMmxzUW5WbVptVnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JsWlNBOUlHOGdQVDA5SUNFd0lEOGdjekV1UkVWUVZFaGZRMDlOVUU5T1JVNVVNalFnT2lCek1TNUVSVkJVU0Y5RFQwMVFUMDVGVGxReE5qc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFSWdmSHdnVG1Vb1V5a3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcUlEMGdVeTVrWlhCMGFGUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcUlDWW1JR291YVhORVpYQjBhRlJsZUhSMWNtVWdKaVlnS0dvdWRIbHdaU0E5UFQwZ2VHNGdQeUJsWlNBOUlITXhMa1JGVUZSSVgwTlBUVkJQVGtWT1ZETXlSaUE2SUdvdWRIbHdaU0E5UFQwZ1RHNGdKaVlnS0dWbElEMGdjekV1UkVWUVZFaGZRMDlOVUU5T1JVNVVNalFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBaU0E5SUhsbEtGTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUbVVvVXlrZ1B5QmtMbkpsYm1SbGNtSjFabVpsY2xOMGIzSmhaMlZOZFd4MGFYTmhiWEJzWlVWWVZDaHpNUzVTUlU1RVJWSkNWVVpHUlZJc0lIUmxMQ0JsWlN3Z1V5NTNhV1IwYUN3Z1V5NW9aV2xuYUhRcElEb2djekV1Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtITXhMbEpGVGtSRlVrSlZSa1pGVWl3Z2RHVXNJR1ZsTENCVExuZHBaSFJvTENCVExtaGxhV2RvZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnpNUzV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsS0hNeExsSkZUa1JGVWtKVlJrWkZVaXdnWldVc0lGTXVkMmxrZEdnc0lGTXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY3pFdVpuSmhiV1ZpZFdabVpYSlNaVzVrWlhKaWRXWm1aWElvY3pFdVJsSkJUVVZDVlVaR1JWSXNJSE14TGtSRlVGUklYMEZVVkVGRFNFMUZUbFFzSUhNeExsSkZUa1JGVWtKVlJrWkZVaXdnUXlrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaFRMbVJsY0hSb1FuVm1abVZ5SUNZbUlGTXVjM1JsYm1OcGJFSjFabVpsY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pXVWdQU0I1WlNoVEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnUWlBbUppQk9aU2hUS1NBOVBUMGdJVEVnUHlCek1TNXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1VvY3pFdVVrVk9SRVZTUWxWR1JrVlNMQ0JsWlN3Z2N6RXVSRVZRVkVneU5GOVRWRVZPUTBsTU9Dd2dVeTUzYVdSMGFDd2dVeTVvWldsbmFIUXBJRG9nVG1Vb1V5a2dQeUJrTG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJWTmRXeDBhWE5oYlhCc1pVVllWQ2h6TVM1U1JVNUVSVkpDVlVaR1JWSXNJR1ZsTENCek1TNUVSVkJVU0RJMFgxTlVSVTVEU1V3NExDQlRMbmRwWkhSb0xDQlRMbWhsYVdkb2RDa2dPaUJ6TVM1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbEtITXhMbEpGVGtSRlVrSlZSa1pGVWl3Z2N6RXVSRVZRVkVoZlUxUkZUa05KVEN3Z1V5NTNhV1IwYUN3Z1V5NW9aV2xuYUhRcExDQnpNUzVtY21GdFpXSjFabVpsY2xKbGJtUmxjbUoxWm1abGNpaHpNUzVHVWtGTlJVSlZSa1pGVWl3Z2N6RXVSRVZRVkVoZlUxUkZUa05KVEY5QlZGUkJRMGhOUlU1VUxDQnpNUzVTUlU1RVJWSkNWVVpHUlZJc0lFTXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmxaU0E5SUZNdWFYTlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QTlQVDBnSVRBZ1B5QlRMblJsZUhSMWNtVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JUTG5SbGVIUjFjbVVLSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JxSUQwZ01Ec2dhaUE4SUdWbExteGxibWQwYURzZ2Fpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMFpTQTlJR1ZsVzJwZExDQk5aU0E5SUhJdVkyOXVkbVZ5ZENoMFpTNW1iM0p0WVhRc0lIUmxMbU52Ykc5eVUzQmhZMlVwTENCeVpTQTlJSEl1WTI5dWRtVnlkQ2gwWlM1MGVYQmxLU3dnWkdVZ1BTQkpLSFJsTG1sdWRHVnlibUZzUm05eWJXRjBMQ0JOWlN3Z2NtVXNJSFJsTG1OdmJHOXlVM0JoWTJVcExDQk1aU0E5SUhsbEtGTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRaUFtSmlCT1pTaFRLU0E5UFQwZ0lURWdQeUJ6TVM1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVW9jekV1VWtWT1JFVlNRbFZHUmtWU0xDQk1aU3dnWkdVc0lGTXVkMmxrZEdnc0lGTXVhR1ZwWjJoMEtTQTZJRTVsS0ZNcElEOGdaQzV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdWRldGUW9jekV1VWtWT1JFVlNRbFZHUmtWU0xDQk1aU3dnWkdVc0lGTXVkMmxrZEdnc0lGTXVhR1ZwWjJoMEtTQTZJSE14TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJVb2N6RXVVa1ZPUkVWU1FsVkdSa1ZTTENCa1pTd2dVeTUzYVdSMGFDd2dVeTVvWldsbmFIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lITXhMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9jekV1VWtWT1JFVlNRbFZHUmtWU0xDQnVkV3hzS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHOWxLRU1zSUZNcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVXlBbUppQlRMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lrUmxjSFJvSUZSbGVIUjFjbVVnZDJsMGFDQmpkV0psSUhKbGJtUmxjaUIwWVhKblpYUnpJR2x6SUc1dmRDQnpkWEJ3YjNKMFpXUWlLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb2N6RXVSbEpCVFVWQ1ZVWkdSVklzSUVNcExDQWhLRk11WkdWd2RHaFVaWGgwZFhKbElDWW1JRk11WkdWd2RHaFVaWGgwZFhKbExtbHpSR1Z3ZEdoVVpYaDBkWEpsS1NrZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKeVpXNWtaWEpVWVhKblpYUXVaR1Z3ZEdoVVpYaDBkWEpsSUcxMWMzUWdZbVVnWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWRWhTUlVVdVJHVndkR2hVWlhoMGRYSmxJaWs3Q2lBZ0lDQWdJQ0FnS0NGdUxtZGxkQ2hUTG1SbGNIUm9WR1Y0ZEhWeVpTa3VYMTkzWldKbmJGUmxlSFIxY21VZ2ZId2dVeTVrWlhCMGFGUmxlSFIxY21VdWFXMWhaMlV1ZDJsa2RHZ2dJVDA5SUZNdWQybGtkR2dnZkh3Z1V5NWtaWEIwYUZSbGVIUjFjbVV1YVcxaFoyVXVhR1ZwWjJoMElDRTlQU0JUTG1obGFXZG9kQ2tnSmlZZ0tGTXVaR1Z3ZEdoVVpYaDBkWEpsTG1sdFlXZGxMbmRwWkhSb0lEMGdVeTUzYVdSMGFDd2dVeTVrWlhCMGFGUmxlSFIxY21VdWFXMWhaMlV1YUdWcFoyaDBJRDBnVXk1b1pXbG5hSFFzSUZNdVpHVndkR2hVWlhoMGRYSmxMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXBMQ0JMS0ZNdVpHVndkR2hVWlhoMGRYSmxMQ0F3S1RzS0lDQWdJQ0FnSUNCc1pYUWdaV1VnUFNCdUxtZGxkQ2hUTG1SbGNIUm9WR1Y0ZEhWeVpTa3VYMTkzWldKbmJGUmxlSFIxY21Vc0lHb2dQU0I1WlNoVEtUc0tJQ0FnSUNBZ0lDQnBaaUFvVXk1a1pYQjBhRlJsZUhSMWNtVXVabTl5YldGMElEMDlQU0J6YVNrZ1RtVW9VeWtnUHlCa0xtWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpUSkVUWFZzZEdsellXMXdiR1ZGV0ZRb2N6RXVSbEpCVFVWQ1ZVWkdSVklzSUhNeExrUkZVRlJJWDBGVVZFRkRTRTFGVGxRc0lITXhMbFJGV0ZSVlVrVmZNa1FzSUdWbExDQXdMQ0JxS1NBNklITXhMbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVEpFS0hNeExrWlNRVTFGUWxWR1JrVlNMQ0J6TVM1RVJWQlVTRjlCVkZSQlEwaE5SVTVVTENCek1TNVVSVmhVVlZKRlh6SkVMQ0JsWlN3Z01DazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9VeTVrWlhCMGFGUmxlSFIxY21VdVptOXliV0YwSUQwOVBTQlphU2tnVG1Vb1V5a2dQeUJrTG1aeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlRKRVRYVnNkR2x6WVcxd2JHVkZXRlFvY3pFdVJsSkJUVVZDVlVaR1JWSXNJSE14TGtSRlVGUklYMU5VUlU1RFNVeGZRVlJVUVVOSVRVVk9WQ3dnY3pFdVZFVllWRlZTUlY4eVJDd2daV1VzSURBc0lHb3BJRG9nY3pFdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9jekV1UmxKQlRVVkNWVVpHUlZJc0lITXhMa1JGVUZSSVgxTlVSVTVEU1V4ZlFWUlVRVU5JVFVWT1ZDd2djekV1VkVWWVZGVlNSVjh5UkN3Z1pXVXNJREFwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlZibXR1YjNkdUlHUmxjSFJvVkdWNGRIVnlaU0JtYjNKdFlYUWlLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZnb1F5a2dld29nSUNBZ0lDQWdJR3hsZENCVElEMGdiaTVuWlhRb1F5a3NJRUlnUFNCRExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUQwOVBTQWhNRHNLSUNBZ0lDQWdJQ0JwWmlBb1F5NWtaWEIwYUZSbGVIUjFjbVVnSmlZZ0lWTXVYMTloZFhSdlFXeHNiMk5oZEdWRVpYQjBhRUoxWm1abGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9RaWtnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0owWVhKblpYUXVaR1Z3ZEdoVVpYaDBkWEpsSUc1dmRDQnpkWEJ3YjNKMFpXUWdhVzRnUTNWaVpTQnlaVzVrWlhJZ2RHRnlaMlYwY3lJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J2WlNoVExsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpd2dReWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoQ0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUZNdVgxOTNaV0puYkVSbGNIUm9ZblZtWm1WeUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pXVWdQU0F3T3lCbFpTQThJRFk3SUdWbEt5c3BkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9jekV1UmxKQlRVVkNWVVpHUlZJc0lGTXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXMlZsWFNrc0lGTXVYMTkzWldKbmJFUmxjSFJvWW5WbVptVnlXMlZsWFNBOUlITXhMbU55WldGMFpWSmxibVJsY21KMVptWmxjaWdwTENCTUtGTXVYMTkzWldKbmJFUmxjSFJvWW5WbVptVnlXMlZsWFN3Z1F5d2dJVEVwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWh6TVM1R1VrRk5SVUpWUmtaRlVpd2dVeTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElwTENCVExsOWZkMlZpWjJ4RVpYQjBhR0oxWm1abGNpQTlJSE14TG1OeVpXRjBaVkpsYm1SbGNtSjFabVpsY2lncExDQk1LRk11WDE5M1pXSm5iRVJsY0hSb1luVm1abVZ5TENCRExDQWhNU2s3Q2lBZ0lDQWdJQ0FnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvY3pFdVJsSkJUVVZDVlVaR1JWSXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhV1VvUXl3Z1V5d2dRaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxaU0E5SUc0dVoyVjBLRU1wT3dvZ0lDQWdJQ0FnSUZNZ0lUMDlJSFp2YVdRZ01DQW1KaUJEWlNobFpTNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXNJRU1zSUVNdWRHVjRkSFZ5WlN3Z2N6RXVRMDlNVDFKZlFWUlVRVU5JVFVWT1ZEQXNJSE14TGxSRldGUlZVa1ZmTWtRc0lEQXBMQ0JDSUNFOVBTQjJiMmxrSURBZ0ppWWdXQ2hES1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFb29ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnUXk1MFpYaDBkWEpsTENCQ0lEMGdiaTVuWlhRb1F5a3NJR1ZsSUQwZ2JpNW5aWFFvVXlrN0NpQWdJQ0FnSUNBZ1F5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dXU2tzSUVNdWFYTlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QWhQVDBnSVRBZ0ppWWdLR1ZsTGw5ZmQyVmlaMnhVWlhoMGRYSmxJRDA5UFNCMmIybGtJREFnSmlZZ0tHVmxMbDlmZDJWaVoyeFVaWGgwZFhKbElEMGdjekV1WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BLU3dnWldVdVgxOTJaWEp6YVc5dUlEMGdVeTUyWlhKemFXOXVMQ0JoTG0xbGJXOXllUzUwWlhoMGRYSmxjeXNyS1RzS0lDQWdJQ0FnSUNCc1pYUWdhaUE5SUVNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnUFQwOUlDRXdMQ0IwWlNBOUlFTXVhWE5YWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUE5UFQwZ0lUQXNJRTFsSUQwZ2VTaERLU0I4ZkNCdk93b2dJQ0FnSUNBZ0lHbG1JQ2hxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRUl1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY21VZ1BTQXdPeUJ5WlNBOElEWTdJSEpsS3lzcGFXWWdLRzhnSmlZZ1V5NXRhWEJ0WVhCeklDWW1JRk11Yldsd2JXRndjeTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ0xsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNsdHlaVjBnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pHVWdQU0F3T3lCa1pTQThJRk11Yldsd2JXRndjeTVzWlc1bmRHZzdJR1JsS3lzcFFpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSmJjbVZkVzJSbFhTQTlJSE14TG1OeVpXRjBaVVp5WVcxbFluVm1abVZ5S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQkNMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjbHR5WlYwZ1BTQnpNUzVqY21WaGRHVkdjbUZ0WldKMVptWmxjaWdwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2SUNZbUlGTXViV2x3YldGd2N5QW1KaUJUTG0xcGNHMWhjSE11YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY21VZ1BTQXdPeUJ5WlNBOElGTXViV2x3YldGd2N5NXNaVzVuZEdnN0lISmxLeXNwUWk1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhKYmNtVmRJRDBnY3pFdVkzSmxZWFJsUm5KaGJXVmlkV1ptWlhJb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJRUl1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5SUQwZ2N6RXVZM0psWVhSbFJuSmhiV1ZpZFdabVpYSW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJsS1NCcFppQW9hUzVrY21GM1FuVm1abVZ5Y3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEpsSUQwZ1F5NTBaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCa1pTQTlJREFzSUV4bElEMGdjbVV1YkdWdVozUm9PeUJrWlNBOElFeGxPeUJrWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1dtVWdQU0J1TG1kbGRDaHlaVnRrWlYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRnBsTGw5ZmQyVmlaMnhVWlhoMGRYSmxJRDA5UFNCMmIybGtJREFnSmlZZ0tGcGxMbDlmZDJWaVoyeFVaWGgwZFhKbElEMGdjekV1WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BMQ0JoTG0xbGJXOXllUzUwWlhoMGRYSmxjeXNyS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1YyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNZ1kyRnVJRzl1YkhrZ1ltVWdkWE5sWkNCM2FYUm9JRmRsWWtkTU1pQnZjaUJYUlVKSFRGOWtjbUYzWDJKMVptWmxjbk1nWlhoMFpXNXphVzl1TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2J5QW1KaUJETG5OaGJYQnNaWE1nUGlBd0lDWW1JRTVsS0VNcElEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEpsSUQwZ2RHVWdQeUJUSURvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRk1LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpQTlJSE14TG1OeVpXRjBaVVp5WVcxbFluVm1abVZ5S0Nrc0lFSXVYMTkzWldKbmJFTnZiRzl5VW1WdVpHVnlZblZtWm1WeUlEMGdXMTBzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0hNeExrWlNRVTFGUWxWR1JrVlNMQ0JDTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUmxJRDBnTURzZ1pHVWdQQ0J5WlM1c1pXNW5kR2c3SUdSbEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1aU0E5SUhKbFcyUmxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ0xsOWZkMlZpWjJ4RGIyeHZjbEpsYm1SbGNtSjFabVpsY2x0a1pWMGdQU0J6TVM1amNtVmhkR1ZTWlc1a1pYSmlkV1ptWlhJb0tTd2djekV1WW1sdVpGSmxibVJsY21KMVptWmxjaWh6TVM1U1JVNUVSVkpDVlVaR1JWSXNJRUl1WDE5M1pXSm5iRU52Ykc5eVVtVnVaR1Z5WW5WbVptVnlXMlJsWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZwbElEMGdjaTVqYjI1MlpYSjBLRXhsTG1admNtMWhkQ3dnVEdVdVkyOXNiM0pUY0dGalpTa3NJSE5sSUQwZ2NpNWpiMjUyWlhKMEtFeGxMblI1Y0dVcExDQWtaU0E5SUVrb1RHVXVhVzUwWlhKdVlXeEdiM0p0WVhRc0lGcGxMQ0J6WlN3Z1RHVXVZMjlzYjNKVGNHRmpaU3dnUXk1cGMxaFNVbVZ1WkdWeVZHRnlaMlYwSUQwOVBTQWhNQ2tzSUU5bElEMGdlV1VvUXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjekV1Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtITXhMbEpGVGtSRlVrSlZSa1pGVWl3Z1QyVXNJQ1JsTENCRExuZHBaSFJvTENCRExtaGxhV2RvZENrc0lITXhMbVp5WVcxbFluVm1abVZ5VW1WdVpHVnlZblZtWm1WeUtITXhMa1pTUVUxRlFsVkdSa1ZTTENCek1TNURUMHhQVWw5QlZGUkJRMGhOUlU1VU1DQXJJR1JsTENCek1TNVNSVTVFUlZKQ1ZVWkdSVklzSUVJdVgxOTNaV0puYkVOdmJHOXlVbVZ1WkdWeVluVm1abVZ5VzJSbFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzVpYVc1a1VtVnVaR1Z5WW5WbVptVnlLSE14TGxKRlRrUkZVa0pWUmtaRlVpd2diblZzYkNrc0lFTXVaR1Z3ZEdoQ2RXWm1aWElnSmlZZ0tFSXVYMTkzWldKbmJFUmxjSFJvVW1WdVpHVnlZblZtWm1WeUlEMGdjekV1WTNKbFlYUmxVbVZ1WkdWeVluVm1abVZ5S0Nrc0lFd29RaTVmWDNkbFltZHNSR1Z3ZEdoU1pXNWtaWEppZFdabVpYSXNJRU1zSUNFd0tTa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLSE14TGtaU1FVMUZRbFZHUmtWU0xDQnVkV3hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2Fpa2dld29nSUNBZ0lDQWdJQ0FnSUNCMExtSnBibVJVWlhoMGRYSmxLSE14TGxSRldGUlZVa1ZmUTFWQ1JWOU5RVkFzSUdWbExsOWZkMlZpWjJ4VVpYaDBkWEpsS1N3Z1JXVW9jekV1VkVWWVZGVlNSVjlEVlVKRlgwMUJVQ3dnVXl3Z1RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhKbElEMGdNRHNnY21VZ1BDQTJPeUJ5WlNzcktXbG1JQ2h2SUNZbUlGTXViV2x3YldGd2N5QW1KaUJUTG0xcGNHMWhjSE11YkdWdVozUm9JRDRnTUNrZ1ptOXlLR3hsZENCa1pTQTlJREE3SUdSbElEd2dVeTV0YVhCdFlYQnpMbXhsYm1kMGFEc2daR1VyS3lsRFpTaENMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjbHR5WlYxYlpHVmRMQ0JETENCVExDQnpNUzVEVDB4UFVsOUJWRlJCUTBoTlJVNVVNQ3dnY3pFdVZFVllWRlZTUlY5RFZVSkZYMDFCVUY5UVQxTkpWRWxXUlY5WUlDc2djbVVzSUdSbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQkRaU2hDTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0eVpWMHNJRU1zSUZNc0lITXhMa05QVEU5U1gwRlVWRUZEU0UxRlRsUXdMQ0J6TVM1VVJWaFVWVkpGWDBOVlFrVmZUVUZRWDFCUFUwbFVTVlpGWDFnZ0t5QnlaU3dnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSGNvVXl3Z1RXVXBJQ1ltSUZJb2N6RXVWRVZZVkZWU1JWOURWVUpGWDAxQlVDa3NJSFF1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISmxJRDBnUXk1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUmxJRDBnTUN3Z1RHVWdQU0J5WlM1c1pXNW5kR2c3SUdSbElEd2dUR1U3SUdSbEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZwbElEMGdjbVZiWkdWZExDQnpaU0E5SUc0dVoyVjBLRnBsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdVltbHVaRlJsZUhSMWNtVW9jekV1VkVWWVZGVlNSVjh5UkN3Z2MyVXVYMTkzWldKbmJGUmxlSFIxY21VcExDQkZaU2h6TVM1VVJWaFVWVkpGWHpKRUxDQmFaU3dnVFdVcExDQkRaU2hDTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2l3Z1F5d2dXbVVzSUhNeExrTlBURTlTWDBGVVZFRkRTRTFGVGxRd0lDc2daR1VzSUhNeExsUkZXRlJWVWtWZk1rUXNJREFwTENCM0tGcGxMQ0JOWlNrZ0ppWWdVaWh6TVM1VVJWaFVWVkpGWHpKRUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NtVWdQU0J6TVM1VVJWaFVWVkpGWHpKRU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0tFTXVhWE5YWldKSFRETkVVbVZ1WkdWeVZHRnlaMlYwSUh4OElFTXVhWE5YWldKSFRFRnljbUY1VW1WdVpHVnlWR0Z5WjJWMEtTQW1KaUFvYnlBL0lISmxJRDBnUXk1cGMxZGxZa2RNTTBSU1pXNWtaWEpVWVhKblpYUWdQeUJ6TVM1VVJWaFVWVkpGWHpORUlEb2djekV1VkVWWVZGVlNSVjh5UkY5QlVsSkJXU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVkdWNGRIVnlaWE02SUZSSVVrVkZMa1JoZEdFelJGUmxlSFIxY21VZ1lXNWtJRlJJVWtWRkxrUmhkR0ZCY25KaGVWUmxlSFIxY21VZ2IyNXNlU0J6ZFhCd2IzSjBaV1FnZDJsMGFDQlhaV0pIVERJdUlpa3BMQ0IwTG1KcGJtUlVaWGgwZFhKbEtISmxMQ0JsWlM1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUVWbEtISmxMQ0JUTENCTlpTa3NJRzhnSmlZZ1V5NXRhWEJ0WVhCeklDWW1JRk11Yldsd2JXRndjeTVzWlc1bmRHZ2dQaUF3S1NCbWIzSW9iR1YwSUdSbElEMGdNRHNnWkdVZ1BDQlRMbTFwY0cxaGNITXViR1Z1WjNSb095QmtaU3NyS1VObEtFSXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXMlJsWFN3Z1F5d2dVeXdnY3pFdVEwOU1UMUpmUVZSVVFVTklUVVZPVkRBc0lISmxMQ0JrWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ1EyVW9RaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElzSUVNc0lGTXNJSE14TGtOUFRFOVNYMEZVVkVGRFNFMUZUbFF3TENCeVpTd2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIY29VeXdnVFdVcElDWW1JRklvY21VcExDQjBMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdReTVrWlhCMGFFSjFabVpsY2lBbUppQllLRU1wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1UyVW9ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnZVNoREtTQjhmQ0J2TENCQ0lEMGdReTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwOVBTQWhNQ0EvSUVNdWRHVjRkSFZ5WlNBNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnUXk1MFpYaDBkWEpsQ2lBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdWbElEMGdNQ3dnYWlBOUlFSXViR1Z1WjNSb095QmxaU0E4SUdvN0lHVmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEdVZ1BTQkNXMlZsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hjb2RHVXNJRk1wS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUV1VnUFNCRExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUQ4Z2N6RXVWRVZZVkZWU1JWOURWVUpGWDAxQlVDQTZJSE14TGxSRldGUlZVa1ZmTWtRc0lISmxJRDBnYmk1blpYUW9kR1VwTGw5ZmQyVmlaMnhVWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQzVpYVc1a1ZHVjRkSFZ5WlNoTlpTd2djbVVwTENCU0tFMWxLU3dnZEM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ0WlNoREtTQjdDaUFnSUNBZ0lDQWdhV1lnS0c4Z0ppWWdReTV6WVcxd2JHVnpJRDRnTUNBbUppQk9aU2hES1NBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZNZ1BTQkRMbWx6VjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE1nUHlCRExuUmxlSFIxY21VZ09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkRMblJsZUhSMWNtVUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z1FpQTlJRU11ZDJsa2RHZ3NJR1ZsSUQwZ1F5NW9aV2xuYUhRc0lHb2dQU0J6TVM1RFQweFBVbDlDVlVaR1JWSmZRa2xVTENCMFpTQTlJRnRkTENCTlpTQTlJRU11YzNSbGJtTnBiRUoxWm1abGNpQS9JSE14TGtSRlVGUklYMU5VUlU1RFNVeGZRVlJVUVVOSVRVVk9WQ0E2SUhNeExrUkZVRlJJWDBGVVZFRkRTRTFGVGxRc0lISmxJRDBnYmk1blpYUW9ReWtzSUdSbElEMGdReTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwOVBTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1JsS1NCbWIzSW9iR1YwSUV4bElEMGdNRHNnVEdVZ1BDQlRMbXhsYm1kMGFEc2dUR1VyS3lsMExtSnBibVJHY21GdFpXSjFabVpsY2loek1TNUdVa0ZOUlVKVlJrWkZVaXdnY21VdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlLU3dnY3pFdVpuSmhiV1ZpZFdabVpYSlNaVzVrWlhKaWRXWm1aWElvY3pFdVJsSkJUVVZDVlVaR1JWSXNJSE14TGtOUFRFOVNYMEZVVkVGRFNFMUZUbFF3SUNzZ1RHVXNJSE14TGxKRlRrUkZVa0pWUmtaRlVpd2diblZzYkNrc0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtITXhMa1pTUVUxRlFsVkdSa1ZTTENCeVpTNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXBMQ0J6TVM1bWNtRnRaV0oxWm1abGNsUmxlSFIxY21VeVJDaHpNUzVFVWtGWFgwWlNRVTFGUWxWR1JrVlNMQ0J6TVM1RFQweFBVbDlCVkZSQlEwaE5SVTVVTUNBcklFeGxMQ0J6TVM1VVJWaFVWVkpGWHpKRUxDQnVkV3hzTENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvY3pFdVVrVkJSRjlHVWtGTlJVSlZSa1pGVWl3Z2NtVXVYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5S1N3Z2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb2N6RXVSRkpCVjE5R1VrRk5SVUpWUmtaRlVpd2djbVV1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQk1aU0E5SURBN0lFeGxJRHdnVXk1c1pXNW5kR2c3SUV4bEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1V1Y0hWemFDaHpNUzVEVDB4UFVsOUJWRlJCUTBoTlJVNVVNQ0FySUV4bEtTd2dReTVrWlhCMGFFSjFabVpsY2lBbUppQjBaUzV3ZFhOb0tFMWxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCYVpTQTlJSEpsTGw5ZmFXZHViM0psUkdWd2RHaFdZV3gxWlhNZ0lUMDlJSFp2YVdRZ01DQS9JSEpsTGw5ZmFXZHViM0psUkdWd2RHaFdZV3gxWlhNZ09pQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoYVpTQTlQVDBnSVRFZ0ppWWdLRU11WkdWd2RHaENkV1ptWlhJZ0ppWWdLR29nZkQwZ2N6RXVSRVZRVkVoZlFsVkdSa1ZTWDBKSlZDa3NJRU11YzNSbGJtTnBiRUoxWm1abGNpQW1KaUFvYWlCOFBTQnpNUzVUVkVWT1EwbE1YMEpWUmtaRlVsOUNTVlFwS1N3Z1pHVWdKaVlnY3pFdVpuSmhiV1ZpZFdabVpYSlNaVzVrWlhKaWRXWm1aWElvY3pFdVVrVkJSRjlHVWtGTlJVSlZSa1pGVWl3Z2N6RXVRMDlNVDFKZlFWUlVRVU5JVFVWT1ZEQXNJSE14TGxKRlRrUkZVa0pWUmtaRlVpd2djbVV1WDE5M1pXSm5iRU52Ykc5eVVtVnVaR1Z5WW5WbVptVnlXMHhsWFNrc0lGcGxJRDA5UFNBaE1DQW1KaUFvY3pFdWFXNTJZV3hwWkdGMFpVWnlZVzFsWW5WbVptVnlLSE14TGxKRlFVUmZSbEpCVFVWQ1ZVWkdSVklzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk5aUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYU2tzSUhNeExtbHVkbUZzYVdSaGRHVkdjbUZ0WldKMVptWmxjaWh6TVM1RVVrRlhYMFpTUVUxRlFsVkdSa1ZTTENCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV1VLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjBwS1N3Z1pHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMlVnUFNCdUxtZGxkQ2hUVzB4bFhTa3VYMTkzWldKbmJGUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjekV1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb2N6RXVSRkpCVjE5R1VrRk5SVUpWUmtaRlVpd2djekV1UTA5TVQxSmZRVlJVUVVOSVRVVk9WREFzSUhNeExsUkZXRlJWVWtWZk1rUXNJSE5sTENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXhMbUpzYVhSR2NtRnRaV0oxWm1abGNpZ3dMQ0F3TENCQ0xDQmxaU3dnTUN3Z01Dd2dRaXdnWldVc0lHb3NJSE14TGs1RlFWSkZVMVFwTENCbUlDWW1JSE14TG1sdWRtRnNhV1JoZEdWR2NtRnRaV0oxWm1abGNpaHpNUzVTUlVGRVgwWlNRVTFGUWxWR1JrVlNMQ0IwWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLSE14TGxKRlFVUmZSbEpCVFVWQ1ZVWkdSVklzSUc1MWJHd3BMQ0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWh6TVM1RVVrRlhYMFpTUVUxRlFsVkdSa1ZTTENCdWRXeHNLU3dnWkdVcElHWnZjaWhzWlhRZ1RHVWdQU0F3T3lCTVpTQThJRk11YkdWdVozUm9PeUJNWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtITXhMa1pTUVUxRlFsVkdSa1ZTTENCeVpTNWZYM2RsWW1kc1RYVnNkR2x6WVcxd2JHVmtSbkpoYldWaWRXWm1aWElwTENCek1TNW1jbUZ0WldKMVptWmxjbEpsYm1SbGNtSjFabVpsY2loek1TNUdVa0ZOUlVKVlJrWkZVaXdnY3pFdVEwOU1UMUpmUVZSVVFVTklUVVZPVkRBZ0t5Qk1aU3dnY3pFdVVrVk9SRVZTUWxWR1JrVlNMQ0J5WlM1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWEpiVEdWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JhWlNBOUlHNHVaMlYwS0ZOYlRHVmRLUzVmWDNkbFltZHNWR1Y0ZEhWeVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtITXhMa1pTUVUxRlFsVkdSa1ZTTENCeVpTNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXBMQ0J6TVM1bWNtRnRaV0oxWm1abGNsUmxlSFIxY21VeVJDaHpNUzVFVWtGWFgwWlNRVTFGUWxWR1JrVlNMQ0J6TVM1RFQweFBVbDlCVkZSQlEwaE5SVTVVTUNBcklFeGxMQ0J6TVM1VVJWaFVWVkpGWHpKRUxDQmFaU3dnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb2N6RXVSRkpCVjE5R1VrRk5SVUpWUmtaRlVpd2djbVV1WDE5M1pXSm5iRTExYkhScGMyRnRjR3hsWkVaeVlXMWxZblZtWm1WeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI1WlNoREtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YldsdUtIVXNJRU11YzJGdGNHeGxjeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCT1pTaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGTWdQU0J1TG1kbGRDaERLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieUFtSmlCRExuTmhiWEJzWlhNZ1BpQXdJQ1ltSUdVdWFHRnpLQ0pYUlVKSFRGOXRkV3gwYVhOaGJYQnNaV1JmY21WdVpHVnlYM1J2WDNSbGVIUjFjbVVpS1NBOVBUMGdJVEFnSmlZZ1V5NWZYM1Z6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0FoUFQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ4WlNoREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZNZ1BTQmhMbkpsYm1SbGNpNW1jbUZ0WlRzS0lDQWdJQ0FnSUNCdExtZGxkQ2hES1NBaFBUMGdVeUFtSmlBb2JTNXpaWFFvUXl3Z1V5a3NJRU11ZFhCa1lYUmxLQ2twT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NuUW9ReXdnVXlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JDSUQwZ1F5NWpiMnh2Y2xOd1lXTmxMQ0JsWlNBOUlFTXVabTl5YldGMExDQnFJRDBnUXk1MGVYQmxPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQkRMbWx6UTI5dGNISmxjM05sWkZSbGVIUjFjbVVnUFQwOUlDRXdJSHg4SUVNdWFYTldhV1JsYjFSbGVIUjFjbVVnUFQwOUlDRXdJSHg4SUVNdVptOXliV0YwSUQwOVBTQndieUI4ZkNCQ0lDRTlQU0JOYmlBbUppQkNJQ0U5UFNCWWRDQW1KaUFvVVdVdVoyVjBWSEpoYm5ObVpYSW9RaWtnUFQwOUlHNTBJRDhnYnlBOVBUMGdJVEVnUHlCbExtaGhjeWdpUlZoVVgzTlNSMElpS1NBOVBUMGdJVEFnSmlZZ1pXVWdQVDA5SUZkMElEOGdLRU11Wm05eWJXRjBJRDBnY0c4c0lFTXViV2x1Um1sc2RHVnlJRDBnYlhRc0lFTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdJVEVwSURvZ1V5QTlJRmh5TG5OU1IwSlViMHhwYm1WaGNpaFRLU0E2SUNobFpTQWhQVDBnVjNRZ2ZId2dhaUFoUFQwZ1QyNHBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhVWlhoMGRYSmxjem9nYzFKSFFpQmxibU52WkdWa0lIUmxlSFIxY21WeklHaGhkbVVnZEc4Z2RYTmxJRkpIUWtGR2IzSnRZWFFnWVc1a0lGVnVjMmxuYm1Wa1FubDBaVlI1Y0dVdUlpa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURlJsZUhSMWNtVnpPaUJWYm5OMWNIQnZjblJsWkNCMFpYaDBkWEpsSUdOdmJHOXlJSE53WVdObE9pSXNJRUlwS1N3Z1V6c0tJQ0FnSUgwS0lDQWdJSFJvYVhNdVlXeHNiMk5oZEdWVVpYaDBkWEpsVlc1cGRDQTlJRzVsTENCMGFHbHpMbkpsYzJWMFZHVjRkSFZ5WlZWdWFYUnpJRDBnU0N3Z2RHaHBjeTV6WlhSVVpYaDBkWEpsTWtRZ1BTQkxMQ0IwYUdsekxuTmxkRlJsZUhSMWNtVXlSRUZ5Y21GNUlEMGdSQ3dnZEdocGN5NXpaWFJVWlhoMGRYSmxNMFFnUFNCSExDQjBhR2x6TG5ObGRGUmxlSFIxY21WRGRXSmxJRDBnYUdVc0lIUm9hWE11Y21WaWFXNWtWR1Y0ZEhWeVpYTWdQU0JwWlN3Z2RHaHBjeTV6WlhSMWNGSmxibVJsY2xSaGNtZGxkQ0E5SUVvc0lIUm9hWE11ZFhCa1lYUmxVbVZ1WkdWeVZHRnlaMlYwVFdsd2JXRndJRDBnVTJVc0lIUm9hWE11ZFhCa1lYUmxUWFZzZEdsellXMXdiR1ZTWlc1a1pYSlVZWEpuWlhRZ1BTQnRaU3dnZEdocGN5NXpaWFIxY0VSbGNIUm9VbVZ1WkdWeVluVm1abVZ5SUQwZ1dDd2dkR2hwY3k1elpYUjFjRVp5WVcxbFFuVm1abVZ5VkdWNGRIVnlaU0E5SUVObExDQjBhR2x6TG5WelpVMTFiSFJwYzJGdGNHeGxaRkpVVkNBOUlFNWxPd3A5Q21aMWJtTjBhVzl1SUZZd0tITXhMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhRdWFYTlhaV0pIVERJN0NpQWdJQ0JtZFc1amRHbHZiaUJwS0hJc0lHRWdQU0JZZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J2TENCaklEMGdVV1V1WjJWMFZISmhibk5tWlhJb1lTazdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRTl1S1NCeVpYUjFjbTRnY3pFdVZVNVRTVWRPUlVSZlFsbFVSVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWm1RcElISmxkSFZ5YmlCek1TNVZUbE5KUjA1RlJGOVRTRTlTVkY4MFh6UmZORjgwT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCd1pDa2djbVYwZFhKdUlITXhMbFZPVTBsSFRrVkVYMU5JVDFKVVh6VmZOVjgxWHpFN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGOW1LU0J5WlhSMWNtNGdjekV1UWxsVVJUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdlR1lwSUhKbGRIVnliaUJ6TVM1VFNFOVNWRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVjJNcElISmxkSFZ5YmlCek1TNVZUbE5KUjA1RlJGOVRTRTlTVkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1pHUXBJSEpsZEhWeWJpQnpNUzVKVGxRN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFeHVLU0J5WlhSMWNtNGdjekV1VlU1VFNVZE9SVVJmU1U1VU93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQjRiaWtnY21WMGRYSnVJSE14TGtaTVQwRlVPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JVY3lrZ2NtVjBkWEp1SUc0Z1B5QnpNUzVJUVV4R1gwWk1UMEZVSURvZ0tHOGdQU0JsTG1kbGRDZ2lUMFZUWDNSbGVIUjFjbVZmYUdGc1psOW1iRzloZENJcExDQnZJQ0U5UFNCdWRXeHNJRDhnYnk1SVFVeEdYMFpNVDBGVVgwOUZVeUE2SUc1MWJHd3BPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0IyWmlrZ2NtVjBkWEp1SUhNeExrRk1VRWhCT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCWGRDa2djbVYwZFhKdUlITXhMbEpIUWtFN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlIbG1LU0J5WlhSMWNtNGdjekV1VEZWTlNVNUJUa05GT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCTlppa2djbVYwZFhKdUlITXhMa3hWVFVsT1FVNURSVjlCVEZCSVFUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdjMmtwSUhKbGRIVnliaUJ6TVM1RVJWQlVTRjlEVDAxUVQwNUZUbFE3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZscEtTQnlaWFIxY200Z2N6RXVSRVZRVkVoZlUxUkZUa05KVERzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2NHOHBJSEpsZEhWeWJpQnZJRDBnWlM1blpYUW9Ja1ZZVkY5elVrZENJaWtzSUc4Z0lUMDlJRzUxYkd3Z1B5QnZMbE5TUjBKZlFVeFFTRUZmUlZoVUlEb2diblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1UyWXBJSEpsZEhWeWJpQnpNUzVTUlVRN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHMWtLU0J5WlhSMWNtNGdjekV1VWtWRVgwbE9WRVZIUlZJN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHSm1LU0J5WlhSMWNtNGdjekV1VWtjN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHZGtLU0J5WlhSMWNtNGdjekV1VWtkZlNVNVVSVWRGVWpzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1gyUXBJSEpsZEhWeWJpQnpNUzVTUjBKQlgwbE9WRVZIUlZJN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlIZGhJSHg4SUhJZ1BUMDlJRUZoSUh4OElISWdQVDA5SUZKaElIeDhJSElnUFQwOUlFTmhLU0JwWmlBb1l5QTlQVDBnYm5RcElHbG1JQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSalgzTnlaMklpS1N3Z2J5QWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2QyRXBJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVTFKSFFsOVRNMVJEWDBSWVZERmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdRV0VwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlUxSkhRbDlCVEZCSVFWOVRNMVJEWDBSWVZERmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVbUVwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlUxSkhRbDlCVEZCSVFWOVRNMVJEWDBSWVZETmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdRMkVwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlUxSkhRbDlCVEZCSVFWOVRNMVJEWDBSWVZEVmZSVmhVT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNodklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJaWtzSUc4Z0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhkaEtTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWw5VE0xUkRYMFJZVkRGZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1FXRXBJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVRNMVJEWDBSWVZERmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVbUVwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlUTTFSRFgwUllWRE5mUlZoVU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUTJFcElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5VE0xUkRYMFJZVkRWZlJWaFVPd29nSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZFd3Z2ZId2djaUE5UFQwZ1pHd2dmSHdnY2lBOVBUMGdabXdnZkh3Z2NpQTlQVDBnY0d3cElHbG1JQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5SXBMQ0J2SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0IxYkNrZ2NtVjBkWEp1SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpmVUZaU1ZFTmZORUpRVUZZeFgwbE5SenNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHUnNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFsOVFWbEpVUTE4eVFsQlFWakZmU1UxSE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWm13cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5UVZsSlVRMTgwUWxCUVZqRmZTVTFIT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdjR3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlRVmxKVVExOHlRbEJRVmpGZlNVMUhPd29nSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUldZcElISmxkSFZ5YmlCdklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5bGRHTXhJaWtzSUc4Z0lUMDlJRzUxYkd3Z1B5QnZMa05QVFZCU1JWTlRSVVJmVWtkQ1gwVlVRekZmVjBWQ1Iwd2dPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnRiQ0I4ZkNCeUlEMDlQU0JuYkNrZ2FXWWdLRzhnUFNCbExtZGxkQ2dpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYMlYwWXlJcExDQnZJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnRiQ2tnY21WMGRYSnVJR01nUFQwOUlHNTBJRDhnYnk1RFQwMVFVa1ZUVTBWRVgxTlNSMEk0WDBWVVF6SWdPaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENPRjlGVkVNeU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWjJ3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlJWUkRNbDlGUVVNZ09pQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FUaGZSVlJETWw5RlFVTTdDaUFnSUNBZ0lDQWdmU0JsYkhObElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JmYkNCOGZDQnlJRDA5UFNCNGJDQjhmQ0J5SUQwOVBTQjJiQ0I4ZkNCeUlEMDlQU0I1YkNCOGZDQnlJRDA5UFNCTmJDQjhmQ0J5SUQwOVBTQlRiQ0I4ZkNCeUlEMDlQU0JpYkNCOGZDQnlJRDA5UFNCRmJDQjhmQ0J5SUQwOVBTQlViQ0I4ZkNCeUlEMDlQU0IzYkNCOGZDQnlJRDA5UFNCQmJDQjhmQ0J5SUQwOVBTQlNiQ0I4ZkNCeUlEMDlQU0JEYkNCOGZDQnlJRDA5UFNCUWJDa2dhV1lnS0c4Z1BTQmxMbWRsZENnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDJGemRHTWlLU3dnYnlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWDJ3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgwZURSZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODBlRFJmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZUd3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgxZURSZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODFlRFJmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZG13cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgxZURWZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODFlRFZmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZVd3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgyZURWZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODJlRFZmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVFd3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgyZURaZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODJlRFpmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVTJ3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTg0ZURWZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODRlRFZmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWW13cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTg0ZURaZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODRlRFpmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUld3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTg0ZURoZlMwaFNJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUVZOVVExODRlRGhmUzBoU093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVkd3cElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TUhnMVgwdElVaUE2SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpCWDBGVFZFTmZNVEI0TlY5TFNGSTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCM2JDa2djbVYwZFhKdUlHTWdQVDA5SUc1MElEOGdieTVEVDAxUVVrVlRVMFZFWDFOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpFd2VEWmZTMGhTSURvZ2J5NURUMDFRVWtWVFUwVkVYMUpIUWtGZlFWTlVRMTh4TUhnMlgwdElVanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFRnNLU0J5WlhSMWNtNGdZeUE5UFQwZ2JuUWdQeUJ2TGtOUFRWQlNSVk5UUlVSZlUxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk1UQjRPRjlMU0ZJZ09pQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOUJVMVJEWHpFd2VEaGZTMGhTT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVbXdwSUhKbGRIVnliaUJqSUQwOVBTQnVkQ0EvSUc4dVEwOU5VRkpGVTFORlJGOVRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNSGd4TUY5TFNGSWdPaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlCVTFSRFh6RXdlREV3WDB0SVVqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUVOc0tTQnlaWFIxY200Z1l5QTlQVDBnYm5RZ1B5QnZMa05QVFZCU1JWTlRSVVJmVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTVRKNE1UQmZTMGhTSURvZ2J5NURUMDFRVWtWVFUwVkVYMUpIUWtGZlFWTlVRMTh4TW5neE1GOUxTRkk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQlFiQ2tnY21WMGRYSnVJR01nUFQwOUlHNTBJRDhnYnk1RFQwMVFVa1ZUVTBWRVgxTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6RXllREV5WDB0SVVpQTZJRzh1UTA5TlVGSkZVMU5GUkY5U1IwSkJYMEZUVkVOZk1USjRNVEpmUzBoU093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVR0VnZkh3Z2NpQTlQVDBnVEd3Z2ZId2djaUE5UFQwZ1NXd3BJR2xtSUNodklEMGdaUzVuWlhRb0lrVllWRjkwWlhoMGRYSmxYMk52YlhCeVpYTnphVzl1WDJKd2RHTWlLU3dnYnlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVUdFcElISmxkSFZ5YmlCaklEMDlQU0J1ZENBL0lHOHVRMDlOVUZKRlUxTkZSRjlUVWtkQ1gwRk1VRWhCWDBKUVZFTmZWVTVQVWsxZlJWaFVJRG9nYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0ZmUWxCVVExOVZUazlTVFY5RldGUTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCTWJDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKZlFsQlVRMTlUU1VkT1JVUmZSa3hQUVZSZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1NXd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1gwSlFWRU5mVlU1VFNVZE9SVVJmUmt4UFFWUmZSVmhVT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1ZHWWdmSHdnY2lBOVBUMGdWV3dnZkh3Z2NpQTlQVDBnUkd3Z2ZId2djaUE5UFQwZ1Rtd3BJR2xtSUNodklEMGdaUzVuWlhRb0lrVllWRjkwWlhoMGRYSmxYMk52YlhCeVpYTnphVzl1WDNKbmRHTWlLU3dnYnlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVUdFcElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa1ZFWDFKSFZFTXhYMFZZVkRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRlZzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxTkpSMDVGUkY5U1JVUmZVa2RVUXpGZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1JHd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtWRVgwZFNSVVZPWDFKSFZFTXlYMFZZVkRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRTVzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxTkpSMDVGUkY5U1JVUmZSMUpGUlU1ZlVrZFVRekpmUlZoVU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpQTlQVDBnYVdrZ1B5QnVJRDhnY3pFdVZVNVRTVWRPUlVSZlNVNVVYekkwWHpnZ09pQW9ieUE5SUdVdVoyVjBLQ0pYUlVKSFRGOWtaWEIwYUY5MFpYaDBkWEpsSWlrc0lHOGdJVDA5SUc1MWJHd2dQeUJ2TGxWT1UwbEhUa1ZFWDBsT1ZGOHlORjg0WDFkRlFrZE1JRG9nYm5Wc2JDa2dPaUJ6TVZ0eVhTQWhQVDBnZG05cFpDQXdJRDhnY3pGYmNsMGdPaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQmpiMjUyWlhKME9pQnBDaUFnSUNCOU93cDlDblpoY2lCVWJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ2VYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZ0ZEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selFYSnlZWGxEWVcxbGNtRWdQU0FoTUN3Z2RHaHBjeTVqWVcxbGNtRnpJRDBnWlRzS0lDQWdJSDBLZlN3Z2RHa2dQU0JqYkdGemN5QmxlSFJsYm1SeklFcGxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LU3dnZEdocGN5NXBjMGR5YjNWd0lEMGdJVEFzSUhSb2FYTXVkSGx3WlNBOUlDSkhjbTkxY0NJN0NpQWdJQ0I5Q24wc0lHc3dJRDBnZXdvZ0lDQWdkSGx3WlRvZ0ltMXZkbVVpQ24wc0lGTnpJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTBZWEpuWlhSU1lYa2dQU0J1ZFd4c0xDQjBhR2x6TGw5bmNtbHdJRDBnYm5Wc2JDd2dkR2hwY3k1ZmFHRnVaQ0E5SUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0JuWlhSSVlXNWtVM0JoWTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJoaGJtUWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMmhoYm1RZ1BTQnVaWGNnZEdrc0lIUm9hWE11WDJoaGJtUXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbDlvWVc1a0xuWnBjMmxpYkdVZ1BTQWhNU3dnZEdocGN5NWZhR0Z1WkM1cWIybHVkSE1nUFNCN2ZTd2dkR2hwY3k1ZmFHRnVaQzVwYm5CMWRGTjBZWFJsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3YVc1amFHbHVaem9nSVRFS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1ZmFHRnVaRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGUmhjbWRsZEZKaGVWTndZV05sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkwWVhKblpYUlNZWGtnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDNSaGNtZGxkRkpoZVNBOUlHNWxkeUIwYVN3Z2RHaHBjeTVmZEdGeVoyVjBVbUY1TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1ZmRHRnlaMlYwVW1GNUxuWnBjMmxpYkdVZ1BTQWhNU3dnZEdocGN5NWZkR0Z5WjJWMFVtRjVMbWhoYzB4cGJtVmhjbFpsYkc5amFYUjVJRDBnSVRFc0lIUm9hWE11WDNSaGNtZGxkRkpoZVM1c2FXNWxZWEpXWld4dlkybDBlU0E5SUc1bGR5QkJMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa3VhR0Z6UVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnSVRFc0lIUm9hWE11WDNSaGNtZGxkRkpoZVM1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUFNCdVpYY2dRU2tzSUhSb2FYTXVYM1JoY21kbGRGSmhlVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFZHlhWEJUY0dGalpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlozSnBjQ0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWjNKcGNDQTlJRzVsZHlCMGFTd2dkR2hwY3k1ZlozSnBjQzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WDJkeWFYQXVkbWx6YVdKc1pTQTlJQ0V4TENCMGFHbHpMbDluY21sd0xtaGhjMHhwYm1WaGNsWmxiRzlqYVhSNUlEMGdJVEVzSUhSb2FYTXVYMmR5YVhBdWJHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNCdVpYY2dRU3dnZEdocGN5NWZaM0pwY0M1b1lYTkJibWQxYkdGeVZtVnNiMk5wZEhrZ1BTQWhNU3dnZEdocGN5NWZaM0pwY0M1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUFNCdVpYY2dRU2tzSUhSb2FYTXVYMmR5YVhBN0NpQWdJQ0I5Q2lBZ0lDQmthWE53WVhSamFFVjJaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZEdGeVoyVjBVbUY1SUNFOVBTQnVkV3hzSUNZbUlIUm9hWE11WDNSaGNtZGxkRkpoZVM1a2FYTndZWFJqYUVWMlpXNTBLR1VwTENCMGFHbHpMbDluY21sd0lDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdVgyZHlhWEF1WkdsemNHRjBZMmhGZG1WdWRDaGxLU3dnZEdocGN5NWZhR0Z1WkNBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5b1lXNWtMbVJwYzNCaGRHTm9SWFpsYm5Rb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjV1WldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQW1KaUJsTG1oaGJtUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlvWVc1a093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RDa2dabTl5SUNoc1pYUWdiaUJ2WmlCbExtaGhibVF1ZG1Gc2RXVnpLQ2twZEdocGN5NWZaMlYwU0dGdVpFcHZhVzUwS0hRc0lHNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1OdmJtNWxZM1JsWkNJc0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVUtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzJOdmJtNWxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6WTI5dWJtVmpkR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ1pRb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYM1JoY21kbGRGSmhlUzUyYVhOcFlteGxJRDBnSVRFcExDQjBhR2x6TGw5bmNtbHdJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDluY21sd0xuWnBjMmxpYkdVZ1BTQWhNU2tzSUhSb2FYTXVYMmhoYm1RZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgyaGhibVF1ZG1semFXSnNaU0E5SUNFeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdWRXeHNMQ0J5SUQwZ2JuVnNiQ3dnWVNBOUlHNTFiR3dzSUc4Z1BTQjBhR2x6TGw5MFlYSm5aWFJTWVhrc0lHTWdQU0IwYUdsekxsOW5jbWx3TENCc0lEMGdkR2hwY3k1ZmFHRnVaRHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQW1KaUIwTG5ObGMzTnBiMjR1ZG1semFXSnBiR2wwZVZOMFlYUmxJQ0U5UFNBaWRtbHphV0pzWlMxaWJIVnljbVZrSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDQW1KaUJsTG1oaGJtUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYkdWMElGOGdiMllnWlM1b1lXNWtMblpoYkhWbGN5Z3BLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUhRdVoyVjBTbTlwYm5SUWIzTmxLRjhzSUc0cExDQndJRDBnZEdocGN5NWZaMlYwU0dGdVpFcHZhVzUwS0d3c0lGOHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdjZ0lUMDlJRzUxYkd3Z0ppWWdLSEF1YldGMGNtbDRMbVp5YjIxQmNuSmhlU2huTG5SeVlXNXpabTl5YlM1dFlYUnlhWGdwTENCd0xtMWhkSEpwZUM1a1pXTnZiWEJ2YzJVb2NDNXdiM05wZEdsdmJpd2djQzV5YjNSaGRHbHZiaXdnY0M1elkyRnNaU2tzSUhBdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQndMbXB2YVc1MFVtRmthWFZ6SUQwZ1p5NXlZV1JwZFhNcExDQndMblpwYzJsaWJHVWdQU0JuSUNFOVBTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JzTG1wdmFXNTBjMXNpYVc1a1pYZ3RabWx1WjJWeUxYUnBjQ0pkTENCMUlEMGdiQzVxYjJsdWRITmJJblJvZFcxaUxYUnBjQ0pkTENCa0lEMGdhQzV3YjNOcGRHbHZiaTVrYVhOMFlXNWpaVlJ2S0hVdWNHOXphWFJwYjI0cExDQm1JRDBnTGpBeUxDQnRJRDBnTGpBd05Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3VhVzV3ZFhSVGRHRjBaUzV3YVc1amFHbHVaeUFtSmlCa0lENGdaaUFySUcwZ1B5QW9iQzVwYm5CMWRGTjBZWFJsTG5CcGJtTm9hVzVuSUQwZ0lURXNJSFJvYVhNdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW5CcGJtTm9aVzVrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZVzVrWldSdVpYTnpPaUJsTG1oaGJtUmxaRzVsYzNNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWME9pQjBhR2x6Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1NrZ09pQWhiQzVwYm5CMWRGTjBZWFJsTG5CcGJtTm9hVzVuSUNZbUlHUWdQRDBnWmlBdElHMGdKaVlnS0d3dWFXNXdkWFJUZEdGMFpTNXdhVzVqYUdsdVp5QTlJQ0V3TENCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSndhVzVqYUhOMFlYSjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXNWtaV1J1WlhOek9pQmxMbWhoYm1SbFpHNWxjM01zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwT2lCMGFHbHpDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCaklDRTlQU0J1ZFd4c0lDWW1JR1V1WjNKcGNGTndZV05sSUNZbUlDaHlJRDBnZEM1blpYUlFiM05sS0dVdVozSnBjRk53WVdObExDQnVLU3dnY2lBaFBUMGdiblZzYkNBbUppQW9ZeTV0WVhSeWFYZ3Vabkp2YlVGeWNtRjVLSEl1ZEhKaGJuTm1iM0p0TG0xaGRISnBlQ2tzSUdNdWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNoakxuQnZjMmwwYVc5dUxDQmpMbkp2ZEdGMGFXOXVMQ0JqTG5OallXeGxLU3dnWXk1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lISXViR2x1WldGeVZtVnNiMk5wZEhrZ1B5QW9ZeTVvWVhOTWFXNWxZWEpXWld4dlkybDBlU0E5SUNFd0xDQmpMbXhwYm1WaGNsWmxiRzlqYVhSNUxtTnZjSGtvY2k1c2FXNWxZWEpXWld4dlkybDBlU2twSURvZ1l5NW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V4TENCeUxtRnVaM1ZzWVhKV1pXeHZZMmwwZVNBL0lDaGpMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFd0xDQmpMbUZ1WjNWc1lYSldaV3h2WTJsMGVTNWpiM0I1S0hJdVlXNW5kV3hoY2xabGJHOWphWFI1S1NrZ09pQmpMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFeEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z0lUMDlJRzUxYkd3Z0ppWWdLR2tnUFNCMExtZGxkRkJ2YzJVb1pTNTBZWEpuWlhSU1lYbFRjR0ZqWlN3Z2Jpa3NJR2tnUFQwOUlHNTFiR3dnSmlZZ2NpQWhQVDBnYm5Wc2JDQW1KaUFvYVNBOUlISXBMQ0JwSUNFOVBTQnVkV3hzSUNZbUlDaHZMbTFoZEhKcGVDNW1jbTl0UVhKeVlYa29hUzUwY21GdWMyWnZjbTB1YldGMGNtbDRLU3dnYnk1dFlYUnlhWGd1WkdWamIyMXdiM05sS0c4dWNHOXphWFJwYjI0c0lHOHVjbTkwWVhScGIyNHNJRzh1YzJOaGJHVXBMQ0J2TG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2FTNXNhVzVsWVhKV1pXeHZZMmwwZVNBL0lDaHZMbWhoYzB4cGJtVmhjbFpsYkc5amFYUjVJRDBnSVRBc0lHOHViR2x1WldGeVZtVnNiMk5wZEhrdVkyOXdlU2hwTG14cGJtVmhjbFpsYkc5amFYUjVLU2tnT2lCdkxtaGhjMHhwYm1WaGNsWmxiRzlqYVhSNUlEMGdJVEVzSUdrdVlXNW5kV3hoY2xabGJHOWphWFI1SUQ4Z0tHOHVhR0Z6UVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnSVRBc0lHOHVZVzVuZFd4aGNsWmxiRzlqYVhSNUxtTnZjSGtvYVM1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGtwS1NBNklHOHVhR0Z6UVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnSVRFc0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaHJNQ2twS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4Z0lUMDlJRzUxYkd3Z0ppWWdLRzh1ZG1semFXSnNaU0E5SUdrZ0lUMDlJRzUxYkd3cExDQmpJQ0U5UFNCdWRXeHNJQ1ltSUNoakxuWnBjMmxpYkdVZ1BTQnlJQ0U5UFNCdWRXeHNLU3dnYkNBaFBUMGdiblZzYkNBbUppQW9iQzUyYVhOcFlteGxJRDBnWVNBaFBUMGdiblZzYkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCZloyVjBTR0Z1WkVwdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1cWIybHVkSE5iZEM1cWIybHVkRTVoYldWZElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdVpYY2dkR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCdUxuWnBjMmxpYkdVZ1BTQWhNU3dnWlM1cWIybHVkSE5iZEM1cWIybHVkRTVoYldWZElEMGdiaXdnWlM1aFpHUW9iaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1wdmFXNTBjMXQwTG1wdmFXNTBUbUZ0WlYwN0NpQWdJQ0I5Q24wc0lIZHZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvS1hzS0lDQWdJQ0FnSUNCcFppQW9hQ0E5SUdnZ0lUMDlJSFp2YVdRZ01DQS9JR2dnT2lCemFTd2dhQ0FoUFQwZ2Mya2dKaVlnYUNBaFBUMGdXV2twSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpUkdWd2RHaFVaWGgwZFhKbElHWnZjbTFoZENCdGRYTjBJR0psSUdWcGRHaGxjaUJVU0ZKRlJTNUVaWEIwYUVadmNtMWhkQ0J2Y2lCVVNGSkZSUzVFWlhCMGFGTjBaVzVqYVd4R2IzSnRZWFFpS1RzS0lDQWdJQ0FnSUNCdUlEMDlQU0IyYjJsa0lEQWdKaVlnYUNBOVBUMGdjMmtnSmlZZ0tHNGdQU0JNYmlrc0lHNGdQVDA5SUhadmFXUWdNQ0FtSmlCb0lEMDlQU0JaYVNBbUppQW9iaUE5SUdscEtTd2djM1Z3WlhJb2JuVnNiQ3dnYVN3Z2Npd2dZU3dnYnl3Z1l5d2dhQ3dnYml3Z2JDa3NJSFJvYVhNdWFYTkVaWEIwYUZSbGVIUjFjbVVnUFNBaE1Dd2dkR2hwY3k1cGJXRm5aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ2J5QWhQVDBnZG05cFpDQXdJRDhnYnlBNklIQjBMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJR01nSVQwOUlIWnZhV1FnTUNBL0lHTWdPaUJ3ZEN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V4TENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V4TENCMGFHbHpMbU52YlhCaGNtVkdkVzVqZEdsdmJpQTlJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMjF3WVhKbFJuVnVZM1JwYjI0Z1BTQmxMbU52YlhCaGNtVkdkVzVqZEdsdmJpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl0Y0dGeVpVWjFibU4wYVc5dUlDRTlQU0J1ZFd4c0lDWW1JQ2gwTG1OdmJYQmhjbVZHZFc1amRHbHZiaUE5SUhSb2FYTXVZMjl0Y0dGeVpVWjFibU4wYVc5dUtTd2dkRHNLSUNBZ0lIMEtmU3dnUVc4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhOdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxDQnBJRDBnYm5Wc2JDd2djaUE5SURFc0lHRWdQU0J1ZFd4c0xDQnZJRDBnSW14dlkyRnNMV1pzYjI5eUlpd2dZeUE5SURFc0lHd2dQU0J1ZFd4c0xDQm9JRDBnYm5Wc2JDd2dkU0E5SUc1MWJHd3NJR1FnUFNCdWRXeHNMQ0JtSUQwZ2JuVnNiQ3dnYlNBOUlHNTFiR3dzSUY4Z1BTQjBMbWRsZEVOdmJuUmxlSFJCZEhSeWFXSjFkR1Z6S0Nrc0lHY2dQU0J1ZFd4c0xDQndJRDBnYm5Wc2JDd2dkaUE5SUZ0ZExDQjRJRDBnVzEwc0lIa2dQU0J1WlhjZ2VYUTdDaUFnSUNBZ0lDQWdlUzVzWVhsbGNuTXVaVzVoWW14bEtERXBMQ0I1TG5acFpYZHdiM0owSUQwZ2JtVjNJR3BsT3dvZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYm1WM0lIbDBPd29nSUNBZ0lDQWdJR0l1YkdGNVpYSnpMbVZ1WVdKc1pTZ3lLU3dnWWk1MmFXVjNjRzl5ZENBOUlHNWxkeUJxWlRzS0lDQWdJQ0FnSUNCc1pYUWdkeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lnb2dJQ0FnSUNBZ0lGMHNJRklnUFNCdVpYY2dWRzg3Q2lBZ0lDQWdJQ0FnVWk1c1lYbGxjbk11Wlc1aFlteGxLREVwTENCU0xteGhlV1Z5Y3k1bGJtRmliR1VvTWlrN0NpQWdJQ0FnSUNBZ2JHVjBJRWtnUFNCdWRXeHNMQ0JOSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0IwYUdsekxtTmhiV1Z5WVVGMWRHOVZjR1JoZEdVZ1BTQWhNQ3dnZEdocGN5NWxibUZpYkdWa0lEMGdJVEVzSUhSb2FYTXVhWE5RY21WelpXNTBhVzVuSUQwZ0lURXNJSFJvYVhNdVoyVjBRMjl1ZEhKdmJHeGxjaUE5SUdaMWJtTjBhVzl1S0VRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFY2dQU0IyVzBSZE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaEhJRDBnYm1WM0lGTnpMQ0IyVzBSZElEMGdSeWtzSUVjdVoyVjBWR0Z5WjJWMFVtRjVVM0JoWTJVb0tUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRU52Ym5SeWIyeHNaWEpIY21sd0lEMGdablZ1WTNScGIyNG9SQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUnlBOUlIWmJSRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSElEMDlQU0IyYjJsa0lEQWdKaVlnS0VjZ1BTQnVaWGNnVTNNc0lIWmJSRjBnUFNCSEtTd2dSeTVuWlhSSGNtbHdVM0JoWTJVb0tUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRWhoYm1RZ1BTQm1kVzVqZEdsdmJpaEVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JISUQwZ2RsdEVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVjZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUnlBOUlHNWxkeUJUY3l3Z2RsdEVYU0E5SUVjcExDQkhMbWRsZEVoaGJtUlRjR0ZqWlNncE93b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdWQ2hFS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSElEMGdlQzVwYm1SbGVFOW1LRVF1YVc1d2RYUlRiM1Z5WTJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1J5QTlQVDBnTFRFcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdkbHRIWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hR1V1ZFhCa1lYUmxLRVF1YVc1d2RYUlRiM1Z5WTJVc0lFUXVabkpoYldVc0lHd2dmSHdnWVNrc0lHaGxMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nUkM1MGVYQmxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ1JDNXBibkIxZEZOdmRYSmpaUW9nSUNBZ0lDQWdJQ0FnSUNCOUtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRThvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnNaV04wSWl3Z1ZDa3NJR2t1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnNaV04wYzNSaGNuUWlMQ0JVS1N3Z2FTNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0p6Wld4bFkzUmxibVFpTENCVUtTd2dhUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKemNYVmxaWHBsSWl3Z1ZDa3NJR2t1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWMzRjFaV1Y2WlhOMFlYSjBJaXdnVkNrc0lHa3VjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpYzNGMVpXVjZaV1Z1WkNJc0lGUXBMQ0JwTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltVnVaQ0lzSUU4cExDQnBMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1sdWNIVjBjMjkxY21ObGMyTm9ZVzVuWlNJc0lGa3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVRZ1BTQXdPeUJFSUR3Z2RpNXNaVzVuZEdnN0lFUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1J5QTlJSGhiUkYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSElDRTlQU0J1ZFd4c0lDWW1JQ2g0VzBSZElEMGdiblZzYkN3Z2RsdEVYUzVrYVhOamIyNXVaV04wS0VjcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQkpJRDBnYm5Wc2JDd2dUU0E5SUc1MWJHd3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLR2NwTENCbUlEMGdiblZzYkN3Z1pDQTlJRzUxYkd3c0lIVWdQU0J1ZFd4c0xDQnBJRDBnYm5Wc2JDd2djQ0E5SUc1MWJHd3NJRXN1YzNSdmNDZ3BMQ0J1TG1selVISmxjMlZ1ZEdsdVp5QTlJQ0V4TENCdUxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbk5sYzNOcGIyNWxibVFpQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRVp5WVcxbFluVm1abVZ5VTJOaGJHVkdZV04wYjNJZ1BTQm1kVzVqZEdsdmJpaEVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JFTENCdUxtbHpVSEpsYzJWdWRHbHVaeUE5UFQwZ0lUQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSllVazFoYm1GblpYSTZJRU5oYm01dmRDQmphR0Z1WjJVZ1puSmhiV1ZpZFdabVpYSWdjMk5oYkdVZ2QyaHBiR1VnY0hKbGMyVnVkR2x1Wnk0aUtUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuTmxkRkpsWm1WeVpXNWpaVk53WVdObFZIbHdaU0E5SUdaMWJtTjBhVzl1S0VRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlFUXNJRzR1YVhOUWNtVnpaVzUwYVc1bklEMDlQU0FoTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWxoU1RXRnVZV2RsY2pvZ1EyRnVibTkwSUdOb1lXNW5aU0J5WldabGNtVnVZMlVnYzNCaFkyVWdkSGx3WlNCM2FHbHNaU0J3Y21WelpXNTBhVzVuTGlJcE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBVbVZtWlhKbGJtTmxVM0JoWTJVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3Z2ZId2dZVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEZKbFptVnlaVzVqWlZOd1lXTmxJRDBnWm5WdVkzUnBiMjRvUkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzSUQwZ1JEc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRUpoYzJWTVlYbGxjaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaQ0FoUFQwZ2JuVnNiQ0EvSUdRZ09pQm1Pd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUW1sdVpHbHVaeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWRsZEVaeVlXMWxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnRPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwVTJWemMybHZiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEZObGMzTnBiMjRnUFNCaGMzbHVZeUJtZFc1amRHbHZiaWhFS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMGdSQ3dnYVNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2NnUFNCbExtZGxkRkpsYm1SbGNsUmhjbWRsZENncExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk5sYkdWamRDSXNJRlFwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxiR1ZqZEhOMFlYSjBJaXdnVkNrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZzWldOMFpXNWtJaXdnVkNrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljM0YxWldWNlpTSXNJRlFwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTnhkV1ZsZW1WemRHRnlkQ0lzSUZRcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk54ZFdWbGVtVmxibVFpTENCVUtTd2dhUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0psYm1RaUxDQlBLU3dnYVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKcGJuQjFkSE52ZFhKalpYTmphR0Z1WjJVaUxDQlpLU3dnWHk1NGNrTnZiWEJoZEdsaWJHVWdJVDA5SUNFd0lDWW1JR0YzWVdsMElIUXViV0ZyWlZoU1EyOXRjR0YwYVdKc1pTZ3BMQ0JwTG5KbGJtUmxjbE4wWVhSbExteGhlV1Z5Y3lBOVBUMGdkbTlwWkNBd0lIeDhJR1V1WTJGd1lXSnBiR2wwYVdWekxtbHpWMlZpUjB3eUlEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhiblJwWVd4cFlYTTZJR2t1Y21WdVpHVnlVM1JoZEdVdWJHRjVaWEp6SUQwOVBTQjJiMmxrSURBZ1B5QmZMbUZ1ZEdsaGJHbGhjeUE2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJIQm9ZVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJmTG1SbGNIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR1Z1WTJsc09pQmZMbk4wWlc1amFXd3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnlZVzFsWW5WbVptVnlVMk5oYkdWR1lXTjBiM0k2SUhJS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdZZ1BTQnVaWGNnV0ZKWFpXSkhURXhoZVdWeUtHa3NJSFFzSUVjcExDQnBMblZ3WkdGMFpWSmxibVJsY2xOMFlYUmxLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbUZ6WlV4aGVXVnlPaUJtQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NJSEFnUFNCdVpYY2djWFFvWmk1bWNtRnRaV0oxWm1abGNsZHBaSFJvTENCbUxtWnlZVzFsWW5WbVptVnlTR1ZwWjJoMExDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ1YzUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUU5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjbE53WVdObE9pQmxMbTkxZEhCMWRFTnZiRzl5VTNCaFkyVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBaVzVqYVd4Q2RXWm1aWEk2SUY4dWMzUmxibU5wYkFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1J5QTlJRzUxYkd3c0lHaGxJRDBnYm5Wc2JDd2dabVVnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY4dVpHVndkR2dnSmlZZ0tHWmxJRDBnWHk1emRHVnVZMmxzSUQ4Z2RDNUVSVkJVU0RJMFgxTlVSVTVEU1V3NElEb2dkQzVFUlZCVVNGOURUMDFRVDA1RlRsUXlOQ3dnUnlBOUlGOHVjM1JsYm1OcGJDQS9JRmxwSURvZ2Mya3NJR2hsSUQwZ1h5NXpkR1Z1WTJsc0lEOGdhV2tnT2lCTWJpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOWxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNrWnZjbTFoZERvZ2RDNVNSMEpCT0N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaEdiM0p0WVhRNklHWmxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMkZzWlVaaFkzUnZjam9nY2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFNBOUlHNWxkeUJZVWxkbFlrZE1RbWx1WkdsdVp5aHBMQ0IwS1N3Z1pDQTlJSFV1WTNKbFlYUmxVSEp2YW1WamRHbHZia3hoZVdWeUtGOWxLU3dnYVM1MWNHUmhkR1ZTWlc1a1pYSlRkR0YwWlNoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4aGVXVnljem9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUhBZ1BTQnVaWGNnY1hRb1pDNTBaWGgwZFhKbFYybGtkR2dzSUdRdWRHVjRkSFZ5WlVobGFXZG9kQ3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJRmQwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQlBiaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYaDBkWEpsT2lCdVpYY2dkMjhvWkM1MFpYaDBkWEpsVjJsa2RHZ3NJR1F1ZEdWNGRIVnlaVWhsYVdkb2RDd2dhR1VzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lFY3BMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR1Z1WTJsc1FuVm1abVZ5T2lCZkxuTjBaVzVqYVd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlVM0JoWTJVNklHVXViM1YwY0hWMFEyOXNiM0pUY0dGalpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyRnRjR3hsY3pvZ1h5NWhiblJwWVd4cFlYTWdQeUEwSURvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzWlNBOUlHVXVjSEp2Y0dWeWRHbGxjeTVuWlhRb2NDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJVdVgxOXBaMjV2Y21WRVpYQjBhRlpoYkhWbGN5QTlJR1F1YVdkdWIzSmxSR1Z3ZEdoV1lXeDFaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TG1seldGSlNaVzVrWlhKVVlYSm5aWFFnUFNBaE1Dd2dkR2hwY3k1elpYUkdiM1psWVhScGIyNG9ZeWtzSUd3Z1BTQnVkV3hzTENCaElEMGdZWGRoYVhRZ2FTNXlaWEYxWlhOMFVtVm1aWEpsYm1ObFUzQmhZMlVvYnlrc0lFc3VjMlYwUTI5dWRHVjRkQ2hwS1N3Z1N5NXpkR0Z5ZENncExDQnVMbWx6VUhKbGMyVnVkR2x1WnlBOUlDRXdMQ0J1TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0p6WlhOemFXOXVjM1JoY25RaUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFJXNTJhWEp2Ym0xbGJuUkNiR1Z1WkUxdlpHVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJRzUxYkd3cElISmxkSFZ5YmlCcExtVnVkbWx5YjI1dFpXNTBRbXhsYm1STmIyUmxPd29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnV1NoRUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnlBOUlEQTdJRWNnUENCRUxuSmxiVzkyWldRdWJHVnVaM1JvT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdSQzV5WlcxdmRtVmtXMGRkTENCbVpTQTlJSGd1YVc1a1pYaFBaaWhvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVpTQStQU0F3SUNZbUlDaDRXMlpsWFNBOUlHNTFiR3dzSUhaYlptVmRMbVJwYzJOdmJtNWxZM1FvYUdVcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY2dQU0F3T3lCSElEd2dSQzVoWkdSbFpDNXNaVzVuZEdnN0lFY3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FHVWdQU0JFTG1Ga1pHVmtXMGRkTENCbVpTQTlJSGd1YVc1a1pYaFBaaWhvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9abVVnUFQwOUlDMHhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCM1pTQTlJREE3SUhkbElEd2dkaTVzWlc1bmRHZzdJSGRsS3lzcGFXWWdLSGRsSUQ0OUlIZ3ViR1Z1WjNSb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ3VjSFZ6YUNob1pTa3NJR1psSUQwZ2QyVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9lRnQzWlYwZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VGdDNaVjBnUFNCb1pTd2dabVVnUFNCM1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobVpTQTlQVDBnTFRFcElHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOWxJRDBnZGx0bVpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZaU0FtSmlCZlpTNWpiMjV1WldOMEtHaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlHNWxkeUJCTENCVklEMGdibVYzSUVFN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2VpaEVMQ0JITENCb1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNBa0xuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhITG0xaGRISnBlRmR2Y214a0tTd2dWUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2FHVXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQWtMbVJwYzNSaGJtTmxWRzhvVlNrc0lGOWxJRDBnUnk1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1Wc1pXMWxiblJ6TENCM1pTQTlJR2hsTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wld4bGJXVnVkSE1zSUVWbElEMGdYMlZiTVRSZElDOGdLRjlsV3pFd1hTQXRJREVwTENCVVpTQTlJRjlsV3pFMFhTQXZJQ2hmWlZzeE1GMGdLeUF4S1N3Z1dXVWdQU0FvWDJWYk9WMGdLeUF4S1NBdklGOWxXelZkTENCcGRDQTlJQ2hmWlZzNVhTQXRJREVwSUM4Z1gyVmJOVjBzSUVObElEMGdLRjlsV3poZElDMGdNU2tnTHlCZlpWc3dYU3dnVENBOUlDaDNaVnM0WFNBcklERXBJQzhnZDJWYk1GMHNJRzlsSUQwZ1JXVWdLaUJEWlN3Z1dDQTlJRVZsSUNvZ1RDd2dhV1VnUFNCbVpTQXZJQ2d0UTJVZ0t5Qk1LU3dnU2lBOUlHbGxJQ29nTFVObE93b2dJQ0FnSUNBZ0lDQWdJQ0JITG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaEVMbkJ2YzJsMGFXOXVMQ0JFTG5GMVlYUmxjbTVwYjI0c0lFUXVjMk5oYkdVcExDQkVMblJ5WVc1emJHRjBaVmdvU2lrc0lFUXVkSEpoYm5Oc1lYUmxXaWhwWlNrc0lFUXViV0YwY21sNFYyOXliR1F1WTI5dGNHOXpaU2hFTG5CdmMybDBhVzl1TENCRUxuRjFZWFJsY201cGIyNHNJRVF1YzJOaGJHVXBMQ0JFTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlM1amIzQjVLRVF1YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1UyVWdQU0JGWlNBcklHbGxMQ0J0WlNBOUlGUmxJQ3NnYVdVc0lIbGxJRDBnYjJVZ0xTQktMQ0JPWlNBOUlGZ2dLeUFvWm1VZ0xTQktLU3dnY1dVZ1BTQlpaU0FxSUZSbElDOGdiV1VnS2lCVFpTd2djblFnUFNCcGRDQXFJRlJsSUM4Z2JXVWdLaUJUWlRzS0lDQWdJQ0FnSUNBZ0lDQWdSQzV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbTFoYTJWUVpYSnpjR1ZqZEdsMlpTaDVaU3dnVG1Vc0lIRmxMQ0J5ZEN3Z1UyVXNJRzFsS1N3Z1JDNXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLRVF1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhFb1JDd2dSeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQkhJRDA5UFNCdWRXeHNJRDhnUkM1dFlYUnlhWGhYYjNKc1pDNWpiM0I1S0VRdWJXRjBjbWw0S1NBNklFUXViV0YwY21sNFYyOXliR1F1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhITG0xaGRISnBlRmR2Y214a0xDQkVMbTFoZEhKcGVDa3NJRVF1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sTG1OdmNIa29SQzV0WVhSeWFYaFhiM0pzWkNrdWFXNTJaWEowS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11ZFhCa1lYUmxRMkZ0WlhKaElEMGdablZ1WTNScGIyNG9SQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOVBUMGdiblZzYkNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQlNMbTVsWVhJZ1BTQmlMbTVsWVhJZ1BTQjVMbTVsWVhJZ1BTQkVMbTVsWVhJc0lGSXVabUZ5SUQwZ1lpNW1ZWElnUFNCNUxtWmhjaUE5SUVRdVptRnlMQ0FvU1NBaFBUMGdVaTV1WldGeUlIeDhJRTBnSVQwOUlGSXVabUZ5S1NBbUppQW9hUzUxY0dSaGRHVlNaVzVrWlhKVGRHRjBaU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFFNWxZWEk2SUZJdWJtVmhjaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1JtRnlPaUJTTG1aaGNnb2dJQ0FnSUNBZ0lDQWdJQ0I5S1N3Z1NTQTlJRkl1Ym1WaGNpd2dUU0E5SUZJdVptRnlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRWNnUFNCRUxuQmhjbVZ1ZEN3Z2FHVWdQU0JTTG1OaGJXVnlZWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIRW9VaXdnUnlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdabVVnUFNBd095Qm1aU0E4SUdobExteGxibWQwYURzZ1ptVXJLeWx4S0dobFcyWmxYU3dnUnlrN0NpQWdJQ0FnSUNBZ0lDQWdJR2hsTG14bGJtZDBhQ0E5UFQwZ01pQS9JSG9vVWl3Z2VTd2dZaWtnT2lCU0xuQnliMnBsWTNScGIyNU5ZWFJ5YVhndVkyOXdlU2g1TG5CeWIycGxZM1JwYjI1TllYUnlhWGdwTENCSUtFUXNJRklzSUVjcE93b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdTQ2hFTENCSExDQm9aU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm9aU0E5UFQwZ2JuVnNiQ0EvSUVRdWJXRjBjbWw0TG1OdmNIa29SeTV0WVhSeWFYaFhiM0pzWkNrZ09pQW9SQzV0WVhSeWFYZ3VZMjl3ZVNob1pTNXRZWFJ5YVhoWGIzSnNaQ2tzSUVRdWJXRjBjbWw0TG1sdWRtVnlkQ2dwTENCRUxtMWhkSEpwZUM1dGRXeDBhWEJzZVNoSExtMWhkSEpwZUZkdmNteGtLU2tzSUVRdWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNoRUxuQnZjMmwwYVc5dUxDQkVMbkYxWVhSbGNtNXBiMjRzSUVRdWMyTmhiR1VwTENCRUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDRXdLU3dnUkM1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1OdmNIa29SeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRLU3dnUkM1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtFY3VjSEp2YW1WamRHbHZiazFoZEhKcGVFbHVkbVZ5YzJVcExDQkVMbWx6VUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVnSmlZZ0tFUXVabTkySUQwZ1dta2dLaUF5SUNvZ1RXRjBhQzVoZEdGdUtERWdMeUJFTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wld4bGJXVnVkSE5iTlYwcExDQkVMbnB2YjIwZ1BTQXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NW5aWFJEWVcxbGNtRWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGSTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJHYjNabFlYUnBiMjRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRW9aQ0E5UFQwZ2JuVnNiQ0FtSmlCbUlEMDlQU0J1ZFd4c0tTa2djbVYwZFhKdUlHTTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXpaWFJHYjNabFlYUnBiMjRnUFNCbWRXNWpkR2x2YmloRUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdNZ1BTQkVMQ0JrSUNFOVBTQnVkV3hzSUNZbUlDaGtMbVpwZUdWa1JtOTJaV0YwYVc5dUlEMGdSQ2tzSUdZZ0lUMDlJRzUxYkd3Z0ppWWdaaTVtYVhobFpFWnZkbVZoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNobUxtWnBlR1ZrUm05MlpXRjBhVzl1SUQwZ1JDazdDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JtVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlGY29SQ3dnUnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FDQTlJRWN1WjJWMFZtbGxkMlZ5VUc5elpTaHNJSHg4SUdFcExDQnRJRDBnUnl3Z2FDQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdhQzUyYVdWM2N6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWWdJVDA5SUc1MWJHd2dKaVlnS0dVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwUm5KaGJXVmlkV1ptWlhJb2NDd2daaTVtY21GdFpXSjFabVpsY2lrc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIQXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbVpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdVdWJHVnVaM1JvSUNFOVBTQlNMbU5oYldWeVlYTXViR1Z1WjNSb0lDWW1JQ2hTTG1OaGJXVnlZWE11YkdWdVozUm9JRDBnTUN3Z1ptVWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY5bElEMGdNRHNnWDJVZ1BDQm9aUzVzWlc1bmRHZzdJRjlsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pTQTlJR2hsVzE5bFhTd2dSV1VnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaG1JQ0U5UFNCdWRXeHNLU0JGWlNBOUlHWXVaMlYwVm1sbGQzQnZjblFvZDJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXV1VnUFNCMUxtZGxkRlpwWlhkVGRXSkpiV0ZuWlNoa0xDQjNaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVZsSUQwZ1dXVXVkbWxsZDNCdmNuUXNJRjlsSUQwOVBTQXdJQ1ltSUNobExuTmxkRkpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVZ6S0hBc0lGbGxMbU52Ykc5eVZHVjRkSFZ5WlN3Z1pDNXBaMjV2Y21WRVpYQjBhRlpoYkhWbGN5QS9JSFp2YVdRZ01DQTZJRmxsTG1SbGNIUm9VM1JsYm1OcGJGUmxlSFIxY21VcExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaHdLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVVpTQTlJSGRiWDJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRlJsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRlJsSUQwZ2JtVjNJSGwwTENCVVpTNXNZWGxsY25NdVpXNWhZbXhsS0Y5bEtTd2dWR1V1ZG1sbGQzQnZjblFnUFNCdVpYY2dhbVVzSUhkYlgyVmRJRDBnVkdVcExDQlVaUzV0WVhSeWFYZ3Vabkp2YlVGeWNtRjVLSGRsTG5SeVlXNXpabTl5YlM1dFlYUnlhWGdwTENCVVpTNXRZWFJ5YVhndVpHVmpiMjF3YjNObEtGUmxMbkJ2YzJsMGFXOXVMQ0JVWlM1eGRXRjBaWEp1YVc5dUxDQlVaUzV6WTJGc1pTa3NJRlJsTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wm5KdmJVRnljbUY1S0hkbExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncExDQlVaUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0ZSbExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncExtbHVkbVZ5ZENncExDQlVaUzUyYVdWM2NHOXlkQzV6WlhRb1JXVXVlQ3dnUldVdWVTd2dSV1V1ZDJsa2RHZ3NJRVZsTG1obGFXZG9kQ2tzSUY5bElEMDlQU0F3SUNZbUlDaFNMbTFoZEhKcGVDNWpiM0I1S0ZSbExtMWhkSEpwZUNrc0lGSXViV0YwY21sNExtUmxZMjl0Y0c5elpTaFNMbkJ2YzJsMGFXOXVMQ0JTTG5GMVlYUmxjbTVwYjI0c0lGSXVjMk5oYkdVcEtTd2dabVVnUFQwOUlDRXdJQ1ltSUZJdVkyRnRaWEpoY3k1d2RYTm9LRlJsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdobElEMGdNRHNnYUdVZ1BDQjJMbXhsYm1kMGFEc2dhR1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdabVVnUFNCNFcyaGxYU3dnWDJVZ1BTQjJXMmhsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdabElDRTlQU0J1ZFd4c0lDWW1JRjlsSUNFOVBTQjJiMmxrSURBZ0ppWWdYMlV1ZFhCa1lYUmxLR1psTENCSExDQnNJSHg4SUdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHNWxJQ1ltSUc1bEtFUXNJRWNwTENCSExtUmxkR1ZqZEdWa1VHeGhibVZ6SUNZbUlHNHVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpY0d4aGJtVnpaR1YwWldOMFpXUWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ1J3b2dJQ0FnSUNBZ0lDQWdJQ0I5S1N3Z2JTQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JMSUQwZ2JtVjNJRVZrT3dvZ0lDQWdJQ0FnSUVzdWMyVjBRVzVwYldGMGFXOXVURzl2Y0NoWEtTd2dkR2hwY3k1elpYUkJibWx0WVhScGIyNU1iMjl3SUQwZ1puVnVZM1JwYjI0b1JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCdVpTQTlJRVE3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVrYVhOd2IzTmxJRDBnWm5WdVkzUnBiMjRvS1NCN2ZUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdTREFvY3pFc0lHVXBJSHNLSUNBZ0lHWjFibU4wYVc5dUlIUW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3ViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdaeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2djQzUyWVd4MVpTNWpiM0I1S0djdWJXRjBjbWw0S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHNG9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVZMjlzYjNJdVoyVjBVa2RDS0djdVptOW5RMjlzYjNJdWRtRnNkV1VzSUdKa0tITXhLU2tzSUhBdWFYTkdiMmNnUHlBb1p5NW1iMmRPWldGeUxuWmhiSFZsSUQwZ2NDNXVaV0Z5TENCbkxtWnZaMFpoY2k1MllXeDFaU0E5SUhBdVptRnlLU0E2SUhBdWFYTkdiMmRGZUhBeUlDWW1JQ2huTG1adlowUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xtUmxibk5wZEhrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhU2huTENCd0xDQjJMQ0I0TENCNUtTQjdDaUFnSUNBZ0lDQWdjQzVwYzAxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSUh4OElIQXVhWE5OWlhOb1RHRnRZbVZ5ZEUxaGRHVnlhV0ZzSUQ4Z2NpaG5MQ0J3S1NBNklIQXVhWE5OWlhOb1ZHOXZiazFoZEdWeWFXRnNJRDhnS0hJb1p5d2djQ2tzSUhVb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoUWFHOXVaMDFoZEdWeWFXRnNJRDhnS0hJb1p5d2djQ2tzSUdnb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUQ4Z0tISW9aeXdnY0Nrc0lHUW9aeXdnY0Nrc0lIQXVhWE5OWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkNBbUppQm1LR2NzSUhBc0lIa3BLU0E2SUhBdWFYTk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXd2dQeUFvY2lobkxDQndLU3dnYlNobkxDQndLU2tnT2lCd0xtbHpUV1Z6YUVSbGNIUm9UV0YwWlhKcFlXd2dQeUJ5S0djc0lIQXBJRG9nY0M1cGMwMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNJRDhnS0hJb1p5d2djQ2tzSUY4b1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoT2IzSnRZV3hOWVhSbGNtbGhiQ0EvSUhJb1p5d2djQ2tnT2lCd0xtbHpUR2x1WlVKaGMybGpUV0YwWlhKcFlXd2dQeUFvWVNobkxDQndLU3dnY0M1cGMweHBibVZFWVhOb1pXUk5ZWFJsY21saGJDQW1KaUJ2S0djc0lIQXBLU0E2SUhBdWFYTlFiMmx1ZEhOTllYUmxjbWxoYkNBL0lHTW9aeXdnY0N3Z2Rpd2dlQ2tnT2lCd0xtbHpVM0J5YVhSbFRXRjBaWEpwWVd3Z1B5QnNLR2NzSUhBcElEb2djQzVwYzFOb1lXUnZkMDFoZEdWeWFXRnNJRDhnS0djdVkyOXNiM0l1ZG1Gc2RXVXVZMjl3ZVNod0xtTnZiRzl5S1N3Z1p5NXZjR0ZqYVhSNUxuWmhiSFZsSUQwZ2NDNXZjR0ZqYVhSNUtTQTZJSEF1YVhOVGFHRmtaWEpOWVhSbGNtbGhiQ0FtSmlBb2NDNTFibWxtYjNKdGMwNWxaV1JWY0dSaGRHVWdQU0FoTVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbTl3WVdOcGRIa3VkbUZzZFdVZ1BTQndMbTl3WVdOcGRIa3NJSEF1WTI5c2IzSWdKaVlnWnk1a2FXWm1kWE5sTG5aaGJIVmxMbU52Y0hrb2NDNWpiMnh2Y2lrc0lIQXVaVzFwYzNOcGRtVWdKaVlnWnk1bGJXbHpjMmwyWlM1MllXeDFaUzVqYjNCNUtIQXVaVzFwYzNOcGRtVXBMbTExYkhScGNHeDVVMk5oYkdGeUtIQXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3BMQ0J3TG0xaGNDQW1KaUFvWnk1dFlYQXVkbUZzZFdVZ1BTQndMbTFoY0N3Z2RDaHdMbTFoY0N3Z1p5NXRZWEJVY21GdWMyWnZjbTBwS1N3Z2NDNWhiSEJvWVUxaGNDQW1KaUFvWnk1aGJIQm9ZVTFoY0M1MllXeDFaU0E5SUhBdVlXeHdhR0ZOWVhBc0lIUW9jQzVoYkhCb1lVMWhjQ3dnWnk1aGJIQm9ZVTFoY0ZSeVlXNXpabTl5YlNrcExDQndMbUoxYlhCTllYQWdKaVlnS0djdVluVnRjRTFoY0M1MllXeDFaU0E5SUhBdVluVnRjRTFoY0N3Z2RDaHdMbUoxYlhCTllYQXNJR2N1WW5WdGNFMWhjRlJ5WVc1elptOXliU2tzSUdjdVluVnRjRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWlkVzF3VTJOaGJHVXNJSEF1YzJsa1pTQTlQVDBnUm5RZ0ppWWdLR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJQ285SUMweEtTa3NJSEF1Ym05eWJXRnNUV0Z3SUNZbUlDaG5MbTV2Y20xaGJFMWhjQzUyWVd4MVpTQTlJSEF1Ym05eWJXRnNUV0Z3TENCMEtIQXVibTl5YldGc1RXRndMQ0JuTG01dmNtMWhiRTFoY0ZSeVlXNXpabTl5YlNrc0lHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVZMjl3ZVNod0xtNXZjbTFoYkZOallXeGxLU3dnY0M1emFXUmxJRDA5UFNCR2RDQW1KaUJuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG01bFoyRjBaU2dwS1N3Z2NDNWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdLR2N1WkdsemNHeGhZMlZ0Wlc1MFRXRndMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFFvY0M1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUdjdVpHbHpjR3hoWTJWdFpXNTBUV0Z3VkhKaGJuTm1iM0p0S1N3Z1p5NWthWE53YkdGalpXMWxiblJUWTJGc1pTNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeTUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWtzSUhBdVpXMXBjM05wZG1WTllYQWdKaVlnS0djdVpXMXBjM05wZG1WTllYQXVkbUZzZFdVZ1BTQndMbVZ0YVhOemFYWmxUV0Z3TENCMEtIQXVaVzFwYzNOcGRtVk5ZWEFzSUdjdVpXMXBjM05wZG1WTllYQlVjbUZ1YzJadmNtMHBLU3dnY0M1emNHVmpkV3hoY2sxaGNDQW1KaUFvWnk1emNHVmpkV3hoY2sxaGNDNTJZV3gxWlNBOUlIQXVjM0JsWTNWc1lYSk5ZWEFzSUhRb2NDNXpjR1ZqZFd4aGNrMWhjQ3dnWnk1emNHVmpkV3hoY2sxaGNGUnlZVzV6Wm05eWJTa3BMQ0J3TG1Gc2NHaGhWR1Z6ZENBK0lEQWdKaVlnS0djdVlXeHdhR0ZVWlhOMExuWmhiSFZsSUQwZ2NDNWhiSEJvWVZSbGMzUXBPd29nSUNBZ0lDQWdJR3hsZENCMklEMGdaUzVuWlhRb2NDa3VaVzUyVFdGd093b2dJQ0FnSUNBZ0lHbG1JQ2gySUNZbUlDaG5MbVZ1ZGsxaGNDNTJZV3gxWlNBOUlIWXNJR2N1Wm14cGNFVnVkazFoY0M1MllXeDFaU0E5SUhZdWFYTkRkV0psVkdWNGRIVnlaU0FtSmlCMkxtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0E5UFQwZ0lURWdQeUF0TVNBNklERXNJR2N1Y21WbWJHVmpkR2wyYVhSNUxuWmhiSFZsSUQwZ2NDNXlaV1pzWldOMGFYWnBkSGtzSUdjdWFXOXlMblpoYkhWbElEMGdjQzVwYjNJc0lHY3VjbVZtY21GamRHbHZibEpoZEdsdkxuWmhiSFZsSUQwZ2NDNXlaV1p5WVdOMGFXOXVVbUYwYVc4cExDQndMbXhwWjJoMFRXRndLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHY3ViR2xuYUhSTllYQXVkbUZzZFdVZ1BTQndMbXhwWjJoMFRXRndPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUhNeExsOTFjMlZNWldkaFkzbE1hV2RvZEhNZ1BUMDlJQ0V3SUQ4Z1RXRjBhQzVRU1NBNklERTdDaUFnSUNBZ0lDQWdJQ0FnSUdjdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlDb2dlQ3dnZENod0xteHBaMmgwVFdGd0xDQm5MbXhwWjJoMFRXRndWSEpoYm5ObWIzSnRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY0M1aGIwMWhjQ0FtSmlBb1p5NWhiMDFoY0M1MllXeDFaU0E5SUhBdVlXOU5ZWEFzSUdjdVlXOU5ZWEJKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwS0hBdVlXOU5ZWEFzSUdjdVlXOU5ZWEJVY21GdWMyWnZjbTBwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3VaR2xtWm5WelpTNTJZV3gxWlM1amIzQjVLSEF1WTI5c2IzSXBMQ0JuTG05d1lXTnBkSGt1ZG1Gc2RXVWdQU0J3TG05d1lXTnBkSGtzSUhBdWJXRndJQ1ltSUNobkxtMWhjQzUyWVd4MVpTQTlJSEF1YldGd0xDQjBLSEF1YldGd0xDQm5MbTFoY0ZSeVlXNXpabTl5YlNrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWhuTENCd0tTQjdDaUFnSUNBZ0lDQWdaeTVrWVhOb1UybDZaUzUyWVd4MVpTQTlJSEF1WkdGemFGTnBlbVVzSUdjdWRHOTBZV3hUYVhwbExuWmhiSFZsSUQwZ2NDNWtZWE5vVTJsNlpTQXJJSEF1WjJGd1UybDZaU3dnWnk1elkyRnNaUzUyWVd4MVpTQTlJSEF1YzJOaGJHVTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0djc0lIQXNJSFlzSUhncElIc0tJQ0FnSUNBZ0lDQm5MbVJwWm1aMWMyVXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnWnk1dmNHRmphWFI1TG5aaGJIVmxJRDBnY0M1dmNHRmphWFI1TENCbkxuTnBlbVV1ZG1Gc2RXVWdQU0J3TG5OcGVtVWdLaUIyTENCbkxuTmpZV3hsTG5aaGJIVmxJRDBnZUNBcUlDNDFMQ0J3TG0xaGNDQW1KaUFvWnk1dFlYQXVkbUZzZFdVZ1BTQndMbTFoY0N3Z2RDaHdMbTFoY0N3Z1p5NTFkbFJ5WVc1elptOXliU2twTENCd0xtRnNjR2hoVFdGd0lDWW1JQ2huTG1Gc2NHaGhUV0Z3TG5aaGJIVmxJRDBnY0M1aGJIQm9ZVTFoY0N3Z2RDaHdMbUZzY0doaFRXRndMQ0JuTG1Gc2NHaGhUV0Z3VkhKaGJuTm1iM0p0S1Nrc0lIQXVZV3h3YUdGVVpYTjBJRDRnTUNBbUppQW9aeTVoYkhCb1lWUmxjM1F1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhWR1Z6ZENrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbVJwWm1aMWMyVXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnWnk1dmNHRmphWFI1TG5aaGJIVmxJRDBnY0M1dmNHRmphWFI1TENCbkxuSnZkR0YwYVc5dUxuWmhiSFZsSUQwZ2NDNXliM1JoZEdsdmJpd2djQzV0WVhBZ0ppWWdLR2N1YldGd0xuWmhiSFZsSUQwZ2NDNXRZWEFzSUhRb2NDNXRZWEFzSUdjdWJXRndWSEpoYm5ObWIzSnRLU2tzSUhBdVlXeHdhR0ZOWVhBZ0ppWWdLR2N1WVd4d2FHRk5ZWEF1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhUV0Z3TENCMEtIQXVZV3h3YUdGTllYQXNJR2N1WVd4d2FHRk5ZWEJVY21GdWMyWnZjbTBwS1N3Z2NDNWhiSEJvWVZSbGMzUWdQaUF3SUNZbUlDaG5MbUZzY0doaFZHVnpkQzUyWVd4MVpTQTlJSEF1WVd4d2FHRlVaWE4wS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHZ29aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3VjM0JsWTNWc1lYSXVkbUZzZFdVdVkyOXdlU2h3TG5Od1pXTjFiR0Z5S1N3Z1p5NXphR2x1YVc1bGMzTXVkbUZzZFdVZ1BTQk5ZWFJvTG0xaGVDaHdMbk5vYVc1cGJtVnpjeXdnTVdVdE5DazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIxS0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0J3TG1keVlXUnBaVzUwVFdGd0lDWW1JQ2huTG1keVlXUnBaVzUwVFdGd0xuWmhiSFZsSUQwZ2NDNW5jbUZrYVdWdWRFMWhjQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCa0tHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtMWxkR0ZzYm1WemN5NTJZV3gxWlNBOUlIQXViV1YwWVd4dVpYTnpMQ0J3TG0xbGRHRnNibVZ6YzAxaGNDQW1KaUFvWnk1dFpYUmhiRzVsYzNOTllYQXVkbUZzZFdVZ1BTQndMbTFsZEdGc2JtVnpjMDFoY0N3Z2RDaHdMbTFsZEdGc2JtVnpjMDFoY0N3Z1p5NXRaWFJoYkc1bGMzTk5ZWEJVY21GdWMyWnZjbTBwS1N3Z1p5NXliM1ZuYUc1bGMzTXVkbUZzZFdVZ1BTQndMbkp2ZFdkb2JtVnpjeXdnY0M1eWIzVm5hRzVsYzNOTllYQWdKaVlnS0djdWNtOTFaMmh1WlhOelRXRndMblpoYkhWbElEMGdjQzV5YjNWbmFHNWxjM05OWVhBc0lIUW9jQzV5YjNWbmFHNWxjM05OWVhBc0lHY3VjbTkxWjJodVpYTnpUV0Z3VkhKaGJuTm1iM0p0S1Nrc0lHVXVaMlYwS0hBcExtVnVkazFoY0NBbUppQW9aeTVsYm5aTllYQkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJtS0djc0lIQXNJSFlwSUhzS0lDQWdJQ0FnSUNCbkxtbHZjaTUyWVd4MVpTQTlJSEF1YVc5eUxDQndMbk5vWldWdUlENGdNQ0FtSmlBb1p5NXphR1ZsYmtOdmJHOXlMblpoYkhWbExtTnZjSGtvY0M1emFHVmxia052Ykc5eUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lod0xuTm9aV1Z1S1N3Z1p5NXphR1ZsYmxKdmRXZG9ibVZ6Y3k1MllXeDFaU0E5SUhBdWMyaGxaVzVTYjNWbmFHNWxjM01zSUhBdWMyaGxaVzVEYjJ4dmNrMWhjQ0FtSmlBb1p5NXphR1ZsYmtOdmJHOXlUV0Z3TG5aaGJIVmxJRDBnY0M1emFHVmxia052Ykc5eVRXRndMQ0IwS0hBdWMyaGxaVzVEYjJ4dmNrMWhjQ3dnWnk1emFHVmxia052Ykc5eVRXRndWSEpoYm5ObWIzSnRLU2tzSUhBdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBZ0ppWWdLR2N1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEF1ZG1Gc2RXVWdQU0J3TG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3TENCMEtIQXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNJR2N1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEJVY21GdWMyWnZjbTBwS1Nrc0lIQXVZMnhsWVhKamIyRjBJRDRnTUNBbUppQW9aeTVqYkdWaGNtTnZZWFF1ZG1Gc2RXVWdQU0J3TG1Oc1pXRnlZMjloZEN3Z1p5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTXVkbUZzZFdVZ1BTQndMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeXdnY0M1amJHVmhjbU52WVhSTllYQWdKaVlnS0djdVkyeGxZWEpqYjJGMFRXRndMblpoYkhWbElEMGdjQzVqYkdWaGNtTnZZWFJOWVhBc0lIUW9jQzVqYkdWaGNtTnZZWFJOWVhBc0lHY3VZMnhsWVhKamIyRjBUV0Z3VkhKaGJuTm1iM0p0S1Nrc0lIQXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUNZbUlDaG5MbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0M1MllXeDFaU0E5SUhBdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMQ0IwS0hBdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMQ0JuTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNGUnlZVzV6Wm05eWJTa3BMQ0J3TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBbUppQW9aeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3Z2RDaHdMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ3dnWnk1amJHVmhjbU52WVhST2IzSnRZV3hOWVhCVWNtRnVjMlp2Y20wcExDQm5MbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbU52Y0hrb2NDNWpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaU2tzSUhBdWMybGtaU0E5UFQwZ1JuUWdKaVlnWnk1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTNTJZV3gxWlM1dVpXZGhkR1VvS1NrcExDQndMbWx5YVdSbGMyTmxibU5sSUQ0Z01DQW1KaUFvWnk1cGNtbGtaWE5qWlc1alpTNTJZV3gxWlNBOUlIQXVhWEpwWkdWelkyVnVZMlVzSUdjdWFYSnBaR1Z6WTJWdVkyVkpUMUl1ZG1Gc2RXVWdQU0J3TG1seWFXUmxjMk5sYm1ObFNVOVNMQ0JuTG1seWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelRXbHVhVzExYlM1MllXeDFaU0E5SUhBdWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTlNZVzVuWlZzd1hTd2daeTVwY21sa1pYTmpaVzVqWlZSb2FXTnJibVZ6YzAxaGVHbHRkVzB1ZG1Gc2RXVWdQU0J3TG1seWFXUmxjMk5sYm1ObFZHaHBZMnR1WlhOelVtRnVaMlZiTVYwc0lIQXVhWEpwWkdWelkyVnVZMlZOWVhBZ0ppWWdLR2N1YVhKcFpHVnpZMlZ1WTJWTllYQXVkbUZzZFdVZ1BTQndMbWx5YVdSbGMyTmxibU5sVFdGd0xDQjBLSEF1YVhKcFpHVnpZMlZ1WTJWTllYQXNJR2N1YVhKcFpHVnpZMlZ1WTJWTllYQlVjbUZ1YzJadmNtMHBLU3dnY0M1cGNtbGtaWE5qWlc1alpWUm9hV05yYm1WemMwMWhjQ0FtSmlBb1p5NXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0M1MllXeDFaU0E5SUhBdWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTk5ZWEFzSUhRb2NDNXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0N3Z1p5NXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMDFoY0ZSeVlXNXpabTl5YlNrcEtTd2djQzUwY21GdWMyMXBjM05wYjI0Z1BpQXdJQ1ltSUNobkxuUnlZVzV6YldsemMybHZiaTUyWVd4MVpTQTlJSEF1ZEhKaGJuTnRhWE56YVc5dUxDQm5MblJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpOWVhBdWRtRnNkV1VnUFNCMkxuUmxlSFIxY21Vc0lHY3VkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjbE5wZW1VdWRtRnNkV1V1YzJWMEtIWXVkMmxrZEdnc0lIWXVhR1ZwWjJoMEtTd2djQzUwY21GdWMyMXBjM05wYjI1TllYQWdKaVlnS0djdWRISmhibk50YVhOemFXOXVUV0Z3TG5aaGJIVmxJRDBnY0M1MGNtRnVjMjFwYzNOcGIyNU5ZWEFzSUhRb2NDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBc0lHY3VkSEpoYm5OdGFYTnphVzl1VFdGd1ZISmhibk5tYjNKdEtTa3NJR2N1ZEdocFkydHVaWE56TG5aaGJIVmxJRDBnY0M1MGFHbGphMjVsYzNNc0lIQXVkR2hwWTJ0dVpYTnpUV0Z3SUNZbUlDaG5MblJvYVdOcmJtVnpjMDFoY0M1MllXeDFaU0E5SUhBdWRHaHBZMnR1WlhOelRXRndMQ0IwS0hBdWRHaHBZMnR1WlhOelRXRndMQ0JuTG5Sb2FXTnJibVZ6YzAxaGNGUnlZVzV6Wm05eWJTa3BMQ0JuTG1GMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVdWRtRnNkV1VnUFNCd0xtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVXNJR2N1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaTUyWVd4MVpTNWpiM0I1S0hBdVlYUjBaVzUxWVhScGIyNURiMnh2Y2lrcExDQndMbUZ1YVhOdmRISnZjSGtnUGlBd0lDWW1JQ2huTG1GdWFYTnZkSEp2Y0hsV1pXTjBiM0l1ZG1Gc2RXVXVjMlYwS0hBdVlXNXBjMjkwY205d2VTQXFJRTFoZEdndVkyOXpLSEF1WVc1cGMyOTBjbTl3ZVZKdmRHRjBhVzl1S1N3Z2NDNWhibWx6YjNSeWIzQjVJQ29nVFdGMGFDNXphVzRvY0M1aGJtbHpiM1J5YjNCNVVtOTBZWFJwYjI0cEtTd2djQzVoYm1semIzUnliM0I1VFdGd0lDWW1JQ2huTG1GdWFYTnZkSEp2Y0hsTllYQXVkbUZzZFdVZ1BTQndMbUZ1YVhOdmRISnZjSGxOWVhBc0lIUW9jQzVoYm1semIzUnliM0I1VFdGd0xDQm5MbUZ1YVhOdmRISnZjSGxOWVhCVWNtRnVjMlp2Y20wcEtTa3NJR2N1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1TENCbkxuTndaV04xYkdGeVEyOXNiM0l1ZG1Gc2RXVXVZMjl3ZVNod0xuTndaV04xYkdGeVEyOXNiM0lwTENCd0xuTndaV04xYkdGeVEyOXNiM0pOWVhBZ0ppWWdLR2N1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQzUyWVd4MVpTQTlJSEF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ3dnZENod0xuTndaV04xYkdGeVEyOXNiM0pOWVhBc0lHY3VjM0JsWTNWc1lYSkRiMnh2Y2sxaGNGUnlZVzV6Wm05eWJTa3BMQ0J3TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lDWW1JQ2huTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xuWmhiSFZsSUQwZ2NDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ3dnZENod0xuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMQ0JuTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd1ZISmhibk5tYjNKdEtTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ0S0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0J3TG0xaGRHTmhjQ0FtSmlBb1p5NXRZWFJqWVhBdWRtRnNkV1VnUFNCd0xtMWhkR05oY0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmZLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlHVXVaMlYwS0hBcExteHBaMmgwT3dvZ0lDQWdJQ0FnSUdjdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0dWRtRnNkV1V1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIWXViV0YwY21sNFYyOXliR1FwTENCbkxtNWxZWEpFYVhOMFlXNWpaUzUyWVd4MVpTQTlJSFl1YzJoaFpHOTNMbU5oYldWeVlTNXVaV0Z5TENCbkxtWmhja1JwYzNSaGJtTmxMblpoYkhWbElEMGdkaTV6YUdGa2IzY3VZMkZ0WlhKaExtWmhjanNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnY21WbWNtVnphRVp2WjFWdWFXWnZjbTF6T2lCdUxBb2dJQ0FnSUNBZ0lISmxabkpsYzJoTllYUmxjbWxoYkZWdWFXWnZjbTF6T2lCcENpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlFY3dLSE14TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSHQ5TENCeUlEMGdlMzBzSUdFZ1BTQmJYU3dnYnlBOUlIUXVhWE5YWldKSFRESWdQeUJ6TVM1blpYUlFZWEpoYldWMFpYSW9jekV1VFVGWVgxVk9TVVpQVWsxZlFsVkdSa1ZTWDBKSlRrUkpUa2RUS1NBNklEQTdDaUFnSUNCbWRXNWpkR2x2YmlCaktIWXNJSGdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUhndWNISnZaM0poYlRzS0lDQWdJQ0FnSUNCdUxuVnVhV1p2Y20xQ2JHOWphMEpwYm1ScGJtY29kaXdnZVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLSFlzSUhncElIc0tJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlHbGJkaTVwWkYwN0NpQWdJQ0FnSUNBZ2VTQTlQVDBnZG05cFpDQXdJQ1ltSUNodEtIWXBMQ0I1SUQwZ2FDaDJLU3dnYVZ0MkxtbGtYU0E5SUhrc0lIWXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJR2NwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUhndWNISnZaM0poYlRzS0lDQWdJQ0FnSUNCdUxuVndaR0YwWlZWQ1QwMWhjSEJwYm1jb2Rpd2dZaWs3Q2lBZ0lDQWdJQ0FnYkdWMElIY2dQU0JsTG5KbGJtUmxjaTVtY21GdFpUc0tJQ0FnSUNBZ0lDQnlXM1l1YVdSZElDRTlQU0IzSUNZbUlDaGtLSFlwTENCeVczWXVhV1JkSUQwZ2R5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJvS0hZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlIVW9LVHNLSUNBZ0lDQWdJQ0IyTGw5ZlltbHVaR2x1WjFCdmFXNTBTVzVrWlhnZ1BTQjRPd29nSUNBZ0lDQWdJR3hsZENCNUlEMGdjekV1WTNKbFlYUmxRblZtWm1WeUtDa3NJR0lnUFNCMkxsOWZjMmw2WlN3Z2R5QTlJSFl1ZFhOaFoyVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITXhMbUpwYm1SQ2RXWm1aWElvY3pFdVZVNUpSazlTVFY5Q1ZVWkdSVklzSUhrcExDQnpNUzVpZFdabVpYSkVZWFJoS0hNeExsVk9TVVpQVWsxZlFsVkdSa1ZTTENCaUxDQjNLU3dnY3pFdVltbHVaRUoxWm1abGNpaHpNUzVWVGtsR1QxSk5YMEpWUmtaRlVpd2diblZzYkNrc0lITXhMbUpwYm1SQ2RXWm1aWEpDWVhObEtITXhMbFZPU1VaUFVrMWZRbFZHUmtWU0xDQjRMQ0I1S1N3Z2VUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFVvS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNRHNnZGlBOElHODdJSFlyS3lscFppQW9ZUzVwYm1SbGVFOW1LSFlwSUQwOVBTQXRNU2tnY21WMGRYSnVJR0V1Y0hWemFDaDJLU3dnZGpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVFdGNGFXMTFiU0J1ZFcxaVpYSWdiMllnYzJsdGRXeDBZVzVsYjNWemJIa2dkWE5oWW14bElIVnVhV1p2Y20xeklHZHliM1Z3Y3lCeVpXRmphR1ZrTGlJcExDQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWkNoMktTQjdDaUFnSUNBZ0lDQWdiR1YwSUhnZ1BTQnBXM1l1YVdSZExDQjVJRDBnZGk1MWJtbG1iM0p0Y3l3Z1lpQTlJSFl1WDE5allXTm9aVHNLSUNBZ0lDQWdJQ0J6TVM1aWFXNWtRblZtWm1WeUtITXhMbFZPU1VaUFVrMWZRbFZHUmtWU0xDQjRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGNnUFNBd0xDQlNJRDBnZVM1c1pXNW5kR2c3SUhjZ1BDQlNPeUIzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJSGxiZDEwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobUtFa3NJSGNzSUdJcElEMDlQU0FoTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTBnUFNCSkxsOWZiMlptYzJWMExDQlVJRDBnUVhKeVlYa3VhWE5CY25KaGVTaEpMblpoYkhWbEtTQS9JRWt1ZG1Gc2RXVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1NTNTJZV3gxWlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z1R5QTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRmtnUFNBd095QlpJRHdnVkM1c1pXNW5kR2c3SUZrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0JVVzFsZExDQlZJRDBnWHlna0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbGIyWWdKQ0E5UFNBaWJuVnRZbVZ5SWlBL0lDaEpMbDlmWkdGMFlWc3dYU0E5SUNRc0lITXhMbUoxWm1abGNsTjFZa1JoZEdFb2N6RXVWVTVKUms5U1RWOUNWVVpHUlZJc0lFMGdLeUJQTENCSkxsOWZaR0YwWVNrcElEb2dKQzVwYzAxaGRISnBlRE1nUHlBb1NTNWZYMlJoZEdGYk1GMGdQU0FrTG1Wc1pXMWxiblJ6V3pCZExDQkpMbDlmWkdGMFlWc3hYU0E5SUNRdVpXeGxiV1Z1ZEhOYk1WMHNJRWt1WDE5a1lYUmhXekpkSUQwZ0pDNWxiR1Z0Wlc1MGMxc3lYU3dnU1M1ZlgyUmhkR0ZiTTEwZ1BTQWtMbVZzWlcxbGJuUnpXekJkTENCSkxsOWZaR0YwWVZzMFhTQTlJQ1F1Wld4bGJXVnVkSE5iTTEwc0lFa3VYMTlrWVhSaFd6VmRJRDBnSkM1bGJHVnRaVzUwYzFzMFhTd2dTUzVmWDJSaGRHRmJObDBnUFNBa0xtVnNaVzFsYm5Seld6VmRMQ0JKTGw5ZlpHRjBZVnMzWFNBOUlDUXVaV3hsYldWdWRITmJNRjBzSUVrdVgxOWtZWFJoV3poZElEMGdKQzVsYkdWdFpXNTBjMXMyWFN3Z1NTNWZYMlJoZEdGYk9WMGdQU0FrTG1Wc1pXMWxiblJ6V3pkZExDQkpMbDlmWkdGMFlWc3hNRjBnUFNBa0xtVnNaVzFsYm5Seld6aGRMQ0JKTGw5ZlpHRjBZVnN4TVYwZ1BTQWtMbVZzWlcxbGJuUnpXekJkS1NBNklDZ2tMblJ2UVhKeVlYa29TUzVmWDJSaGRHRXNJRThwTENCUElDczlJRlV1YzNSdmNtRm5aU0F2SUVac2IyRjBNekpCY25KaGVTNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpNUzVpZFdabVpYSlRkV0pFWVhSaEtITXhMbFZPU1VaUFVrMWZRbFZHUmtWU0xDQk5MQ0JKTGw5ZlpHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjekV1WW1sdVpFSjFabVpsY2loek1TNVZUa2xHVDFKTlgwSlZSa1pGVWl3Z2JuVnNiQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCbUtIWXNJSGdzSUhrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlIWXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ2FXWWdLSGxiZUYwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHSWdQVDBnSW01MWJXSmxjaUlwSUhsYmVGMGdQU0JpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGlLU0EvSUdJZ09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z1VpQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JKSUQwZ01Ec2dTU0E4SUhjdWJHVnVaM1JvT3lCSkt5c3BVaTV3ZFhOb0tIZGJTVjB1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1VzNoZElEMGdVanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoMGVYQmxiMllnWWlBOVBTQWliblZ0WW1WeUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9lVnQ0WFNBaFBUMGdZaWtnY21WMGRYSnVJSGxiZUYwZ1BTQmlMQ0FoTURzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZHlBOUlFRnljbUY1TG1selFYSnlZWGtvZVZ0NFhTa2dQeUI1VzNoZElEb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlVnQ0WFFvZ0lDQWdJQ0FnSUNBZ0lDQmRMQ0JTSUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hpS1NBL0lHSWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpQ2lBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU1NBOUlEQTdJRWtnUENCM0xteGxibWQwYURzZ1NTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTklEMGdkMXRKWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaE5MbVZ4ZFdGc2N5aFNXMGxkS1NBOVBUMGdJVEVwSUhKbGRIVnliaUJOTG1OdmNIa29VbHRKWFNrc0lDRXdPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Uc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzBvZGlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ2RpNTFibWxtYjNKdGN5d2dlU0E5SURBc0lHSWdQU0F4Tml3Z2R5QTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JTSUQwZ01Dd2dTU0E5SUhndWJHVnVaM1JvT3lCU0lEd2dTVHNnVWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFMGdQU0I0VzFKZExDQlVJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05MWJtUmhjbms2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHOXlZV2RsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzSUU4Z1BTQkJjbkpoZVM1cGMwRnljbUY1S0UwdWRtRnNkV1VwSUQ4Z1RTNTJZV3gxWlNBNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFMHVkbUZzZFdVS0lDQWdJQ0FnSUNBZ0lDQWdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCWklEMGdNQ3dnSkNBOUlFOHViR1Z1WjNSb095QlpJRHdnSkRzZ1dTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVklEMGdUMXRaWFN3Z2VpQTlJRjhvVlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVUxtSnZkVzVrWVhKNUlDczlJSG91WW05MWJtUmhjbmtzSUZRdWMzUnZjbUZuWlNBclBTQjZMbk4wYjNKaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0UwdVgxOWtZWFJoSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNoVUxuTjBiM0poWjJVZ0x5QkdiRzloZERNeVFYSnlZWGt1UWxsVVJWTmZVRVZTWDBWTVJVMUZUbFFwTENCTkxsOWZiMlptYzJWMElEMGdlU3dnVWlBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGNnUFNCNUlDVWdZanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWklEMGdZaUF0SUhjN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM0lDRTlQU0F3SUNZbUlGa2dMU0JVTG1KdmRXNWtZWEo1SUR3Z01DQW1KaUFvZVNBclBTQmlJQzBnZHl3Z1RTNWZYMjltWm5ObGRDQTlJSGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhrZ0t6MGdWQzV6ZEc5eVlXZGxPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkeUE5SUhrZ0pTQmlMQ0IzSUQ0Z01DQW1KaUFvZVNBclBTQmlJQzBnZHlrc0lIWXVYMTl6YVhwbElEMGdlU3dnZGk1ZlgyTmhZMmhsSUQwZ2UzMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmZLSFlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZbTkxYm1SaGNuazZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lITjBiM0poWjJVNklEQUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ2RpQTlQU0FpYm5WdFltVnlJaUEvSUNoNExtSnZkVzVrWVhKNUlEMGdOQ3dnZUM1emRHOXlZV2RsSUQwZ05Da2dPaUIyTG1selZtVmpkRzl5TWlBL0lDaDRMbUp2ZFc1a1lYSjVJRDBnT0N3Z2VDNXpkRzl5WVdkbElEMGdPQ2tnT2lCMkxtbHpWbVZqZEc5eU15QjhmQ0IyTG1selEyOXNiM0lnUHlBb2VDNWliM1Z1WkdGeWVTQTlJREUyTENCNExuTjBiM0poWjJVZ1BTQXhNaWtnT2lCMkxtbHpWbVZqZEc5eU5DQS9JQ2g0TG1KdmRXNWtZWEo1SUQwZ01UWXNJSGd1YzNSdmNtRm5aU0E5SURFMktTQTZJSFl1YVhOTllYUnlhWGd6SUQ4Z0tIZ3VZbTkxYm1SaGNua2dQU0EwT0N3Z2VDNXpkRzl5WVdkbElEMGdORGdwSURvZ2RpNXBjMDFoZEhKcGVEUWdQeUFvZUM1aWIzVnVaR0Z5ZVNBOUlEWTBMQ0I0TG5OMGIzSmhaMlVnUFNBMk5Da2dPaUIyTG1selZHVjRkSFZ5WlNBL0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCellXMXdiR1Z5Y3lCallXNGdibTkwSUdKbElIQmhjblFnYjJZZ1lXNGdkVzVwWm05eWJYTWdaM0p2ZFhBdUlpa2dPaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlZ1YzNWd2NHOXlkR1ZrSUhWdWFXWnZjbTBnZG1Gc2RXVWdkSGx3WlM0aUxDQjJLU3dnZURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHY29kaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnZGk1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnZUM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2daeWs3Q2lBZ0lDQWdJQ0FnYkdWMElIa2dQU0JoTG1sdVpHVjRUMllvZUM1ZlgySnBibVJwYm1kUWIybHVkRWx1WkdWNEtUc0tJQ0FnSUNBZ0lDQmhMbk53YkdsalpTaDVMQ0F4S1N3Z2N6RXVaR1ZzWlhSbFFuVm1abVZ5S0dsYmVDNXBaRjBwTENCa1pXeGxkR1VnYVZ0NExtbGtYU3dnWkdWc1pYUmxJSEpiZUM1cFpGMDdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ3S0NrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RpQnBiaUJwS1hNeExtUmxiR1YwWlVKMVptWmxjaWhwVzNaZEtUc0tJQ0FnSUNBZ0lDQmhJRDBnVzEwc0lHa2dQU0I3ZlN3Z2NpQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCaWFXNWtPaUJqTEFvZ0lDQWdJQ0FnSUhWd1pHRjBaVG9nYkN3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCd0NpQWdJQ0I5T3dwOUNuWmhjaUJTYnlBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQjdmU2w3Q2lBZ0lDQWdJQ0FnYkdWMElIc2dZMkZ1ZG1Gek9pQjBJRDBnZEhBb0tTQXNJR052Ym5SbGVIUTZJRzRnUFNCdWRXeHNJQ3dnWkdWd2RHZzZJR2tnUFNBaE1DQXNJSE4wWlc1amFXdzZJSElnUFNBaE1DQXNJR0ZzY0doaE9pQmhJRDBnSVRFZ0xDQmhiblJwWVd4cFlYTTZJRzhnUFNBaE1TQXNJSEJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZVG9nWXlBOUlDRXdJQ3dnY0hKbGMyVnlkbVZFY21GM2FXNW5RblZtWm1WeU9pQnNJRDBnSVRFZ0xDQndiM2RsY2xCeVpXWmxjbVZ1WTJVNklHZ2dQU0FpWkdWbVlYVnNkQ0lnTENCbVlXbHNTV1pOWVdwdmNsQmxjbVp2Y20xaGJtTmxRMkYyWldGME9pQjFJRDBnSVRFZ0lIMGdQU0JsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVhWE5YWldKSFRGSmxibVJsY21WeUlEMGdJVEE3Q2lBZ0lDQWdJQ0FnYkdWMElHUTdDaUFnSUNBZ0lDQWdiaUFoUFQwZ2JuVnNiQ0EvSUdRZ1BTQnVMbWRsZEVOdmJuUmxlSFJCZEhSeWFXSjFkR1Z6S0NrdVlXeHdhR0VnT2lCa0lEMGdZVHNLSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJRzVsZHlCVmFXNTBNekpCY25KaGVTZzBLU3dnYlNBOUlHNWxkeUJKYm5Rek1rRnljbUY1S0RRcExDQmZJRDBnYm5Wc2JDd2daeUE5SUc1MWJHd3NJSEFnUFNCYlhTd2dkaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lIUm9hWE11Wkc5dFJXeGxiV1Z1ZENBOUlIUXNJSFJvYVhNdVpHVmlkV2NnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR05vWldOclUyaGhaR1Z5UlhKeWIzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdiMjVUYUdGa1pYSkZjbkp2Y2pvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVZWFYwYjBOc1pXRnlJRDBnSVRBc0lIUm9hWE11WVhWMGIwTnNaV0Z5UTI5c2IzSWdQU0FoTUN3Z2RHaHBjeTVoZFhSdlEyeGxZWEpFWlhCMGFDQTlJQ0V3TENCMGFHbHpMbUYxZEc5RGJHVmhjbE4wWlc1amFXd2dQU0FoTUN3Z2RHaHBjeTV6YjNKMFQySnFaV04wY3lBOUlDRXdMQ0IwYUdsekxtTnNhWEJ3YVc1blVHeGhibVZ6SUQwZ1cxMHNJSFJvYVhNdWJHOWpZV3hEYkdsd2NHbHVaMFZ1WVdKc1pXUWdQU0FoTVN3Z2RHaHBjeTVmYjNWMGNIVjBRMjlzYjNKVGNHRmpaU0E5SUhaMExDQjBhR2x6TGw5MWMyVk1aV2RoWTNsTWFXZG9kSE1nUFNBaE1Td2dkR2hwY3k1MGIyNWxUV0Z3Y0dsdVp5QTlJRTV1TENCMGFHbHpMblJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVVnUFNBeE93b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ2RHaHBjeXdnZVNBOUlDRXhMQ0JpSUQwZ01Dd2dkeUE5SURBc0lGSWdQU0J1ZFd4c0xDQkpJRDBnTFRFc0lFMGdQU0J1ZFd4c0xDQlVJRDBnYm1WM0lHcGxMQ0JQSUQwZ2JtVjNJR3BsTENCWklEMGdiblZzYkN3Z0pDQTlJRzVsZHlCd1pTZ3dLU3dnVlNBOUlEQXNJSG9nUFNCMExuZHBaSFJvTENCeElEMGdkQzVvWldsbmFIUXNJRWdnUFNBeExDQnVaU0E5SUc1MWJHd3NJRmNnUFNCdWRXeHNMQ0JMSUQwZ2JtVjNJR3BsS0RBc0lEQXNJSG9zSUhFcExDQkVJRDBnYm1WM0lHcGxLREFzSURBc0lIb3NJSEVwTENCSElEMGdJVEVzSUdobElEMGdibVYzSUZCekxDQm1aU0E5SUNFeExDQmZaU0E5SUNFeExDQjNaU0E5SUc1MWJHd3NJRVZsSUQwZ2JtVjNJSHBsTENCVVpTQTlJRzVsZHlCYUxDQlpaU0E5SUc1bGR5QkJMQ0JwZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0JsYm5acGNtOXViV1Z1ZERvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2IzWmxjbkpwWkdWTllYUmxjbWxoYkRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FYTlRZMlZ1WlRvZ0lUQUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRU5sS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVaUE5UFQwZ2JuVnNiQ0EvSUVnZ09pQXhPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1RDQTlJRzQ3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYjJVb1JTd2dUaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGWWdQU0F3T3lCV0lEd2dSUzVzWlc1bmRHZzdJRllyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVWYlZsMHNJR3NnUFNCMExtZGxkRU52Ym5SbGVIUW9SaXdnVGlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9heUFoUFQwZ2JuVnNiQ2tnY21WMGRYSnVJR3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXeHdhR0U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHVnVZMmxzT2lCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXNTBhV0ZzYVdGek9pQnZMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhPaUJqTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGMyVnlkbVZFY21GM2FXNW5RblZtWm1WeU9pQnNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzkzWlhKUWNtVm1aWEpsYm1ObE9pQm9MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZwYkVsbVRXRnFiM0pRWlhKbWIzSnRZVzVqWlVOaGRtVmhkRG9nZFFvZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9Jbk5sZEVGMGRISnBZblYwWlNJZ2FXNGdkQ0FtSmlCMExuTmxkRUYwZEhKcFluVjBaU2dpWkdGMFlTMWxibWRwYm1VaUxDQmdkR2h5WldVdWFuTWdjaVI3U0dOOVlDa3NJSFF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpZDJWaVoyeGpiMjUwWlhoMGJHOXpkQ0lzSUdObExDQWhNU2tzSUhRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyVmlaMnhqYjI1MFpYaDBjbVZ6ZEc5eVpXUWlMQ0JoWlN3Z0lURXBMQ0IwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5kbFltZHNZMjl1ZEdWNGRHTnlaV0YwYVc5dVpYSnliM0lpTENCblpTd2dJVEVwTENCTUlEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVGlBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpZDJWaVoyd3lJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaWQyVmlaMndpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSmxlSEJsY21sdFpXNTBZV3d0ZDJWaVoyd2lDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hndWFYTlhaV0pIVERGU1pXNWtaWEpsY2lBOVBUMGdJVEFnSmlZZ1RpNXphR2xtZENncExDQk1JRDBnYjJVb1Rpd2dSU2tzSUV3Z1BUMDlJRzUxYkd3cElIUm9jbTkzSUc5bEtFNHBJRDhnYm1WM0lFVnljbTl5S0NKRmNuSnZjaUJqY21WaGRHbHVaeUJYWldKSFRDQmpiMjUwWlhoMElIZHBkR2dnZVc5MWNpQnpaV3hsWTNSbFpDQmhkSFJ5YVdKMWRHVnpMaUlwSURvZ2JtVjNJRVZ5Y205eUtDSkZjbkp2Y2lCamNtVmhkR2x1WnlCWFpXSkhUQ0JqYjI1MFpYaDBMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVnZaaUJYWldKSFRGSmxibVJsY21sdVowTnZiblJsZUhRZ1BDQWlkU0lnSmlZZ1RDQnBibk4wWVc1alpXOW1JRmRsWWtkTVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZENBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGZGxZa2RNSURFZ2MzVndjRzl5ZENCM1lYTWdaR1Z3Y21WallYUmxaQ0JwYmlCeU1UVXpJR0Z1WkNCM2FXeHNJR0psSUhKbGJXOTJaV1FnYVc0Z2NqRTJNeTRpS1N3Z1RDNW5aWFJUYUdGa1pYSlFjbVZqYVhOcGIyNUdiM0p0WVhRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVEM1blpYUlRhR0ZrWlhKUWNtVmphWE5wYjI1R2IzSnRZWFFnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbUZ1WjJWTmFXNDZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtRnVaMlZOWVhnNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbFkybHphVzl1T2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQ0lnS3lCRkxtMWxjM05oWjJVcExDQkZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1dDd2dhV1VzSUVvc0lGTmxMQ0J0WlN3Z2VXVXNJRTVsTENCeFpTd2djblFzSUVNc0lGTXNJRUlzSUdWbExDQnFMQ0IwWlN3Z1RXVXNJSEpsTENCa1pTd2dUR1VzSUZwbExDQnpaU3dnSkdVc0lFOWxMQ0JKWlRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCU1pTZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1dDQTlJRzVsZHlCb1h5aE1LU3dnYVdVZ1BTQnVaWGNnYzE4b1RDd2dXQ3dnWlNrc0lGZ3VhVzVwZENocFpTa3NJQ1JsSUQwZ2JtVjNJRll3S0V3c0lGZ3NJR2xsS1N3Z1NpQTlJRzVsZHlCQ01DaE1MQ0JZTENCcFpTa3NJRk5sSUQwZ2JtVjNJR1pmS0V3cExDQnRaU0E5SUc1bGR5QjNNQ3dnZVdVZ1BTQnVaWGNnZWpBb1RDd2dXQ3dnU2l3Z2JXVXNJR2xsTENBa1pTd2dVMlVwTENCT1pTQTlJRzVsZHlCaFh5aDRLU3dnY1dVZ1BTQnVaWGNnYkY4b2VDa3NJSEowSUQwZ2JtVjNJR0p3S0V3c0lHbGxLU3dnVDJVZ1BTQnVaWGNnYmw4b1RDd2dXQ3dnY25Rc0lHbGxLU3dnUXlBOUlHNWxkeUIxWHloTUxDQnlkQ3dnVTJVc0lFOWxLU3dnVXlBOUlHNWxkeUJmWHloTUxDQkRMQ0J5ZEN3Z1UyVXBMQ0JNWlNBOUlHNWxkeUJuWHloTUxDQnBaU3dnZVdVcExDQk5aU0E5SUc1bGR5QnlYeWh0WlNrc0lFSWdQU0J1WlhjZ1ZEQW9lQ3dnVG1Vc0lIRmxMQ0JZTENCcFpTd2dUMlVzSUUxbEtTd2daV1VnUFNCdVpYY2dTREFvZUN3Z2JXVXBMQ0JxSUQwZ2JtVjNJRkl3TENCMFpTQTlJRzVsZHlCRU1DaFlMQ0JwWlNrc0lHUmxJRDBnYm1WM0lIUmZLSGdzSUU1bExDQnhaU3dnU2l3Z1V5d2daQ3dnWXlrc0lISmxJRDBnYm1WM0lFWXdLSGdzSUZNc0lHbGxLU3dnU1dVZ1BTQnVaWGNnUnpBb1RDd2dVMlVzSUdsbExDQktLU3dnV21VZ1BTQnVaWGNnYVY4b1RDd2dXQ3dnVTJVc0lHbGxLU3dnYzJVZ1BTQnVaWGNnWkY4b1RDd2dXQ3dnVTJVc0lHbGxLU3dnVTJVdWNISnZaM0poYlhNZ1BTQkNMbkJ5YjJkeVlXMXpMQ0I0TG1OaGNHRmlhV3hwZEdsbGN5QTlJR2xsTENCNExtVjRkR1Z1YzJsdmJuTWdQU0JZTENCNExuQnliM0JsY25ScFpYTWdQU0J0WlN3Z2VDNXlaVzVrWlhKTWFYTjBjeUE5SUdvc0lIZ3VjMmhoWkc5M1RXRndJRDBnY21Vc0lIZ3VjM1JoZEdVZ1BTQktMQ0I0TG1sdVptOGdQU0JUWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1VtVW9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ1VDQTlJRzVsZHlCQmJ5aDRMQ0JNS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbmh5SUQwZ1VDd2dkR2hwY3k1blpYUkRiMjUwWlhoMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTU93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBRMjl1ZEdWNGRFRjBkSEpwWW5WMFpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFd3VaMlYwUTI5dWRHVjRkRUYwZEhKcFluVjBaWE1vS1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1admNtTmxRMjl1ZEdWNGRFeHZjM01nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JZTG1kbGRDZ2lWMFZDUjB4ZmJHOXpaVjlqYjI1MFpYaDBJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lFVWdKaVlnUlM1c2IzTmxRMjl1ZEdWNGRDZ3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVabTl5WTJWRGIyNTBaWGgwVW1WemRHOXlaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRmd1WjJWMEtDSlhSVUpIVEY5c2IzTmxYMk52Ym5SbGVIUWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1JTQW1KaUJGTG5KbGMzUnZjbVZEYjI1MFpYaDBLQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSUWFYaGxiRkpoZEdsdklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSU93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWMyVjBVR2w0Wld4U1lYUnBieUE5SUdaMWJtTjBhVzl1S0VVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hJSUQwZ1JTd2dkR2hwY3k1elpYUlRhWHBsS0hvc0lIRXNJQ0V4S1NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUlRhWHBsSUQwZ1puVnVZM1JwYjI0b1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlM1elpYUW9laXdnY1NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1elpYUlRhWHBsSUQwZ1puVnVZM1JwYjI0b1JTd2dUaXdnVmlBOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hRTG1selVISmxjMlZ1ZEdsdVp5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkRZVzRuZENCamFHRnVaMlVnYzJsNlpTQjNhR2xzWlNCV1VpQmtaWFpwWTJVZ2FYTWdjSEpsYzJWdWRHbHVaeTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I2SUQwZ1JTd2djU0E5SUU0c0lIUXVkMmxrZEdnZ1BTQk5ZWFJvTG1ac2IyOXlLRVVnS2lCSUtTd2dkQzVvWldsbmFIUWdQU0JOWVhSb0xtWnNiMjl5S0U0Z0tpQklLU3dnVmlBOVBUMGdJVEFnSmlZZ0tIUXVjM1I1YkdVdWQybGtkR2dnUFNCRklDc2dJbkI0SWl3Z2RDNXpkSGxzWlM1b1pXbG5hSFFnUFNCT0lDc2dJbkI0SWlrc0lIUm9hWE11YzJWMFZtbGxkM0J2Y25Rb01Dd2dNQ3dnUlN3Z1RpazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJFY21GM2FXNW5RblZtWm1WeVUybDZaU0E5SUdaMWJtTjBhVzl1S0VVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRVV1YzJWMEtIb2dLaUJJTENCeElDb2dTQ2t1Wm14dmIzSW9LVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEVSeVlYZHBibWRDZFdabVpYSlRhWHBsSUQwZ1puVnVZM1JwYjI0b1JTd2dUaXdnVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0I2SUQwZ1JTd2djU0E5SUU0c0lFZ2dQU0JXTENCMExuZHBaSFJvSUQwZ1RXRjBhQzVtYkc5dmNpaEZJQ29nVmlrc0lIUXVhR1ZwWjJoMElEMGdUV0YwYUM1bWJHOXZjaWhPSUNvZ1Zpa3NJSFJvYVhNdWMyVjBWbWxsZDNCdmNuUW9NQ3dnTUN3Z1JTd2dUaWs3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSRGRYSnlaVzUwVm1sbGQzQnZjblFnUFNCbWRXNWpkR2x2YmloRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGTG1OdmNIa29WQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSV2FXVjNjRzl5ZENBOUlHWjFibU4wYVc5dUtFVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVVdVkyOXdlU2hMS1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5ObGRGWnBaWGR3YjNKMElEMGdablZ1WTNScGIyNG9SU3dnVGl3Z1Zpd2dSaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQkZMbWx6Vm1WamRHOXlOQ0EvSUVzdWMyVjBLRVV1ZUN3Z1JTNTVMQ0JGTG5vc0lFVXVkeWtnT2lCTExuTmxkQ2hGTENCT0xDQldMQ0JHS1N3Z1NpNTJhV1YzY0c5eWRDaFVMbU52Y0hrb1N5a3ViWFZzZEdsd2JIbFRZMkZzWVhJb1NDa3VabXh2YjNJb0tTazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJUWTJsemMyOXlJRDBnWm5WdVkzUnBiMjRvUlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSUzVqYjNCNUtFUXBPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjMlYwVTJOcGMzTnZjaUE5SUdaMWJtTjBhVzl1S0VVc0lFNHNJRllzSUVZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUlM1cGMxWmxZM1J2Y2pRZ1B5QkVMbk5sZENoRkxuZ3NJRVV1ZVN3Z1JTNTZMQ0JGTG5jcElEb2dSQzV6WlhRb1JTd2dUaXdnVml3Z1Jpa3NJRW91YzJOcGMzTnZjaWhQTG1OdmNIa29SQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9TQ2t1Wm14dmIzSW9LU2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSVFkybHpjMjl5VkdWemRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1J6c0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuTmxkRk5qYVhOemIzSlVaWE4wSUQwZ1puVnVZM1JwYjI0b1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCS0xuTmxkRk5qYVhOemIzSlVaWE4wS0VjZ1BTQkZLVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEU5d1lYRjFaVk52Y25RZ1BTQm1kVzVqZEdsdmJpaEZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNWxJRDBnUlRzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5ObGRGUnlZVzV6Y0dGeVpXNTBVMjl5ZENBOUlHWjFibU4wYVc5dUtFVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1Z5QTlJRVU3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSRGJHVmhja052Ykc5eUlEMGdablZ1WTNScGIyNG9SU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JTNWpiM0I1S0dSbExtZGxkRU5zWldGeVEyOXNiM0lvS1NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1elpYUkRiR1ZoY2tOdmJHOXlJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsTG5ObGRFTnNaV0Z5UTI5c2IzSXVZWEJ3Ykhrb1pHVXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSRGJHVmhja0ZzY0doaElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pTNW5aWFJEYkdWaGNrRnNjR2hoS0NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1elpYUkRiR1ZoY2tGc2NHaGhJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsTG5ObGRFTnNaV0Z5UVd4d2FHRXVZWEJ3Ykhrb1pHVXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVqYkdWaGNpQTlJR1oxYm1OMGFXOXVLRVVnUFNBaE1Dd2dUaUE5SUNFd0xDQldJRDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3NnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hTSUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhobElEMGdVaTUwWlhoMGRYSmxMbVp2Y20xaGREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JySUQwZ2VHVWdQVDA5SUY5a0lIeDhJSGhsSUQwOVBTQm5aQ0I4ZkNCNFpTQTlQVDBnYldRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9heWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0WlNBOUlGSXVkR1Y0ZEhWeVpTNTBlWEJsTENCQlpTQTlJSGhsSUQwOVBTQlBiaUI4ZkNCNFpTQTlQVDBnVEc0Z2ZId2dlR1VnUFQwOUlGZGpJSHg4SUhobElEMDlQU0JwYVNCOGZDQjRaU0E5UFQwZ1ptUWdmSHdnZUdVZ1BUMDlJSEJrTENCVlpTQTlJR1JsTG1kbGRFTnNaV0Z5UTI5c2IzSW9LU3dnUkdVZ1BTQmtaUzVuWlhSRGJHVmhja0ZzY0doaEtDa3NJRmRsSUQwZ1ZXVXVjaXdnVUdVZ1BTQlZaUzVuTENCV1pTQTlJRlZsTG1JN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRV1VnUHlBb1psc3dYU0E5SUZkbExDQm1XekZkSUQwZ1VHVXNJR1piTWwwZ1BTQldaU3dnWmxzelhTQTlJRVJsTENCTUxtTnNaV0Z5UW5WbVptVnlkV2wyS0V3dVEwOU1UMUlzSURBc0lHWXBLU0E2SUNodFd6QmRJRDBnVjJVc0lHMWJNVjBnUFNCUVpTd2diVnN5WFNBOUlGWmxMQ0J0V3pOZElEMGdSR1VzSUV3dVkyeGxZWEpDZFdabVpYSnBkaWhNTGtOUFRFOVNMQ0F3TENCdEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1JpQjhQU0JNTGtOUFRFOVNYMEpWUmtaRlVsOUNTVlE3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnVGlBbUppQW9SaUI4UFNCTUxrUkZVRlJJWDBKVlJrWkZVbDlDU1ZRcExDQldJQ1ltSUNoR0lIdzlJRXd1VTFSRlRrTkpURjlDVlVaR1JWSmZRa2xVS1N3Z1RDNWpiR1ZoY2loR0tUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtTnNaV0Z5UTI5c2IzSWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amJHVmhjaWdoTUN3Z0lURXNJQ0V4S1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1Oc1pXRnlSR1Z3ZEdnZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNpZ2hNU3dnSVRBc0lDRXhLVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbU5zWldGeVUzUmxibU5wYkNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU5zWldGeUtDRXhMQ0FoTVN3Z0lUQXBPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaR2x6Y0c5elpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW5kbFltZHNZMjl1ZEdWNGRHeHZjM1FpTENCalpTd2dJVEVwTENCMExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbmRsWW1kc1kyOXVkR1Y0ZEhKbGMzUnZjbVZrSWl3Z1lXVXNJQ0V4S1N3Z2RDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0ozWldKbmJHTnZiblJsZUhSamNtVmhkR2x2Ym1WeWNtOXlJaXdnWjJVc0lDRXhLU3dnYWk1a2FYTndiM05sS0Nrc0lIUmxMbVJwYzNCdmMyVW9LU3dnYldVdVpHbHpjRzl6WlNncExDQk9aUzVrYVhOd2IzTmxLQ2tzSUhGbExtUnBjM0J2YzJVb0tTd2dVeTVrYVhOd2IzTmxLQ2tzSUU5bExtUnBjM0J2YzJVb0tTd2dTV1V1WkdsemNHOXpaU2dwTENCQ0xtUnBjM0J2YzJVb0tTd2dVQzVrYVhOd2IzTmxLQ2tzSUZBdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZ6YzJsdmJuTjBZWEowSWl3Z2RIUXBMQ0JRTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxjM05wYjI1bGJtUWlMQ0IwYmlrc0lIZGxJQ1ltSUNoM1pTNWthWE53YjNObEtDa3NJSGRsSUQwZ2JuVnNiQ2tzSUZKMExuTjBiM0FvS1RzS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTmxLRVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdSUzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BMQ0JqYjI1emIyeGxMbXh2WnlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dRMjl1ZEdWNGRDQk1iM04wTGlJcExDQjVJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHRmxLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1EyOXVkR1Y0ZENCU1pYTjBiM0psWkM0aUtTd2dlU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRk5sTG1GMWRHOVNaWE5sZEN3Z1RpQTlJSEpsTG1WdVlXSnNaV1FzSUZZZ1BTQnlaUzVoZFhSdlZYQmtZWFJsTENCR0lEMGdjbVV1Ym1WbFpITlZjR1JoZEdVc0lHc2dQU0J5WlM1MGVYQmxPd29nSUNBZ0lDQWdJQ0FnSUNCU1pTZ3BMQ0JUWlM1aGRYUnZVbVZ6WlhRZ1BTQkZMQ0J5WlM1bGJtRmliR1ZrSUQwZ1Rpd2djbVV1WVhWMGIxVndaR0YwWlNBOUlGWXNJSEpsTG01bFpXUnpWWEJrWVhSbElEMGdSaXdnY21VdWRIbHdaU0E5SUdzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHZGxLRVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dRU0JYWldKSFRDQmpiMjUwWlhoMElHTnZkV3hrSUc1dmRDQmlaU0JqY21WaGRHVmtMaUJTWldGemIyNDZJQ0lzSUVVdWMzUmhkSFZ6VFdWemMyRm5aU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhWbEtFVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTRnUFNCRkxuUmhjbWRsZERzS0lDQWdJQ0FnSUNBZ0lDQWdUaTV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2RXVXBMQ0JSS0U0cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQlJLRVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZbVVvUlNrc0lHMWxMbkpsYlc5MlpTaEZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWW1Vb1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUaUE5SUcxbExtZGxkQ2hGS1M1d2NtOW5jbUZ0Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdUaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaE9MbVp2Y2tWaFkyZ29ablZ1WTNScGIyNG9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUWk1eVpXeGxZWE5sVUhKdlozSmhiU2hXS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUVVdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBbUppQkNMbkpsYkdWaGMyVlRhR0ZrWlhKRFlXTm9aU2hGS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wSUQwZ1puVnVZM1JwYjI0b1JTd2dUaXdnVml3Z1Jpd2dheXdnZUdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVGlBOVBUMGdiblZzYkNBbUppQW9UaUE5SUdsMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRmxJRDBnYXk1cGMwMWxjMmdnSmlZZ2F5NXRZWFJ5YVhoWGIzSnNaQzVrWlhSbGNtMXBibUZ1ZENncElEd2dNQ3dnVldVZ1BTQkdaQ2hGTENCT0xDQldMQ0JHTENCcktUc0tJQ0FnSUNBZ0lDQWdJQ0FnU2k1elpYUk5ZWFJsY21saGJDaEdMQ0JCWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRVpTQTlJRll1YVc1a1pYZ3NJRmRsSUQwZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFWXVkMmx5WldaeVlXMWxJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VSbElEMGdReTVuWlhSWGFYSmxabkpoYldWQmRIUnlhV0oxZEdVb1Zpa3NJRVJsSUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZkbElEMGdNanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VHVWdQU0JXTG1SeVlYZFNZVzVuWlN3Z1ZtVWdQU0JXTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lHRjBJRDBnVUdVdWMzUmhjblFnS2lCWFpTd2diSFFnUFNBb1VHVXVjM1JoY25RZ0t5QlFaUzVqYjNWdWRDa2dLaUJYWlRzS0lDQWdJQ0FnSUNBZ0lDQWdlR1VnSVQwOUlHNTFiR3dnSmlZZ0tHRjBJRDBnVFdGMGFDNXRZWGdvWVhRc0lIaGxMbk4wWVhKMElDb2dWMlVwTENCc2RDQTlJRTFoZEdndWJXbHVLR3gwTENBb2VHVXVjM1JoY25RZ0t5QjRaUzVqYjNWdWRDa2dLaUJYWlNrcExDQkVaU0FoUFQwZ2JuVnNiQ0EvSUNoaGRDQTlJRTFoZEdndWJXRjRLR0YwTENBd0tTd2diSFFnUFNCTllYUm9MbTFwYmloc2RDd2dSR1V1WTI5MWJuUXBLU0E2SUZabElDRTlJRzUxYkd3Z0ppWWdLR0YwSUQwZ1RXRjBhQzV0WVhnb1lYUXNJREFwTENCc2RDQTlJRTFoZEdndWJXbHVLR3gwTENCV1pTNWpiM1Z1ZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NIUWdQU0JzZENBdElHRjBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9TSFFnUENBd0lIeDhJRWgwSUQwOVBTQXhJQzhnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQlBaUzV6WlhSMWNDaHJMQ0JHTENCVlpTd2dWaXdnUkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lXNHNJSFYwSUQwZ1dtVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaEVaU0FoUFQwZ2JuVnNiQ0FtSmlBb1lXNGdQU0J5ZEM1blpYUW9SR1VwTENCMWRDQTlJSE5sTENCMWRDNXpaWFJKYm1SbGVDaGhiaWtwTENCckxtbHpUV1Z6YUNrZ1JpNTNhWEpsWm5KaGJXVWdQVDA5SUNFd0lEOGdLRW91YzJWMFRHbHVaVmRwWkhSb0tFWXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JQ29nUTJVb0tTa3NJSFYwTG5ObGRFMXZaR1VvVEM1TVNVNUZVeWtwSURvZ2RYUXVjMlYwVFc5a1pTaE1MbFJTU1VGT1IweEZVeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHc3VhWE5NYVc1bEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV0dVZ1BTQkdMbXhwYm1WM2FXUjBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRmhsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRmhsSUQwZ01Ta3NJRW91YzJWMFRHbHVaVmRwWkhSb0tGaGxJQ29nUTJVb0tTa3NJR3N1YVhOTWFXNWxVMlZuYldWdWRITWdQeUIxZEM1elpYUk5iMlJsS0V3dVRFbE9SVk1wSURvZ2F5NXBjMHhwYm1WTWIyOXdJRDhnZFhRdWMyVjBUVzlrWlNoTUxreEpUa1ZmVEU5UFVDa2dPaUIxZEM1elpYUk5iMlJsS0V3dVRFbE9SVjlUVkZKSlVDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JyTG1selVHOXBiblJ6SUQ4Z2RYUXVjMlYwVFc5a1pTaE1MbEJQU1U1VVV5a2dPaUJyTG1selUzQnlhWFJsSUNZbUlIVjBMbk5sZEUxdlpHVW9UQzVVVWtsQlRrZE1SVk1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYXk1cGMwbHVjM1JoYm1ObFpFMWxjMmdwSUhWMExuSmxibVJsY2tsdWMzUmhibU5sY3loaGRDd2dTSFFzSUdzdVkyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFdMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWVpTQTlJRll1WDIxaGVFbHVjM1JoYm1ObFEyOTFiblFnSVQwOUlIWnZhV1FnTUNBL0lGWXVYMjFoZUVsdWMzUmhibU5sUTI5MWJuUWdPaUF4SUM4Z01Dd2dVMkVnUFNCTllYUm9MbTFwYmloV0xtbHVjM1JoYm1ObFEyOTFiblFzSUZobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVjBMbkpsYm1SbGNrbHVjM1JoYm1ObGN5aGhkQ3dnU0hRc0lGTmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhWMExuSmxibVJsY2loaGRDd2dTSFFwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WTI5dGNHbHNaU0E5SUdaMWJtTjBhVzl1S0VVc0lFNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ZpaEdMQ0JyTENCNFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSaTUwY21GdWMzQmhjbVZ1ZENBOVBUMGdJVEFnSmlZZ1JpNXphV1JsSUQwOVBTQm5iaUFtSmlCR0xtWnZjbU5sVTJsdVoyeGxVR0Z6Y3lBOVBUMGdJVEVnUHlBb1JpNXphV1JsSUQwZ1JuUXNJRVl1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnU0hNb1Jpd2dheXdnZUdVcExDQkdMbk5wWkdVZ1BTQkNiaXdnUmk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCSWN5aEdMQ0JyTENCNFpTa3NJRVl1YzJsa1pTQTlJR2R1S1NBNklFaHpLRVlzSUdzc0lIaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JuSUQwZ2RHVXVaMlYwS0VVcExDQm5MbWx1YVhRb0tTd2dkaTV3ZFhOb0tHY3BMQ0JGTG5SeVlYWmxjbk5sVm1semFXSnNaU2htZFc1amRHbHZiaWhHS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCR0xtbHpUR2xuYUhRZ0ppWWdSaTVzWVhsbGNuTXVkR1Z6ZENoT0xteGhlV1Z5Y3lrZ0ppWWdLR2N1Y0hWemFFeHBaMmgwS0VZcExDQkdMbU5oYzNSVGFHRmtiM2NnSmlZZ1p5NXdkWE5vVTJoaFpHOTNLRVlwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUdjdWMyVjBkWEJNYVdkb2RITW9lQzVmZFhObFRHVm5ZV041VEdsbmFIUnpLU3dnUlM1MGNtRjJaWEp6WlNobWRXNWpkR2x2YmloR0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlFWXViV0YwWlhKcFlXdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYXlrZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2F5a3BJR1p2Y2loc1pYUWdlR1VnUFNBd095QjRaU0E4SUdzdWJHVnVaM1JvT3lCNFpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRV1VnUFNCclczaGxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCV0tFRmxMQ0JGTENCR0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnVmlockxDQkZMQ0JHS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUhZdWNHOXdLQ2tzSUdjZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JHVjBJRVpsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJCZENoRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVabElDWW1JRVpsS0VVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjBkQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVblF1YzNSdmNDZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUIwYmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVW5RdWMzUmhjblFvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJRkowSUQwZ2JtVjNJRVZrT3dvZ0lDQWdJQ0FnSUZKMExuTmxkRUZ1YVcxaGRHbHZia3h2YjNBb1FYUXBMQ0IwZVhCbGIyWWdjMlZzWmlBOElDSjFJaUFtSmlCU2RDNXpaWFJEYjI1MFpYaDBLSE5sYkdZcExDQjBhR2x6TG5ObGRFRnVhVzFoZEdsdmJreHZiM0FnUFNCbWRXNWpkR2x2YmloRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVabElEMGdSU3dnVUM1elpYUkJibWx0WVhScGIyNU1iMjl3S0VVcExDQkZJRDA5UFNCdWRXeHNJRDhnVW5RdWMzUnZjQ2dwSURvZ1VuUXVjM1JoY25Rb0tUc0tJQ0FnSUNBZ0lDQjlMQ0JRTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5ObGMzTnBiMjV6ZEdGeWRDSXNJSFIwS1N3Z1VDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnpaWE56YVc5dVpXNWtJaXdnZEc0cExDQjBhR2x6TG5KbGJtUmxjaUE5SUdaMWJtTjBhVzl1S0VVc0lFNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTRnSVQwOUlIWnZhV1FnTUNBbUppQk9MbWx6UTJGdFpYSmhJQ0U5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNXlaVzVrWlhJNklHTmhiV1Z5WVNCcGN5QnViM1FnWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWRWhTUlVVdVEyRnRaWEpoTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDVJRDA5UFNBaE1Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0JGTG0xaGRISnBlRmR2Y214a1FYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdSUzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCT0xuQmhjbVZ1ZENBOVBUMGdiblZzYkNBbUppQk9MbTFoZEhKcGVGZHZjbXhrUVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1RpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BMQ0JRTG1WdVlXSnNaV1FnUFQwOUlDRXdJQ1ltSUZBdWFYTlFjbVZ6Wlc1MGFXNW5JRDA5UFNBaE1DQW1KaUFvVUM1allXMWxjbUZCZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCUUxuVndaR0YwWlVOaGJXVnlZU2hPS1N3Z1RpQTlJRkF1WjJWMFEyRnRaWEpoS0NrcExDQkZMbWx6VTJObGJtVWdQVDA5SUNFd0lDWW1JRVV1YjI1Q1pXWnZjbVZTWlc1a1pYSW9lQ3dnUlN3Z1Rpd2dVaWtzSUdjZ1BTQjBaUzVuWlhRb1JTd2dkaTVzWlc1bmRHZ3BMQ0JuTG1sdWFYUW9LU3dnZGk1d2RYTm9LR2NwTENCRlpTNXRkV3gwYVhCc2VVMWhkSEpwWTJWektFNHVjSEp2YW1WamRHbHZiazFoZEhKcGVDd2dUaTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlVwTENCb1pTNXpaWFJHY205dFVISnZhbVZqZEdsdmJrMWhkSEpwZUNoRlpTa3NJRjlsSUQwZ2RHaHBjeTVzYjJOaGJFTnNhWEJ3YVc1blJXNWhZbXhsWkN3Z1ptVWdQU0JOWlM1cGJtbDBLSFJvYVhNdVkyeHBjSEJwYm1kUWJHRnVaWE1zSUY5bEtTd2dYeUE5SUdvdVoyVjBLRVVzSUhBdWJHVnVaM1JvS1N3Z1h5NXBibWwwS0Nrc0lIQXVjSFZ6YUNoZktTd2dhbU1vUlN3Z1Rpd2dNQ3dnZUM1emIzSjBUMkpxWldOMGN5a3NJRjh1Wm1sdWFYTm9LQ2tzSUhndWMyOXlkRTlpYW1WamRITWdQVDA5SUNFd0lDWW1JRjh1YzI5eWRDaHVaU3dnVnlrc0lIUm9hWE11YVc1bWJ5NXlaVzVrWlhJdVpuSmhiV1VyS3l3Z1ptVWdQVDA5SUNFd0lDWW1JRTFsTG1KbFoybHVVMmhoWkc5M2N5Z3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWaUE5SUdjdWMzUmhkR1V1YzJoaFpHOTNjMEZ5Y21GNU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NtVXVjbVZ1WkdWeUtGWXNJRVVzSUU0cExDQm1aU0E5UFQwZ0lUQWdKaVlnVFdVdVpXNWtVMmhoWkc5M2N5Z3BMQ0IwYUdsekxtbHVabTh1WVhWMGIxSmxjMlYwSUQwOVBTQWhNQ0FtSmlCMGFHbHpMbWx1Wm04dWNtVnpaWFFvS1N3Z1pHVXVjbVZ1WkdWeUtGOHNJRVVwTENCbkxuTmxkSFZ3VEdsbmFIUnpLSGd1WDNWelpVeGxaMkZqZVV4cFoyaDBjeWtzSUU0dWFYTkJjbkpoZVVOaGJXVnlZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JPTG1OaGJXVnlZWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3NnUFNBd0xDQjRaU0E5SUVZdWJHVnVaM1JvT3lCcklEd2dlR1U3SUdzckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRmxJRDBnUmx0clhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkNoZkxDQkZMQ0JCWlN3Z1FXVXVkbWxsZDNCdmNuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnWld3b1h5d2dSU3dnVGlrN0NpQWdJQ0FnSUNBZ0lDQWdJRklnSVQwOUlHNTFiR3dnSmlZZ0tIbGxMblZ3WkdGMFpVMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwS0ZJcExDQjVaUzUxY0dSaGRHVlNaVzVrWlhKVVlYSm5aWFJOYVhCdFlYQW9VaWtwTENCRkxtbHpVMk5sYm1VZ1BUMDlJQ0V3SUNZbUlFVXViMjVCWm5SbGNsSmxibVJsY2loNExDQkZMQ0JPS1N3Z1QyVXVjbVZ6WlhSRVpXWmhkV3gwVTNSaGRHVW9LU3dnU1NBOUlDMHhMQ0JOSUQwZ2JuVnNiQ3dnZGk1d2IzQW9LU3dnZGk1c1pXNW5kR2dnUGlBd0lEOGdaeUE5SUhaYmRpNXNaVzVuZEdnZ0xTQXhYU0E2SUdjZ1BTQnVkV3hzTENCd0xuQnZjQ2dwTENCd0xteGxibWQwYUNBK0lEQWdQeUJmSUQwZ2NGdHdMbXhsYm1kMGFDQXRJREZkSURvZ1h5QTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnFZeWhGTENCT0xDQldMQ0JHS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoRkxuWnBjMmxpYkdVZ1BUMDlJQ0V4S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hGTG14aGVXVnljeTUwWlhOMEtFNHViR0Y1WlhKektTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VVdWFYTkhjbTkxY0NrZ1ZpQTlJRVV1Y21WdVpHVnlUM0prWlhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoRkxtbHpURTlFS1NCRkxtRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JRVV1ZFhCa1lYUmxLRTRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvUlM1cGMweHBaMmgwS1NCbkxuQjFjMmhNYVdkb2RDaEZLU3dnUlM1allYTjBVMmhoWkc5M0lDWW1JR2N1Y0hWemFGTm9ZV1J2ZHloRktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tFVXVhWE5UY0hKcGRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JVVV1Wm5KMWMzUjFiVU4xYkd4bFpDQjhmQ0JvWlM1cGJuUmxjbk5sWTNSelUzQnlhWFJsS0VVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFWWdKaVlnV1dVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRVV1YldGMGNtbDRWMjl5YkdRcExtRndjR3g1VFdGMGNtbDROQ2hGWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJaU0E5SUZNdWRYQmtZWFJsS0VVcExDQlZaU0E5SUVVdWJXRjBaWEpwWVd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZWbExuWnBjMmxpYkdVZ0ppWWdYeTV3ZFhOb0tFVXNJRUZsTENCVlpTd2dWaXdnV1dVdWVpd2diblZzYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2dvUlM1cGMwMWxjMmdnZkh3Z1JTNXBjMHhwYm1VZ2ZId2dSUzVwYzFCdmFXNTBjeWtnSmlZZ0tDRkZMbVp5ZFhOMGRXMURkV3hzWldRZ2ZId2dhR1V1YVc1MFpYSnpaV04wYzA5aWFtVmpkQ2hGS1NrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FXVWdQU0JUTG5Wd1pHRjBaU2hGS1N3Z1ZXVWdQU0JGTG0xaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hHSUNZbUlDaEZMbUp2ZFc1a2FXNW5VM0JvWlhKbElDRTlQU0IyYjJsa0lEQWdQeUFvUlM1aWIzVnVaR2x1WjFOd2FHVnlaU0E5UFQwZ2JuVnNiQ0FtSmlCRkxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCWlpTNWpiM0I1S0VVdVltOTFibVJwYm1kVGNHaGxjbVV1WTJWdWRHVnlLU2tnT2lBb1FXVXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdRV1V1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa3NJRmxsTG1OdmNIa29RV1V1WW05MWJtUnBibWRUY0dobGNtVXVZMlZ1ZEdWeUtTa3NJRmxsTG1Gd2NHeDVUV0YwY21sNE5DaEZMbTFoZEhKcGVGZHZjbXhrS1M1aGNIQnNlVTFoZEhKcGVEUW9SV1VwS1N3Z1FYSnlZWGt1YVhOQmNuSmhlU2hWWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVJsSUQwZ1FXVXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZkbElEMGdNQ3dnVUdVZ1BTQkVaUzVzWlc1bmRHZzdJRmRsSUR3Z1VHVTdJRmRsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZabElEMGdSR1ZiVjJWZExDQmhkQ0E5SUZWbFcxWmxMbTFoZEdWeWFXRnNTVzVrWlhoZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWFFnSmlZZ1lYUXVkbWx6YVdKc1pTQW1KaUJmTG5CMWMyZ29SU3dnUVdVc0lHRjBMQ0JXTENCWlpTNTZMQ0JXWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1ZXVXVkbWx6YVdKc1pTQW1KaUJmTG5CMWMyZ29SU3dnUVdVc0lGVmxMQ0JXTENCWlpTNTZMQ0J1ZFd4c0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUdVZ1BTQkZMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVGbElEMGdNQ3dnVldVZ1BTQjRaUzVzWlc1bmRHZzdJRUZsSUR3Z1ZXVTdJRUZsS3lzcGFtTW9lR1ZiUVdWZExDQk9MQ0JXTENCR0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaV3dvUlN3Z1Rpd2dWaXdnUmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2F5QTlJRVV1YjNCaGNYVmxMQ0I0WlNBOUlFVXVkSEpoYm5OdGFYTnphWFpsTENCQlpTQTlJRVV1ZEhKaGJuTndZWEpsYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR2N1YzJWMGRYQk1hV2RvZEhOV2FXVjNLRllwTENCbVpTQTlQVDBnSVRBZ0ppWWdUV1V1YzJWMFIyeHZZbUZzVTNSaGRHVW9lQzVqYkdsd2NHbHVaMUJzWVc1bGN5d2dWaWtzSUhobExteGxibWQwYUNBK0lEQWdKaVlnVDJRb2F5d2dlR1VzSUU0c0lGWXBMQ0JHSUNZbUlFb3VkbWxsZDNCdmNuUW9WQzVqYjNCNUtFWXBLU3dnYXk1c1pXNW5kR2dnUGlBd0lDWW1JR3R6S0dzc0lFNHNJRllwTENCNFpTNXNaVzVuZEdnZ1BpQXdJQ1ltSUd0ektIaGxMQ0JPTENCV0tTd2dRV1V1YkdWdVozUm9JRDRnTUNBbUppQnJjeWhCWlN3Z1Rpd2dWaWtzSUVvdVluVm1abVZ5Y3k1a1pYQjBhQzV6WlhSVVpYTjBLQ0V3S1N3Z1NpNWlkV1ptWlhKekxtUmxjSFJvTG5ObGRFMWhjMnNvSVRBcExDQktMbUoxWm1abGNuTXVZMjlzYjNJdWMyVjBUV0Z6YXlnaE1Da3NJRW91YzJWMFVHOXNlV2R2Yms5bVpuTmxkQ2doTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlFOWtLRVVzSUU0c0lGWXNJRVlwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdzZ1BTQnBaUzVwYzFkbFlrZE1NanNLSUNBZ0lDQWdJQ0FnSUNBZ2QyVWdQVDA5SUc1MWJHd2dKaVlnS0hkbElEMGdibVYzSUhGMEtERXNJREVzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJsVFdsd2JXRndjem9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJZTG1oaGN5Z2lSVmhVWDJOdmJHOXlYMkoxWm1abGNsOW9ZV3htWDJac2IyRjBJaWtnUHlCVWN5QTZJRTl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldsdVJtbHNkR1Z5T2lCc2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmhiWEJzWlhNNklHc2dQeUEwSURvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5S1Nrc0lIZ3VaMlYwUkhKaGQybHVaMEoxWm1abGNsTnBlbVVvVkdVcExDQnJJRDhnZDJVdWMyVjBVMmw2WlNoVVpTNTRMQ0JVWlM1NUtTQTZJSGRsTG5ObGRGTnBlbVVvVjNJb1ZHVXVlQ2tzSUZkeUtGUmxMbmtwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhobElEMGdlQzVuWlhSU1pXNWtaWEpVWVhKblpYUW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2VDNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2QyVXBMQ0I0TG1kbGRFTnNaV0Z5UTI5c2IzSW9KQ2tzSUZVZ1BTQjRMbWRsZEVOc1pXRnlRV3h3YUdFb0tTd2dWU0E4SURFZ0ppWWdlQzV6WlhSRGJHVmhja052Ykc5eUtERTJOemMzTWpFMUxDQXVOU2tzSUhndVkyeGxZWElvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVGbElEMGdlQzUwYjI1bFRXRndjR2x1WnpzS0lDQWdJQ0FnSUNBZ0lDQWdlQzUwYjI1bFRXRndjR2x1WnlBOUlFNXVMQ0JyY3loRkxDQldMQ0JHS1N3Z2VXVXVkWEJrWVhSbFRYVnNkR2x6WVcxd2JHVlNaVzVrWlhKVVlYSm5aWFFvZDJVcExDQjVaUzUxY0dSaGRHVlNaVzVrWlhKVVlYSm5aWFJOYVhCdFlYQW9kMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVldVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCRVpTQTlJREFzSUZkbElEMGdUaTVzWlc1bmRHZzdJRVJsSUR3Z1YyVTdJRVJsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkJsSUQwZ1RsdEVaVjBzSUZabElEMGdVR1V1YjJKcVpXTjBMQ0JoZENBOUlGQmxMbWRsYjIxbGRISjVMQ0JzZENBOUlGQmxMbTFoZEdWeWFXRnNMQ0JJZENBOUlGQmxMbWR5YjNWd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3gwTG5OcFpHVWdQVDA5SUdkdUlDWW1JRlpsTG14aGVXVnljeTUwWlhOMEtFWXViR0Y1WlhKektTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhiaUE5SUd4MExuTnBaR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JIUXVjMmxrWlNBOUlFWjBMQ0JzZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGJDaFdaU3dnVml3Z1Jpd2dZWFFzSUd4MExDQklkQ2tzSUd4MExuTnBaR1VnUFNCaGJpd2diSFF1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnVldVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JWWlNBOVBUMGdJVEFnSmlZZ0tIbGxMblZ3WkdGMFpVMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwS0hkbEtTd2dlV1V1ZFhCa1lYUmxVbVZ1WkdWeVZHRnlaMlYwVFdsd2JXRndLSGRsS1Nrc0lIZ3VjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIaGxLU3dnZUM1elpYUkRiR1ZoY2tOdmJHOXlLQ1FzSUZVcExDQjRMblJ2Ym1WTllYQndhVzVuSUQwZ1FXVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR3R6S0VVc0lFNHNJRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQk9MbWx6VTJObGJtVWdQVDA5SUNFd0lEOGdUaTV2ZG1WeWNtbGtaVTFoZEdWeWFXRnNJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JySUQwZ01Dd2dlR1VnUFNCRkxteGxibWQwYURzZ2F5QThJSGhsT3lCckt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVGbElEMGdSVnRyWFN3Z1ZXVWdQU0JCWlM1dlltcGxZM1FzSUVSbElEMGdRV1V1WjJWdmJXVjBjbmtzSUZkbElEMGdSaUE5UFQwZ2JuVnNiQ0EvSUVGbExtMWhkR1Z5YVdGc0lEb2dSaXdnVUdVZ1BTQkJaUzVuY205MWNEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGVmxMbXhoZVdWeWN5NTBaWE4wS0ZZdWJHRjVaWEp6S1NBbUppQjBiQ2hWWlN3Z1Rpd2dWaXdnUkdVc0lGZGxMQ0JRWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZEd3b1JTd2dUaXdnVml3Z1Jpd2dheXdnZUdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUlM1dmJrSmxabTl5WlZKbGJtUmxjaWg0TENCT0xDQldMQ0JHTENCckxDQjRaU2tzSUVVdWJXOWtaV3hXYVdWM1RXRjBjbWw0TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vVmk1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVc0lFVXViV0YwY21sNFYyOXliR1FwTENCRkxtNXZjbTFoYkUxaGRISnBlQzVuWlhST2IzSnRZV3hOWVhSeWFYZ29SUzV0YjJSbGJGWnBaWGROWVhSeWFYZ3BMQ0JyTG05dVFtVm1iM0psVW1WdVpHVnlLSGdzSUU0c0lGWXNJRVlzSUVVc0lIaGxLU3dnYXk1MGNtRnVjM0JoY21WdWRDQTlQVDBnSVRBZ0ppWWdheTV6YVdSbElEMDlQU0JuYmlBbUppQnJMbVp2Y21ObFUybHVaMnhsVUdGemN5QTlQVDBnSVRFZ1B5QW9heTV6YVdSbElEMGdSblFzSUdzdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2VDNXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9WaXdnVGl3Z1Jpd2dheXdnUlN3Z2VHVXBMQ0JyTG5OcFpHVWdQU0JDYml3Z2F5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjRMbkpsYm1SbGNrSjFabVpsY2tScGNtVmpkQ2hXTENCT0xDQkdMQ0JyTENCRkxDQjRaU2tzSUdzdWMybGtaU0E5SUdkdUtTQTZJSGd1Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wS0ZZc0lFNHNJRVlzSUdzc0lFVXNJSGhsS1N3Z1JTNXZia0ZtZEdWeVVtVnVaR1Z5S0hnc0lFNHNJRllzSUVZc0lHc3NJSGhsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1NITW9SU3dnVGl3Z1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCT0xtbHpVMk5sYm1VZ0lUMDlJQ0V3SUNZbUlDaE9JRDBnYVhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRzFsTG1kbGRDaEZLU3dnYXlBOUlHY3VjM1JoZEdVdWJHbG5hSFJ6TENCNFpTQTlJR2N1YzNSaGRHVXVjMmhoWkc5M2MwRnljbUY1TENCQlpTQTlJR3N1YzNSaGRHVXVkbVZ5YzJsdmJpd2dWV1VnUFNCQ0xtZGxkRkJoY21GdFpYUmxjbk1vUlN3Z2F5NXpkR0YwWlN3Z2VHVXNJRTRzSUZZcExDQkVaU0E5SUVJdVoyVjBVSEp2WjNKaGJVTmhZMmhsUzJWNUtGVmxLU3dnVjJVZ1BTQkdMbkJ5YjJkeVlXMXpPd29nSUNBZ0lDQWdJQ0FnSUNCR0xtVnVkbWx5YjI1dFpXNTBJRDBnUlM1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJRDhnVGk1bGJuWnBjbTl1YldWdWRDQTZJRzUxYkd3c0lFWXVabTluSUQwZ1RpNW1iMmNzSUVZdVpXNTJUV0Z3SUQwZ0tFVXVhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNBL0lIRmxJRG9nVG1VcExtZGxkQ2hGTG1WdWRrMWhjQ0I4ZkNCR0xtVnVkbWx5YjI1dFpXNTBLU3dnVjJVZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2RXVXBMQ0JYWlNBOUlHNWxkeUJOWVhBc0lFWXVjSEp2WjNKaGJYTWdQU0JYWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUVpTQTlJRmRsTG1kbGRDaEVaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hRWlNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUmk1amRYSnlaVzUwVUhKdlozSmhiU0E5UFQwZ1VHVWdKaVlnUmk1c2FXZG9kSE5UZEdGMFpWWmxjbk5wYjI0Z1BUMDlJRUZsS1NCeVpYUjFjbTRnYm13b1JTd2dWV1VwTENCUVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJRlZsTG5WdWFXWnZjbTF6SUQwZ1FpNW5aWFJWYm1sbWIzSnRjeWhGS1N3Z1JTNXZia0oxYVd4a0tGWXNJRlZsTENCNEtTd2dSUzV2YmtKbFptOXlaVU52YlhCcGJHVW9WV1VzSUhncExDQlFaU0E5SUVJdVlXTnhkV2x5WlZCeWIyZHlZVzBvVldVc0lFUmxLU3dnVjJVdWMyVjBLRVJsTENCUVpTa3NJRVl1ZFc1cFptOXliWE1nUFNCVlpTNTFibWxtYjNKdGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGWmxJRDBnUmk1MWJtbG1iM0p0Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdLQ0ZGTG1selUyaGhaR1Z5VFdGMFpYSnBZV3dnSmlZZ0lVVXVhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0I4ZkNCRkxtTnNhWEJ3YVc1bklEMDlQU0FoTUNrZ0ppWWdLRlpsTG1Oc2FYQndhVzVuVUd4aGJtVnpJRDBnVFdVdWRXNXBabTl5YlNrc0lHNXNLRVVzSUZWbEtTd2dSaTV1WldWa2MweHBaMmgwY3lBOUlIcGtLRVVwTENCR0xteHBaMmgwYzFOMFlYUmxWbVZ5YzJsdmJpQTlJRUZsTENCR0xtNWxaV1J6VEdsbmFIUnpJQ1ltSUNoV1pTNWhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNpNTJZV3gxWlNBOUlHc3VjM1JoZEdVdVlXMWlhV1Z1ZEN3Z1ZtVXViR2xuYUhSUWNtOWlaUzUyWVd4MVpTQTlJR3N1YzNSaGRHVXVjSEp2WW1Vc0lGWmxMbVJwY21WamRHbHZibUZzVEdsbmFIUnpMblpoYkhWbElEMGdheTV6ZEdGMFpTNWthWEpsWTNScGIyNWhiQ3dnVm1VdVpHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM011ZG1Gc2RXVWdQU0JyTG5OMFlYUmxMbVJwY21WamRHbHZibUZzVTJoaFpHOTNMQ0JXWlM1emNHOTBUR2xuYUhSekxuWmhiSFZsSUQwZ2F5NXpkR0YwWlM1emNHOTBMQ0JXWlM1emNHOTBUR2xuYUhSVGFHRmtiM2R6TG5aaGJIVmxJRDBnYXk1emRHRjBaUzV6Y0c5MFUyaGhaRzkzTENCV1pTNXlaV04wUVhKbFlVeHBaMmgwY3k1MllXeDFaU0E5SUdzdWMzUmhkR1V1Y21WamRFRnlaV0VzSUZabExteDBZMTh4TG5aaGJIVmxJRDBnYXk1emRHRjBaUzV5WldOMFFYSmxZVXhVUXpFc0lGWmxMbXgwWTE4eUxuWmhiSFZsSUQwZ2F5NXpkR0YwWlM1eVpXTjBRWEpsWVV4VVF6SXNJRlpsTG5CdmFXNTBUR2xuYUhSekxuWmhiSFZsSUQwZ2F5NXpkR0YwWlM1d2IybHVkQ3dnVm1VdWNHOXBiblJNYVdkb2RGTm9ZV1J2ZDNNdWRtRnNkV1VnUFNCckxuTjBZWFJsTG5CdmFXNTBVMmhoWkc5M0xDQldaUzVvWlcxcGMzQm9aWEpsVEdsbmFIUnpMblpoYkhWbElEMGdheTV6ZEdGMFpTNW9aVzFwTENCV1pTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjQzUyWVd4MVpTQTlJR3N1YzNSaGRHVXVaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEFzSUZabExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0TG5aaGJIVmxJRDBnYXk1emRHRjBaUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoZEhKcGVDd2dWbVV1YzNCdmRGTm9ZV1J2ZDAxaGNDNTJZV3gxWlNBOUlHc3VjM1JoZEdVdWMzQnZkRk5vWVdSdmQwMWhjQ3dnVm1VdWMzQnZkRXhwWjJoMFRXRjBjbWw0TG5aaGJIVmxJRDBnYXk1emRHRjBaUzV6Y0c5MFRHbG5hSFJOWVhSeWFYZ3NJRlpsTG5Od2IzUk1hV2RvZEUxaGNDNTJZV3gxWlNBOUlHc3VjM1JoZEdVdWMzQnZkRXhwWjJoMFRXRndMQ0JXWlM1d2IybHVkRk5vWVdSdmQwMWhjQzUyWVd4MVpTQTlJR3N1YzNSaGRHVXVjRzlwYm5SVGFHRmtiM2ROWVhBc0lGWmxMbkJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRMblpoYkhWbElEMGdheTV6ZEdGMFpTNXdiMmx1ZEZOb1lXUnZkMDFoZEhKcGVDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhkQ0E5SUZCbExtZGxkRlZ1YVdadmNtMXpLQ2tzSUd4MElEMGdjV2t1YzJWeFYybDBhRlpoYkhWbEtHRjBMbk5sY1N3Z1ZtVXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUmk1amRYSnlaVzUwVUhKdlozSmhiU0E5SUZCbExDQkdMblZ1YVdadmNtMXpUR2x6ZENBOUlHeDBMQ0JRWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2Jtd29SU3dnVGlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZpQTlJRzFsTG1kbGRDaEZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZpNXZkWFJ3ZFhSRGIyeHZjbE53WVdObElEMGdUaTV2ZFhSd2RYUkRiMnh2Y2xOd1lXTmxMQ0JXTG1sdWMzUmhibU5wYm1jZ1BTQk9MbWx1YzNSaGJtTnBibWNzSUZZdWFXNXpkR0Z1WTJsdVowTnZiRzl5SUQwZ1RpNXBibk4wWVc1amFXNW5RMjlzYjNJc0lGWXVjMnRwYm01cGJtY2dQU0JPTG5OcmFXNXVhVzVuTENCV0xtMXZjbkJvVkdGeVoyVjBjeUE5SUU0dWJXOXljR2hVWVhKblpYUnpMQ0JXTG0xdmNuQm9UbTl5YldGc2N5QTlJRTR1Ylc5eWNHaE9iM0p0WVd4ekxDQldMbTF2Y25Cb1EyOXNiM0p6SUQwZ1RpNXRiM0p3YUVOdmJHOXljeXdnVmk1dGIzSndhRlJoY21kbGRITkRiM1Z1ZENBOUlFNHViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUXNJRll1Ym5WdFEyeHBjSEJwYm1kUWJHRnVaWE1nUFNCT0xtNTFiVU5zYVhCd2FXNW5VR3hoYm1WekxDQldMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJRTR1Ym5WdFEyeHBjRWx1ZEdWeWMyVmpkR2x2Yml3Z1ZpNTJaWEowWlhoQmJIQm9ZWE1nUFNCT0xuWmxjblJsZUVGc2NHaGhjeXdnVmk1MlpYSjBaWGhVWVc1blpXNTBjeUE5SUU0dWRtVnlkR1Y0VkdGdVoyVnVkSE1zSUZZdWRHOXVaVTFoY0hCcGJtY2dQU0JPTG5SdmJtVk5ZWEJ3YVc1bk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQkdaQ2hGTENCT0xDQldMQ0JHTENCcktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUU0dWFYTlRZMlZ1WlNBaFBUMGdJVEFnSmlZZ0tFNGdQU0JwZENrc0lIbGxMbkpsYzJWMFZHVjRkSFZ5WlZWdWFYUnpLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0WlNBOUlFNHVabTluTENCQlpTQTlJRVl1YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQS9JRTR1Wlc1MmFYSnZibTFsYm5RZ09pQnVkV3hzTENCVlpTQTlJRklnUFQwOUlHNTFiR3dnUHlCNExtOTFkSEIxZEVOdmJHOXlVM0JoWTJVZ09pQlNMbWx6V0ZKU1pXNWtaWEpVWVhKblpYUWdQVDA5SUNFd0lEOGdVaTUwWlhoMGRYSmxMbU52Ykc5eVUzQmhZMlVnT2lCTmJpd2dSR1VnUFNBb1JpNXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUQ4Z2NXVWdPaUJPWlNrdVoyVjBLRVl1Wlc1MlRXRndJSHg4SUVGbEtTd2dWMlVnUFNCR0xuWmxjblJsZUVOdmJHOXljeUE5UFQwZ0lUQWdKaVlnSVNGV0xtRjBkSEpwWW5WMFpYTXVZMjlzYjNJZ0ppWWdWaTVoZEhSeWFXSjFkR1Z6TG1OdmJHOXlMbWwwWlcxVGFYcGxJRDA5UFNBMExDQlFaU0E5SUNFaFZpNWhkSFJ5YVdKMWRHVnpMblJoYm1kbGJuUWdKaVlnS0NFaFJpNXViM0p0WVd4TllYQWdmSHdnUmk1aGJtbHpiM1J5YjNCNUlENGdNQ2tzSUZabElEMGdJU0ZXTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnWVhRZ1BTQWhJVll1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDd2diSFFnUFNBaElWWXViVzl5Y0doQmRIUnlhV0oxZEdWekxtTnZiRzl5TENCSWRDQTlJRTV1T3dvZ0lDQWdJQ0FnSUNBZ0lDQkdMblJ2Ym1WTllYQndaV1FnSmlZZ0tGSWdQVDA5SUc1MWJHd2dmSHdnVWk1cGMxaFNVbVZ1WkdWeVZHRnlaMlYwSUQwOVBTQWhNQ2tnSmlZZ0tFaDBJRDBnZUM1MGIyNWxUV0Z3Y0dsdVp5azdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhiaUE5SUZZdWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1SUh4OElGWXViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkNCOGZDQldMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NWpiMnh2Y2l3Z2RYUWdQU0JoYmlBaFBUMGdkbTlwWkNBd0lEOGdZVzR1YkdWdVozUm9JRG9nTUN3Z1dHVWdQU0J0WlM1blpYUW9SaWtzSUZOaElEMGdaeTV6ZEdGMFpTNXNhV2RvZEhNN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobVpTQTlQVDBnSVRBZ0ppWWdLRjlsSUQwOVBTQWhNQ0I4ZkNCRklDRTlQU0JOS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUowSUQwZ1JTQTlQVDBnVFNBbUppQkdMbWxrSUQwOVBTQkpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV1V1YzJWMFUzUmhkR1VvUml3Z1JTd2dRblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtkQ0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0JHTG5abGNuTnBiMjRnUFQwOUlGaGxMbDlmZG1WeWMybHZiaUEvSUNoWVpTNXVaV1ZrYzB4cFoyaDBjeUFtSmlCWVpTNXNhV2RvZEhOVGRHRjBaVlpsY25OcGIyNGdJVDA5SUZOaExuTjBZWFJsTG5abGNuTnBiMjRnZkh3Z1dHVXViM1YwY0hWMFEyOXNiM0pUY0dGalpTQWhQVDBnVldVZ2ZId2dheTVwYzBsdWMzUmhibU5sWkUxbGMyZ2dKaVlnV0dVdWFXNXpkR0Z1WTJsdVp5QTlQVDBnSVRFZ2ZId2dJV3N1YVhOSmJuTjBZVzVqWldSTlpYTm9JQ1ltSUZobExtbHVjM1JoYm1OcGJtY2dQVDA5SUNFd0lIeDhJR3N1YVhOVGEybHVibVZrVFdWemFDQW1KaUJZWlM1emEybHVibWx1WnlBOVBUMGdJVEVnZkh3Z0lXc3VhWE5UYTJsdWJtVmtUV1Z6YUNBbUppQllaUzV6YTJsdWJtbHVaeUE5UFQwZ0lUQWdmSHdnYXk1cGMwbHVjM1JoYm1ObFpFMWxjMmdnSmlZZ1dHVXVhVzV6ZEdGdVkybHVaME52Ykc5eUlEMDlQU0FoTUNBbUppQnJMbWx1YzNSaGJtTmxRMjlzYjNJZ1BUMDlJRzUxYkd3Z2ZId2dheTVwYzBsdWMzUmhibU5sWkUxbGMyZ2dKaVlnV0dVdWFXNXpkR0Z1WTJsdVowTnZiRzl5SUQwOVBTQWhNU0FtSmlCckxtbHVjM1JoYm1ObFEyOXNiM0lnSVQwOUlHNTFiR3dnZkh3Z1dHVXVaVzUyVFdGd0lDRTlQU0JFWlNCOGZDQkdMbVp2WnlBOVBUMGdJVEFnSmlZZ1dHVXVabTluSUNFOVBTQjRaU0I4ZkNCWVpTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNoWVpTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QWhQVDBnVFdVdWJuVnRVR3hoYm1WeklIeDhJRmhsTG01MWJVbHVkR1Z5YzJWamRHbHZiaUFoUFQwZ1RXVXViblZ0U1c1MFpYSnpaV04wYVc5dUtTQjhmQ0JZWlM1MlpYSjBaWGhCYkhCb1lYTWdJVDA5SUZkbElIeDhJRmhsTG5abGNuUmxlRlJoYm1kbGJuUnpJQ0U5UFNCUVpTQjhmQ0JZWlM1dGIzSndhRlJoY21kbGRITWdJVDA5SUZabElIeDhJRmhsTG0xdmNuQm9UbTl5YldGc2N5QWhQVDBnWVhRZ2ZId2dXR1V1Ylc5eWNHaERiMnh2Y25NZ0lUMDlJR3gwSUh4OElGaGxMblJ2Ym1WTllYQndhVzVuSUNFOVBTQklkQ0I4ZkNCcFpTNXBjMWRsWWtkTU1pQTlQVDBnSVRBZ0ppWWdXR1V1Ylc5eWNHaFVZWEpuWlhSelEyOTFiblFnSVQwOUlIVjBLU0FtSmlBb1pIUWdQU0FoTUNrZ09pQW9aSFFnUFNBaE1Dd2dXR1V1WDE5MlpYSnphVzl1SUQwZ1JpNTJaWEp6YVc5dUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFaHVJRDBnV0dVdVkzVnljbVZ1ZEZCeWIyZHlZVzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUjBJRDA5UFNBaE1DQW1KaUFvU0c0Z1BTQkljeWhHTENCT0xDQnJLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwYkNBOUlDRXhMQ0J2Y3lBOUlDRXhMQ0JpWVNBOUlDRXhMQ0JEZENBOUlFaHVMbWRsZEZWdWFXWnZjbTF6S0Nrc0lFZHVJRDBnV0dVdWRXNXBabTl5YlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoS0xuVnpaVkJ5YjJkeVlXMG9TRzR1Y0hKdlozSmhiU2tnSmlZZ0tHbHNJRDBnSVRBc0lHOXpJRDBnSVRBc0lHSmhJRDBnSVRBcExDQkdMbWxrSUNFOVBTQkpJQ1ltSUNoSklEMGdSaTVwWkN3Z2IzTWdQU0FoTUNrc0lHbHNJSHg4SUUwZ0lUMDlJRVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVOMExuTmxkRlpoYkhWbEtFd3NJQ0p3Y205cVpXTjBhVzl1VFdGMGNtbDRJaXdnUlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1N3Z1EzUXVjMlYwVm1Gc2RXVW9UQ3dnSW5acFpYZE5ZWFJ5YVhnaUxDQkZMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FuUWdQU0JEZEM1dFlYQXVZMkZ0WlhKaFVHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ2RDQWhQVDBnZG05cFpDQXdJQ1ltSUVKMExuTmxkRlpoYkhWbEtFd3NJRmxsTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaEZMbTFoZEhKcGVGZHZjbXhrS1Nrc0lHbGxMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ0ppWWdRM1F1YzJWMFZtRnNkV1VvVEN3Z0lteHZaMFJsY0hSb1FuVm1Sa01pTENBeUlDOGdLRTFoZEdndWJHOW5LRVV1Wm1GeUlDc2dNU2tnTHlCTllYUm9Ma3hPTWlrcExDQW9SaTVwYzAxbGMyaFFhRzl1WjAxaGRHVnlhV0ZzSUh4OElFWXVhWE5OWlhOb1ZHOXZiazFoZEdWeWFXRnNJSHg4SUVZdWFYTk5aWE5vVEdGdFltVnlkRTFoZEdWeWFXRnNJSHg4SUVZdWFYTk5aWE5vUW1GemFXTk5ZWFJsY21saGJDQjhmQ0JHTG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dmSHdnUmk1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzS1NBbUppQkRkQzV6WlhSV1lXeDFaU2hNTENBaWFYTlBjblJvYjJkeVlYQm9hV01pTENCRkxtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJRDA5UFNBaE1Da3NJRTBnSVQwOUlFVWdKaVlnS0UwZ1BTQkZMQ0J2Y3lBOUlDRXdMQ0JpWVNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2F5NXBjMU5yYVc1dVpXUk5aWE5vS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRGRDNXpaWFJQY0hScGIyNWhiQ2hNTENCckxDQWlZbWx1WkUxaGRISnBlQ0lwTENCRGRDNXpaWFJQY0hScGIyNWhiQ2hNTENCckxDQWlZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQ2RDQTlJR3N1YzJ0bGJHVjBiMjQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDZENBbUppQW9hV1V1Wm14dllYUldaWEowWlhoVVpYaDBkWEpsY3lBL0lDaENkQzVpYjI1bFZHVjRkSFZ5WlNBOVBUMGdiblZzYkNBbUppQkNkQzVqYjIxd2RYUmxRbTl1WlZSbGVIUjFjbVVvS1N3Z1EzUXVjMlYwVm1Gc2RXVW9UQ3dnSW1KdmJtVlVaWGgwZFhKbElpd2dRblF1WW05dVpWUmxlSFIxY21Vc0lIbGxLU3dnUTNRdWMyVjBWbUZzZFdVb1RDd2dJbUp2Ym1WVVpYaDBkWEpsVTJsNlpTSXNJRUowTG1KdmJtVlVaWGgwZFhKbFUybDZaU2twSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVGEybHVibVZrVFdWemFDQmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnVjJWaVIwd2dNaTRnVjJsMGFDQlhaV0pIVENBeElFOUZVMTkwWlhoMGRYSmxYMlpzYjJGMElHRnVaQ0IyWlhKMFpYZ2dkR1Y0ZEhWeVpYTWdjM1Z3Y0c5eWRDQnBjeUJ5WlhGMWFYSmxaQzRpS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVZoSUQwZ1ZpNXRiM0p3YUVGMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnb1JXRXVjRzl6YVhScGIyNGdJVDA5SUhadmFXUWdNQ0I4ZkNCRllTNXViM0p0WVd3Z0lUMDlJSFp2YVdRZ01DQjhmQ0JGWVM1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHbGxMbWx6VjJWaVIwd3lJRDA5UFNBaE1Da2dKaVlnVEdVdWRYQmtZWFJsS0dzc0lGWXNJRWh1S1N3Z0tHOXpJSHg4SUZobExuSmxZMlZwZG1WVGFHRmtiM2NnSVQwOUlHc3VjbVZqWldsMlpWTm9ZV1J2ZHlrZ0ppWWdLRmhsTG5KbFkyVnBkbVZUYUdGa2IzY2dQU0JyTG5KbFkyVnBkbVZUYUdGa2IzY3NJRU4wTG5ObGRGWmhiSFZsS0V3c0lDSnlaV05sYVhabFUyaGhaRzkzSWl3Z2F5NXlaV05sYVhabFUyaGhaRzkzS1Nrc0lFWXVhWE5OWlhOb1IyOTFjbUYxWkUxaGRHVnlhV0ZzSUNZbUlFWXVaVzUyVFdGd0lDRTlQU0J1ZFd4c0lDWW1JQ2hIYmk1bGJuWk5ZWEF1ZG1Gc2RXVWdQU0JFWlN3Z1IyNHVabXhwY0VWdWRrMWhjQzUyWVd4MVpTQTlJRVJsTG1selEzVmlaVlJsZUhSMWNtVWdKaVlnUkdVdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDA5UFNBaE1TQS9JQzB4SURvZ01Ta3NJRzl6SUNZbUlDaERkQzV6WlhSV1lXeDFaU2hNTENBaWRHOXVaVTFoY0hCcGJtZEZlSEJ2YzNWeVpTSXNJSGd1ZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlNrc0lGaGxMbTVsWldSelRHbG5hSFJ6SUNZbUlFSmtLRWR1TENCaVlTa3NJSGhsSUNZbUlFWXVabTluSUQwOVBTQWhNQ0FtSmlCbFpTNXlaV1p5WlhOb1JtOW5WVzVwWm05eWJYTW9SMjRzSUhobEtTd2daV1V1Y21WbWNtVnphRTFoZEdWeWFXRnNWVzVwWm05eWJYTW9SMjRzSUVZc0lFZ3NJSEVzSUhkbEtTd2djV2t1ZFhCc2IyRmtLRXdzSUZobExuVnVhV1p2Y20xelRHbHpkQ3dnUjI0c0lIbGxLU2tzSUVZdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBbUppQkdMblZ1YVdadmNtMXpUbVZsWkZWd1pHRjBaU0E5UFQwZ0lUQWdKaVlnS0hGcExuVndiRzloWkNoTUxDQllaUzUxYm1sbWIzSnRjMHhwYzNRc0lFZHVMQ0I1WlNrc0lFWXVkVzVwWm05eWJYTk9aV1ZrVlhCa1lYUmxJRDBnSVRFcExDQkdMbWx6VTNCeWFYUmxUV0YwWlhKcFlXd2dKaVlnUTNRdWMyVjBWbUZzZFdVb1RDd2dJbU5sYm5SbGNpSXNJR3N1WTJWdWRHVnlLU3dnUTNRdWMyVjBWbUZzZFdVb1RDd2dJbTF2WkdWc1ZtbGxkMDFoZEhKcGVDSXNJR3N1Ylc5a1pXeFdhV1YzVFdGMGNtbDRLU3dnUTNRdWMyVjBWbUZzZFdVb1RDd2dJbTV2Y20xaGJFMWhkSEpwZUNJc0lHc3VibTl5YldGc1RXRjBjbWw0S1N3Z1EzUXVjMlYwVm1Gc2RXVW9UQ3dnSW0xdlpHVnNUV0YwY21sNElpd2dheTV0WVhSeWFYaFhiM0pzWkNrc0lFWXVhWE5UYUdGa1pYSk5ZWFJsY21saGJDQjhmQ0JHTG1selVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JDZENBOUlFWXVkVzVwWm05eWJYTkhjbTkxY0hNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZSaElEMGdNQ3dnVm1RZ1BTQkNkQzVzWlc1bmRHZzdJRlJoSUR3Z1ZtUTdJRlJoS3lzcGFXWWdLR2xsTG1selYyVmlSMHd5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhOc0lEMGdRblJiVkdGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWxsTG5Wd1pHRjBaU2h6YkN3Z1NHNHBMQ0JKWlM1aWFXNWtLSE5zTENCSWJpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVmJtbG1iM0p0SUVKMVptWmxjaUJQWW1wbFkzUnpJR05oYmlCdmJteDVJR0psSUhWelpXUWdkMmwwYUNCWFpXSkhUQ0F5TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdRbVFvUlN3Z1Rpa2dld29nSUNBZ0lDQWdJQ0FnSUNCRkxtRnRZbWxsYm5STWFXZG9kRU52Ykc5eUxtNWxaV1J6VlhCa1lYUmxJRDBnVGl3Z1JTNXNhV2RvZEZCeWIySmxMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dSUzVrYVhKbFkzUnBiMjVoYkV4cFoyaDBjeTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRVV1WkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQkZMbkJ2YVc1MFRHbG5hSFJ6TG01bFpXUnpWWEJrWVhSbElEMGdUaXdnUlM1d2IybHVkRXhwWjJoMFUyaGhaRzkzY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUVVdWMzQnZkRXhwWjJoMGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lFVXVjM0J2ZEV4cFoyaDBVMmhoWkc5M2N5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lFVXVjbVZqZEVGeVpXRk1hV2RvZEhNdWJtVmxaSE5WY0dSaGRHVWdQU0JPTENCRkxtaGxiV2x6Y0dobGNtVk1hV2RvZEhNdWJtVmxaSE5WY0dSaGRHVWdQU0JPT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCNlpDaEZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRkxtbHpUV1Z6YUV4aGJXSmxjblJOWVhSbGNtbGhiQ0I4ZkNCRkxtbHpUV1Z6YUZSdmIyNU5ZWFJsY21saGJDQjhmQ0JGTG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z2ZId2dSUzVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lIeDhJRVV1YVhOVGFHRmtiM2ROWVhSbGNtbGhiQ0I4ZkNCRkxtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z0ppWWdSUzVzYVdkb2RITWdQVDA5SUNFd093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFRmpkR2wyWlVOMVltVkdZV05sSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJpT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFFXTjBhWFpsVFdsd2JXRndUR1YyWld3Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhjN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRkk3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV6WlhSU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbGN5QTlJR1oxYm1OMGFXOXVLRVVzSUU0c0lGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXVXVaMlYwS0VVdWRHVjRkSFZ5WlNrdVgxOTNaV0puYkZSbGVIUjFjbVVnUFNCT0xDQnRaUzVuWlhRb1JTNWtaWEIwYUZSbGVIUjFjbVVwTGw5ZmQyVmlaMnhVWlhoMGRYSmxJRDBnVmpzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQnRaUzVuWlhRb1JTazdDaUFnSUNBZ0lDQWdJQ0FnSUVZdVgxOW9ZWE5GZUhSbGNtNWhiRlJsZUhSMWNtVnpJRDBnSVRBc0lFWXVYMTlvWVhORmVIUmxjbTVoYkZSbGVIUjFjbVZ6SUNZbUlDaEdMbDlmWVhWMGIwRnNiRzlqWVhSbFJHVndkR2hDZFdabVpYSWdQU0JXSUQwOVBTQjJiMmxrSURBc0lFWXVYMTloZFhSdlFXeHNiMk5oZEdWRVpYQjBhRUoxWm1abGNpQjhmQ0JZTG1oaGN5Z2lWMFZDUjB4ZmJYVnNkR2x6WVcxd2JHVmtYM0psYm1SbGNsOTBiMTkwWlhoMGRYSmxJaWtnUFQwOUlDRXdJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUZKbGJtUmxjaTEwYnkxMFpYaDBkWEpsSUdWNGRHVnVjMmx2YmlCM1lYTWdaR2x6WVdKc1pXUWdZbVZqWVhWelpTQmhiaUJsZUhSbGNtNWhiQ0IwWlhoMGRYSmxJSGRoY3lCd2NtOTJhV1JsWkNJcExDQkdMbDlmZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQwZ0lURXBLVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEZKbGJtUmxjbFJoY21kbGRFWnlZVzFsWW5WbVptVnlJRDBnWm5WdVkzUnBiMjRvUlN3Z1Rpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWaUE5SUcxbExtZGxkQ2hGS1RzS0lDQWdJQ0FnSUNBZ0lDQWdWaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElnUFNCT0xDQldMbDlmZFhObFJHVm1ZWFZzZEVaeVlXMWxZblZtWm1WeUlEMGdUaUE5UFQwZ2RtOXBaQ0F3T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBJRDBnWm5WdVkzUnBiMjRvUlN3Z1RpQTlJREFzSUZZZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGSWdQU0JGTENCaUlEMGdUaXdnZHlBOUlGWTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdJRDBnSVRBc0lHc2dQU0J1ZFd4c0xDQjRaU0E5SUNFeExDQkJaU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVSbElEMGdiV1V1WjJWMEtFVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSR1V1WDE5MWMyVkVaV1poZFd4MFJuSmhiV1ZpZFdabVpYSWdJVDA5SUhadmFXUWdNQ0EvSUNoS0xtSnBibVJHY21GdFpXSjFabVpsY2loTUxrWlNRVTFGUWxWR1JrVlNMQ0J1ZFd4c0tTd2dSaUE5SUNFeEtTQTZJRVJsTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBOVBUMGdkbTlwWkNBd0lEOGdlV1V1YzJWMGRYQlNaVzVrWlhKVVlYSm5aWFFvUlNrZ09pQkVaUzVmWDJoaGMwVjRkR1Z5Ym1Gc1ZHVjRkSFZ5WlhNZ0ppWWdlV1V1Y21WaWFXNWtWR1Y0ZEhWeVpYTW9SU3dnYldVdVoyVjBLRVV1ZEdWNGRIVnlaU2t1WDE5M1pXSm5iRlJsZUhSMWNtVXNJRzFsTG1kbGRDaEZMbVJsY0hSb1ZHVjRkSFZ5WlNrdVgxOTNaV0puYkZSbGVIUjFjbVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGZGxJRDBnUlM1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS0ZkbExtbHpSR0YwWVRORVZHVjRkSFZ5WlNCOGZDQlhaUzVwYzBSaGRHRkJjbkpoZVZSbGVIUjFjbVVnZkh3Z1YyVXVhWE5EYjIxd2NtVnpjMlZrUVhKeVlYbFVaWGgwZFhKbEtTQW1KaUFvUVdVZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VHVWdQU0J0WlM1blpYUW9SU2t1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUlM1cGMxZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ0EvSUNoQmNuSmhlUzVwYzBGeWNtRjVLRkJsVzA1ZEtTQS9JR3NnUFNCUVpWdE9YVnRXWFNBNklHc2dQU0JRWlZ0T1hTd2dlR1VnUFNBaE1Da2dPaUJwWlM1cGMxZGxZa2RNTWlBbUppQkZMbk5oYlhCc1pYTWdQaUF3SUNZbUlIbGxMblZ6WlUxMWJIUnBjMkZ0Y0d4bFpGSlVWQ2hGS1NBOVBUMGdJVEVnUHlCcklEMGdiV1V1WjJWMEtFVXBMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lBNklFRnljbUY1TG1selFYSnlZWGtvVUdVcElEOGdheUE5SUZCbFcxWmRJRG9nYXlBOUlGQmxMQ0JVTG1OdmNIa29SUzUyYVdWM2NHOXlkQ2tzSUU4dVkyOXdlU2hGTG5OamFYTnpiM0lwTENCWklEMGdSUzV6WTJsemMyOXlWR1Z6ZERzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElGUXVZMjl3ZVNoTEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loSUtTNW1iRzl2Y2lncExDQlBMbU52Y0hrb1JDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1NDa3VabXh2YjNJb0tTd2dXU0E5SUVjN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoS0xtSnBibVJHY21GdFpXSjFabVpsY2loTUxrWlNRVTFGUWxWR1JrVlNMQ0JyS1NBbUppQnBaUzVrY21GM1FuVm1abVZ5Y3lBbUppQkdJQ1ltSUVvdVpISmhkMEoxWm1abGNuTW9SU3dnYXlrc0lFb3VkbWxsZDNCdmNuUW9WQ2tzSUVvdWMyTnBjM052Y2loUEtTd2dTaTV6WlhSVFkybHpjMjl5VkdWemRDaFpLU3dnZUdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JFWlNBOUlHMWxMbWRsZENoRkxuUmxlSFIxY21VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RDNW1jbUZ0WldKMVptWmxjbFJsZUhSMWNtVXlSQ2hNTGtaU1FVMUZRbFZHUmtWU0xDQk1Ma05QVEU5U1gwRlVWRUZEU0UxRlRsUXdMQ0JNTGxSRldGUlZVa1ZmUTFWQ1JWOU5RVkJmVUU5VFNWUkpWa1ZmV0NBcklFNHNJRVJsTGw5ZmQyVmlaMnhVWlhoMGRYSmxMQ0JXS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hCWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVJsSUQwZ2JXVXVaMlYwS0VVdWRHVjRkSFZ5WlNrc0lGZGxJRDBnVGlCOGZDQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUQzVtY21GdFpXSjFabVpsY2xSbGVIUjFjbVZNWVhsbGNpaE1Ma1pTUVUxRlFsVkdSa1ZTTENCTUxrTlBURTlTWDBGVVZFRkRTRTFGVGxRd0xDQkVaUzVmWDNkbFltZHNWR1Y0ZEhWeVpTd2dWaUI4ZkNBd0xDQlhaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnU1NBOUlDMHhPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjbVZoWkZKbGJtUmxjbFJoY21kbGRGQnBlR1ZzY3lBOUlHWjFibU4wYVc5dUtFVXNJRTRzSUZZc0lFWXNJR3NzSUhobExDQkJaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVNoRklDWW1JRVV1YVhOWFpXSkhURkpsYm1SbGNsUmhjbWRsZENrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJdWNtVmhaRkpsYm1SbGNsUmhjbWRsZEZCcGVHVnNjem9nY21WdVpHVnlWR0Z5WjJWMElHbHpJRzV2ZENCVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZXVWdQU0J0WlM1blpYUW9SU2t1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUlM1cGMxZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ0FtSmlCQlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNoVlpTQTlJRlZsVzBGbFhTa3NJRlZsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCS0xtSnBibVJHY21GdFpXSjFabVpsY2loTUxrWlNRVTFGUWxWR1JrVlNMQ0JWWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkVaU0E5SUVVdWRHVjRkSFZ5WlN3Z1YyVWdQU0JFWlM1bWIzSnRZWFFzSUZCbElEMGdSR1V1ZEhsd1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1YyVWdJVDA5SUZkMElDWW1JQ1JsTG1OdmJuWmxjblFvVjJVcElDRTlQU0JNTG1kbGRGQmhjbUZ0WlhSbGNpaE1Ma2xOVUV4RlRVVk9WRUZVU1U5T1gwTlBURTlTWDFKRlFVUmZSazlTVFVGVUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxuSmxZV1JTWlc1a1pYSlVZWEpuWlhSUWFYaGxiSE02SUhKbGJtUmxjbFJoY21kbGRDQnBjeUJ1YjNRZ2FXNGdVa2RDUVNCdmNpQnBiWEJzWlcxbGJuUmhkR2x2YmlCa1pXWnBibVZrSUdadmNtMWhkQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVm1VZ1BTQlFaU0E5UFQwZ1ZITWdKaVlnS0ZndWFHRnpLQ0pGV0ZSZlkyOXNiM0pmWW5WbVptVnlYMmhoYkdaZlpteHZZWFFpS1NCOGZDQnBaUzVwYzFkbFlrZE1NaUFtSmlCWUxtaGhjeWdpUlZoVVgyTnZiRzl5WDJKMVptWmxjbDltYkc5aGRDSXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9VR1VnSVQwOUlFOXVJQ1ltSUNSbExtTnZiblpsY25Rb1VHVXBJQ0U5UFNCTUxtZGxkRkJoY21GdFpYUmxjaWhNTGtsTlVFeEZUVVZPVkVGVVNVOU9YME5QVEU5U1gxSkZRVVJmVkZsUVJTa2dKaVlnSVNoUVpTQTlQVDBnZUc0Z0ppWWdLR2xsTG1selYyVmlSMHd5SUh4OElGZ3VhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZENJcElIeDhJRmd1YUdGektDSlhSVUpIVEY5amIyeHZjbDlpZFdabVpYSmZabXh2WVhRaUtTa3BJQ1ltSUNGV1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxuSmxZV1JTWlc1a1pYSlVZWEpuWlhSUWFYaGxiSE02SUhKbGJtUmxjbFJoY21kbGRDQnBjeUJ1YjNRZ2FXNGdWVzV6YVdkdVpXUkNlWFJsVkhsd1pTQnZjaUJwYlhCc1pXMWxiblJoZEdsdmJpQmtaV1pwYm1Wa0lIUjVjR1V1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUaUErUFNBd0lDWW1JRTRnUEQwZ1JTNTNhV1IwYUNBdElFWWdKaVlnVmlBK1BTQXdJQ1ltSUZZZ1BEMGdSUzVvWldsbmFIUWdMU0JySUNZbUlFd3VjbVZoWkZCcGVHVnNjeWhPTENCV0xDQkdMQ0JyTENBa1pTNWpiMjUyWlhKMEtGZGxLU3dnSkdVdVkyOXVkbVZ5ZENoUVpTa3NJSGhsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1ptbHVZV3hzZVhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUkdVZ1BTQlNJQ0U5UFNCdWRXeHNJRDhnYldVdVoyVjBLRklwTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1NpNWlhVzVrUm5KaGJXVmlkV1ptWlhJb1RDNUdVa0ZOUlVKVlJrWkZVaXdnUkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVqYjNCNVJuSmhiV1ZpZFdabVpYSlViMVJsZUhSMWNtVWdQU0JtZFc1amRHbHZiaWhGTENCT0xDQldJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRTFoZEdndWNHOTNLRElzSUMxV0tTd2dheUE5SUUxaGRHZ3VabXh2YjNJb1RpNXBiV0ZuWlM1M2FXUjBhQ0FxSUVZcExDQjRaU0E5SUUxaGRHZ3VabXh2YjNJb1RpNXBiV0ZuWlM1b1pXbG5hSFFnS2lCR0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZVdVdWMyVjBWR1Y0ZEhWeVpUSkVLRTRzSURBcExDQk1MbU52Y0hsVVpYaFRkV0pKYldGblpUSkVLRXd1VkVWWVZGVlNSVjh5UkN3Z1Zpd2dNQ3dnTUN3Z1JTNTRMQ0JGTG5rc0lHc3NJSGhsS1N3Z1NpNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1amIzQjVWR1Y0ZEhWeVpWUnZWR1Y0ZEhWeVpTQTlJR1oxYm1OMGFXOXVLRVVzSUU0c0lGWXNJRVlnUFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnJJRDBnVGk1cGJXRm5aUzUzYVdSMGFDd2dlR1VnUFNCT0xtbHRZV2RsTG1obGFXZG9kQ3dnUVdVZ1BTQWtaUzVqYjI1MlpYSjBLRll1Wm05eWJXRjBLU3dnVldVZ1BTQWtaUzVqYjI1MlpYSjBLRll1ZEhsd1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhsbExuTmxkRlJsZUhSMWNtVXlSQ2hXTENBd0tTd2dUQzV3YVhobGJGTjBiM0psYVNoTUxsVk9VRUZEUzE5R1RFbFFYMWxmVjBWQ1Iwd3NJRll1Wm14cGNGa3BMQ0JNTG5CcGVHVnNVM1J2Y21WcEtFd3VWVTVRUVVOTFgxQlNSVTFWVEZSSlVFeFpYMEZNVUVoQlgxZEZRa2RNTENCV0xuQnlaVzExYkhScGNHeDVRV3h3YUdFcExDQk1MbkJwZUdWc1UzUnZjbVZwS0V3dVZVNVFRVU5MWDBGTVNVZE9UVVZPVkN3Z1ZpNTFibkJoWTJ0QmJHbG5ibTFsYm5RcExDQk9MbWx6UkdGMFlWUmxlSFIxY21VZ1B5Qk1MblJsZUZOMVlrbHRZV2RsTWtRb1RDNVVSVmhVVlZKRlh6SkVMQ0JHTENCRkxuZ3NJRVV1ZVN3Z2F5d2dlR1VzSUVGbExDQlZaU3dnVGk1cGJXRm5aUzVrWVhSaEtTQTZJRTR1YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBL0lFd3VZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTWtRb1RDNVVSVmhVVlZKRlh6SkVMQ0JHTENCRkxuZ3NJRVV1ZVN3Z1RpNXRhWEJ0WVhCeld6QmRMbmRwWkhSb0xDQk9MbTFwY0cxaGNITmJNRjB1YUdWcFoyaDBMQ0JCWlN3Z1RpNXRhWEJ0WVhCeld6QmRMbVJoZEdFcElEb2dUQzUwWlhoVGRXSkpiV0ZuWlRKRUtFd3VWRVZZVkZWU1JWOHlSQ3dnUml3Z1JTNTRMQ0JGTG5rc0lFRmxMQ0JWWlN3Z1RpNXBiV0ZuWlNrc0lFWWdQVDA5SURBZ0ppWWdWaTVuWlc1bGNtRjBaVTFwY0cxaGNITWdKaVlnVEM1blpXNWxjbUYwWlUxcGNHMWhjQ2hNTGxSRldGUlZVa1ZmTWtRcExDQktMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxNMFFnUFNCbWRXNWpkR2x2YmloRkxDQk9MQ0JXTENCR0xDQnJJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VDNXBjMWRsWWtkTU1WSmxibVJsY21WeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJdVkyOXdlVlJsZUhSMWNtVlViMVJsZUhSMWNtVXpSRG9nWTJGdUlHOXViSGtnWW1VZ2RYTmxaQ0IzYVhSb0lGZGxZa2RNTWk0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlR1VnUFNCRkxtMWhlQzU0SUMwZ1JTNXRhVzR1ZUNBcklERXNJRUZsSUQwZ1JTNXRZWGd1ZVNBdElFVXViV2x1TG5rZ0t5QXhMQ0JWWlNBOUlFVXViV0Y0TG5vZ0xTQkZMbTFwYmk1NklDc2dNU3dnUkdVZ1BTQWtaUzVqYjI1MlpYSjBLRVl1Wm05eWJXRjBLU3dnVjJVZ1BTQWtaUzVqYjI1MlpYSjBLRVl1ZEhsd1pTa3NJRkJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUmk1cGMwUmhkR0V6UkZSbGVIUjFjbVVwSUhsbExuTmxkRlJsZUhSMWNtVXpSQ2hHTENBd0tTd2dVR1VnUFNCTUxsUkZXRlJWVWtWZk0wUTdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0VZdWFYTkVZWFJoUVhKeVlYbFVaWGgwZFhKbEtTQjVaUzV6WlhSVVpYaDBkWEpsTWtSQmNuSmhlU2hHTENBd0tTd2dVR1VnUFNCTUxsUkZXRlJWVWtWZk1rUmZRVkpTUVZrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG1OdmNIbFVaWGgwZFhKbFZHOVVaWGgwZFhKbE0wUTZJRzl1YkhrZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UkdGMFlWUmxlSFIxY21VelJDQmhibVFnVkVoU1JVVXVSR0YwWVZSbGVIUjFjbVV5UkVGeWNtRjVMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRXd1Y0dsNFpXeFRkRzl5Wldrb1RDNVZUbEJCUTB0ZlJreEpVRjlaWDFkRlFrZE1MQ0JHTG1ac2FYQlpLU3dnVEM1d2FYaGxiRk4wYjNKbGFTaE1MbFZPVUVGRFMxOVFVa1ZOVlV4VVNWQk1XVjlCVEZCSVFWOVhSVUpIVEN3Z1JpNXdjbVZ0ZFd4MGFYQnNlVUZzY0doaEtTd2dUQzV3YVhobGJGTjBiM0psYVNoTUxsVk9VRUZEUzE5QlRFbEhUazFGVGxRc0lFWXVkVzV3WVdOclFXeHBaMjV0Wlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGWmxJRDBnVEM1blpYUlFZWEpoYldWMFpYSW9UQzVWVGxCQlEwdGZVazlYWDB4RlRrZFVTQ2tzSUdGMElEMGdUQzVuWlhSUVlYSmhiV1YwWlhJb1RDNVZUbEJCUTB0ZlNVMUJSMFZmU0VWSlIwaFVLU3dnYkhRZ1BTQk1MbWRsZEZCaGNtRnRaWFJsY2loTUxsVk9VRUZEUzE5VFMwbFFYMUJKV0VWTVV5a3NJRWgwSUQwZ1RDNW5aWFJRWVhKaGJXVjBaWElvVEM1VlRsQkJRMHRmVTB0SlVGOVNUMWRUS1N3Z1lXNGdQU0JNTG1kbGRGQmhjbUZ0WlhSbGNpaE1MbFZPVUVGRFMxOVRTMGxRWDBsTlFVZEZVeWtzSUhWMElEMGdWaTVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsSUQ4Z1ZpNXRhWEJ0WVhCeld6QmRJRG9nVmk1cGJXRm5aVHNLSUNBZ0lDQWdJQ0FnSUNBZ1RDNXdhWGhsYkZOMGIzSmxhU2hNTGxWT1VFRkRTMTlTVDFkZlRFVk9SMVJJTENCMWRDNTNhV1IwYUNrc0lFd3VjR2w0Wld4VGRHOXlaV2tvVEM1VlRsQkJRMHRmU1UxQlIwVmZTRVZKUjBoVUxDQjFkQzVvWldsbmFIUXBMQ0JNTG5CcGVHVnNVM1J2Y21WcEtFd3VWVTVRUVVOTFgxTkxTVkJmVUVsWVJVeFRMQ0JGTG0xcGJpNTRLU3dnVEM1d2FYaGxiRk4wYjNKbGFTaE1MbFZPVUVGRFMxOVRTMGxRWDFKUFYxTXNJRVV1YldsdUxua3BMQ0JNTG5CcGVHVnNVM1J2Y21WcEtFd3VWVTVRUVVOTFgxTkxTVkJmU1UxQlIwVlRMQ0JGTG0xcGJpNTZLU3dnVmk1cGMwUmhkR0ZVWlhoMGRYSmxJSHg4SUZZdWFYTkVZWFJoTTBSVVpYaDBkWEpsSUQ4Z1RDNTBaWGhUZFdKSmJXRm5aVE5FS0ZCbExDQnJMQ0JPTG5nc0lFNHVlU3dnVGk1NkxDQjRaU3dnUVdVc0lGVmxMQ0JFWlN3Z1YyVXNJSFYwTG1SaGRHRXBJRG9nVmk1cGMwTnZiWEJ5WlhOelpXUkJjbkpoZVZSbGVIUjFjbVVnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG1OdmNIbFVaWGgwZFhKbFZHOVVaWGgwZFhKbE0wUTZJSFZ1ZEdWemRHVmtJSE4xY0hCdmNuUWdabTl5SUdOdmJYQnlaWE56WldRZ2MzSmpWR1Y0ZEhWeVpTNGlLU3dnVEM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXpSQ2hRWlN3Z2F5d2dUaTU0TENCT0xua3NJRTR1ZWl3Z2VHVXNJRUZsTENCVlpTd2dSR1VzSUhWMExtUmhkR0VwS1NBNklFd3VkR1Y0VTNWaVNXMWhaMlV6UkNoUVpTd2dheXdnVGk1NExDQk9MbmtzSUU0dWVpd2dlR1VzSUVGbExDQlZaU3dnUkdVc0lGZGxMQ0IxZENrc0lFd3VjR2w0Wld4VGRHOXlaV2tvVEM1VlRsQkJRMHRmVWs5WFgweEZUa2RVU0N3Z1ZtVXBMQ0JNTG5CcGVHVnNVM1J2Y21WcEtFd3VWVTVRUVVOTFgwbE5RVWRGWDBoRlNVZElWQ3dnWVhRcExDQk1MbkJwZUdWc1UzUnZjbVZwS0V3dVZVNVFRVU5MWDFOTFNWQmZVRWxZUlV4VExDQnNkQ2tzSUV3dWNHbDRaV3hUZEc5eVpXa29UQzVWVGxCQlEwdGZVMHRKVUY5U1QxZFRMQ0JJZENrc0lFd3VjR2w0Wld4VGRHOXlaV2tvVEM1VlRsQkJRMHRmVTB0SlVGOUpUVUZIUlZNc0lHRnVLU3dnYXlBOVBUMGdNQ0FtSmlCR0xtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBbUppQk1MbWRsYm1WeVlYUmxUV2x3YldGd0tGQmxLU3dnU2k1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVwYm1sMFZHVjRkSFZ5WlNBOUlHWjFibU4wYVc5dUtFVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1JTNXBjME4xWW1WVVpYaDBkWEpsSUQ4Z2VXVXVjMlYwVkdWNGRIVnlaVU4xWW1Vb1JTd2dNQ2tnT2lCRkxtbHpSR0YwWVRORVZHVjRkSFZ5WlNBL0lIbGxMbk5sZEZSbGVIUjFjbVV6UkNoRkxDQXdLU0E2SUVVdWFYTkVZWFJoUVhKeVlYbFVaWGgwZFhKbElIeDhJRVV1YVhORGIyMXdjbVZ6YzJWa1FYSnlZWGxVWlhoMGRYSmxJRDhnZVdVdWMyVjBWR1Y0ZEhWeVpUSkVRWEp5WVhrb1JTd2dNQ2tnT2lCNVpTNXpaWFJVWlhoMGRYSmxNa1FvUlN3Z01Da3NJRW91ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjbVZ6WlhSVGRHRjBaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpSUQwZ01Dd2dkeUE5SURBc0lGSWdQU0J1ZFd4c0xDQktMbkpsYzJWMEtDa3NJRTlsTG5KbGMyVjBLQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RIbHdaVzltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHlBOElDSjFJaUFtSmlCZlgxUklVa1ZGWDBSRlZsUlBUMHhUWDE4dVpHbHpjR0YwWTJoRmRtVnVkQ2h1WlhjZ1EzVnpkRzl0UlhabGJuUW9JbTlpYzJWeWRtVWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RHaHBjd29nSUNBZ0lDQWdJSDBwS1RzS0lDQWdJSDBLSUNBZ0lHZGxkQ0JqYjI5eVpHbHVZWFJsVTNsemRHVnRLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIyYmpzS0lDQWdJSDBLSUNBZ0lHZGxkQ0J2ZFhSd2RYUkRiMnh2Y2xOd1lXTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXZkWFJ3ZFhSRGIyeHZjbE53WVdObE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUc5MWRIQjFkRU52Ykc5eVUzQmhZMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDI5MWRIQjFkRU52Ykc5eVUzQmhZMlVnUFNCbE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVuWlhSRGIyNTBaWGgwS0NrN0NpQWdJQ0FnSUNBZ2RDNWtjbUYzYVc1blFuVm1abVZ5UTI5c2IzSlRjR0ZqWlNBOUlHVWdQVDA5SUhGaklEOGdJbVJwYzNCc1lYa3RjRE1pSURvZ0luTnlaMklpTENCMExuVnVjR0ZqYTBOdmJHOXlVM0JoWTJVZ1BTQlJaUzUzYjNKcmFXNW5RMjlzYjNKVGNHRmpaU0E5UFQwZ2RtRWdQeUFpWkdsemNHeGhlUzF3TXlJZ09pQWljM0puWWlJN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnY0doNWMybGpZV3hzZVVOdmNuSmxZM1JNYVdkb2RITW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWR2hsSUhCeWIzQmxjblI1SUM1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ2NtVnVaR1Z5WlhJdWRYTmxUR1ZuWVdONVRHbG5hSFJ6SUdsdWMzUmxZV1F1SWlrc0lDRjBhR2x6TG5WelpVeGxaMkZqZVV4cFoyaDBjenNLSUNBZ0lIMEtJQ0FnSUhObGRDQndhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3lobEtTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlVhR1VnY0hKdmNHVnlkSGtnTG5Cb2VYTnBZMkZzYkhsRGIzSnlaV04wVEdsbmFIUnpJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRk5sZENCeVpXNWtaWEpsY2k1MWMyVk1aV2RoWTNsTWFXZG9kSE1nYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTUxYzJWTVpXZGhZM2xNYVdkb2RITWdQU0FoWlRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0J2ZFhSd2RYUkZibU52WkdsdVp5Z3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlFjbTl3WlhKMGVTQXViM1YwY0hWMFJXNWpiMlJwYm1jZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzV2ZFhSd2RYUkRiMnh2Y2xOd1lXTmxJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXViM1YwY0hWMFEyOXNiM0pUY0dGalpTQTlQVDBnZG5RZ1B5QnlhU0E2SUhaa093b2dJQ0FnZlFvZ0lDQWdjMlYwSUc5MWRIQjFkRVZ1WTI5a2FXNW5LR1VwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUZCeWIzQmxjblI1SUM1dmRYUndkWFJGYm1OdlpHbHVaeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xtOTFkSEIxZEVOdmJHOXlVM0JoWTJVZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1dmRYUndkWFJEYjJ4dmNsTndZV05sSUQwZ1pTQTlQVDBnY21rZ1B5QjJkQ0E2SUUxdU93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhWelpVeGxaMkZqZVV4cFoyaDBjeWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJVYUdVZ2NISnZjR1Z5ZEhrZ0xuVnpaVXhsWjJGamVVeHBaMmgwY3lCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQk5hV2R5WVhSbElIbHZkWElnYkdsbmFIUnBibWNnWVdOamIzSmthVzVuSUhSdklIUm9aU0JtYjJ4c2IzZHBibWNnWjNWcFpHVTZJR2gwZEhCek9pOHZaR2x6WTI5MWNuTmxMblJvY21WbGFuTXViM0puTDNRdmRYQmtZWFJsY3kxMGJ5MXNhV2RvZEdsdVp5MXBiaTEwYUhKbFpTMXFjeTF5TVRVMUx6VXpOek16TGlJcExDQjBhR2x6TGw5MWMyVk1aV2RoWTNsTWFXZG9kSE03Q2lBZ0lDQjlDaUFnSUNCelpYUWdkWE5sVEdWbllXTjVUR2xuYUhSektHVXBJSHNLSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlJvWlNCd2NtOXdaWEowZVNBdWRYTmxUR1ZuWVdONVRHbG5hSFJ6SUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlFMXBaM0poZEdVZ2VXOTFjaUJzYVdkb2RHbHVaeUJoWTJOdmNtUnBibWNnZEc4Z2RHaGxJR1p2Ykd4dmQybHVaeUJuZFdsa1pUb2dhSFIwY0hNNkx5OWthWE5qYjNWeWMyVXVkR2h5WldWcWN5NXZjbWN2ZEM5MWNHUmhkR1Z6TFhSdkxXeHBaMmgwYVc1bkxXbHVMWFJvY21WbExXcHpMWEl4TlRVdk5UTTNNek11SWlrc0lIUm9hWE11WDNWelpVeGxaMkZqZVV4cFoyaDBjeUE5SUdVN0NpQWdJQ0I5Q24wc0lFTnZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlNieUI3Q24wN0NrTnZMbkJ5YjNSdmRIbHdaUzVwYzFkbFlrZE1NVkpsYm1SbGNtVnlJRDBnSVRBN0NuWmhjaUJRYnlBOUlHTnNZWE56SUhNeElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeU5XVXROU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBjMFp2WjBWNGNESWdQU0FoTUN3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnY0dVb1pTa3NJSFJvYVhNdVpHVnVjMmwwZVNBOUlIUTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhNeEtIUm9hWE11WTI5c2IzSXNJSFJvYVhNdVpHVnVjMmwwZVNrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJa1p2WjBWNGNESWlMQW9nSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUIwYUdsekxtNWhiV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMGFHbHpMbU52Ykc5eUxtZGxkRWhsZUNncExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlc1emFYUjVPaUIwYUdsekxtUmxibk5wZEhrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFwOUxDQk1ieUE5SUdOc1lYTnpJSE14SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TENCdUlEMGdNV1V6S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbWx6Um05bklEMGdJVEFzSUhSb2FYTXVibUZ0WlNBOUlDSWlMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJSEJsS0dVcExDQjBhR2x6TG01bFlYSWdQU0IwTENCMGFHbHpMbVpoY2lBOUlHNDdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhNeEtIUm9hWE11WTI5c2IzSXNJSFJvYVhNdWJtVmhjaXdnZEdocGN5NW1ZWElwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSkdiMmNpTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lCMGFHbHpMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjBhR2x6TG1OdmJHOXlMbWRsZEVobGVDZ3BMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpXRnlPaUIwYUdsekxtNWxZWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhjam9nZEdocGN5NW1ZWElLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUXA5TENCSmJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpVMk5sYm1VZ1BTQWhNQ3dnZEdocGN5NTBlWEJsSUQwZ0lsTmpaVzVsSWl3Z2RHaHBjeTVpWVdOclozSnZkVzVrSUQwZ2JuVnNiQ3dnZEdocGN5NWxiblpwY205dWJXVnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVptOW5JRDBnYm5Wc2JDd2dkR2hwY3k1aVlXTnJaM0p2ZFc1a1FteDFjbkpwYm1WemN5QTlJREFzSUhSb2FYTXVZbUZqYTJkeWIzVnVaRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11YjNabGNuSnBaR1ZOWVhSbGNtbGhiQ0E5SUc1MWJHd3NJSFI1Y0dWdlppQmZYMVJJVWtWRlgwUkZWbFJQVDB4VFgxOGdQQ0FpZFNJZ0ppWWdYMTlVU0ZKRlJWOUVSVlpVVDA5TVUxOWZMbVJwYzNCaGRHTm9SWFpsYm5Rb2JtVjNJRU4xYzNSdmJVVjJaVzUwS0NKdlluTmxjblpsSWl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrWlhSaGFXdzZJSFJvYVhNS0lDQWdJQ0FnSUNCOUtTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnWlM1aVlXTnJaM0p2ZFc1a0lDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtSmhZMnRuY205MWJtUWdQU0JsTG1KaFkydG5jbTkxYm1RdVkyeHZibVVvS1Nrc0lHVXVaVzUyYVhKdmJtMWxiblFnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11Wlc1MmFYSnZibTFsYm5RZ1BTQmxMbVZ1ZG1seWIyNXRaVzUwTG1Oc2IyNWxLQ2twTENCbExtWnZaeUFoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVtYjJjZ1BTQmxMbVp2Wnk1amJHOXVaU2dwS1N3Z2RHaHBjeTVpWVdOclozSnZkVzVrUW14MWNuSnBibVZ6Y3lBOUlHVXVZbUZqYTJkeWIzVnVaRUpzZFhKeWFXNWxjM01zSUhSb2FYTXVZbUZqYTJkeWIzVnVaRWx1ZEdWdWMybDBlU0E5SUdVdVltRmphMmR5YjNWdVpFbHVkR1Z1YzJsMGVTd2daUzV2ZG1WeWNtbGtaVTFoZEdWeWFXRnNJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbTkyWlhKeWFXUmxUV0YwWlhKcFlXd2dQU0JsTG05MlpYSnlhV1JsVFdGMFpYSnBZV3d1WTJ4dmJtVW9LU2tzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJR1V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm05bklDRTlQU0J1ZFd4c0lDWW1JQ2gwTG05aWFtVmpkQzVtYjJjZ1BTQjBhR2x6TG1adlp5NTBiMHBUVDA0b0tTa3NJSFJvYVhNdVltRmphMmR5YjNWdVpFSnNkWEp5YVc1bGMzTWdQaUF3SUNZbUlDaDBMbTlpYW1WamRDNWlZV05yWjNKdmRXNWtRbXgxY25KcGJtVnpjeUE5SUhSb2FYTXVZbUZqYTJkeWIzVnVaRUpzZFhKeWFXNWxjM01wTENCMGFHbHpMbUpoWTJ0bmNtOTFibVJKYm5SbGJuTnBkSGtnSVQwOUlERWdKaVlnS0hRdWIySnFaV04wTG1KaFkydG5jbTkxYm1SSmJuUmxibk5wZEhrZ1BTQjBhR2x6TG1KaFkydG5jbTkxYm1SSmJuUmxibk5wZEhrcExDQjBPd29nSUNBZ2ZRcDlMQ0JKY3lBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSFJvYVhNdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNpQTlJQ0V3TENCMGFHbHpMbUZ5Y21GNUlEMGdaU3dnZEdocGN5NXpkSEpwWkdVZ1BTQjBMQ0IwYUdsekxtTnZkVzUwSUQwZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlM1c1pXNW5kR2dnTHlCMElEb2dNQ3dnZEdocGN5NTFjMkZuWlNBOUlFaHlMQ0IwYUdsekxuVndaR0YwWlZKaGJtZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdOdmRXNTBPaUF0TVFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBc0lIUm9hWE11ZFhWcFpDQTlJR3QwS0NrN0NpQWdJQ0I5Q2lBZ0lDQnZibFZ3Ykc5aFpFTmhiR3hpWVdOcktDa2dlMzBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNpQWdJQ0J6WlhSVmMyRm5aU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWE5oWjJVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYa2dQU0J1WlhjZ1pTNWhjbkpoZVM1amIyNXpkSEoxWTNSdmNpaGxMbUZ5Y21GNUtTd2dkR2hwY3k1amIzVnVkQ0E5SUdVdVkyOTFiblFzSUhSb2FYTXVjM1J5YVdSbElEMGdaUzV6ZEhKcFpHVXNJSFJvYVhNdWRYTmhaMlVnUFNCbExuVnpZV2RsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VVRjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JsSUNvOUlIUm9hWE11YzNSeWFXUmxMQ0J1SUNvOUlIUXVjM1J5YVdSbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG5OMGNtbGtaVHNnYVNBOElISTdJR2tyS3lsMGFHbHpMbUZ5Y21GNVcyVWdLeUJwWFNBOUlIUXVZWEp5WVhsYmJpQXJJR2xkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhrdWMyVjBLR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1WVhKeVlYbENkV1ptWlhKeklEMGdlMzBwTENCMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkNBOUlHdDBLQ2twTENCbExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWhjbkpoZVVKMVptWmxjbk5iZEdocGN5NWhjbkpoZVM1aWRXWm1aWEl1WDNWMWFXUmRJRDBnZEdocGN5NWhjbkpoZVM1emJHbGpaU2d3S1M1aWRXWm1aWElwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0lvWlM1aGNuSmhlVUoxWm1abGNuTmJkR2hwY3k1aGNuSmhlUzVpZFdabVpYSXVYM1YxYVdSZEtTd2diaUE5SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtIUXNJSFJvYVhNdWMzUnlhV1JsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUlZjMkZuWlNoMGFHbHpMblZ6WVdkbEtTd2dianNLSUNBZ0lIMEtJQ0FnSUc5dVZYQnNiMkZrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2YmxWd2JHOWhaRU5oYkd4aVlXTnJJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVlYSnlZWGxDZFdabVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwZ2UzMHBMQ0IwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDQTlQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5SUd0MEtDa3BMQ0JsTG1GeWNtRjVRblZtWm1WeWMxdDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlM1aGNuSmhlVUoxWm1abGNuTmJkR2hwY3k1aGNuSmhlUzVpZFdabVpYSXVYM1YxYVdSZElEMGdRWEp5WVhrdVpuSnZiU2h1WlhjZ1ZXbHVkRE15UVhKeVlYa29kR2hwY3k1aGNuSmhlUzVpZFdabVpYSXBLU2tzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkWFZwWkRvZ2RHaHBjeTUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSTZJSFJvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQjBhR2x6TG1GeWNtRjVMbU52Ym5OMGNuVmpkRzl5TG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUhOMGNtbGtaVG9nZEdocGN5NXpkSEpwWkdVS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFwOUxDQlFkQ0E5SUc1bGR5QkJMQ0JSYVNBOUlHTnNZWE56SUhNeElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa2dQU0FoTVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsSUQwZ0lUQXNJSFJvYVhNdWJtRnRaU0E5SUNJaUxDQjBhR2x6TG1SaGRHRWdQU0JsTENCMGFHbHpMbWwwWlcxVGFYcGxJRDBnZEN3Z2RHaHBjeTV2Wm1aelpYUWdQU0J1TENCMGFHbHpMbTV2Y20xaGJHbDZaV1FnUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdOdmRXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WTI5MWJuUTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ1lYSnlZWGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR0YwWVM1aGNuSmhlVHNLSUNBZ0lIMEtJQ0FnSUhObGRDQnVaV1ZrYzFWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrWVhSaExtNWxaV1J6VlhCa1lYUmxJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WkdGMFlTNWpiM1Z1ZERzZ2RDQThJRzQ3SUhRckt5bFFkQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hSb2FYTXNJSFFwTENCUWRDNWhjSEJzZVUxaGRISnBlRFFvWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUZCMExuZ3NJRkIwTG5rc0lGQjBMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVkIwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RHaHBjeXdnZENrc0lGQjBMbUZ3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JRZEM1NExDQlFkQzU1TENCUWRDNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZMjkxYm5RN0lIUWdQQ0J1T3lCMEt5c3BVSFF1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMGFHbHpMQ0IwS1N3Z1VIUXVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JRZEM1NExDQlFkQzU1TENCUWRDNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01dmNtMWhiR2w2WldRZ0ppWWdLSFFnUFNCQ1pTaDBMQ0IwYUdsekxtRnljbUY1S1Nrc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwWFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Wa0lDWW1JQ2gwSUQwZ1FtVW9kQ3dnZEdocGN5NWhjbkpoZVNrcExDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZENBcklERmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGb29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaV1FnSmlZZ0tIUWdQU0JDWlNoMExDQjBhR2x6TG1GeWNtRjVLU2tzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBJQ3NnTWwwZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQW1KaUFvZENBOUlFSmxLSFFzSUhSb2FYTXVZWEp5WVhrcEtTd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXpYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUllLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Wa0lDWW1JQ2gwSUQwZ1QzUW9kQ3dnZEdocGN5NWhjbkpoZVNrcExDQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFdTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDQXJJREZkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkdsNlpXUWdKaVlnS0hRZ1BTQlBkQ2gwTENCMGFHbHpMbUZ5Y21GNUtTa3NJSFE3Q2lBZ0lDQjlDaUFnSUNCblpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBJQ3NnTWwwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxaQ0FtSmlBb2RDQTlJRTkwS0hRc0lIUm9hWE11WVhKeVlYa3BLU3dnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRmNvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFnS3lBelhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXeHBlbVZrSUNZbUlDaDBJRDBnVDNRb2RDd2dkR2hwY3k1aGNuSmhlU2twTENCME93b2dJQ0FnZlFvZ0lDQWdjMlYwV0Zrb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMGdaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDd2dkR2hwY3k1dWIzSnRZV3hwZW1Wa0lDWW1JQ2gwSUQwZ1FtVW9kQ3dnZEdocGN5NWhjbkpoZVNrc0lHNGdQU0JDWlNodUxDQjBhR2x6TG1GeWNtRjVLU2tzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklERmRJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGaFpXaWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ1BTQmxJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWMExDQjBhR2x6TG01dmNtMWhiR2w2WldRZ0ppWWdLSFFnUFNCQ1pTaDBMQ0IwYUdsekxtRnljbUY1S1N3Z2JpQTlJRUpsS0c0c0lIUm9hWE11WVhKeVlYa3BMQ0JwSUQwZ1FtVW9hU3dnZEdocGN5NWhjbkpoZVNrcExDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREJkSUQwZ2RDd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF4WFNBOUlHNHNJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ3NnTWwwZ1BTQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0ZsYVZ5aGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ1BTQmxJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWMExDQjBhR2x6TG01dmNtMWhiR2w2WldRZ0ppWWdLSFFnUFNCQ1pTaDBMQ0IwYUdsekxtRnljbUY1S1N3Z2JpQTlJRUpsS0c0c0lIUm9hWE11WVhKeVlYa3BMQ0JwSUQwZ1FtVW9hU3dnZEdocGN5NWhjbkpoZVNrc0lISWdQU0JDWlNoeUxDQjBhR2x6TG1GeWNtRjVLU2tzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklERmRJRDBnYml3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNMTBnUFNCeUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGtsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsTG1Oc2IyNWxLQ2s2SUVOc2IyNXBibWNnWVc0Z2FXNTBaWEpzWldGMlpXUWdZblZtWm1WeUlHRjBkSEpwWW5WMFpTQjNhV3hzSUdSbExXbHVkR1Z5YkdWaGRtVWdZblZtWm1WeUlHUmhkR0V1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQjBhR2x6TG1OdmRXNTBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUlDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUE4SUhSb2FYTXVhWFJsYlZOcGVtVTdJSElyS3lsMExuQjFjMmdvZEdocGN5NWtZWFJoTG1GeWNtRjVXMmtnS3lCeVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJsZENodVpYY2dkR2hwY3k1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2loMEtTd2dkR2hwY3k1cGRHVnRVMmw2WlN3Z2RHaHBjeTV1YjNKdFlXeHBlbVZrS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6SUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6SUQwZ2UzMHBMQ0JsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5YzF0MGFHbHpMbVJoZEdFdWRYVnBaRjBnUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk5iZEdocGN5NWtZWFJoTG5WMWFXUmRJRDBnZEdocGN5NWtZWFJoTG1Oc2IyNWxLR1VwS1N3Z2JtVjNJSE14S0dVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKelczUm9hWE11WkdGMFlTNTFkV2xrWFN3Z2RHaHBjeTVwZEdWdFUybDZaU3dnZEdocGN5NXZabVp6WlhRc0lIUm9hWE11Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxrbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbExuUnZTbE5QVGlncE9pQlRaWEpwWVd4cGVtbHVaeUJoYmlCcGJuUmxjbXhsWVhabFpDQmlkV1ptWlhJZ1lYUjBjbWxpZFhSbElIZHBiR3dnWkdVdGFXNTBaWEpzWldGMlpTQmlkV1ptWlhJZ1pHRjBZUzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElIUm9hWE11WTI5MWJuUTdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0Z0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd095QnlJRHdnZEdocGN5NXBkR1Z0VTJsNlpUc2djaXNyS1hRdWNIVnphQ2gwYUdsekxtUmhkR0V1WVhKeVlYbGJhU0FySUhKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiVk5wZW1VNklIUm9hWE11YVhSbGJWTnBlbVVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQjBhR2x6TG1GeWNtRjVMbU52Ym5OMGNuVmpkRzl5TG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjbkpoZVRvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkdsNlpXUTZJSFJvYVhNdWJtOXliV0ZzYVhwbFpBb2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdaUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk1nUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk1nUFNCN2ZTa3NJR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6VzNSb2FYTXVaR0YwWVM1MWRXbGtYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljMXQwYUdsekxtUmhkR0V1ZFhWcFpGMGdQU0IwYUdsekxtUmhkR0V1ZEc5S1UwOU9LR1VwS1N3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJWTnBlbVU2SUhSb2FYTXVhWFJsYlZOcGVtVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJSFJvYVhNdVpHRjBZUzUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJSFJvYVhNdWIyWm1jMlYwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4cGVtVmtPaUIwYUdsekxtNXZjbTFoYkdsNlpXUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRcDlMQ0JsWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMxTndjbWwwWlUxaGRHVnlhV0ZzSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKVGNISnBkR1ZOWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnY0dVb01UWTNOemN5TVRVcExDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuSnZkR0YwYVc5dUlEMGdNQ3dnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BTQWhNQ3dnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ0E5SUNFd0xDQjBhR2x6TG1adlp5QTlJQ0V3TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxuSnZkR0YwYVc5dUlEMGdaUzV5YjNSaGRHbHZiaXdnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BTQmxMbk5wZW1WQmRIUmxiblZoZEdsdmJpd2dkR2hwY3k1bWIyY2dQU0JsTG1adlp5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1NXa3NJR1J6SUQwZ2JtVjNJRUVzSUZWcElEMGdibVYzSUVFc0lFUnBJRDBnYm1WM0lFRXNJRTVwSUQwZ2JtVjNJRm9zSUdaeklEMGdibVYzSUZvc0lFTmtJRDBnYm1WM0lIcGxMQ0JvY2lBOUlHNWxkeUJCTENCd2N5QTlJRzVsZHlCQkxDQjFjaUE5SUc1bGR5QkJMQ0JNYUNBOUlHNWxkeUJhTENCcVlTQTlJRzVsZHlCYUxDQkphQ0E5SUc1bGR5QmFMQ0JWYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nU21VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCbFlTbDdDaUFnSUNBZ0lDQWdhV1lnS0hOMWNHVnlLQ2tzSUhSb2FYTXVhWE5UY0hKcGRHVWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJbE53Y21sMFpTSXNJRWxwSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnU1drZ1BTQnVaWGNnUjJVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXRMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F0TGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUNBZ0lDQmRLU3dnYmlBOUlHNWxkeUJKY3loMExDQTFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1NXa3VjMlYwU1c1a1pYZ29Xd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBekNpQWdJQ0FnSUNBZ0lDQWdJRjBwTENCSmFTNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJRkZwS0c0c0lETXNJREFzSUNFeEtTa3NJRWxwTG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2dVV2tvYml3Z01pd2dNeXdnSVRFcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1blpXOXRaWFJ5ZVNBOUlFbHBMQ0IwYUdsekxtMWhkR1Z5YVdGc0lEMGdaU3dnZEdocGN5NWpaVzUwWlhJZ1BTQnVaWGNnV2lndU5Td2dMalVwT3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnWlM1allXMWxjbUVnUFQwOUlHNTFiR3dnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWduVkVoU1JVVXVVM0J5YVhSbE9pQWlVbUY1WTJGemRHVnlMbU5oYldWeVlTSWdibVZsWkhNZ2RHOGdZbVVnYzJWMElHbHVJRzl5WkdWeUlIUnZJSEpoZVdOaGMzUWdZV2RoYVc1emRDQnpjSEpwZEdWekxpY3BMQ0JWYVM1elpYUkdjbTl0VFdGMGNtbDRVMk5oYkdVb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrc0lFTmtMbU52Y0hrb1pTNWpZVzFsY21FdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtMXZaR1ZzVm1sbGQwMWhkSEpwZUM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0dVdVkyRnRaWEpoTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlN3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrc0lFUnBMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMGFHbHpMbTF2WkdWc1ZtbGxkMDFoZEhKcGVDa3NJR1V1WTJGdFpYSmhMbWx6VUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVnSmlZZ2RHaHBjeTV0WVhSbGNtbGhiQzV6YVhwbFFYUjBaVzUxWVhScGIyNGdQVDA5SUNFeElDWW1JRlZwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzFFYVM1NktUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11YldGMFpYSnBZV3d1Y205MFlYUnBiMjRzSUdrc0lISTdDaUFnSUNBZ0lDQWdiaUFoUFQwZ01DQW1KaUFvY2lBOUlFMWhkR2d1WTI5ektHNHBMQ0JwSUQwZ1RXRjBhQzV6YVc0b2Jpa3BPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1alpXNTBaWEk3Q2lBZ0lDQWdJQ0FnWkhJb2FISXVjMlYwS0MwdU5Td2dMUzQxTENBd0tTd2dSR2tzSUdFc0lGVnBMQ0JwTENCeUtTd2daSElvY0hNdWMyVjBLQzQxTENBdExqVXNJREFwTENCRWFTd2dZU3dnVldrc0lHa3NJSElwTENCa2NpaDFjaTV6WlhRb0xqVXNJQzQxTENBd0tTd2dSR2tzSUdFc0lGVnBMQ0JwTENCeUtTd2dUR2d1YzJWMEtEQXNJREFwTENCcVlTNXpaWFFvTVN3Z01Da3NJRWxvTG5ObGRDZ3hMQ0F4S1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdVdWNtRjVMbWx1ZEdWeWMyVmpkRlJ5YVdGdVoyeGxLR2h5TENCd2N5d2dkWElzSUNFeExDQmtjeWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdQVDA5SUc1MWJHd2dKaVlnS0dSeUtIQnpMbk5sZENndExqVXNJQzQxTENBd0tTd2dSR2tzSUdFc0lGVnBMQ0JwTENCeUtTd2dhbUV1YzJWMEtEQXNJREVwTENCdklEMGdaUzV5WVhrdWFXNTBaWEp6WldOMFZISnBZVzVuYkdVb2FISXNJSFZ5TENCd2N5d2dJVEVzSUdSektTd2dieUE5UFQwZ2JuVnNiQ2twSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR1V1Y21GNUxtOXlhV2RwYmk1a2FYTjBZVzVqWlZSdktHUnpLVHNLSUNBZ0lDQWdJQ0JqSUR3Z1pTNXVaV0Z5SUh4OElHTWdQaUJsTG1aaGNpQjhmQ0IwTG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5cGJuUTZJR1J6TG1Oc2IyNWxLQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVjJPaUJWYmk1blpYUkpiblJsY25CdmJHRjBhVzl1S0dSekxDQm9jaXdnY0hNc0lIVnlMQ0JNYUN3Z2FtRXNJRWxvTENCdVpYY2dXaWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhZMlU2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nZEdocGN3b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTd2dkQ2tzSUdVdVkyVnVkR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxMbU5sYm5SbGNpa3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQmxMbTFoZEdWeWFXRnNMQ0IwYUdsek93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQmtjaWh6TVN3Z1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdUbWt1YzNWaVZtVmpkRzl5Y3loek1Td2dkQ2t1WVdSa1UyTmhiR0Z5S0M0MUtTNXRkV3gwYVhCc2VTaHVLU3dnYVNBaFBUMGdkbTlwWkNBd0lEOGdLR1p6TG5nZ1BTQnlJQ29nVG1rdWVDQXRJR2tnS2lCT2FTNTVMQ0JtY3k1NUlEMGdhU0FxSUU1cExuZ2dLeUJ5SUNvZ1Rta3VlU2tnT2lCbWN5NWpiM0I1S0U1cEtTd2djekV1WTI5d2VTaGxLU3dnY3pFdWVDQXJQU0JtY3k1NExDQnpNUzU1SUNzOUlHWnpMbmtzSUhNeExtRndjR3g1VFdGMGNtbDROQ2hEWkNrN0NuMEtkbUZ5SUdaeUlEMGdibVYzSUVFc0lGVm9JRDBnYm1WM0lFRXNJRVJ2SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJLWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11WDJOMWNuSmxiblJNWlhabGJDQTlJREFzSUhSb2FYTXVkSGx3WlNBOUlDSk1UMFFpTENCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWgwYUdsekxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRtVnNjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhWE5NVDBRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBaE1Bb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11WVhWMGIxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVZMjl3ZVNobExDQWhNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG14bGRtVnNjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJiYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtUR1YyWld3b2NpNXZZbXBsWTNRdVkyeHZibVVvS1N3Z2NpNWthWE4wWVc1alpTd2djaTVvZVhOMFpYSmxjMmx6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUdVdVlYVjBiMVZ3WkdGMFpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRXhsZG1Wc0tHVXNJSFFnUFNBd0xDQnVJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lIUWdQU0JOWVhSb0xtRmljeWgwS1RzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXViR1YyWld4ekxDQnlPd29nSUNBZ0lDQWdJR1p2Y2loeUlEMGdNRHNnY2lBOElHa3ViR1Z1WjNSb0lDWW1JQ0VvZENBOElHbGJjbDB1WkdsemRHRnVZMlVwT3lCeUt5c3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBMbk53YkdsalpTaHlMQ0F3TENCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9lWE4wWlhKbGMybHpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklHVUtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NWhaR1FvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRkWEp5Wlc1MFRHVjJaV3dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMk4xY25KbGJuUk1aWFpsYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRTlpYW1WamRFWnZja1JwYzNSaGJtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViR1YyWld4ek93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNHNJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWh1SUQwZ01Td2dhU0E5SUhRdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RGdHVYUzVrYVhOMFlXNWpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMFcyNWRMbTlpYW1WamRDNTJhWE5wWW14bElDWW1JQ2h5SUMwOUlISWdLaUIwVzI1ZExtaDVjM1JsY21WemFYTXBMQ0JsSUR3Z2Npa2dZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYmJpQXRJREZkTG05aWFtVmpkRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnlZWGxqWVhOMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1c1pYWmxiSE11YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtY2k1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1eVlYa3ViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOG9abklwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFOWlhbVZqZEVadmNrUnBjM1JoYm1ObEtHa3BMbkpoZVdOaGMzUW9aU3dnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJHVjJaV3h6T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabkl1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtHVXViV0YwY21sNFYyOXliR1FwTENCVmFDNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1puSXVaR2x6ZEdGdVkyVlVieWhWYUNrZ0x5QmxMbnB2YjIwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwdWIySnFaV04wTG5acGMybGliR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa3NJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhwSUQwZ01Td2djaUE5SUhRdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RGdHBYUzVrYVhOMFlXNWpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMFcybGRMbTlpYW1WamRDNTJhWE5wWW14bElDWW1JQ2hoSUMwOUlHRWdLaUIwVzJsZExtaDVjM1JsY21WemFYTXBMQ0J1SUQ0OUlHRXBJSFJiYVNBdElERmRMbTlpYW1WamRDNTJhWE5wWW14bElEMGdJVEVzSUhSYmFWMHViMkpxWldOMExuWnBjMmxpYkdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtIUm9hWE11WDJOMWNuSmxiblJNWlhabGJDQTlJR2tnTFNBeE95QnBJRHdnY2pzZ2FTc3JLWFJiYVYwdWIySnFaV04wTG5acGMybGliR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdVlYVjBiMVZ3WkdGMFpTQTlQVDBnSVRFZ0ppWWdLSFF1YjJKcVpXTjBMbUYxZEc5VmNHUmhkR1VnUFNBaE1Ta3NJSFF1YjJKcVpXTjBMbXhsZG1Wc2N5QTlJRnRkT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaWFpsYkhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVcybGRPd29nSUNBZ0lDQWdJQ0FnSUNCMExtOWlhbVZqZEM1c1pYWmxiSE11Y0hWemFDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklHRXViMkpxWldOMExuVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nWVM1a2FYTjBZVzVqWlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoNWMzUmxjbVZ6YVhNNklHRXVhSGx6ZEdWeVpYTnBjd29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNuMHNJRVJvSUQwZ2JtVjNJRUVzSUU1b0lEMGdibVYzSUdwbExDQlBhQ0E5SUc1bGR5QnFaU3dnVnpBZ1BTQnVaWGNnUVN3Z1JtZ2dQU0J1WlhjZ2VtVXNJRTlwSUQwZ2JtVjNJRUVzSUdWdklEMGdibVYzSUZsMExDQkNhQ0E5SUc1bGR5QjZaU3dnZEc4Z1BTQnVaWGNnYUdrc0lFNXZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk5kQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLU3dnZEdocGN5NXBjMU5yYVc1dVpXUk5aWE5vSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKVGEybHVibVZrVFdWemFDSXNJSFJvYVhNdVltbHVaRTF2WkdVZ1BTQWlZWFIwWVdOb1pXUWlMQ0IwYUdsekxtSnBibVJOWVhSeWFYZ2dQU0J1WlhjZ2VtVXNJSFJvYVhNdVltbHVaRTFoZEhKcGVFbHVkbVZ5YzJVZ1BTQnVaWGNnZW1Vc0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BTQnVkV3hzTENCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWQ2IzVnVaR2x1WjBKdmVDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUNBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDQTlJRzVsZHlCUmRDa3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV0ZyWlVWdGNIUjVLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1kbGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnZEM1amIzVnVkRHNnYmlzcktVOXBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z2Jpa3NJSFJvYVhNdVlYQndiSGxDYjI1bFZISmhibk5tYjNKdEtHNHNJRTlwS1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1bGVIQmhibVJDZVZCdmFXNTBLRTlwS1RzS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQTlJRzVsZHlCWmRDa3NJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVV1YldGclpVVnRjSFI1S0NrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtZGxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z2RDNWpiM1Z1ZERzZ2Jpc3JLVTlwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2diaWtzSUhSb2FYTXVZWEJ3YkhsQ2IyNWxWSEpoYm5ObWIzSnRLRzRzSUU5cEtTd2dkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaUzVsZUhCaGJtUkNlVkJ2YVc1MEtFOXBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJSFFwTENCMGFHbHpMbUpwYm1STmIyUmxJRDBnWlM1aWFXNWtUVzlrWlN3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0TG1OdmNIa29aUzVpYVc1a1RXRjBjbWw0S1N3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtHVXVZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVXBMQ0IwYUdsekxuTnJaV3hsZEc5dUlEMGdaUzV6YTJWc1pYUnZiaXdnWlM1aWIzVnVaR2x1WjBKdmVDQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWliM1Z1WkdsdVowSnZlQ0E5SUdVdVltOTFibVJwYm1kQ2IzZ3VZMnh2Ym1Vb0tTa3NJR1V1WW05MWJtUnBibWRUY0dobGNtVWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQmxMbUp2ZFc1a2FXNW5VM0JvWlhKbExtTnNiMjVsS0NrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtMWhkR1Z5YVdGc0xDQnBJRDBnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRHNLSUNBZ0lDQWdJQ0J1SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2daVzh1WTI5d2VTaDBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxLU3dnWlc4dVlYQndiSGxOWVhSeWFYZzBLR2twTENCbExuSmhlUzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1Z2S1NBaFBUMGdJVEVnSmlZZ0tFSm9MbU52Y0hrb2FTa3VhVzUyWlhKMEtDa3NJSFJ2TG1OdmNIa29aUzV5WVhrcExtRndjR3g1VFdGMGNtbDROQ2hDYUNrc0lDRW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDQWhQVDBnYm5Wc2JDQW1KaUIwYnk1cGJuUmxjbk5sWTNSelFtOTRLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3BJRDA5UFNBaE1Ta2dKaVlnZEdocGN5NWZZMjl0Y0hWMFpVbHVkR1Z5YzJWamRHbHZibk1vWlN3Z2RDd2dkRzhwS1NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXWlhKMFpYaFFiM05wZEdsdmJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbWRsZEZabGNuUmxlRkJ2YzJsMGFXOXVLR1VzSUhRcExDQjBhR2x6TG1Gd2NHeDVRbTl1WlZSeVlXNXpabTl5YlNobExDQjBLU3dnZERzS0lDQWdJSDBLSUNBZ0lHSnBibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWMydGxiR1YwYjI0Z1BTQmxMQ0IwSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0lUQXBMQ0IwYUdsekxuTnJaV3hsZEc5dUxtTmhiR04xYkdGMFpVbHVkbVZ5YzJWektDa3NJSFFnUFNCMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0TG1OdmNIa29kQ2tzSUhSb2FYTXVZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMEtTNXBiblpsY25Rb0tUc0tJQ0FnSUgwS0lDQWdJSEJ2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emEyVnNaWFJ2Ymk1d2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1WVGEybHVWMlZwWjJoMGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRzVsZHlCcVpTd2dkQ0E5SUhSb2FYTXVaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeTV6YTJsdVYyVnBaMmgwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExtTnZkVzUwT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlERWdMeUJsTG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ0U5UFNBeElDOGdNQ0EvSUdVdWJYVnNkR2x3YkhsVFkyRnNZWElvY2lrZ09pQmxMbk5sZENneExDQXdMQ0F3TENBd0tTd2dkQzV6WlhSWVdWcFhLRzRzSUdVdWVDd2daUzU1TENCbExub3NJR1V1ZHlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwTENCMGFHbHpMbUpwYm1STmIyUmxJRDA5UFNBaVlYUjBZV05vWldRaUlEOGdkR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BJRG9nZEdocGN5NWlhVzVrVFc5a1pTQTlQVDBnSW1SbGRHRmphR1ZrSWlBL0lIUm9hWE11WW1sdVpFMWhkSEpwZUVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG1KcGJtUk5ZWFJ5YVhncExtbHVkbVZ5ZENncElEb2dZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVUYTJsdWJtVmtUV1Z6YURvZ1ZXNXlaV052WjI1cGVtVmtJR0pwYm1STmIyUmxPaUFpSUNzZ2RHaHBjeTVpYVc1a1RXOWtaU2s3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVUp2Ym1WVWNtRnVjMlp2Y20wb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXphMlZzWlhSdmJpd2dhU0E5SUhSb2FYTXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdUbWd1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNocExtRjBkSEpwWW5WMFpYTXVjMnRwYmtsdVpHVjRMQ0JsS1N3Z1QyZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hwTG1GMGRISnBZblYwWlhNdWMydHBibGRsYVdkb2RDd2daU2tzSUVSb0xtTnZjSGtvZENrdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdVltbHVaRTFoZEhKcGVDa3NJSFF1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQTBPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRTlvTG1kbGRFTnZiWEJ2Ym1WdWRDaHlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0VnSVQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdUbWd1WjJWMFEyOXRjRzl1Wlc1MEtISXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSbWd1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWh1TG1KdmJtVnpXMjlkTG0xaGRISnBlRmR2Y214a0xDQnVMbUp2Ym1WSmJuWmxjbk5sYzF0dlhTa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRmN3TG1OdmNIa29SR2dwTG1Gd2NHeDVUV0YwY21sNE5DaEdhQ2tzSUdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG1KcGJtUk5ZWFJ5YVhoSmJuWmxjbk5sS1RzS0lDQWdJSDBLSUNBZ0lHSnZibVZVY21GdWMyWnZjbTBvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbE5yYVc1dVpXUk5aWE5vT2lBdVltOXVaVlJ5WVc1elptOXliU2dwSUhkaGN5QnlaVzVoYldWa0lIUnZJQzVoY0hCc2VVSnZibVZVY21GdWMyWnZjbTBvS1NCcGJpQnlNVFV4TGlJcExDQjBhR2x6TG1Gd2NHeDVRbTl1WlZSeVlXNXpabTl5YlNobExDQjBLVHNLSUNBZ0lIMEtmU3dnZEdFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVwbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMwSnZibVVnUFNBaE1Dd2dkR2hwY3k1MGVYQmxJRDBnSWtKdmJtVWlPd29nSUNBZ2ZRcDlMQ0J2YVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVTNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzUxYkd3c0lIUWdQU0F4TENCdUlEMGdNU3dnYVN3Z2Npd2dZU3dnYnl3Z1l5d2diQ0E5SUhCMExDQm9JRDBnY0hRc0lIVXNJR1FwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzUxYkd3c0lHRXNJRzhzSUdNc0lHd3NJR2dzSUdrc0lISXNJSFVzSUdRcExDQjBhR2x6TG1selJHRjBZVlJsZUhSMWNtVWdQU0FoTUN3Z2RHaHBjeTVwYldGblpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nYmdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnSVRFc0lIUm9hWE11Wm14cGNGa2dQU0FoTVN3Z2RHaHBjeTUxYm5CaFkydEJiR2xuYm0xbGJuUWdQU0F4T3dvZ0lDQWdmUXA5TENCNmFDQTlJRzVsZHlCNlpTd2dXREFnUFNCdVpYY2dlbVVzSUU5dklEMGdZMnhoYzNNZ2N6RWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZ0ZExDQjBJRDBnVzEwcGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZFhWcFpDQTlJR3QwS0Nrc0lIUm9hWE11WW05dVpYTWdQU0JsTG5Oc2FXTmxLREFwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3lBOUlIUXNJSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpJRDBnYm5Wc2JDd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzUxYkd3c0lIUm9hWE11WW05dVpWUmxlSFIxY21WVGFYcGxJRDBnTUN3Z2RHaHBjeTVwYm1sMEtDazdDaUFnSUNCOUNpQWdJQ0JwYm1sMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1aWIyNWxjeXdnZENBOUlIUm9hWE11WW05dVpVbHVkbVZ5YzJWek93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtSnZibVZOWVhSeWFXTmxjeUE5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvWlM1c1pXNW5kR2dnS2lBeE5pa3NJSFF1YkdWdVozUm9JRDA5UFNBd0tTQjBhR2x6TG1OaGJHTjFiR0YwWlVsdWRtVnljMlZ6S0NrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1pTNXNaVzVuZEdnZ0lUMDlJSFF1YkdWdVozUm9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVMnRsYkdWMGIyNDZJRTUxYldKbGNpQnZaaUJwYm5abGNuTmxJR0p2Ym1VZ2JXRjBjbWxqWlhNZ1pHOWxjeUJ1YjNRZ2JXRjBZMmdnWVcxdmRXNTBJRzltSUdKdmJtVnpMaUlwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3lBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RHaHBjeTVpYjI1bGN5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkR2hwY3k1aWIyNWxTVzUyWlhKelpYTXVjSFZ6YUNodVpYY2dlbVVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTmhiR04xYkdGMFpVbHVkbVZ5YzJWektDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Dd2dkQ0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbElEd2dkRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ2VtVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZbTl1WlhOYlpWMGdKaVlnYmk1amIzQjVLSFJvYVhNdVltOXVaWE5iWlYwdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeTV3ZFhOb0tHNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Dd2dkQ0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbElEd2dkRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSnZibVZ6VzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0J1SUNZbUlHNHViV0YwY21sNFYyOXliR1F1WTI5d2VTaDBhR2x6TG1KdmJtVkpiblpsY25ObGMxdGxYU2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQXNJSFFnUFNCMGFHbHpMbUp2Ym1WekxteGxibWQwYURzZ1pTQThJSFE3SUdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWliMjVsYzF0bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYmlBbUppQW9iaTV3WVhKbGJuUWdKaVlnYmk1d1lYSmxiblF1YVhOQ2IyNWxJRDhnS0c0dWJXRjBjbWw0TG1OdmNIa29iaTV3WVhKbGJuUXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwTENCdUxtMWhkSEpwZUM1dGRXeDBhWEJzZVNodUxtMWhkSEpwZUZkdmNteGtLU2tnT2lCdUxtMWhkSEpwZUM1amIzQjVLRzR1YldGMGNtbDRWMjl5YkdRcExDQnVMbTFoZEhKcGVDNWtaV052YlhCdmMyVW9iaTV3YjNOcGRHbHZiaXdnYmk1eGRXRjBaWEp1YVc5dUxDQnVMbk5qWVd4bEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWliMjVsY3l3Z2RDQTlJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpMQ0J1SUQwZ2RHaHBjeTVpYjI1bFRXRjBjbWxqWlhNc0lHa2dQU0IwYUdsekxtSnZibVZVWlhoMGRYSmxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHRWdQU0JsTG14bGJtZDBhRHNnY2lBOElHRTdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdaVnR5WFNBL0lHVmJjbDB1YldGMGNtbDRWMjl5YkdRZ09pQllNRHNLSUNBZ0lDQWdJQ0FnSUNBZ2VtZ3ViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aHZMQ0IwVzNKZEtTd2dlbWd1ZEc5QmNuSmhlU2h1TENCeUlDb2dNVFlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcElDRTlQU0J1ZFd4c0lDWW1JQ2hwTG01bFpXUnpWWEJrWVhSbElEMGdJVEFwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QnpNU2gwYUdsekxtSnZibVZ6TENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiMjF3ZFhSbFFtOXVaVlJsZUhSMWNtVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0JOWVhSb0xuTnhjblFvZEdocGN5NWliMjVsY3k1c1pXNW5kR2dnS2lBMEtUc0tJQ0FnSUNBZ0lDQmxJRDBnZVdRb1pTa3NJR1VnUFNCTllYUm9MbTFoZUNobExDQTBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29aU0FxSUdVZ0tpQTBLVHNLSUNBZ0lDQWdJQ0IwTG5ObGRDaDBhR2x6TG1KdmJtVk5ZWFJ5YVdObGN5azdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnYjJrb2RDd2daU3dnWlN3Z1YzUXNJSGh1S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpMbUp2Ym1WTllYUnlhV05sY3lBOUlIUXNJSFJvYVhNdVltOXVaVlJsZUhSMWNtVWdQU0J1TENCMGFHbHpMbUp2Ym1WVVpYaDBkWEpsVTJsNlpTQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSQ2IyNWxRbmxPWVcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWliMjVsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVltOXVaWE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocExtNWhiV1VnUFQwOUlHVXBJSEpsZEhWeWJpQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTNWthWE53YjNObEtDa3NJSFJvYVhNdVltOXVaVlJsZUhSMWNtVWdQU0J1ZFd4c0tUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5WMWFXUWdQU0JsTG5WMWFXUTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJR1V1WW05dVpYTXViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExtSnZibVZ6VzI1ZExDQmhJRDBnZEZ0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOclpXeGxkRzl1T2lCT2J5QmliMjVsSUdadmRXNWtJSGRwZEdnZ1ZWVkpSRG9pTENCeUtTd2dZU0E5SUc1bGR5QjBZU2tzSUhSb2FYTXVZbTl1WlhNdWNIVnphQ2hoS1N3Z2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNdWNIVnphQ2h1WlhjZ2VtVW9LUzVtY205dFFYSnlZWGtvWlM1aWIyNWxTVzUyWlhKelpYTmJibDBwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzVwZENncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0WlhSaFpHRjBZVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWMybHZiam9nTkM0MkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSWxOclpXeGxkRzl1SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lsTnJaV3hsZEc5dUxuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ltOXVaWE02SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0JpYjI1bFNXNTJaWEp6WlhNNklGdGRDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JsTG5WMWFXUWdQU0IwYUdsekxuVjFhV1E3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtSnZibVZ6TENCdUlEMGdkR2hwY3k1aWIyNWxTVzUyWlhKelpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJSFF1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBXMmxkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbUp2Ym1WekxuQjFjMmdvWVM1MWRXbGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCdVcybGRPd29nSUNBZ0lDQWdJQ0FnSUNCbExtSnZibVZKYm5abGNuTmxjeTV3ZFhOb0tHOHVkRzlCY25KaGVTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDbjBzSUhWcElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaWtzSUhSb2FYTXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdQU0FoTUN3Z2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxJRDBnYVRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtMWxjMmhRWlhKQmRIUnlhV0oxZEdVZ1BTQmxMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsSUQwZ2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxMQ0JsTG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UVhSMGNtbGlkWFJsSUQwZ0lUQXNJR1U3Q2lBZ0lDQjlDbjBzSUVacElEMGdibVYzSUhwbExDQldhQ0E5SUc1bGR5QjZaU3dnY0hJZ1BTQmJYU3dnYTJnZ1BTQnVaWGNnVVhRc0lIRXdJRDBnYm1WM0lIcGxMQ0J0Y3lBOUlHNWxkeUJOZEN3Z1ozTWdQU0J1WlhjZ1dYUXNJRVp2SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJOZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtTd2dkR2hwY3k1cGMwbHVjM1JoYm1ObFpFMWxjMmdnUFNBaE1Dd2dkR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQ0E5SUc1bGR5QjFhU2h1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRzRnS2lBeE5pa3NJREUyS1N3Z2RHaHBjeTVwYm5OMFlXNWpaVU52Ykc5eUlEMGdiblZzYkN3Z2RHaHBjeTVqYjNWdWRDQTlJRzRzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFNCdWRXeHNMQ0IwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnYmpzZ2FTc3JLWFJvYVhNdWMyVjBUV0YwY21sNFFYUW9hU3dnY1RBcE93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVSnZkVzVrYVc1blFtOTRLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dkQ0E5SUhSb2FYTXVZMjkxYm5RN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUNBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDQTlJRzVsZHlCUmRDa3NJR1V1WW05MWJtUnBibWRDYjNnZ1BUMDlJRzUxYkd3Z0ppWWdaUzVqYjIxd2RYUmxRbTkxYm1ScGJtZENiM2dvS1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1dFlXdGxSVzF3ZEhrb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dkRHNnYmlzcktYUm9hWE11WjJWMFRXRjBjbWw0UVhRb2Jpd2dSbWtwTENCcmFDNWpiM0I1S0dVdVltOTFibVJwYm1kQ2IzZ3BMbUZ3Y0d4NVRXRjBjbWw0TkNoR2FTa3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VkVzVwYjI0b2EyZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2RDQTlJSFJvYVhNdVkyOTFiblE3Q2lBZ0lDQWdJQ0FnZEdocGN5NWliM1Z1WkdsdVoxTndhR1Z5WlNBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0E5SUc1bGR5QlpkQ2tzSUdVdVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ1pTNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1N3Z2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTNXRZV3RsUlcxd2RIa29LVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnZERzZ2Jpc3JLWFJvYVhNdVoyVjBUV0YwY21sNFFYUW9iaXdnUm1rcExDQm5jeTVqYjNCNUtHVXVZbTkxYm1ScGJtZFRjR2hsY21VcExtRndjR3g1VFdGMGNtbDROQ2hHYVNrc0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVXVkVzVwYjI0b1ozTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTd2dkQ2tzSUhSb2FYTXVhVzV6ZEdGdVkyVk5ZWFJ5YVhndVkyOXdlU2hsTG1sdWMzUmhibU5sVFdGMGNtbDRLU3dnWlM1cGJuTjBZVzVqWlVOdmJHOXlJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJZ1BTQmxMbWx1YzNSaGJtTmxRMjlzYjNJdVkyeHZibVVvS1Nrc0lIUm9hWE11WTI5MWJuUWdQU0JsTG1OdmRXNTBMQ0JsTG1KdmRXNWthVzVuUW05NElDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtSnZkVzVrYVc1blFtOTRJRDBnWlM1aWIzVnVaR2x1WjBKdmVDNWpiRzl1WlNncEtTd2daUzVpYjNWdVpHbHVaMU53YUdWeVpTQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlHVXVZbTkxYm1ScGJtZFRjR2hsY21VdVkyeHZibVVvS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRiMnh2Y2tGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExtWnliMjFCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVZWEp5WVhrc0lHVWdLaUF6S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZEhKcGVFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbVp5YjIxQmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0TG1GeWNtRjVMQ0JsSUNvZ01UWXBPd29nSUNBZ2ZRb2dJQ0FnY21GNVkyRnpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a0xDQnBJRDBnZEdocGN5NWpiM1Z1ZERzS0lDQWdJQ0FnSUNCcFppQW9iWE11WjJWdmJXVjBjbmtnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0J0Y3k1dFlYUmxjbWxoYkNBOUlIUm9hWE11YldGMFpYSnBZV3dzSUcxekxtMWhkR1Z5YVdGc0lDRTlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LU3dnWjNNdVkyOXdlU2gwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsS1N3Z1ozTXVZWEJ3YkhsTllYUnlhWGcwS0c0cExDQmxMbkpoZVM1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0dkektTQWhQVDBnSVRFcEtTQm1iM0lvYkdWMElISWdQU0F3T3lCeUlEd2dhVHNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5aWFJOWVhSeWFYaEJkQ2h5TENCR2FTa3NJRlpvTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vYml3Z1Jta3BMQ0J0Y3k1dFlYUnlhWGhYYjNKc1pDQTlJRlpvTENCdGN5NXlZWGxqWVhOMEtHVXNJSEJ5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTUN3Z2J5QTlJSEJ5TG14bGJtZDBhRHNnWVNBOElHODdJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUhCeVcyRmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeTVwYm5OMFlXNWpaVWxrSUQwZ2Npd2dZeTV2WW1wbFkzUWdQU0IwYUdsekxDQjBMbkIxYzJnb1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjSEl1YkdWdVozUm9JRDBnTURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNrRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBOUlHNWxkeUIxYVNodVpYY2dSbXh2WVhRek1rRnljbUY1S0hSb2FYTXVhVzV6ZEdGdVkyVk5ZWFJ5YVhndVkyOTFiblFnS2lBektTd2dNeWtwTENCMExuUnZRWEp5WVhrb2RHaHBjeTVwYm5OMFlXNWpaVU52Ykc5eUxtRnljbUY1TENCbElDb2dNeWs3Q2lBZ0lDQjlDaUFnSUNCelpYUk5ZWFJ5YVhoQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RDNTBiMEZ5Y21GNUtIUm9hWE11YVc1emRHRnVZMlZOWVhSeWFYZ3VZWEp5WVhrc0lHVWdLaUF4TmlrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTmIzSndhRlJoY21kbGRITW9LU0I3ZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpjRzl6WlNJS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS2ZTd2dkM1FnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkNBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVUpoYzJsalRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lIQmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxteHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXViR2x1WldOaGNDQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWJHbHVaV3B2YVc0Z1BTQWljbTkxYm1RaUxDQjBhR2x6TG1adlp5QTlJQ0V3TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdWJHbHVaWGRwWkhSb0lEMGdaUzVzYVc1bGQybGtkR2dzSUhSb2FYTXViR2x1WldOaGNDQTlJR1V1YkdsdVpXTmhjQ3dnZEdocGN5NXNhVzVsYW05cGJpQTlJR1V1YkdsdVpXcHZhVzRzSUhSb2FYTXVabTluSUQwZ1pTNW1iMmNzSUhSb2FYTTdDaUFnSUNCOUNuMHNJRWhvSUQwZ2JtVjNJRUVzSUVkb0lEMGdibVYzSUVFc0lGZG9JRDBnYm1WM0lIcGxMQ0J1YnlBOUlHNWxkeUJvYVN3Z2JYSWdQU0J1WlhjZ1dYUXNJR0p1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJLWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUVkbExDQjBJRDBnYm1WM0lIZDBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpUR2x1WlNBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaU0lzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTENCMGFHbHpMbTFoZEdWeWFXRnNJRDBnZEN3Z2RHaHBjeTUxY0dSaGRHVk5iM0p3YUZSaGNtZGxkSE1vS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUhRcExDQjBhR2x6TG0xaGRHVnlhV0ZzSUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hsTG0xaGRHVnlhV0ZzS1NBL0lHVXViV0YwWlhKcFlXd3VjMnhwWTJVb0tTQTZJR1V1YldGMFpYSnBZV3dzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTG1kbGIyMWxkSEo1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVXhwYm1WRWFYTjBZVzVqWlhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbWx1WkdWNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXhMQ0J5SUQwZ2RDNWpiM1Z1ZERzZ2FTQThJSEk3SUdrckt5bElhQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHa2dMU0F4S1N3Z1IyZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCcEtTd2dibHRwWFNBOUlHNWJhU0F0SURGZExDQnVXMmxkSUNzOUlFaG9MbVJwYzNSaGJtTmxWRzhvUjJncE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5ObGRFRjBkSEpwWW5WMFpTZ2liR2x1WlVScGMzUmhibU5sSWl3Z2JtVjNJSFpsS0c0c0lERXBLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVc1bExtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2s2SUVOdmJYQjFkR0YwYVc5dUlHOXViSGtnY0c5emMybGliR1VnZDJsMGFDQnViMjR0YVc1a1pYaGxaQ0JDZFdabVpYSkhaVzl0WlhSeWVTNGlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1FzSUhJZ1BTQmxMbkJoY21GdGN5NU1hVzVsTG5Sb2NtVnphRzlzWkN3Z1lTQTlJRzR1WkhKaGQxSmhibWRsT3dvZ0lDQWdJQ0FnSUdsbUlDaHVMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMDlQU0J1ZFd4c0lDWW1JRzR1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa3NJRzF5TG1OdmNIa29iaTVpYjNWdVpHbHVaMU53YUdWeVpTa3NJRzF5TG1Gd2NHeDVUV0YwY21sNE5DaHBLU3dnYlhJdWNtRmthWFZ6SUNzOUlISXNJR1V1Y21GNUxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb2JYSXBJRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lGZG9MbU52Y0hrb2FTa3VhVzUyWlhKMEtDa3NJRzV2TG1OdmNIa29aUzV5WVhrcExtRndjR3g1VFdGMGNtbDROQ2hYYUNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCeUlDOGdLQ2gwYUdsekxuTmpZV3hsTG5nZ0t5QjBhR2x6TG5OallXeGxMbmtnS3lCMGFHbHpMbk5qWVd4bExub3BJQzhnTXlrc0lHTWdQU0J2SUNvZ2J5d2diQ0E5SUc1bGR5QkJMQ0JvSUQwZ2JtVjNJRUVzSUhVZ1BTQnVaWGNnUVN3Z1pDQTlJRzVsZHlCQkxDQm1JRDBnZEdocGN5NXBjMHhwYm1WVFpXZHRaVzUwY3lBL0lESWdPaUF4TENCdElEMGdiaTVwYm1SbGVDd2daeUE5SUc0dVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJqc0tJQ0FnSUNBZ0lDQnBaaUFvYlNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRTFoZEdndWJXRjRLREFzSUdFdWMzUmhjblFwTENCMklEMGdUV0YwYUM1dGFXNG9iUzVqYjNWdWRDd2dZUzV6ZEdGeWRDQXJJR0V1WTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhnZ1BTQndMQ0I1SUQwZ2RpQXRJREU3SUhnZ1BDQjVPeUI0SUNzOUlHWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQnRMbWRsZEZnb2VDa3NJSGNnUFNCdExtZGxkRmdvZUNBcklERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0JpS1N3Z2FDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR2NzSUhjcExDQnVieTVrYVhOMFlXNWpaVk54Vkc5VFpXZHRaVzUwS0d3c0lHZ3NJR1FzSUhVcElENGdZeWtnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ1pTNXlZWGt1YjNKcFoybHVMbVJwYzNSaGJtTmxWRzhvWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSklEd2daUzV1WldGeUlIeDhJRWtnUGlCbExtWmhjaUI4ZkNCMExuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObE9pQkpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBPaUIxTG1Oc2IyNWxLQ2t1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNE9pQjRMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaFkyVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlVsdVpHVjRPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2dkR2hwY3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUUxaGRHZ3ViV0Y0S0RBc0lHRXVjM1JoY25RcExDQjJJRDBnVFdGMGFDNXRhVzRvWnk1amIzVnVkQ3dnWVM1emRHRnlkQ0FySUdFdVkyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0J3TENCNUlEMGdkaUF0SURFN0lIZ2dQQ0I1T3lCNElDczlJR1lwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCNEtTd2dhQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0djc0lIZ2dLeUF4S1N3Z2JtOHVaR2x6ZEdGdVkyVlRjVlJ2VTJWbmJXVnVkQ2hzTENCb0xDQmtMQ0IxS1NBK0lHTXBJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQzVoY0hCc2VVMWhkSEpwZURRb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkeUE5SUdVdWNtRjVMbTl5YVdkcGJpNWthWE4wWVc1alpWUnZLR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZHlBOElHVXVibVZoY2lCOGZDQjNJRDRnWlM1bVlYSWdmSHdnZEM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ2R5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWREb2dkUzVqYkc5dVpTZ3BMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURvZ2VDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWVdObE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmhZMlZKYm1SbGVEb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklIUm9hWE1LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVuWlc5dFpYUnllUzV0YjNKd2FFRjBkSEpwWW5WMFpYTXNJRzRnUFNCUFltcGxZM1F1YTJWNWN5aDBLVHNLSUNBZ0lDQWdJQ0JwWmlBb2JpNXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RGdHVXekJkWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWdQU0JiWFN3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEVScFkzUnBiMjVoY25rZ1BTQjdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHRWdQU0JwTG14bGJtZDBhRHNnY2lBOElHRTdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnBXM0pkTG01aGJXVWdmSHdnVTNSeWFXNW5LSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWekxuQjFjMmdvTUNrc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNVcyOWRJRDBnY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU3dnV0dnZ1BTQnVaWGNnUVN3Z2NXZ2dQU0J1WlhjZ1FTd2daVzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0p1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwTENCMGFHbHpMbWx6VEdsdVpWTmxaMjFsYm5SeklEMGdJVEFzSUhSb2FYTXVkSGx3WlNBOUlDSk1hVzVsVTJWbmJXVnVkSE1pT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlV4cGJtVkVhWE4wWVc1alpYTW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1sdVpHVjRJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0J1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMExtTnZkVzUwT3lCcElEd2djanNnYVNBclBTQXlLVmhvTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2dhU2tzSUhGb0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnYVNBcklERXBMQ0J1VzJsZElEMGdhU0E5UFQwZ01DQS9JREFnT2lCdVcya2dMU0F4WFN3Z2JsdHBJQ3NnTVYwZ1BTQnVXMmxkSUNzZ1dHZ3VaR2x6ZEdGdVkyVlVieWh4YUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1YzJWMFFYUjBjbWxpZFhSbEtDSnNhVzVsUkdsemRHRnVZMlVpTENCdVpYY2dkbVVvYml3Z01Ta3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwYm1WVFpXZHRaVzUwY3k1amIyMXdkWFJsVEdsdVpVUnBjM1JoYm1ObGN5Z3BPaUJEYjIxd2RYUmhkR2x2YmlCdmJteDVJSEJ2YzNOcFlteGxJSGRwZEdnZ2JtOXVMV2x1WkdWNFpXUWdRblZtWm1WeVIyVnZiV1YwY25rdUlpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDbjBzSUVKdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtTd2dkR2hwY3k1cGMweHBibVZNYjI5d0lEMGdJVEFzSUhSb2FYTXVkSGx3WlNBOUlDSk1hVzVsVEc5dmNDSTdDaUFnSUNCOUNuMHNJRzVoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selVHOXBiblJ6VFdGMFpYSnBZV3dnUFNBaE1Dd2dkR2hwY3k1MGVYQmxJRDBnSWxCdmFXNTBjMDFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJ3WlNneE5qYzNOekl4TlNrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWMybDZaU0E5SURFc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnSVRBc0lIUm9hWE11Wm05bklEMGdJVEFzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXNiM0l1WTI5d2VTaGxMbU52Ykc5eUtTd2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdWMybDZaU0E5SUdVdWMybDZaU3dnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BTQmxMbk5wZW1WQmRIUmxiblZoZEdsdmJpd2dkR2hwY3k1bWIyY2dQU0JsTG1adlp5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1dXZ2dQU0J1WlhjZ2VtVXNJSHB2SUQwZ2JtVjNJR2hwTENCbmNpQTlJRzVsZHlCWmRDd2dYM0lnUFNCdVpYY2dRU3dnVm04Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVwbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1IyVXNJSFFnUFNCdVpYY2dibUVwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVhWE5RYjJsdWRITWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJbEJ2YVc1MGN5SXNJSFJvYVhNdVoyVnZiV1YwY25rZ1BTQmxMQ0IwYUdsekxtMWhkR1Z5YVdGc0lEMGdkQ3dnZEdocGN5NTFjR1JoZEdWTmIzSndhRlJoY21kbGRITW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJSFFwTENCMGFHbHpMbTFoZEdWeWFXRnNJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGxMbTFoZEdWeWFXRnNLU0EvSUdVdWJXRjBaWEpwWVd3dWMyeHBZMlVvS1NBNklHVXViV0YwWlhKcFlXd3NJSFJvYVhNdVoyVnZiV1YwY25rZ1BTQmxMbWRsYjIxbGRISjVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbUY1WTJGemRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0JwSUQwZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkN3Z2NpQTlJR1V1Y0dGeVlXMXpMbEJ2YVc1MGN5NTBhSEpsYzJodmJHUXNJR0VnUFNCdUxtUnlZWGRTWVc1blpUc0tJQ0FnSUNBZ0lDQnBaaUFvYmk1aWIzVnVaR2x1WjFOd2FHVnlaU0E5UFQwZ2JuVnNiQ0FtSmlCdUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCbmNpNWpiM0I1S0c0dVltOTFibVJwYm1kVGNHaGxjbVVwTENCbmNpNWhjSEJzZVUxaGRISnBlRFFvYVNrc0lHZHlMbkpoWkdsMWN5QXJQU0J5TENCbExuSmhlUzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR2R5S1NBOVBUMGdJVEVwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JaYUM1amIzQjVLR2twTG1sdWRtVnlkQ2dwTENCNmJ5NWpiM0I1S0dVdWNtRjVLUzVoY0hCc2VVMWhkSEpwZURRb1dXZ3BPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdjaUF2SUNnb2RHaHBjeTV6WTJGc1pTNTRJQ3NnZEdocGN5NXpZMkZzWlM1NUlDc2dkR2hwY3k1elkyRnNaUzU2S1NBdklETXBMQ0JqSUQwZ2J5QXFJRzhzSUd3Z1BTQnVMbWx1WkdWNExDQjFJRDBnYmk1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lHbG1JQ2hzSUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdUV0YwYUM1dFlYZ29NQ3dnWVM1emRHRnlkQ2tzSUdZZ1BTQk5ZWFJvTG0xcGJpaHNMbU52ZFc1MExDQmhMbk4wWVhKMElDc2dZUzVqYjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlHUXNJRjhnUFNCbU95QnRJRHdnWHpzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdiQzVuWlhSWUtHMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYM0l1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMUxDQm5LU3dnV21nb1gzSXNJR2NzSUdNc0lHa3NJR1VzSUhRc0lIUm9hWE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JOWVhSb0xtMWhlQ2d3TENCaExuTjBZWEowS1N3Z1ppQTlJRTFoZEdndWJXbHVLSFV1WTI5MWJuUXNJR0V1YzNSaGNuUWdLeUJoTG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdaQ3dnWHlBOUlHWTdJRzBnUENCZk95QnRLeXNwWDNJdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDFMQ0J0S1N3Z1dtZ29YM0lzSUcwc0lHTXNJR2tzSUdVc0lIUXNJSFJvYVhNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaMlZ2YldWMGNua3ViVzl5Y0doQmRIUnlhV0oxZEdWekxDQnVJRDBnVDJKcVpXTjBMbXRsZVhNb2RDazdDaUFnSUNBZ0lDQWdhV1lnS0c0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSYmJsc3dYVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklEMGdXMTBzSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUQwZ2UzMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCaElEMGdhUzVzWlc1bmRHZzdJSElnUENCaE95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2FWdHlYUzV1WVcxbElIeDhJRk4wY21sdVp5aHlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3k1d2RYTm9LREFwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVZ0dlhTQTlJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRnBvS0hNeExDQmxMQ0IwTENCdUxDQnBMQ0J5TENCaEtTQjdDaUFnSUNCc1pYUWdieUE5SUhwdkxtUnBjM1JoYm1ObFUzRlViMUJ2YVc1MEtITXhLVHNLSUNBZ0lHbG1JQ2h2SUR3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCaklEMGdibVYzSUVFN0NpQWdJQ0FnSUNBZ2VtOHVZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkQ2h6TVN3Z1l5a3NJR011WVhCd2JIbE5ZWFJ5YVhnMEtHNHBPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdhUzV5WVhrdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc4b1l5azdDaUFnSUNBZ0lDQWdhV1lnS0d3Z1BDQnBMbTVsWVhJZ2ZId2diQ0ErSUdrdVptRnlLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdjaTV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxWRzlTWVhrNklFMWhkR2d1YzNGeWRDaHZLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblE2SUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNE9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCbVlXTmxPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJR0VLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLZlFwMllYSWdTbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJRk4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXNJR0VzSUc4c0lHTXNJR3dwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXNJRzhzSUdNc0lHd3BMQ0IwYUdsekxtbHpWbWxrWlc5VVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdZU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1lTQTZJRzEwTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUhJZ0lUMDlJSFp2YVdRZ01DQS9JSElnT2lCdGRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlIUm9hWE03Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZFNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCbExuSmxjWFZsYzNSV2FXUmxiMFp5WVcxbFEyRnNiR0poWTJzb2RTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0p5WlhGMVpYTjBWbWxrWlc5R2NtRnRaVU5oYkd4aVlXTnJJaUJwYmlCbElDWW1JR1V1Y21WeGRXVnpkRlpwWkdWdlJuSmhiV1ZEWVd4c1ltRmpheWgxS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG1sdFlXZGxLUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVwYldGblpUc0tJQ0FnSUNBZ0lDQWljbVZ4ZFdWemRGWnBaR1Z2Um5KaGJXVkRZV3hzWW1GamF5SWdhVzRnWlNBOVBUMGdJVEVnSmlZZ1pTNXlaV0ZrZVZOMFlYUmxJRDQ5SUdVdVNFRldSVjlEVlZKU1JVNVVYMFJCVkVFZ0ppWWdLSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrN0NpQWdJQ0I5Q24wc0lDUm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2loN0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhRS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1cGMwWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpTQTlJQ0V3TENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUhCMExDQjBhR2x6TG0xcGJrWnBiSFJsY2lBOUlIQjBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q24wc0lGVnpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCakxDQnNMQ0JvTENCMUxDQmtLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVkV3hzTENCaExDQnZMQ0JqTENCc0xDQm9MQ0JwTENCeUxDQjFMQ0JrS1N3Z2RHaHBjeTVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUc0S0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG0xcGNHMWhjSE1nUFNCbExDQjBhR2x6TG1ac2FYQlpJRDBnSVRFc0lIUm9hWE11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnSVRFN0NpQWdJQ0I5Q24wc0lFdG9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlZjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnlMQ0JoS1N3Z2RHaHBjeTVwYzBOdmJYQnlaWE56WldSQmNuSmhlVlJsZUhSMWNtVWdQU0FoTUN3Z2RHaHBjeTVwYldGblpTNWtaWEIwYUNBOUlHa3NJSFJvYVhNdWQzSmhjRklnUFNCSmREc0tJQ0FnSUgwS2ZTd2dVV2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZ6SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLSFp2YVdRZ01Dd2daVnN3WFM1M2FXUjBhQ3dnWlZzd1hTNW9aV2xuYUhRc0lIUXNJRzRzSUhwdUtTd2dkR2hwY3k1cGMwTnZiWEJ5WlhOelpXUkRkV0psVkdWNGRIVnlaU0E5SUNFd0xDQjBhR2x6TG1selEzVmlaVlJsZUhSMWNtVWdQU0FoTUN3Z2RHaHBjeTVwYldGblpTQTlJR1U3Q2lBZ0lDQjlDbjBzSUdwb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCVGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCaExDQnZMQ0JqTENCc0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1TENCcExDQnlMQ0JoTENCdkxDQmpMQ0JzS1N3Z2RHaHBjeTVwYzBOaGJuWmhjMVJsZUhSMWNtVWdQU0FoTUN3Z2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRcDlMQ0JhZENBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa04xY25abElpd2dkR2hwY3k1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5NZ1BTQXlNREE3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNURkWEoyWlRvZ0xtZGxkRkJ2YVc1MEtDa2dibTkwSUdsdGNHeGxiV1Z1ZEdWa0xpSXBMQ0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUkJkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1kbGRGVjBiMVJ0WVhCd2FXNW5LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRkJ2YVc1MEtHNHNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5SektHVWdQU0ExS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEdzlJR1U3SUc0ckt5bDBMbkIxYzJnb2RHaHBjeTVuWlhSUWIybHVkQ2h1SUM4Z1pTa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFUzQmhZMlZrVUc5cGJuUnpLR1VnUFNBMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHc5SUdVN0lHNHJLeWwwTG5CMWMyZ29kR2hwY3k1blpYUlFiMmx1ZEVGMEtHNGdMeUJsS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJNWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxkRXhsYm1kMGFITW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnRsTG14bGJtZDBhQ0F0SURGZE93b2dJQ0FnZlFvZ0lDQWdaMlYwVEdWdVozUm9jeWhsSUQwZ2RHaHBjeTVoY21OTVpXNW5kR2hFYVhacGMybHZibk1wSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1allXTm9aVUZ5WTB4bGJtZDBhSE1nSmlZZ2RHaHBjeTVqWVdOb1pVRnlZMHhsYm1kMGFITXViR1Z1WjNSb0lEMDlQU0JsSUNzZ01TQW1KaUFoZEdocGN5NXVaV1ZrYzFWd1pHRjBaU2tnY21WMGRYSnVJSFJvYVhNdVkyRmphR1ZCY21OTVpXNW5kR2h6T3dvZ0lDQWdJQ0FnSUhSb2FYTXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1TENCcElEMGdkR2hwY3k1blpYUlFiMmx1ZENnd0tTd2djaUE5SURBN0NpQWdJQ0FnSUNBZ2RDNXdkWE5vS0RBcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREU3SUdFZ1BEMGdaVHNnWVNzcktXNGdQU0IwYUdsekxtZGxkRkJ2YVc1MEtHRWdMeUJsS1N3Z2NpQXJQU0J1TG1ScGMzUmhibU5sVkc4b2FTa3NJSFF1Y0hWemFDaHlLU3dnYVNBOUlHNDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJGamFHVkJjbU5NWlc1bmRHaHpJRDBnZEN3Z2REc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVRnlZMHhsYm1kMGFITW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6TG1kbGRFeGxibWQwYUhNb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEZWMGIxUnRZWEJ3YVc1bktHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaMlYwVEdWdVozUm9jeWdwTENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb0xDQmhPd29nSUNBZ0lDQWdJSFFnUHlCaElEMGdkQ0E2SUdFZ1BTQmxJQ29nYmx0eUlDMGdNVjA3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0F3TENCaklEMGdjaUF0SURFc0lHdzdDaUFnSUNBZ0lDQWdabTl5S0RzZ2J5QThQU0JqT3lscFppQW9hU0E5SUUxaGRHZ3VabXh2YjNJb2J5QXJJQ2hqSUMwZ2J5a2dMeUF5S1N3Z2JDQTlJRzViYVYwZ0xTQmhMQ0JzSUR3Z01Da2dieUE5SUdrZ0t5QXhPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLR3dnUGlBd0tTQmpJRDBnYVNBdElERTdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR01nUFNCcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0drZ1BTQmpMQ0J1VzJsZElEMDlQU0JoS1NCeVpYUjFjbTRnYVNBdklDaHlJQzBnTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCdVcybGRMQ0JrSUQwZ2JsdHBJQ3NnTVYwZ0xTQm9MQ0JtSUQwZ0tHRWdMU0JvS1NBdklHUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDaHBJQ3NnWmlrZ0x5QW9jaUF0SURFcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVkdGdVoyVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxJQzBnTVdVdE5Dd2djaUE5SUdVZ0t5QXhaUzAwT3dvZ0lDQWdJQ0FnSUdrZ1BDQXdJQ1ltSUNocElEMGdNQ2tzSUhJZ1BpQXhJQ1ltSUNoeUlEMGdNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxtZGxkRkJ2YVc1MEtHa3BMQ0J2SUQwZ2RHaHBjeTVuWlhSUWIybHVkQ2h5S1N3Z1l5QTlJSFFnZkh3Z0tHRXVhWE5XWldOMGIzSXlJRDhnYm1WM0lGb2dPaUJ1WlhjZ1FTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTXVZMjl3ZVNodktTNXpkV0lvWVNrdWJtOXliV0ZzYVhwbEtDa3NJR003Q2lBZ0lDQjlDaUFnSUNCblpYUlVZVzVuWlc1MFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlhSVmRHOVViV0Z3Y0dsdVp5aGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlVZVzVuWlc1MEtHNHNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlVaeVpXNWxkRVp5WVcxbGN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdVpYY2dRU3dnYVNBOUlGdGRMQ0J5SUQwZ1cxMHNJR0VnUFNCYlhTd2dieUE5SUc1bGR5QkJMQ0JqSUQwZ2JtVjNJSHBsT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQTdJR1lnUEQwZ1pUc2daaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQm1JQzhnWlRzS0lDQWdJQ0FnSUNBZ0lDQWdhVnRtWFNBOUlIUm9hWE11WjJWMFZHRnVaMlZ1ZEVGMEtHMHNJRzVsZHlCQktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbHN3WFNBOUlHNWxkeUJCTENCaFd6QmRJRDBnYm1WM0lFRTdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQk9kVzFpWlhJdVRVRllYMVpCVEZWRkxDQm9JRDBnVFdGMGFDNWhZbk1vYVZzd1hTNTRLU3dnZFNBOUlFMWhkR2d1WVdKektHbGJNRjB1ZVNrc0lHUWdQU0JOWVhSb0xtRmljeWhwV3pCZExub3BPd29nSUNBZ0lDQWdJR2dnUEQwZ2JDQW1KaUFvYkNBOUlHZ3NJRzR1YzJWMEtERXNJREFzSURBcEtTd2dkU0E4UFNCc0lDWW1JQ2hzSUQwZ2RTd2diaTV6WlhRb01Dd2dNU3dnTUNrcExDQmtJRHc5SUd3Z0ppWWdiaTV6WlhRb01Dd2dNQ3dnTVNrc0lHOHVZM0p2YzNOV1pXTjBiM0p6S0dsYk1GMHNJRzRwTG01dmNtMWhiR2w2WlNncExDQnlXekJkTG1OeWIzTnpWbVZqZEc5eWN5aHBXekJkTENCdktTd2dZVnN3WFM1amNtOXpjMVpsWTNSdmNuTW9hVnN3WFN3Z2Nsc3dYU2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtSUQwZ01Uc2daaUE4UFNCbE95Qm1LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2x0bVhTQTlJSEpiWmlBdElERmRMbU5zYjI1bEtDa3NJR0ZiWmwwZ1BTQmhXMllnTFNBeFhTNWpiRzl1WlNncExDQnZMbU55YjNOelZtVmpkRzl5Y3locFcyWWdMU0F4WFN3Z2FWdG1YU2tzSUc4dWJHVnVaM1JvS0NrZ1BpQk9kVzFpWlhJdVJWQlRTVXhQVGlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5NXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdElEMGdUV0YwYUM1aFkyOXpLR04wS0dsYlppQXRJREZkTG1SdmRDaHBXMlpkS1N3Z0xURXNJREVwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKYlpsMHVZWEJ3YkhsTllYUnlhWGcwS0dNdWJXRnJaVkp2ZEdGMGFXOXVRWGhwY3lodkxDQnRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWVZ0bVhTNWpjbTl6YzFabFkzUnZjbk1vYVZ0bVhTd2djbHRtWFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlFMWhkR2d1WVdOdmN5aGpkQ2h5V3pCZExtUnZkQ2h5VzJWZEtTd2dMVEVzSURFcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWmlBdlBTQmxMQ0JwV3pCZExtUnZkQ2h2TG1OeWIzTnpWbVZqZEc5eWN5aHlXekJkTENCeVcyVmRLU2tnUGlBd0lDWW1JQ2htSUQwZ0xXWXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcwZ1BTQXhPeUJ0SUR3OUlHVTdJRzByS3lseVcyMWRMbUZ3Y0d4NVRXRjBjbWw0TkNoakxtMWhhMlZTYjNSaGRHbHZia0Y0YVhNb2FWdHRYU3dnWmlBcUlHMHBLU3dnWVZ0dFhTNWpjbTl6YzFabFkzUnZjbk1vYVZ0dFhTd2djbHR0WFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJoYm1kbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4ek9pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWFXNXZjbTFoYkhNNklHRUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lBOUlHVXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhaR0YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDJMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lrTjFjblpsSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lrTjFjblpsTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpJRDBnZEdocGN5NWhjbU5NWlc1bmRHaEVhWFpwYzJsdmJuTXNJR1V1ZEhsd1pTQTlJSFJvYVhNdWRIbHdaU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5NZ1BTQmxMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeXdnZEdocGN6c0tJQ0FnSUgwS2ZTd2dSSE1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRnAwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXdMQ0IwSUQwZ01Dd2diaUE5SURFc0lHa2dQU0F4TENCeUlEMGdNQ3dnWVNBOUlFMWhkR2d1VUVrZ0tpQXlMQ0J2SUQwZ0lURXNJR01nUFNBd0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selJXeHNhWEJ6WlVOMWNuWmxJRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pGYkd4cGNITmxRM1Z5ZG1VaUxDQjBhR2x6TG1GWUlEMGdaU3dnZEdocGN5NWhXU0E5SUhRc0lIUm9hWE11ZUZKaFpHbDFjeUE5SUc0c0lIUm9hWE11ZVZKaFpHbDFjeUE5SUdrc0lIUm9hWE11WVZOMFlYSjBRVzVuYkdVZ1BTQnlMQ0IwYUdsekxtRkZibVJCYm1kc1pTQTlJR0VzSUhSb2FYTXVZVU5zYjJOcmQybHpaU0E5SUc4c0lIUm9hWE11WVZKdmRHRjBhVzl1SUQwZ1l6c0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnYm1WM0lGb3NJR2tnUFNCTllYUm9MbEJKSUNvZ01pd2djaUE5SUhSb2FYTXVZVVZ1WkVGdVoyeGxJQzBnZEdocGN5NWhVM1JoY25SQmJtZHNaU3dnWVNBOUlFMWhkR2d1WVdKektISXBJRHdnVG5WdFltVnlMa1ZRVTBsTVQwNDdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQThJREE3S1hJZ0t6MGdhVHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJRDRnYVRzcGNpQXRQU0JwT3dvZ0lDQWdJQ0FnSUhJZ1BDQk9kVzFpWlhJdVJWQlRTVXhQVGlBbUppQW9ZU0EvSUhJZ1BTQXdJRG9nY2lBOUlHa3BMQ0IwYUdsekxtRkRiRzlqYTNkcGMyVWdQVDA5SUNFd0lDWW1JQ0ZoSUNZbUlDaHlJRDA5UFNCcElEOGdjaUE5SUMxcElEb2djaUE5SUhJZ0xTQnBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdLeUJsSUNvZ2Npd2dZeUE5SUhSb2FYTXVZVmdnS3lCMGFHbHpMbmhTWVdScGRYTWdLaUJOWVhSb0xtTnZjeWh2S1N3Z2JDQTlJSFJvYVhNdVlWa2dLeUIwYUdsekxubFNZV1JwZFhNZ0tpQk5ZWFJvTG5OcGJpaHZLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVoVW05MFlYUnBiMjRnSVQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCTllYUm9MbU52Y3loMGFHbHpMbUZTYjNSaGRHbHZiaWtzSUhVZ1BTQk5ZWFJvTG5OcGJpaDBhR2x6TG1GU2IzUmhkR2x2Ymlrc0lHUWdQU0JqSUMwZ2RHaHBjeTVoV0N3Z1ppQTlJR3dnTFNCMGFHbHpMbUZaT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpJRDBnWkNBcUlHZ2dMU0JtSUNvZ2RTQXJJSFJvYVhNdVlWZ3NJR3dnUFNCa0lDb2dkU0FySUdZZ0tpQm9JQ3NnZEdocGN5NWhXVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHTXNJR3dwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVlWZ2dQU0JsTG1GWUxDQjBhR2x6TG1GWklEMGdaUzVoV1N3Z2RHaHBjeTU0VW1Ga2FYVnpJRDBnWlM1NFVtRmthWFZ6TENCMGFHbHpMbmxTWVdScGRYTWdQU0JsTG5sU1lXUnBkWE1zSUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VnUFNCbExtRlRkR0Z5ZEVGdVoyeGxMQ0IwYUdsekxtRkZibVJCYm1kc1pTQTlJR1V1WVVWdVpFRnVaMnhsTENCMGFHbHpMbUZEYkc5amEzZHBjMlVnUFNCbExtRkRiRzlqYTNkcGMyVXNJSFJvYVhNdVlWSnZkR0YwYVc5dUlEMGdaUzVoVW05MFlYUnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhXQ0E5SUhSb2FYTXVZVmdzSUdVdVlWa2dQU0IwYUdsekxtRlpMQ0JsTG5oU1lXUnBkWE1nUFNCMGFHbHpMbmhTWVdScGRYTXNJR1V1ZVZKaFpHbDFjeUE5SUhSb2FYTXVlVkpoWkdsMWN5d2daUzVoVTNSaGNuUkJibWRzWlNBOUlIUm9hWE11WVZOMFlYSjBRVzVuYkdVc0lHVXVZVVZ1WkVGdVoyeGxJRDBnZEdocGN5NWhSVzVrUVc1bmJHVXNJR1V1WVVOc2IyTnJkMmx6WlNBOUlIUm9hWE11WVVOc2IyTnJkMmx6WlN3Z1pTNWhVbTkwWVhScGIyNGdQU0IwYUdsekxtRlNiM1JoZEdsdmJpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11WVZnZ1BTQmxMbUZZTENCMGFHbHpMbUZaSUQwZ1pTNWhXU3dnZEdocGN5NTRVbUZrYVhWeklEMGdaUzU0VW1Ga2FYVnpMQ0IwYUdsekxubFNZV1JwZFhNZ1BTQmxMbmxTWVdScGRYTXNJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdQU0JsTG1GVGRHRnlkRUZ1WjJ4bExDQjBhR2x6TG1GRmJtUkJibWRzWlNBOUlHVXVZVVZ1WkVGdVoyeGxMQ0IwYUdsekxtRkRiRzlqYTNkcGMyVWdQU0JsTG1GRGJHOWphM2RwYzJVc0lIUm9hWE11WVZKdmRHRjBhVzl1SUQwZ1pTNWhVbTkwWVhScGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHdHZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkVjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQmhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnVMQ0JwTENCeUxDQmhLU3dnZEdocGN5NXBjMEZ5WTBOMWNuWmxJRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pCY21ORGRYSjJaU0k3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUVwaktDa2dld29nSUNBZ2JHVjBJSE14SUQwZ01Dd2daU0E5SURBc0lIUWdQU0F3TENCdUlEMGdNRHNLSUNBZ0lHWjFibU4wYVc5dUlHa29jaXdnWVN3Z2J5d2dZeWtnZXdvZ0lDQWdJQ0FnSUhNeElEMGdjaXdnWlNBOUlHOHNJSFFnUFNBdE15QXFJSElnS3lBeklDb2dZU0F0SURJZ0tpQnZJQzBnWXl3Z2JpQTlJRElnS2lCeUlDMGdNaUFxSUdFZ0t5QnZJQ3NnWXpzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2FXNXBkRU5oZEcxMWJHeFNiMjA2SUdaMWJtTjBhVzl1S0hJc0lHRXNJRzhzSUdNc0lHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTaGhMQ0J2TENCc0lDb2dLRzhnTFNCeUtTd2diQ0FxSUNoaklDMGdZU2twT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2FXNXBkRTV2Ym5WdWFXWnZjbTFEWVhSdGRXeHNVbTl0T2lCbWRXNWpkR2x2YmloeUxDQmhMQ0J2TENCakxDQnNMQ0JvTENCMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnS0dFZ0xTQnlLU0F2SUd3Z0xTQW9ieUF0SUhJcElDOGdLR3dnS3lCb0tTQXJJQ2h2SUMwZ1lTa2dMeUJvTENCbUlEMGdLRzhnTFNCaEtTQXZJR2dnTFNBb1l5QXRJR0VwSUM4Z0tHZ2dLeUIxS1NBcklDaGpJQzBnYnlrZ0x5QjFPd29nSUNBZ0lDQWdJQ0FnSUNCa0lDbzlJR2dzSUdZZ0tqMGdhQ3dnYVNoaExDQnZMQ0JrTENCbUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR05oYkdNNklHWjFibU4wYVc5dUtISXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCeUlDb2djaXdnYnlBOUlHRWdLaUJ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2N6RWdLeUJsSUNvZ2NpQXJJSFFnS2lCaElDc2diaUFxSUc4N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcDJZWElnZUhJZ1BTQnVaWGNnUVN3Z2FXOGdQU0J1WlhjZ1NtTXNJSE52SUQwZ2JtVjNJRXBqTENCeWJ5QTlJRzVsZHlCS1l5d2dTRzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRnAwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU3dnZENBOUlDRXhMQ0J1SUQwZ0ltTmxiblJ5YVhCbGRHRnNJaXdnYVNBOUlDNDFLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpRMkYwYlhWc2JGSnZiVU4xY25abE15QTlJQ0V3TENCMGFHbHpMblI1Y0dVZ1BTQWlRMkYwYlhWc2JGSnZiVU4xY25abE15SXNJSFJvYVhNdWNHOXBiblJ6SUQwZ1pTd2dkR2hwY3k1amJHOXpaV1FnUFNCMExDQjBhR2x6TG1OMWNuWmxWSGx3WlNBOUlHNHNJSFJvYVhNdWRHVnVjMmx2YmlBOUlHazdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkQ2hsTENCMElEMGdibVYzSUVFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUXNJR2tnUFNCMGFHbHpMbkJ2YVc1MGN5d2djaUE5SUdrdWJHVnVaM1JvTENCaElEMGdLSElnTFNBb2RHaHBjeTVqYkc5elpXUWdQeUF3SURvZ01Ta3BJQ29nWlN3Z2J5QTlJRTFoZEdndVpteHZiM0lvWVNrc0lHTWdQU0JoSUMwZ2J6c0tJQ0FnSUNBZ0lDQjBhR2x6TG1Oc2IzTmxaQ0EvSUc4Z0t6MGdieUErSURBZ1B5QXdJRG9nS0UxaGRHZ3VabXh2YjNJb1RXRjBhQzVoWW5Nb2J5a2dMeUJ5S1NBcklERXBJQ29nY2lBNklHTWdQVDA5SURBZ0ppWWdieUE5UFQwZ2NpQXRJREVnSmlZZ0tHOGdQU0J5SUMwZ01pd2dZeUE5SURFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzTENCb093b2dJQ0FnSUNBZ0lIUm9hWE11WTJ4dmMyVmtJSHg4SUc4Z1BpQXdJRDhnYkNBOUlHbGJLRzhnTFNBeEtTQWxJSEpkSURvZ0tIaHlMbk4xWWxabFkzUnZjbk1vYVZzd1hTd2dhVnN4WFNrdVlXUmtLR2xiTUYwcExDQnNJRDBnZUhJcE93b2dJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2FWdHZJQ1VnY2wwc0lHUWdQU0JwV3lodklDc2dNU2tnSlNCeVhUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWpiRzl6WldRZ2ZId2dieUFySURJZ1BDQnlJRDhnYUNBOUlHbGJLRzhnS3lBeUtTQWxJSEpkSURvZ0tIaHlMbk4xWWxabFkzUnZjbk1vYVZ0eUlDMGdNVjBzSUdsYmNpQXRJREpkS1M1aFpHUW9hVnR5SUMwZ01WMHBMQ0JvSUQwZ2VISXBMQ0IwYUdsekxtTjFjblpsVkhsd1pTQTlQVDBnSW1ObGJuUnlhWEJsZEdGc0lpQjhmQ0IwYUdsekxtTjFjblpsVkhsd1pTQTlQVDBnSW1Ob2IzSmtZV3dpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdkR2hwY3k1amRYSjJaVlI1Y0dVZ1BUMDlJQ0pqYUc5eVpHRnNJaUEvSUM0MUlEb2dMakkxTENCdElEMGdUV0YwYUM1d2IzY29iQzVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2gxS1N3Z1ppa3NJRjhnUFNCTllYUm9MbkJ2ZHloMUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHUXBMQ0JtS1N3Z1p5QTlJRTFoZEdndWNHOTNLR1F1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvYUNrc0lHWXBPd29nSUNBZ0lDQWdJQ0FnSUNCZklEd2dNV1V0TkNBbUppQW9YeUE5SURFcExDQnRJRHdnTVdVdE5DQW1KaUFvYlNBOUlGOHBMQ0JuSUR3Z01XVXROQ0FtSmlBb1p5QTlJRjhwTENCcGJ5NXBibWwwVG05dWRXNXBabTl5YlVOaGRHMTFiR3hTYjIwb2JDNTRMQ0IxTG5nc0lHUXVlQ3dnYUM1NExDQnRMQ0JmTENCbktTd2djMjh1YVc1cGRFNXZiblZ1YVdadmNtMURZWFJ0ZFd4c1VtOXRLR3d1ZVN3Z2RTNTVMQ0JrTG5rc0lHZ3VlU3dnYlN3Z1h5d2daeWtzSUhKdkxtbHVhWFJPYjI1MWJtbG1iM0p0UTJGMGJYVnNiRkp2YlNoc0xub3NJSFV1ZWl3Z1pDNTZMQ0JvTG5vc0lHMHNJRjhzSUdjcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFHbHpMbU4xY25abFZIbHdaU0E5UFQwZ0ltTmhkRzExYkd4eWIyMGlJQ1ltSUNocGJ5NXBibWwwUTJGMGJYVnNiRkp2YlNoc0xuZ3NJSFV1ZUN3Z1pDNTRMQ0JvTG5nc0lIUm9hWE11ZEdWdWMybHZiaWtzSUhOdkxtbHVhWFJEWVhSdGRXeHNVbTl0S0d3dWVTd2dkUzU1TENCa0xua3NJR2d1ZVN3Z2RHaHBjeTUwWlc1emFXOXVLU3dnY204dWFXNXBkRU5oZEcxMWJHeFNiMjBvYkM1NkxDQjFMbm9zSUdRdWVpd2dhQzU2TENCMGFHbHpMblJsYm5OcGIyNHBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6WlhRb2FXOHVZMkZzWXloaktTd2djMjh1WTJGc1l5aGpLU3dnY204dVkyRnNZeWhqS1Nrc0lHNDdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5CdmFXNTBjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbkJ2YVc1MGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdWNHOXBiblJ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnZhVzUwY3k1d2RYTm9LR2t1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnNiM05sWkNBOUlHVXVZMnh2YzJWa0xDQjBhR2x6TG1OMWNuWmxWSGx3WlNBOUlHVXVZM1Z5ZG1WVWVYQmxMQ0IwYUdsekxuUmxibk5wYjI0Z1BTQmxMblJsYm5OcGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExuQnZhVzUwY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxuQnZhVzUwY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWNHOXBiblJ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CdmFXNTBjeTV3ZFhOb0tHa3VkRzlCY25KaGVTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTJ4dmMyVmtJRDBnZEdocGN5NWpiRzl6WldRc0lHVXVZM1Z5ZG1WVWVYQmxJRDBnZEdocGN5NWpkWEoyWlZSNWNHVXNJR1V1ZEdWdWMybHZiaUE5SUhSb2FYTXVkR1Z1YzJsdmJpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1d2IybHVkSE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzV3YjJsdWRITXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExuQnZhVzUwYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdiMmx1ZEhNdWNIVnphQ2h1WlhjZ1FTZ3BMbVp5YjIxQmNuSmhlU2hwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5zYjNObFpDQTlJR1V1WTJ4dmMyVmtMQ0IwYUdsekxtTjFjblpsVkhsd1pTQTlJR1V1WTNWeWRtVlVlWEJsTENCMGFHbHpMblJsYm5OcGIyNGdQU0JsTG5SbGJuTnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJR1YxS0hNeExDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnNaWFFnY2lBOUlDaHVJQzBnWlNrZ0tpQXVOU3dnWVNBOUlDaHBJQzBnZENrZ0tpQXVOU3dnYnlBOUlITXhJQ29nY3pFc0lHTWdQU0J6TVNBcUlHODdDaUFnSUNCeVpYUjFjbTRnS0RJZ0tpQjBJQzBnTWlBcUlHNGdLeUJ5SUNzZ1lTa2dLaUJqSUNzZ0tDMHpJQ29nZENBcklETWdLaUJ1SUMwZ01pQXFJSElnTFNCaEtTQXFJRzhnS3lCeUlDb2djekVnS3lCME93cDlDbVoxYm1OMGFXOXVJRmt3S0hNeExDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlERWdMU0J6TVRzS0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcUlHVTdDbjBLWm5WdVkzUnBiMjRnV2pBb2N6RXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQXlJQ29nS0RFZ0xTQnpNU2tnS2lCek1TQXFJR1U3Q24wS1puVnVZM1JwYjI0Z1NqQW9jekVzSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6TVNBcUlITXhJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQmljeWh6TVN3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnY21WMGRYSnVJRmt3S0hNeExDQmxLU0FySUZvd0tITXhMQ0IwS1NBcklFb3dLSE14TENCdUtUc0tmUXBtZFc1amRHbHZiaUFrTUNoek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQXhJQzBnY3pFN0NpQWdJQ0J5WlhSMWNtNGdkQ0FxSUhRZ0tpQjBJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQkxNQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNBeElDMGdjekU3Q2lBZ0lDQnlaWFIxY200Z015QXFJSFFnS2lCMElDb2djekVnS2lCbE93cDlDbVoxYm1OMGFXOXVJRkV3S0hNeExDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z015QXFJQ2d4SUMwZ2N6RXBJQ29nY3pFZ0tpQnpNU0FxSUdVN0NuMEtablZ1WTNScGIyNGdhakFvY3pFc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCek1TQXFJSE14SUNvZ2N6RWdLaUJsT3dwOUNtWjFibU4wYVc5dUlFVnpLSE14TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCeVpYUjFjbTRnSkRBb2N6RXNJR1VwSUNzZ1N6QW9jekVzSUhRcElDc2dVVEFvY3pFc0lHNHBJQ3NnYWpBb2N6RXNJR2twT3dwOUNuWmhjaUJwWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nV25RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCYUxDQjBJRDBnYm1WM0lGb3NJRzRnUFNCdVpYY2dXaXdnYVNBOUlHNWxkeUJhS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6UTNWaWFXTkNaWHBwWlhKRGRYSjJaU0E5SUNFd0xDQjBhR2x6TG5SNWNHVWdQU0FpUTNWaWFXTkNaWHBwWlhKRGRYSjJaU0lzSUhSb2FYTXVkakFnUFNCbExDQjBhR2x6TG5ZeElEMGdkQ3dnZEdocGN5NTJNaUE5SUc0c0lIUm9hWE11ZGpNZ1BTQnBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCYUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBMQ0JwSUQwZ2RHaHBjeTUyTUN3Z2NpQTlJSFJvYVhNdWRqRXNJR0VnUFNCMGFHbHpMbll5TENCdklEMGdkR2hwY3k1Mk16c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFFvUlhNb1pTd2dhUzU0TENCeUxuZ3NJR0V1ZUN3Z2J5NTRLU3dnUlhNb1pTd2dhUzU1TENCeUxua3NJR0V1ZVN3Z2J5NTVLU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTJNQzVqYjNCNUtHVXVkakFwTENCMGFHbHpMbll4TG1OdmNIa29aUzUyTVNrc0lIUm9hWE11ZGpJdVkyOXdlU2hsTG5ZeUtTd2dkR2hwY3k1Mk15NWpiM0I1S0dVdWRqTXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWRqQWdQU0IwYUdsekxuWXdMblJ2UVhKeVlYa29LU3dnWlM1Mk1TQTlJSFJvYVhNdWRqRXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeUlEMGdkR2hwY3k1Mk1pNTBiMEZ5Y21GNUtDa3NJR1V1ZGpNZ1BTQjBhR2x6TG5ZekxuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZGpBdVpuSnZiVUZ5Y21GNUtHVXVkakFwTENCMGFHbHpMbll4TG1aeWIyMUJjbkpoZVNobExuWXhLU3dnZEdocGN5NTJNaTVtY205dFFYSnlZWGtvWlM1Mk1pa3NJSFJvYVhNdWRqTXVabkp2YlVGeWNtRjVLR1V1ZGpNcExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCSGJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1duUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QkJMQ0IwSUQwZ2JtVjNJRUVzSUc0Z1BTQnVaWGNnUVN3Z2FTQTlJRzVsZHlCQktYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selEzVmlhV05DWlhwcFpYSkRkWEoyWlRNZ1BTQWhNQ3dnZEdocGN5NTBlWEJsSUQwZ0lrTjFZbWxqUW1WNmFXVnlRM1Z5ZG1Veklpd2dkR2hwY3k1Mk1DQTlJR1VzSUhSb2FYTXVkakVnUFNCMExDQjBhR2x6TG5ZeUlEMGdiaXdnZEdocGN5NTJNeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRDaGxMQ0IwSUQwZ2JtVjNJRUVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRc0lHa2dQU0IwYUdsekxuWXdMQ0J5SUQwZ2RHaHBjeTUyTVN3Z1lTQTlJSFJvYVhNdWRqSXNJRzhnUFNCMGFHbHpMbll6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5ObGRDaEZjeWhsTENCcExuZ3NJSEl1ZUN3Z1lTNTRMQ0J2TG5ncExDQkZjeWhsTENCcExua3NJSEl1ZVN3Z1lTNTVMQ0J2TG5rcExDQkZjeWhsTENCcExub3NJSEl1ZWl3Z1lTNTZMQ0J2TG5vcEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5Zd0xtTnZjSGtvWlM1Mk1Da3NJSFJvYVhNdWRqRXVZMjl3ZVNobExuWXhLU3dnZEdocGN5NTJNaTVqYjNCNUtHVXVkaklwTENCMGFHbHpMbll6TG1OdmNIa29aUzUyTXlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzUyTUNBOUlIUm9hWE11ZGpBdWRHOUJjbkpoZVNncExDQmxMbll4SUQwZ2RHaHBjeTUyTVM1MGIwRnljbUY1S0Nrc0lHVXVkaklnUFNCMGFHbHpMbll5TG5SdlFYSnlZWGtvS1N3Z1pTNTJNeUE5SUhSb2FYTXVkak11ZEc5QmNuSmhlU2dwTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NTJNQzVtY205dFFYSnlZWGtvWlM1Mk1Da3NJSFJvYVhNdWRqRXVabkp2YlVGeWNtRjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtWnliMjFCY25KaGVTaGxMbll5S1N3Z2RHaHBjeTUyTXk1bWNtOXRRWEp5WVhrb1pTNTJNeWtzSUhSb2FYTTdDaUFnSUNCOUNuMHNJSE5oSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJhZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZvc0lIUWdQU0J1WlhjZ1dpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMweHBibVZEZFhKMlpTQTlJQ0V3TENCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVOMWNuWmxJaXdnZEdocGN5NTJNU0E5SUdVc0lIUm9hWE11ZGpJZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCYUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDA5UFNBeElEOGdiaTVqYjNCNUtIUm9hWE11ZGpJcElEb2dLRzR1WTI5d2VTaDBhR2x6TG5ZeUtTNXpkV0lvZEdocGN5NTJNU2tzSUc0dWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrdVlXUmtLSFJvYVhNdWRqRXBLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZCdmFXNTBLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVkdGdVoyVnVkQ2hsTENCMElEMGdibVYzSUZvcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNXpkV0pXWldOMGIzSnpLSFJvYVhNdWRqSXNJSFJvYVhNdWRqRXBMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWR0Z1WjJWdWRFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSVVlXNW5aVzUwS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpFdVkyOXdlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNWpiM0I1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWRqRWdQU0IwYUdsekxuWXhMblJ2UVhKeVlYa29LU3dnWlM1Mk1pQTlJSFJvYVhNdWRqSXVkRzlCY25KaGVTZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1Mk1TNW1jbTl0UVhKeVlYa29aUzUyTVNrc0lIUm9hWE11ZGpJdVpuSnZiVUZ5Y21GNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JYYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nV25RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCQkxDQjBJRDBnYm1WM0lFRXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDa3NJSFJvYVhNdWFYTk1hVzVsUTNWeWRtVXpJRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVc1bFEzVnlkbVV6SWl3Z2RHaHBjeTUyTVNBOUlHVXNJSFJvYVhNdWRqSWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5Rb1pTd2dkQ0E5SUc1bGR5QkJLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwOVBTQXhJRDhnYmk1amIzQjVLSFJvYVhNdWRqSXBJRG9nS0c0dVkyOXdlU2gwYUdsekxuWXlLUzV6ZFdJb2RHaHBjeTUyTVNrc0lHNHViWFZzZEdsd2JIbFRZMkZzWVhJb1pTa3VZV1JrS0hSb2FYTXVkakVwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGQnZhVzUwS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZHRnVaMlZ1ZENobExDQjBJRDBnYm1WM0lFRXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXVkaklzSUhSb2FYTXVkakVwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnZlFvZ0lDQWdaMlYwVkdGdVoyVnVkRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlVZVzVuWlc1MEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqRXVZMjl3ZVNobExuWXhLU3dnZEdocGN5NTJNaTVqYjNCNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVkakVnUFNCMGFHbHpMbll4TG5SdlFYSnlZWGtvS1N3Z1pTNTJNaUE5SUhSb2FYTXVkakl1ZEc5QmNuSmhlU2dwTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCeVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1duUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QmFMQ0IwSUQwZ2JtVjNJRm9zSUc0Z1BTQnVaWGNnV2lsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTVwYzFGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abElEMGdJVEFzSUhSb2FYTXVkSGx3WlNBOUlDSlJkV0ZrY21GMGFXTkNaWHBwWlhKRGRYSjJaU0lzSUhSb2FYTXVkakFnUFNCbExDQjBhR2x6TG5ZeElEMGdkQ3dnZEdocGN5NTJNaUE5SUc0N0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRDaGxMQ0IwSUQwZ2JtVjNJRm9wSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRc0lHa2dQU0IwYUdsekxuWXdMQ0J5SUQwZ2RHaHBjeTUyTVN3Z1lTQTlJSFJvYVhNdWRqSTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0dKektHVXNJR2t1ZUN3Z2NpNTRMQ0JoTG5ncExDQmljeWhsTENCcExua3NJSEl1ZVN3Z1lTNTVLU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTJNQzVqYjNCNUtHVXVkakFwTENCMGFHbHpMbll4TG1OdmNIa29aUzUyTVNrc0lIUm9hWE11ZGpJdVkyOXdlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5Zd0lEMGdkR2hwY3k1Mk1DNTBiMEZ5Y21GNUtDa3NJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTUyTUM1bWNtOXRRWEp5WVhrb1pTNTJNQ2tzSUhSb2FYTXVkakV1Wm5KdmJVRnljbUY1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbVp5YjIxQmNuSmhlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1lXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklGcDBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dRU3dnZENBOUlHNWxkeUJCTENCdUlEMGdibVYzSUVFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOUmRXRmtjbUYwYVdOQ1pYcHBaWEpEZFhKMlpUTWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJbEYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsTXlJc0lIUm9hWE11ZGpBZ1BTQmxMQ0IwYUdsekxuWXhJRDBnZEN3Z2RHaHBjeTUyTWlBOUlHNDdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkQ2hsTENCMElEMGdibVYzSUVFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUXNJR2tnUFNCMGFHbHpMbll3TENCeUlEMGdkR2hwY3k1Mk1Td2dZU0E5SUhSb2FYTXVkakk3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHSnpLR1VzSUdrdWVDd2djaTU0TENCaExuZ3BMQ0JpY3lobExDQnBMbmtzSUhJdWVTd2dZUzU1S1N3Z1luTW9aU3dnYVM1NkxDQnlMbm9zSUdFdWVpa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqQXVZMjl3ZVNobExuWXdLU3dnZEdocGN5NTJNUzVqYjNCNUtHVXVkakVwTENCMGFHbHpMbll5TG1OdmNIa29aUzUyTWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzUyTUNBOUlIUm9hWE11ZGpBdWRHOUJjbkpoZVNncExDQmxMbll4SUQwZ2RHaHBjeTUyTVM1MGIwRnljbUY1S0Nrc0lHVXVkaklnUFNCMGFHbHpMbll5TG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkakF1Wm5KdmJVRnljbUY1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbVp5YjIxQmNuSmhlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNW1jbTl0UVhKeVlYa29aUzUyTWlrc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUc5aElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCYWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnVzEwcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11YVhOVGNHeHBibVZEZFhKMlpTQTlJQ0V3TENCMGFHbHpMblI1Y0dVZ1BTQWlVM0JzYVc1bFEzVnlkbVVpTENCMGFHbHpMbkJ2YVc1MGN5QTlJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZENobExDQjBJRDBnYm1WM0lGb3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFzSUdrZ1BTQjBhR2x6TG5CdmFXNTBjeXdnY2lBOUlDaHBMbXhsYm1kMGFDQXRJREVwSUNvZ1pTd2dZU0E5SUUxaGRHZ3VabXh2YjNJb2Npa3NJRzhnUFNCeUlDMGdZU3dnWXlBOUlHbGJZU0E5UFQwZ01DQS9JR0VnT2lCaElDMGdNVjBzSUd3Z1BTQnBXMkZkTENCb0lEMGdhVnRoSUQ0Z2FTNXNaVzVuZEdnZ0xTQXlJRDhnYVM1c1pXNW5kR2dnTFNBeElEb2dZU0FySURGZExDQjFJRDBnYVZ0aElENGdhUzVzWlc1bmRHZ2dMU0F6SUQ4Z2FTNXNaVzVuZEdnZ0xTQXhJRG9nWVNBcklESmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbk5sZENobGRTaHZMQ0JqTG5nc0lHd3VlQ3dnYUM1NExDQjFMbmdwTENCbGRTaHZMQ0JqTG5rc0lHd3VlU3dnYUM1NUxDQjFMbmtwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExuQnZhVzUwY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxuQnZhVzUwY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWNHOXBiblJ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CdmFXNTBjeTV3ZFhOb0tHa3VkRzlCY25KaGVTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzlwYm5SekxuQjFjMmdvYm1WM0lGb29LUzVtY205dFFYSnlZWGtvYVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtmU3dnWTJFZ1BTQlBZbXBsWTNRdVpuSmxaWHBsS0hzS0lDQWdJRjlmY0hKdmRHOWZYem9nYm5Wc2JDd0tJQ0FnSUVGeVkwTjFjblpsT2lCcmJ5d0tJQ0FnSUVOaGRHMTFiR3hTYjIxRGRYSjJaVE02SUVodkxBb2dJQ0FnUTNWaWFXTkNaWHBwWlhKRGRYSjJaVG9nYVdFc0NpQWdJQ0JEZFdKcFkwSmxlbWxsY2tOMWNuWmxNem9nUjI4c0NpQWdJQ0JGYkd4cGNITmxRM1Z5ZG1VNklFUnpMQW9nSUNBZ1RHbHVaVU4xY25abE9pQnpZU3dLSUNBZ0lFeHBibVZEZFhKMlpUTTZJRmR2TEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVU2SUhKaExBb2dJQ0FnVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1Vek9pQmhZU3dLSUNBZ0lGTndiR2x1WlVOMWNuWmxPaUJ2WVFwOUtTd2dXRzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRnAwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTUwZVhCbElEMGdJa04xY25abFVHRjBhQ0lzSUhSb2FYTXVZM1Z5ZG1WeklEMGdXMTBzSUhSb2FYTXVZWFYwYjBOc2IzTmxJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb1pTazdDaUFnSUNCOUNpQWdJQ0JqYkc5elpWQmhkR2dvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU4xY25abGMxc3dYUzVuWlhSUWIybHVkQ2d3S1N3Z2RDQTlJSFJvYVhNdVkzVnlkbVZ6VzNSb2FYTXVZM1Z5ZG1WekxteGxibWQwYUNBdElERmRMbWRsZEZCdmFXNTBLREVwT3dvZ0lDQWdJQ0FnSUdsbUlDZ2haUzVsY1hWaGJITW9kQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbWx6Vm1WamRHOXlNaUE5UFQwZ0lUQWdQeUFpVEdsdVpVTjFjblpsSWlBNklDSk1hVzVsUTNWeWRtVXpJanNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodVpYY2dZMkZiYmwwb2RDd2daU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVWdLaUIwYUdsekxtZGxkRXhsYm1kMGFDZ3BMQ0JwSUQwZ2RHaHBjeTVuWlhSRGRYSjJaVXhsYm1kMGFITW9LU3dnY2lBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQThJR2t1YkdWdVozUm9PeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwVzNKZElENDlJRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYVZ0eVhTQXRJRzRzSUc4Z1BTQjBhR2x6TG1OMWNuWmxjMXR5WFN3Z1l5QTlJRzh1WjJWMFRHVnVaM1JvS0Nrc0lHd2dQU0JqSUQwOVBTQXdJRDhnTUNBNklERWdMU0JoSUM4Z1l6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdkxtZGxkRkJ2YVc1MFFYUW9iQ3dnZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2Npc3JPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRXhsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVjBRM1Z5ZG1WTVpXNW5kR2h6S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYlpTNXNaVzVuZEdnZ0xTQXhYVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVUZ5WTB4bGJtZDBhSE1vS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtTmhZMmhsVEdWdVozUm9jeUE5SUc1MWJHd3NJSFJvYVhNdVoyVjBRM1Z5ZG1WTVpXNW5kR2h6S0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEZFhKMlpVeGxibWQwYUhNb0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZMkZqYUdWTVpXNW5kR2h6SUNZbUlIUm9hWE11WTJGamFHVk1aVzVuZEdoekxteGxibWQwYUNBOVBUMGdkR2hwY3k1amRYSjJaWE11YkdWdVozUm9LU0J5WlhSMWNtNGdkR2hwY3k1allXTm9aVXhsYm1kMGFITTdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQmJYU3dnZENBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFJvYVhNdVkzVnlkbVZ6TG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMElDczlJSFJvYVhNdVkzVnlkbVZ6VzI1ZExtZGxkRXhsYm1kMGFDZ3BMQ0JsTG5CMWMyZ29kQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyRmphR1ZNWlc1bmRHaHpJRDBnWlN3Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOd1lXTmxaRkJ2YVc1MGN5aGxJRDBnTkRBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQRDBnWlRzZ2Jpc3JLWFF1Y0hWemFDaDBhR2x6TG1kbGRGQnZhVzUwS0c0Z0x5QmxLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYVjBiME5zYjNObElDWW1JSFF1Y0hWemFDaDBXekJkS1N3Z2REc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBjeWhsSUQwZ01USXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkTENCdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG1OMWNuWmxjenNnYVNBOElISXViR1Z1WjNSb095QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlISmJhVjBzSUc4Z1BTQmhMbWx6Uld4c2FYQnpaVU4xY25abElEOGdaU0FxSURJZ09pQmhMbWx6VEdsdVpVTjFjblpsSUh4OElHRXVhWE5NYVc1bFEzVnlkbVV6SUQ4Z01TQTZJR0V1YVhOVGNHeHBibVZEZFhKMlpTQS9JR1VnS2lCaExuQnZhVzUwY3k1c1pXNW5kR2dnT2lCbExDQmpJRDBnWVM1blpYUlFiMmx1ZEhNb2J5azdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQTdJR3dnUENCakxteGxibWQwYURzZ2JDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdZMXRzWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0Z0ppWWdiaTVsY1hWaGJITW9hQ2tnZkh3Z0tIUXVjSFZ6YUNob0tTd2diaUE5SUdncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRjFkRzlEYkc5elpTQW1KaUIwTG14bGJtZDBhQ0ErSURFZ0ppWWdJWFJiZEM1c1pXNW5kR2dnTFNBeFhTNWxjWFZoYkhNb2RGc3dYU2tnSmlZZ2RDNXdkWE5vS0hSYk1GMHBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpkWEoyWlhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1amRYSjJaWE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxMbU4xY25abGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNocExtTnNiMjVsS0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoZFhSdlEyeHZjMlVnUFNCbExtRjFkRzlEYkc5elpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUdVdVlYVjBiME5zYjNObElEMGdkR2hwY3k1aGRYUnZRMnh2YzJVc0lHVXVZM1Z5ZG1WeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZM1Z5ZG1WekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWpkWEoyWlhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVkzVnlkbVZ6TG5CMWMyZ29hUzUwYjBwVFQwNG9LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtWnliMjFLVTA5T0tHVXBMQ0IwYUdsekxtRjFkRzlEYkc5elpTQTlJR1V1WVhWMGIwTnNiM05sTENCMGFHbHpMbU4xY25abGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExtTjFjblpsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1WTNWeWRtVnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tHNWxkeUJqWVZ0cExuUjVjR1ZkS0NrdVpuSnZiVXBUVDA0b2FTa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLZlN3Z2Fta2dQU0JqYkdGemN5QmxlSFJsYm1SeklGaHZJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlFZWFJvSWl3Z2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RZ1BTQnVaWGNnV2l3Z1pTQW1KaUIwYUdsekxuTmxkRVp5YjIxUWIybHVkSE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xdmRtVlVieWhsV3pCZExuZ3NJR1ZiTUYwdWVTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTVN3Z2JpQTlJR1V1YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hSb2FYTXViR2x1WlZSdktHVmJkRjB1ZUN3Z1pWdDBYUzU1S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzF2ZG1WVWJ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG5ObGRDaGxMQ0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4cGJtVlVieWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnYzJFb2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdVkyeHZibVVvS1N3Z2JtVjNJRm9vWlN3Z2RDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tHNHBMQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzV6WlhRb1pTd2dkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J4ZFdGa2NtRjBhV05EZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QnlZU2gwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYkc5dVpTZ3BMQ0J1WlhjZ1dpaGxMQ0IwS1N3Z2JtVjNJRm9vYml3Z2FTa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tISXBMQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzV6WlhRb2Jpd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JpWlhwcFpYSkRkWEoyWlZSdktHVXNJSFFzSUc0c0lHa3NJSElzSUdFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWxkeUJwWVNoMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amJHOXVaU2dwTENCdVpYY2dXaWhsTENCMEtTd2dibVYzSUZvb2Jpd2dhU2tzSUc1bGR5QmFLSElzSUdFcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodktTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVjMlYwS0hJc0lHRXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM0JzYVc1bFZHaHlkU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbU5zYjI1bEtDa0tJQ0FnSUNBZ0lDQmRMbU52Ym1OaGRDaGxLU3dnYmlBOUlHNWxkeUJ2WVNoMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodUtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMjl3ZVNobFcyVXViR1Z1WjNSb0lDMGdNVjBwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhKaktHVXNJSFFzSUc0c0lHa3NJSElzSUdFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuZ3NJR01nUFNCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1NU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZpYzJGeVl5aGxJQ3NnYnl3Z2RDQXJJR01zSUc0c0lHa3NJSElzSUdFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXSnpZWEpqS0dVc0lIUXNJRzRzSUdrc0lISXNJR0VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhZbk5sYkd4cGNITmxLR1VzSUhRc0lHNHNJRzRzSUdrc0lISXNJR0VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWld4c2FYQnpaU2hsTENCMExDQnVMQ0JwTENCeUxDQmhMQ0J2TENCaktTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNTRMQ0JvSUQwZ2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoWW5ObGJHeHBjSE5sS0dVZ0t5QnNMQ0IwSUNzZ2FDd2diaXdnYVN3Z2Npd2dZU3dnYnl3Z1l5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhZbk5sYkd4cGNITmxLR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXNJRzhzSUdNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHNWxkeUJFY3lobExDQjBMQ0J1TENCcExDQnlMQ0JoTENCdkxDQmpLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqZFhKMlpYTXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHd3VaMlYwVUc5cGJuUW9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVXVaWEYxWVd4ektIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MEtTQjhmQ0IwYUdsekxteHBibVZVYnloMUxuZ3NJSFV1ZVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb2JDazdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQnNMbWRsZEZCdmFXNTBLREVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYjNCNUtHZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1OdmNIa29aUzVqZFhKeVpXNTBVRzlwYm5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTNWeWNtVnVkRkJ2YVc1MElEMGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVkRzlCY25KaGVTZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVabkp2YlVGeWNtRjVLR1V1WTNWeWNtVnVkRkJ2YVc1MEtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2JHRWdQU0JqYkdGemN5QnpNU0JsZUhSbGJtUnpJRWRsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJDaUFnSUNBZ0lDQWdibVYzSUZvb01Dd2dMUzQxS1N3S0lDQWdJQ0FnSUNCdVpYY2dXaWd1TlN3Z01Da3NDaUFnSUNBZ0lDQWdibVYzSUZvb01Dd2dMalVwQ2lBZ0lDQmRMQ0IwSUQwZ01USXNJRzRnUFNBd0xDQnBJRDBnVFdGMGFDNVFTU0FxSURJcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11ZEhsd1pTQTlJQ0pNWVhSb1pVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCd2IybHVkSE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sWjIxbGJuUnpPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQndhR2xUZEdGeWREb2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NHaHBUR1Z1WjNSb09pQnBDaUFnSUNBZ0lDQWdmU3dnZENBOUlFMWhkR2d1Wm14dmIzSW9kQ2tzSUdrZ1BTQmpkQ2hwTENBd0xDQk5ZWFJvTGxCSklDb2dNaWs3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JiWFN3Z1lTQTlJRnRkTENCdklEMGdXMTBzSUdNZ1BTQmJYU3dnYkNBOUlGdGRMQ0JvSUQwZ01TQXZJSFFzSUhVZ1BTQnVaWGNnUVN3Z1pDQTlJRzVsZHlCYUxDQm1JRDBnYm1WM0lFRXNJRzBnUFNCdVpYY2dRU3dnWHlBOUlHNWxkeUJCTENCbklEMGdNQ3dnY0NBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjJJRDBnTURzZ2RpQThQU0JsTG14bGJtZDBhQ0F0SURFN0lIWXJLeWx6ZDJsMFkyZ29kaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdjZ1BTQmxXM1lnS3lBeFhTNTRJQzBnWlZ0MlhTNTRMQ0J3SUQwZ1pWdDJJQ3NnTVYwdWVTQXRJR1ZiZGwwdWVTd2daaTU0SUQwZ2NDQXFJREVzSUdZdWVTQTlJQzFuTENCbUxub2dQU0J3SUNvZ01Dd2dYeTVqYjNCNUtHWXBMQ0JtTG01dmNtMWhiR2w2WlNncExDQmpMbkIxYzJnb1ppNTRMQ0JtTG5rc0lHWXVlaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmxMbXhsYm1kMGFDQXRJREU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqTG5CMWMyZ29YeTU0TENCZkxua3NJRjh1ZWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdjZ1BTQmxXM1lnS3lBeFhTNTRJQzBnWlZ0MlhTNTRMQ0J3SUQwZ1pWdDJJQ3NnTVYwdWVTQXRJR1ZiZGwwdWVTd2daaTU0SUQwZ2NDQXFJREVzSUdZdWVTQTlJQzFuTENCbUxub2dQU0J3SUNvZ01Dd2diUzVqYjNCNUtHWXBMQ0JtTG5nZ0t6MGdYeTU0TENCbUxua2dLejBnWHk1NUxDQm1Mbm9nS3owZ1h5NTZMQ0JtTG01dmNtMWhiR2w2WlNncExDQmpMbkIxYzJnb1ppNTRMQ0JtTG5rc0lHWXVlaWtzSUY4dVkyOXdlU2h0S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNRHNnZGlBOFBTQjBPeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJRzRnS3lCMklDb2dhQ0FxSUdrc0lIa2dQU0JOWVhSb0xuTnBiaWg0S1N3Z1lpQTlJRTFoZEdndVkyOXpLSGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIY2dQU0F3T3lCM0lEdzlJR1V1YkdWdVozUm9JQzBnTVRzZ2R5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1ZUNBOUlHVmJkMTB1ZUNBcUlIa3NJSFV1ZVNBOUlHVmJkMTB1ZVN3Z2RTNTZJRDBnWlZ0M1hTNTRJQ29nWWl3Z1lTNXdkWE5vS0hVdWVDd2dkUzU1TENCMUxub3BMQ0JrTG5nZ1BTQjJJQzhnZEN3Z1pDNTVJRDBnZHlBdklDaGxMbXhsYm1kMGFDQXRJREVwTENCdkxuQjFjMmdvWkM1NExDQmtMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGSWdQU0JqV3pNZ0tpQjNJQ3NnTUYwZ0tpQjVMQ0JKSUQwZ1kxc3pJQ29nZHlBcklERmRMQ0JOSUQwZ1kxc3pJQ29nZHlBcklEQmRJQ29nWWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWNIVnphQ2hTTENCSkxDQk5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWWdQU0F3T3lCMklEd2dkRHNnZGlzcktXWnZjaWhzWlhRZ2VDQTlJREE3SUhnZ1BDQmxMbXhsYm1kMGFDQXRJREU3SUhnckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnZUNBcklIWWdLaUJsTG14bGJtZDBhQ3dnWWlBOUlIa3NJSGNnUFNCNUlDc2daUzVzWlc1bmRHZ3NJRklnUFNCNUlDc2daUzVzWlc1bmRHZ2dLeUF4TENCSklEMGdlU0FySURFN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1Y0hWemFDaGlMQ0IzTENCSktTd2djaTV3ZFhOb0tGSXNJRWtzSUhjcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0hJcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ2RtVW9ZU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2dkbVVvYnl3Z01pa3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lIWmxLR3dzSURNcEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExuQmhjbUZ0WlhSbGNuTXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhNeEtHVXVjRzlwYm5SekxDQmxMbk5sWjIxbGJuUnpMQ0JsTG5Cb2FWTjBZWEowTENCbExuQm9hVXhsYm1kMGFDazdDaUFnSUNCOUNuMHNJSEZ2SUQwZ1kyeGhjM01nY3pFZ1pYaDBaVzVrY3lCc1lTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJREVzSUc0Z1BTQTBMQ0JwSUQwZ09DbDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnYW1rN0NpQWdJQ0FnSUNBZ2NpNWhZbk5oY21Nb01Dd2dMWFFnTHlBeUxDQmxMQ0JOWVhSb0xsQkpJQ29nTVM0MUxDQXdLU3dnY2k1aFluTmhjbU1vTUN3Z2RDQXZJRElzSUdVc0lEQXNJRTFoZEdndVVFa2dLaUF1TlNrc0lITjFjR1Z5S0hJdVoyVjBVRzlwYm5SektHNHBMQ0JwS1N3Z2RHaHBjeTUwZVhCbElEMGdJa05oY0hOMWJHVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JzWlc1bmRHZzZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjRk5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwWVd4VFpXZHRaVzUwY3pvZ2FRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2N6RW9aUzV5WVdScGRYTXNJR1V1YkdWdVozUm9MQ0JsTG1OaGNGTmxaMjFsYm5SekxDQmxMbkpoWkdsaGJGTmxaMjFsYm5SektUc0tJQ0FnSUgwS2ZTd2dXVzhnUFNCamJHRnpjeUJ6TVNCbGVIUmxibVJ6SUVkbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNeklzSUc0Z1BTQXdMQ0JwSUQwZ1RXRjBhQzVRU1NBcUlESXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDa3NJSFJvYVhNdWRIbHdaU0E5SUNKRGFYSmpiR1ZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCelpXZHRaVzUwY3pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRlRkR0Z5ZERvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRk1aVzVuZEdnNklHa0tJQ0FnSUNBZ0lDQjlMQ0IwSUQwZ1RXRjBhQzV0WVhnb015d2dkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JiWFN3Z1lTQTlJRnRkTENCdklEMGdXMTBzSUdNZ1BTQmJYU3dnYkNBOUlHNWxkeUJCTENCb0lEMGdibVYzSUZvN0NpQWdJQ0FnSUNBZ1lTNXdkWE5vS0RBc0lEQXNJREFwTENCdkxuQjFjMmdvTUN3Z01Dd2dNU2tzSUdNdWNIVnphQ2d1TlN3Z0xqVXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SURBc0lHUWdQU0F6T3lCMUlEdzlJSFE3SUhVckt5d2daQ0FyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0J1SUNzZ2RTQXZJSFFnS2lCcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzTG5nZ1BTQmxJQ29nVFdGMGFDNWpiM01vWmlrc0lHd3VlU0E5SUdVZ0tpQk5ZWFJvTG5OcGJpaG1LU3dnWVM1d2RYTm9LR3d1ZUN3Z2JDNTVMQ0JzTG5vcExDQnZMbkIxYzJnb01Dd2dNQ3dnTVNrc0lHZ3VlQ0E5SUNoaFcyUmRJQzhnWlNBcklERXBJQzhnTWl3Z2FDNTVJRDBnS0dGYlpDQXJJREZkSUM4Z1pTQXJJREVwSUM4Z01pd2dZeTV3ZFhOb0tHZ3VlQ3dnYUM1NUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTVRzZ2RTQThQU0IwT3lCMUt5c3BjaTV3ZFhOb0tIVXNJSFVnS3lBeExDQXdLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtISXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dkbVVvWVN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lIWmxLRzhzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJSFpsS0dNc0lESXBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMbkJoY21GdFpYUmxjbk1wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lITXhLR1V1Y21Ga2FYVnpMQ0JsTG5ObFoyMWxiblJ6TENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQk9jeUE5SUdOc1lYTnpJSE14SUdWNGRHVnVaSE1nUjJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU0E5SURNeUxDQnlJRDBnTVN3Z1lTQTlJQ0V4TENCdklEMGdNQ3dnWXlBOUlFMWhkR2d1VUVrZ0tpQXlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVEzbHNhVzVrWlhKSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpWRzl3T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTkNiM1IwYjIwNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVdGc1UyVm5iV1Z1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRk5sWjIxbGJuUnpPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZjR1Z1Ulc1a1pXUTZJR0VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJRzhzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJqQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTTdDaUFnSUNBZ0lDQWdhU0E5SUUxaGRHZ3VabXh2YjNJb2FTa3NJSElnUFNCTllYUm9MbVpzYjI5eUtISXBPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdXMTBzSUhVZ1BTQmJYU3dnWkNBOUlGdGRMQ0JtSUQwZ1cxMHNJRzBnUFNBd0xDQmZJRDBnVzEwc0lHY2dQU0J1SUM4Z01pd2djQ0E5SURBN0NpQWdJQ0FnSUNBZ2RpZ3BMQ0JoSUQwOVBTQWhNU0FtSmlBb1pTQStJREFnSmlZZ2VDZ2hNQ2tzSUhRZ1BpQXdJQ1ltSUhnb0lURXBLU3dnZEdocGN5NXpaWFJKYm1SbGVDaG9LU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJSFpsS0hVc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QjJaU2hrTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUIyWlNobUxDQXlLU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZGlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0J1WlhjZ1FTd2dZaUE5SUc1bGR5QkJMQ0IzSUQwZ01Dd2dVaUE5SUNoMElDMGdaU2tnTHlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWtnUFNBd095QkpJRHc5SUhJN0lFa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RTQTlJRnRkTENCVUlEMGdTU0F2SUhJc0lFOGdQU0JVSUNvZ0tIUWdMU0JsS1NBcklHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGa2dQU0F3T3lCWklEdzlJR2s3SUZrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0JaSUM4Z2FTd2dWU0E5SUNRZ0tpQmpJQ3NnYnl3Z2VpQTlJRTFoZEdndWMybHVLRlVwTENCeElEMGdUV0YwYUM1amIzTW9WU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpNTRJRDBnVHlBcUlIb3NJR0l1ZVNBOUlDMVVJQ29nYmlBcklHY3NJR0l1ZWlBOUlFOGdLaUJ4TENCMUxuQjFjMmdvWWk1NExDQmlMbmtzSUdJdWVpa3NJSGt1YzJWMEtIb3NJRklzSUhFcExtNXZjbTFoYkdsNlpTZ3BMQ0JrTG5CMWMyZ29lUzU0TENCNUxua3NJSGt1ZWlrc0lHWXVjSFZ6YUNna0xDQXhJQzBnVkNrc0lFMHVjSFZ6YUNodEt5c3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYeTV3ZFhOb0tFMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdTU0E5SURBN0lFa2dQQ0JwT3lCSkt5c3BabTl5S0d4bGRDQk5JRDBnTURzZ1RTQThJSEk3SUUwckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlGOWJUVjFiU1Ywc0lFOGdQU0JmVzAwZ0t5QXhYVnRKWFN3Z1dTQTlJRjliVFNBcklERmRXMGtnS3lBeFhTd2dKQ0E5SUY5YlRWMWJTU0FySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FDNXdkWE5vS0ZRc0lFOHNJQ1FwTENCb0xuQjFjMmdvVHl3Z1dTd2dKQ2tzSUhjZ0t6MGdOanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzTG1Ga1pFZHliM1Z3S0hBc0lIY3NJREFwTENCd0lDczlJSGM3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhnb2VTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUcwc0lIY2dQU0J1WlhjZ1dpd2dVaUE5SUc1bGR5QkJMQ0JKSUQwZ01Dd2dUU0E5SUhrZ1BUMDlJQ0V3SUQ4Z1pTQTZJSFFzSUZRZ1BTQjVJRDA5UFNBaE1DQS9JREVnT2lBdE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JaSUQwZ01Uc2dXU0E4UFNCcE95QlpLeXNwZFM1d2RYTm9LREFzSUdjZ0tpQlVMQ0F3S1N3Z1pDNXdkWE5vS0RBc0lGUXNJREFwTENCbUxuQjFjMmdvTGpVc0lDNDFLU3dnYlNzck93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1R5QTlJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1dTQTlJREE3SUZrZ1BEMGdhVHNnV1NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ1dTQXZJR2tnS2lCaklDc2dieXdnZWlBOUlFMWhkR2d1WTI5ektGVXBMQ0J4SUQwZ1RXRjBhQzV6YVc0b1ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlNMbmdnUFNCTklDb2djU3dnVWk1NUlEMGdaeUFxSUZRc0lGSXVlaUE5SUUwZ0tpQjZMQ0IxTG5CMWMyZ29VaTU0TENCU0xua3NJRkl1ZWlrc0lHUXVjSFZ6YUNnd0xDQlVMQ0F3S1N3Z2R5NTRJRDBnZWlBcUlDNDFJQ3NnTGpVc0lIY3VlU0E5SUhFZ0tpQXVOU0FxSUZRZ0t5QXVOU3dnWmk1d2RYTm9LSGN1ZUN3Z2R5NTVLU3dnYlNzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1dTQTlJREE3SUZrZ1BDQnBPeUJaS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNCaUlDc2dXU3dnVlNBOUlFOGdLeUJaT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVNBOVBUMGdJVEFnUHlCb0xuQjFjMmdvVlN3Z1ZTQXJJREVzSUNRcElEb2dhQzV3ZFhOb0tGVWdLeUF4TENCVkxDQWtLU3dnU1NBclBTQXpPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3d1WVdSa1IzSnZkWEFvY0N3Z1NTd2dlU0E5UFQwZ0lUQWdQeUF4SURvZ01pa3NJSEFnS3owZ1NUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNXdZWEpoYldWMFpYSnpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCek1TaGxMbkpoWkdsMWMxUnZjQ3dnWlM1eVlXUnBkWE5DYjNSMGIyMHNJR1V1YUdWcFoyaDBMQ0JsTG5KaFpHbGhiRk5sWjIxbGJuUnpMQ0JsTG1obGFXZG9kRk5sWjIxbGJuUnpMQ0JsTG05d1pXNUZibVJsWkN3Z1pTNTBhR1YwWVZOMFlYSjBMQ0JsTG5Sb1pYUmhUR1Z1WjNSb0tUc0tJQ0FnSUgwS2ZTd2dXbThnUFNCamJHRnpjeUJ6TVNCbGVIUmxibVJ6SUU1eklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNU3dnYmlBOUlETXlMQ0JwSUQwZ01Td2djaUE5SUNFeExDQmhJRDBnTUN3Z2J5QTlJRTFoZEdndVVFa2dLaUF5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWd3TENCbExDQjBMQ0J1TENCcExDQnlMQ0JoTENCdktTd2dkR2hwY3k1MGVYQmxJRDBnSWtOdmJtVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2xoYkZObFoyMWxiblJ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2IzQmxia1Z1WkdWa09pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVk4wWVhKME9pQmhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVXhsYm1kMGFEb2did29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2djekVvWlM1eVlXUnBkWE1zSUdVdWFHVnBaMmgwTENCbExuSmhaR2xoYkZObFoyMWxiblJ6TENCbExtaGxhV2RvZEZObFoyMWxiblJ6TENCbExtOXdaVzVGYm1SbFpDd2daUzUwYUdWMFlWTjBZWEowTENCbExuUm9aWFJoVEdWdVozUm9LVHNLSUNBZ0lIMEtmU3dnWkdrZ1BTQmpiR0Z6Y3lCek1TQmxlSFJsYm1SeklFZGxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTd2dkQ0E5SUZ0ZExDQnVJRDBnTVN3Z2FTQTlJREFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlFiMng1YUdWa2NtOXVSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJwWTJWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJtUnBZMlZ6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2FRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmJYU3dnWVNBOUlGdGRPd29nSUNBZ0lDQWdJRzhvYVNrc0lHd29iaWtzSUdnb0tTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lIWmxLSElzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCMlpTaHlMbk5zYVdObEtDa3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lIWmxLR0VzSURJcEtTd2dhU0E5UFQwZ01DQS9JSFJvYVhNdVkyOXRjSFYwWlZabGNuUmxlRTV2Y20xaGJITW9LU0E2SUhSb2FYTXVibTl5YldGc2FYcGxUbTl5YldGc2N5Z3BPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzhvZGlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJRzVsZHlCQkxDQjVJRDBnYm1WM0lFRXNJR0lnUFNCdVpYY2dRVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCM0lEMGdNRHNnZHlBOElIUXViR1Z1WjNSb095QjNJQ3M5SURNcFppaDBXM2NnS3lBd1hTd2dlQ2tzSUdZb2RGdDNJQ3NnTVYwc0lIa3BMQ0JtS0hSYmR5QXJJREpkTENCaUtTd2dZeWg0TENCNUxDQmlMQ0IyS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1l5aDJMQ0I0TENCNUxDQmlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzSUQwZ1lpQXJJREVzSUZJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSklEMGdNRHNnU1NBOFBTQjNPeUJKS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VsdEpYU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTBnUFNCMkxtTnNiMjVsS0NrdWJHVnljQ2g1TENCSklDOGdkeWtzSUZRZ1BTQjRMbU5zYjI1bEtDa3ViR1Z5Y0NoNUxDQkpJQzhnZHlrc0lFOGdQU0IzSUMwZ1NUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1dTQTlJREE3SUZrZ1BEMGdUenNnV1NzcktWa2dQVDA5SURBZ0ppWWdTU0E5UFQwZ2R5QS9JRkpiU1YxYldWMGdQU0JOSURvZ1VsdEpYVnRaWFNBOUlFMHVZMnh2Ym1Vb0tTNXNaWEp3S0ZRc0lGa2dMeUJQS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVrZ1BTQXdPeUJKSUR3Z2R6c2dTU3NyS1dadmNpaHNaWFFnVFNBOUlEQTdJRTBnUENBeUlDb2dLSGNnTFNCSktTQXRJREU3SUUwckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFMWhkR2d1Wm14dmIzSW9UU0F2SURJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RTQWxJRElnUFQwOUlEQWdQeUFvWkNoU1cwbGRXMVFnS3lBeFhTa3NJR1FvVWx0SklDc2dNVjFiVkYwcExDQmtLRkpiU1YxYlZGMHBLU0E2SUNoa0tGSmJTVjFiVkNBcklERmRLU3dnWkNoU1cwa2dLeUF4WFZ0VUlDc2dNVjBwTENCa0tGSmJTU0FySURGZFcxUmRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiQ2gyS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdibVYzSUVFN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBN0lIa2dQQ0J5TG14bGJtZDBhRHNnZVNBclBTQXpLWGd1ZUNBOUlISmJlU0FySURCZExDQjRMbmtnUFNCeVcza2dLeUF4WFN3Z2VDNTZJRDBnY2x0NUlDc2dNbDBzSUhndWJtOXliV0ZzYVhwbEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2Rpa3NJSEpiZVNBcklEQmRJRDBnZUM1NExDQnlXM2tnS3lBeFhTQTlJSGd1ZVN3Z2NsdDVJQ3NnTWwwZ1BTQjRMbm83Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdnb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYm1WM0lFRTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQTdJSGdnUENCeUxteGxibWQwYURzZ2VDQXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZdWVDQTlJSEpiZUNBcklEQmRMQ0IyTG5rZ1BTQnlXM2dnS3lBeFhTd2dkaTU2SUQwZ2NsdDRJQ3NnTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUdjb2Rpa2dMeUF5SUM4Z1RXRjBhQzVRU1NBcklDNDFMQ0JpSUQwZ2NDaDJLU0F2SUUxaGRHZ3VVRWtnS3lBdU5Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRXVjSFZ6YUNoNUxDQXhJQzBnWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JTZ3BMQ0IxS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIVW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RpQTlJREE3SUhZZ1BDQmhMbXhsYm1kMGFEc2dkaUFyUFNBMktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1lWdDJJQ3NnTUYwc0lIa2dQU0JoVzNZZ0t5QXlYU3dnWWlBOUlHRmJkaUFySURSZExDQjNJRDBnVFdGMGFDNXRZWGdvZUN3Z2VTd2dZaWtzSUZJZ1BTQk5ZWFJvTG0xcGJpaDRMQ0I1TENCaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIY2dQaUF1T1NBbUppQlNJRHdnTGpFZ0ppWWdLSGdnUENBdU1pQW1KaUFvWVZ0MklDc2dNRjBnS3owZ01Ta3NJSGtnUENBdU1pQW1KaUFvWVZ0MklDc2dNbDBnS3owZ01Ta3NJR0lnUENBdU1pQW1KaUFvWVZ0MklDc2dORjBnS3owZ01Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHUW9kaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlMbkIxYzJnb2RpNTRMQ0IyTG5rc0lIWXVlaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdZb2Rpd2dlQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlIWWdLaUF6T3dvZ0lDQWdJQ0FnSUNBZ0lDQjRMbmdnUFNCbFcza2dLeUF3WFN3Z2VDNTVJRDBnWlZ0NUlDc2dNVjBzSUhndWVpQTlJR1ZiZVNBcklESmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJRzVsZHlCQkxDQjRJRDBnYm1WM0lFRXNJSGtnUFNCdVpYY2dRU3dnWWlBOUlHNWxkeUJCTENCM0lEMGdibVYzSUZvc0lGSWdQU0J1WlhjZ1dpd2dTU0E5SUc1bGR5QmFPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUUwZ1BTQXdMQ0JVSUQwZ01Ec2dUU0E4SUhJdWJHVnVaM1JvT3lCTklDczlJRGtzSUZRZ0t6MGdOaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyTG5ObGRDaHlXMDBnS3lBd1hTd2djbHROSUNzZ01WMHNJSEpiVFNBcklESmRLU3dnZUM1elpYUW9jbHROSUNzZ00xMHNJSEpiVFNBcklEUmRMQ0J5VzAwZ0t5QTFYU2tzSUhrdWMyVjBLSEpiVFNBcklEWmRMQ0J5VzAwZ0t5QTNYU3dnY2x0TklDc2dPRjBwTENCM0xuTmxkQ2hoVzFRZ0t5QXdYU3dnWVZ0VUlDc2dNVjBwTENCU0xuTmxkQ2hoVzFRZ0t5QXlYU3dnWVZ0VUlDc2dNMTBwTENCSkxuTmxkQ2hoVzFRZ0t5QTBYU3dnWVZ0VUlDc2dOVjBwTENCaUxtTnZjSGtvZGlrdVlXUmtLSGdwTG1Ga1pDaDVLUzVrYVhacFpHVlRZMkZzWVhJb015azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVHlBOUlHY29ZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmS0hjc0lGUWdLeUF3TENCMkxDQlBLU3dnWHloU0xDQlVJQ3NnTWl3Z2VDd2dUeWtzSUY4b1NTd2dWQ0FySURRc0lIa3NJRThwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRjhvZGl3Z2VDd2dlU3dnWWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpSUR3Z01DQW1KaUIyTG5nZ1BUMDlJREVnSmlZZ0tHRmJlRjBnUFNCMkxuZ2dMU0F4S1N3Z2VTNTRJRDA5UFNBd0lDWW1JSGt1ZWlBOVBUMGdNQ0FtSmlBb1lWdDRYU0E5SUdJZ0x5QXlJQzhnVFdGMGFDNVFTU0FySUM0MUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaeWgyS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GMFlXNHlLSFl1ZWl3Z0xYWXVlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhBb2Rpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhkR0Z1TWlndGRpNTVMQ0JOWVhSb0xuTnhjblFvZGk1NElDb2dkaTU0SUNzZ2RpNTZJQ29nZGk1NktTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXVjR0Z5WVcxbGRHVnljeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2N6RW9aUzUyWlhKMGFXTmxjeXdnWlM1cGJtUnBZMlZ6TENCbExuSmhaR2wxY3l3Z1pTNWtaWFJoYVd4ektUc0tJQ0FnSUgwS2ZTd2dTbThnUFNCamJHRnpjeUJ6TVNCbGVIUmxibVJ6SUdScElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0FvTVNBcklFMWhkR2d1YzNGeWRDZzFLU2tnTHlBeUxDQnBJRDBnTVNBdklHNHNJSElnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdrc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdrc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR2tLSUNBZ0lDQWdJQ0JkTENCaElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdNVFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURFMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TXl3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01Ua3NDaUFnSUNBZ0lDQWdJQ0FnSURFM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOeXdLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UVXNDaUFnSUNBZ0lDQWdJQ0FnSURFM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE55d0tJQ0FnSUNBZ0lDQWdJQ0FnT0N3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTml3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRZc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNVElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdNVFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TXl3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UTXNDaUFnSUNBZ0lDQWdJQ0FnSURFMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNeXdLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01USXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREV5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnT1N3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Ua3NDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRrc0NpQWdJQ0FnSUNBZ0lDQWdJREUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Td0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TkN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UUXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURrS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0hJc0lHRXNJR1VzSUhRcExDQjBhR2x6TG5SNWNHVWdQU0FpUkc5a1pXTmhhR1ZrY205dVIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QnpNU2hsTG5KaFpHbDFjeXdnWlM1a1pYUmhhV3dwT3dvZ0lDQWdmUXA5TENCMmNpQTlJRzVsZHlCQkxDQjVjaUE5SUc1bGR5QkJMQ0JoYnlBOUlHNWxkeUJCTENCTmNpQTlJRzVsZHlCVmJpd2dKRzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRWRsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzTENCMElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYVdZZ0tITjFjR1Z5S0Nrc0lIUm9hWE11ZEhsd1pTQTlJQ0pGWkdkbGMwZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCblpXOXRaWFJ5ZVRvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdoeVpYTm9iMnhrUVc1bmJHVTZJSFFLSUNBZ0lDQWdJQ0I5TENCbElDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnVFdGMGFDNXdiM2NvTVRBc0lEUXBMQ0J5SUQwZ1RXRjBhQzVqYjNNb1lXa2dLaUIwS1N3Z1lTQTlJR1V1WjJWMFNXNWtaWGdvS1N3Z2J5QTlJR1V1WjJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXBMQ0JqSUQwZ1lTQS9JR0V1WTI5MWJuUWdPaUJ2TG1OdmRXNTBMQ0JzSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdJQ0FnSUYwc0lHZ2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpWVNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaVlpSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlZeUlLSUNBZ0lDQWdJQ0FnSUNBZ1hTd2dkU0E5SUc1bGR5QkJjbkpoZVNnektTd2daQ0E5SUh0OUxDQm1JRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBN0lHMGdQQ0JqT3lCdElDczlJRE1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBL0lDaHNXekJkSUQwZ1lTNW5aWFJZS0cwcExDQnNXekZkSUQwZ1lTNW5aWFJZS0cwZ0t5QXhLU3dnYkZzeVhTQTlJR0V1WjJWMFdDaHRJQ3NnTWlrcElEb2dLR3hiTUYwZ1BTQnRMQ0JzV3pGZElEMGdiU0FySURFc0lHeGJNbDBnUFNCdElDc2dNaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2V5QmhPaUJmSUN3Z1lqb2daeUFzSUdNNklIQWdJSDBnUFNCTmNqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hmTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2J5d2diRnN3WFNrc0lHY3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h2TENCc1d6RmRLU3dnY0M1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHOHNJR3hiTWwwcExDQk5jaTVuWlhST2IzSnRZV3dvWVc4cExDQjFXekJkSUQwZ1lDUjdUV0YwYUM1eWIzVnVaQ2hmTG5nZ0tpQnBLWDBzSkh0TllYUm9Mbkp2ZFc1a0tGOHVlU0FxSUdrcGZTd2tlMDFoZEdndWNtOTFibVFvWHk1NklDb2dhU2w5WUN3Z2RWc3hYU0E5SUdBa2UwMWhkR2d1Y205MWJtUW9aeTU0SUNvZ2FTbDlMQ1I3VFdGMGFDNXliM1Z1WkNobkxua2dLaUJwS1gwc0pIdE5ZWFJvTG5KdmRXNWtLR2N1ZWlBcUlHa3BmV0FzSUhWYk1sMGdQU0JnSkh0TllYUm9Mbkp2ZFc1a0tIQXVlQ0FxSUdrcGZTd2tlMDFoZEdndWNtOTFibVFvY0M1NUlDb2dhU2w5TENSN1RXRjBhQzV5YjNWdVpDaHdMbm9nS2lCcEtYMWdMQ0FoS0hWYk1GMGdQVDA5SUhWYk1WMGdmSHdnZFZzeFhTQTlQVDBnZFZzeVhTQjhmQ0IxV3pKZElEMDlQU0IxV3pCZEtTa2dabTl5S0d4bGRDQjJJRDBnTURzZ2RpQThJRE03SUhZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0FvZGlBcklERXBJQ1VnTXl3Z2VTQTlJSFZiZGwwc0lHSWdQU0IxVzNoZExDQjNJRDBnVFhKYmFGdDJYVjBzSUZJZ1BTQk5jbHRvVzNoZFhTd2dTU0E5SUdBa2UzbDlYeVI3WW4xZ0xDQk5JRDBnWUNSN1luMWZKSHQ1ZldBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUU0JwYmlCa0lDWW1JR1JiVFYwZ1B5QW9ZVzh1Wkc5MEtHUmJUVjB1Ym05eWJXRnNLU0E4UFNCeUlDWW1JQ2htTG5CMWMyZ29keTU0TENCM0xua3NJSGN1ZWlrc0lHWXVjSFZ6YUNoU0xuZ3NJRkl1ZVN3Z1VpNTZLU2tzSUdSYlRWMGdQU0J1ZFd4c0tTQTZJRWtnYVc0Z1pDQjhmQ0FvWkZ0SlhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnd09pQnNXM1pkTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVERTZJR3hiZUYwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiRG9nWVc4dVkyeHZibVVvS1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0JwYmlCa0tXbG1JQ2hrVzIxZEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZXlCcGJtUmxlREE2SUY4Z0xDQnBibVJsZURFNklHY2dJSDBnUFNCa1cyMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbkl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodkxDQmZLU3dnZVhJdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHZMQ0JuS1N3Z1ppNXdkWE5vS0haeUxuZ3NJSFp5TG5rc0lIWnlMbm9wTENCbUxuQjFjMmdvZVhJdWVDd2dlWEl1ZVN3Z2VYSXVlaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJSFpsS0dZc0lETXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzV3WVhKaGJXVjBaWEp6S1N3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnUm00Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdwcElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBMQ0IwYUdsekxuVjFhV1FnUFNCcmRDZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhjR1VpTENCMGFHbHpMbWh2YkdWeklEMGdXMTA3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEhOSWIyeGxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkR2hwY3k1b2IyeGxjeTVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEZ0dVhTQTlJSFJvYVhNdWFHOXNaWE5iYmwwdVoyVjBVRzlwYm5SektHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRkJ2YVc1MGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1U2SUhSb2FYTXVaMlYwVUc5cGJuUnpLR1VwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9iMnhsY3pvZ2RHaHBjeTVuWlhSUWIybHVkSE5JYjJ4bGN5aGxLUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtaHZiR1Z6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1YUc5c1pYTXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtaHZiR1Z6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtaHZiR1Z6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExuVjFhV1FnUFNCMGFHbHpMblYxYVdRc0lHVXVhRzlzWlhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NW9iMnhsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWFHOXNaWE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1YUc5c1pYTXVjSFZ6YUNocExuUnZTbE5QVGlncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZFhWcFpDQTlJR1V1ZFhWcFpDd2dkR2hwY3k1b2IyeGxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbWh2YkdWekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1b2IyeGxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1b2IyeGxjeTV3ZFhOb0tHNWxkeUJxYVNncExtWnliMjFLVTA5T0tHa3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHVjRJRDBnZXdvZ0lDQWdkSEpwWVc1bmRXeGhkR1U2SUdaMWJtTjBhVzl1S0hNeExDQmxMQ0IwSUQwZ01pa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaU0FtSmlCbExteGxibWQwYUN3Z2FTQTlJRzRnUHlCbFd6QmRJQ29nZENBNklITXhMbXhsYm1kMGFDd2djaUE5SUZCa0tITXhMQ0F3TENCcExDQjBMQ0FoTUNrc0lHRWdQU0JiWFRzS0lDQWdJQ0FnSUNCcFppQW9JWElnZkh3Z2NpNXVaWGgwSUQwOVBTQnlMbkJ5WlhZcElISmxkSFZ5YmlCaE93b2dJQ0FnSUNBZ0lHeGxkQ0J2TENCakxDQnNMQ0JvTENCMUxDQmtMQ0JtT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJQ1ltSUNoeUlEMGdjbmdvY3pFc0lHVXNJSElzSUhRcEtTd2djekV1YkdWdVozUm9JRDRnT0RBZ0tpQjBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0JzSUQwZ2N6RmJNRjBzSUdNZ1BTQm9JRDBnY3pGYk1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlIUTdJRzBnUENCcE95QnRJQ3M5SUhRcGRTQTlJSE14VzIxZExDQmtJRDBnY3pGYmJTQXJJREZkTENCMUlEd2dieUFtSmlBb2J5QTlJSFVwTENCa0lEd2dZeUFtSmlBb1l5QTlJR1FwTENCMUlENGdiQ0FtSmlBb2JDQTlJSFVwTENCa0lENGdhQ0FtSmlBb2FDQTlJR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1JRDBnVFdGMGFDNXRZWGdvYkNBdElHOHNJR2dnTFNCaktTd2daaUE5SUdZZ0lUMDlJREFnUHlBek1qYzJOeUF2SUdZZ09pQXdPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUM01vY2l3Z1lTd2dkQ3dnYnl3Z1l5d2daaXdnTUNrc0lHRTdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRkJrS0hNeExDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnNaWFFnY2l3Z1lUc0tJQ0FnSUdsbUlDaHBJRDA5UFNCbmVDaHpNU3dnWlN3Z2RDd2diaWtnUGlBd0tTQm1iM0lvY2lBOUlHVTdJSElnUENCME95QnlJQ3M5SUc0cFlTQTlJSFIxS0hJc0lITXhXM0pkTENCek1WdHlJQ3NnTVYwc0lHRXBPd29nSUNBZ1pXeHpaU0JtYjNJb2NpQTlJSFFnTFNCdU95QnlJRDQ5SUdVN0lISWdMVDBnYmlsaElEMGdkSFVvY2l3Z2N6RmJjbDBzSUhNeFczSWdLeUF4WFN3Z1lTazdDaUFnSUNCeVpYUjFjbTRnWVNBbUppQk5ZU2hoTENCaExtNWxlSFFwSUNZbUlDaENjeWhoS1N3Z1lTQTlJR0V1Ym1WNGRDa3NJR0U3Q24wS1puVnVZM1JwYjI0Z1pta29jekVzSUdVcElIc0tJQ0FnSUdsbUlDZ2hjekVwSUhKbGRIVnliaUJ6TVRzS0lDQWdJR1VnZkh3Z0tHVWdQU0J6TVNrN0NpQWdJQ0JzWlhRZ2RDQTlJSE14TENCdU93b2dJQ0FnWkc4Z2FXWWdLRzRnUFNBaE1Td2dJWFF1YzNSbGFXNWxjaUFtSmlBb1RXRW9kQ3dnZEM1dVpYaDBLU0I4ZkNCemRDaDBMbkJ5WlhZc0lIUXNJSFF1Ym1WNGRDa2dQVDA5SURBcEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0VKektIUXBMQ0IwSUQwZ1pTQTlJSFF1Y0hKbGRpd2dkQ0E5UFQwZ2RDNXVaWGgwS1NCaWNtVmhhenNLSUNBZ0lDQWdJQ0J1SUQwZ0lUQTdDaUFnSUNCOUlHVnNjMlVnZENBOUlIUXVibVY0ZERzS0lDQWdJSGRvYVd4bElDaHVJSHg4SUhRZ0lUMDlJR1VwQ2lBZ0lDQnlaWFIxY200Z1pUc0tmUXBtZFc1amRHbHZiaUJQY3loek1Td2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z1lTa2dld29nSUNBZ2FXWWdLQ0Z6TVNrZ2NtVjBkWEp1T3dvZ0lDQWdJV0VnSmlZZ2NpQW1KaUJvZUNoek1Td2diaXdnYVN3Z2NpazdDaUFnSUNCc1pYUWdieUE5SUhNeExDQmpMQ0JzT3dvZ0lDQWdabTl5S0RzZ2N6RXVjSEpsZGlBaFBUMGdjekV1Ym1WNGREc3Bld29nSUNBZ0lDQWdJR2xtSUNoaklEMGdjekV1Y0hKbGRpd2diQ0E5SUhNeExtNWxlSFFzSUhJZ1B5QnVlQ2h6TVN3Z2Jpd2dhU3dnY2lrZ09pQjBlQ2h6TVNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1d2RYTm9LR011YVNBdklIUWdmQ0F3S1N3Z1pTNXdkWE5vS0hNeExta2dMeUIwSUh3Z01Da3NJR1V1Y0hWemFDaHNMbWtnTHlCMElId2dNQ2tzSUVKektITXhLU3dnY3pFZ1BTQnNMbTVsZUhRc0lHOGdQU0JzTG01bGVIUTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9jekVnUFNCc0xDQnpNU0E5UFQwZ2J5a2dld29nSUNBZ0lDQWdJQ0FnSUNCaElEOGdZU0E5UFQwZ01TQS9JQ2h6TVNBOUlHbDRLR1pwS0hNeEtTd2daU3dnZENrc0lFOXpLSE14TENCbExDQjBMQ0J1TENCcExDQnlMQ0F5S1NrZ09pQmhJRDA5UFNBeUlDWW1JSE40S0hNeExDQmxMQ0IwTENCdUxDQnBMQ0J5S1NBNklFOXpLR1pwS0hNeEtTd2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUIwZUNoek1Ta2dld29nSUNBZ2JHVjBJR1VnUFNCek1TNXdjbVYyTENCMElEMGdjekVzSUc0Z1BTQnpNUzV1WlhoME93b2dJQ0FnYVdZZ0tITjBLR1VzSUhRc0lHNHBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUd4bGRDQnBJRDBnWlM1NExDQnlJRDBnZEM1NExDQmhJRDBnYmk1NExDQnZJRDBnWlM1NUxDQmpJRDBnZEM1NUxDQnNJRDBnYmk1NUxDQm9JRDBnYVNBOElISWdQeUJwSUR3Z1lTQS9JR2tnT2lCaElEb2djaUE4SUdFZ1B5QnlJRG9nWVN3Z2RTQTlJRzhnUENCaklEOGdieUE4SUd3Z1B5QnZJRG9nYkNBNklHTWdQQ0JzSUQ4Z1l5QTZJR3dzSUdRZ1BTQnBJRDRnY2lBL0lHa2dQaUJoSUQ4Z2FTQTZJR0VnT2lCeUlENGdZU0EvSUhJZ09pQmhMQ0JtSUQwZ2J5QStJR01nUHlCdklENGdiQ0EvSUc4Z09pQnNJRG9nWXlBK0lHd2dQeUJqSURvZ2JDd2diU0E5SUc0dWJtVjRkRHNLSUNBZ0lHWnZjaWc3SUcwZ0lUMDlJR1U3S1hzS0lDQWdJQ0FnSUNCcFppQW9iUzU0SUQ0OUlHZ2dKaVlnYlM1NElEdzlJR1FnSmlZZ2JTNTVJRDQ5SUhVZ0ppWWdiUzU1SUR3OUlHWWdKaVlnUjJrb2FTd2dieXdnY2l3Z1l5d2dZU3dnYkN3Z2JTNTRMQ0J0TG5rcElDWW1JSE4wS0cwdWNISmxkaXdnYlN3Z2JTNXVaWGgwS1NBK1BTQXdLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnYlNBOUlHMHVibVY0ZERzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlBaE1Ec0tmUXBtZFc1amRHbHZiaUJ1ZUNoek1Td2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCek1TNXdjbVYyTENCeUlEMGdjekVzSUdFZ1BTQnpNUzV1WlhoME93b2dJQ0FnYVdZZ0tITjBLR2tzSUhJc0lHRXBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUd4bGRDQnZJRDBnYVM1NExDQmpJRDBnY2k1NExDQnNJRDBnWVM1NExDQm9JRDBnYVM1NUxDQjFJRDBnY2k1NUxDQmtJRDBnWVM1NUxDQm1JRDBnYnlBOElHTWdQeUJ2SUR3Z2JDQS9JRzhnT2lCc0lEb2dZeUE4SUd3Z1B5QmpJRG9nYkN3Z2JTQTlJR2dnUENCMUlEOGdhQ0E4SUdRZ1B5Qm9JRG9nWkNBNklIVWdQQ0JrSUQ4Z2RTQTZJR1FzSUY4Z1BTQnZJRDRnWXlBL0lHOGdQaUJzSUQ4Z2J5QTZJR3dnT2lCaklENGdiQ0EvSUdNZ09pQnNMQ0JuSUQwZ2FDQStJSFVnUHlCb0lENGdaQ0EvSUdnZ09pQmtJRG9nZFNBK0lHUWdQeUIxSURvZ1pDd2djQ0E5SUV0dktHWXNJRzBzSUdVc0lIUXNJRzRwTENCMklEMGdTMjhvWHl3Z1p5d2daU3dnZEN3Z2Jpa3NJSGdnUFNCek1TNXdjbVYyV2l3Z2VTQTlJSE14TG01bGVIUmFPd29nSUNBZ1ptOXlLRHNnZUNBbUppQjRMbm9nUGowZ2NDQW1KaUI1SUNZbUlIa3VlaUE4UFNCMk95bDdDaUFnSUNBZ0lDQWdhV1lnS0hndWVDQStQU0JtSUNZbUlIZ3VlQ0E4UFNCZklDWW1JSGd1ZVNBK1BTQnRJQ1ltSUhndWVTQThQU0JuSUNZbUlIZ2dJVDA5SUdrZ0ppWWdlQ0FoUFQwZ1lTQW1KaUJIYVNodkxDQm9MQ0JqTENCMUxDQnNMQ0JrTENCNExuZ3NJSGd1ZVNrZ0ppWWdjM1FvZUM1d2NtVjJMQ0I0TENCNExtNWxlSFFwSUQ0OUlEQWdmSHdnS0hnZ1BTQjRMbkJ5WlhaYUxDQjVMbmdnUGowZ1ppQW1KaUI1TG5nZ1BEMGdYeUFtSmlCNUxua2dQajBnYlNBbUppQjVMbmtnUEQwZ1p5QW1KaUI1SUNFOVBTQnBJQ1ltSUhrZ0lUMDlJR0VnSmlZZ1Iya29ieXdnYUN3Z1l5d2dkU3dnYkN3Z1pDd2dlUzU0TENCNUxua3BJQ1ltSUhOMEtIa3VjSEpsZGl3Z2VTd2dlUzV1WlhoMEtTQStQU0F3S1NrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lIa2dQU0I1TG01bGVIUmFPd29nSUNBZ2ZRb2dJQ0FnWm05eUtEc2dlQ0FtSmlCNExub2dQajBnY0RzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2g0TG5nZ1BqMGdaaUFtSmlCNExuZ2dQRDBnWHlBbUppQjRMbmtnUGowZ2JTQW1KaUI0TG5rZ1BEMGdaeUFtSmlCNElDRTlQU0JwSUNZbUlIZ2dJVDA5SUdFZ0ppWWdSMmtvYnl3Z2FDd2dZeXdnZFN3Z2JDd2daQ3dnZUM1NExDQjRMbmtwSUNZbUlITjBLSGd1Y0hKbGRpd2dlQ3dnZUM1dVpYaDBLU0ErUFNBd0tTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdlQ0E5SUhndWNISmxkbG83Q2lBZ0lDQjlDaUFnSUNCbWIzSW9PeUI1SUNZbUlIa3VlaUE4UFNCMk95bDdDaUFnSUNBZ0lDQWdhV1lnS0hrdWVDQStQU0JtSUNZbUlIa3VlQ0E4UFNCZklDWW1JSGt1ZVNBK1BTQnRJQ1ltSUhrdWVTQThQU0JuSUNZbUlIa2dJVDA5SUdrZ0ppWWdlU0FoUFQwZ1lTQW1KaUJIYVNodkxDQm9MQ0JqTENCMUxDQnNMQ0JrTENCNUxuZ3NJSGt1ZVNrZ0ppWWdjM1FvZVM1d2NtVjJMQ0I1TENCNUxtNWxlSFFwSUQ0OUlEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0I1SUQwZ2VTNXVaWGgwV2pzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlBaE1Ec0tmUXBtZFc1amRHbHZiaUJwZUNoek1Td2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J6TVRzS0lDQWdJR1J2SUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0dWNISmxkaXdnY2lBOUlHNHVibVY0ZEM1dVpYaDBPd29nSUNBZ0lDQWdJQ0ZOWVNocExDQnlLU0FtSmlCTVpDaHBMQ0J1TENCdUxtNWxlSFFzSUhJcElDWW1JRVp6S0drc0lISXBJQ1ltSUVaektISXNJR2twSUNZbUlDaGxMbkIxYzJnb2FTNXBJQzhnZENCOElEQXBMQ0JsTG5CMWMyZ29iaTVwSUM4Z2RDQjhJREFwTENCbExuQjFjMmdvY2k1cElDOGdkQ0I4SURBcExDQkNjeWh1S1N3Z1FuTW9iaTV1WlhoMEtTd2diaUE5SUhNeElEMGdjaWtzSUc0Z1BTQnVMbTVsZUhRN0NpQWdJQ0I5ZDJocGJHVWdLRzRnSVQwOUlITXhLUW9nSUNBZ2NtVjBkWEp1SUdacEtHNHBPd3A5Q21aMWJtTjBhVzl1SUhONEtITXhMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNCc1pYUWdZU0E5SUhNeE93b2dJQ0FnWkc4Z2V3b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1lTNXVaWGgwTG01bGVIUTdDaUFnSUNBZ0lDQWdabTl5S0RzZ2J5QWhQVDBnWVM1d2NtVjJPeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoTG1rZ0lUMDlJRzh1YVNBbUppQm1lQ2hoTENCdktTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQkpaQ2hoTENCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JtYVNoaExDQmhMbTVsZUhRcExDQmpJRDBnWm1rb1l5d2dZeTV1WlhoMEtTd2dUM01vWVN3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnTUNrc0lFOXpLR01zSUdVc0lIUXNJRzRzSUdrc0lISXNJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdkxtNWxlSFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdFZ1BTQmhMbTVsZUhRN0NpQWdJQ0I5ZDJocGJHVWdLR0VnSVQwOUlITXhLUXA5Q21aMWJtTjBhVzl1SUhKNEtITXhMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlGdGRMQ0J5TENCaExDQnZMQ0JqTENCc093b2dJQ0FnWm05eUtISWdQU0F3TENCaElEMGdaUzVzWlc1bmRHZzdJSElnUENCaE95QnlLeXNwYnlBOUlHVmJjbDBnS2lCdUxDQmpJRDBnY2lBOElHRWdMU0F4SUQ4Z1pWdHlJQ3NnTVYwZ0tpQnVJRG9nY3pFdWJHVnVaM1JvTENCc0lEMGdVR1FvY3pFc0lHOHNJR01zSUc0c0lDRXhLU3dnYkNBOVBUMGdiQzV1WlhoMElDWW1JQ2hzTG5OMFpXbHVaWElnUFNBaE1Da3NJR2t1Y0hWemFDaGtlQ2hzS1NrN0NpQWdJQ0JtYjNJb2FTNXpiM0owS0dGNEtTd2djaUE5SURBN0lISWdQQ0JwTG14bGJtZDBhRHNnY2lzcktYUWdQU0J2ZUNocFczSmRMQ0IwS1RzS0lDQWdJSEpsZEhWeWJpQjBPd3A5Q21aMWJtTjBhVzl1SUdGNEtITXhMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjekV1ZUNBdElHVXVlRHNLZlFwbWRXNWpkR2x2YmlCdmVDaHpNU3dnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0JqZUNoek1Td2daU2s3Q2lBZ0lDQnBaaUFvSVhRcElISmxkSFZ5YmlCbE93b2dJQ0FnYkdWMElHNGdQU0JKWkNoMExDQnpNU2s3Q2lBZ0lDQnlaWFIxY200Z1pta29iaXdnYmk1dVpYaDBLU3dnWm1rb2RDd2dkQzV1WlhoMEtUc0tmUXBtZFc1amRHbHZiaUJqZUNoek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQmxMQ0J1SUQwZ0xURWdMeUF3TENCcExDQnlJRDBnY3pFdWVDd2dZU0E5SUhNeExuazdDaUFnSUNCa2J5QjdDaUFnSUNBZ0lDQWdhV1lnS0dFZ1BEMGdkQzU1SUNZbUlHRWdQajBnZEM1dVpYaDBMbmtnSmlZZ2RDNXVaWGgwTG5rZ0lUMDlJSFF1ZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJSFF1ZUNBcklDaGhJQzBnZEM1NUtTQXFJQ2gwTG01bGVIUXVlQ0F0SUhRdWVDa2dMeUFvZEM1dVpYaDBMbmtnTFNCMExua3BPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aQ0E4UFNCeUlDWW1JR1FnUGlCdUlDWW1JQ2h1SUQwZ1pDd2dhU0E5SUhRdWVDQThJSFF1Ym1WNGRDNTRJRDhnZENBNklIUXVibVY0ZEN3Z1pDQTlQVDBnY2lrcElISmxkSFZ5YmlCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2ZYZG9hV3hsSUNoMElDRTlQU0JsS1FvZ0lDQWdhV1lnS0NGcEtTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lHeGxkQ0J2SUQwZ2FTd2dZeUE5SUdrdWVDd2diQ0E5SUdrdWVTd2dhQ0E5SURFZ0x5QXdMQ0IxT3dvZ0lDQWdkQ0E5SUdrN0NpQWdJQ0JrYnlCeUlENDlJSFF1ZUNBbUppQjBMbmdnUGowZ1l5QW1KaUJ5SUNFOVBTQjBMbmdnSmlZZ1Iya29ZU0E4SUd3Z1B5QnlJRG9nYml3Z1lTd2dZeXdnYkN3Z1lTQThJR3dnUHlCdUlEb2djaXdnWVN3Z2RDNTRMQ0IwTG5rcElDWW1JQ2gxSUQwZ1RXRjBhQzVoWW5Nb1lTQXRJSFF1ZVNrZ0x5QW9jaUF0SUhRdWVDa3NJRVp6S0hRc0lITXhLU0FtSmlBb2RTQThJR2dnZkh3Z2RTQTlQVDBnYUNBbUppQW9kQzU0SUQ0Z2FTNTRJSHg4SUhRdWVDQTlQVDBnYVM1NElDWW1JR3g0S0drc0lIUXBLU2tnSmlZZ0tHa2dQU0IwTENCb0lEMGdkU2twTENCMElEMGdkQzV1WlhoME93b2dJQ0FnZDJocGJHVWdLSFFnSVQwOUlHOHBDaUFnSUNCeVpYUjFjbTRnYVRzS2ZRcG1kVzVqZEdsdmJpQnNlQ2h6TVN3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhOMEtITXhMbkJ5WlhZc0lITXhMQ0JsTG5CeVpYWXBJRHdnTUNBbUppQnpkQ2hsTG01bGVIUXNJSE14TENCek1TNXVaWGgwS1NBOElEQTdDbjBLWm5WdVkzUnBiMjRnYUhnb2N6RXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2N6RTdDaUFnSUNCa2J5QnBMbm9nUFQwOUlEQWdKaVlnS0drdWVpQTlJRXR2S0drdWVDd2dhUzU1TENCbExDQjBMQ0J1S1Nrc0lHa3VjSEpsZGxvZ1BTQnBMbkJ5WlhZc0lHa3VibVY0ZEZvZ1BTQnBMbTVsZUhRc0lHa2dQU0JwTG01bGVIUTdDaUFnSUNCM2FHbHNaU0FvYVNBaFBUMGdjekVwQ2lBZ0lDQnBMbkJ5WlhaYUxtNWxlSFJhSUQwZ2JuVnNiQ3dnYVM1d2NtVjJXaUE5SUc1MWJHd3NJSFY0S0drcE93cDlDbVoxYm1OMGFXOXVJSFY0S0hNeEtTQjdDaUFnSUNCc1pYUWdaU3dnZEN3Z2Jpd2dhU3dnY2l3Z1lTd2dieXdnWXl3Z2JDQTlJREU3Q2lBZ0lDQmtieUI3Q2lBZ0lDQWdJQ0FnWm05eUtIUWdQU0J6TVN3Z2N6RWdQU0J1ZFd4c0xDQnlJRDBnYm5Wc2JDd2dZU0E5SURBN0lIUTdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR0VyS3l3Z2JpQTlJSFFzSUc4Z1BTQXdMQ0JsSUQwZ01Ec2daU0E4SUd3Z0ppWWdLRzhyS3l3Z2JpQTlJRzR1Ym1WNGRGb3NJQ0VoYmlrN0lHVXJLeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhqSUQwZ2JEc2dieUErSURBZ2ZId2dZeUErSURBZ0ppWWdianNwYnlBaFBUMGdNQ0FtSmlBb1l5QTlQVDBnTUNCOGZDQWhiaUI4ZkNCMExub2dQRDBnYmk1NktTQS9JQ2hwSUQwZ2RDd2dkQ0E5SUhRdWJtVjRkRm9zSUc4dExTa2dPaUFvYVNBOUlHNHNJRzRnUFNCdUxtNWxlSFJhTENCakxTMHBMQ0J5SUQ4Z2NpNXVaWGgwV2lBOUlHa2dPaUJ6TVNBOUlHa3NJR2t1Y0hKbGRsb2dQU0J5TENCeUlEMGdhVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJRzQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhJdWJtVjRkRm9nUFNCdWRXeHNMQ0JzSUNvOUlESTdDaUFnSUNCOWQyaHBiR1VnS0dFZ1BpQXhLUW9nSUNBZ2NtVjBkWEp1SUhNeE93cDlDbVoxYm1OMGFXOXVJRXR2S0hNeExDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnlaWFIxY200Z2N6RWdQU0FvY3pFZ0xTQjBLU0FxSUdrZ2ZDQXdMQ0JsSUQwZ0tHVWdMU0J1S1NBcUlHa2dmQ0F3TENCek1TQTlJQ2h6TVNCOElITXhJRHc4SURncElDWWdNVFkzTVRFNU16VXNJSE14SUQwZ0tITXhJSHdnY3pFZ1BEd2dOQ2tnSmlBeU5USTJORFV4TXpVc0lITXhJRDBnS0hNeElId2djekVnUER3Z01pa2dKaUE0TlRnNU9UTTBOVGtzSUhNeElEMGdLSE14SUh3Z2N6RWdQRHdnTVNrZ0ppQXhORE14TmpVMU56WTFMQ0JsSUQwZ0tHVWdmQ0JsSUR3OElEZ3BJQ1lnTVRZM01URTVNelVzSUdVZ1BTQW9aU0I4SUdVZ1BEd2dOQ2tnSmlBeU5USTJORFV4TXpVc0lHVWdQU0FvWlNCOElHVWdQRHdnTWlrZ0ppQTROVGc1T1RNME5Ua3NJR1VnUFNBb1pTQjhJR1VnUER3Z01Ta2dKaUF4TkRNeE5qVTFOelkxTENCek1TQjhJR1VnUER3Z01Uc0tmUXBtZFc1amRHbHZiaUJrZUNoek1Ta2dld29nSUNBZ2JHVjBJR1VnUFNCek1Td2dkQ0E5SUhNeE93b2dJQ0FnWkc4Z0tHVXVlQ0E4SUhRdWVDQjhmQ0JsTG5nZ1BUMDlJSFF1ZUNBbUppQmxMbmtnUENCMExua3BJQ1ltSUNoMElEMGdaU2tzSUdVZ1BTQmxMbTVsZUhRN0NpQWdJQ0IzYUdsc1pTQW9aU0FoUFQwZ2N6RXBDaUFnSUNCeVpYUjFjbTRnZERzS2ZRcG1kVzVqZEdsdmJpQkhhU2h6TVN3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnWVN3Z2J5a2dld29nSUNBZ2NtVjBkWEp1SUNocElDMGdZU2tnS2lBb1pTQXRJRzhwSUQ0OUlDaHpNU0F0SUdFcElDb2dLSElnTFNCdktTQW1KaUFvY3pFZ0xTQmhLU0FxSUNodUlDMGdieWtnUGowZ0tIUWdMU0JoS1NBcUlDaGxJQzBnYnlrZ0ppWWdLSFFnTFNCaEtTQXFJQ2h5SUMwZ2J5a2dQajBnS0drZ0xTQmhLU0FxSUNodUlDMGdieWs3Q24wS1puVnVZM1JwYjI0Z1puZ29jekVzSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6TVM1dVpYaDBMbWtnSVQwOUlHVXVhU0FtSmlCek1TNXdjbVYyTG1rZ0lUMDlJR1V1YVNBbUppQWhjSGdvY3pFc0lHVXBJQ1ltSUNoR2N5aHpNU3dnWlNrZ0ppWWdSbk1vWlN3Z2N6RXBJQ1ltSUcxNEtITXhMQ0JsS1NBbUppQW9jM1FvY3pFdWNISmxkaXdnY3pFc0lHVXVjSEpsZGlrZ2ZId2djM1FvY3pFc0lHVXVjSEpsZGl3Z1pTa3BJSHg4SUUxaEtITXhMQ0JsS1NBbUppQnpkQ2h6TVM1d2NtVjJMQ0J6TVN3Z2N6RXVibVY0ZENrZ1BpQXdJQ1ltSUhOMEtHVXVjSEpsZGl3Z1pTd2daUzV1WlhoMEtTQStJREFwT3dwOUNtWjFibU4wYVc5dUlITjBLSE14TENCbExDQjBLU0I3Q2lBZ0lDQnlaWFIxY200Z0tHVXVlU0F0SUhNeExua3BJQ29nS0hRdWVDQXRJR1V1ZUNrZ0xTQW9aUzU0SUMwZ2N6RXVlQ2tnS2lBb2RDNTVJQzBnWlM1NUtUc0tmUXBtZFc1amRHbHZiaUJOWVNoek1Td2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXhMbmdnUFQwOUlHVXVlQ0FtSmlCek1TNTVJRDA5UFNCbExuazdDbjBLWm5WdVkzUnBiMjRnVEdRb2N6RXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ1luSW9jM1FvY3pFc0lHVXNJSFFwS1N3Z2NpQTlJR0p5S0hOMEtITXhMQ0JsTENCdUtTa3NJR0VnUFNCaWNpaHpkQ2gwTENCdUxDQnpNU2twTENCdklEMGdZbklvYzNRb2RDd2diaXdnWlNrcE93b2dJQ0FnY21WMGRYSnVJQ0VoS0drZ0lUMDlJSElnSmlZZ1lTQWhQVDBnYnlCOGZDQnBJRDA5UFNBd0lDWW1JRk55S0hNeExDQjBMQ0JsS1NCOGZDQnlJRDA5UFNBd0lDWW1JRk55S0hNeExDQnVMQ0JsS1NCOGZDQmhJRDA5UFNBd0lDWW1JRk55S0hRc0lITXhMQ0J1S1NCOGZDQnZJRDA5UFNBd0lDWW1JRk55S0hRc0lHVXNJRzRwS1RzS2ZRcG1kVzVqZEdsdmJpQlRjaWh6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHVXVlQ0E4UFNCTllYUm9MbTFoZUNoek1TNTRMQ0IwTG5ncElDWW1JR1V1ZUNBK1BTQk5ZWFJvTG0xcGJpaHpNUzU0TENCMExuZ3BJQ1ltSUdVdWVTQThQU0JOWVhSb0xtMWhlQ2h6TVM1NUxDQjBMbmtwSUNZbUlHVXVlU0ErUFNCTllYUm9MbTFwYmloek1TNTVMQ0IwTG5rcE93cDlDbVoxYm1OMGFXOXVJR0p5S0hNeEtTQjdDaUFnSUNCeVpYUjFjbTRnY3pFZ1BpQXdJRDhnTVNBNklITXhJRHdnTUNBL0lDMHhJRG9nTURzS2ZRcG1kVzVqZEdsdmJpQndlQ2h6TVN3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCek1Uc0tJQ0FnSUdSdklIc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1cElDRTlQU0J6TVM1cElDWW1JSFF1Ym1WNGRDNXBJQ0U5UFNCek1TNXBJQ1ltSUhRdWFTQWhQVDBnWlM1cElDWW1JSFF1Ym1WNGRDNXBJQ0U5UFNCbExta2dKaVlnVEdRb2RDd2dkQzV1WlhoMExDQnpNU3dnWlNrcElISmxkSFZ5YmlBaE1Ec0tJQ0FnSUNBZ0lDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2ZYZG9hV3hsSUNoMElDRTlQU0J6TVNrS0lDQWdJSEpsZEhWeWJpQWhNVHNLZlFwbWRXNWpkR2x2YmlCR2N5aHpNU3dnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE4wS0hNeExuQnlaWFlzSUhNeExDQnpNUzV1WlhoMEtTQThJREFnUHlCemRDaHpNU3dnWlN3Z2N6RXVibVY0ZENrZ1BqMGdNQ0FtSmlCemRDaHpNU3dnY3pFdWNISmxkaXdnWlNrZ1BqMGdNQ0E2SUhOMEtITXhMQ0JsTENCek1TNXdjbVYyS1NBOElEQWdmSHdnYzNRb2N6RXNJSE14TG01bGVIUXNJR1VwSUR3Z01Ec0tmUXBtZFc1amRHbHZiaUJ0ZUNoek1Td2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQnpNU3dnYmlBOUlDRXhMQ0JwSUQwZ0tITXhMbmdnS3lCbExuZ3BJQzhnTWl3Z2NpQTlJQ2h6TVM1NUlDc2daUzU1S1NBdklESTdDaUFnSUNCa2J5QjBMbmtnUGlCeUlDRTlJSFF1Ym1WNGRDNTVJRDRnY2lBbUppQjBMbTVsZUhRdWVTQWhQVDBnZEM1NUlDWW1JR2tnUENBb2RDNXVaWGgwTG5nZ0xTQjBMbmdwSUNvZ0tISWdMU0IwTG5rcElDOGdLSFF1Ym1WNGRDNTVJQzBnZEM1NUtTQXJJSFF1ZUNBbUppQW9iaUE5SUNGdUtTd2dkQ0E5SUhRdWJtVjRkRHNLSUNBZ0lIZG9hV3hsSUNoMElDRTlQU0J6TVNrS0lDQWdJSEpsZEhWeWJpQnVPd3A5Q21aMWJtTjBhVzl1SUVsa0tITXhMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCUmJ5aHpNUzVwTENCek1TNTRMQ0J6TVM1NUtTd2diaUE5SUc1bGR5QlJieWhsTG1rc0lHVXVlQ3dnWlM1NUtTd2dhU0E5SUhNeExtNWxlSFFzSUhJZ1BTQmxMbkJ5WlhZN0NpQWdJQ0J5WlhSMWNtNGdjekV1Ym1WNGRDQTlJR1VzSUdVdWNISmxkaUE5SUhNeExDQjBMbTVsZUhRZ1BTQnBMQ0JwTG5CeVpYWWdQU0IwTENCdUxtNWxlSFFnUFNCMExDQjBMbkJ5WlhZZ1BTQnVMQ0J5TG01bGVIUWdQU0J1TENCdUxuQnlaWFlnUFNCeUxDQnVPd3A5Q21aMWJtTjBhVzl1SUhSMUtITXhMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlHNWxkeUJSYnloek1Td2daU3dnZENrN0NpQWdJQ0J5WlhSMWNtNGdiaUEvSUNocExtNWxlSFFnUFNCdUxtNWxlSFFzSUdrdWNISmxkaUE5SUc0c0lHNHVibVY0ZEM1d2NtVjJJRDBnYVN3Z2JpNXVaWGgwSUQwZ2FTa2dPaUFvYVM1d2NtVjJJRDBnYVN3Z2FTNXVaWGgwSUQwZ2FTa3NJR2s3Q24wS1puVnVZM1JwYjI0Z1FuTW9jekVwSUhzS0lDQWdJSE14TG01bGVIUXVjSEpsZGlBOUlITXhMbkJ5WlhZc0lITXhMbkJ5WlhZdWJtVjRkQ0E5SUhNeExtNWxlSFFzSUhNeExuQnlaWFphSUNZbUlDaHpNUzV3Y21WMldpNXVaWGgwV2lBOUlITXhMbTVsZUhSYUtTd2djekV1Ym1WNGRGb2dKaVlnS0hNeExtNWxlSFJhTG5CeVpYWmFJRDBnY3pFdWNISmxkbG9wT3dwOUNtWjFibU4wYVc5dUlGRnZLSE14TENCbExDQjBLU0I3Q2lBZ0lDQjBhR2x6TG1rZ1BTQnpNU3dnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2RDd2dkR2hwY3k1d2NtVjJJRDBnYm5Wc2JDd2dkR2hwY3k1dVpYaDBJRDBnYm5Wc2JDd2dkR2hwY3k1NklEMGdNQ3dnZEdocGN5NXdjbVYyV2lBOUlHNTFiR3dzSUhSb2FYTXVibVY0ZEZvZ1BTQnVkV3hzTENCMGFHbHpMbk4wWldsdVpYSWdQU0FoTVRzS2ZRcG1kVzVqZEdsdmJpQm5lQ2h6TVN3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0F3T3dvZ0lDQWdabTl5S0d4bGRDQnlJRDBnWlN3Z1lTQTlJSFFnTFNCdU95QnlJRHdnZERzZ2NpQXJQU0J1S1drZ0t6MGdLSE14VzJGZElDMGdjekZiY2wwcElDb2dLSE14VzNJZ0t5QXhYU0FySUhNeFcyRWdLeUF4WFNrc0lHRWdQU0J5T3dvZ0lDQWdjbVYwZFhKdUlHazdDbjBLZG1GeUlIbHVJRDBnWTJ4aGMzTWdjekVnZXdvZ0lDQWdjM1JoZEdsaklHRnlaV0VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXNaVzVuZEdnc0lHNGdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlIUWdMU0F4TENCeUlEMGdNRHNnY2lBOElIUTdJR2tnUFNCeUt5c3BiaUFyUFNCbFcybGRMbmdnS2lCbFczSmRMbmtnTFNCbFczSmRMbmdnS2lCbFcybGRMbms3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnS2lBdU5Uc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QnBjME5zYjJOclYybHpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhNeExtRnlaV0VvWlNrZ1BDQXdPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSFJ5YVdGdVozVnNZWFJsVTJoaGNHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1cxMHNJR2tnUFNCYlhTd2djaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHNTFLR1VwTENCcGRTaHVMQ0JsS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUdVdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUhRdVptOXlSV0ZqYUNodWRTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTURzZ1l5QThJSFF1YkdWdVozUm9PeUJqS3lzcGFTNXdkWE5vS0dFcExDQmhJQ3M5SUhSYlkxMHViR1Z1WjNSb0xDQnBkU2h1TENCMFcyTmRLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1Y0TG5SeWFXRnVaM1ZzWVhSbEtHNHNJR2twT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQTdJR01nUENCdkxteGxibWQwYURzZ1l5QXJQU0F6S1hJdWNIVnphQ2h2TG5Oc2FXTmxLR01zSUdNZ0t5QXpLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUc1MUtITXhLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlITXhMbXhsYm1kMGFEc0tJQ0FnSUdVZ1BpQXlJQ1ltSUhNeFcyVWdMU0F4WFM1bGNYVmhiSE1vY3pGYk1GMHBJQ1ltSUhNeExuQnZjQ2dwT3dwOUNtWjFibU4wYVc5dUlHbDFLSE14TENCbEtTQjdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z1pTNXNaVzVuZEdnN0lIUXJLeWx6TVM1d2RYTm9LR1ZiZEYwdWVDa3NJSE14TG5CMWMyZ29aVnQwWFM1NUtUc0tmUXAyWVhJZ2FtOGdQU0JqYkdGemN5QnpNU0JsZUhSbGJtUnpJRWRsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnUm00b1d3b2dJQ0FnSUNBZ0lHNWxkeUJhS0M0MUxDQXVOU2tzQ2lBZ0lDQWdJQ0FnYm1WM0lGb29MUzQxTENBdU5Ta3NDaUFnSUNBZ0lDQWdibVYzSUZvb0xTNDFMQ0F0TGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJhS0M0MUxDQXRMalVwQ2lBZ0lDQmRLU3dnZENBOUlIdDlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVJYaDBjblZrWlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NNklIUUtJQ0FnSUNBZ0lDQjlMQ0JsSUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hsS1NBL0lHVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3l3Z2FTQTlJRnRkTENCeUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Dd2dZeUE5SUdVdWJHVnVaM1JvT3lCdklEd2dZenNnYnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsVzI5ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JoS0d3cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ2RtVW9hU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2dkbVVvY2l3Z01pa3BMQ0IwYUdsekxtTnZiWEIxZEdWV1pYSjBaWGhPYjNKdFlXeHpLQ2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWVNodktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnVzEwc0lHd2dQU0IwTG1OMWNuWmxVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVkzVnlkbVZUWldkdFpXNTBjeUE2SURFeUxDQm9JRDBnZEM1emRHVndjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNXpkR1Z3Y3lBNklERXNJSFVnUFNCMExtUmxjSFJvSUNFOVBTQjJiMmxrSURBZ1B5QjBMbVJsY0hSb0lEb2dNU3dnWkNBOUlIUXVZbVYyWld4RmJtRmliR1ZrSUNFOVBTQjJiMmxrSURBZ1B5QjBMbUpsZG1Wc1JXNWhZbXhsWkNBNklDRXdMQ0JtSUQwZ2RDNWlaWFpsYkZSb2FXTnJibVZ6Y3lBaFBUMGdkbTlwWkNBd0lEOGdkQzVpWlhabGJGUm9hV05yYm1WemN5QTZJQzR5TENCdElEMGdkQzVpWlhabGJGTnBlbVVnSVQwOUlIWnZhV1FnTUNBL0lIUXVZbVYyWld4VGFYcGxJRG9nWmlBdElDNHhMQ0JmSUQwZ2RDNWlaWFpsYkU5bVpuTmxkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNWlaWFpsYkU5bVpuTmxkQ0E2SURBc0lHY2dQU0IwTG1KbGRtVnNVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVltVjJaV3hUWldkdFpXNTBjeUE2SURNc0lIQWdQU0IwTG1WNGRISjFaR1ZRWVhSb0xDQjJJRDBnZEM1VlZrZGxibVZ5WVhSdmNpQWhQVDBnZG05cFpDQXdJRDhnZEM1VlZrZGxibVZ5WVhSdmNpQTZJRjk0TENCNExDQjVJRDBnSVRFc0lHSXNJSGNzSUZJc0lFazdDaUFnSUNBZ0lDQWdJQ0FnSUhBZ0ppWWdLSGdnUFNCd0xtZGxkRk53WVdObFpGQnZhVzUwY3lob0tTd2dlU0E5SUNFd0xDQmtJRDBnSVRFc0lHSWdQU0J3TG1OdmJYQjFkR1ZHY21WdVpYUkdjbUZ0WlhNb2FDd2dJVEVwTENCM0lEMGdibVYzSUVFc0lGSWdQU0J1WlhjZ1FTd2dTU0E5SUc1bGR5QkJLU3dnWkNCOGZDQW9aeUE5SURBc0lHWWdQU0F3TENCdElEMGdNQ3dnWHlBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUU0E5SUc4dVpYaDBjbUZqZEZCdmFXNTBjeWhzS1N3Z1ZDQTlJRTB1YzJoaGNHVXNJRThnUFNCTkxtaHZiR1Z6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhsdUxtbHpRMnh2WTJ0WGFYTmxLRlFwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVUlEMGdWQzV5WlhabGNuTmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXdnUFNBd0xDQnZaU0E5SUU4dWJHVnVaM1JvT3lCTUlEd2diMlU3SUV3ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGZ2dQU0JQVzB4ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGx1TG1selEyeHZZMnRYYVhObEtGZ3BJQ1ltSUNoUFcweGRJRDBnV0M1eVpYWmxjbk5sS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ2VXNHVkSEpwWVc1bmRXeGhkR1ZUYUdGd1pTaFVMQ0JQS1N3Z1ZTQTlJRlE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1RDQTlJREFzSUc5bElEMGdUeTVzWlc1bmRHZzdJRXdnUENCdlpUc2dUQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQllJRDBnVDF0TVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGUWdQU0JVTG1OdmJtTmhkQ2hZS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCNktFd3NJRzlsTENCWUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2IyVWdmSHdnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVJYaDBjblZrWlVkbGIyMWxkSEo1T2lCMlpXTWdaRzlsY3lCdWIzUWdaWGhwYzNRaUtTd2dUQzVqYkc5dVpTZ3BMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZaU3dnV0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEVnUFNCVUxteGxibWQwYUN3Z1NDQTlJQ1F1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdVpTaE1MQ0J2WlN3Z1dDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdsbExDQktMQ0JUWlN3Z2JXVWdQU0JNTG5nZ0xTQnZaUzU0TENCNVpTQTlJRXd1ZVNBdElHOWxMbmtzSUU1bElEMGdXQzU0SUMwZ1RDNTRMQ0J4WlNBOUlGZ3VlU0F0SUV3dWVTd2djblFnUFNCdFpTQXFJRzFsSUNzZ2VXVWdLaUI1WlN3Z1F5QTlJRzFsSUNvZ2NXVWdMU0I1WlNBcUlFNWxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0VNcElENGdUblZ0WW1WeUxrVlFVMGxNVDA0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1V5QTlJRTFoZEdndWMzRnlkQ2h5ZENrc0lFSWdQU0JOWVhSb0xuTnhjblFvVG1VZ0tpQk9aU0FySUhGbElDb2djV1VwTENCbFpTQTlJRzlsTG5nZ0xTQjVaU0F2SUZNc0lHb2dQU0J2WlM1NUlDc2diV1VnTHlCVExDQjBaU0E5SUZndWVDQXRJSEZsSUM4Z1Fpd2dUV1VnUFNCWUxua2dLeUJPWlNBdklFSXNJSEpsSUQwZ0tDaDBaU0F0SUdWbEtTQXFJSEZsSUMwZ0tFMWxJQzBnYWlrZ0tpQk9aU2tnTHlBb2JXVWdLaUJ4WlNBdElIbGxJQ29nVG1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xsSUQwZ1pXVWdLeUJ0WlNBcUlISmxJQzBnVEM1NExDQktJRDBnYWlBcklIbGxJQ29nY21VZ0xTQk1Mbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1JsSUQwZ2FXVWdLaUJwWlNBcklFb2dLaUJLT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrWlNBOFBTQXlLU0J5WlhSMWNtNGdibVYzSUZvb2FXVXNJRW9wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGTmxJRDBnVFdGMGFDNXpjWEowS0dSbElDOGdNaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1VnUGlCT2RXMWlaWEl1UlZCVFNVeFBUaUEvSUU1bElENGdUblZ0WW1WeUxrVlFVMGxNVDA0Z0ppWWdLRk1nUFNBaE1Da2dPaUJ0WlNBOElDMU9kVzFpWlhJdVJWQlRTVXhQVGlBL0lFNWxJRHdnTFU1MWJXSmxjaTVGVUZOSlRFOU9JQ1ltSUNoVElEMGdJVEFwSURvZ1RXRjBhQzV6YVdkdUtIbGxLU0E5UFQwZ1RXRjBhQzV6YVdkdUtIRmxLU0FtSmlBb1V5QTlJQ0V3S1N3Z1V5QS9JQ2hwWlNBOUlDMTVaU3dnU2lBOUlHMWxMQ0JUWlNBOUlFMWhkR2d1YzNGeWRDaHlkQ2twSURvZ0tHbGxJRDBnYldVc0lFb2dQU0I1WlN3Z1UyVWdQU0JOWVhSb0xuTnhjblFvY25RZ0x5QXlLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUZvb2FXVWdMeUJUWlN3Z1NpQXZJRk5sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXdnUFNBd0xDQnZaU0E5SUZVdWJHVnVaM1JvTENCWUlEMGdiMlVnTFNBeExDQnBaU0E5SUV3Z0t5QXhPeUJNSUR3Z2IyVTdJRXdyS3l3Z1dDc3JMQ0JwWlNzcktWZ2dQVDA5SUc5bElDWW1JQ2hZSUQwZ01Da3NJR2xsSUQwOVBTQnZaU0FtSmlBb2FXVWdQU0F3S1N3Z1YxdE1YU0E5SUc1bEtGVmJURjBzSUZWYldGMHNJRlZiYVdWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JiWFN3Z1JDd2dSeUE5SUZjdVkyOXVZMkYwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdUQ0E5SURBc0lHOWxJRDBnVHk1c1pXNW5kR2c3SUV3Z1BDQnZaVHNnVENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JZSUQwZ1QxdE1YVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVFnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FXVWdQU0F3TENCS0lEMGdXQzVzWlc1bmRHZ3NJRk5sSUQwZ1NpQXRJREVzSUcxbElEMGdhV1VnS3lBeE95QnBaU0E4SUVvN0lHbGxLeXNzSUZObEt5c3NJRzFsS3lzcFUyVWdQVDA5SUVvZ0ppWWdLRk5sSUQwZ01Da3NJRzFsSUQwOVBTQktJQ1ltSUNodFpTQTlJREFwTENCRVcybGxYU0E5SUc1bEtGaGJhV1ZkTENCWVcxTmxYU3dnV0Z0dFpWMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdTeTV3ZFhOb0tFUXBMQ0JISUQwZ1J5NWpiMjVqWVhRb1JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQk1JRDBnTURzZ1RDQThJR2M3SUV3ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYjJVZ1BTQk1JQzhnWnl3Z1dDQTlJR1lnS2lCTllYUm9MbU52Y3lodlpTQXFJRTFoZEdndVVFa2dMeUF5S1N3Z2FXVWdQU0J0SUNvZ1RXRjBhQzV6YVc0b2IyVWdLaUJOWVhSb0xsQkpJQzhnTWlrZ0t5QmZPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQktJRDBnTUN3Z1UyVWdQU0JWTG14bGJtZDBhRHNnU2lBOElGTmxPeUJLS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdFpTQTlJSG9vVlZ0S1hTd2dWMXRLWFN3Z2FXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVWbEtHMWxMbmdzSUcxbExua3NJQzFZS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU2lBOUlEQXNJRk5sSUQwZ1R5NXNaVzVuZEdnN0lFb2dQQ0JUWlRzZ1Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiV1VnUFNCUFcwcGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVRZ1BTQkxXMHBkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VXVWdQU0F3TENCT1pTQTlJRzFsTG14bGJtZDBhRHNnZVdVZ1BDQk9aVHNnZVdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J4WlNBOUlIb29iV1ZiZVdWZExDQkVXM2xsWFN3Z2FXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkZaU2h4WlM1NExDQnhaUzU1TENBdFdDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9aU0E5SUcwZ0t5QmZPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV3Z1BTQXdPeUJNSUR3Z2NUc2dUQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZaU0E5SUdRZ1B5QjZLRlJiVEYwc0lFZGJURjBzSUdobEtTQTZJRlJiVEYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUlEOGdLRkl1WTI5d2VTaGlMbTV2Y20xaGJITmJNRjBwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRzlsTG5ncExDQjNMbU52Y0hrb1lpNWlhVzV2Y20xaGJITmJNRjBwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRzlsTG5rcExDQkpMbU52Y0hrb2VGc3dYU2t1WVdSa0tGSXBMbUZrWkNoM0tTd2dSV1VvU1M1NExDQkpMbmtzSUVrdWVpa3BJRG9nUldVb2IyVXVlQ3dnYjJVdWVTd2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JNSUQwZ01Uc2dUQ0E4UFNCb095Qk1LeXNwWm05eUtHeGxkQ0J2WlNBOUlEQTdJRzlsSUR3Z2NUc2diMlVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXQ0E5SUdRZ1B5QjZLRlJiYjJWZExDQkhXMjlsWFN3Z2FHVXBJRG9nVkZ0dlpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVJRDhnS0ZJdVkyOXdlU2hpTG01dmNtMWhiSE5iVEYwcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZndWVDa3NJSGN1WTI5d2VTaGlMbUpwYm05eWJXRnNjMXRNWFNrdWJYVnNkR2x3YkhsVFkyRnNZWElvV0M1NUtTd2dTUzVqYjNCNUtIaGJURjBwTG1Ga1pDaFNLUzVoWkdRb2R5a3NJRVZsS0VrdWVDd2dTUzU1TENCSkxub3BLU0E2SUVWbEtGZ3VlQ3dnV0M1NUxDQjFJQzhnYUNBcUlFd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdUQ0E5SUdjZ0xTQXhPeUJNSUQ0OUlEQTdJRXd0TFNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiMlVnUFNCTUlDOGdaeXdnV0NBOUlHWWdLaUJOWVhSb0xtTnZjeWh2WlNBcUlFMWhkR2d1VUVrZ0x5QXlLU3dnYVdVZ1BTQnRJQ29nVFdGMGFDNXphVzRvYjJVZ0tpQk5ZWFJvTGxCSklDOGdNaWtnS3lCZk93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCS0lEMGdNQ3dnVTJVZ1BTQlZMbXhsYm1kMGFEc2dTaUE4SUZObE95QktLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0WlNBOUlIb29WVnRLWFN3Z1YxdEtYU3dnYVdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVZsS0cxbExuZ3NJRzFsTG5rc0lIVWdLeUJZS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU2lBOUlEQXNJRk5sSUQwZ1R5NXNaVzVuZEdnN0lFb2dQQ0JUWlRzZ1Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiV1VnUFNCUFcwcGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVRZ1BTQkxXMHBkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VXVWdQU0F3TENCT1pTQTlJRzFsTG14bGJtZDBhRHNnZVdVZ1BDQk9aVHNnZVdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J4WlNBOUlIb29iV1ZiZVdWZExDQkVXM2xsWFN3Z2FXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVJRDhnUldVb2NXVXVlQ3dnY1dVdWVTQXJJSGhiYUNBdElERmRMbmtzSUhoYmFDQXRJREZkTG5nZ0t5QllLU0E2SUVWbEtIRmxMbmdzSUhGbExua3NJSFVnS3lCWUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm1Vb0tTd2dYMlVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdabVVvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUQ0E5SUdrdWJHVnVaM1JvSUM4Z016c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc5bElEMGdNQ3dnV0NBOUlIRWdLaUJ2WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHbGxJRDBnTURzZ2FXVWdQQ0JJT3lCcFpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVvZ1BTQWtXMmxsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVkdVb1Nsc3lYU0FySUZnc0lFcGJNVjBnS3lCWUxDQktXekJkSUNzZ1dDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWxJRDBnYUNBcklHY2dLaUF5TENCWUlEMGdjU0FxSUc5bE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhV1VnUFNBd095QnBaU0E4SUVnN0lHbGxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NpQTlJQ1JiYVdWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVVpTaEtXekJkSUNzZ1dDd2dTbHN4WFNBcklGZ3NJRXBiTWwwZ0t5QllLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVWdQU0F3T3lCdlpTQThJRWc3SUc5bEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV0NBOUlDUmJiMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JVWlNoWVd6SmRMQ0JZV3pGZExDQllXekJkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlNBOUlEQTdJRzlsSUR3Z1NEc2diMlVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQllJRDBnSkZ0dlpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGUmxLRmhiTUYwZ0t5QnhJQ29nYUN3Z1dGc3hYU0FySUhFZ0tpQm9MQ0JZV3pKZElDc2djU0FxSUdncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1WVdSa1IzSnZkWEFvVEN3Z2FTNXNaVzVuZEdnZ0x5QXpJQzBnVEN3Z01DazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdYMlVvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUQ0E5SUdrdWJHVnVaM1JvSUM4Z015d2diMlVnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyVW9WU3dnYjJVcExDQnZaU0FyUFNCVkxteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnV0NBOUlEQXNJR2xsSUQwZ1R5NXNaVzVuZEdnN0lGZ2dQQ0JwWlRzZ1dDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTaUE5SUU5YldGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJVb1Npd2diMlVwTENCdlpTQXJQU0JLTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1WVdSa1IzSnZkWEFvVEN3Z2FTNXNaVzVuZEdnZ0x5QXpJQzBnVEN3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdkMlVvVEN3Z2IyVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWUlEMGdUQzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvT3lBdExWZ2dQajBnTURzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcFpTQTlJRmdzSUVvZ1BTQllJQzBnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQktJRHdnTUNBbUppQW9TaUE5SUV3dWJHVnVaM1JvSUMwZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JUWlNBOUlEQXNJRzFsSUQwZ2FDQXJJR2NnS2lBeU95QlRaU0E4SUcxbE95QlRaU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIbGxJRDBnY1NBcUlGTmxMQ0JPWlNBOUlIRWdLaUFvVTJVZ0t5QXhLU3dnY1dVZ1BTQnZaU0FySUdsbElDc2dlV1VzSUhKMElEMGdiMlVnS3lCS0lDc2dlV1VzSUVNZ1BTQnZaU0FySUVvZ0t5Qk9aU3dnVXlBOUlHOWxJQ3NnYVdVZ0t5Qk9aVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXV1VvY1dVc0lISjBMQ0JETENCVEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnUldVb1RDd2diMlVzSUZncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTXVjSFZ6YUNoTUtTd2dZeTV3ZFhOb0tHOWxLU3dnWXk1d2RYTm9LRmdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUZSbEtFd3NJRzlsTENCWUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkQ2hNS1N3Z2FYUW9iMlVwTENCcGRDaFlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcFpTQTlJR2t1YkdWdVozUm9JQzhnTXl3Z1NpQTlJSFl1WjJWdVpYSmhkR1ZVYjNCVlZpaHVMQ0JwTENCcFpTQXRJRE1zSUdsbElDMGdNaXdnYVdVZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRU5sS0VwYk1GMHBMQ0JEWlNoS1d6RmRLU3dnUTJVb1Nsc3lYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnV1dVb1RDd2diMlVzSUZnc0lHbGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZENoTUtTd2dhWFFvYjJVcExDQnBkQ2hwWlNrc0lHbDBLRzlsS1N3Z2FYUW9XQ2tzSUdsMEtHbGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCS0lEMGdhUzVzWlc1bmRHZ2dMeUF6TENCVFpTQTlJSFl1WjJWdVpYSmhkR1ZUYVdSbFYyRnNiRlZXS0c0c0lHa3NJRW9nTFNBMkxDQktJQzBnTXl3Z1NpQXRJRElzSUVvZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRU5sS0ZObFd6QmRLU3dnUTJVb1UyVmJNVjBwTENCRFpTaFRaVnN6WFNrc0lFTmxLRk5sV3pGZEtTd2dRMlVvVTJWYk1sMHBMQ0JEWlNoVFpWc3pYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVhRb1RDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzV3ZFhOb0tHTmJUQ0FxSURNZ0t5QXdYU2tzSUdrdWNIVnphQ2hqVzB3Z0tpQXpJQ3NnTVYwcExDQnBMbkIxYzJnb1kxdE1JQ29nTXlBcklESmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJEWlNoTUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlMbkIxYzJnb1RDNTRLU3dnY2k1d2RYTm9LRXd1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzV3WVhKaGJXVjBaWEp6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BMQ0IwSUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEp6TG5Ob1lYQmxjeXdnYmlBOUlIUm9hWE11Y0dGeVlXMWxkR1Z5Y3k1dmNIUnBiMjV6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI0ZUNoMExDQnVMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0JoSUQwZ1pTNXphR0Z3WlhNdWJHVnVaM1JvT3lCeUlEd2dZVHNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwVzJVdWMyaGhjR1Z6VzNKZFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYmk1d2RYTm9LRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdWIzQjBhVzl1Y3k1bGVIUnlkV1JsVUdGMGFEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FTQWhQVDBnZG05cFpDQXdJQ1ltSUNobExtOXdkR2x2Ym5NdVpYaDBjblZrWlZCaGRHZ2dQU0J1WlhjZ1kyRmJhUzUwZVhCbFhTZ3BMbVp5YjIxS1UwOU9LR2twS1N3Z2JtVjNJSE14S0c0c0lHVXViM0IwYVc5dWN5azdDaUFnSUNCOUNuMHNJRjk0SUQwZ2V3b2dJQ0FnWjJWdVpYSmhkR1ZVYjNCVlZqb2dablZ1WTNScGIyNG9jekVzSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVmJkQ0FxSUROZExDQmhJRDBnWlZ0MElDb2dNeUFySURGZExDQnZJRDBnWlZ0dUlDb2dNMTBzSUdNZ1BTQmxXMjRnS2lBeklDc2dNVjBzSUd3Z1BTQmxXMmtnS2lBelhTd2dhQ0E5SUdWYmFTQXFJRE1nS3lBeFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dpaHlMQ0JoS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZvb2J5d2dZeWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJhS0d3c0lHZ3BDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMHNDaUFnSUNCblpXNWxjbUYwWlZOcFpHVlhZV3hzVlZZNklHWjFibU4wYVc5dUtITXhMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxXM1FnS2lBelhTd2dieUE5SUdWYmRDQXFJRE1nS3lBeFhTd2dZeUE5SUdWYmRDQXFJRE1nS3lBeVhTd2diQ0E5SUdWYmJpQXFJRE5kTENCb0lEMGdaVnR1SUNvZ015QXJJREZkTENCMUlEMGdaVnR1SUNvZ015QXJJREpkTENCa0lEMGdaVnRwSUNvZ00xMHNJR1lnUFNCbFcya2dLaUF6SUNzZ01WMHNJRzBnUFNCbFcya2dLaUF6SUNzZ01sMHNJRjhnUFNCbFczSWdLaUF6WFN3Z1p5QTlJR1ZiY2lBcUlETWdLeUF4WFN3Z2NDQTlJR1ZiY2lBcUlETWdLeUF5WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vYnlBdElHZ3BJRHdnVFdGMGFDNWhZbk1vWVNBdElHd3BJRDhnV3dvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV2loaExDQXhJQzBnWXlrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCYUtHd3NJREVnTFNCMUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGb29aQ3dnTVNBdElHMHBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXaWhmTENBeElDMGdjQ2tLSUNBZ0lDQWdJQ0JkSURvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dpaHZMQ0F4SUMwZ1l5a3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QmFLR2dzSURFZ0xTQjFLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRm9vWml3Z01TQXRJRzBwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV2lobkxDQXhJQzBnY0NrS0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQjRlQ2h6TVN3Z1pTd2dkQ2tnZXdvZ0lDQWdhV1lnS0hRdWMyaGhjR1Z6SUQwZ1cxMHNJRUZ5Y21GNUxtbHpRWEp5WVhrb2N6RXBLU0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnY3pFdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlITXhXMjVkT3dvZ0lDQWdJQ0FnSUhRdWMyaGhjR1Z6TG5CMWMyZ29jaTUxZFdsa0tUc0tJQ0FnSUgwS0lDQWdJR1ZzYzJVZ2RDNXphR0Z3WlhNdWNIVnphQ2h6TVM1MWRXbGtLVHNLSUNBZ0lISmxkSFZ5YmlCMExtOXdkR2x2Ym5NZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxLU3dnWlM1bGVIUnlkV1JsVUdGMGFDQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOXdkR2x2Ym5NdVpYaDBjblZrWlZCaGRHZ2dQU0JsTG1WNGRISjFaR1ZRWVhSb0xuUnZTbE5QVGlncEtTd2dkRHNLZlFwMllYSWdaV01nUFNCamJHRnpjeUJ6TVNCbGVIUmxibVJ6SUdScElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0FvTVNBcklFMWhkR2d1YzNGeWRDZzFLU2tnTHlBeUxDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2djaUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXdMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0drc0lISXNJR1VzSUhRcExDQjBhR2x6TG5SNWNHVWdQU0FpU1dOdmMyRm9aV1J5YjI1SFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWFJoYVd3NklIUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lITXhLR1V1Y21Ga2FYVnpMQ0JsTG1SbGRHRnBiQ2s3Q2lBZ0lDQjlDbjBzSUdoaElEMGdZMnhoYzNNZ2N6RWdaWGgwWlc1a2N5QmthU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SURBcGV3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhDaUFnSUNBZ0lDQWdYU3dnYVNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01nb2dJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2Jpd2dhU3dnWlN3Z2RDa3NJSFJvYVhNdWRIbHdaU0E5SUNKUFkzUmhhR1ZrY205dVIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QnpNU2hsTG5KaFpHbDFjeXdnWlM1a1pYUmhhV3dwT3dvZ0lDQWdmUXA5TENCMFl5QTlJR05zWVhOeklITXhJR1Y0ZEdWdVpITWdSMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDNDFMQ0IwSUQwZ01Td2diaUE5SURNeUxDQnBJRDBnTVN3Z2NpQTlJREFzSUdFZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LU3dnZEdocGN5NTBlWEJsSUQwZ0lsSnBibWRIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdhVzV1WlhKU1lXUnBkWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJRzkxZEdWeVVtRmthWFZ6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdWMFlWTmxaMjFsYm5Sek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCd2FHbFRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHaGxkR0ZUZEdGeWREb2djaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RHaGxkR0ZNWlc1bmRHZzZJR0VLSUNBZ0lDQWdJQ0I5TENCdUlEMGdUV0YwYUM1dFlYZ29NeXdnYmlrc0lHa2dQU0JOWVhSb0xtMWhlQ2d4TENCcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlGdGRMQ0JqSUQwZ1cxMHNJR3dnUFNCYlhTd2dhQ0E5SUZ0ZExDQjFJRDBnWlN3Z1pDQTlJQ2gwSUMwZ1pTa2dMeUJwTENCbUlEMGdibVYzSUVFc0lHMGdQU0J1WlhjZ1dqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3T3lCZklEdzlJR2s3SUY4ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQTdJR2NnUEQwZ2Jqc2daeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnY2lBcklHY2dMeUJ1SUNvZ1lUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWXVlQ0E5SUhVZ0tpQk5ZWFJvTG1OdmN5aHdLU3dnWmk1NUlEMGdkU0FxSUUxaGRHZ3VjMmx1S0hBcExDQmpMbkIxYzJnb1ppNTRMQ0JtTG5rc0lHWXVlaWtzSUd3dWNIVnphQ2d3TENBd0xDQXhLU3dnYlM1NElEMGdLR1l1ZUNBdklIUWdLeUF4S1NBdklESXNJRzB1ZVNBOUlDaG1MbmtnTHlCMElDc2dNU2tnTHlBeUxDQm9MbkIxYzJnb2JTNTRMQ0J0TG5rcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIVWdLejBnWkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCZklEMGdNRHNnWHlBOElHazdJRjhyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdYeUFxSUNodUlDc2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BDQnVPeUJ3S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCd0lDc2daeXdnZUNBOUlIWXNJSGtnUFNCMklDc2diaUFySURFc0lHSWdQU0IySUNzZ2JpQXJJRElzSUhjZ1BTQjJJQ3NnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4dWNIVnphQ2g0TENCNUxDQjNLU3dnYnk1d2RYTm9LSGtzSUdJc0lIY3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YzJWMFNXNWtaWGdvYnlrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCMlpTaGpMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVaWGNnZG1Vb2JDd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ2RtVW9hQ3dnTWlrcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWNHRnlZVzFsZEdWeWN5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnY3pFb1pTNXBibTVsY2xKaFpHbDFjeXdnWlM1dmRYUmxjbEpoWkdsMWN5d2daUzUwYUdWMFlWTmxaMjFsYm5SekxDQmxMbkJvYVZObFoyMWxiblJ6TENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQnVZeUE5SUdOc1lYTnpJSE14SUdWNGRHVnVaSE1nUjJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCR2JpaGJDaUFnSUNBZ0lDQWdibVYzSUZvb01Dd2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QmFLQzB1TlN3Z0xTNDFLU3dLSUNBZ0lDQWdJQ0J1WlhjZ1dpZ3VOU3dnTFM0MUtRb2dJQ0FnWFNrc0lIUWdQU0F4TWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTUwZVhCbElEMGdJbE5vWVhCbFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5ZG1WVFpXZHRaVzUwY3pvZ2RBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmJYU3dnYVNBOUlGdGRMQ0J5SUQwZ1cxMHNJR0VnUFNCYlhTd2dieUE5SURBc0lHTWdQU0F3T3dvZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dVcElEMDlQU0FoTVNrZ2JDaGxLVHNLSUNBZ0lDQWdJQ0JsYkhObElHWnZjaWhzWlhRZ2FDQTlJREE3SUdnZ1BDQmxMbXhsYm1kMGFEc2dhQ3NyS1d3b1pWdG9YU2tzSUhSb2FYTXVZV1JrUjNKdmRYQW9ieXdnWXl3Z2FDa3NJRzhnS3owZ1l5d2dZeUE5SURBN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2h1S1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUhabEtHa3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUIyWlNoeUxDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCMlpTaGhMQ0F5S1NrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JDaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2FTNXNaVzVuZEdnZ0x5QXpMQ0JrSUQwZ2FDNWxlSFJ5WVdOMFVHOXBiblJ6S0hRcExDQm1JRDBnWkM1emFHRndaU3dnYlNBOUlHUXVhRzlzWlhNN0NpQWdJQ0FnSUNBZ0lDQWdJSGx1TG1selEyeHZZMnRYYVhObEtHWXBJRDA5UFNBaE1TQW1KaUFvWmlBOUlHWXVjbVYyWlhKelpTZ3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNQ3dnY0NBOUlHMHViR1Z1WjNSb095Qm5JRHdnY0RzZ1p5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdiVnRuWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhsdUxtbHpRMnh2WTJ0WGFYTmxLSFlwSUQwOVBTQWhNQ0FtSmlBb2JWdG5YU0E5SUhZdWNtVjJaWEp6WlNncEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlIbHVMblJ5YVdGdVozVnNZWFJsVTJoaGNHVW9aaXdnYlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaeUE5SURBc0lIQWdQU0J0TG14bGJtZDBhRHNnWnlBOElIQTdJR2NyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUcxYloxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1JRDBnWmk1amIyNWpZWFFvZGlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNQ3dnY0NBOUlHWXViR1Z1WjNSb095Qm5JRHdnY0RzZ1p5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdabHRuWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWNIVnphQ2gyTG5nc0lIWXVlU3dnTUNrc0lISXVjSFZ6YUNnd0xDQXdMQ0F4S1N3Z1lTNXdkWE5vS0hZdWVDd2dkaTU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdjZ1BTQXdMQ0J3SUQwZ1h5NXNaVzVuZEdnN0lHY2dQQ0J3T3lCbkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQmZXMmRkTENCNElEMGdkbHN3WFNBcklIVXNJSGtnUFNCMld6RmRJQ3NnZFN3Z1lpQTlJSFpiTWwwZ0t5QjFPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaTV3ZFhOb0tIZ3NJSGtzSUdJcExDQmpJQ3M5SURNN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzV3WVhKaGJXVjBaWEp6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BMQ0IwSUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEp6TG5Ob1lYQmxjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkbmdvZEN3Z1pTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJR1V1YzJoaGNHVnpMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RGdGxMbk5vWVhCbGMxdHBYVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVjSFZ6YUNoaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ6TVNodUxDQmxMbU4xY25abFUyVm5iV1Z1ZEhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQjJlQ2h6TVN3Z1pTa2dld29nSUNBZ2FXWWdLR1V1YzJoaGNHVnpJRDBnVzEwc0lFRnljbUY1TG1selFYSnlZWGtvY3pFcEtTQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdjekV1YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhNeFczUmRPd29nSUNBZ0lDQWdJR1V1YzJoaGNHVnpMbkIxYzJnb2FTNTFkV2xrS1RzS0lDQWdJSDBLSUNBZ0lHVnNjMlVnWlM1emFHRndaWE11Y0hWemFDaHpNUzUxZFdsa0tUc0tJQ0FnSUhKbGRIVnliaUJsT3dwOUNuWmhjaUIxWVNBOUlHTnNZWE56SUhNeElHVjRkR1Z1WkhNZ1IyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F6TWl3Z2JpQTlJREUyTENCcElEMGdNQ3dnY2lBOUlFMWhkR2d1VUVrZ0tpQXlMQ0JoSUQwZ01Dd2dieUE5SUUxaGRHZ3VVRWtwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlRjR2hsY21WSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUZObFoyMWxiblJ6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NHaHBVM1JoY25RNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhCb2FVeGxibWQwYURvZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRlRkR0Z5ZERvZ1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRk1aVzVuZEdnNklHOEtJQ0FnSUNBZ0lDQjlMQ0IwSUQwZ1RXRjBhQzV0WVhnb015d2dUV0YwYUM1bWJHOXZjaWgwS1Nrc0lHNGdQU0JOWVhSb0xtMWhlQ2d5TENCTllYUm9MbVpzYjI5eUtHNHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRTFoZEdndWJXbHVLR0VnS3lCdkxDQk5ZWFJvTGxCSktTd2diQ0E5SURBc0lHZ2dQU0JiWFN3Z2RTQTlJRzVsZHlCQkxDQmtJRDBnYm1WM0lFRXNJR1lnUFNCYlhTd2diU0E5SUZ0ZExDQmZJRDBnVzEwc0lHY2dQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3OUlHNDdJSEFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdXMTBzSUhnZ1BTQndJQzhnYml3Z2VTQTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQWdQVDA5SURBZ0ppWWdZU0E5UFQwZ01DQS9JSGtnUFNBdU5TQXZJSFFnT2lCd0lEMDlQU0J1SUNZbUlHTWdQVDA5SUUxaGRHZ3VVRWtnSmlZZ0tIa2dQU0F0TGpVZ0x5QjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaUlEMGdNRHNnWWlBOFBTQjBPeUJpS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGNnUFNCaUlDOGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1ZUNBOUlDMWxJQ29nVFdGMGFDNWpiM01vYVNBcklIY2dLaUJ5S1NBcUlFMWhkR2d1YzJsdUtHRWdLeUI0SUNvZ2J5a3NJSFV1ZVNBOUlHVWdLaUJOWVhSb0xtTnZjeWhoSUNzZ2VDQXFJRzhwTENCMUxub2dQU0JsSUNvZ1RXRjBhQzV6YVc0b2FTQXJJSGNnS2lCeUtTQXFJRTFoZEdndWMybHVLR0VnS3lCNElDb2dieWtzSUcwdWNIVnphQ2gxTG5nc0lIVXVlU3dnZFM1NktTd2daQzVqYjNCNUtIVXBMbTV2Y20xaGJHbDZaU2dwTENCZkxuQjFjMmdvWkM1NExDQmtMbmtzSUdRdWVpa3NJR2N1Y0hWemFDaDNJQ3NnZVN3Z01TQXRJSGdwTENCMkxuQjFjMmdvYkNzcktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm9MbkIxYzJnb2RpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjQ0E5SURBN0lIQWdQQ0J1T3lCd0t5c3BabTl5S0d4bGRDQjJJRDBnTURzZ2RpQThJSFE3SUhZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnYUZ0d1hWdDJJQ3NnTVYwc0lIa2dQU0JvVzNCZFczWmRMQ0JpSUQwZ2FGdHdJQ3NnTVYxYmRsMHNJSGNnUFNCb1czQWdLeUF4WFZ0MklDc2dNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDaHdJQ0U5UFNBd0lIeDhJR0VnUGlBd0tTQW1KaUJtTG5CMWMyZ29lQ3dnZVN3Z2R5a3NJQ2h3SUNFOVBTQnVJQzBnTVNCOGZDQmpJRHdnVFdGMGFDNVFTU2tnSmlZZ1ppNXdkWE5vS0hrc0lHSXNJSGNwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLR1lwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnZG1Vb2JTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJSFpsS0Y4c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUhabEtHY3NJRElwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5CaGNtRnRaWFJsY25NcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSE14S0dVdWNtRmthWFZ6TENCbExuZHBaSFJvVTJWbmJXVnVkSE1zSUdVdWFHVnBaMmgwVTJWbmJXVnVkSE1zSUdVdWNHaHBVM1JoY25Rc0lHVXVjR2hwVEdWdVozUm9MQ0JsTG5Sb1pYUmhVM1JoY25Rc0lHVXVkR2hsZEdGTVpXNW5kR2dwT3dvZ0lDQWdmUXA5TENCcFl5QTlJR05zWVhOeklITXhJR1Y0ZEdWdVpITWdaR2tnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVFvZ0lDQWdJQ0FnSUYwc0lHa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLRzRzSUdrc0lHVXNJSFFwTENCMGFHbHpMblI1Y0dVZ1BTQWlWR1YwY21Gb1pXUnliMjVIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYUmhhV3c2SUhRS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhNeEtHVXVjbUZrYVhWekxDQmxMbVJsZEdGcGJDazdDaUFnSUNCOUNuMHNJSE5qSUQwZ1kyeGhjM01nY3pFZ1pYaDBaVzVrY3lCSFpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJQzQwTENCdUlEMGdNVElzSUdrZ1BTQTBPQ3dnY2lBOUlFMWhkR2d1VUVrZ0tpQXlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVZHOXlkWE5IWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGRXSmxPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwWVd4VFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhWaWRXeGhjbE5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhjbU02SUhJS0lDQWdJQ0FnSUNCOUxDQnVJRDBnVFdGMGFDNW1iRzl2Y2lodUtTd2dhU0E5SUUxaGRHZ3VabXh2YjNJb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQmJYU3dnYnlBOUlGdGRMQ0JqSUQwZ1cxMHNJR3dnUFNCYlhTd2dhQ0E5SUc1bGR5QkJMQ0IxSUQwZ2JtVjNJRUVzSUdRZ1BTQnVaWGNnUVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3OUlHNDdJR1lyS3lsbWIzSW9iR1YwSUcwZ1BTQXdPeUJ0SUR3OUlHazdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdiU0F2SUdrZ0tpQnlMQ0JuSUQwZ1ppQXZJRzRnS2lCTllYUm9MbEJKSUNvZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnZFM1NElEMGdLR1VnS3lCMElDb2dUV0YwYUM1amIzTW9aeWtwSUNvZ1RXRjBhQzVqYjNNb1h5a3NJSFV1ZVNBOUlDaGxJQ3NnZENBcUlFMWhkR2d1WTI5ektHY3BLU0FxSUUxaGRHZ3VjMmx1S0Y4cExDQjFMbm9nUFNCMElDb2dUV0YwYUM1emFXNG9aeWtzSUc4dWNIVnphQ2gxTG5nc0lIVXVlU3dnZFM1NktTd2dhQzU0SUQwZ1pTQXFJRTFoZEdndVkyOXpLRjhwTENCb0xua2dQU0JsSUNvZ1RXRjBhQzV6YVc0b1h5a3NJR1F1YzNWaVZtVmpkRzl5Y3loMUxDQm9LUzV1YjNKdFlXeHBlbVVvS1N3Z1l5NXdkWE5vS0dRdWVDd2daQzU1TENCa0xub3BMQ0JzTG5CMWMyZ29iU0F2SUdrcExDQnNMbkIxYzJnb1ppQXZJRzRwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXhPeUJtSUR3OUlHNDdJR1lyS3lsbWIzSW9iR1YwSUcwZ1BTQXhPeUJ0SUR3OUlHazdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdLR2tnS3lBeEtTQXFJR1lnS3lCdElDMGdNU3dnWnlBOUlDaHBJQ3NnTVNrZ0tpQW9aaUF0SURFcElDc2diU0F0SURFc0lIQWdQU0FvYVNBcklERXBJQ29nS0dZZ0xTQXhLU0FySUcwc0lIWWdQU0FvYVNBcklERXBJQ29nWmlBcklHMDdDaUFnSUNBZ0lDQWdJQ0FnSUdFdWNIVnphQ2hmTENCbkxDQjJLU3dnWVM1d2RYTm9LR2NzSUhBc0lIWXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtHRXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dkbVVvYnl3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lIWmxLR01zSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJSFpsS0d3c0lESXBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMbkJoY21GdFpYUmxjbk1wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lITXhLR1V1Y21Ga2FYVnpMQ0JsTG5SMVltVXNJR1V1Y21Ga2FXRnNVMlZuYldWdWRITXNJR1V1ZEhWaWRXeGhjbE5sWjIxbGJuUnpMQ0JsTG1GeVl5azdDaUFnSUNCOUNuMHNJSEpqSUQwZ1kyeGhjM01nY3pFZ1pYaDBaVzVrY3lCSFpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJQzQwTENCdUlEMGdOalFzSUdrZ1BTQTRMQ0J5SUQwZ01pd2dZU0E5SURNcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0Nrc0lIUm9hWE11ZEhsd1pTQTlJQ0pVYjNKMWMwdHViM1JIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGRXSmxPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBkV0oxYkdGeVUyVm5iV1Z1ZEhNNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbGhiRk5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQndPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnhPaUJoQ2lBZ0lDQWdJQ0FnZlN3Z2JpQTlJRTFoZEdndVpteHZiM0lvYmlrc0lHa2dQU0JOWVhSb0xtWnNiMjl5S0drcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1cxMHNJR01nUFNCYlhTd2diQ0E5SUZ0ZExDQm9JRDBnVzEwc0lIVWdQU0J1WlhjZ1FTd2daQ0E5SUc1bGR5QkJMQ0JtSUQwZ2JtVjNJRUVzSUcwZ1BTQnVaWGNnUVN3Z1h5QTlJRzVsZHlCQkxDQm5JRDBnYm1WM0lFRXNJSEFnUFNCdVpYY2dRVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGdnUFNBd095QjRJRHc5SUc0N0lDc3JlQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2VDQXZJRzRnS2lCeUlDb2dUV0YwYUM1UVNTQXFJREk3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWW9lU3dnY2l3Z1lTd2daU3dnWmlrc0lIWW9lU0FySUM0d01Td2djaXdnWVN3Z1pTd2diU2tzSUdjdWMzVmlWbVZqZEc5eWN5aHRMQ0JtS1N3Z2NDNWhaR1JXWldOMGIzSnpLRzBzSUdZcExDQmZMbU55YjNOelZtVmpkRzl5Y3lobkxDQndLU3dnY0M1amNtOXpjMVpsWTNSdmNuTW9YeXdnWnlrc0lGOHVibTl5YldGc2FYcGxLQ2tzSUhBdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWWlBOUlEQTdJR0lnUEQwZ2FUc2dLeXRpS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNJRDBnWWlBdklHa2dLaUJOWVhSb0xsQkpJQ29nTWl3Z1VpQTlJQzEwSUNvZ1RXRjBhQzVqYjNNb2R5a3NJRWtnUFNCMElDb2dUV0YwYUM1emFXNG9keWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTG5nZ1BTQm1MbmdnS3lBb1VpQXFJSEF1ZUNBcklFa2dLaUJmTG5ncExDQjFMbmtnUFNCbUxua2dLeUFvVWlBcUlIQXVlU0FySUVrZ0tpQmZMbmtwTENCMUxub2dQU0JtTG5vZ0t5QW9VaUFxSUhBdWVpQXJJRWtnS2lCZkxub3BMQ0JqTG5CMWMyZ29kUzU0TENCMUxua3NJSFV1ZWlrc0lHUXVjM1ZpVm1WamRHOXljeWgxTENCbUtTNXViM0p0WVd4cGVtVW9LU3dnYkM1d2RYTm9LR1F1ZUN3Z1pDNTVMQ0JrTG5vcExDQm9MbkIxYzJnb2VDQXZJRzRwTENCb0xuQjFjMmdvWWlBdklHa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREU3SUhnZ1BEMGdianNnZUNzcktXWnZjaWhzWlhRZ2VTQTlJREU3SUhrZ1BEMGdhVHNnZVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0FvYVNBcklERXBJQ29nS0hnZ0xTQXhLU0FySUNoNUlDMGdNU2tzSUhjZ1BTQW9hU0FySURFcElDb2dlQ0FySUNoNUlDMGdNU2tzSUZJZ1BTQW9hU0FySURFcElDb2dlQ0FySUhrc0lFa2dQU0FvYVNBcklERXBJQ29nS0hnZ0xTQXhLU0FySUhrN0NpQWdJQ0FnSUNBZ0lDQWdJRzh1Y0hWemFDaGlMQ0IzTENCSktTd2dieTV3ZFhOb0tIY3NJRklzSUVrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0c4cExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ2RtVW9ZeXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUhabEtHd3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lIWmxLR2dzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjJLSGdzSUhrc0lHSXNJSGNzSUZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFa2dQU0JOWVhSb0xtTnZjeWg0S1N3Z1RTQTlJRTFoZEdndWMybHVLSGdwTENCVUlEMGdZaUF2SUhrZ0tpQjRMQ0JQSUQwZ1RXRjBhQzVqYjNNb1ZDazdDaUFnSUNBZ0lDQWdJQ0FnSUZJdWVDQTlJSGNnS2lBb01pQXJJRThwSUNvZ0xqVWdLaUJKTENCU0xua2dQU0IzSUNvZ0tESWdLeUJQS1NBcUlFMGdLaUF1TlN3Z1VpNTZJRDBnZHlBcUlFMWhkR2d1YzJsdUtGUXBJQ29nTGpVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWNHRnlZVzFsZEdWeWN5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnY3pFb1pTNXlZV1JwZFhNc0lHVXVkSFZpWlN3Z1pTNTBkV0oxYkdGeVUyVm5iV1Z1ZEhNc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVjQ3dnWlM1eEtUc0tJQ0FnSUgwS2ZTd2dZV01nUFNCamJHRnpjeUJ6TVNCbGVIUmxibVJ6SUVkbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1lXRW9ibVYzSUVFb0xURXNJQzB4TENBd0tTd2dibVYzSUVFb0xURXNJREVzSURBcExDQnVaWGNnUVNneExDQXhMQ0F3S1Nrc0lIUWdQU0EyTkN3Z2JpQTlJREVzSUdrZ1BTQTRMQ0J5SUQwZ0lURXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDa3NJSFJvYVhNdWRIbHdaU0E5SUNKVWRXSmxSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSFIxWW5Wc1lYSlRaV2R0Wlc1MGN6b2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScFlXeFRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeHZjMlZrT2lCeUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHVXVZMjl0Y0hWMFpVWnlaVzVsZEVaeVlXMWxjeWgwTENCeUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGJtZGxiblJ6SUQwZ1lTNTBZVzVuWlc1MGN5d2dkR2hwY3k1dWIzSnRZV3h6SUQwZ1lTNXViM0p0WVd4ekxDQjBhR2x6TG1KcGJtOXliV0ZzY3lBOUlHRXVZbWx1YjNKdFlXeHpPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdibVYzSUVFc0lHTWdQU0J1WlhjZ1FTd2diQ0E5SUc1bGR5QmFMQ0JvSUQwZ2JtVjNJRUVzSUhVZ1BTQmJYU3dnWkNBOUlGdGRMQ0JtSUQwZ1cxMHNJRzBnUFNCYlhUc0tJQ0FnSUNBZ0lDQmZLQ2tzSUhSb2FYTXVjMlYwU1c1a1pYZ29iU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUIyWlNoMUxDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpTENCdVpYY2dkbVVvWkN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnZG1Vb1ppd2dNaWtwT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUY4b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQTdJSGdnUENCME95QjRLeXNwWnloNEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWnloeUlEMDlQU0FoTVNBL0lIUWdPaUF3S1N3Z2RpZ3BMQ0J3S0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHY29lQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm9JRDBnWlM1blpYUlFiMmx1ZEVGMEtIZ2dMeUIwTENCb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0JoTG01dmNtMWhiSE5iZUYwc0lHSWdQU0JoTG1KcGJtOXliV0ZzYzF0NFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IzSUQwZ01Ec2dkeUE4UFNCcE95QjNLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGSWdQU0IzSUM4Z2FTQXFJRTFoZEdndVVFa2dLaUF5TENCSklEMGdUV0YwYUM1emFXNG9VaWtzSUUwZ1BTQXRUV0YwYUM1amIzTW9VaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqTG5nZ1BTQk5JQ29nZVM1NElDc2dTU0FxSUdJdWVDd2dZeTU1SUQwZ1RTQXFJSGt1ZVNBcklFa2dLaUJpTG5rc0lHTXVlaUE5SUUwZ0tpQjVMbm9nS3lCSklDb2dZaTU2TENCakxtNXZjbTFoYkdsNlpTZ3BMQ0JrTG5CMWMyZ29ZeTU0TENCakxua3NJR011ZWlrc0lHOHVlQ0E5SUdndWVDQXJJRzRnS2lCakxuZ3NJRzh1ZVNBOUlHZ3VlU0FySUc0Z0tpQmpMbmtzSUc4dWVpQTlJR2d1ZWlBcklHNGdLaUJqTG5vc0lIVXVjSFZ6YUNodkxuZ3NJRzh1ZVN3Z2J5NTZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQndLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0F4T3lCNElEdzlJSFE3SUhnckt5bG1iM0lvYkdWMElIa2dQU0F4T3lCNUlEdzlJR2s3SUhrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlDaHBJQ3NnTVNrZ0tpQW9lQ0F0SURFcElDc2dLSGtnTFNBeEtTd2dkeUE5SUNocElDc2dNU2tnS2lCNElDc2dLSGtnTFNBeEtTd2dVaUE5SUNocElDc2dNU2tnS2lCNElDc2dlU3dnU1NBOUlDaHBJQ3NnTVNrZ0tpQW9lQ0F0SURFcElDc2dlVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzB1Y0hWemFDaGlMQ0IzTENCSktTd2diUzV3ZFhOb0tIY3NJRklzSUVrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhZb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQTdJSGdnUEQwZ2REc2dlQ3NyS1dadmNpaHNaWFFnZVNBOUlEQTdJSGtnUEQwZ2FUc2dlU3NyS1d3dWVDQTlJSGdnTHlCMExDQnNMbmtnUFNCNUlDOGdhU3dnWmk1d2RYTm9LR3d1ZUN3Z2JDNTVLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzV3WVhKaGJXVjBaWEp6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbkJoZEdnZ1BTQjBhR2x6TG5CaGNtRnRaWFJsY25NdWNHRjBhQzUwYjBwVFQwNG9LU3dnWlRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ6TVNodVpYY2dZMkZiWlM1d1lYUm9MblI1Y0dWZEtDa3Vabkp2YlVwVFQwNG9aUzV3WVhSb0tTd2daUzUwZFdKMWJHRnlVMlZuYldWdWRITXNJR1V1Y21Ga2FYVnpMQ0JsTG5KaFpHbGhiRk5sWjIxbGJuUnpMQ0JsTG1Oc2IzTmxaQ2s3Q2lBZ0lDQjlDbjBzSUc5aklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCSFpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm5Wc2JDbDdDaUFnSUNBZ0lDQWdhV1lnS0hOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlhhWEpsWm5KaGJXVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnZiV1YwY25rNklHVUtJQ0FnSUNBZ0lDQjlMQ0JsSUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdXMTBzSUc0Z1BTQnVaWGNnVTJWMExDQnBJRDBnYm1WM0lFRXNJSElnUFNCdVpYY2dRVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1V1YVc1a1pYZ2dJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdaUzVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCdklEMGdaUzVwYm1SbGVDd2dZeUE5SUdVdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWXk1c1pXNW5kR2dnUFQwOUlEQWdKaVlnS0dNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklHOHVZMjkxYm5Rc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzU1c1a1pYZzZJREFLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREFzSUdnZ1BTQmpMbXhsYm1kMGFEc2diQ0E4SUdnN0lDc3JiQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCalcyeGRMQ0JrSUQwZ2RTNXpkR0Z5ZEN3Z1ppQTlJSFV1WTI5MWJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ1pDd2dYeUE5SUdRZ0t5Qm1PeUJ0SUR3Z1h6c2diU0FyUFNBektXWnZjaWhzWlhRZ1p5QTlJREE3SUdjZ1BDQXpPeUJuS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUc4dVoyVjBXQ2h0SUNzZ1p5a3NJSFlnUFNCdkxtZGxkRmdvYlNBcklDaG5JQ3NnTVNrZ0pTQXpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFc0lIQXBMQ0J5TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dkaWtzSUhOMUtHa3NJSElzSUc0cElEMDlQU0FoTUNBbUppQW9kQzV3ZFhOb0tHa3VlQ3dnYVM1NUxDQnBMbm9wTENCMExuQjFjMmdvY2k1NExDQnlMbmtzSUhJdWVpa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1pTNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTUN3Z1l5QTlJR0V1WTI5MWJuUWdMeUF6T3lCdklEd2dZenNnYnlzcktXWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z1BDQXpPeUJzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdNeUFxSUc4Z0t5QnNMQ0IxSUQwZ015QXFJRzhnS3lBb2JDQXJJREVwSUNVZ016c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dhQ2tzSUhJdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGhMQ0IxS1N3Z2MzVW9hU3dnY2l3Z2Jpa2dQVDA5SUNFd0lDWW1JQ2gwTG5CMWMyZ29hUzU0TENCcExua3NJR2t1ZWlrc0lIUXVjSFZ6YUNoeUxuZ3NJSEl1ZVN3Z2NpNTZLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJSFpsS0hRc0lETXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzV3WVhKaGJXVjBaWEp6S1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnYzNVb2N6RXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnWUNSN2N6RXVlSDBzSkh0ek1TNTVmU3drZTNNeExucDlMU1I3WlM1NGZTd2tlMlV1ZVgwc0pIdGxMbnA5WUN3Z2FTQTlJR0FrZTJVdWVIMHNKSHRsTG5sOUxDUjdaUzU2ZlMwa2UzTXhMbmg5TENSN2N6RXVlWDBzSkh0ek1TNTZmV0E3Q2lBZ0lDQnlaWFIxY200Z2RDNW9ZWE1vYmlrZ1BUMDlJQ0V3SUh4OElIUXVhR0Z6S0drcElEMDlQU0FoTUNBL0lDRXhJRG9nS0hRdVlXUmtLRzRwTENCMExtRmtaQ2hwS1N3Z0lUQXBPd3A5Q25aaGNpQnlkU0E5SUU5aWFtVmpkQzVtY21WbGVtVW9ld29nSUNBZ1gxOXdjbTkwYjE5Zk9pQnVkV3hzTEFvZ0lDQWdRbTk0UjJWdmJXVjBjbms2SUVwcExBb2dJQ0FnUTJGd2MzVnNaVWRsYjIxbGRISjVPaUJ4Ynl3S0lDQWdJRU5wY21Oc1pVZGxiMjFsZEhKNU9pQlpieXdLSUNBZ0lFTnZibVZIWlc5dFpYUnllVG9nV204c0NpQWdJQ0JEZVd4cGJtUmxja2RsYjIxbGRISjVPaUJPY3l3S0lDQWdJRVJ2WkdWallXaGxaSEp2YmtkbGIyMWxkSEo1T2lCS2J5d0tJQ0FnSUVWa1oyVnpSMlZ2YldWMGNuazZJQ1J2TEFvZ0lDQWdSWGgwY25Wa1pVZGxiMjFsZEhKNU9pQnFieXdLSUNBZ0lFbGpiM05oYUdWa2NtOXVSMlZ2YldWMGNuazZJR1ZqTEFvZ0lDQWdUR0YwYUdWSFpXOXRaWFJ5ZVRvZ2JHRXNDaUFnSUNCUFkzUmhhR1ZrY205dVIyVnZiV1YwY25rNklHaGhMQW9nSUNBZ1VHeGhibVZIWlc5dFpYUnllVG9nSkhJc0NpQWdJQ0JRYjJ4NWFHVmtjbTl1UjJWdmJXVjBjbms2SUdScExBb2dJQ0FnVW1sdVowZGxiMjFsZEhKNU9pQjBZeXdLSUNBZ0lGTm9ZWEJsUjJWdmJXVjBjbms2SUc1akxBb2dJQ0FnVTNCb1pYSmxSMlZ2YldWMGNuazZJSFZoTEFvZ0lDQWdWR1YwY21Gb1pXUnliMjVIWlc5dFpYUnllVG9nYVdNc0NpQWdJQ0JVYjNKMWMwZGxiMjFsZEhKNU9pQnpZeXdLSUNBZ0lGUnZjblZ6UzI1dmRFZGxiMjFsZEhKNU9pQnlZeXdLSUNBZ0lGUjFZbVZIWlc5dFpYUnllVG9nWVdNc0NpQWdJQ0JYYVhKbFpuSmhiV1ZIWlc5dFpYUnllVG9nYjJNS2ZTa3NJR05qSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selUyaGhaRzkzVFdGMFpYSnBZV3dnUFNBaE1Dd2dkR2hwY3k1MGVYQmxJRDBnSWxOb1lXUnZkMDFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJ3WlNnd0tTd2dkR2hwY3k1MGNtRnVjM0JoY21WdWRDQTlJQ0V3TENCMGFHbHpMbVp2WnlBOUlDRXdMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11Wm05bklEMGdaUzVtYjJjc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUd4aklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCcWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLU3dnZEdocGN5NXBjMUpoZDFOb1lXUmxjazFoZEdWeWFXRnNJRDBnSVRBc0lIUm9hWE11ZEhsd1pTQTlJQ0pTWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0k3Q2lBZ0lDQjlDbjBzSUdSaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUFNBaE1Dd2dkR2hwY3k1a1pXWnBibVZ6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JUVkVGT1JFRlNSRG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lIQmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXliM1ZuYUc1bGMzTWdQU0F4TENCMGFHbHpMbTFsZEdGc2JtVnpjeUE5SURBc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtRnZUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1VZ1BTQnVaWGNnY0dVb01Da3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0F4TENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJtOXliV0ZzVFdGd1ZIbHdaU0E5SUcxcExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bElEMGdibVYzSUZvb01Td2dNU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SURFc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SURBc0lIUm9hWE11Y205MVoyaHVaWE56VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV0WlhSaGJHNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1bGJuWk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkazFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0FoTVN3Z2RHaHBjeTVtYjJjZ1BTQWhNQ3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1a1pXWnBibVZ6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JUVkVGT1JFRlNSRG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11Y205MVoyaHVaWE56SUQwZ1pTNXliM1ZuYUc1bGMzTXNJSFJvYVhNdWJXVjBZV3h1WlhOeklEMGdaUzV0WlhSaGJHNWxjM01zSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXViR2xuYUhSTllYQWdQU0JsTG14cFoyaDBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnWlM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVoYjAxaGNDQTlJR1V1WVc5TllYQXNJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtRnZUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbVZ0YVhOemFYWmxMbU52Y0hrb1pTNWxiV2x6YzJsMlpTa3NJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0JsTG1WdGFYTnphWFpsVFdGd0xDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ1pTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTV5YjNWbmFHNWxjM05OWVhBZ1BTQmxMbkp2ZFdkb2JtVnpjMDFoY0N3Z2RHaHBjeTV0WlhSaGJHNWxjM05OWVhBZ1BTQmxMbTFsZEdGc2JtVnpjMDFoY0N3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11Wlc1MlRXRndJRDBnWlM1bGJuWk5ZWEFzSUhSb2FYTXVaVzUyVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVsYm5aTllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0c0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQmxMbVpzWVhSVGFHRmthVzVuTENCMGFHbHpMbVp2WnlBOUlHVXVabTluTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JvWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkdFZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMwMWxjMmhRYUhsemFXTmhiRTFoZEdWeWFXRnNJRDBnSVRBc0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdVMVJCVGtSQlVrUTZJQ0lpTEFvZ0lDQWdJQ0FnSUNBZ0lDQlFTRmxUU1VOQlREb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dpTENCMGFHbHpMbUZ1YVhOdmRISnZjSGxTYjNSaGRHbHZiaUE5SURBc0lIUm9hWE11WVc1cGMyOTBjbTl3ZVUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTJ4bFlYSmpiMkYwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01nUFNBd0xDQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV2lneExDQXhLU3dnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1sdmNpQTlJREV1TlN3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnlaV1pzWldOMGFYWnBkSGtpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kzUW9NaTQxSUNvZ0tIUm9hWE11YVc5eUlDMGdNU2tnTHlBb2RHaHBjeTVwYjNJZ0t5QXhLU3dnTUN3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGIzSWdQU0FvTVNBcklDNDBJQ29nZENrZ0x5QW9NU0F0SUM0MElDb2dkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NXBjbWxrWlhOalpXNWpaVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVhWEpwWkdWelkyVnVZMlZKVDFJZ1BTQXhMak1zSUhSb2FYTXVhWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM05TWVc1blpTQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01UQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBME1EQUtJQ0FnSUNBZ0lDQmRMQ0IwYUdsekxtbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXphR1ZsYmtOdmJHOXlJRDBnYm1WM0lIQmxLREFwTENCMGFHbHpMbk5vWldWdVEyOXNiM0pOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdNU3dnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQTlJRzUxYkd3c0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1MGFHbGphMjVsYzNNZ1BTQXdMQ0IwYUdsekxuUm9hV05yYm1WemMwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQTlJREVnTHlBd0xDQjBhR2x6TG1GMGRHVnVkV0YwYVc5dVEyOXNiM0lnUFNCdVpYY2djR1VvTVN3Z01Td2dNU2tzSUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5SUQwZ2JtVjNJSEJsS0RFc0lERXNJREVwTENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQU0J1ZFd4c0xDQjBhR2x6TGw5aGJtbHpiM1J5YjNCNUlEMGdNQ3dnZEdocGN5NWZZMnhsWVhKamIyRjBJRDBnTUN3Z2RHaHBjeTVmYVhKcFpHVnpZMlZ1WTJVZ1BTQXdMQ0IwYUdsekxsOXphR1ZsYmlBOUlEQXNJSFJvYVhNdVgzUnlZVzV6YldsemMybHZiaUE5SURBc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdGdWFYTnZkSEp2Y0hrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJGdWFYTnZkSEp2Y0hrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnWVc1cGMyOTBjbTl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZllXNXBjMjkwY205d2VTQStJREFnSVQwZ1pTQStJREFnSmlZZ2RHaHBjeTUyWlhKemFXOXVLeXNzSUhSb2FYTXVYMkZ1YVhOdmRISnZjSGtnUFNCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdOc1pXRnlZMjloZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWTJ4bFlYSmpiMkYwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR05zWldGeVkyOWhkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWTJ4bFlYSmpiMkYwSUQ0Z01DQWhQU0JsSUQ0Z01DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt5d2dkR2hwY3k1ZlkyeGxZWEpqYjJGMElEMGdaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQnBjbWxrWlhOalpXNWpaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZhWEpwWkdWelkyVnVZMlU3Q2lBZ0lDQjlDaUFnSUNCelpYUWdhWEpwWkdWelkyVnVZMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDJseWFXUmxjMk5sYm1ObElENGdNQ0FoUFNCbElENGdNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLeXdnZEdocGN5NWZhWEpwWkdWelkyVnVZMlVnUFNCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhOb1pXVnVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXphR1ZsYmpzS0lDQWdJSDBLSUNBZ0lITmxkQ0J6YUdWbGJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjMmhsWlc0Z1BpQXdJQ0U5SUdVZ1BpQXdJQ1ltSUhSb2FYTXVkbVZ5YzJsdmJpc3JMQ0IwYUdsekxsOXphR1ZsYmlBOUlHVTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2RISmhibk50YVhOemFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBjbUZ1YzIxcGMzTnBiMjQ3Q2lBZ0lDQjlDaUFnSUNCelpYUWdkSEpoYm5OdGFYTnphVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5MGNtRnVjMjFwYzNOcGIyNGdQaUF3SUNFOUlHVWdQaUF3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyTENCMGFHbHpMbDkwY21GdWMyMXBjM05wYjI0Z1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdVMVJCVGtSQlVrUTZJQ0lpTEFvZ0lDQWdJQ0FnSUNBZ0lDQlFTRmxUU1VOQlREb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbUZ1YVhOdmRISnZjSGtnUFNCbExtRnVhWE52ZEhKdmNIa3NJSFJvYVhNdVlXNXBjMjkwY205d2VWSnZkR0YwYVc5dUlEMGdaUzVoYm1semIzUnliM0I1VW05MFlYUnBiMjRzSUhSb2FYTXVZVzVwYzI5MGNtOXdlVTFoY0NBOUlHVXVZVzVwYzI5MGNtOXdlVTFoY0N3Z2RHaHBjeTVqYkdWaGNtTnZZWFFnUFNCbExtTnNaV0Z5WTI5aGRDd2dkR2hwY3k1amJHVmhjbU52WVhSTllYQWdQU0JsTG1Oc1pXRnlZMjloZEUxaGNDd2dkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQmxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeXdnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUFNCbExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ3dnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQU0JsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3Z2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlM1amIzQjVLR1V1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVcExDQjBhR2x6TG1sdmNpQTlJR1V1YVc5eUxDQjBhR2x6TG1seWFXUmxjMk5sYm1ObElEMGdaUzVwY21sa1pYTmpaVzVqWlN3Z2RHaHBjeTVwY21sa1pYTmpaVzVqWlUxaGNDQTlJR1V1YVhKcFpHVnpZMlZ1WTJWTllYQXNJSFJvYVhNdWFYSnBaR1Z6WTJWdVkyVkpUMUlnUFNCbExtbHlhV1JsYzJObGJtTmxTVTlTTENCMGFHbHpMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56VW1GdVoyVWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDNHVMbVV1YVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOU1lXNW5aUW9nSUNBZ0lDQWdJRjBzSUhSb2FYTXVhWEpwWkdWelkyVnVZMlZVYUdsamEyNWxjM05OWVhBZ1BTQmxMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56VFdGd0xDQjBhR2x6TG5Ob1pXVnVJRDBnWlM1emFHVmxiaXdnZEdocGN5NXphR1ZsYmtOdmJHOXlMbU52Y0hrb1pTNXphR1ZsYmtOdmJHOXlLU3dnZEdocGN5NXphR1ZsYmtOdmJHOXlUV0Z3SUQwZ1pTNXphR1ZsYmtOdmJHOXlUV0Z3TENCMGFHbHpMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdaUzV6YUdWbGJsSnZkV2RvYm1WemN5d2dkR2hwY3k1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBOUlHVXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNJSFJvYVhNdWRISmhibk50YVhOemFXOXVJRDBnWlM1MGNtRnVjMjFwYzNOcGIyNHNJSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3SUQwZ1pTNTBjbUZ1YzIxcGMzTnBiMjVOWVhBc0lIUm9hWE11ZEdocFkydHVaWE56SUQwZ1pTNTBhR2xqYTI1bGMzTXNJSFJvYVhNdWRHaHBZMnR1WlhOelRXRndJRDBnWlM1MGFHbGphMjVsYzNOTllYQXNJSFJvYVhNdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQTlJR1V1WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlN3Z2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtOdmJHOXlMbU52Y0hrb1pTNWhkSFJsYm5WaGRHbHZia052Ykc5eUtTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNBOUlHVXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa3NJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdQU0JsTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSXVZMjl3ZVNobExuTndaV04xYkdGeVEyOXNiM0lwTENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQU0JsTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFzSUhSb2FYTTdDaUFnSUNCOUNuMHNJSFZqSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z1BTQWhNQ3dnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhRYUc5dVowMWhkR1Z5YVdGc0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QndaU2d4TmpjM056SXhOU2tzSUhSb2FYTXVjM0JsWTNWc1lYSWdQU0J1WlhjZ2NHVW9NVEV4T0RRNE1Ta3NJSFJvYVhNdWMyaHBibWx1WlhOeklEMGdNekFzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1GdlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVVnUFNCdVpYY2djR1VvTUNrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJRzUxYkd3c0lIUm9hWE11Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJRzFwTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRm9vTVN3Z01Ta3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJREVzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJREFzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVsYm5aTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCNFlTd2dkR2hwY3k1eVpXWnNaV04wYVhacGRIa2dQU0F4TENCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJQzQ1T0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQWljbTkxYm1RaUxDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOUlDRXhMQ0IwYUdsekxtWnZaeUE5SUNFd0xDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXVjM0JsWTNWc1lYSXVZMjl3ZVNobExuTndaV04xYkdGeUtTd2dkR2hwY3k1emFHbHVhVzVsYzNNZ1BTQmxMbk5vYVc1cGJtVnpjeXdnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJR1V1YkdsbmFIUk5ZWEFzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0JsTG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbUZ2VFdGd0lEMGdaUzVoYjAxaGNDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SUdVdVlXOU5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVaVzFwYzNOcGRtVXVZMjl3ZVNobExtVnRhWE56YVhabEtTd2dkR2hwY3k1bGJXbHpjMmwyWlUxaGNDQTlJR1V1WlcxcGMzTnBkbVZOWVhBc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNCbExtVnRhWE56YVhabFNXNTBaVzV6YVhSNUxDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCbExtSjFiWEJOWVhBc0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ1pTNWlkVzF3VTJOaGJHVXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdaUzV1YjNKdFlXeE5ZWEFzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlHVXVibTl5YldGc1RXRndWSGx3WlN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlM1amIzQjVLR1V1Ym05eWJXRnNVMk5oYkdVcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TENCMGFHbHpMbk53WldOMWJHRnlUV0Z3SUQwZ1pTNXpjR1ZqZFd4aGNrMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVaVzUyVFdGd0lEMGdaUzVsYm5aTllYQXNJSFJvYVhNdVkyOXRZbWx1WlNBOUlHVXVZMjl0WW1sdVpTd2dkR2hwY3k1eVpXWnNaV04wYVhacGRIa2dQU0JsTG5KbFpteGxZM1JwZG1sMGVTd2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNCbExuSmxabkpoWTNScGIyNVNZWFJwYnl3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bFkyRndMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaXdnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5SUdVdVpteGhkRk5vWVdScGJtY3NJSFJvYVhNdVptOW5JRDBnWlM1bWIyY3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHUmpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6VFdWemFGUnZiMjVOWVhSbGNtbGhiQ0E5SUNFd0xDQjBhR2x6TG1SbFptbHVaWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRlJQVDA0NklDSWlDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhVYjI5dVRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lIQmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtZHlZV1JwWlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbUZ2VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVWdQU0J1WlhjZ2NHVW9NQ2tzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWlkVzF3VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNBeExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlHMXBMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGb29NU3dnTVNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlERXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlEQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlDSnliM1Z1WkNJc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNBaWNtOTFibVFpTENCMGFHbHpMbVp2WnlBOUlDRXdMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11WjNKaFpHbGxiblJOWVhBZ1BTQmxMbWR5WVdScFpXNTBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndJRDBnWlM1c2FXZG9kRTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11WVc5TllYQWdQU0JsTG1GdlRXRndMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWhiMDFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVsYldsemMybDJaUzVqYjNCNUtHVXVaVzFwYzNOcGRtVXBMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnWlM1bGJXbHpjMmwyWlUxaGNDd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHVXVZblZ0Y0UxaGNDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQmxMbUoxYlhCVFkyRnNaU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0JsTG01dmNtMWhiRTFoY0N3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdaUzV1YjNKdFlXeE5ZWEJVZVhCbExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1dWIzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1TENCMGFHbHpMbVp2WnlBOUlHVXVabTluTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JtWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMwMWxjMmhPYjNKdFlXeE5ZWFJsY21saGJDQTlJQ0V3TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUU1dmNtMWhiRTFoZEdWeWFXRnNJaXdnZEdocGN5NWlkVzF3VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNBeExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlHMXBMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGb29NU3dnTVNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlERXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlEQXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOUlDRXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCbExtSjFiWEJOWVhBc0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ1pTNWlkVzF3VTJOaGJHVXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdaUzV1YjNKdFlXeE5ZWEFzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlHVXVibTl5YldGc1RXRndWSGx3WlN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlM1amIzQjVLR1V1Ym05eWJXRnNVMk5oYkdVcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlHVXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9MQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnWlM1bWJHRjBVMmhoWkdsdVp5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2NHTWdQU0JqYkdGemN5QmxlSFJsYm1SeklHSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVhWE5OWlhOb1RHRnRZbVZ5ZEUxaGRHVnlhV0ZzSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9UR0Z0WW1WeWRFMWhkR1Z5YVdGc0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QndaU2d4TmpjM056SXhOU2tzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1GdlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVVnUFNCdVpYY2djR1VvTUNrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJRzUxYkd3c0lIUm9hWE11Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJRzFwTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRm9vTVN3Z01Ta3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJREVzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJREFzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVsYm5aTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCNFlTd2dkR2hwY3k1eVpXWnNaV04wYVhacGRIa2dQU0F4TENCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJQzQ1T0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQWljbTkxYm1RaUxDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOUlDRXhMQ0IwYUdsekxtWnZaeUE5SUNFd0xDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXViR2xuYUhSTllYQWdQU0JsTG14cFoyaDBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnWlM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVoYjAxaGNDQTlJR1V1WVc5TllYQXNJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtRnZUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbVZ0YVhOemFYWmxMbU52Y0hrb1pTNWxiV2x6YzJsMlpTa3NJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0JsTG1WdGFYTnphWFpsVFdGd0xDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ1pTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHVXVjM0JsWTNWc1lYSk5ZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNDQTlJR1V1Wlc1MlRXRndMQ0IwYUdsekxtTnZiV0pwYm1VZ1BTQmxMbU52YldKcGJtVXNJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3NJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ1pTNXlaV1p5WVdOMGFXOXVVbUYwYVc4c0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNCbExtWnNZWFJUYUdGa2FXNW5MQ0IwYUdsekxtWnZaeUE5SUdVdVptOW5MQ0IwYUdsek93b2dJQ0FnZlFwOUxDQnRZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTVwYzAxbGMyaE5ZWFJqWVhCTllYUmxjbWxoYkNBOUlDRXdMQ0IwYUdsekxtUmxabWx1WlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUUxQlZFTkJVRG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFFMWhkR05oY0UxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCd1pTZ3hOamMzTnpJeE5Ta3NJSFJvYVhNdWJXRjBZMkZ3SUQwZ2JuVnNiQ3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SURFc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ2JXa3NJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dpZ3hMQ0F4S1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNBaE1Td2dkR2hwY3k1bWIyY2dQU0FoTUN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCTlFWUkRRVkE2SUNJaUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG0xaGRHTmhjQ0E5SUdVdWJXRjBZMkZ3TENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbUoxYlhCTllYQWdQU0JsTG1KMWJYQk5ZWEFzSUhSb2FYTXVZblZ0Y0ZOallXeGxJRDBnWlM1aWRXMXdVMk5oYkdVc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ1pTNXViM0p0WVd4TllYQXNJSFJvYVhNdWJtOXliV0ZzVFdGd1ZIbHdaU0E5SUdVdWJtOXliV0ZzVFdGd1ZIbHdaU3dnZEdocGN5NXViM0p0WVd4VFkyRnNaUzVqYjNCNUtHVXVibTl5YldGc1UyTmhiR1VwTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdaUzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdaUzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5SUdVdVpteGhkRk5vWVdScGJtY3NJSFJvYVhNdVptOW5JRDBnWlM1bWIyY3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHZGpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6VEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKTWFXNWxSR0Z6YUdWa1RXRjBaWEpwWVd3aUxDQjBhR2x6TG5OallXeGxJRDBnTVN3Z2RHaHBjeTVrWVhOb1UybDZaU0E5SURNc0lIUm9hWE11WjJGd1UybDZaU0E5SURFc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjMk5oYkdVZ1BTQmxMbk5qWVd4bExDQjBhR2x6TG1SaGMyaFRhWHBsSUQwZ1pTNWtZWE5vVTJsNlpTd2dkR2hwY3k1bllYQlRhWHBsSUQwZ1pTNW5ZWEJUYVhwbExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCdWFTaHpNU3dnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUNGek1TQjhmQ0FoZENBbUppQnpNUzVqYjI1emRISjFZM1J2Y2lBOVBUMGdaU0EvSUhNeElEb2dkSGx3Wlc5bUlHVXVRbGxVUlZOZlVFVlNYMFZNUlUxRlRsUWdQVDBnSW01MWJXSmxjaUlnUHlCdVpYY2daU2h6TVNrZ09pQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaHpNU2s3Q24wS1puVnVZM1JwYjI0Z1ZXUW9jekVwSUhzS0lDQWdJSEpsZEhWeWJpQkJjbkpoZVVKMVptWmxjaTVwYzFacFpYY29jekVwSUNZbUlDRW9jekVnYVc1emRHRnVZMlZ2WmlCRVlYUmhWbWxsZHlrN0NuMEtablZ1WTNScGIyNGdSR1FvY3pFcElIc0tJQ0FnSUdaMWJtTjBhVzl1SUdVb2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6TVZ0cFhTQXRJSE14VzNKZE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUhRZ1BTQnpNUzVzWlc1bmRHZ3NJRzRnUFNCdVpYY2dRWEp5WVhrb2RDazdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUNFOVBTQjBPeUFySzJrcGJsdHBYU0E5SUdrN0NpQWdJQ0J5WlhSMWNtNGdiaTV6YjNKMEtHVXBMQ0J1T3dwOUNtWjFibU4wYVc5dUlGOWpLSE14TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlITXhMbXhsYm1kMGFDd2dhU0E5SUc1bGR5QnpNUzVqYjI1emRISjFZM1J2Y2lodUtUc0tJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJR0VnUFNBd095QmhJQ0U5UFNCdU95QXJLM0lwZXdvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEZ0eVhTQXFJR1U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Ec2dZeUFoUFQwZ1pUc2dLeXRqS1dsYllTc3JYU0E5SUhNeFcyOGdLeUJqWFRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCcE93cDlDbVoxYm1OMGFXOXVJQ1JqS0hNeExDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SURFc0lISWdQU0J6TVZzd1hUc0tJQ0FnSUdadmNpZzdJSElnSVQwOUlIWnZhV1FnTUNBbUppQnlXMjVkSUQwOVBTQjJiMmxrSURBN0tYSWdQU0J6TVZ0cEt5dGRPd29nSUNBZ2FXWWdLSElnUFQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdiR1YwSUdFZ1BTQnlXMjVkT3dvZ0lDQWdhV1lnS0dFZ0lUMDlJSFp2YVdRZ01Da2dhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29ZU2twSUdSdklHRWdQU0J5VzI1ZExDQmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXVjSFZ6YUNoeUxuUnBiV1VwTENCMExuQjFjMmd1WVhCd2JIa29kQ3dnWVNrcExDQnlJRDBnY3pGYmFTc3JYVHNLSUNBZ0lIZG9hV3hsSUNoeUlDRTlQU0IyYjJsa0lEQXBDaUFnSUNCbGJITmxJR2xtSUNoaExuUnZRWEp5WVhrZ0lUMDlJSFp2YVdRZ01Da2daRzhnWVNBOUlISmJibDBzSUdFZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlM1d2RYTm9LSEl1ZEdsdFpTa3NJR0V1ZEc5QmNuSmhlU2gwTENCMExteGxibWQwYUNrcExDQnlJRDBnY3pGYmFTc3JYVHNLSUNBZ0lIZG9hV3hsSUNoeUlDRTlQU0IyYjJsa0lEQXBDaUFnSUNCbGJITmxJR1J2SUdFZ1BTQnlXMjVkTENCaElDRTlQU0IyYjJsa0lEQWdKaVlnS0dVdWNIVnphQ2h5TG5ScGJXVXBMQ0IwTG5CMWMyZ29ZU2twTENCeUlEMGdjekZiYVNzclhUc0tJQ0FnSUhkb2FXeGxJQ2h5SUNFOVBTQjJiMmxrSURBcENuMEtablZ1WTNScGIyNGdlWGdvY3pFc0lHVXNJSFFzSUc0c0lHa2dQU0F6TUNrZ2V3b2dJQ0FnYkdWMElISWdQU0J6TVM1amJHOXVaU2dwT3dvZ0lDQWdjaTV1WVcxbElEMGdaVHNLSUNBZ0lHeGxkQ0JoSUQwZ1cxMDdDaUFnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUR3Z2NpNTBjbUZqYTNNdWJHVnVaM1JvT3lBcksyTXBld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdjaTUwY21GamEzTmJZMTBzSUdnZ1BTQnNMbWRsZEZaaGJIVmxVMmw2WlNncExDQjFJRDBnVzEwc0lHUWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3Z2JDNTBhVzFsY3k1c1pXNW5kR2c3SUNzclppbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnYkM1MGFXMWxjMXRtWFNBcUlHazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLRzBnUENCMElIeDhJRzBnUGowZ2Jpa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1Y0hWemFDaHNMblJwYldWelcyWmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SURBN0lGOGdQQ0JvT3lBcksxOHBaQzV3ZFhOb0tHd3VkbUZzZFdWelcyWWdLaUJvSUNzZ1gxMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIVXViR1Z1WjNSb0lDRTlQU0F3SUNZbUlDaHNMblJwYldWeklEMGdibWtvZFN3Z2JDNTBhVzFsY3k1amIyNXpkSEoxWTNSdmNpa3NJR3d1ZG1Gc2RXVnpJRDBnYm1rb1pDd2diQzUyWVd4MVpYTXVZMjl1YzNSeWRXTjBiM0lwTENCaExuQjFjMmdvYkNrcE93b2dJQ0FnZlFvZ0lDQWdjaTUwY21GamEzTWdQU0JoT3dvZ0lDQWdiR1YwSUc4Z1BTQXhJQzhnTURzS0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBN0lHTWdQQ0J5TG5SeVlXTnJjeTVzWlc1bmRHZzdJQ3NyWXlsdklENGdjaTUwY21GamEzTmJZMTB1ZEdsdFpYTmJNRjBnSmlZZ0tHOGdQU0J5TG5SeVlXTnJjMXRqWFM1MGFXMWxjMXN3WFNrN0NpQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJRHdnY2k1MGNtRmphM011YkdWdVozUm9PeUFySzJNcGNpNTBjbUZqYTNOYlkxMHVjMmhwWm5Rb0xURWdLaUJ2S1RzS0lDQWdJSEpsZEhWeWJpQnlMbkpsYzJWMFJIVnlZWFJwYjI0b0tTd2djanNLZlFwbWRXNWpkR2x2YmlCTmVDaHpNU3dnWlNBOUlEQXNJSFFnUFNCek1Td2diaUE5SURNd0tTQjdDaUFnSUNCdUlEdzlJREFnSmlZZ0tHNGdQU0F6TUNrN0NpQWdJQ0JzWlhRZ2FTQTlJSFF1ZEhKaFkydHpMbXhsYm1kMGFDd2djaUE5SUdVZ0x5QnVPd29nSUNBZ1ptOXlLR3hsZENCaElEMGdNRHNnWVNBOElHazdJQ3NyWVNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMExuUnlZV05yYzF0aFhTd2dZeUE5SUc4dVZtRnNkV1ZVZVhCbFRtRnRaVHNLSUNBZ0lDQWdJQ0JwWmlBb1l5QTlQVDBnSW1KdmIyd2lJSHg4SUdNZ1BUMDlJQ0p6ZEhKcGJtY2lLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSE14TG5SeVlXTnJjeTVtYVc1a0tHWjFibU4wYVc5dUtIQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhBdWJtRnRaU0E5UFQwZ2J5NXVZVzFsSUNZbUlIQXVWbUZzZFdWVWVYQmxUbUZ0WlNBOVBUMGdZenNLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ2RtOXBaQ0F3S1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SURBc0lIVWdQU0J2TG1kbGRGWmhiSFZsVTJsNlpTZ3BPd29nSUNBZ0lDQWdJRzh1WTNKbFlYUmxTVzUwWlhKd2IyeGhiblF1YVhOSmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJIVEZSR1EzVmlhV05UY0d4cGJtVWdKaVlnS0dnZ1BTQjFJQzhnTXlrN0NpQWdJQ0FnSUNBZ2JHVjBJR1FnUFNBd0xDQm1JRDBnYkM1blpYUldZV3gxWlZOcGVtVW9LVHNLSUNBZ0lDQWdJQ0JzTG1OeVpXRjBaVWx1ZEdWeWNHOXNZVzUwTG1selNXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrUjB4VVJrTjFZbWxqVTNCc2FXNWxJQ1ltSUNoa0lEMGdaaUF2SURNcE93b2dJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ2J5NTBhVzFsY3k1c1pXNW5kR2dnTFNBeExDQmZPd29nSUNBZ0lDQWdJR2xtSUNoeUlEdzlJRzh1ZEdsdFpYTmJNRjBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm9MQ0IySUQwZ2RTQXRJR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lGOGdQU0J2TG5aaGJIVmxjeTV6YkdsalpTaHdMQ0IyS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tISWdQajBnYnk1MGFXMWxjMXR0WFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRzBnS2lCMUlDc2dhQ3dnZGlBOUlIQWdLeUIxSUMwZ2FEc0tJQ0FnSUNBZ0lDQWdJQ0FnWHlBOUlHOHVkbUZzZFdWekxuTnNhV05sS0hBc0lIWXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYnk1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENncExDQjJJRDBnYUN3Z2VDQTlJSFVnTFNCb093b2dJQ0FnSUNBZ0lDQWdJQ0J3TG1WMllXeDFZWFJsS0hJcExDQmZJRDBnY0M1eVpYTjFiSFJDZFdabVpYSXVjMnhwWTJVb2Rpd2dlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdNZ1BUMDlJQ0p4ZFdGMFpYSnVhVzl1SWlBbUppQnVaWGNnVlhRb0tTNW1jbTl0UVhKeVlYa29YeWt1Ym05eWJXRnNhWHBsS0NrdVkyOXVhblZuWVhSbEtDa3VkRzlCY25KaGVTaGZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR3d1ZEdsdFpYTXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BDQm5PeUFySzNBcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJSEFnS2lCbUlDc2daRHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01nUFQwOUlDSnhkV0YwWlhKdWFXOXVJaWtnVlhRdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWMwWnNZWFFvYkM1MllXeDFaWE1zSUhZc0lGOHNJREFzSUd3dWRtRnNkV1Z6TENCMktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlHWWdMU0JrSUNvZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREE3SUhrZ1BDQjRPeUFySzNrcGJDNTJZV3gxWlhOYmRpQXJJSGxkSUMwOUlGOWJlVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdjekV1WW14bGJtUk5iMlJsSUQwZ2VHUXNJSE14T3dwOUNuWmhjaUJUZGlBOUlIc0tJQ0FnSUdOdmJuWmxjblJCY25KaGVUb2dibWtzQ2lBZ0lDQnBjMVI1Y0dWa1FYSnlZWGs2SUZWa0xBb2dJQ0FnWjJWMFMyVjVabkpoYldWUGNtUmxjam9nUkdRc0NpQWdJQ0J6YjNKMFpXUkJjbkpoZVRvZ1gyTXNDaUFnSUNCbWJHRjBkR1Z1U2xOUFRqb2dKR01zQ2lBZ0lDQnpkV0pqYkdsd09pQjVlQ3dLSUNBZ0lHMWhhMlZEYkdsd1FXUmthWFJwZG1VNklFMTRDbjBzSUdWeklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1d1lYSmhiV1YwWlhKUWIzTnBkR2x2Ym5NZ1BTQmxMQ0IwYUdsekxsOWpZV05vWldSSmJtUmxlQ0E5SURBc0lIUm9hWE11Y21WemRXeDBRblZtWm1WeUlEMGdhU0FoUFQwZ2RtOXBaQ0F3SUQ4Z2FTQTZJRzVsZHlCMExtTnZibk4wY25WamRHOXlLRzRwTENCMGFHbHpMbk5oYlhCc1pWWmhiSFZsY3lBOUlIUXNJSFJvYVhNdWRtRnNkV1ZUYVhwbElEMGdiaXdnZEdocGN5NXpaWFIwYVc1bmN5QTlJRzUxYkd3c0lIUm9hWE11UkdWbVlYVnNkRk5sZEhScGJtZHpYeUE5SUh0OU93b2dJQ0FnZlFvZ0lDQWdaWFpoYkhWaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXdZWEpoYldWMFpYSlFiM05wZEdsdmJuTXNJRzRnUFNCMGFHbHpMbDlqWVdOb1pXUkpibVJsZUN3Z2FTQTlJSFJiYmwwc0lISWdQU0IwVzI0Z0xTQXhYVHNLSUNBZ0lDQWdJQ0JsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHazZJR2xtSUNnaEtHVWdQQ0JwS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQnVJQ3NnTWpzN0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlNBOElISXBJR0p5WldGcklHazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z1BTQjBMbXhsYm1kMGFDd2dkR2hwY3k1ZlkyRmphR1ZrU1c1a1pYZ2dQU0J1TENCMGFHbHpMbU52Y0hsVFlXMXdiR1ZXWVd4MVpWOG9iaUF0SURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNGdQVDA5SUc4cElHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFNCcExDQnBJRDBnZEZzcksyNWRMQ0JsSUR3Z2FTa2dZbkpsWVdzZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdkQzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZySUc0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLR1VnUGowZ2Npa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBXekZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUR3Z2J5QW1KaUFvYmlBOUlESXNJSElnUFNCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdiaUF0SURJN095bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1ZlkyRmphR1ZrU1c1a1pYZ2dQU0F3TENCMGFHbHpMbU52Y0hsVFlXMXdiR1ZXWVd4MVpWOG9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ1l5a2dZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlISXNJSElnUFNCMFd5MHRiaUF0SURGZExDQmxJRDQ5SUhJcElHSnlaV0ZySUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHNHNJRzRnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF5QmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0RzZ2JpQThJR0U3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNGdLeUJoSUQ0K1BpQXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BDQjBXMjlkSUQ4Z1lTQTlJRzhnT2lCdUlEMGdieUFySURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5SUhSYmJsMHNJSElnUFNCMFcyNGdMU0F4WFN3Z2NpQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1ZlkyRmphR1ZrU1c1a1pYZ2dQU0F3TENCMGFHbHpMbU52Y0hsVFlXMXdiR1ZXWVd4MVpWOG9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdiaUE5SUhRdWJHVnVaM1JvTENCMGFHbHpMbDlqWVdOb1pXUkpibVJsZUNBOUlHNHNJSFJvYVhNdVkyOXdlVk5oYlhCc1pWWmhiSFZsWHlodUlDMGdNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZZMkZqYUdWa1NXNWtaWGdnUFNCdUxDQjBhR2x6TG1sdWRHVnlkbUZzUTJoaGJtZGxaRjhvYml3Z2Npd2dhU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHVkR1Z5Y0c5c1lYUmxYeWh1TENCeUxDQmxMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRk5sZEhScGJtZHpYeWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFIwYVc1bmN5QjhmQ0IwYUdsekxrUmxabUYxYkhSVFpYUjBhVzVuYzE4N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1VTJGdGNHeGxWbUZzZFdWZktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNtVnpkV3gwUW5WbVptVnlMQ0J1SUQwZ2RHaHBjeTV6WVcxd2JHVldZV3gxWlhNc0lHa2dQU0IwYUdsekxuWmhiSFZsVTJsNlpTd2djaUE5SUdVZ0tpQnBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUdrN0lDc3JZU2wwVzJGZElEMGdibHR5SUNzZ1lWMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuQnZiR0YwWlY4b0tTQjdDaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSmpZV3hzSUhSdklHRmljM1J5WVdOMElHMWxkR2h2WkNJcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKMllXeERhR0Z1WjJWa1h5Z3BJSHQ5Q24wc0lIaGpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmxjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVMQ0JwS1N3Z2RHaHBjeTVmZDJWcFoyaDBVSEpsZGlBOUlDMHdMQ0IwYUdsekxsOXZabVp6WlhSUWNtVjJJRDBnTFRBc0lIUm9hWE11WDNkbGFXZG9kRTVsZUhRZ1BTQXRNQ3dnZEdocGN5NWZiMlptYzJWMFRtVjRkQ0E5SUMwd0xDQjBhR2x6TGtSbFptRjFiSFJUWlhSMGFXNW5jMThnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WkdsdVoxTjBZWEowT2lCNmFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1a2FXNW5SVzVrT2lCNmFRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuWmhiRU5vWVc1blpXUmZLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWNHRnlZVzFsZEdWeVVHOXphWFJwYjI1ekxDQnlJRDBnWlNBdElESXNJR0VnUFNCbElDc2dNU3dnYnlBOUlHbGJjbDBzSUdNZ1BTQnBXMkZkT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNCMmIybGtJREFwSUhOM2FYUmphQ2gwYUdsekxtZGxkRk5sZEhScGJtZHpYeWdwTG1WdVpHbHVaMU4wWVhKMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQldhVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElnUFNCbExDQnZJRDBnTWlBcUlIUWdMU0J1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdRbkk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5SUQwZ2FTNXNaVzVuZEdnZ0xTQXlMQ0J2SUQwZ2RDQXJJR2xiY2wwZ0xTQnBXM0lnS3lBeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJR1VzSUc4Z1BTQnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1l5QTlQVDBnZG05cFpDQXdLU0J6ZDJsMFkyZ29kR2hwY3k1blpYUlRaWFIwYVc1bmMxOG9LUzVsYm1ScGJtZEZibVFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZacE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJR1VzSUdNZ1BTQXlJQ29nYmlBdElIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCQ2Nqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0F4TENCaklEMGdiaUFySUdsYk1WMGdMU0JwV3pCZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdaU0F0SURFc0lHTWdQU0IwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUNodUlDMGdkQ2tnS2lBdU5Td2dhQ0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJSFJvYVhNdVgzZGxhV2RvZEZCeVpYWWdQU0JzSUM4Z0tIUWdMU0J2S1N3Z2RHaHBjeTVmZDJWcFoyaDBUbVY0ZENBOUlHd2dMeUFvWXlBdElHNHBMQ0IwYUdsekxsOXZabVp6WlhSUWNtVjJJRDBnY2lBcUlHZ3NJSFJvYVhNdVgyOW1abk5sZEU1bGVIUWdQU0JoSUNvZ2FEc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWNHOXNZWFJsWHlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TG5KbGMzVnNkRUoxWm1abGNpd2dZU0E5SUhSb2FYTXVjMkZ0Y0d4bFZtRnNkV1Z6TENCdklEMGdkR2hwY3k1MllXeDFaVk5wZW1Vc0lHTWdQU0JsSUNvZ2J5d2diQ0E5SUdNZ0xTQnZMQ0JvSUQwZ2RHaHBjeTVmYjJabWMyVjBVSEpsZGl3Z2RTQTlJSFJvYVhNdVgyOW1abk5sZEU1bGVIUXNJR1FnUFNCMGFHbHpMbDkzWldsbmFIUlFjbVYyTENCbUlEMGdkR2hwY3k1ZmQyVnBaMmgwVG1WNGRDd2diU0E5SUNodUlDMGdkQ2tnTHlBb2FTQXRJSFFwTENCZklEMGdiU0FxSUcwc0lHY2dQU0JmSUNvZ2JTd2djQ0E5SUMxa0lDb2daeUFySURJZ0tpQmtJQ29nWHlBdElHUWdLaUJ0TENCMklEMGdLREVnS3lCa0tTQXFJR2NnS3lBb0xURXVOU0F0SURJZ0tpQmtLU0FxSUY4Z0t5QW9MUzQxSUNzZ1pDa2dLaUJ0SUNzZ01Td2dlQ0E5SUNndE1TQXRJR1lwSUNvZ1p5QXJJQ2d4TGpVZ0t5Qm1LU0FxSUY4Z0t5QXVOU0FxSUcwc0lIa2dQU0JtSUNvZ1p5QXRJR1lnS2lCZk93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lpQTlJREE3SUdJZ0lUMDlJRzg3SUNzcllpbHlXMkpkSUQwZ2NDQXFJR0ZiYUNBcklHSmRJQ3NnZGlBcUlHRmJiQ0FySUdKZElDc2dlQ0FxSUdGYll5QXJJR0pkSUNzZ2VTQXFJR0ZiZFNBcklHSmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlPd29nSUNBZ2ZRcDlMQ0JtWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWlhNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuQnZiR0YwWlY4b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1eVpYTjFiSFJDZFdabVpYSXNJR0VnUFNCMGFHbHpMbk5oYlhCc1pWWmhiSFZsY3l3Z2J5QTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQmpJRDBnWlNBcUlHOHNJR3dnUFNCaklDMGdieXdnYUNBOUlDaHVJQzBnZENrZ0x5QW9hU0F0SUhRcExDQjFJRDBnTVNBdElHZzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmtJRDBnTURzZ1pDQWhQVDBnYnpzZ0t5dGtLWEpiWkYwZ1BTQmhXMndnS3lCa1hTQXFJSFVnS3lCaFcyTWdLeUJrWFNBcUlHZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISTdDaUFnSUNCOUNuMHNJSFpqSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJsY3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWNHOXNZWFJsWHlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5d2VWTmhiWEJzWlZaaGJIVmxYeWhsSUMwZ01TazdDaUFnSUNCOUNuMHNJRXAwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVNsN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlIWnZhV1FnTUNrZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQjBjbUZqYXlCdVlXMWxJR2x6SUhWdVpHVm1hVzVsWkNJcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQjJiMmxrSURBZ2ZId2dkQzVzWlc1bmRHZ2dQVDA5SURBcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dibThnYTJWNVpuSmhiV1Z6SUdsdUlIUnlZV05ySUc1aGJXVmtJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0JsTENCMGFHbHpMblJwYldWeklEMGdibWtvZEN3Z2RHaHBjeTVVYVcxbFFuVm1abVZ5Vkhsd1pTa3NJSFJvYVhNdWRtRnNkV1Z6SUQwZ2Jta29iaXdnZEdocGN5NVdZV3gxWlVKMVptWmxjbFI1Y0dVcExDQjBhR2x6TG5ObGRFbHVkR1Z5Y0c5c1lYUnBiMjRvYVNCOGZDQjBhR2x6TGtSbFptRjFiSFJKYm5SbGNuQnZiR0YwYVc5dUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVqYjI1emRISjFZM1J2Y2l3Z2Jqc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1MGIwcFRUMDRnSVQwOUlIUm9hWE11ZEc5S1UwOU9LU0J1SUQwZ2RDNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzRnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJsTG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhVzFsY3pvZ2Jta29aUzUwYVcxbGN5d2dRWEp5WVhrcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1Z6T2lCdWFTaGxMblpoYkhWbGN5d2dRWEp5WVhrcENpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNW5aWFJKYm5SbGNuQnZiR0YwYVc5dUtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdrZ0lUMDlJR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z0ppWWdLRzR1YVc1MFpYSndiMnhoZEdsdmJpQTlJR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1MGVYQmxJRDBnWlM1V1lXeDFaVlI1Y0dWT1lXMWxMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1NXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrUkdselkzSmxkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkbU1vZEdocGN5NTBhVzFsY3l3Z2RHaHBjeTUyWVd4MVpYTXNJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2tzSUdVcE93b2dJQ0FnZlFvZ0lDQWdTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJR1poS0hSb2FYTXVkR2x0WlhNc0lIUm9hWE11ZG1Gc2RXVnpMQ0IwYUdsekxtZGxkRlpoYkhWbFUybDZaU2dwTENCbEtUc0tJQ0FnSUgwS0lDQWdJRWx1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUI0WXloMGFHbHpMblJwYldWekxDQjBhR2x6TG5aaGJIVmxjeXdnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1N3Z1pTazdDaUFnSUNCOUNpQWdJQ0J6WlhSSmJuUmxjbkJ2YkdGMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkRHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVDNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdkR2hwY3k1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJFYVhOamNtVjBaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFWnlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdUR0U2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2RHaHBjeTVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlDSjFibk4xY0hCdmNuUmxaQ0JwYm5SbGNuQnZiR0YwYVc5dUlHWnZjaUFpSUNzZ2RHaHBjeTVXWVd4MVpWUjVjR1ZPWVcxbElDc2dJaUJyWlhsbWNtRnRaU0IwY21GamF5QnVZVzFsWkNBaUlDc2dkR2hwY3k1dVlXMWxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENBOVBUMGdkbTlwWkNBd0tTQnBaaUFvWlNBaFBUMGdkR2hwY3k1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpa2dkR2hwY3k1elpYUkpiblJsY25CdmJHRjBhVzl1S0hSb2FYTXVSR1ZtWVhWc2RFbHVkR1Z5Y0c5c1lYUnBiMjRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWh1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvaUxDQnVLU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBTVzUwWlhKd2IyeGhkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb2RHaHBjeTVqY21WaGRHVkpiblJsY25CdmJHRnVkQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZEdocGN5NUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSRWFYTmpjbVYwWlRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJQY2pzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCMGFHbHpMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJHY2pzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCMGFHbHpMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJNWVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm5aWFJXWVd4MVpWTnBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkbUZzZFdWekxteGxibWQwYUNBdklIUm9hWE11ZEdsdFpYTXViR1Z1WjNSb093b2dJQ0FnZlFvZ0lDQWdjMmhwWm5Rb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1MGFXMWxjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUXViR1Z1WjNSb095QnVJQ0U5UFNCcE95QXJLMjRwZEZ0dVhTQXJQU0JsT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWRHbHRaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hSYmJsMGdLajBnWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21sdEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVkR2x0WlhNc0lHa2dQU0J1TG14bGJtZDBhQ3dnY2lBOUlEQXNJR0VnUFNCcElDMGdNVHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJQ0U5UFNCcElDWW1JRzViY2wwZ1BDQmxPeWtySzNJN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnWVNBaFBUMGdMVEVnSmlZZ2JsdGhYU0ErSUhRN0tTMHRZVHNLSUNBZ0lDQWdJQ0JwWmlBb0t5dGhMQ0J5SUNFOVBTQXdJSHg4SUdFZ0lUMDlJR2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaUErUFNCaElDWW1JQ2hoSUQwZ1RXRjBhQzV0WVhnb1lTd2dNU2tzSUhJZ1BTQmhJQzBnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdkR2hwY3k1blpYUldZV3gxWlZOcGVtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwYVcxbGN5QTlJRzR1YzJ4cFkyVW9jaXdnWVNrc0lIUm9hWE11ZG1Gc2RXVnpJRDBnZEdocGN5NTJZV3gxWlhNdWMyeHBZMlVvY2lBcUlHOHNJR0VnS2lCdktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMllXeHBaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlDRXdMQ0IwSUQwZ2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tUc0tJQ0FnSUNBZ0lDQjBJQzBnVFdGMGFDNW1iRzl2Y2loMEtTQWhQVDBnTUNBbUppQW9ZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dTVzUyWVd4cFpDQjJZV3gxWlNCemFYcGxJR2x1SUhSeVlXTnJMaUlzSUhSb2FYTXBMQ0JsSUQwZ0lURXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1MGFXMWxjeXdnYVNBOUlIUm9hWE11ZG1Gc2RXVnpMQ0J5SUQwZ2JpNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ2NpQTlQVDBnTUNBbUppQW9ZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dWSEpoWTJzZ2FYTWdaVzF3ZEhrdUlpd2dkR2hwY3lrc0lHVWdQU0FoTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdJVDA5SUhJN0lHOHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2JsdHZYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmpJRDA5SUNKdWRXMWlaWElpSUNZbUlHbHpUbUZPS0dNcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQlVhVzFsSUdseklHNXZkQ0JoSUhaaGJHbGtJRzUxYldKbGNpNGlMQ0IwYUdsekxDQnZMQ0JqS1N3Z1pTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dFZ0lUMDlJRzUxYkd3Z0ppWWdZU0ErSUdNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3RsZVdaeVlXMWxWSEpoWTJzNklFOTFkQ0J2WmlCdmNtUmxjaUJyWlhsekxpSXNJSFJvYVhNc0lHOHNJR01zSUdFcExDQmxJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ1l6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01DQW1KaUJWWkNocEtTa2dabTl5S0d4bGRDQnZJRDBnTUN3Z1l5QTlJR2t1YkdWdVozUm9PeUJ2SUNFOVBTQmpPeUFySzI4cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR2xiYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMwNWhUaWhzS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvZ1ZtRnNkV1VnYVhNZ2JtOTBJR0VnZG1Gc2FXUWdiblZ0WW1WeUxpSXNJSFJvYVhNc0lHOHNJR3dwTENCbElEMGdJVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLSUNBZ0lHOXdkR2x0YVhwbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1MGFXMWxjeTV6YkdsalpTZ3BMQ0IwSUQwZ2RHaHBjeTUyWVd4MVpYTXVjMnhwWTJVb0tTd2diaUE5SUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0Nrc0lHa2dQU0IwYUdsekxtZGxkRWx1ZEdWeWNHOXNZWFJwYjI0b0tTQTlQVDBnVEdFc0lISWdQU0JsTG14bGJtZDBhQ0F0SURFc0lHRWdQU0F4T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlERTdJRzhnUENCeU95QXJLMjhwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlDRXhMQ0JzSUQwZ1pWdHZYU3dnYUNBOUlHVmJieUFySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDQWhQVDBnYUNBbUppQW9ieUFoUFQwZ01TQjhmQ0JzSUNFOVBTQmxXekJkS1NrZ2FXWWdLR2twSUdNZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJRzhnS2lCdUxDQmtJRDBnZFNBdElHNHNJR1lnUFNCMUlDc2dianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBN0lHMGdJVDA5SUc0N0lDc3JiU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCMFczVWdLeUJ0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWHlBaFBUMGdkRnRrSUNzZ2JWMGdmSHdnWHlBaFBUMGdkRnRtSUNzZ2JWMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeUE5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZJQ0U5UFNCaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlZ0aFhTQTlJR1ZiYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQnZJQ29nYml3Z1pDQTlJR0VnS2lCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaaUE5SURBN0lHWWdJVDA5SUc0N0lDc3JaaWwwVzJRZ0t5Qm1YU0E5SUhSYmRTQXJJR1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS3l0aE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHlJRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsVzJGZElEMGdaVnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnY2lBcUlHNHNJR01nUFNCaElDb2diaXdnYkNBOUlEQTdJR3dnSVQwOUlHNDdJQ3NyYkNsMFcyTWdLeUJzWFNBOUlIUmJieUFySUd4ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FySzJFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaElDRTlQU0JsTG14bGJtZDBhQ0EvSUNoMGFHbHpMblJwYldWeklEMGdaUzV6YkdsalpTZ3dMQ0JoS1N3Z2RHaHBjeTUyWVd4MVpYTWdQU0IwTG5Oc2FXTmxLREFzSUdFZ0tpQnVLU2tnT2lBb2RHaHBjeTUwYVcxbGN5QTlJR1VzSUhSb2FYTXVkbUZzZFdWeklEMGdkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWRHbHRaWE11YzJ4cFkyVW9LU3dnZENBOUlIUm9hWE11ZG1Gc2RXVnpMbk5zYVdObEtDa3NJRzRnUFNCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TENCcElEMGdibVYzSUc0b2RHaHBjeTV1WVcxbExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVM1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENBOUlIUm9hWE11WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFzSUdrN0NpQWdJQ0I5Q24wN0NrcDBMbkJ5YjNSdmRIbHdaUzVVYVcxbFFuVm1abVZ5Vkhsd1pTQTlJRVpzYjJGME16SkJjbkpoZVRzS1NuUXVjSEp2ZEc5MGVYQmxMbFpoYkhWbFFuVm1abVZ5Vkhsd1pTQTlJRVpzYjJGME16SkJjbkpoZVRzS1NuUXVjSEp2ZEc5MGVYQmxMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1SUQwZ1JuSTdDblpoY2lCV2JpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NuUWdld3A5T3dwV2JpNXdjbTkwYjNSNWNHVXVWbUZzZFdWVWVYQmxUbUZ0WlNBOUlDSmliMjlzSWpzS1ZtNHVjSEp2ZEc5MGVYQmxMbFpoYkhWbFFuVm1abVZ5Vkhsd1pTQTlJRUZ5Y21GNU93cFdiaTV3Y205MGIzUjVjR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z1BTQlBjanNLVm00dWNISnZkRzkwZVhCbExrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkV4cGJtVmhjaUE5SUhadmFXUWdNRHNLVm00dWNISnZkRzkwZVhCbExrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkZOdGIyOTBhQ0E5SUhadmFXUWdNRHNLZG1GeUlIQmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QktkQ0I3Q24wN0NuQmhMbkJ5YjNSdmRIbHdaUzVXWVd4MVpWUjVjR1ZPWVcxbElEMGdJbU52Ykc5eUlqc0tkbUZ5SUhSeklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCS2RDQjdDbjA3Q25SekxuQnliM1J2ZEhsd1pTNVdZV3gxWlZSNWNHVk9ZVzFsSUQwZ0ltNTFiV0psY2lJN0NuWmhjaUI1WXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWlhNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuQnZiR0YwWlY4b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1eVpYTjFiSFJDZFdabVpYSXNJR0VnUFNCMGFHbHpMbk5oYlhCc1pWWmhiSFZsY3l3Z2J5QTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQmpJRDBnS0c0Z0xTQjBLU0F2SUNocElDMGdkQ2tzSUd3Z1BTQmxJQ29nYnpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdnZ1BTQnNJQ3NnYnpzZ2JDQWhQVDBnYURzZ2JDQXJQU0EwS1ZWMExuTnNaWEp3Um14aGRDaHlMQ0F3TENCaExDQnNJQzBnYnl3Z1lTd2diQ3dnWXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wc0lIQnBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QktkQ0I3Q2lBZ0lDQkpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSTWFXNWxZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dlV01vZEdocGN5NTBhVzFsY3l3Z2RHaHBjeTUyWVd4MVpYTXNJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2tzSUdVcE93b2dJQ0FnZlFwOU93cHdhUzV3Y205MGIzUjVjR1V1Vm1Gc2RXVlVlWEJsVG1GdFpTQTlJQ0p4ZFdGMFpYSnVhVzl1SWpzS2NHa3VjSEp2ZEc5MGVYQmxMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1SUQwZ1JuSTdDbkJwTG5CeWIzUnZkSGx3WlM1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZ2dQU0IyYjJsa0lEQTdDblpoY2lCcmJpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NuUWdld3A5T3dwcmJpNXdjbTkwYjNSNWNHVXVWbUZzZFdWVWVYQmxUbUZ0WlNBOUlDSnpkSEpwYm1jaU93cHJiaTV3Y205MGIzUjVjR1V1Vm1Gc2RXVkNkV1ptWlhKVWVYQmxJRDBnUVhKeVlYazdDbXR1TG5CeWIzUnZkSGx3WlM1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpQTlJRTl5T3dwcmJpNXdjbTkwYjNSNWNHVXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5SUQwZ2RtOXBaQ0F3T3dwcmJpNXdjbTkwYjNSNWNHVXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1UyMXZiM1JvSUQwZ2RtOXBaQ0F3T3dwMllYSWdibk1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRXAwSUhzS2ZUc0tibk11Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpZG1WamRHOXlJanNLZG1GeUlHbHpJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENBOUlDMHhMQ0J1TENCcElEMGdXR01wZXdvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlHVXNJSFJvYVhNdWRISmhZMnR6SUQwZ2Jpd2dkR2hwY3k1a2RYSmhkR2x2YmlBOUlIUXNJSFJvYVhNdVlteGxibVJOYjJSbElEMGdhU3dnZEdocGN5NTFkV2xrSUQwZ2EzUW9LU3dnZEdocGN5NWtkWEpoZEdsdmJpQThJREFnSmlZZ2RHaHBjeTV5WlhObGRFUjFjbUYwYVc5dUtDazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjR0Z5YzJVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdXMTBzSUc0Z1BTQmxMblJ5WVdOcmN5d2dhU0E5SURFZ0x5QW9aUzVtY0hNZ2ZId2dNU2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Dd2dieUE5SUc0dWJHVnVaM1JvT3lCaElDRTlQU0J2T3lBcksyRXBkQzV3ZFhOb0tHSjRLRzViWVYwcExuTmpZV3hsS0drcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUIwYUdsektHVXVibUZ0WlN3Z1pTNWtkWEpoZEdsdmJpd2dkQ3dnWlM1aWJHVnVaRTF2WkdVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeUxuVjFhV1FnUFNCbExuVjFhV1FzSUhJN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1SUQwZ1pTNTBjbUZqYTNNc0lHa2dQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUdVdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pIVnlZWFJwYjI0NklHVXVaSFZ5WVhScGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXTnJjem9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkWFZwWkRvZ1pTNTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQmliR1Z1WkUxdlpHVTZJR1V1WW14bGJtUk5iMlJsQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0JoSUQwZ2JpNXNaVzVuZEdnN0lISWdJVDA5SUdFN0lDc3JjaWwwTG5CMWMyZ29TblF1ZEc5S1UwOU9LRzViY2wwcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QkRjbVZoZEdWR2NtOXRUVzl5Y0doVVlYSm5aWFJUWlhGMVpXNWpaU2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMExteGxibWQwYUN3Z1lTQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnUENCeU95QnZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlGdGRMQ0JzSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdNdWNIVnphQ2dvYnlBcklISWdMU0F4S1NBbElISXNJRzhzSUNodklDc2dNU2tnSlNCeUtTd2diQzV3ZFhOb0tEQXNJREVzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRVJrS0dNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JqSUQwZ1gyTW9ZeXdnTVN3Z2FDa3NJR3dnUFNCZll5aHNMQ0F4TENCb0tTd2dJV2tnSmlZZ1kxc3dYU0E5UFQwZ01DQW1KaUFvWXk1d2RYTm9LSElwTENCc0xuQjFjMmdvYkZzd1hTa3BMQ0JoTG5CMWMyZ29ibVYzSUhSektDSXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lJZ0t5QjBXMjlkTG01aGJXVWdLeUFpWFNJc0lHTXNJR3dwTG5OallXeGxLREVnTHlCdUtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5aGxMQ0F0TVN3Z1lTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabWx1WkVKNVRtRnRaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxPd29nSUNBZ0lDQWdJR2xtSUNnaFFYSnlZWGt1YVhOQmNuSmhlU2hsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNGdQU0JwTG1kbGIyMWxkSEo1SUNZbUlHa3VaMlZ2YldWMGNua3VZVzVwYldGMGFXOXVjeUI4ZkNCcExtRnVhVzFoZEdsdmJuTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0J1TG14bGJtZDBhRHNnYVNzcktXbG1JQ2h1VzJsZExtNWhiV1VnUFQwOUlIUXBJSEpsZEhWeWJpQnVXMmxkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklFTnlaV0YwWlVOc2FYQnpSbkp2YlUxdmNuQm9WR0Z5WjJWMFUyVnhkV1Z1WTJWektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIdDlMQ0J5SUQwZ0wxNG9XMXgzTFYwcVB5a29XMXhrWFNzcEpDODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTUN3Z1l5QTlJR1V1YkdWdVozUm9PeUJ2SUR3Z1l6c2dieXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmxXMjlkTENCb0lEMGdiQzV1WVcxbExtMWhkR05vS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FDQW1KaUJvTG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2FGc3hYU3dnWkNBOUlHbGJkVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrSUh4OElDaHBXM1ZkSUQwZ1pDQTlJRnRkS1N3Z1pDNXdkWE5vS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklHbHVJR2twWVM1d2RYTm9LSFJvYVhNdVEzSmxZWFJsUm5KdmJVMXZjbkJvVkdGeVoyVjBVMlZ4ZFdWdVkyVW9ieXdnYVZ0dlhTd2dkQ3dnYmlrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklIQmhjbk5sUVc1cGJXRjBhVzl1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lXVXBJSEpsZEhWeWJpQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVCYm1sdFlYUnBiMjVEYkdsd09pQk9ieUJoYm1sdFlYUnBiMjRnYVc0Z1NsTlBUa3h2WVdSbGNpQmtZWFJoTGlJcExDQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWm5WdVkzUnBiMjRvZFN3Z1pDd2daaXdnYlN3Z1h5a2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aaTVzWlc1bmRHZ2dJVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ1cxMHNJSEFnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUmpLR1lzSUdjc0lIQXNJRzBwTENCbkxteGxibWQwYUNBaFBUMGdNQ0FtSmlCZkxuQjFjMmdvYm1WM0lIVW9aQ3dnWnl3Z2NDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd2dhU0E5SUZ0ZExDQnlJRDBnWlM1dVlXMWxJSHg4SUNKa1pXWmhkV3gwSWl3Z1lTQTlJR1V1Wm5CeklIeDhJRE13TENCdklEMGdaUzVpYkdWdVpFMXZaR1VzSUdNZ1BTQmxMbXhsYm1kMGFDQjhmQ0F0TVN3Z2JDQTlJR1V1YUdsbGNtRnlZMmg1SUh4OElGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SURBN0lIVWdQQ0JzTG14bGJtZDBhRHNnZFNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JzVzNWZExtdGxlWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doS0NGa0lIeDhJR1F1YkdWdVozUm9JRDA5UFNBd0tTa2dhV1lnS0dSYk1GMHViVzl5Y0doVVlYSm5aWFJ6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUh0OUxDQnRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0cwZ1BTQXdPeUJ0SUR3Z1pDNXNaVzVuZEdnN0lHMHJLeWxwWmlBb1pGdHRYUzV0YjNKd2FGUmhjbWRsZEhNcElHWnZjaWhzWlhRZ1h5QTlJREE3SUY4Z1BDQmtXMjFkTG0xdmNuQm9WR0Z5WjJWMGN5NXNaVzVuZEdnN0lGOHJLeWxtVzJSYmJWMHViVzl5Y0doVVlYSm5aWFJ6VzE5ZFhTQTlJQzB4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUdsdUlHWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnVzEwc0lIQWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWWdQU0F3T3lCMklDRTlQU0JrVzIxZExtMXZjbkJvVkdGeVoyVjBjeTVzWlc1bmRHZzdJQ3NyZGlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnWkZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1p5NXdkWE5vS0hndWRHbHRaU2tzSUhBdWNIVnphQ2g0TG0xdmNuQm9WR0Z5WjJWMElEMDlQU0JmSUQ4Z01TQTZJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5CMWMyZ29ibVYzSUhSektDSXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZiSWlBcklGOGdLeUFpWFNJc0lHY3NJSEFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNZ1BTQm1MbXhsYm1kMGFDQXFJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUNJdVltOXVaWE5iSWlBcklIUmJkVjB1Ym1GdFpTQXJJQ0pkSWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0b2JuTXNJR1lnS3lBaUxuQnZjMmwwYVc5dUlpd2daQ3dnSW5CdmN5SXNJR2twTENCdUtIQnBMQ0JtSUNzZ0lpNXhkV0YwWlhKdWFXOXVJaXdnWkN3Z0luSnZkQ0lzSUdrcExDQnVLRzV6TENCbUlDc2dJaTV6WTJGc1pTSXNJR1FzSUNKelkyd2lMQ0JwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhUzVzWlc1bmRHZ2dQVDA5SURBZ1B5QnVkV3hzSURvZ2JtVjNJSFJvYVhNb2Npd2dZeXdnYVN3Z2J5azdDaUFnSUNCOUNpQWdJQ0J5WlhObGRFUjFjbUYwYVc5dUtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1MGNtRmphM01zSUhRZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0JsTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxuUnlZV05yYzF0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlFMWhkR2d1YldGNEtIUXNJSEl1ZEdsdFpYTmJjaTUwYVcxbGN5NXNaVzVuZEdnZ0xTQXhYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUjFjbUYwYVc5dUlEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5YVcwb0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTURzZ1pTQThJSFJvYVhNdWRISmhZMnR6TG14bGJtZDBhRHNnWlNzcktYUm9hWE11ZEhKaFkydHpXMlZkTG5SeWFXMG9NQ3dnZEdocGN5NWtkWEpoZEdsdmJpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMllXeHBaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlDRXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0IwYUdsekxuUnlZV05yY3k1c1pXNW5kR2c3SUhRckt5bGxJRDBnWlNBbUppQjBhR2x6TG5SeVlXTnJjMXQwWFM1MllXeHBaR0YwWlNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbE93b2dJQ0FnZlFvZ0lDQWdiM0IwYVcxcGVtVW9LU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Ec2daU0E4SUhSb2FYTXVkSEpoWTJ0ekxteGxibWQwYURzZ1pTc3JLWFJvYVhNdWRISmhZMnR6VzJWZExtOXdkR2x0YVhwbEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQjBhR2x6TG5SeVlXTnJjeTVzWlc1bmRHZzdJSFFyS3lsbExuQjFjMmdvZEdocGN5NTBjbUZqYTNOYmRGMHVZMnh2Ym1Vb0tTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLSFJvYVhNdWJtRnRaU3dnZEdocGN5NWtkWEpoZEdsdmJpd2daU3dnZEdocGN5NWliR1Z1WkUxdlpHVXBPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZibk4wY25WamRHOXlMblJ2U2xOUFRpaDBhR2x6S1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1UzZ29jekVwSUhzS0lDQWdJSE4zYVhSamFDaHpNUzUwYjB4dmQyVnlRMkZ6WlNncEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKelkyRnNZWElpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJbVJ2ZFdKc1pTSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaVpteHZZWFFpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJbTUxYldKbGNpSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWFXNTBaV2RsY2lJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjenNLSUNBZ0lDQWdJQ0JqWVhObElDSjJaV04wYjNJaU9nb2dJQ0FnSUNBZ0lHTmhjMlVnSW5abFkzUnZjaklpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJblpsWTNSdmNqTWlPZ29nSUNBZ0lDQWdJR05oYzJVZ0luWmxZM1J2Y2pRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibk03Q2lBZ0lDQWdJQ0FnWTJGelpTQWlZMjlzYjNJaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0U3Q2lBZ0lDQWdJQ0FnWTJGelpTQWljWFZoZEdWeWJtbHZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2FUc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKaWIyOXNJam9LSUNBZ0lDQWdJQ0JqWVhObElDSmliMjlzWldGdUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRlp1T3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbk4wY21sdVp5STZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJyYmpzS0lDQWdJSDBLSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dWVzV6ZFhCd2IzSjBaV1FnZEhsd1pVNWhiV1U2SUNJZ0t5QnpNU2s3Q24wS1puVnVZM1JwYjI0Z1luZ29jekVwSUhzS0lDQWdJR2xtSUNoek1TNTBlWEJsSUQwOVBTQjJiMmxrSURBcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dkSEpoWTJzZ2RIbHdaU0IxYm1SbFptbHVaV1FzSUdOaGJpQnViM1FnY0dGeWMyVWlLVHNLSUNBZ0lHeGxkQ0JsSUQwZ1UzZ29jekV1ZEhsd1pTazdDaUFnSUNCcFppQW9jekV1ZEdsdFpYTWdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNGdQU0JiWFRzS0lDQWdJQ0FnSUNBa1l5aHpNUzVyWlhsekxDQjBMQ0J1TENBaWRtRnNkV1VpS1N3Z2N6RXVkR2x0WlhNZ1BTQjBMQ0J6TVM1MllXeDFaWE1nUFNCdU93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVXVjR0Z5YzJVZ0lUMDlJSFp2YVdRZ01DQS9JR1V1Y0dGeWMyVW9jekVwSURvZ2JtVjNJR1VvY3pFdWJtRnRaU3dnY3pFdWRHbHRaWE1zSUhNeExuWmhiSFZsY3l3Z2N6RXVhVzUwWlhKd2IyeGhkR2x2YmlrN0NuMEtkbUZ5SUhOeklEMGdld29nSUNBZ1pXNWhZbXhsWkRvZ0lURXNDaUFnSUNCbWFXeGxjem9nZTMwc0NpQWdJQ0JoWkdRNklHWjFibU4wYVc5dUtITXhMQ0JsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsYm1GaWJHVmtJQ0U5UFNBaE1TQW1KaUFvZEdocGN5NW1hV3hsYzF0ek1WMGdQU0JsS1RzS0lDQWdJSDBzQ2lBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0hNeEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVaVzVoWW14bFpDQWhQVDBnSVRFcElISmxkSFZ5YmlCMGFHbHpMbVpwYkdWelczTXhYVHNLSUNBZ0lIMHNDaUFnSUNCeVpXMXZkbVU2SUdaMWJtTjBhVzl1S0hNeEtTQjdDaUFnSUNBZ0lDQWdaR1ZzWlhSbElIUm9hWE11Wm1sc1pYTmJjekZkT3dvZ0lDQWdmU3dLSUNBZ0lHTnNaV0Z5T2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1acGJHVnpJRDBnZTMwN0NpQWdJQ0I5Q24wc0lHMWhJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TENCeUlEMGdJVEVzSUdFZ1BTQXdMQ0J2SUQwZ01Dd2dZeXdnYkNBOUlGdGRPd29nSUNBZ0lDQWdJSFJvYVhNdWIyNVRkR0Z5ZENBOUlIWnZhV1FnTUN3Z2RHaHBjeTV2Ymt4dllXUWdQU0JsTENCMGFHbHpMbTl1VUhKdlozSmxjM01nUFNCMExDQjBhR2x6TG05dVJYSnliM0lnUFNCdUxDQjBhR2x6TG1sMFpXMVRkR0Z5ZENBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5c3JMQ0J5SUQwOVBTQWhNU0FtSmlCcExtOXVVM1JoY25RZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG05dVUzUmhjblFvYUN3Z1lTd2dieWtzSUhJZ1BTQWhNRHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWwwWlcxRmJtUWdQU0JtZFc1amRHbHZiaWhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR0VyS3l3Z2FTNXZibEJ5YjJkeVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNXZibEJ5YjJkeVpYTnpLR2dzSUdFc0lHOHBMQ0JoSUQwOVBTQnZJQ1ltSUNoeUlEMGdJVEVzSUdrdWIyNU1iMkZrSUNFOVBTQjJiMmxrSURBZ0ppWWdhUzV2Ymt4dllXUW9LU2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVwZEdWdFJYSnliM0lnUFNCbWRXNWpkR2x2Ymlob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrdWIyNUZjbkp2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YjI1RmNuSnZjaWhvS1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5KbGMyOXNkbVZWVWt3Z1BTQm1kVzVqZEdsdmJpaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaklEOGdZeWhvS1NBNklHZzdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXpaWFJWVWt4TmIyUnBabWxsY2lBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNZ1BTQm9MQ0IwYUdsek93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVlXUmtTR0Z1Wkd4bGNpQTlJR1oxYm1OMGFXOXVLR2dzSUhVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR3d1Y0hWemFDaG9MQ0IxS1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbkpsYlc5MlpVaGhibVJzWlhJZ1BTQm1kVzVqZEdsdmJpaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JDNXBibVJsZUU5bUtHZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFNBaFBUMGdMVEVnSmlZZ2JDNXpjR3hwWTJVb2RTd2dNaWtzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJJWVc1a2JHVnlJRDBnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnYkM1c1pXNW5kR2c3SUhVZ1BDQmtPeUIxSUNzOUlESXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQnNXM1ZkTENCdElEMGdiRnQxSUNzZ01WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWmk1bmJHOWlZV3dnSmlZZ0tHWXViR0Z6ZEVsdVpHVjRJRDBnTUNrc0lHWXVkR1Z6ZENob0tTa2djbVYwZFhKdUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLZlN3Z1JYZ2dQU0J1WlhjZ2JXRXNJRVIwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVc1aFoyVnlJRDBnWlNBaFBUMGdkbTlwWkNBd0lEOGdaU0E2SUVWNExDQjBhR2x6TG1OeWIzTnpUM0pwWjJsdUlEMGdJbUZ1YjI1NWJXOTFjeUlzSUhSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4eklEMGdJVEVzSUhSb2FYTXVjR0YwYUNBOUlDSWlMQ0IwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0E5SUNJaUxDQjBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSWdQU0I3ZlRzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvS1NCN2ZRb2dJQ0FnYkc5aFpFRnplVzVqS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QlFjbTl0YVhObEtHWjFibU4wYVc5dUtHa3NJSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiaTVzYjJGa0tHVXNJR2tzSUhRc0lISXBPd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUW9nSUNBZ2NHRnljMlVvS1NCN2ZRb2dJQ0FnYzJWMFEzSnZjM05QY21sbmFXNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnliM056VDNKcFoybHVJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZDJsMGFFTnlaV1JsYm5ScFlXeHpJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGQmhkR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoZEdnZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVW1WemIzVnlZMlZRWVhSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2lBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NrUjBMa1JGUmtGVlRGUmZUVUZVUlZKSlFVeGZUa0ZOUlNBOUlDSmZYMFJGUmtGVlRGUWlPd3AyWVhJZ1ptNGdQU0I3ZlN3Z1RXTWdQU0JqYkdGemN5QmxlSFJsYm1SeklFVnljbTl5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBMQ0IwYUdsekxuSmxjM0J2Ym5ObElEMGdkRHNLSUNBZ0lIMEtmU3dnY200Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hsSUQwZ0lpSXBMQ0IwYUdsekxuQmhkR2dnSVQwOUlIWnZhV1FnTUNBbUppQW9aU0E5SUhSb2FYTXVjR0YwYUNBcklHVXBMQ0JsSUQwZ2RHaHBjeTV0WVc1aFoyVnlMbkpsYzI5c2RtVlZVa3dvWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCemN5NW5aWFFvWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLSElnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhSb2FYTXViV0Z1WVdkbGNpNXBkR1Z0VTNSaGNuUW9aU2tzSUhObGRGUnBiV1Z2ZFhRb0tDazlQbnNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQW1KaUIwS0hJcExDQjBhR2x6TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUxDQXdLU3dnY2pzS0lDQWdJQ0FnSUNCcFppQW9abTViWlYwZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCbWJsdGxYUzV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVURzloWkRvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVVSEp2WjNKbGMzTTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2YmtWeWNtOXlPaUJwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadVcyVmRJRDBnVzEwc0lHWnVXMlZkTG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCdmJreHZZV1E2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzl1VUhKdlozSmxjM002SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJRzl1UlhKeWIzSTZJR2tLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1bGR5QlNaWEYxWlhOMEtHVXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FHVmhaR1Z5Y3pvZ2JtVjNJRWhsWVdSbGNuTW9kR2hwY3k1eVpYRjFaWE4wU0dWaFpHVnlLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kzSmxaR1Z1ZEdsaGJITTZJSFJvYVhNdWQybDBhRU55WldSbGJuUnBZV3h6SUQ4Z0ltbHVZMngxWkdVaUlEb2dJbk5oYldVdGIzSnBaMmx1SWdvZ0lDQWdJQ0FnSUgwcExDQnZJRDBnZEdocGN5NXRhVzFsVkhsd1pTd2dZeUE5SUhSb2FYTXVjbVZ6Y0c5dWMyVlVlWEJsT3dvZ0lDQWdJQ0FnSUdabGRHTm9LR0VwTG5Sb1pXNG9LR3dwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc0xuTjBZWFIxY3lBOVBUMGdNakF3SUh4OElHd3VjM1JoZEhWeklEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQzV6ZEdGMGRYTWdQVDA5SURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVHYVd4bFRHOWhaR1Z5T2lCSVZGUlFJRk4wWVhSMWN5QXdJSEpsWTJWcGRtVmtMaUlwTENCMGVYQmxiMllnVW1WaFpHRmliR1ZUZEhKbFlXMGdQaUFpZFNJZ2ZId2diQzVpYjJSNUlEMDlQU0IyYjJsa0lEQWdmSHdnYkM1aWIyUjVMbWRsZEZKbFlXUmxjaUE5UFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnWm01YlpWMHNJSFVnUFNCc0xtSnZaSGt1WjJWMFVtVmhaR1Z5S0Nrc0lHUWdQU0JzTG1obFlXUmxjbk11WjJWMEtDSkRiMjUwWlc1MExVeGxibWQwYUNJcElIeDhJR3d1YUdWaFpHVnljeTVuWlhRb0lsZ3RSbWxzWlMxVGFYcGxJaWtzSUdZZ1BTQmtJRDhnY0dGeWMyVkpiblFvWkNrZ09pQXdMQ0J0SUQwZ1ppQWhQVDBnTUN3Z1h5QTlJREFzSUdjZ1BTQnVaWGNnVW1WaFpHRmliR1ZUZEhKbFlXMG9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBJQ2h3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWNtVmhaQ2dwTG5Sb1pXNG9LSHNnWkc5dVpUb2dlQ0FzSUhaaGJIVmxPaUI1SUNCOUtUMCtld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g0S1NCd0xtTnNiM05sS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjhnS3owZ2VTNWllWFJsVEdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRzVsZHlCUWNtOW5jbVZ6YzBWMlpXNTBLQ0p3Y205bmNtVnpjeUlzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsYm1kMGFFTnZiWEIxZEdGaWJHVTZJRzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMkZrWldRNklGOHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzUmhiRG9nWmdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNJRDBnTUN3Z1VpQTlJR2d1YkdWdVozUm9PeUIzSUR3Z1Vqc2dkeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSklEMGdhRnQzWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWt1YjI1UWNtOW5jbVZ6Y3lBbUppQkpMbTl1VUhKdlozSmxjM01vWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjQzVsYm5GMVpYVmxLSGtwTENCMktDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVbVZ6Y0c5dWMyVW9aeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFISnZkeUJ1WlhjZ1RXTW9ZR1psZEdOb0lHWnZjaUFpSkh0c0xuVnliSDBpSUhKbGMzQnZibVJsWkNCM2FYUm9JQ1I3YkM1emRHRjBkWE45T2lBa2Uyd3VjM1JoZEhWelZHVjRkSDFnTENCc0tUc0tJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtDaHNLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb1l5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKaGNuSmhlV0oxWm1abGNpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR3d1WVhKeVlYbENkV1ptWlhJb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1Kc2IySWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJzTG1Kc2IySW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltUnZZM1Z0Wlc1MElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiQzUwWlhoMEtDa3VkR2hsYmlnb2FDazlQbTVsZHlCRVQwMVFZWEp6WlhJb0tTNXdZWEp6WlVaeWIyMVRkSEpwYm1jb2FDd2dieWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlhbk52YmlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHd3Vhbk52YmlncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYnlBOVBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2JDNTBaWGgwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlDOWphR0Z5YzJWMFBTSS9LRnRlT3lKY2MxMHFLU0kvTDJrdVpYaGxZeWh2S1N3Z1pDQTlJSFVnSmlZZ2RWc3hYU0EvSUhWYk1WMHVkRzlNYjNkbGNrTmhjMlVvS1NBNklIWnZhV1FnTUN3Z1ppQTlJRzVsZHlCVVpYaDBSR1ZqYjJSbGNpaGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHd3VZWEp5WVhsQ2RXWm1aWElvS1M1MGFHVnVLQ2h0S1QwK1ppNWtaV052WkdVb2JTa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwTG5Sb1pXNG9LR3dwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJSE56TG1Ga1pDaGxMQ0JzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQm1ibHRsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHWnVXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdhQzVzWlc1bmRHZzdJSFVnUENCa095QjFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0JvVzNWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ppNXZia3h2WVdRZ0ppWWdaaTV2Ymt4dllXUW9iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLUzVqWVhSamFDZ29iQ2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQm1ibHRsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dnZ1BUMDlJSFp2YVdRZ01Da2dkR2h5YjNjZ2RHaHBjeTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhsS1N3Z2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJR1p1VzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnYUM1c1pXNW5kR2c3SUhVZ1BDQmtPeUIxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCb1czVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaaTV2YmtWeWNtOXlJQ1ltSUdZdWIyNUZjbkp2Y2loc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lIMHBMbVpwYm1Gc2JIa29LQ2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlXNWhaMlZ5TG1sMFpXMUZibVFvWlNrN0NpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWJXRnVZV2RsY2k1cGRHVnRVM1JoY25Rb1pTazdDaUFnSUNCOUNpQWdJQ0J6WlhSU1pYTndiMjV6WlZSNWNHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmxjM0J2Ym5ObFZIbHdaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUk5hVzFsVkhsd1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHRaVlI1Y0dVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQmhkU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdSSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE1zSUdFZ1BTQnVaWGNnY200b2RHaHBjeTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0JoTG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z1lTNXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpa3NJR0V1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4ektTd2dZUzVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLRzhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRb2NpNXdZWEp6WlNoS1UwOU9MbkJoY25ObEtHOHBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUHlCcEtHTXBJRG9nWTI5dWMyOXNaUzVsY25KdmNpaGpLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMUZjbkp2Y2lobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ2NHRnljMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR1V1YkdWdVozUm9PeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR2x6TG5CaGNuTmxLR1ZiYmwwcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5CMWMyZ29hU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdmUXA5TENCdmRTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1JIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJR0VnUFNCYlhTd2dieUE5SUc1bGR5QlZjeXdnWXlBOUlHNWxkeUJ5YmloMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJR011YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCakxuTmxkRkpsYzNCdmJuTmxWSGx3WlNnaVlYSnlZWGxpZFdabVpYSWlLU3dnWXk1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0hSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2lrc0lHTXVjMlYwVjJsMGFFTnlaV1JsYm5ScFlXeHpLSEl1ZDJsMGFFTnlaV1JsYm5ScFlXeHpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJREE3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUNoMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdNdWJHOWhaQ2hsVzNWZExDQm1kVzVqZEdsdmJpaGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJSEl1Y0dGeWMyVW9aQ3dnSVRBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lWdDFYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ1ppNTNhV1IwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHWXVhR1ZwWjJoMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2daaTVtYjNKdFlYUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldsd2JXRndjem9nWmk1dGFYQnRZWEJ6Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TENCc0lDczlJREVzSUd3Z1BUMDlJRFlnSmlZZ0tHWXViV2x3YldGd1EyOTFiblFnUFQwOUlERWdKaVlnS0c4dWJXbHVSbWxzZEdWeUlEMGdiWFFwTENCdkxtbHRZV2RsSUQwZ1lTd2dieTVtYjNKdFlYUWdQU0JtTG1admNtMWhkQ3dnYnk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMElDWW1JSFFvYnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TENCdUxDQnBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWlNrcElHWnZjaWhzWlhRZ2RTQTlJREFzSUdRZ1BTQmxMbXhsYm1kMGFEc2dkU0E4SUdRN0lDc3JkU2xvS0hVcE93b2dJQ0FnSUNBZ0lHVnNjMlVnWXk1c2IyRmtLR1VzSUdaMWJtTjBhVzl1S0hVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0J5TG5CaGNuTmxLSFVzSUNFd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUXVhWE5EZFdKbGJXRndLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJR1F1Yldsd2JXRndjeTVzWlc1bmRHZ2dMeUJrTG0xcGNHMWhjRU52ZFc1ME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNRHNnYlNBOElHWTdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZVnR0WFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHdiV0Z3Y3pvZ1cxMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJREE3SUY4Z1BDQmtMbTFwY0cxaGNFTnZkVzUwT3lCZkt5c3BZVnR0WFM1dGFYQnRZWEJ6TG5CMWMyZ29aQzV0YVhCdFlYQnpXMjBnS2lCa0xtMXBjRzFoY0VOdmRXNTBJQ3NnWDEwcExDQmhXMjFkTG1admNtMWhkQ0E5SUdRdVptOXliV0YwTENCaFcyMWRMbmRwWkhSb0lEMGdaQzUzYVdSMGFDd2dZVnR0WFM1b1pXbG5hSFFnUFNCa0xtaGxhV2RvZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4dWFXMWhaMlVnUFNCaE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdieTVwYldGblpTNTNhV1IwYUNBOUlHUXVkMmxrZEdnc0lHOHVhVzFoWjJVdWFHVnBaMmgwSUQwZ1pDNW9aV2xuYUhRc0lHOHViV2x3YldGd2N5QTlJR1F1Yldsd2JXRndjenNLSUNBZ0lDQWdJQ0FnSUNBZ1pDNXRhWEJ0WVhCRGIzVnVkQ0E5UFQwZ01TQW1KaUFvYnk1dGFXNUdhV3gwWlhJZ1BTQnRkQ2tzSUc4dVptOXliV0YwSUQwZ1pDNW1iM0p0WVhRc0lHOHVibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dkQ0FtSmlCMEtHOHBPd29nSUNBZ0lDQWdJSDBzSUc0c0lHa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZPd29nSUNBZ2ZRcDlMQ0J5Y3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nUkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuQmhkR2dnSVQwOUlIWnZhV1FnTUNBbUppQW9aU0E5SUhSb2FYTXVjR0YwYUNBcklHVXBMQ0JsSUQwZ2RHaHBjeTV0WVc1aFoyVnlMbkpsYzI5c2RtVlZVa3dvWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMQ0JoSUQwZ2MzTXVaMlYwS0dVcE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCeUxtMWhibUZuWlhJdWFYUmxiVk4wWVhKMEtHVXBMQ0J6WlhSVWFXMWxiM1YwS0daMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUNZbUlIUW9ZU2tzSUhJdWJXRnVZV2RsY2k1cGRHVnRSVzVrS0dVcE93b2dJQ0FnSUNBZ0lIMHNJREFwTENCaE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2QzTW9JbWx0WnlJcE93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ29LU3dnYzNNdVlXUmtLR1VzSUhSb2FYTXBMQ0IwSUNZbUlIUW9kR2hwY3lrc0lISXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJzS0hVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUNncExDQnBJQ1ltSUdrb2RTa3NJSEl1YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvWlNrc0lISXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJvS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2TG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0lteHZZV1FpTENCakxDQWhNU2tzSUc4dWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2laWEp5YjNJaUxDQnNMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdkxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0lteHZZV1FpTENCakxDQWhNU2tzSUc4dVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaVpYSnliM0lpTENCc0xDQWhNU2tzSUdVdWMyeHBZMlVvTUN3Z05Ta2dJVDA5SUNKa1lYUmhPaUlnSmlZZ2RHaHBjeTVqY205emMwOXlhV2RwYmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1OeWIzTnpUM0pwWjJsdUlEMGdkR2hwY3k1amNtOXpjMDl5YVdkcGJpa3NJSEl1YldGdVlXZGxjaTVwZEdWdFUzUmhjblFvWlNrc0lHOHVjM0pqSUQwZ1pTd2dienNLSUNBZ0lIMEtmU3dnWTNVZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ1MyazdDaUFnSUNBZ0lDQWdjaTVqYjJ4dmNsTndZV05sSUQwZ2RuUTdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnY25Nb2RHaHBjeTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0JoTG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBMQ0JoTG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SURBN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1l5aHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXViRzloWkNobFcyeGRMQ0JtZFc1amRHbHZiaWhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeUxtbHRZV2RsYzF0c1hTQTlJR2dzSUc4ckt5d2dieUE5UFQwZ05pQW1KaUFvY2k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMElDWW1JSFFvY2lrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TENCMmIybGtJREFzSUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHd2dQU0F3T3lCc0lEd2daUzVzWlc1bmRHZzdJQ3NyYkNsaktHd3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlPd29nSUNBZ2ZRcDlMQ0JzZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNc0lHRWdQU0J1WlhjZ2Iya3NJRzhnUFNCdVpYY2djbTRvZEdocGN5NXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2J5NXpaWFJTWlhOd2IyNXpaVlI1Y0dVb0ltRnljbUY1WW5WbVptVnlJaWtzSUc4dWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnZMbk5sZEZCaGRHZ29kR2hwY3k1d1lYUm9LU3dnYnk1elpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb2NpNTNhWFJvUTNKbFpHVnVkR2xoYkhNcExDQnZMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9ZeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkRzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3Z1BTQnlMbkJoY25ObEtHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBaFBUMGdkbTlwWkNBd0tTQnBLR2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkM1cGJXRm5aU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1lTNXBiV0ZuWlNBOUlHd3VhVzFoWjJVZ09pQnNMbVJoZEdFZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVM1cGJXRm5aUzUzYVdSMGFDQTlJR3d1ZDJsa2RHZ3NJR0V1YVcxaFoyVXVhR1ZwWjJoMElEMGdiQzVvWldsbmFIUXNJR0V1YVcxaFoyVXVaR0YwWVNBOUlHd3VaR0YwWVNrc0lHRXVkM0poY0ZNZ1BTQnNMbmR5WVhCVElDRTlQU0IyYjJsa0lEQWdQeUJzTG5keVlYQlRJRG9nU1hRc0lHRXVkM0poY0ZRZ1BTQnNMbmR5WVhCVUlDRTlQU0IyYjJsa0lEQWdQeUJzTG5keVlYQlVJRG9nU1hRc0lHRXViV0ZuUm1sc2RHVnlJRDBnYkM1dFlXZEdhV3gwWlhJZ0lUMDlJSFp2YVdRZ01DQS9JR3d1YldGblJtbHNkR1Z5SURvZ2JYUXNJR0V1YldsdVJtbHNkR1Z5SUQwZ2JDNXRhVzVHYVd4MFpYSWdJVDA5SUhadmFXUWdNQ0EvSUd3dWJXbHVSbWxzZEdWeUlEb2diWFFzSUdFdVlXNXBjMjkwY205d2VTQTlJR3d1WVc1cGMyOTBjbTl3ZVNBaFBUMGdkbTlwWkNBd0lEOGdiQzVoYm1semIzUnliM0I1SURvZ01Td2diQzVqYjJ4dmNsTndZV05sSUNFOVBTQjJiMmxrSURBZ1B5QmhMbU52Ykc5eVUzQmhZMlVnUFNCc0xtTnZiRzl5VTNCaFkyVWdPaUJzTG1WdVkyOWthVzVuSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1Wlc1amIyUnBibWNnUFNCc0xtVnVZMjlrYVc1bktTd2diQzVtYkdsd1dTQWhQVDBnZG05cFpDQXdJQ1ltSUNoaExtWnNhWEJaSUQwZ2JDNW1iR2x3V1Nrc0lHd3VabTl5YldGMElDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdVptOXliV0YwSUQwZ2JDNW1iM0p0WVhRcExDQnNMblI1Y0dVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVM1MGVYQmxJRDBnYkM1MGVYQmxLU3dnYkM1dGFYQnRZWEJ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1Yldsd2JXRndjeUE5SUd3dWJXbHdiV0Z3Y3l3Z1lTNXRhVzVHYVd4MFpYSWdQU0JzYVNrc0lHd3ViV2x3YldGd1EyOTFiblFnUFQwOUlERWdKaVlnS0dFdWJXbHVSbWxzZEdWeUlEMGdiWFFwTENCc0xtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hoTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUd3dVoyVnVaWEpoZEdWTmFYQnRZWEJ6S1N3Z1lTNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBJQ1ltSUhRb1lTd2diQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2tzSUdFN0NpQWdJQ0I5Q24wc0lHaDFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkVkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJRk4wTENCaElEMGdibVYzSUhKektIUm9hWE11YldGdVlXZGxjaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1YzJWMFEzSnZjM05QY21sbmFXNG9kR2hwY3k1amNtOXpjMDl5YVdkcGJpa3NJR0V1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCaExteHZZV1FvWlN3Z1puVnVZM1JwYjI0b2J5a2dld29nSUNBZ0lDQWdJQ0FnSUNCeUxtbHRZV2RsSUQwZ2J5d2djaTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdkQ2h5S1RzS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1N3Z2Nqc0tJQ0FnSUgwS2ZTd2dSVzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRXBsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwTENCMGFHbHpMbWx6VEdsbmFIUWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJa3hwWjJoMElpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QndaU2hsS1N3Z2RHaHBjeTVwYm5SbGJuTnBkSGtnUFNCME93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHQ5Q2lBZ0lDQmpiM0I1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsTENCMEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG1sdWRHVnVjMmwwZVNBOUlHVXVhVzUwWlc1emFYUjVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSE4xY0dWeUxuUnZTbE5QVGlobEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNXZZbXBsWTNRdVkyOXNiM0lnUFNCMGFHbHpMbU52Ykc5eUxtZGxkRWhsZUNncExDQjBMbTlpYW1WamRDNXBiblJsYm5OcGRIa2dQU0IwYUdsekxtbHVkR1Z1YzJsMGVTd2dkR2hwY3k1bmNtOTFibVJEYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1bmNtOTFibVJEYjJ4dmNpQTlJSFJvYVhNdVozSnZkVzVrUTI5c2IzSXVaMlYwU0dWNEtDa3BMQ0IwYUdsekxtUnBjM1JoYm1ObElDRTlQU0IyYjJsa0lEQWdKaVlnS0hRdWIySnFaV04wTG1ScGMzUmhibU5sSUQwZ2RHaHBjeTVrYVhOMFlXNWpaU2tzSUhSb2FYTXVZVzVuYkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1dlltcGxZM1F1WVc1bmJHVWdQU0IwYUdsekxtRnVaMnhsS1N3Z2RHaHBjeTVrWldOaGVTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1a1pXTmhlU0E5SUhSb2FYTXVaR1ZqWVhrcExDQjBhR2x6TG5CbGJuVnRZbkpoSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjJKcVpXTjBMbkJsYm5WdFluSmhJRDBnZEdocGN5NXdaVzUxYldKeVlTa3NJSFJvYVhNdWMyaGhaRzkzSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjJKcVpXTjBMbk5vWVdSdmR5QTlJSFJvYVhNdWMyaGhaRzkzTG5SdlNsTlBUaWdwS1N3Z2REc0tJQ0FnSUgwS2ZTd2dVMk1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRVZ1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUc0cExDQjBhR2x6TG1selNHVnRhWE53YUdWeVpVeHBaMmgwSUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKSVpXMXBjM0JvWlhKbFRHbG5hSFFpTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb1NtVXVSRVZHUVZWTVZGOVZVQ2tzSUhSb2FYTXVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lIUm9hWE11WjNKdmRXNWtRMjlzYjNJZ1BTQnVaWGNnY0dVb2RDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnZEdocGN5NW5jbTkxYm1SRGIyeHZjaTVqYjNCNUtHVXVaM0p2ZFc1a1EyOXNiM0lwTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0J2YnlBOUlHNWxkeUI2WlN3Z2RYVWdQU0J1WlhjZ1FTd2daSFVnUFNCdVpYY2dRU3dnZW5NZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJXVnlZU0E5SUdVc0lIUm9hWE11WW1saGN5QTlJREFzSUhSb2FYTXVibTl5YldGc1FtbGhjeUE5SURBc0lIUm9hWE11Y21Ga2FYVnpJRDBnTVN3Z2RHaHBjeTVpYkhWeVUyRnRjR3hsY3lBOUlEZ3NJSFJvYVhNdWJXRndVMmw2WlNBOUlHNWxkeUJhS0RVeE1pd2dOVEV5S1N3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbTFoY0ZCaGMzTWdQU0J1ZFd4c0xDQjBhR2x6TG0xaGRISnBlQ0E5SUc1bGR5QjZaU3dnZEdocGN5NWhkWFJ2VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11Ym1WbFpITlZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWZabkoxYzNSMWJTQTlJRzVsZHlCUWN5d2dkR2hwY3k1ZlpuSmhiV1ZGZUhSbGJuUnpJRDBnYm1WM0lGb29NU3dnTVNrc0lIUm9hWE11WDNacFpYZHdiM0owUTI5MWJuUWdQU0F4TENCMGFHbHpMbDkyYVdWM2NHOXlkSE1nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCcVpTZ3dMQ0F3TENBeExDQXhLUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlDaUFnSUNCblpYUldhV1YzY0c5eWRFTnZkVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkyYVdWM2NHOXlkRU52ZFc1ME93b2dJQ0FnZlFvZ0lDQWdaMlYwUm5KMWMzUjFiU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZabkoxYzNSMWJUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwWTJWektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRnRaWEpoTENCdUlEMGdkR2hwY3k1dFlYUnlhWGc3Q2lBZ0lDQWdJQ0FnZFhVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1V1YldGMGNtbDRWMjl5YkdRcExDQjBMbkJ2YzJsMGFXOXVMbU52Y0hrb2RYVXBMQ0JrZFM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9aUzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCMExteHZiMnRCZENoa2RTa3NJSFF1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2IyOHViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aDBMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3NJSFF1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1N3Z2RHaHBjeTVmWm5KMWMzUjFiUzV6WlhSR2NtOXRVSEp2YW1WamRHbHZiazFoZEhKcGVDaHZieWtzSUc0dWMyVjBLQzQxTENBd0xDQXdMQ0F1TlN3Z01Dd2dMalVzSURBc0lDNDFMQ0F3TENBd0xDQXVOU3dnTGpVc0lEQXNJREFzSURBc0lERXBMQ0J1TG0xMWJIUnBjR3g1S0c5dktUc0tJQ0FnSUgwS0lDQWdJR2RsZEZacFpYZHdiM0owS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZG1sbGQzQnZjblJ6VzJWZE93b2dJQ0FnZlFvZ0lDQWdaMlYwUm5KaGJXVkZlSFJsYm5SektDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bWNtRnRaVVY0ZEdWdWRITTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z3SUNZbUlIUm9hWE11YldGd0xtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYQlFZWE56SUNZbUlIUm9hWE11YldGd1VHRnpjeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpZVzFsY21FZ1BTQmxMbU5oYldWeVlTNWpiRzl1WlNncExDQjBhR2x6TG1KcFlYTWdQU0JsTG1KcFlYTXNJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTNXlZV1JwZFhNc0lIUm9hWE11YldGd1UybDZaUzVqYjNCNUtHVXViV0Z3VTJsNlpTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WW1saGN5QWhQVDBnTUNBbUppQW9aUzVpYVdGeklEMGdkR2hwY3k1aWFXRnpLU3dnZEdocGN5NXViM0p0WVd4Q2FXRnpJQ0U5UFNBd0lDWW1JQ2hsTG01dmNtMWhiRUpwWVhNZ1BTQjBhR2x6TG01dmNtMWhiRUpwWVhNcExDQjBhR2x6TG5KaFpHbDFjeUFoUFQwZ01TQW1KaUFvWlM1eVlXUnBkWE1nUFNCMGFHbHpMbkpoWkdsMWN5a3NJQ2gwYUdsekxtMWhjRk5wZW1VdWVDQWhQVDBnTlRFeUlIeDhJSFJvYVhNdWJXRndVMmw2WlM1NUlDRTlQU0ExTVRJcElDWW1JQ2hsTG0xaGNGTnBlbVVnUFNCMGFHbHpMbTFoY0ZOcGVtVXVkRzlCY25KaGVTZ3BLU3dnWlM1allXMWxjbUVnUFNCMGFHbHpMbU5oYldWeVlTNTBiMHBUVDA0b0lURXBMbTlpYW1WamRDd2daR1ZzWlhSbElHVXVZMkZ0WlhKaExtMWhkSEpwZUN3Z1pUc0tJQ0FnSUgwS2ZTd2dZbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJSHB6SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lIbDBLRFV3TENBeExDQXVOU3dnTlRBd0tTa3NJSFJvYVhNdWFYTlRjRzkwVEdsbmFIUlRhR0ZrYjNjZ1BTQWhNQ3dnZEdocGN5NW1iMk4xY3lBOUlERTdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVdObGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhiV1Z5WVN3Z2JpQTlJRnBwSUNvZ01pQXFJR1V1WVc1bmJHVWdLaUIwYUdsekxtWnZZM1Z6TENCcElEMGdkR2hwY3k1dFlYQlRhWHBsTG5kcFpIUm9JQzhnZEdocGN5NXRZWEJUYVhwbExtaGxhV2RvZEN3Z2NpQTlJR1V1WkdsemRHRnVZMlVnZkh3Z2RDNW1ZWEk3Q2lBZ0lDQWdJQ0FnS0c0Z0lUMDlJSFF1Wm05MklIeDhJR2tnSVQwOUlIUXVZWE53WldOMElIeDhJSElnSVQwOUlIUXVabUZ5S1NBbUppQW9kQzVtYjNZZ1BTQnVMQ0IwTG1GemNHVmpkQ0E5SUdrc0lIUXVabUZ5SUQwZ2Npd2dkQzUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDa3BMQ0J6ZFhCbGNpNTFjR1JoZEdWTllYUnlhV05sY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVp2WTNWeklEMGdaUzVtYjJOMWN5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1JXTWdQU0JqYkdGemN5QmxlSFJsYm1SeklFVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0F3TENCcElEMGdUV0YwYUM1UVNTQXZJRE1zSUhJZ1BTQXdMQ0JoSUQwZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2tzSUhSb2FYTXVhWE5UY0c5MFRHbG5hSFFnUFNBaE1Dd2dkR2hwY3k1MGVYQmxJRDBnSWxOd2IzUk1hV2RvZENJc0lIUm9hWE11Y0c5emFYUnBiMjR1WTI5d2VTaEtaUzVFUlVaQlZVeFVYMVZRS1N3Z2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1MFlYSm5aWFFnUFNCdVpYY2dTbVVzSUhSb2FYTXVaR2x6ZEdGdVkyVWdQU0J1TENCMGFHbHpMbUZ1WjJ4bElEMGdhU3dnZEdocGN5NXdaVzUxYldKeVlTQTlJSElzSUhSb2FYTXVaR1ZqWVhrZ1BTQmhMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWMyaGhaRzkzSUQwZ2JtVjNJR0pqT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSEJ2ZDJWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sdWRHVnVjMmwwZVNBcUlFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnY0c5M1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlNBdklFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWMyaGhaRzkzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUhRcExDQjBhR2x6TG1ScGMzUmhibU5sSUQwZ1pTNWthWE4wWVc1alpTd2dkR2hwY3k1aGJtZHNaU0E5SUdVdVlXNW5iR1VzSUhSb2FYTXVjR1Z1ZFcxaWNtRWdQU0JsTG5CbGJuVnRZbkpoTENCMGFHbHpMbVJsWTJGNUlEMGdaUzVrWldOaGVTd2dkR2hwY3k1MFlYSm5aWFFnUFNCbExuUmhjbWRsZEM1amJHOXVaU2dwTENCMGFHbHpMbk5vWVdSdmR5QTlJR1V1YzJoaFpHOTNMbU5zYjI1bEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHWjFJRDBnYm1WM0lIcGxMQ0JmY3lBOUlHNWxkeUJCTENCamJ5QTlJRzVsZHlCQkxDQlVZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdlbk1nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ2VYUW9PVEFzSURFc0lDNDFMQ0ExTURBcEtTd2dkR2hwY3k1cGMxQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ1BTQWhNQ3dnZEdocGN5NWZabkpoYldWRmVIUmxiblJ6SUQwZ2JtVjNJRm9vTkN3Z01pa3NJSFJvYVhNdVgzWnBaWGR3YjNKMFEyOTFiblFnUFNBMkxDQjBhR2x6TGw5MmFXVjNjRzl5ZEhNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QnFaU2d5TENBeExDQXhMQ0F4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUdwbEtEQXNJREVzSURFc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dhbVVvTXl3Z01Td2dNU3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCcVpTZ3hMQ0F4TENBeExDQXhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJR3BsS0RNc0lEQXNJREVzSURFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ2FtVW9NU3dnTUN3Z01Td2dNU2tLSUNBZ0lDQWdJQ0JkTENCMGFHbHpMbDlqZFdKbFJHbHlaV04wYVc5dWN5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRUVvTVN3Z01Dd2dNQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJCS0MweExDQXdMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUVFb01Dd2dNQ3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCQktEQXNJREFzSUMweEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFRW9NQ3dnTVN3Z01Da3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QkJLREFzSUMweExDQXdLUW9nSUNBZ0lDQWdJRjBzSUhSb2FYTXVYMk4xWW1WVmNITWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJCS0RBc0lERXNJREFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnUVNnd0xDQXhMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUVFb01Dd2dNU3dnTUNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCQktEQXNJREVzSURBcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1FTZ3dMQ0F3TENBeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFRW9NQ3dnTUN3Z0xURXBDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcFkyVnpLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmhiV1Z5WVN3Z2FTQTlJSFJvYVhNdWJXRjBjbWw0TENCeUlEMGdaUzVrYVhOMFlXNWpaU0I4ZkNCdUxtWmhjanNLSUNBZ0lDQWdJQ0J5SUNFOVBTQnVMbVpoY2lBbUppQW9iaTVtWVhJZ1BTQnlMQ0J1TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU2tzSUY5ekxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhsTG0xaGRISnBlRmR2Y214a0tTd2diaTV3YjNOcGRHbHZiaTVqYjNCNUtGOXpLU3dnWTI4dVkyOXdlU2h1TG5CdmMybDBhVzl1S1N3Z1kyOHVZV1JrS0hSb2FYTXVYMk4xWW1WRWFYSmxZM1JwYjI1elczUmRLU3dnYmk1MWNDNWpiM0I1S0hSb2FYTXVYMk4xWW1WVmNITmJkRjBwTENCdUxteHZiMnRCZENoamJ5a3NJRzR1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2FTNXRZV3RsVkhKaGJuTnNZWFJwYjI0b0xWOXpMbmdzSUMxZmN5NTVMQ0F0WDNNdWVpa3NJR1oxTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vYmk1d2NtOXFaV04wYVc5dVRXRjBjbWw0TENCdUxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTa3NJSFJvYVhNdVgyWnlkWE4wZFcwdWMyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvWm5VcE93b2dJQ0FnZlFwOUxDQjNZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdSVzRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaUE5SURBc0lHa2dQU0F5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtTd2dkR2hwY3k1cGMxQnZhVzUwVEdsbmFIUWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJbEJ2YVc1MFRHbG5hSFFpTENCMGFHbHpMbVJwYzNSaGJtTmxJRDBnYml3Z2RHaHBjeTVrWldOaGVTQTlJR2tzSUhSb2FYTXVjMmhoWkc5M0lEMGdibVYzSUZSak93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhCdmQyVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHVkR1Z1YzJsMGVTQXFJRFFnS2lCTllYUm9MbEJKT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSEJ2ZDJWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVkR1Z1YzJsMGVTQTlJR1VnTHlBb05DQXFJRTFoZEdndVVFa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVdSdmR5NWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnZEdocGN5NWthWE4wWVc1alpTQTlJR1V1WkdsemRHRnVZMlVzSUhSb2FYTXVaR1ZqWVhrZ1BTQmxMbVJsWTJGNUxDQjBhR2x6TG5Ob1lXUnZkeUE5SUdVdWMyaGhaRzkzTG1Oc2IyNWxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNuMHNJRUZqSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUI2Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5Qk1jeWd0TlN3Z05Td2dOU3dnTFRVc0lDNDFMQ0ExTURBcEtTd2dkR2hwY3k1cGMwUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnUFNBaE1Ec0tJQ0FnSUgwS2ZTd2dVbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRVZ1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwTENCMGFHbHpMbWx6UkdseVpXTjBhVzl1WVd4TWFXZG9kQ0E5SUNFd0xDQjBhR2x6TG5SNWNHVWdQU0FpUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0lzSUhSb2FYTXVjRzl6YVhScGIyNHVZMjl3ZVNoS1pTNUVSVVpCVlV4VVgxVlFLU3dnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTUwWVhKblpYUWdQU0J1WlhjZ1NtVXNJSFJvYVhNdWMyaGhaRzkzSUQwZ2JtVjNJRUZqT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lXUnZkeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1MFlYSm5aWFFnUFNCbExuUmhjbWRsZEM1amJHOXVaU2dwTENCMGFHbHpMbk5vWVdSdmR5QTlJR1V1YzJoaFpHOTNMbU5zYjI1bEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lFTmpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLU3dnZEdocGN5NXBjMEZ0WW1sbGJuUk1hV2RvZENBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVFXMWlhV1Z1ZEV4cFoyaDBJanNLSUNBZ0lIMEtmU3dnVUdNZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQXhNQ3dnYVNBOUlERXdLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1N3Z2RHaHBjeTVwYzFKbFkzUkJjbVZoVEdsbmFIUWdQU0FoTUN3Z2RHaHBjeTUwZVhCbElEMGdJbEpsWTNSQmNtVmhUR2xuYUhRaUxDQjBhR2x6TG5kcFpIUm9JRDBnYml3Z2RHaHBjeTVvWldsbmFIUWdQU0JwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSEJ2ZDJWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sdWRHVnVjMmwwZVNBcUlIUm9hWE11ZDJsa2RHZ2dLaUIwYUdsekxtaGxhV2RvZENBcUlFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnY0c5M1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlNBdklDaDBhR2x6TG5kcFpIUm9JQ29nZEdocGN5NW9aV2xuYUhRZ0tpQk5ZWFJvTGxCSktUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbmRwWkhSb0lEMGdaUzUzYVdSMGFDd2dkR2hwY3k1b1pXbG5hSFFnUFNCbExtaGxhV2RvZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCemRYQmxjaTUwYjBwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YjJKcVpXTjBMbmRwWkhSb0lEMGdkR2hwY3k1M2FXUjBhQ3dnZEM1dlltcGxZM1F1YUdWcFoyaDBJRDBnZEdocGN5NW9aV2xuYUhRc0lIUTdDaUFnSUNCOUNuMHNJRXhqSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbWx6VTNCb1pYSnBZMkZzU0dGeWJXOXVhV056TXlBOUlDRXdMQ0IwYUdsekxtTnZaV1ptYVdOcFpXNTBjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQTVPeUJsS3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhNdWNIVnphQ2h1WlhjZ1FTazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0E1T3lCMEt5c3BkR2hwY3k1amIyVm1abWxqYVdWdWRITmJkRjB1WTI5d2VTaGxXM1JkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSHBsY204b0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTURzZ1pTQThJRGs3SUdVckt5bDBhR2x6TG1OdlpXWm1hV05wWlc1MGMxdGxYUzV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExuZ3NJR2tnUFNCbExua3NJSElnUFNCbExub3NJR0VnUFNCMGFHbHpMbU52WldabWFXTnBaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLR0ZiTUYwcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0eU9ESXdPVFVwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loaFd6RmRMQ0F1TkRnNE5qQXpJQ29nYVNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHRmJNbDBzSUM0ME9EZzJNRE1nS2lCeUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ZVnN6WFN3Z0xqUTRPRFl3TXlBcUlHNHBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoV3pSZExDQXhMakE1TWpVME9DQXFJQ2h1SUNvZ2FTa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoV3pWZExDQXhMakE1TWpVME9DQXFJQ2hwSUNvZ2Npa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoV3paZExDQXVNekUxTXpreUlDb2dLRE1nS2lCeUlDb2djaUF0SURFcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ZVnMzWFN3Z01TNHdPVEkxTkRnZ0tpQW9iaUFxSUhJcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ZVnM0WFN3Z0xqVTBOakkzTkNBcUlDaHVJQ29nYmlBdElHa2dLaUJwS1Nrc0lIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSSmNuSmhaR2xoYm1ObFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNTRMQ0JwSUQwZ1pTNTVMQ0J5SUQwZ1pTNTZMQ0JoSUQwZ2RHaHBjeTVqYjJWbVptbGphV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVkyOXdlU2hoV3pCZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU9EZzJNakkzS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb1lWc3hYU3dnTWlBcUlDNDFNVEUyTmpRZ0tpQnBLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvWVZzeVhTd2dNaUFxSUM0MU1URTJOalFnS2lCeUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ZVnN6WFN3Z01pQXFJQzQxTVRFMk5qUWdLaUJ1S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb1lWczBYU3dnTWlBcUlDNDBNamt3TkRNZ0tpQnVJQ29nYVNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHRmJOVjBzSURJZ0tpQXVOREk1TURReklDb2dhU0FxSUhJcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaGhXelpkTENBdU56UXpNVEkxSUNvZ2NpQXFJSElnTFNBdU1qUTNOekE0S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb1lWczNYU3dnTWlBcUlDNDBNamt3TkRNZ0tpQnVJQ29nY2lrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHRmJPRjBzSUM0ME1qa3dORE1nS2lBb2JpQXFJRzRnTFNCcElDb2dhU2twTENCME93b2dJQ0FnZlFvZ0lDQWdZV1JrS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dPVHNnZENzcktYUm9hWE11WTI5bFptWnBZMmxsYm5SelczUmRMbUZrWkNobExtTnZaV1ptYVdOcFpXNTBjMXQwWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNaV1JUU0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURrN0lHNHJLeWwwYUdsekxtTnZaV1ptYVdOcFpXNTBjMXR1WFM1aFpHUlRZMkZzWldSV1pXTjBiM0lvWlM1amIyVm1abWxqYVdWdWRITmJibDBzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJOaGJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENBNU95QjBLeXNwZEdocGN5NWpiMlZtWm1samFXVnVkSE5iZEYwdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z09Uc2diaXNyS1hSb2FYTXVZMjlsWm1acFkybGxiblJ6VzI1ZExteGxjbkFvWlM1amIyVm1abWxqYVdWdWRITmJibDBzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z09Uc2dkQ3NyS1dsbUlDZ2hkR2hwY3k1amIyVm1abWxqYVdWdWRITmJkRjB1WlhGMVlXeHpLR1V1WTI5bFptWnBZMmxsYm5SelczUmRLU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENobExtTnZaV1ptYVdOcFpXNTBjeWs3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU52WldabWFXTnBaVzUwY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z09Uc2dhU3NyS1c1YmFWMHVabkp2YlVGeWNtRjVLR1VzSUhRZ0t5QnBJQ29nTXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBGeWNtRjVLR1VnUFNCYlhTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTI5bFptWnBZMmxsYm5Sek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQTVPeUJwS3lzcGJsdHBYUzUwYjBGeWNtRjVLR1VzSUhRZ0t5QnBJQ29nTXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1oyVjBRbUZ6YVhOQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExuZ3NJR2tnUFNCbExua3NJSElnUFNCbExubzdDaUFnSUNBZ0lDQWdkRnN3WFNBOUlDNHlPREl3T1RVc0lIUmJNVjBnUFNBdU5EZzROakF6SUNvZ2FTd2dkRnN5WFNBOUlDNDBPRGcyTURNZ0tpQnlMQ0IwV3pOZElEMGdMalE0T0RZd015QXFJRzRzSUhSYk5GMGdQU0F4TGpBNU1qVTBPQ0FxSUc0Z0tpQnBMQ0IwV3pWZElEMGdNUzR3T1RJMU5EZ2dLaUJwSUNvZ2Npd2dkRnMyWFNBOUlDNHpNVFV6T1RJZ0tpQW9NeUFxSUhJZ0tpQnlJQzBnTVNrc0lIUmJOMTBnUFNBeExqQTVNalUwT0NBcUlHNGdLaUJ5TENCMFd6aGRJRDBnTGpVME5qSTNOQ0FxSUNodUlDb2diaUF0SUdrZ0tpQnBLVHNLSUNBZ0lIMEtmU3dnU1dNZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RHTXNJSFFnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2loMmIybGtJREFzSUhRcExDQjBhR2x6TG1selRHbG5hSFJRY205aVpTQTlJQ0V3TENCMGFHbHpMbk5vSUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbk5vTG1OdmNIa29aUzV6YUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1MFpXNXphWFI1SUQwZ1pTNXBiblJsYm5OcGRIa3NJSFJvYVhNdWMyZ3Vabkp2YlVGeWNtRjVLR1V1YzJncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1dlltcGxZM1F1YzJnZ1BTQjBhR2x6TG5Ob0xuUnZRWEp5WVhrb0tTd2dkRHNLSUNBZ0lIMEtmU3dnVldNZ1BTQmpiR0Z6Y3lCek1TQmxlSFJsYm1SeklFUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwTENCMGFHbHpMblJsZUhSMWNtVnpJRDBnZTMwN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE1zSUdFZ1BTQnVaWGNnY200b2NpNXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQmhMbk5sZEZCaGRHZ29jaTV3WVhSb0tTd2dZUzV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSEl1Y21WeGRXVnpkRWhsWVdSbGNpa3NJR0V1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hJdWQybDBhRU55WldSbGJuUnBZV3h6S1N3Z1lTNXNiMkZrS0dVc0lHWjFibU4wYVc5dUtHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFvY2k1d1lYSnpaU2hLVTA5T0xuQmhjbk5sS0c4cEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQeUJwS0dNcElEb2dZMjl1YzI5c1pTNWxjbkp2Y2loaktTd2djaTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzSUc0c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NTBaWGgwZFhKbGN6c0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnVLSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUmJjbDBnUFQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEdWeWFXRnNURzloWkdWeU9pQlZibVJsWm1sdVpXUWdkR1Y0ZEhWeVpTSXNJSElwTENCMFczSmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSE14TG1OeVpXRjBaVTFoZEdWeWFXRnNSbkp2YlZSNWNHVW9aUzUwZVhCbEtUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1MWRXbGtJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkWFZwWkNBOUlHVXVkWFZwWkNrc0lHVXVibUZ0WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG01aGJXVWdQU0JsTG01aGJXVXBMQ0JsTG1OdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1WTI5c2IzSXVjMlYwU0dWNEtHVXVZMjlzYjNJcExDQmxMbkp2ZFdkb2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkp2ZFdkb2JtVnpjeUE5SUdVdWNtOTFaMmh1WlhOektTd2daUzV0WlhSaGJHNWxjM01nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV0WlhSaGJHNWxjM01nUFNCbExtMWxkR0ZzYm1WemN5a3NJR1V1YzJobFpXNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR1ZsYmlBOUlHVXVjMmhsWlc0cExDQmxMbk5vWldWdVEyOXNiM0lnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdWbGJrTnZiRzl5SUQwZ2JtVjNJSEJsS0NrdWMyVjBTR1Y0S0dVdWMyaGxaVzVEYjJ4dmNpa3BMQ0JsTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc1U2IzVm5hRzVsYzNNZ1BTQmxMbk5vWldWdVVtOTFaMmh1WlhOektTd2daUzVsYldsemMybDJaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VaVzFwYzNOcGRtVWdJVDA5SUhadmFXUWdNQ0FtSmlCcExtVnRhWE56YVhabExuTmxkRWhsZUNobExtVnRhWE56YVhabEtTd2daUzV6Y0dWamRXeGhjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VjM0JsWTNWc1lYSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExuTndaV04xYkdGeUxuTmxkRWhsZUNobExuTndaV04xYkdGeUtTd2daUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlTVzUwWlc1emFYUjVJRDBnWlM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNrc0lHVXVjM0JsWTNWc1lYSkRiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YzNCbFkzVnNZWEpEYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWMzQmxZM1ZzWVhKRGIyeHZjaTV6WlhSSVpYZ29aUzV6Y0dWamRXeGhja052Ykc5eUtTd2daUzV6YUdsdWFXNWxjM01nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdsdWFXNWxjM01nUFNCbExuTm9hVzVwYm1WemN5a3NJR1V1WTJ4bFlYSmpiMkYwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwSUQwZ1pTNWpiR1ZoY21OdllYUXBMQ0JsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpLU3dnWlM1cGNtbGtaWE5qWlc1alpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtbHlhV1JsYzJObGJtTmxJRDBnWlM1cGNtbGtaWE5qWlc1alpTa3NJR1V1YVhKcFpHVnpZMlZ1WTJWSlQxSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXBjbWxrWlhOalpXNWpaVWxQVWlBOUlHVXVhWEpwWkdWelkyVnVZMlZKVDFJcExDQmxMbWx5YVdSbGMyTmxibU5sVkdocFkydHVaWE56VW1GdVoyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXBjbWxrWlhOalpXNWpaVlJvYVdOcmJtVnpjMUpoYm1kbElEMGdaUzVwY21sa1pYTmpaVzVqWlZSb2FXTnJibVZ6YzFKaGJtZGxLU3dnWlM1MGNtRnVjMjFwYzNOcGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBjbUZ1YzIxcGMzTnBiMjRnUFNCbExuUnlZVzV6YldsemMybHZiaWtzSUdVdWRHaHBZMnR1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRHaHBZMnR1WlhOeklEMGdaUzUwYUdsamEyNWxjM01wTENCbExtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJRDBnWlM1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObEtTd2daUzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWhkSFJsYm5WaGRHbHZia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnYVM1aGRIUmxiblZoZEdsdmJrTnZiRzl5TG5ObGRFaGxlQ2hsTG1GMGRHVnVkV0YwYVc5dVEyOXNiM0lwTENCbExtRnVhWE52ZEhKdmNIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWhibWx6YjNSeWIzQjVJRDBnWlM1aGJtbHpiM1J5YjNCNUtTd2daUzVoYm1semIzUnliM0I1VW05MFlYUnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVoYm1semIzUnliM0I1VW05MFlYUnBiMjRnUFNCbExtRnVhWE52ZEhKdmNIbFNiM1JoZEdsdmJpa3NJR1V1Wm05bklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVptOW5JRDBnWlM1bWIyY3BMQ0JsTG1ac1lYUlRhR0ZrYVc1bklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpteGhkRk5vWVdScGJtY2dQU0JsTG1ac1lYUlRhR0ZrYVc1bktTd2daUzVpYkdWdVpHbHVaeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUpzWlc1a2FXNW5JRDBnWlM1aWJHVnVaR2x1Wnlrc0lHVXVZMjl0WW1sdVpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnZiV0pwYm1VZ1BTQmxMbU52YldKcGJtVXBMQ0JsTG5OcFpHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphV1JsSUQwZ1pTNXphV1JsS1N3Z1pTNXphR0ZrYjNkVGFXUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhoWkc5M1UybGtaU0E5SUdVdWMyaGhaRzkzVTJsa1pTa3NJR1V1YjNCaFkybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbTl3WVdOcGRIa2dQU0JsTG05d1lXTnBkSGtwTENCbExuUnlZVzV6Y0dGeVpXNTBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkSEpoYm5Od1lYSmxiblFnUFNCbExuUnlZVzV6Y0dGeVpXNTBLU3dnWlM1aGJIQm9ZVlJsYzNRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1aGJIQm9ZVlJsYzNRZ1BTQmxMbUZzY0doaFZHVnpkQ2tzSUdVdVlXeHdhR0ZJWVhOb0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVlXeHdhR0ZJWVhOb0lEMGdaUzVoYkhCb1lVaGhjMmdwTENCbExtUmxjSFJvVkdWemRDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUmxjSFJvVkdWemRDQTlJR1V1WkdWd2RHaFVaWE4wS1N3Z1pTNWtaWEIwYUZkeWFYUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR1Z3ZEdoWGNtbDBaU0E5SUdVdVpHVndkR2hYY21sMFpTa3NJR1V1WTI5c2IzSlhjbWwwWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1OdmJHOXlWM0pwZEdVZ1BTQmxMbU52Ykc5eVYzSnBkR1VwTENCbExuTjBaVzVqYVd4WGNtbDBaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk4wWlc1amFXeFhjbWwwWlNBOUlHVXVjM1JsYm1OcGJGZHlhWFJsS1N3Z1pTNXpkR1Z1WTJsc1YzSnBkR1ZOWVhOcklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkZkeWFYUmxUV0Z6YXlBOUlHVXVjM1JsYm1OcGJGZHlhWFJsVFdGemF5a3NJR1V1YzNSbGJtTnBiRVoxYm1NZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emRHVnVZMmxzUm5WdVl5QTlJR1V1YzNSbGJtTnBiRVoxYm1NcExDQmxMbk4wWlc1amFXeFNaV1lnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6ZEdWdVkybHNVbVZtSUQwZ1pTNXpkR1Z1WTJsc1VtVm1LU3dnWlM1emRHVnVZMmxzUm5WdVkwMWhjMnNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0JsTG5OMFpXNWphV3hHZFc1alRXRnpheWtzSUdVdWMzUmxibU5wYkVaaGFXd2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpkR1Z1WTJsc1JtRnBiQ0E5SUdVdWMzUmxibU5wYkVaaGFXd3BMQ0JsTG5OMFpXNWphV3hhUm1GcGJDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4YVJtRnBiQ0E5SUdVdWMzUmxibU5wYkZwR1lXbHNLU3dnWlM1emRHVnVZMmxzV2xCaGMzTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpkR1Z1WTJsc1dsQmhjM01nUFNCbExuTjBaVzVqYVd4YVVHRnpjeWtzSUdVdWQybHlaV1p5WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VwTENCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvS1N3Z1pTNTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDa3NJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0cExDQmxMbkp2ZEdGMGFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjbTkwWVhScGIyNGdQU0JsTG5KdmRHRjBhVzl1S1N3Z1pTNXNhVzVsZDJsa2RHZ2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXNhVzVsZDJsa2RHZ2dQU0JsTG14cGJtVjNhV1IwYUNrc0lHVXVaR0Z6YUZOcGVtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWtZWE5vVTJsNlpTQTlJR1V1WkdGemFGTnBlbVVwTENCbExtZGhjRk5wZW1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bllYQlRhWHBsSUQwZ1pTNW5ZWEJUYVhwbEtTd2daUzV6WTJGc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTmpZV3hsSUQwZ1pTNXpZMkZzWlNrc0lHVXVjRzlzZVdkdmJrOW1abk5sZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5CdmJIbG5iMjVQWm1aelpYUWdQU0JsTG5CdmJIbG5iMjVQWm1aelpYUXBMQ0JsTG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUlEMGdaUzV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5S1N3Z1pTNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITWdQU0JsTG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lrc0lHVXVaR2wwYUdWeWFXNW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2wwYUdWeWFXNW5JRDBnWlM1a2FYUm9aWEpwYm1jcExDQmxMbUZzY0doaFZHOURiM1psY21GblpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOUlHVXVZV3h3YUdGVWIwTnZkbVZ5WVdkbEtTd2daUzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnUFNCbExuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTa3NJR1V1Wm05eVkyVlRhVzVuYkdWUVlYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VabTl5WTJWVGFXNW5iR1ZRWVhOeklEMGdaUzVtYjNKalpWTnBibWRzWlZCaGMzTXBMQ0JsTG5acGMybGliR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUyYVhOcFlteGxJRDBnWlM1MmFYTnBZbXhsS1N3Z1pTNTBiMjVsVFdGd2NHVmtJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkRzl1WlUxaGNIQmxaQ0E5SUdVdWRHOXVaVTFoY0hCbFpDa3NJR1V1ZFhObGNrUmhkR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUxYzJWeVJHRjBZU0E5SUdVdWRYTmxja1JoZEdFcExDQmxMblpsY25SbGVFTnZiRzl5Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwZVhCbGIyWWdaUzUyWlhKMFpYaERiMnh2Y25NZ1BUMGdJbTUxYldKbGNpSWdQeUJwTG5abGNuUmxlRU52Ykc5eWN5QTlJR1V1ZG1WeWRHVjRRMjlzYjNKeklENGdNQ0E2SUdrdWRtVnlkR1Y0UTI5c2IzSnpJRDBnWlM1MlpYSjBaWGhEYjJ4dmNuTXBMQ0JsTG5WdWFXWnZjbTF6SUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ2NpQnBiaUJsTG5WdWFXWnZjbTF6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxMblZ1YVdadmNtMXpXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb2FTNTFibWxtYjNKdGMxdHlYU0E5SUh0OUxDQmhMblI1Y0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc0b1lTNTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pqSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYm1WM0lIQmxLQ2t1YzJWMFNHVjRLR0V1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWRqSWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWRXNXBabTl5YlhOYmNsMHVkbUZzZFdVZ1BTQnVaWGNnV2lncExtWnliMjFCY25KaGVTaGhMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW5Zeklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2JtVjNJRUVvS1M1bWNtOXRRWEp5WVhrb1lTNTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0oyTkNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc1bGR5QnFaU2dwTG1aeWIyMUJjbkpoZVNoaExuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbTB6SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYm1WM0lFaGxLQ2t1Wm5KdmJVRnljbUY1S0dFdWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWliVFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VkVzVwWm05eWJYTmJjbDB1ZG1Gc2RXVWdQU0J1WlhjZ2VtVW9LUzVtY205dFFYSnlZWGtvWVM1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWRXNXBabTl5YlhOYmNsMHVkbUZzZFdVZ1BTQmhMblpoYkhWbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGxMbVJsWm1sdVpYTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWtaV1pwYm1WeklEMGdaUzVrWldacGJtVnpLU3dnWlM1MlpYSjBaWGhUYUdGa1pYSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTJaWEowWlhoVGFHRmtaWElnUFNCbExuWmxjblJsZUZOb1lXUmxjaWtzSUdVdVpuSmhaMjFsYm5SVGFHRmtaWElnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVtY21GbmJXVnVkRk5vWVdSbGNpQTlJR1V1Wm5KaFoyMWxiblJUYUdGa1pYSXBMQ0JsTG1kc2MyeFdaWEp6YVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVoyeHpiRlpsY25OcGIyNGdQU0JsTG1kc2MyeFdaWEp6YVc5dUtTd2daUzVsZUhSbGJuTnBiMjV6SUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ2NpQnBiaUJsTG1WNGRHVnVjMmx2Ym5NcGFTNWxlSFJsYm5OcGIyNXpXM0pkSUQwZ1pTNWxlSFJsYm5OcGIyNXpXM0pkT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbXhwWjJoMGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExteHBaMmgwY3lBOUlHVXViR2xuYUhSektTd2daUzVqYkdsd2NHbHVaeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbU5zYVhCd2FXNW5JRDBnWlM1amJHbHdjR2x1Wnlrc0lHVXVjMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OcGVtVWdQU0JsTG5OcGVtVXBMQ0JsTG5OcGVtVkJkSFJsYm5WaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5wZW1WQmRIUmxiblZoZEdsdmJpQTlJR1V1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVLU3dnWlM1dFlYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXRZWEFnUFNCdUtHVXViV0Z3S1Nrc0lHVXViV0YwWTJGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJXRjBZMkZ3SUQwZ2JpaGxMbTFoZEdOaGNDa3BMQ0JsTG1Gc2NHaGhUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WVd4d2FHRk5ZWEFnUFNCdUtHVXVZV3h3YUdGTllYQXBLU3dnWlM1aWRXMXdUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WW5WdGNFMWhjQ0E5SUc0b1pTNWlkVzF3VFdGd0tTa3NJR1V1WW5WdGNGTmpZV3hsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WW5WdGNGTmpZV3hsSUQwZ1pTNWlkVzF3VTJOaGJHVXBMQ0JsTG01dmNtMWhiRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG01dmNtMWhiRTFoY0NBOUlHNG9aUzV1YjNKdFlXeE5ZWEFwS1N3Z1pTNXViM0p0WVd4TllYQlVlWEJsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJR1V1Ym05eWJXRnNUV0Z3Vkhsd1pTa3NJR1V1Ym05eWJXRnNVMk5oYkdVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdWJtOXliV0ZzVTJOaGJHVTdDaUFnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbWx6UVhKeVlYa29jaWtnUFQwOUlDRXhJQ1ltSUNoeUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElLSUNBZ0lDQWdJQ0FnSUNBZ1hTa3NJR2t1Ym05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV2lncExtWnliMjFCY25KaGVTaHlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdiaWhsTG1ScGMzQnNZV05sYldWdWRFMWhjQ2twTENCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxLU3dnWlM1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrc0lHVXVjbTkxWjJodVpYTnpUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Y205MVoyaHVaWE56VFdGd0lEMGdiaWhsTG5KdmRXZG9ibVZ6YzAxaGNDa3BMQ0JsTG0xbGRHRnNibVZ6YzAxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtMWxkR0ZzYm1WemMwMWhjQ0E5SUc0b1pTNXRaWFJoYkc1bGMzTk5ZWEFwS1N3Z1pTNWxiV2x6YzJsMlpVMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVZ0YVhOemFYWmxUV0Z3SUQwZ2JpaGxMbVZ0YVhOemFYWmxUV0Z3S1Nrc0lHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJR1V1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtwTENCbExuTndaV04xYkdGeVRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM0JsWTNWc1lYSk5ZWEFnUFNCdUtHVXVjM0JsWTNWc1lYSk5ZWEFwS1N3Z1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUQwZ2JpaGxMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3S1Nrc0lHVXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1BTQnVLR1V1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ2twTENCbExtVnVkazFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1WdWRrMWhjQ0E5SUc0b1pTNWxiblpOWVhBcEtTd2daUzVsYm5aTllYQkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWxiblpOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTa3NJR1V1Y21WbWJHVmpkR2wyYVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3BMQ0JsTG5KbFpuSmhZM1JwYjI1U1lYUnBieUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJR1V1Y21WbWNtRmpkR2x2YmxKaGRHbHZLU3dnWlM1c2FXZG9kRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG14cFoyaDBUV0Z3SUQwZ2JpaGxMbXhwWjJoMFRXRndLU2tzSUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa3BMQ0JsTG1GdlRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZVzlOWVhBZ1BTQnVLR1V1WVc5TllYQXBLU3dnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVoYjAxaGNFbHVkR1Z1YzJsMGVTa3NJR1V1WjNKaFpHbGxiblJOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bmNtRmthV1Z1ZEUxaGNDQTlJRzRvWlM1bmNtRmthV1Z1ZEUxaGNDa3BMQ0JsTG1Oc1pXRnlZMjloZEUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnNaV0Z5WTI5aGRFMWhjQ0E5SUc0b1pTNWpiR1ZoY21OdllYUk5ZWEFwS1N3Z1pTNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ1BTQnVLR1V1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0tTa3NJR1V1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQwZ2JpaGxMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ2twTENCbExtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1VnUFNCdVpYY2dXaWdwTG1aeWIyMUJjbkpoZVNobExtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxLU2tzSUdVdWFYSnBaR1Z6WTJWdVkyVk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVwY21sa1pYTmpaVzVqWlUxaGNDQTlJRzRvWlM1cGNtbGtaWE5qWlc1alpVMWhjQ2twTENCbExtbHlhV1JsYzJObGJtTmxWR2hwWTJ0dVpYTnpUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YVhKcFpHVnpZMlZ1WTJWVWFHbGphMjVsYzNOTllYQWdQU0J1S0dVdWFYSnBaR1Z6WTJWdVkyVlVhR2xqYTI1bGMzTk5ZWEFwS1N3Z1pTNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnUFNCdUtHVXVkSEpoYm5OdGFYTnphVzl1VFdGd0tTa3NJR1V1ZEdocFkydHVaWE56VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRHaHBZMnR1WlhOelRXRndJRDBnYmlobExuUm9hV05yYm1WemMwMWhjQ2twTENCbExtRnVhWE52ZEhKdmNIbE5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVoYm1semIzUnliM0I1VFdGd0lEMGdiaWhsTG1GdWFYTnZkSEp2Y0hsTllYQXBLU3dnWlM1emFHVmxia052Ykc5eVRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc1RGIyeHZjazFoY0NBOUlHNG9aUzV6YUdWbGJrTnZiRzl5VFdGd0tTa3NJR1V1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0E5SUc0b1pTNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDa3BMQ0JwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWR1Y0ZEhWeVpYTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUmxlSFIxY21WeklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QmpjbVZoZEdWTllYUmxjbWxoYkVaeWIyMVVlWEJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVTJoaFpHOTNUV0YwWlhKcFlXdzZJR05qTEFvZ0lDQWdJQ0FnSUNBZ0lDQlRjSEpwZEdWTllYUmxjbWxoYkRvZ1pXRXNDaUFnSUNBZ0lDQWdJQ0FnSUZKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzT2lCc1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnVTJoaFpHVnlUV0YwWlhKcFlXdzZJR3AwTEFvZ0lDQWdJQ0FnSUNBZ0lDQlFiMmx1ZEhOTllYUmxjbWxoYkRvZ2JtRXNDaUFnSUNBZ0lDQWdJQ0FnSUUxbGMyaFFhSGx6YVdOaGJFMWhkR1Z5YVdGc09pQm9ZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1RXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXdzZJR1JoTEFvZ0lDQWdJQ0FnSUNBZ0lDQk5aWE5vVUdodmJtZE5ZWFJsY21saGJEb2dkV01zQ2lBZ0lDQWdJQ0FnSUNBZ0lFMWxjMmhVYjI5dVRXRjBaWEpwWVd3NklHUmpMQW9nSUNBZ0lDQWdJQ0FnSUNCTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3NklHWmpMQW9nSUNBZ0lDQWdJQ0FnSUNCTlpYTm9UR0Z0WW1WeWRFMWhkR1Z5YVdGc09pQndZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1RXVnphRVJsY0hSb1RXRjBaWEpwWVd3NklGRnlMQW9nSUNBZ0lDQWdJQ0FnSUNCTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJEb2dhbklzQ2lBZ0lDQWdJQ0FnSUNBZ0lFMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc09pQlRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ1RXVnphRTFoZEdOaGNFMWhkR1Z5YVdGc09pQnRZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1RHbHVaVVJoYzJobFpFMWhkR1Z5YVdGc09pQm5ZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1RHbHVaVUpoYzJsalRXRjBaWEpwWVd3NklIZDBMQW9nSUNBZ0lDQWdJQ0FnSUNCTllYUmxjbWxoYkRvZ1luUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEZ0bFhUc0tJQ0FnSUgwS2ZTd2daMkVnUFNCamJHRnpjeUI3Q2lBZ0lDQnpkR0YwYVdNZ1pHVmpiMlJsVkdWNGRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCVVpYaDBSR1ZqYjJSbGNpQThJQ0oxSWlrZ2NtVjBkWEp1SUc1bGR5QlVaWGgwUkdWamIyUmxjaWdwTG1SbFkyOWtaU2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUNJaU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQmxMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWwwSUNzOUlGTjBjbWx1Wnk1bWNtOXRRMmhoY2tOdlpHVW9aVnR1WFNrN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENobGMyTmhjR1VvZENrcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdWNGRISmhZM1JWY214Q1lYTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWJHRnpkRWx1WkdWNFQyWW9JaThpS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOVBUMGdMVEVnUHlBaUxpOGlJRG9nWlM1emJHbGpaU2d3TENCMElDc2dNU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nY21WemIyeDJaVlZTVENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQmxJQ0U5SUNKemRISnBibWNpSUh4OElHVWdQVDA5SUNJaUlEOGdJaUlnT2lBb0wxNW9kSFJ3Y3o4NlhDOWNMeTlwTG5SbGMzUW9kQ2tnSmlZZ0wxNWNMeTh1ZEdWemRDaGxLU0FtSmlBb2RDQTlJSFF1Y21Wd2JHRmpaU2d2S0Y1b2RIUndjejg2WEM5Y0wxdGVYQzlkS3lrdUtpOXBMQ0FpSkRFaUtTa3NJQzllS0doMGRIQnpQem9wUDF3dlhDOHZhUzUwWlhOMEtHVXBJSHg4SUM5ZVpHRjBZVG91S2l3dUtpUXZhUzUwWlhOMEtHVXBJSHg4SUM5ZVlteHZZam91S2lRdmFTNTBaWE4wS0dVcElEOGdaU0E2SUhRZ0t5QmxLVHNLSUNBZ0lIMEtmU3dnUkdNZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVkbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tTd2dkR2hwY3k1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUQwZ0lUQXNJSFJvYVhNdWRIbHdaU0E5SUNKSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU0lzSUhSb2FYTXVhVzV6ZEdGdVkyVkRiM1Z1ZENBOUlERWdMeUF3T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWFXNXpkR0Z1WTJWRGIzVnVkQ0E5SUdVdWFXNXpkR0Z1WTJWRGIzVnVkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtbHVjM1JoYm1ObFEyOTFiblFnUFNCMGFHbHpMbWx1YzNSaGJtTmxRMjkxYm5Rc0lHVXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTQTlJQ0V3TENCbE93b2dJQ0FnZlFwOUxDQk9ZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdSSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE1zSUdFZ1BTQnVaWGNnY200b2NpNXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQmhMbk5sZEZCaGRHZ29jaTV3WVhSb0tTd2dZUzV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSEl1Y21WeGRXVnpkRWhsWVdSbGNpa3NJR0V1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hJdWQybDBhRU55WldSbGJuUnBZV3h6S1N3Z1lTNXNiMkZrS0dVc0lHWjFibU4wYVc5dUtHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFvY2k1d1lYSnpaU2hLVTA5T0xuQmhjbk5sS0c4cEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQeUJwS0dNcElEb2dZMjl1YzI5c1pTNWxjbkp2Y2loaktTd2djaTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzSUc0c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZTMwc0lHNGdQU0I3ZlRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCcEtHWXNJRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSYmJWMGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSFJiYlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdaaTVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk5iYlYwc0lIQWdQU0J5S0dZc0lHY3VZblZtWm1WeUtTd2dkaUE5SUd0cEtHY3VkSGx3WlN3Z2NDa3NJSGdnUFNCdVpYY2dTWE1vZGl3Z1p5NXpkSEpwWkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlQzUxZFdsa0lEMGdaeTUxZFdsa0xDQjBXMjFkSUQwZ2VDd2dlRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY2lobUxDQnRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1VzIxZElDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQnVXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHWXVZWEp5WVhsQ2RXWm1aWEp6VzIxZExDQndJRDBnYm1WM0lGVnBiblF6TWtGeWNtRjVLR2NwTG1KMVptWmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1YmJWMGdQU0J3TENCd093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHVXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTQS9JRzVsZHlCRVl5QTZJRzVsZHlCSFpTd2dieUE5SUdVdVpHRjBZUzVwYm1SbGVEc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnYTJrb2J5NTBlWEJsTENCdkxtRnljbUY1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV6WlhSSmJtUmxlQ2h1WlhjZ1pYUW9aaXdnTVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVXVaR0YwWVM1aGRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ppQnBiaUJqS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQmpXMlpkTENCZk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JTNXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR2tvWlM1a1lYUmhMQ0J0TG1SaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYeUE5SUc1bGR5QlJhU2huTENCdExtbDBaVzFUYVhwbExDQnRMbTltWm5ObGRDd2diUzV1YjNKdFlXeHBlbVZrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ2Eya29iUzUwZVhCbExDQnRMbUZ5Y21GNUtTd2djQ0E5SUcwdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ1B5QjFhU0E2SUdWME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1h5QTlJRzVsZHlCd0tHY3NJRzB1YVhSbGJWTnBlbVVzSUcwdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiUzV1WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0Y4dWJtRnRaU0E5SUcwdWJtRnRaU2tzSUcwdWRYTmhaMlVnSVQwOUlIWnZhV1FnTUNBbUppQmZMbk5sZEZWellXZGxLRzB1ZFhOaFoyVXBMQ0J0TG5Wd1pHRjBaVkpoYm1kbElDRTlQU0IyYjJsa0lEQWdKaVlnS0Y4dWRYQmtZWFJsVW1GdVoyVXViMlptYzJWMElEMGdiUzUxY0dSaGRHVlNZVzVuWlM1dlptWnpaWFFzSUY4dWRYQmtZWFJsVW1GdVoyVXVZMjkxYm5RZ1BTQnRMblZ3WkdGMFpWSmhibWRsTG1OdmRXNTBLU3dnWVM1elpYUkJkSFJ5YVdKMWRHVW9aaXdnWHlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1pTNWtZWFJoTG0xdmNuQm9RWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JwWmlBb2JDa2dabTl5S0d4bGRDQm1JR2x1SUd3cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR3hiWmwwc0lGOGdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5JRDBnTUN3Z2NDQTlJRzB1YkdWdVozUm9PeUJuSUR3Z2NEc2daeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYlZ0blhTd2dlRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMkxtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUdrb1pTNWtZWFJoTENCMkxtUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0J1WlhjZ1VXa29lU3dnZGk1cGRHVnRVMmw2WlN3Z2RpNXZabVp6WlhRc0lIWXVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnYTJrb2RpNTBlWEJsTENCMkxtRnljbUY1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRJRDBnYm1WM0lHVjBLSGtzSUhZdWFYUmxiVk5wZW1Vc0lIWXVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyTG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2VDNXVZVzFsSUQwZ2RpNXVZVzFsS1N3Z1h5NXdkWE5vS0hncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXViVzl5Y0doQmRIUnlhV0oxZEdWelcyWmRJRDBnWHpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pTNWtZWFJoTG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElDWW1JQ2hoTG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnWlM1a1lYUmhMbWR5YjNWd2N5QjhmQ0JsTG1SaGRHRXVaSEpoZDJOaGJHeHpJSHg4SUdVdVpHRjBZUzV2Wm1aelpYUnpPd29nSUNBZ0lDQWdJR2xtSUNoMUlDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdaaUE5SURBc0lHMGdQU0IxTG14bGJtZDBhRHNnWmlBaFBUMGdiVHNnS3l0bUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0IxVzJaZE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTG1Ga1pFZHliM1Z3S0Y4dWMzUmhjblFzSUY4dVkyOTFiblFzSUY4dWJXRjBaWEpwWVd4SmJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWlM1a1lYUmhMbUp2ZFc1a2FXNW5VM0JvWlhKbE93b2dJQ0FnSUNBZ0lHbG1JQ2hrSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0J1WlhjZ1FUc0tJQ0FnSUNBZ0lDQWdJQ0FnWkM1alpXNTBaWElnSVQwOUlIWnZhV1FnTUNBbUppQm1MbVp5YjIxQmNuSmhlU2hrTG1ObGJuUmxjaWtzSUdFdVltOTFibVJwYm1kVGNHaGxjbVVnUFNCdVpYY2dXWFFvWml3Z1pDNXlZV1JwZFhNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXVZVzFsSUNZbUlDaGhMbTVoYldVZ1BTQmxMbTVoYldVcExDQmxMblZ6WlhKRVlYUmhJQ1ltSUNoaExuVnpaWEpFWVhSaElEMGdaUzUxYzJWeVJHRjBZU2tzSUdFN0NpQWdJQ0I5Q24wc0lIQjFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkVkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnWVNBOUlIUm9hWE11Y0dGMGFDQTlQVDBnSWlJZ1B5Qm5ZUzVsZUhSeVlXTjBWWEpzUW1GelpTaGxLU0E2SUhSb2FYTXVjR0YwYURzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5MWNtTmxVR0YwYUNBOUlIUm9hWE11Y21WemIzVnlZMlZRWVhSb0lIeDhJR0U3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0J1WlhjZ2NtNG9kR2hwY3k1dFlXNWhaMlZ5S1RzS0lDQWdJQ0FnSUNCdkxuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2dieTV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaWtzSUc4dWMyVjBWMmwwYUVOeVpXUmxiblJwWVd4ektIUm9hWE11ZDJsMGFFTnlaV1JsYm5ScFlXeHpLU3dnYnk1c2IyRmtLR1VzSUdaMWJtTjBhVzl1S0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJRXBUVDA0dWNHRnljMlVvWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLSFVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ0lUMDlJSFp2YVdRZ01DQW1KaUJwS0hVcExDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSVHBQWW1wbFkzUk1iMkZrWlhJNklFTmhiaWQwSUhCaGNuTmxJQ0lnS3lCbElDc2dJaTRpTENCMUxtMWxjM05oWjJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYkM1dFpYUmhaR0YwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dnZ1BUMDlJSFp2YVdRZ01DQjhmQ0JvTG5SNWNHVWdQVDA5SUhadmFXUWdNQ0I4ZkNCb0xuUjVjR1V1ZEc5TWIzZGxja05oYzJVb0tTQTlQVDBnSW1kbGIyMWxkSEo1SWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQWhQVDBnZG05cFpDQXdJQ1ltSUdrb2JtVjNJRVZ5Y205eUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRU5oYmlkMElHeHZZV1FnSWlBcklHVXBLU3dnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJEWVc0bmRDQnNiMkZrSUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlMbkJoY25ObEtHd3NJSFFwT3dvZ0lDQWdJQ0FnSUgwc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ1lYTjVibU1nYkc5aFpFRnplVzVqS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNc0lHa2dQU0IwYUdsekxuQmhkR2dnUFQwOUlDSWlJRDhnWjJFdVpYaDBjbUZqZEZWeWJFSmhjMlVvWlNrZ09pQjBhR2x6TG5CaGRHZzdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dQU0IwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0I4ZkNCcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJSEp1S0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdjaTV6WlhSUVlYUm9LSFJvYVhNdWNHRjBhQ2tzSUhJdWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnlMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWgwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCaGQyRnBkQ0J5TG14dllXUkJjM2x1WXlobExDQjBLU3dnYnlBOUlFcFRUMDR1Y0dGeWMyVW9ZU2tzSUdNZ1BTQnZMbTFsZEdGa1lYUmhPd29nSUNBZ0lDQWdJR2xtSUNoaklEMDlQU0IyYjJsa0lEQWdmSHdnWXk1MGVYQmxJRDA5UFNCMmIybGtJREFnZkh3Z1l5NTBlWEJsTG5SdlRHOTNaWEpEWVhObEtDa2dQVDA5SUNKblpXOXRaWFJ5ZVNJcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQkRZVzRuZENCc2IyRmtJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lYZGhhWFFnYmk1d1lYSnpaVUZ6ZVc1aktHOHBPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV3WVhKelpVRnVhVzFoZEdsdmJuTW9aUzVoYm1sdFlYUnBiMjV6S1N3Z2FTQTlJSFJvYVhNdWNHRnljMlZUYUdGd1pYTW9aUzV6YUdGd1pYTXBMQ0J5SUQwZ2RHaHBjeTV3WVhKelpVZGxiMjFsZEhKcFpYTW9aUzVuWlc5dFpYUnlhV1Z6TENCcEtTd2dZU0E5SUhSb2FYTXVjR0Z5YzJWSmJXRm5aWE1vWlM1cGJXRm5aWE1zSUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdkQ2hzS1RzS0lDQWdJQ0FnSUNCOUtTd2dieUE5SUhSb2FYTXVjR0Z5YzJWVVpYaDBkWEpsY3lobExuUmxlSFIxY21WekxDQmhLU3dnWXlBOUlIUm9hWE11Y0dGeWMyVk5ZWFJsY21saGJITW9aUzV0WVhSbGNtbGhiSE1zSUc4cExDQnNJRDBnZEdocGN5NXdZWEp6WlU5aWFtVmpkQ2hsTG05aWFtVmpkQ3dnY2l3Z1l5d2dieXdnYmlrc0lHZ2dQU0IwYUdsekxuQmhjbk5sVTJ0bGJHVjBiMjV6S0dVdWMydGxiR1YwYjI1ekxDQnNLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVpYVc1a1UydGxiR1YwYjI1ektHd3NJR2dwTENCMElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JrSUdsdUlHRXBhV1lnS0dGYlpGMHVaR0YwWVNCcGJuTjBZVzVqWlc5bUlFaFVUVXhKYldGblpVVnNaVzFsYm5RcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVWdQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFVnUFQwOUlDRXhJQ1ltSUhRb2JDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnNPd29nSUNBZ2ZRb2dJQ0FnWVhONWJtTWdjR0Z5YzJWQmMzbHVZeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJoY25ObFFXNXBiV0YwYVc5dWN5aGxMbUZ1YVcxaGRHbHZibk1wTENCdUlEMGdkR2hwY3k1d1lYSnpaVk5vWVhCbGN5aGxMbk5vWVhCbGN5a3NJR2tnUFNCMGFHbHpMbkJoY25ObFIyVnZiV1YwY21sbGN5aGxMbWRsYjIxbGRISnBaWE1zSUc0cExDQnlJRDBnWVhkaGFYUWdkR2hwY3k1d1lYSnpaVWx0WVdkbGMwRnplVzVqS0dVdWFXMWhaMlZ6S1N3Z1lTQTlJSFJvYVhNdWNHRnljMlZVWlhoMGRYSmxjeWhsTG5SbGVIUjFjbVZ6TENCeUtTd2dieUE5SUhSb2FYTXVjR0Z5YzJWTllYUmxjbWxoYkhNb1pTNXRZWFJsY21saGJITXNJR0VwTENCaklEMGdkR2hwY3k1d1lYSnpaVTlpYW1WamRDaGxMbTlpYW1WamRDd2dhU3dnYnl3Z1lTd2dkQ2tzSUd3Z1BTQjBhR2x6TG5CaGNuTmxVMnRsYkdWMGIyNXpLR1V1YzJ0bGJHVjBiMjV6TENCaktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVpYVc1a1UydGxiR1YwYjI1ektHTXNJR3dwTENCak93b2dJQ0FnZlFvZ0lDQWdjR0Z5YzJWVGFHRndaWE1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJR1V1YkdWdVozUm9PeUJ1SUR3Z2FUc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnUm00b0tTNW1jbTl0U2xOUFRpaGxXMjVkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkRnR5TG5WMWFXUmRJRDBnY2pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlZOclpXeGxkRzl1Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlN3Z2FTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMblJ5WVhabGNuTmxLR1oxYm1OMGFXOXVLSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaTVwYzBKdmJtVWdKaVlnS0dsYmNpNTFkV2xrWFNBOUlISXBPd29nSUNBZ0lDQWdJSDBwTENCbElDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdjaUE5SURBc0lHRWdQU0JsTG14bGJtZDBhRHNnY2lBOElHRTdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdibVYzSUU5dktDa3Vabkp2YlVwVFQwNG9aVnR5WFN3Z2FTazdDaUFnSUNBZ0lDQWdJQ0FnSUc1YmJ5NTFkV2xrWFNBOUlHODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVkhaVzl0WlhSeWFXVnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIdDlPd29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dUbU03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUdFZ1BTQmxMbXhsYm1kMGFEc2djaUE4SUdFN0lISXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5d2dZeUE5SUdWYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb1l5NTBlWEJsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKQ2RXWm1aWEpIWlc5dFpYUnllU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpU1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYVM1d1lYSnpaU2hqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeTUwZVhCbElHbHVJSEoxSUQ4Z2J5QTlJSEoxVzJNdWRIbHdaVjB1Wm5KdmJVcFRUMDRvWXl3Z2RDa2dPaUJqYjI1emIyeGxMbmRoY200b1lGUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dWVzV6ZFhCd2IzSjBaV1FnWjJWdmJXVjBjbmtnZEhsd1pTQWlKSHRqTG5SNWNHVjlJbUFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnk1MWRXbGtJRDBnWXk1MWRXbGtMQ0JqTG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXVZVzFsSUQwZ1l5NXVZVzFsS1N3Z1l5NTFjMlZ5UkdGMFlTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuVnpaWEpFWVhSaElEMGdZeTUxYzJWeVJHRjBZU2tzSUc1Yll5NTFkV2xrWFNBOUlHODdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0N0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlUxaGRHVnlhV0ZzY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlN3Z2FTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnVldNN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1YzJWMFZHVjRkSFZ5WlhNb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQXNJRzhnUFNCbExteGxibWQwYURzZ1lTQThJRzg3SUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVmJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1VzJNdWRYVnBaRjBnUFQwOUlIWnZhV1FnTUNBbUppQW9ibHRqTG5WMWFXUmRJRDBnY2k1d1lYSnpaU2hqS1Nrc0lHbGJZeTUxZFdsa1hTQTlJRzViWXk1MWRXbGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFFXNXBiV0YwYVc5dWN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0I3ZlRzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z1pTNXNaVzVuZEdnN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pWdHVYU3dnY2lBOUlHbHpMbkJoY25ObEtHa3BPd29nSUNBZ0lDQWdJQ0FnSUNCMFczSXVkWFZwWkYwZ1BTQnlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxTVzFoWjJWektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXNJR2tnUFNCN2ZTd2djanNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJoS0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YldGdVlXZGxjaTVwZEdWdFUzUmhjblFvWXlrc0lISXViRzloWkNoakxDQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1YldGdVlXZGxjaTVwZEdWdFJXNWtLR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQ0IyYjJsa0lEQXNJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmk1dFlXNWhaMlZ5TG1sMFpXMUZjbkp2Y2loaktTd2diaTV0WVc1aFoyVnlMbWwwWlcxRmJtUW9ZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ2S0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCaklEMDlJQ0p6ZEhKcGJtY2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR01zSUdnZ1BTQXZYaWhjTDF3dktYd29XMkV0ZWwwck9paGNMMXd2S1Q4cEwya3VkR1Z6ZENoc0tTQS9JR3dnT2lCdUxuSmxjMjkxY21ObFVHRjBhQ0FySUd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVNob0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQmpMbVJoZEdFZ1B5QjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCcmFTaGpMblI1Y0dVc0lHTXVaR0YwWVNrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nWXk1M2FXUjBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dZeTVvWldsbmFIUUtJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFnSmlZZ1pTNXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2JtVjNJRzFoS0hRcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUQwZ2JtVjNJSEp6S0dNcExDQnlMbk5sZEVOeWIzTnpUM0pwWjJsdUtIUm9hWE11WTNKdmMzTlBjbWxuYVc0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3dnUFNBd0xDQm9JRDBnWlM1c1pXNW5kR2c3SUd3Z1BDQm9PeUJzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCbFcyeGRMQ0JrSUQwZ2RTNTFjbXc3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hrS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNQ3dnWHlBOUlHUXViR1Z1WjNSb095QnRJRHdnWHpzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQmtXMjFkTENCd0lEMGdieWhuS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0NBaFBUMGdiblZzYkNBbUppQW9jQ0JwYm5OMFlXNWpaVzltSUVoVVRVeEpiV0ZuWlVWc1pXMWxiblFnUHlCbUxuQjFjMmdvY0NrZ09pQm1MbkIxYzJnb2JtVjNJRzlwS0hBdVpHRjBZU3dnY0M1M2FXUjBhQ3dnY0M1b1pXbG5hSFFwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsYmRTNTFkV2xrWFNBOUlHNWxkeUJKYmlobUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQnZLSFV1ZFhKc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwVzNVdWRYVnBaRjBnUFNCdVpYY2dTVzRvWmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCaGMzbHVZeUJ3WVhKelpVbHRZV2RsYzBGemVXNWpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXNJRzRnUFNCN2ZTd2dhVHNLSUNBZ0lDQWdJQ0JoYzNsdVl5Qm1kVzVqZEdsdmJpQnlLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJoSUQwOUlDSnpkSEpwYm1jaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHRXNJR01nUFNBdlhpaGNMMXd2S1h3b1cyRXRlbDByT2loY0wxd3ZLVDhwTDJrdWRHVnpkQ2h2S1NBL0lHOGdPaUIwTG5KbGMyOTFjbU5sVUdGMGFDQXJJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZWGRoYVhRZ2FTNXNiMkZrUVhONWJtTW9ZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnWVM1a1lYUmhJRDhnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2dhMmtvWVM1MGVYQmxMQ0JoTG1SaGRHRXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHRXVkMmxrZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUdFdWFHVnBaMmgwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0lDWW1JR1V1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2JtVjNJSEp6S0hSb2FYTXViV0Z1WVdkbGNpa3NJR2t1YzJWMFEzSnZjM05QY21sbmFXNG9kR2hwY3k1amNtOXpjMDl5YVdkcGJpazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQXNJRzhnUFNCbExteGxibWQwYURzZ1lTQThJRzg3SUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVmJZVjBzSUd3Z1BTQmpMblZ5YkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0d3cEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdiQzVzWlc1bmRHZzdJSFVnUENCa095QjFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJR3hiZFYwc0lHMGdQU0JoZDJGcGRDQnlLR1lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0SUNFOVBTQnVkV3hzSUNZbUlDaHRJR2x1YzNSaGJtTmxiMllnU0ZSTlRFbHRZV2RsUld4bGJXVnVkQ0EvSUdndWNIVnphQ2h0S1NBNklHZ3VjSFZ6YUNodVpYY2diMmtvYlM1a1lYUmhMQ0J0TG5kcFpIUm9MQ0J0TG1obGFXZG9kQ2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmx0akxuVjFhV1JkSUQwZ2JtVjNJRWx1S0dncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHRjNZV2wwSUhJb1l5NTFjbXdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWJZeTUxZFdsa1hTQTlJRzVsZHlCSmJpaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFZHVjRkSFZ5WlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUc0b2Npd2dZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RIbHdaVzltSUhJZ1BUMGdJbTUxYldKbGNpSWdQeUJ5SURvZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5TG5CaGNuTmxWR1Y0ZEhWeVpUb2dRMjl1YzNSaGJuUWdjMmh2ZFd4a0lHSmxJR2x1SUc1MWJXVnlhV01nWm05eWJTNGlMQ0J5S1N3Z1lWdHlYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCeUlEMGdNQ3dnWVNBOUlHVXViR1Z1WjNSb095QnlJRHdnWVRzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNCdkxtbHRZV2RsSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NkVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklFNXZJQ0pwYldGblpTSWdjM0JsWTJsbWFXVmtJR1p2Y2ljc0lHOHVkWFZwWkNrc0lIUmJieTVwYldGblpWMGdQVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVlc1a1pXWnBibVZrSUdsdFlXZGxJaXdnYnk1cGJXRm5aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2RGdHZMbWx0WVdkbFhTd2diQ0E5SUdNdVpHRjBZU3dnYURzS0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdWFYTkJjbkpoZVNoc0tTQS9JQ2hvSUQwZ2JtVjNJRXRwTENCc0xteGxibWQwYUNBOVBUMGdOaUFtSmlBb2FDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0tTa2dPaUFvYkNBbUppQnNMbVJoZEdFZ1B5Qm9JRDBnYm1WM0lHOXBJRG9nYUNBOUlHNWxkeUJUZEN3Z2JDQW1KaUFvYUM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3S1Nrc0lHZ3VjMjkxY21ObElEMGdZeXdnYUM1MWRXbGtJRDBnYnk1MWRXbGtMQ0J2TG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FDNXVZVzFsSUQwZ2J5NXVZVzFsS1N3Z2J5NXRZWEJ3YVc1bklDRTlQU0IyYjJsa0lEQWdKaVlnS0dndWJXRndjR2x1WnlBOUlHNG9ieTV0WVhCd2FXNW5MQ0JVZUNrcExDQnZMbU5vWVc1dVpXd2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FDNWphR0Z1Ym1Wc0lEMGdieTVqYUdGdWJtVnNLU3dnYnk1dlptWnpaWFFnSVQwOUlIWnZhV1FnTUNBbUppQm9MbTltWm5ObGRDNW1jbTl0UVhKeVlYa29ieTV2Wm1aelpYUXBMQ0J2TG5KbGNHVmhkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHZ3VjbVZ3WldGMExtWnliMjFCY25KaGVTaHZMbkpsY0dWaGRDa3NJRzh1WTJWdWRHVnlJQ0U5UFNCMmIybGtJREFnSmlZZ2FDNWpaVzUwWlhJdVpuSnZiVUZ5Y21GNUtHOHVZMlZ1ZEdWeUtTd2dieTV5YjNSaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaG9Mbkp2ZEdGMGFXOXVJRDBnYnk1eWIzUmhkR2x2Ymlrc0lHOHVkM0poY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hvTG5keVlYQlRJRDBnYmlodkxuZHlZWEJiTUYwc0lHMTFLU3dnYUM1M2NtRndWQ0E5SUc0b2J5NTNjbUZ3V3pGZExDQnRkU2twTENCdkxtWnZjbTFoZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hvTG1admNtMWhkQ0E5SUc4dVptOXliV0YwS1N3Z2J5NXBiblJsY201aGJFWnZjbTFoZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hvTG1sdWRHVnlibUZzUm05eWJXRjBJRDBnYnk1cGJuUmxjbTVoYkVadmNtMWhkQ2tzSUc4dWRIbHdaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaG9MblI1Y0dVZ1BTQnZMblI1Y0dVcExDQnZMbU52Ykc5eVUzQmhZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9hQzVqYjJ4dmNsTndZV05sSUQwZ2J5NWpiMnh2Y2xOd1lXTmxLU3dnYnk1bGJtTnZaR2x1WnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hvTG1WdVkyOWthVzVuSUQwZ2J5NWxibU52WkdsdVp5a3NJRzh1YldsdVJtbHNkR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2d1YldsdVJtbHNkR1Z5SUQwZ2JpaHZMbTFwYmtacGJIUmxjaXdnWjNVcEtTd2dieTV0WVdkR2FXeDBaWElnSVQwOUlIWnZhV1FnTUNBbUppQW9hQzV0WVdkR2FXeDBaWElnUFNCdUtHOHViV0ZuUm1sc2RHVnlMQ0JuZFNrcExDQnZMbUZ1YVhOdmRISnZjSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hQzVoYm1semIzUnliM0I1SUQwZ2J5NWhibWx6YjNSeWIzQjVLU3dnYnk1bWJHbHdXU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaG9MbVpzYVhCWklEMGdieTVtYkdsd1dTa3NJRzh1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHZ3VaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdieTVuWlc1bGNtRjBaVTFwY0cxaGNITXBMQ0J2TG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9hQzV3Y21WdGRXeDBhWEJzZVVGc2NHaGhJRDBnYnk1d2NtVnRkV3gwYVhCc2VVRnNjR2hoS1N3Z2J5NTFibkJoWTJ0QmJHbG5ibTFsYm5RZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYUM1MWJuQmhZMnRCYkdsbmJtMWxiblFnUFNCdkxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENrc0lHOHVZMjl0Y0dGeVpVWjFibU4wYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0dndVkyOXRjR0Z5WlVaMWJtTjBhVzl1SUQwZ2J5NWpiMjF3WVhKbFJuVnVZM1JwYjI0cExDQnZMblZ6WlhKRVlYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHZ3VkWE5sY2tSaGRHRWdQU0J2TG5WelpYSkVZWFJoS1N3Z2FWdHZMblYxYVdSZElEMGdhRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVTlpYW1WamRDaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR0U3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYnloa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwVzJSZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0JuWlc5dFpYUnllU0lzSUdRcExDQjBXMlJkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaktHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1FnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1pDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBc0lGOGdQU0JrTG14bGJtZDBhRHNnYlNBOElGODdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnWkZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JsdG5YU0E5UFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCVmJtUmxabWx1WldRZ2JXRjBaWEpwWVd3aUxDQm5LU3dnWmk1d2RYTm9LRzViWjEwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1VzJSZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0J0WVhSbGNtbGhiQ0lzSUdRcExDQnVXMlJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR3dvWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVnRrWFNBOVBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQlZibVJsWm1sdVpXUWdkR1Y0ZEhWeVpTSXNJR1FwTENCcFcyUmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FDd2dkVHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aUzUwZVhCbEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVMk5sYm1VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJRzVsZHlCSmJ5d2daUzVpWVdOclozSnZkVzVrSUNFOVBTQjJiMmxrSURBZ0ppWWdLRTUxYldKbGNpNXBjMGx1ZEdWblpYSW9aUzVpWVdOclozSnZkVzVrS1NBL0lHRXVZbUZqYTJkeWIzVnVaQ0E5SUc1bGR5QndaU2hsTG1KaFkydG5jbTkxYm1RcElEb2dZUzVpWVdOclozSnZkVzVrSUQwZ2JDaGxMbUpoWTJ0bmNtOTFibVFwS1N3Z1pTNWxiblpwY205dWJXVnVkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGhMbVZ1ZG1seWIyNXRaVzUwSUQwZ2JDaGxMbVZ1ZG1seWIyNXRaVzUwS1Nrc0lHVXVabTluSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1Wm05bkxuUjVjR1VnUFQwOUlDSkdiMmNpSUQ4Z1lTNW1iMmNnUFNCdVpYY2dURzhvWlM1bWIyY3VZMjlzYjNJc0lHVXVabTluTG01bFlYSXNJR1V1Wm05bkxtWmhjaWtnT2lCbExtWnZaeTUwZVhCbElEMDlQU0FpUm05blJYaHdNaUlnSmlZZ0tHRXVabTluSUQwZ2JtVjNJRkJ2S0dVdVptOW5MbU52Ykc5eUxDQmxMbVp2Wnk1a1pXNXphWFI1S1Nrc0lHVXVabTluTG01aGJXVWdJVDA5SUNJaUlDWW1JQ2hoTG1adlp5NXVZVzFsSUQwZ1pTNW1iMmN1Ym1GdFpTa3BMQ0JsTG1KaFkydG5jbTkxYm1SQ2JIVnljbWx1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdVltRmphMmR5YjNWdVpFSnNkWEp5YVc1bGMzTWdQU0JsTG1KaFkydG5jbTkxYm1SQ2JIVnljbWx1WlhOektTd2daUzVpWVdOclozSnZkVzVrU1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1WW1GamEyZHliM1Z1WkVsdWRHVnVjMmwwZVNBOUlHVXVZbUZqYTJkeWIzVnVaRWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZU0E5SUc1bGR5QjVkQ2hsTG1admRpd2daUzVoYzNCbFkzUXNJR1V1Ym1WaGNpd2daUzVtWVhJcExDQmxMbVp2WTNWeklDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdVptOWpkWE1nUFNCbExtWnZZM1Z6S1N3Z1pTNTZiMjl0SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1ZW05dmJTQTlJR1V1ZW05dmJTa3NJR1V1Wm1sc2JVZGhkV2RsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1Wm1sc2JVZGhkV2RsSUQwZ1pTNW1hV3h0UjJGMVoyVXBMQ0JsTG1acGJHMVBabVp6WlhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVM1bWFXeHRUMlptYzJWMElEMGdaUzVtYVd4dFQyWm1jMlYwS1N3Z1pTNTJhV1YzSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1ZG1sbGR5QTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR1V1ZG1sbGR5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrOXlkR2h2WjNKaGNHaHBZME5oYldWeVlTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnYm1WM0lFeHpLR1V1YkdWbWRDd2daUzV5YVdkb2RDd2daUzUwYjNBc0lHVXVZbTkwZEc5dExDQmxMbTVsWVhJc0lHVXVabUZ5S1N3Z1pTNTZiMjl0SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1ZW05dmJTQTlJR1V1ZW05dmJTa3NJR1V1ZG1sbGR5QWhQVDBnZG05cFpDQXdJQ1ltSUNoaExuWnBaWGNnUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExuWnBaWGNwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pCYldKcFpXNTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJRzVsZHlCRFl5aGxMbU52Ykc5eUxDQmxMbWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlSR2x5WldOMGFXOXVZV3hNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnYm1WM0lGSmpLR1V1WTI5c2IzSXNJR1V1YVc1MFpXNXphWFI1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pRYjJsdWRFeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQnVaWGNnZDJNb1pTNWpiMnh2Y2l3Z1pTNXBiblJsYm5OcGRIa3NJR1V1WkdsemRHRnVZMlVzSUdVdVpHVmpZWGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbEpsWTNSQmNtVmhUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJRzVsZHlCUVl5aGxMbU52Ykc5eUxDQmxMbWx1ZEdWdWMybDBlU3dnWlM1M2FXUjBhQ3dnWlM1b1pXbG5hSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbE53YjNSTWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ2JtVjNJRVZqS0dVdVkyOXNiM0lzSUdVdWFXNTBaVzV6YVhSNUxDQmxMbVJwYzNSaGJtTmxMQ0JsTG1GdVoyeGxMQ0JsTG5CbGJuVnRZbkpoTENCbExtUmxZMkY1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pJWlcxcGMzQm9aWEpsVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZU0E5SUc1bGR5QlRZeWhsTG1OdmJHOXlMQ0JsTG1keWIzVnVaRU52Ykc5eUxDQmxMbWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlUR2xuYUhSUWNtOWlaU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ2JtVjNJRWxqS0NrdVpuSnZiVXBUVDA0b1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVUydHBibTVsWkUxbGMyZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhQ0E5SUc4b1pTNW5aVzl0WlhSeWVTa3NJSFVnUFNCaktHVXViV0YwWlhKcFlXd3BMQ0JoSUQwZ2JtVjNJRTV2S0dnc0lIVXBMQ0JsTG1KcGJtUk5iMlJsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1WW1sdVpFMXZaR1VnUFNCbExtSnBibVJOYjJSbEtTd2daUzVpYVc1a1RXRjBjbWw0SUNFOVBTQjJiMmxrSURBZ0ppWWdZUzVpYVc1a1RXRjBjbWw0TG1aeWIyMUJjbkpoZVNobExtSnBibVJOWVhSeWFYZ3BMQ0JsTG5OclpXeGxkRzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1YzJ0bGJHVjBiMjRnUFNCbExuTnJaV3hsZEc5dUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKTlpYTm9Jam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2dnUFNCdktHVXVaMlZ2YldWMGNua3BMQ0IxSUQwZ1l5aGxMbTFoZEdWeWFXRnNLU3dnWVNBOUlHNWxkeUJOZENob0xDQjFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkpibk4wWVc1alpXUk5aWE5vSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdnZ1BTQnZLR1V1WjJWdmJXVjBjbmtwTENCMUlEMGdZeWhsTG0xaGRHVnlhV0ZzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWlM1amIzVnVkQ3dnWmlBOUlHVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhnc0lHMGdQU0JsTG1sdWMzUmhibU5sUTI5c2IzSTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnYm1WM0lFWnZLR2dzSUhVc0lHUXBMQ0JoTG1sdWMzUmhibU5sVFdGMGNtbDRJRDBnYm1WM0lIVnBLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29aaTVoY25KaGVTa3NJREUyS1N3Z2JTQWhQVDBnZG05cFpDQXdJQ1ltSUNoaExtbHVjM1JoYm1ObFEyOXNiM0lnUFNCdVpYY2dkV2tvYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2h0TG1GeWNtRjVLU3dnYlM1cGRHVnRVMmw2WlNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWt4UFJDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnYm1WM0lFUnZPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lreHBibVVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHNWxkeUJpYmlodktHVXVaMlZ2YldWMGNua3BMQ0JqS0dVdWJXRjBaWEpwWVd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKTWFXNWxURzl2Y0NJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdibVYzSUVKdktHOG9aUzVuWlc5dFpYUnllU2tzSUdNb1pTNXRZWFJsY21saGJDa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lreHBibVZUWldkdFpXNTBjeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ2JtVjNJR1Z1S0c4b1pTNW5aVzl0WlhSeWVTa3NJR01vWlM1dFlYUmxjbWxoYkNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxCdmFXNTBRMnh2ZFdRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlFiMmx1ZEhNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJRzVsZHlCV2J5aHZLR1V1WjJWdmJXVjBjbmtwTENCaktHVXViV0YwWlhKcFlXd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlRjSEpwZEdVaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJRzVsZHlCVmJ5aGpLR1V1YldGMFpYSnBZV3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pIY205MWNDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnYm1WM0lIUnBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrSnZibVVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHNWxkeUIwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHNWxkeUJLWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR0V1ZFhWcFpDQTlJR1V1ZFhWcFpDd2daUzV1WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdWJtRnRaU0E5SUdVdWJtRnRaU2tzSUdVdWJXRjBjbWw0SUNFOVBTQjJiMmxrSURBZ1B5QW9ZUzV0WVhSeWFYZ3Vabkp2YlVGeWNtRjVLR1V1YldGMGNtbDRLU3dnWlM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUdVdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNrc0lHRXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQW1KaUJoTG0xaGRISnBlQzVrWldOdmJYQnZjMlVvWVM1d2IzTnBkR2x2Yml3Z1lTNXhkV0YwWlhKdWFXOXVMQ0JoTG5OallXeGxLU2tnT2lBb1pTNXdiM05wZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUdFdWNHOXphWFJwYjI0dVpuSnZiVUZ5Y21GNUtHVXVjRzl6YVhScGIyNHBMQ0JsTG5KdmRHRjBhVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdZUzV5YjNSaGRHbHZiaTVtY205dFFYSnlZWGtvWlM1eWIzUmhkR2x2Ymlrc0lHVXVjWFZoZEdWeWJtbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHRXVjWFZoZEdWeWJtbHZiaTVtY205dFFYSnlZWGtvWlM1eGRXRjBaWEp1YVc5dUtTd2daUzV6WTJGc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUdFdWMyTmhiR1V1Wm5KdmJVRnljbUY1S0dVdWMyTmhiR1VwS1N3Z1pTNTFjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHRXVkWEF1Wm5KdmJVRnljbUY1S0dVdWRYQXBMQ0JsTG1OaGMzUlRhR0ZrYjNjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVM1allYTjBVMmhoWkc5M0lEMGdaUzVqWVhOMFUyaGhaRzkzS1N3Z1pTNXlaV05sYVhabFUyaGhaRzkzSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1Y21WalpXbDJaVk5vWVdSdmR5QTlJR1V1Y21WalpXbDJaVk5vWVdSdmR5a3NJR1V1YzJoaFpHOTNJQ1ltSUNobExuTm9ZV1J2ZHk1aWFXRnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXVjMmhoWkc5M0xtSnBZWE1nUFNCbExuTm9ZV1J2ZHk1aWFXRnpLU3dnWlM1emFHRmtiM2N1Ym05eWJXRnNRbWxoY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hoTG5Ob1lXUnZkeTV1YjNKdFlXeENhV0Z6SUQwZ1pTNXphR0ZrYjNjdWJtOXliV0ZzUW1saGN5a3NJR1V1YzJoaFpHOTNMbkpoWkdsMWN5QWhQVDBnZG05cFpDQXdJQ1ltSUNoaExuTm9ZV1J2ZHk1eVlXUnBkWE1nUFNCbExuTm9ZV1J2ZHk1eVlXUnBkWE1wTENCbExuTm9ZV1J2ZHk1dFlYQlRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdZUzV6YUdGa2IzY3ViV0Z3VTJsNlpTNW1jbTl0UVhKeVlYa29aUzV6YUdGa2IzY3ViV0Z3VTJsNlpTa3NJR1V1YzJoaFpHOTNMbU5oYldWeVlTQWhQVDBnZG05cFpDQXdJQ1ltSUNoaExuTm9ZV1J2ZHk1allXMWxjbUVnUFNCMGFHbHpMbkJoY25ObFQySnFaV04wS0dVdWMyaGhaRzkzTG1OaGJXVnlZU2twS1N3Z1pTNTJhWE5wWW14bElDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdWRtbHphV0pzWlNBOUlHVXVkbWx6YVdKc1pTa3NJR1V1Wm5KMWMzUjFiVU4xYkd4bFpDQWhQVDBnZG05cFpDQXdJQ1ltSUNoaExtWnlkWE4wZFcxRGRXeHNaV1FnUFNCbExtWnlkWE4wZFcxRGRXeHNaV1FwTENCbExuSmxibVJsY2s5eVpHVnlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXVjbVZ1WkdWeVQzSmtaWElnUFNCbExuSmxibVJsY2s5eVpHVnlLU3dnWlM1MWMyVnlSR0YwWVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hoTG5WelpYSkVZWFJoSUQwZ1pTNTFjMlZ5UkdGMFlTa3NJR1V1YkdGNVpYSnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXViR0Y1WlhKekxtMWhjMnNnUFNCbExteGhlV1Z5Y3lrc0lHVXVZMmhwYkdSeVpXNGdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHVXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQTdJR1lnUENCa0xteGxibWQwYURzZ1ppc3JLV0V1WVdSa0tIUm9hWE11Y0dGeWMyVlBZbXBsWTNRb1pGdG1YU3dnZEN3Z2Jpd2dhU3dnY2lrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlM1aGJtbHRZWFJwYjI1eklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCbExtRnVhVzFoZEdsdmJuTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQTdJR1lnUENCa0xteGxibWQwYURzZ1ppc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdElEMGdaRnRtWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdVlXNXBiV0YwYVc5dWN5NXdkWE5vS0hKYmJWMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hsTG5SNWNHVWdQVDA5SUNKTVQwUWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVZWFYwYjFWd1pHRjBaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGhMbUYxZEc5VmNHUmhkR1VnUFNCbExtRjFkRzlWY0dSaGRHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdVdWJHVjJaV3h6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3T3lCbUlEd2daQzVzWlc1bmRHZzdJR1lyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdSYlpsMHNJRjhnUFNCaExtZGxkRTlpYW1WamRFSjVVSEp2Y0dWeWRIa29JblYxYVdRaUxDQnRMbTlpYW1WamRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZJQ0U5UFNCMmIybGtJREFnSmlZZ1lTNWhaR1JNWlhabGJDaGZMQ0J0TG1ScGMzUmhibU5sTENCdExtaDVjM1JsY21WemFYTXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaE93b2dJQ0FnZlFvZ0lDQWdZbWx1WkZOclpXeGxkRzl1Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbXRsZVhNb2RDa3ViR1Z1WjNSb0lDRTlQU0F3SUNZbUlHVXVkSEpoZG1WeWMyVW9ablZ1WTNScGIyNG9iaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmk1cGMxTnJhVzV1WldSTlpYTm9JRDA5UFNBaE1DQW1KaUJ1TG5OclpXeGxkRzl1SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RGdHVMbk5yWld4bGRHOXVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFQwOUlIWnZhV1FnTUNBL0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCT2J5QnphMlZzWlhSdmJpQm1iM1Z1WkNCM2FYUm9JRlZWU1VRNklpd2diaTV6YTJWc1pYUnZiaWtnT2lCdUxtSnBibVFvYVN3Z2JpNWlhVzVrVFdGMGNtbDRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlMQ0JVZUNBOUlIc0tJQ0FnSUZWV1RXRndjR2x1WnpvZ1IyTXNDaUFnSUNCRGRXSmxVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJSHB1TEFvZ0lDQWdRM1ZpWlZKbFpuSmhZM1JwYjI1TllYQndhVzVuT2lCamFTd0tJQ0FnSUVWeGRXbHlaV04wWVc1bmRXeGhjbEpsWm14bFkzUnBiMjVOWVhCd2FXNW5PaUJKY2l3S0lDQWdJRVZ4ZFdseVpXTjBZVzVuZFd4aGNsSmxabkpoWTNScGIyNU5ZWEJ3YVc1bk9pQlZjaXdLSUNBZ0lFTjFZbVZWVmxKbFpteGxZM1JwYjI1TllYQndhVzVuT2lCV2N3cDlMQ0J0ZFNBOUlIc0tJQ0FnSUZKbGNHVmhkRmR5WVhCd2FXNW5PaUJFY2l3S0lDQWdJRU5zWVcxd1ZHOUZaR2RsVjNKaGNIQnBibWM2SUVsMExBb2dJQ0FnVFdseWNtOXlaV1JTWlhCbFlYUlhjbUZ3Y0dsdVp6b2dUbklLZlN3Z1ozVWdQU0I3Q2lBZ0lDQk9aV0Z5WlhOMFJtbHNkR1Z5T2lCd2RDd0tJQ0FnSUU1bFlYSmxjM1JOYVhCdFlYQk9aV0Z5WlhOMFJtbHNkR1Z5T2lCbWJ5d0tJQ0FnSUU1bFlYSmxjM1JOYVhCdFlYQk1hVzVsWVhKR2FXeDBaWEk2SUV4eUxBb2dJQ0FnVEdsdVpXRnlSbWxzZEdWeU9pQnRkQ3dLSUNBZ0lFeHBibVZoY2sxcGNHMWhjRTVsWVhKbGMzUkdhV3gwWlhJNklIVmtMQW9nSUNBZ1RHbHVaV0Z5VFdsd2JXRndUR2x1WldGeVJtbHNkR1Z5T2lCc2FRcDlMQ0JmZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTa3NJSFJvYVhNdWFYTkpiV0ZuWlVKcGRHMWhjRXh2WVdSbGNpQTlJQ0V3TENCMGVYQmxiMllnWTNKbFlYUmxTVzFoWjJWQ2FYUnRZWEFnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1kzSmxZWFJsU1cxaFoyVkNhWFJ0WVhBb0tTQnViM1FnYzNWd2NHOXlkR1ZrTGlJcExDQjBlWEJsYjJZZ1ptVjBZMmdnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1ptVjBZMmdvS1NCdWIzUWdjM1Z3Y0c5eWRHVmtMaUlwTENCMGFHbHpMbTl3ZEdsdmJuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaVzExYkhScGNHeDVRV3h3YUdFNklDSnViMjVsSWdvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJQY0hScGIyNXpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjSFJwYjI1eklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR1VnUFQwOUlIWnZhV1FnTUNBbUppQW9aU0E5SUNJaUtTd2dkR2hwY3k1d1lYUm9JQ0U5UFNCMmIybGtJREFnSmlZZ0tHVWdQU0IwYUdsekxuQmhkR2dnS3lCbEtTd2daU0E5SUhSb2FYTXViV0Z1WVdkbGNpNXlaWE52YkhabFZWSk1LR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dZU0E5SUhOekxtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCcFppQW9ZU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2djMlYwVkdsdFpXOTFkQ2htZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FtSmlCMEtHRXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUxDQXdLU3dnWVRzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUh0OU93b2dJQ0FnSUNBZ0lHOHVZM0psWkdWdWRHbGhiSE1nUFNCMGFHbHpMbU55YjNOelQzSnBaMmx1SUQwOVBTQWlZVzV2Ym5sdGIzVnpJaUEvSUNKellXMWxMVzl5YVdkcGJpSWdPaUFpYVc1amJIVmtaU0lzSUc4dWFHVmhaR1Z5Y3lBOUlIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpd2dabVYwWTJnb1pTd2dieWt1ZEdobGJpaG1kVzVqZEdsdmJpaGpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCakxtSnNiMklvS1RzS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0daMWJtTjBhVzl1S0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR055WldGMFpVbHRZV2RsUW1sMGJXRndLR01zSUU5aWFtVmpkQzVoYzNOcFoyNG9jaTV2Y0hScGIyNXpMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNsTndZV05sUTI5dWRtVnljMmx2YmpvZ0ltNXZibVVpQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLR1oxYm1OMGFXOXVLR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjM011WVdSa0tHVXNJR01wTENCMElDWW1JSFFvWXlrc0lISXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBwTG1OaGRHTm9LR1oxYm1OMGFXOXVLR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhU0FtSmlCcEtHTXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5S1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLVHNLSUNBZ0lIMEtmU3dnUlhJc0lGOWhJRDBnWTJ4aGMzTWdld29nSUNBZ2MzUmhkR2xqSUdkbGRFTnZiblJsZUhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFVnlJRDA5UFNCMmIybGtJREFnSmlZZ0tFVnlJRDBnYm1WM0lDaDNhVzVrYjNjdVFYVmthVzlEYjI1MFpYaDBJSHg4SUhkcGJtUnZkeTUzWldKcmFYUkJkV1JwYjBOdmJuUmxlSFFwS1N3Z1JYSTdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjMlYwUTI5dWRHVjRkQ2hsS1NCN0NpQWdJQ0FnSUNBZ1JYSWdQU0JsT3dvZ0lDQWdmUXA5TENCNGRTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1JIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJR0VnUFNCdVpYY2djbTRvZEdocGN5NXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQmhMbk5sZEZKbGMzQnZibk5sVkhsd1pTZ2lZWEp5WVhsaWRXWm1aWElpS1N3Z1lTNXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDa3NJR0V1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCaExuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aDBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeWtzSUdFdWJHOWhaQ2hsTENCbWRXNWpkR2x2YmloaktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHTXVjMnhwWTJVb01DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZZUzVuWlhSRGIyNTBaWGgwS0NrdVpHVmpiMlJsUVhWa2FXOUVZWFJoS0d3c0lHWjFibU4wYVc5dUtIVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMEtIVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dnYnlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4b2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdktHTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTQS9JR2tvWXlrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0dNcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlN3Z2RuVWdQU0J1WlhjZ2VtVXNJSGwxSUQwZ2JtVjNJSHBsTENCYWJpQTlJRzVsZHlCNlpTd2dUWFVnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRkR1Z5Wlc5RFlXMWxjbUVpTENCMGFHbHpMbUZ6Y0dWamRDQTlJREVzSUhSb2FYTXVaWGxsVTJWd0lEMGdMakEyTkN3Z2RHaHBjeTVqWVcxbGNtRk1JRDBnYm1WM0lIbDBMQ0IwYUdsekxtTmhiV1Z5WVV3dWJHRjVaWEp6TG1WdVlXSnNaU2d4S1N3Z2RHaHBjeTVqWVcxbGNtRk1MbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVqWVcxbGNtRlNJRDBnYm1WM0lIbDBMQ0IwYUdsekxtTmhiV1Z5WVZJdWJHRjVaWEp6TG1WdVlXSnNaU2d5S1N3Z2RHaHBjeTVqWVcxbGNtRlNMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVmWTJGamFHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZZM1Z6T2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCbWIzWTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJR0Z6Y0dWamREb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdibVZoY2pvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptRnlPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0I2YjI5dE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxlV1ZUWlhBNklHNTFiR3dLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJOaFkyaGxPd29nSUNBZ0lDQWdJR2xtSUNoMExtWnZZM1Z6SUNFOVBTQmxMbVp2WTNWeklIeDhJSFF1Wm05MklDRTlQU0JsTG1admRpQjhmQ0IwTG1GemNHVmpkQ0FoUFQwZ1pTNWhjM0JsWTNRZ0tpQjBhR2x6TG1GemNHVmpkQ0I4ZkNCMExtNWxZWElnSVQwOUlHVXVibVZoY2lCOGZDQjBMbVpoY2lBaFBUMGdaUzVtWVhJZ2ZId2dkQzU2YjI5dElDRTlQU0JsTG5wdmIyMGdmSHdnZEM1bGVXVlRaWEFnSVQwOUlIUm9hWE11WlhsbFUyVndLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVabTlqZFhNZ1BTQmxMbVp2WTNWekxDQjBMbVp2ZGlBOUlHVXVabTkyTENCMExtRnpjR1ZqZENBOUlHVXVZWE53WldOMElDb2dkR2hwY3k1aGMzQmxZM1FzSUhRdWJtVmhjaUE5SUdVdWJtVmhjaXdnZEM1bVlYSWdQU0JsTG1aaGNpd2dkQzU2YjI5dElEMGdaUzU2YjI5dExDQjBMbVY1WlZObGNDQTlJSFJvYVhNdVpYbGxVMlZ3TENCYWJpNWpiM0I1S0dVdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkQzVsZVdWVFpYQWdMeUF5TENCeUlEMGdhU0FxSUhRdWJtVmhjaUF2SUhRdVptOWpkWE1zSUdFZ1BTQjBMbTVsWVhJZ0tpQk5ZWFJvTG5SaGJpaGhhU0FxSUhRdVptOTJJQ29nTGpVcElDOGdkQzU2YjI5dExDQnZMQ0JqT3dvZ0lDQWdJQ0FnSUNBZ0lDQjVkUzVsYkdWdFpXNTBjMXN4TWwwZ1BTQXRhU3dnZG5VdVpXeGxiV1Z1ZEhOYk1USmRJRDBnYVN3Z2J5QTlJQzFoSUNvZ2RDNWhjM0JsWTNRZ0t5QnlMQ0JqSUQwZ1lTQXFJSFF1WVhOd1pXTjBJQ3NnY2l3Z1dtNHVaV3hsYldWdWRITmJNRjBnUFNBeUlDb2dkQzV1WldGeUlDOGdLR01nTFNCdktTd2dXbTR1Wld4bGJXVnVkSE5iT0YwZ1BTQW9ZeUFySUc4cElDOGdLR01nTFNCdktTd2dkR2hwY3k1allXMWxjbUZNTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1WTI5d2VTaGFiaWtzSUc4Z1BTQXRZU0FxSUhRdVlYTndaV04wSUMwZ2Npd2dZeUE5SUdFZ0tpQjBMbUZ6Y0dWamRDQXRJSElzSUZwdUxtVnNaVzFsYm5Seld6QmRJRDBnTWlBcUlIUXVibVZoY2lBdklDaGpJQzBnYnlrc0lGcHVMbVZzWlcxbGJuUnpXemhkSUQwZ0tHTWdLeUJ2S1NBdklDaGpJQzBnYnlrc0lIUm9hWE11WTJGdFpYSmhVaTV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbU52Y0hrb1dtNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtTmhiV1Z5WVV3dWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNobExtMWhkSEpwZUZkdmNteGtLUzV0ZFd4MGFYQnNlU2g1ZFNrc0lIUm9hWE11WTJGdFpYSmhVaTV0WVhSeWFYaFhiM0pzWkM1amIzQjVLR1V1YldGMGNtbDRWMjl5YkdRcExtMTFiSFJwY0d4NUtIWjFLVHNLSUNBZ0lIMEtmU3dnVDJNZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdJVEFwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZWFYwYjFOMFlYSjBJRDBnWlN3Z2RHaHBjeTV6ZEdGeWRGUnBiV1VnUFNBd0xDQjBhR2x6TG05c1pGUnBiV1VnUFNBd0xDQjBhR2x6TG1Wc1lYQnpaV1JVYVcxbElEMGdNQ3dnZEdocGN5NXlkVzV1YVc1bklEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCemRHRnlkQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVhKMFZHbHRaU0E5SUZOMUtDa3NJSFJvYVhNdWIyeGtWR2x0WlNBOUlIUm9hWE11YzNSaGNuUlVhVzFsTENCMGFHbHpMbVZzWVhCelpXUlVhVzFsSUQwZ01Dd2dkR2hwY3k1eWRXNXVhVzVuSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0J6ZEc5d0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVoyVjBSV3hoY0hObFpGUnBiV1VvS1N3Z2RHaHBjeTV5ZFc1dWFXNW5JRDBnSVRFc0lIUm9hWE11WVhWMGIxTjBZWEowSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JuWlhSRmJHRndjMlZrVkdsdFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkVaV3gwWVNncExDQjBhR2x6TG1Wc1lYQnpaV1JVYVcxbE93b2dJQ0FnZlFvZ0lDQWdaMlYwUkdWc2RHRW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0F3T3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1GMWRHOVRkR0Z5ZENBbUppQWhkR2hwY3k1eWRXNXVhVzVuS1NCeVpYUjFjbTRnZEdocGN5NXpkR0Z5ZENncExDQXdPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbkoxYm01cGJtY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCVGRTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdLSFFnTFNCMGFHbHpMbTlzWkZScGJXVXBJQzhnTVdVekxDQjBhR2x6TG05c1pGUnBiV1VnUFNCMExDQjBhR2x6TG1Wc1lYQnpaV1JVYVcxbElDczlJR1U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCVGRTZ3BJSHNLSUNBZ0lISmxkSFZ5YmlBb2RIbHdaVzltSUhCbGNtWnZjbTFoYm1ObElENGdJblVpSUQ4Z1JHRjBaU0E2SUhCbGNtWnZjbTFoYm1ObEtTNXViM2NvS1RzS2ZRcDJZWElnU200Z1BTQnVaWGNnUVN3Z1luVWdQU0J1WlhjZ1ZYUXNJSGQ0SUQwZ2JtVjNJRUVzSUNSdUlEMGdibVYzSUVFc0lFVjFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QktaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSkJkV1JwYjB4cGMzUmxibVZ5SWl3Z2RHaHBjeTVqYjI1MFpYaDBJRDBnWDJFdVoyVjBRMjl1ZEdWNGRDZ3BMQ0IwYUdsekxtZGhhVzRnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM0psWVhSbFIyRnBiaWdwTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENoMGFHbHpMbU52Ym5SbGVIUXVaR1Z6ZEdsdVlYUnBiMjRwTENCMGFHbHpMbVpwYkhSbGNpQTlJRzUxYkd3c0lIUm9hWE11ZEdsdFpVUmxiSFJoSUQwZ01Dd2dkR2hwY3k1ZlkyeHZZMnNnUFNCdVpYY2dUMk03Q2lBZ0lDQjlDaUFnSUNCblpYUkpibkIxZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdU93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabFJtbHNkR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkhSbGNpQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSXBMQ0IwYUdsekxtWnBiSFJsY2k1a2FYTmpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2Ymlrc0lIUm9hWE11WjJGcGJpNWpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2Ymlrc0lIUm9hWE11Wm1sc2RHVnlJRDBnYm5Wc2JDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVptbHNkR1Z5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbWxzZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bWFXeDBaWElnSVQwOUlHNTFiR3dnUHlBb2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWElwTENCMGFHbHpMbVpwYkhSbGNpNWthWE5qYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3BJRG9nZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVqYjI1MFpYaDBMbVJsYzNScGJtRjBhVzl1S1N3Z2RHaHBjeTVtYVd4MFpYSWdQU0JsTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENoMGFHbHpMbVpwYkhSbGNpa3NJSFJvYVhNdVptbHNkR1Z5TG1OdmJtNWxZM1FvZEdocGN5NWpiMjUwWlhoMExtUmxjM1JwYm1GMGFXOXVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGMzUmxjbFp2YkhWdFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVMbWRoYVc0dWRtRnNkV1U3Q2lBZ0lDQjlDaUFnSUNCelpYUk5ZWE4wWlhKV2IyeDFiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRoYVc0dVoyRnBiaTV6WlhSVVlYSm5aWFJCZEZScGJXVW9aU3dnZEdocGN5NWpiMjUwWlhoMExtTjFjbkpsYm5SVWFXMWxMQ0F1TURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amIyNTBaWGgwTG14cGMzUmxibVZ5TENCdUlEMGdkR2hwY3k1MWNEc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTBhVzFsUkdWc2RHRWdQU0IwYUdsekxsOWpiRzlqYXk1blpYUkVaV3gwWVNncExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaEtiaXdnWW5Vc0lIZDRLU3dnSkc0dWMyVjBLREFzSURBc0lDMHhLUzVoY0hCc2VWRjFZWFJsY201cGIyNG9ZblVwTENCMExuQnZjMmwwYVc5dVdDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU0FySUhSb2FYTXVkR2x0WlVSbGJIUmhPd29nSUNBZ0lDQWdJQ0FnSUNCMExuQnZjMmwwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoS2JpNTRMQ0JwS1N3Z2RDNXdiM05wZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb1NtNHVlU3dnYVNrc0lIUXVjRzl6YVhScGIyNWFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtFcHVMbm9zSUdrcExDQjBMbVp2Y25kaGNtUllMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtDUnVMbmdzSUdrcExDQjBMbVp2Y25kaGNtUlpMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtDUnVMbmtzSUdrcExDQjBMbVp2Y25kaGNtUmFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtDUnVMbm9zSUdrcExDQjBMblZ3V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5nc0lHa3BMQ0IwTG5Wd1dTNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxua3NJR2twTENCMExuVndXaTVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbm9zSUdrcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMExuTmxkRkJ2YzJsMGFXOXVLRXB1TG5nc0lFcHVMbmtzSUVwdUxub3BMQ0IwTG5ObGRFOXlhV1Z1ZEdGMGFXOXVLQ1J1TG5nc0lDUnVMbmtzSUNSdUxub3NJRzR1ZUN3Z2JpNTVMQ0J1TG5vcE93b2dJQ0FnZlFwOUxDQkdZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdTbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTUwZVhCbElEMGdJa0YxWkdsdklpd2dkR2hwY3k1c2FYTjBaVzVsY2lBOUlHVXNJSFJvYVhNdVkyOXVkR1Y0ZENBOUlHVXVZMjl1ZEdWNGRDd2dkR2hwY3k1bllXbHVJRDBnZEdocGN5NWpiMjUwWlhoMExtTnlaV0YwWlVkaGFXNG9LU3dnZEdocGN5NW5ZV2x1TG1OdmJtNWxZM1FvWlM1blpYUkpibkIxZENncEtTd2dkR2hwY3k1aGRYUnZjR3hoZVNBOUlDRXhMQ0IwYUdsekxtSjFabVpsY2lBOUlHNTFiR3dzSUhSb2FYTXVaR1YwZFc1bElEMGdNQ3dnZEdocGN5NXNiMjl3SUQwZ0lURXNJSFJvYVhNdWJHOXZjRk4wWVhKMElEMGdNQ3dnZEdocGN5NXNiMjl3Ulc1a0lEMGdNQ3dnZEdocGN5NXZabVp6WlhRZ1BTQXdMQ0IwYUdsekxtUjFjbUYwYVc5dUlEMGdkbTlwWkNBd0xDQjBhR2x6TG5Cc1lYbGlZV05yVW1GMFpTQTlJREVzSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDBnSVRFc0lIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwZ0lUQXNJSFJvYVhNdWMyOTFjbU5sSUQwZ2JuVnNiQ3dnZEdocGN5NXpiM1Z5WTJWVWVYQmxJRDBnSW1WdGNIUjVJaXdnZEdocGN5NWZjM1JoY25SbFpFRjBJRDBnTUN3Z2RHaHBjeTVmY0hKdlozSmxjM01nUFNBd0xDQjBhR2x6TGw5amIyNXVaV04wWldRZ1BTQWhNU3dnZEdocGN5NW1hV3gwWlhKeklEMGdXMTA3Q2lBZ0lDQjlDaUFnSUNCblpYUlBkWFJ3ZFhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJGcGJqc0tJQ0FnSUgwS0lDQWdJSE5sZEU1dlpHVlRiM1Z5WTJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOUlDRXhMQ0IwYUdsekxuTnZkWEpqWlZSNWNHVWdQU0FpWVhWa2FXOU9iMlJsSWl3Z2RHaHBjeTV6YjNWeVkyVWdQU0JsTENCMGFHbHpMbU52Ym01bFkzUW9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEUxbFpHbGhSV3hsYldWdWRGTnZkWEpqWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwZ0lURXNJSFJvYVhNdWMyOTFjbU5sVkhsd1pTQTlJQ0p0WldScFlVNXZaR1VpTENCMGFHbHpMbk52ZFhKalpTQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amNtVmhkR1ZOWldScFlVVnNaVzFsYm5SVGIzVnlZMlVvWlNrc0lIUm9hWE11WTI5dWJtVmpkQ2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRXVmthV0ZUZEhKbFlXMVRiM1Z5WTJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOUlDRXhMQ0IwYUdsekxuTnZkWEpqWlZSNWNHVWdQU0FpYldWa2FXRlRkSEpsWVcxT2IyUmxJaXdnZEdocGN5NXpiM1Z5WTJVZ1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNKbFlYUmxUV1ZrYVdGVGRISmxZVzFUYjNWeVkyVW9aU2tzSUhSb2FYTXVZMjl1Ym1WamRDZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUW5WbVptVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWlkV1ptWlhJZ1BTQmxMQ0IwYUdsekxuTnZkWEpqWlZSNWNHVWdQU0FpWW5WbVptVnlJaXdnZEdocGN5NWhkWFJ2Y0d4aGVTQW1KaUIwYUdsekxuQnNZWGtvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhCc1lYa29aU0E5SURBcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXBjMUJzWVhscGJtY2dQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUVGMVpHbHZJR2x6SUdGc2NtVmhaSGtnY0d4aGVXbHVaeTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUhSb2FYTWdRWFZrYVc4Z2FHRnpJRzV2SUhCc1lYbGlZV05ySUdOdmJuUnliMnd1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1ZmMzUmhjblJsWkVGMElEMGdkR2hwY3k1amIyNTBaWGgwTG1OMWNuSmxiblJVYVcxbElDc2daVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amNtVmhkR1ZDZFdabVpYSlRiM1Z5WTJVb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWlkV1ptWlhJZ1BTQjBhR2x6TG1KMVptWmxjaXdnZEM1c2IyOXdJRDBnZEdocGN5NXNiMjl3TENCMExteHZiM0JUZEdGeWRDQTlJSFJvYVhNdWJHOXZjRk4wWVhKMExDQjBMbXh2YjNCRmJtUWdQU0IwYUdsekxteHZiM0JGYm1Rc0lIUXViMjVsYm1SbFpDQTlJSFJvYVhNdWIyNUZibVJsWkM1aWFXNWtLSFJvYVhNcExDQjBMbk4wWVhKMEtIUm9hWE11WDNOMFlYSjBaV1JCZEN3Z2RHaHBjeTVmY0hKdlozSmxjM01nS3lCMGFHbHpMbTltWm5ObGRDd2dkR2hwY3k1a2RYSmhkR2x2Ymlrc0lIUm9hWE11YVhOUWJHRjVhVzVuSUQwZ0lUQXNJSFJvYVhNdWMyOTFjbU5sSUQwZ2RDd2dkR2hwY3k1elpYUkVaWFIxYm1Vb2RHaHBjeTVrWlhSMWJtVXBMQ0IwYUdsekxuTmxkRkJzWVhsaVlXTnJVbUYwWlNoMGFHbHpMbkJzWVhsaVlXTnJVbUYwWlNrc0lIUm9hWE11WTI5dWJtVmpkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2NHRjFjMlVvS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtGMVpHbHZPaUIwYUdseklFRjFaR2x2SUdoaGN5QnVieUJ3YkdGNVltRmpheUJqYjI1MGNtOXNMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx6VUd4aGVXbHVaeUE5UFQwZ0lUQWdKaVlnS0hSb2FYTXVYM0J5YjJkeVpYTnpJQ3M5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU0F0SUhSb2FYTXVYM04wWVhKMFpXUkJkQ3dnTUNrZ0tpQjBhR2x6TG5Cc1lYbGlZV05yVW1GMFpTd2dkR2hwY3k1c2IyOXdJRDA5UFNBaE1DQW1KaUFvZEdocGN5NWZjSEp2WjNKbGMzTWdQU0IwYUdsekxsOXdjbTluY21WemN5QWxJQ2gwYUdsekxtUjFjbUYwYVc5dUlIeDhJSFJvYVhNdVluVm1abVZ5TG1SMWNtRjBhVzl1S1Nrc0lIUm9hWE11YzI5MWNtTmxMbk4wYjNBb0tTd2dkR2hwY3k1emIzVnlZMlV1YjI1bGJtUmxaQ0E5SUc1MWJHd3NJSFJvYVhNdWFYTlFiR0Y1YVc1bklEMGdJVEVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNSdmNDZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWFZrYVc4NklIUm9hWE1nUVhWa2FXOGdhR0Z6SUc1dklIQnNZWGxpWVdOcklHTnZiblJ5YjJ3dUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzQnliMmR5WlhOeklEMGdNQ3dnZEdocGN5NXpiM1Z5WTJVZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWMyOTFjbU5sTG5OMGIzQW9LU3dnZEdocGN5NXpiM1Z5WTJVdWIyNWxibVJsWkNBOUlHNTFiR3dwTENCMGFHbHpMbWx6VUd4aGVXbHVaeUE5SUNFeExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXVibVZqZENncElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW1hV3gwWlhKekxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVXVZMjl1Ym1WamRDaDBhR2x6TG1acGJIUmxjbk5iTUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBeExDQjBJRDBnZEdocGN5NW1hV3gwWlhKekxteGxibWQwYURzZ1pTQThJSFE3SUdVckt5bDBhR2x6TG1acGJIUmxjbk5iWlNBdElERmRMbU52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWEp6VzJWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW1hV3gwWlhKelczUm9hWE11Wm1sc2RHVnljeTVzWlc1bmRHZ2dMU0F4WFM1amIyNXVaV04wS0hSb2FYTXVaMlYwVDNWMGNIVjBLQ2twT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUdsekxuTnZkWEpqWlM1amIyNXVaV04wS0hSb2FYTXVaMlYwVDNWMGNIVjBLQ2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWpiMjV1WldOMFpXUWdQU0FoTUN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGMyTnZibTVsWTNRb0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYMk52Ym01bFkzUmxaQ0FoUFQwZ0lURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5OdmRYSmpaUzVrYVhOamIyNXVaV04wS0hSb2FYTXVabWxzZEdWeWMxc3dYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBeExDQjBJRDBnZEdocGN5NW1hV3gwWlhKekxteGxibWQwYURzZ1pTQThJSFE3SUdVckt5bDBhR2x6TG1acGJIUmxjbk5iWlNBdElERmRMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhKelcyVmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHNkR1Z5YzF0MGFHbHpMbVpwYkhSbGNuTXViR1Z1WjNSb0lDMGdNVjB1WkdselkyOXVibVZqZENoMGFHbHpMbWRsZEU5MWRIQjFkQ2dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIUm9hWE11YzI5MWNtTmxMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW5aWFJQZFhSd2RYUW9LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlqYjI1dVpXTjBaV1FnUFNBaE1Td2dkR2hwY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSnpLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiSFJsY25NN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHYVd4MFpYSnpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNCOGZDQW9aU0E5SUZ0ZEtTd2dkR2hwY3k1ZlkyOXVibVZqZEdWa0lEMDlQU0FoTUNBL0lDaDBhR2x6TG1ScGMyTnZibTVsWTNRb0tTd2dkR2hwY3k1bWFXeDBaWEp6SUQwZ1pTNXpiR2xqWlNncExDQjBhR2x6TG1OdmJtNWxZM1FvS1NrZ09pQjBhR2x6TG1acGJIUmxjbk1nUFNCbExuTnNhV05sS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkVaWFIxYm1Vb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbVJsZEhWdVpTQTlJR1VzSUhSb2FYTXVjMjkxY21ObExtUmxkSFZ1WlNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFQwOUlDRXdJQ1ltSUhSb2FYTXVjMjkxY21ObExtUmxkSFZ1WlM1elpYUlVZWEpuWlhSQmRGUnBiV1VvZEdocGN5NWtaWFIxYm1Vc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVSbGRIVnVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtaWFIxYm1VN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBSbWxzZEdWeWN5Z3BXekJkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbWxzZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkdhV3gwWlhKektHVWdQeUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRJRG9nVzEwcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVUd4aGVXSmhZMnRTWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWFZrYVc4NklIUm9hWE1nUVhWa2FXOGdhR0Z6SUc1dklIQnNZWGxpWVdOcklHTnZiblJ5YjJ3dUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxJRDBnWlN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFQwOUlDRXdJQ1ltSUhSb2FYTXVjMjkxY21ObExuQnNZWGxpWVdOclVtRjBaUzV6WlhSVVlYSm5aWFJCZEZScGJXVW9kR2hwY3k1d2JHRjVZbUZqYTFKaGRHVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnNZWGxpWVdOclVtRjBaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdiR0Y1WW1GamExSmhkR1U3Q2lBZ0lDQjlDaUFnSUNCdmJrVnVaR1ZrS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YVhOUWJHRjVhVzVuSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JuWlhSTWIyOXdLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtaGhjMUJzWVhsaVlXTnJRMjl1ZEhKdmJDQTlQVDBnSVRFZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLU3dnSVRFcElEb2dkR2hwY3k1c2IyOXdPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjQ2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtGMVpHbHZPaUIwYUdseklFRjFaR2x2SUdoaGN5QnVieUJ3YkdGNVltRmpheUJqYjI1MGNtOXNMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbXh2YjNBZ1BTQmxMQ0IwYUdsekxtbHpVR3hoZVdsdVp5QTlQVDBnSVRBZ0ppWWdLSFJvYVhNdWMyOTFjbU5sTG14dmIzQWdQU0IwYUdsekxteHZiM0FwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjRk4wWVhKMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1c2IyOXdVM1JoY25RZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNFVnVaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViRzl2Y0VWdVpDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSV2IyeDFiV1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMkZwYmk1bllXbHVMblpoYkhWbE93b2dJQ0FnZlFvZ0lDQWdjMlYwVm05c2RXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1TG1kaGFXNHVjMlYwVkdGeVoyVjBRWFJVYVcxbEtHVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnUzI0Z1BTQnVaWGNnUVN3Z1ZIVWdQU0J1WlhjZ1ZYUXNJRUY0SUQwZ2JtVjNJRUVzSUZGdUlEMGdibVYzSUVFc0lIZDFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkdZeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1N3Z2RHaHBjeTV3WVc1dVpYSWdQU0IwYUdsekxtTnZiblJsZUhRdVkzSmxZWFJsVUdGdWJtVnlLQ2tzSUhSb2FYTXVjR0Z1Ym1WeUxuQmhibTVwYm1kTmIyUmxiQ0E5SUNKSVVsUkdJaXdnZEdocGN5NXdZVzV1WlhJdVkyOXVibVZqZENoMGFHbHpMbWRoYVc0cE93b2dJQ0FnZlFvZ0lDQWdZMjl1Ym1WamRDZ3BJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNWpiMjV1WldOMEtDa3NJSFJvYVhNdWNHRnVibVZ5TG1OdmJtNWxZM1FvZEdocGN5NW5ZV2x1S1RzS0lDQWdJSDBLSUNBZ0lHUnBjMk52Ym01bFkzUW9LU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVaR2x6WTI5dWJtVmpkQ2dwTENCMGFHbHpMbkJoYm01bGNpNWthWE5qYjI1dVpXTjBLSFJvYVhNdVoyRnBiaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUlBkWFJ3ZFhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVtVm1SR2x6ZEdGdVkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KbFprUnBjM1JoYm1ObE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW1WbVJHbHpkR0Z1WTJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5WldaRWFYTjBZVzVqWlNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJTYjJ4c2IyWm1SbUZqZEc5eUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5YjJ4c2IyWm1SbUZqZEc5eU93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05c2JHOW1aa1poWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KdmJHeHZabVpHWVdOMGIzSWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJHbHpkR0Z1WTJWTmIyUmxiQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVpHbHpkR0Z1WTJWTmIyUmxiRHNLSUNBZ0lIMEtJQ0FnSUhObGRFUnBjM1JoYm1ObFRXOWtaV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNWthWE4wWVc1alpVMXZaR1ZzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZUVScGMzUmhibU5sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXRZWGhFYVhOMFlXNWpaVHNLSUNBZ0lIMEtJQ0FnSUhObGRFMWhlRVJwYzNSaGJtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdWJXRjRSR2x6ZEdGdVkyVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJHbHlaV04wYVc5dVlXeERiMjVsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVkyOXVaVWx1Ym1WeVFXNW5iR1VnUFNCbExDQjBhR2x6TG5CaGJtNWxjaTVqYjI1bFQzVjBaWEpCYm1kc1pTQTlJSFFzSUhSb2FYTXVjR0Z1Ym1WeUxtTnZibVZQZFhSbGNrZGhhVzRnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1N3Z2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXdJQ1ltSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVpHVmpiMjF3YjNObEtFdHVMQ0JVZFN3Z1FYZ3BMQ0JSYmk1elpYUW9NQ3dnTUN3Z01Ta3VZWEJ3YkhsUmRXRjBaWEp1YVc5dUtGUjFLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHRnVibVZ5T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbkJ2YzJsMGFXOXVXQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlNBcklIUm9hWE11YkdsemRHVnVaWEl1ZEdsdFpVUmxiSFJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YzJsMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaExiaTU0TENCdUtTd2dkQzV3YjNOcGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9TMjR1ZVN3Z2Jpa3NJSFF1Y0c5emFYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRXR1TG5vc0lHNHBMQ0IwTG05eWFXVnVkR0YwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoUmJpNTRMQ0J1S1N3Z2RDNXZjbWxsYm5SaGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9VVzR1ZVN3Z2Jpa3NJSFF1YjNKcFpXNTBZWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0ZGdUxub3NJRzRwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG5ObGRGQnZjMmwwYVc5dUtFdHVMbmdzSUV0dUxua3NJRXR1TG5vcExDQjBMbk5sZEU5eWFXVnVkR0YwYVc5dUtGRnVMbmdzSUZGdUxua3NJRkZ1TG5vcE93b2dJQ0FnZlFwOUxDQkJkU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXlNRFE0S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUZ1WVd4NWMyVnlJRDBnWlM1amIyNTBaWGgwTG1OeVpXRjBaVUZ1WVd4NWMyVnlLQ2tzSUhSb2FYTXVZVzVoYkhselpYSXVabVowVTJsNlpTQTlJSFFzSUhSb2FYTXVaR0YwWVNBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0hSb2FYTXVZVzVoYkhselpYSXVabkpsY1hWbGJtTjVRbWx1UTI5MWJuUXBMQ0JsTG1kbGRFOTFkSEIxZENncExtTnZibTVsWTNRb2RHaHBjeTVoYm1Gc2VYTmxjaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ1WVd4NWMyVnlMbWRsZEVKNWRHVkdjbVZ4ZFdWdVkzbEVZWFJoS0hSb2FYTXVaR0YwWVNrc0lIUm9hWE11WkdGMFlUc0tJQ0FnSUgwS0lDQWdJR2RsZEVGMlpYSmhaMlZHY21WeGRXVnVZM2tvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBd0xDQjBJRDBnZEdocGN5NW5aWFJHY21WeGRXVnVZM2xFWVhSaEtDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJSFF1YkdWdVozUm9PeUJ1S3lzcFpTQXJQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDOGdkQzVzWlc1bmRHZzdDaUFnSUNCOUNuMHNJRUpqSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrYVc1bklEMGdaU3dnZEdocGN5NTJZV3gxWlZOcGVtVWdQU0J1T3dvZ0lDQWdJQ0FnSUd4bGRDQnBMQ0J5TENCaE93b2dJQ0FnSUNBZ0lITjNhWFJqYUNoMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljWFZoZEdWeWJtbHZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJ4bGNuQXNJSElnUFNCMGFHbHpMbDl6YkdWeWNFRmtaR2wwYVhabExDQmhJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVkYxWVhSbGNtNXBiMjRzSUhSb2FYTXVZblZtWm1WeUlEMGdibVYzSUVac2IyRjBOalJCY25KaGVTaHVJQ29nTmlrc0lIUm9hWE11WDNkdmNtdEpibVJsZUNBOUlEVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWMzUnlhVzVuSWpvS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVltOXZiQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0J5SUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0JoSUQwZ2RHaHBjeTVmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU5MGFHVnlMQ0IwYUdsekxtSjFabVpsY2lBOUlHNWxkeUJCY25KaGVTaHVJQ29nTlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQjBhR2x6TGw5c1pYSndMQ0J5SUQwZ2RHaHBjeTVmYkdWeWNFRmtaR2wwYVhabExDQmhJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTUxYldWeWFXTXNJSFJvYVhNdVluVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME5qUkJjbkpoZVNodUlDb2dOU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJpQTlJR2tzSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJrRmtaR2wwYVhabElEMGdjaXdnZEdocGN5NWZjMlYwU1dSbGJuUnBkSGtnUFNCaExDQjBhR2x6TGw5dmNtbG5TVzVrWlhnZ1BTQXpMQ0IwYUdsekxsOWhaR1JKYm1SbGVDQTlJRFFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNQ3dnZEdocGN5NTFjMlZEYjNWdWRDQTlJREFzSUhSb2FYTXVjbVZtWlhKbGJtTmxRMjkxYm5RZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWVdOamRXMTFiR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSjFabVpsY2l3Z2FTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnlJRDBnWlNBcUlHa2dLeUJwTENCaElEMGdkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwT3dvZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnSVQwOUlHazdJQ3NyYnlsdVczSWdLeUJ2WFNBOUlHNWJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0IwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdLejBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBJQzhnWVRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmJXbDRRblZtWm1WeVVtVm5hVzl1S0c0c0lISXNJREFzSUc4c0lHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhRZ1BTQmhPd29nSUNBZ2ZRb2dJQ0FnWVdOamRXMTFiR0YwWlVGa1pHbDBhWFpsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW5WbVptVnlMQ0J1SUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUdrZ1BTQnVJQ29nZEdocGN5NWZZV1JrU1c1a1pYZzdDaUFnSUNBZ0lDQWdkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwUVdSa2FYUnBkbVVnUFQwOUlEQWdKaVlnZEdocGN5NWZjMlYwU1dSbGJuUnBkSGtvS1N3Z2RHaHBjeTVmYldsNFFuVm1abVZ5VW1WbmFXOXVRV1JrYVhScGRtVW9kQ3dnYVN3Z01Dd2daU3dnYmlrc0lIUm9hWE11WTNWdGRXeGhkR2wyWlZkbGFXZG9kRUZrWkdsMGFYWmxJQ3M5SUdVN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5aaGJIVmxVMmw2WlN3Z2JpQTlJSFJvYVhNdVluVm1abVZ5TENCcElEMGdaU0FxSUhRZ0t5QjBMQ0J5SUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBMQ0JoSUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBRV1JrYVhScGRtVXNJRzhnUFNCMGFHbHpMbUpwYm1ScGJtYzdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNQ3dnY2lBOElERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCMElDb2dkR2hwY3k1ZmIzSnBaMGx1WkdWNE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXRhWGhDZFdabVpYSlNaV2RwYjI0b2Jpd2dhU3dnWXl3Z01TQXRJSElzSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmhJRDRnTUNBbUppQjBhR2x6TGw5dGFYaENkV1ptWlhKU1pXZHBiMjVCWkdScGRHbDJaU2h1TENCcExDQjBhR2x6TGw5aFpHUkpibVJsZUNBcUlIUXNJREVzSUhRcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJSFFzSUd3Z1BTQjBJQ3NnZERzZ1l5QWhQVDBnYkRzZ0t5dGpLV2xtSUNodVcyTmRJQ0U5UFNCdVcyTWdLeUIwWFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2TG5ObGRGWmhiSFZsS0c0c0lHa3BPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCellYWmxUM0pwWjJsdVlXeFRkR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WW1sdVpHbHVaeXdnZENBOUlIUm9hWE11WW5WbVptVnlMQ0J1SUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUdrZ1BTQnVJQ29nZEdocGN5NWZiM0pwWjBsdVpHVjRPd29nSUNBZ0lDQWdJR1V1WjJWMFZtRnNkV1VvZEN3Z2FTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnYml3Z1lTQTlJR2s3SUhJZ0lUMDlJR0U3SUNzcmNpbDBXM0pkSUQwZ2RGdHBJQ3NnY2lBbElHNWRPd29nSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRWxrWlc1MGFYUjVLQ2tzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNRHNLSUNBZ0lIMEtJQ0FnSUhKbGMzUnZjbVZQY21sbmFXNWhiRk4wWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1MllXeDFaVk5wZW1VZ0tpQXpPd29nSUNBZ0lDQWdJSFJvYVhNdVltbHVaR2x1Wnk1elpYUldZV3gxWlNoMGFHbHpMbUoxWm1abGNpd2daU2s3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVVNTFiV1Z5YVdNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TGw5aFpHUkpibVJsZUNBcUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCMElEMGdaU0FySUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SUdVN0lHNGdQQ0IwT3lCdUt5c3BkR2hwY3k1aWRXWm1aWEpiYmwwZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFRmtaR2wwYVhabFNXUmxiblJwZEhsUmRXRjBaWEp1YVc5dUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRUZrWkdsMGFYWmxTV1JsYm5ScGRIbE9kVzFsY21saktDa3NJSFJvYVhNdVluVm1abVZ5VzNSb2FYTXVYMkZrWkVsdVpHVjRJQ29nZEdocGN5NTJZV3gxWlZOcGVtVWdLeUF6WFNBOUlERTdDaUFnSUNCOUNpQWdJQ0JmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU5MGFHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZiM0pwWjBsdVpHVjRJQ29nZEdocGN5NTJZV3gxWlZOcGVtVXNJSFFnUFNCMGFHbHpMbDloWkdSSmJtUmxlQ0FxSUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0IwYUdsekxuWmhiSFZsVTJsNlpUc2diaXNyS1hSb2FYTXVZblZtWm1WeVczUWdLeUJ1WFNBOUlIUm9hWE11WW5WbVptVnlXMlVnS3lCdVhUc0tJQ0FnSUgwS0lDQWdJRjl6Wld4bFkzUW9aU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hwSUQ0OUlDNDFLU0JtYjNJb2JHVjBJR0VnUFNBd095QmhJQ0U5UFNCeU95QXJLMkVwWlZ0MElDc2dZVjBnUFNCbFcyNGdLeUJoWFRzS0lDQWdJSDBLSUNBZ0lGOXpiR1Z5Y0NobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdWWFF1YzJ4bGNuQkdiR0YwS0dVc0lIUXNJR1VzSUhRc0lHVXNJRzRzSUdrcE93b2dJQ0FnZlFvZ0lDQWdYM05zWlhKd1FXUmthWFJwZG1Vb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NWZkMjl5YTBsdVpHVjRJQ29nY2pzS0lDQWdJQ0FnSUNCVmRDNXRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpSbXhoZENobExDQmhMQ0JsTENCMExDQmxMQ0J1S1N3Z1ZYUXVjMnhsY25CR2JHRjBLR1VzSUhRc0lHVXNJSFFzSUdVc0lHRXNJR2twT3dvZ0lDQWdmUW9nSUNBZ1gyeGxjbkFvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJR3hsZENCaElEMGdNU0F0SUdrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNRHNnYnlBaFBUMGdjanNnS3l0dktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwSUNzZ2J6c0tJQ0FnSUNBZ0lDQWdJQ0FnWlZ0alhTQTlJR1ZiWTEwZ0tpQmhJQ3NnWlZ0dUlDc2diMTBnS2lCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlzWlhKd1FXUmthWFJwZG1Vb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnSVQwOUlISTdJQ3NyWVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdkQ0FySUdFN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiYjEwZ1BTQmxXMjlkSUNzZ1pWdHVJQ3NnWVYwZ0tpQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU3dnUzJNZ1BTQWlYRnhiWEZ4ZFhGd3VPbHhjTHlJc0lGSjRJRDBnYm1WM0lGSmxaMFY0Y0NnaVd5SWdLeUJMWXlBcklDSmRJaXdnSW1jaUtTd2dVV01nUFNBaVcxNGlJQ3NnUzJNZ0t5QWlYU0lzSUVONElEMGdJbHRlSWlBcklFdGpMbkpsY0d4aFkyVW9JbHhjTGlJc0lDSWlLU0FySUNKZElpd2dVSGdnUFNBdktDZy9PbGRESzF0Y0x6cGRLU29wTHk1emIzVnlZMlV1Y21Wd2JHRmpaU2dpVjBNaUxDQlJZeWtzSUV4NElEMGdMeWhYUTA5RUt5ay9MeTV6YjNWeVkyVXVjbVZ3YkdGalpTZ2lWME5QUkNJc0lFTjRLU3dnU1hnZ1BTQXZLRDg2WEM0b1YwTXJLU2cvT2x4YktDNHJLVnhkS1Q4cFB5OHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERJaXdnVVdNcExDQlZlQ0E5SUM5Y0xpaFhReXNwS0Q4NlhGc29MaXNwWEYwcFB5OHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERJaXdnVVdNcExDQkVlQ0E5SUc1bGR5QlNaV2RGZUhBb0lsNGlJQ3NnVUhnZ0t5Qk1lQ0FySUVsNElDc2dWWGdnS3lBaUpDSXBMQ0JPZUNBOUlGc0tJQ0FnSUNKdFlYUmxjbWxoYkNJc0NpQWdJQ0FpYldGMFpYSnBZV3h6SWl3S0lDQWdJQ0ppYjI1bGN5SXNDaUFnSUNBaWJXRndJZ3BkTENCNll5QTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JpQjhmQ0JMWlM1d1lYSnpaVlJ5WVdOclRtRnRaU2gwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbDkwWVhKblpYUkhjbTkxY0NBOUlHVXNJSFJvYVhNdVgySnBibVJwYm1keklEMGdaUzV6ZFdKelkzSnBZbVZmS0hRc0lHa3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZtRnNkV1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltbHVaQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWZkR0Z5WjJWMFIzSnZkWEF1YmtOaFkyaGxaRTlpYW1WamRITmZMQ0JwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM05iYmwwN0NpQWdJQ0FnSUNBZ2FTQWhQVDBnZG05cFpDQXdJQ1ltSUdrdVoyVjBWbUZzZFdVb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUldZV3gxWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxsOWlhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0IwYUdsekxsOTBZWEpuWlhSSGNtOTFjQzV1UTJGamFHVmtUMkpxWldOMGMxOHNJSElnUFNCdUxteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLVzViYVYwdWMyVjBWbUZzZFdVb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCaWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZZbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnZEdocGN5NWZkR0Z5WjJWMFIzSnZkWEF1YmtOaFkyaGxaRTlpYW1WamRITmZMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdJVDA5SUc0N0lDc3JkQ2xsVzNSZExtSnBibVFvS1RzS0lDQWdJSDBLSUNBZ0lIVnVZbWx1WkNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlIUm9hWE11WDNSaGNtZGxkRWR5YjNWd0xtNURZV05vWldSUFltcGxZM1J6WHl3Z2JpQTlJR1V1YkdWdVozUm9PeUIwSUNFOVBTQnVPeUFySzNRcFpWdDBYUzUxYm1KcGJtUW9LVHNLSUNBZ0lIMEtmU3dnUzJVZ1BTQmpiR0Z6Y3lCek1TQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGRHZ2dQU0IwTENCMGFHbHpMbkJoY25ObFpGQmhkR2dnUFNCdUlIeDhJSE14TG5CaGNuTmxWSEpoWTJ0T1lXMWxLSFFwTENCMGFHbHpMbTV2WkdVZ1BTQnpNUzVtYVc1a1RtOWtaU2hsTENCMGFHbHpMbkJoY25ObFpGQmhkR2d1Ym05a1pVNWhiV1VwTENCMGFHbHpMbkp2YjNST2IyUmxJRDBnWlN3Z2RHaHBjeTVuWlhSV1lXeDFaU0E5SUhSb2FYTXVYMmRsZEZaaGJIVmxYM1Z1WW05MWJtUXNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5elpYUldZV3gxWlY5MWJtSnZkVzVrT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdOeVpXRjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnSmlZZ1pTNXBjMEZ1YVcxaGRHbHZiazlpYW1WamRFZHliM1Z3SUQ4Z2JtVjNJSE14TGtOdmJYQnZjMmwwWlNobExDQjBMQ0J1S1NBNklHNWxkeUJ6TVNobExDQjBMQ0J1S1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCellXNXBkR2w2WlU1dlpHVk9ZVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXlaWEJzWVdObEtDOWNjeTluTENBaVh5SXBMbkpsY0d4aFkyVW9VbmdzSUNJaUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QndZWEp6WlZSeVlXTnJUbUZ0WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQkVlQzVsZUdWaktHVXBPd29nSUNBZ0lDQWdJR2xtSUNoMElEMDlQU0J1ZFd4c0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVibTkwSUhCaGNuTmxJSFJ5WVdOclRtRnRaVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdWIyUmxUbUZ0WlRvZ2RGc3lYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wVG1GdFpUb2dkRnN6WFN3S0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMFNXNWtaWGc2SUhSYk5GMHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQmxjblI1VG1GdFpUb2dkRnMxWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRIbEpibVJsZURvZ2RGczJYUW9nSUNBZ0lDQWdJSDBzSUdrZ1BTQnVMbTV2WkdWT1lXMWxJQ1ltSUc0dWJtOWtaVTVoYldVdWJHRnpkRWx1WkdWNFQyWW9JaTRpS1RzS0lDQWdJQ0FnSUNCcFppQW9hU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHa2dJVDA5SUMweEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYmk1dWIyUmxUbUZ0WlM1emRXSnpkSEpwYm1jb2FTQXJJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQk9lQzVwYm1SbGVFOW1LSElwSUNFOVBTQXRNU0FtSmlBb2JpNXViMlJsVG1GdFpTQTlJRzR1Ym05a1pVNWhiV1V1YzNWaWMzUnlhVzVuS0RBc0lHa3BMQ0J1TG05aWFtVmpkRTVoYldVZ1BTQnlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHNHVjSEp2Y0dWeWRIbE9ZVzFsSUQwOVBTQnVkV3hzSUh4OElHNHVjSEp2Y0dWeWRIbE9ZVzFsTG14bGJtZDBhQ0E5UFQwZ01Da2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlFjbTl3WlhKMGVVSnBibVJwYm1jNklHTmhiaUJ1YjNRZ2NHRnljMlVnY0hKdmNHVnlkSGxPWVcxbElHWnliMjBnZEhKaFkydE9ZVzFsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzQ3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm1sdVpFNXZaR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR2xtSUNoMElEMDlQU0IyYjJsa0lEQWdmSHdnZENBOVBUMGdJaUlnZkh3Z2RDQTlQVDBnSWk0aUlIeDhJSFFnUFQwOUlDMHhJSHg4SUhRZ1BUMDlJR1V1Ym1GdFpTQjhmQ0IwSUQwOVBTQmxMblYxYVdRcElISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG5OclpXeGxkRzl1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzV6YTJWc1pYUnZiaTVuWlhSQ2IyNWxRbmxPWVcxbEtIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1V1WTJocGJHUnlaVzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQm1kVzVqZEdsdmJpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd095QmhJRHdnY2k1c1pXNW5kR2c3SUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0J5VzJGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodkxtNWhiV1VnUFQwOUlIUWdmSHdnYnk1MWRXbGtJRDA5UFNCMEtTQnlaWFIxY200Z2J6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzRvYnk1amFHbHNaSEpsYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dNcElISmxkSFZ5YmlCak93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0lHa2dQU0J1S0dVdVkyaHBiR1J5Wlc0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTa2djbVYwZFhKdUlHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgzVnVZWFpoYVd4aFlteGxLQ2tnZTMwS0lDQWdJRjl6WlhSV1lXeDFaVjkxYm1GMllXbHNZV0pzWlNncElIdDlDaUFnSUNCZloyVjBWbUZzZFdWZlpHbHlaV04wS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JsVzNSZElEMGdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUmJkR2hwY3k1d2NtOXdaWEowZVU1aGJXVmRPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDJGeWNtRjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2c3SUdrZ0lUMDlJSEk3SUNzcmFTbGxXM1FySzEwZ1BTQnVXMmxkT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdaVnQwWFNBOUlIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVnQwYUdsekxuQnliM0JsY25SNVNXNWtaWGhkT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgzUnZRWEp5WVhrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVTNTBiMEZ5Y21GNUtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyUnBjbVZqZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBZWEpuWlhSUFltcGxZM1JiZEdocGN5NXdjbTl3WlhKMGVVNWhiV1ZkSUQwZ1pWdDBYVHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5a2FYSmxZM1JmYzJWMFRtVmxaSE5WY0dSaGRHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMFczUm9hWE11Y0hKdmNHVnlkSGxPWVcxbFhTQTlJR1ZiZEYwc0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZaR2x5WldOMFgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wVzNSb2FYTXVjSEp2Y0dWeWRIbE9ZVzFsWFNBOUlHVmJkRjBzSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwYmx0cFhTQTlJR1ZiZENzclhUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVWOXpaWFJPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwYmx0cFhTQTlJR1ZiZENzclhUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1c1YmFWMGdQU0JsVzNRcksxMDdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXViV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVXM1JvYVhNdWNISnZjR1Z5ZEhsSmJtUmxlRjBnUFNCbFczUmRPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNVczUm9hWE11Y0hKdmNHVnlkSGxKYm1SbGVGMGdQU0JsVzNSZExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhsYmRHaHBjeTV3Y205d1pYSjBlVWx1WkdWNFhTQTlJR1ZiZEYwc0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMExtMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjltY205dFFYSnlZWGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVM1bWNtOXRRWEp5WVhrb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNVgzTmxkRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrdVpuSnZiVUZ5Y21GNUtHVXNJSFFwTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyWnliMjFCY25KaGVWOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa3Vabkp2YlVGeWNtRjVLR1VzSUhRcExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JmWjJWMFZtRnNkV1ZmZFc1aWIzVnVaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1aWFXNWtLQ2tzSUhSb2FYTXVaMlYwVm1Gc2RXVW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZkVzVpYjNWdVpDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYVc1a0tDa3NJSFJvYVhNdWMyVjBWbUZzZFdVb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCaWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXViMlJsTENCMElEMGdkR2hwY3k1d1lYSnpaV1JRWVhSb0xDQnVJRDBnZEM1dlltcGxZM1JPWVcxbExDQnBJRDBnZEM1d2NtOXdaWEowZVU1aGJXVXNJSElnUFNCMExuQnliM0JsY25SNVNXNWtaWGc3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdmSHdnS0dVZ1BTQnpNUzVtYVc1a1RtOWtaU2gwYUdsekxuSnZiM1JPYjJSbExDQjBMbTV2WkdWT1lXMWxLU3dnZEdocGN5NXViMlJsSUQwZ1pTa3NJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5blpYUldZV3gxWlY5MWJtRjJZV2xzWVdKc1pTd2dkR2hwY3k1elpYUldZV3gxWlNBOUlIUm9hWE11WDNObGRGWmhiSFZsWDNWdVlYWmhhV3hoWW14bExDQWhaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dUbThnZEdGeVoyVjBJRzV2WkdVZ1ptOTFibVFnWm05eUlIUnlZV05yT2lBaUlDc2dkR2hwY3k1d1lYUm9JQ3NnSWk0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhRdWIySnFaV04wU1c1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2h1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbTFoZEdWeWFXRnNjeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG0xaGRHVnlhV0ZzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUcxaGRHVnlhV0ZzSUdGeklHNXZaR1VnWkc5bGN5QnViM1FnYUdGMlpTQmhJRzFoZEdWeWFXRnNMaUlzSUhSb2FYTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haUzV0WVhSbGNtbGhiQzV0WVhSbGNtbGhiSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNGdibTkwSUdKcGJtUWdkRzhnYldGMFpYSnBZV3d1YldGMFpYSnBZV3h6SUdGeklHNXZaR1V1YldGMFpYSnBZV3dnWkc5bGN5QnViM1FnYUdGMlpTQmhJRzFoZEdWeWFXRnNjeUJoY25KaGVTNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ1pTNXRZWFJsY21saGJDNXRZWFJsY21saGJITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKaWIyNWxjeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG5OclpXeGxkRzl1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUdKdmJtVnpJR0Z6SUc1dlpHVWdaRzlsY3lCdWIzUWdhR0YyWlNCaElITnJaV3hsZEc5dUxpSXNJSFJvYVhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VnUFNCbExuTnJaV3hsZEc5dUxtSnZibVZ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREE3SUdnZ1BDQmxMbXhsYm1kMGFEc2dhQ3NyS1dsbUlDaGxXMmhkTG01aGJXVWdQVDA5SUd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltMWhjQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0p0WVhBaUlHbHVJR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlHVXViV0Z3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG0xaGRHVnlhV0ZzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUcxaGRHVnlhV0ZzSUdGeklHNXZaR1VnWkc5bGN5QnViM1FnYUdGMlpTQmhJRzFoZEdWeWFXRnNMaUlzSUhSb2FYTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haUzV0WVhSbGNtbGhiQzV0WVhBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQkRZVzRnYm05MElHSnBibVFnZEc4Z2JXRjBaWEpwWVd3dWJXRndJR0Z6SUc1dlpHVXViV0YwWlhKcFlXd2daRzlsY3lCdWIzUWdhR0YyWlNCaElHMWhjQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEMGdaUzV0WVhSbGNtbGhiQzV0WVhBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsVzI1ZElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc0Z2JtOTBJR0pwYm1RZ2RHOGdiMkpxWldOMFRtRnRaU0J2WmlCdWIyUmxJSFZ1WkdWbWFXNWxaQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEMGdaVnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aVnRzWFNBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCVWNubHBibWNnZEc4Z1ltbHVaQ0IwYnlCdlltcGxZM1JKYm1SbGVDQnZaaUJ2WW1wbFkzUk9ZVzFsTENCaWRYUWdhWE1nZFc1a1pXWnBibVZrTGlJc0lIUm9hWE1zSUdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0JsVzJ4ZE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnWlZ0cFhUc0tJQ0FnSUNBZ0lDQnBaaUFvWVNBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEM1dWIyUmxUbUZ0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJVY25scGJtY2dkRzhnZFhCa1lYUmxJSEJ5YjNCbGNuUjVJR1p2Y2lCMGNtRmphem9nSWlBcklHd2dLeUFpTGlJZ0t5QnBJQ3NnSWlCaWRYUWdhWFFnZDJGemJpZDBJR1p2ZFc1a0xpSXNJR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RHaHBjeTVXWlhKemFXOXVhVzVuTGs1dmJtVTdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUWdQU0JsTENCbExtNWxaV1J6VlhCa1lYUmxJQ0U5UFNCMmIybGtJREFnUHlCdklEMGdkR2hwY3k1V1pYSnphVzl1YVc1bkxrNWxaV1J6VlhCa1lYUmxJRG9nWlM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOGdQU0IwYUdsekxsWmxjbk5wYjI1cGJtY3VUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCMGFHbHpMa0pwYm1ScGJtZFVlWEJsTGtScGNtVmpkRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQWliVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG1kbGIyMWxkSEo1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc0Z2JtOTBJR0pwYm1RZ2RHOGdiVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUdKbFkyRjFjMlVnYm05a1pTQmtiMlZ6SUc1dmRDQm9ZWFpsSUdFZ1oyVnZiV1YwY25rdUlpd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dRMkZ1SUc1dmRDQmlhVzVrSUhSdklHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUJpWldOaGRYTmxJRzV2WkdVZ1pHOWxjeUJ1YjNRZ2FHRjJaU0JoSUdkbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeTRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVWdHlYU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHlJRDBnWlM1dGIzSndhRlJoY21kbGRFUnBZM1JwYjI1aGNubGJjbDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdNZ1BTQjBhR2x6TGtKcGJtUnBibWRVZVhCbExrRnljbUY1Uld4bGJXVnVkQ3dnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNUlEMGdZU3dnZEdocGN5NXdjbTl3WlhKMGVVbHVaR1Y0SUQwZ2Nqc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1lTNW1jbTl0UVhKeVlYa2dJVDA5SUhadmFXUWdNQ0FtSmlCaExuUnZRWEp5WVhrZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqSUQwZ2RHaHBjeTVDYVc1a2FXNW5WSGx3WlM1SVlYTkdjbTl0Vkc5QmNuSmhlU3dnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNUlEMGdZU2tnT2lCQmNuSmhlUzVwYzBGeWNtRjVLR0VwSUQ4Z0tHTWdQU0IwYUdsekxrSnBibVJwYm1kVWVYQmxMa1Z1ZEdseVpVRnljbUY1TENCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa2dQU0JoS1NBNklIUm9hWE11Y0hKdmNHVnlkSGxPWVcxbElEMGdhVHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbElEMGdkR2hwY3k1SFpYUjBaWEpDZVVKcGJtUnBibWRVZVhCbFcyTmRMQ0IwYUdsekxuTmxkRlpoYkhWbElEMGdkR2hwY3k1VFpYUjBaWEpDZVVKcGJtUnBibWRVZVhCbFFXNWtWbVZ5YzJsdmJtbHVaMXRqWFZ0dlhUc0tJQ0FnSUgwS0lDQWdJSFZ1WW1sdVpDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNXZaR1VnUFNCdWRXeHNMQ0IwYUdsekxtZGxkRlpoYkhWbElEMGdkR2hwY3k1ZloyVjBWbUZzZFdWZmRXNWliM1Z1WkN3Z2RHaHBjeTV6WlhSV1lXeDFaU0E5SUhSb2FYTXVYM05sZEZaaGJIVmxYM1Z1WW05MWJtUTdDaUFnSUNCOUNuMDdDa3RsTGtOdmJYQnZjMmwwWlNBOUlIcGpPd3BMWlM1d2NtOTBiM1I1Y0dVdVFtbHVaR2x1WjFSNWNHVWdQU0I3Q2lBZ0lDQkVhWEpsWTNRNklEQXNDaUFnSUNCRmJuUnBjbVZCY25KaGVUb2dNU3dLSUNBZ0lFRnljbUY1Uld4bGJXVnVkRG9nTWl3S0lDQWdJRWhoYzBaeWIyMVViMEZ5Y21GNU9pQXpDbjA3Q2t0bExuQnliM1J2ZEhsd1pTNVdaWEp6YVc5dWFXNW5JRDBnZXdvZ0lDQWdUbTl1WlRvZ01Dd0tJQ0FnSUU1bFpXUnpWWEJrWVhSbE9pQXhMQW9nSUNBZ1RXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaVG9nTWdwOU93cExaUzV3Y205MGIzUjVjR1V1UjJWMGRHVnlRbmxDYVc1a2FXNW5WSGx3WlNBOUlGc0tJQ0FnSUV0bExuQnliM1J2ZEhsd1pTNWZaMlYwVm1Gc2RXVmZaR2x5WldOMExBb2dJQ0FnUzJVdWNISnZkRzkwZVhCbExsOW5aWFJXWVd4MVpWOWhjbkpoZVN3S0lDQWdJRXRsTG5CeWIzUnZkSGx3WlM1ZloyVjBWbUZzZFdWZllYSnlZWGxGYkdWdFpXNTBMQW9nSUNBZ1MyVXVjSEp2ZEc5MGVYQmxMbDluWlhSV1lXeDFaVjkwYjBGeWNtRjVDbDA3Q2t0bExuQnliM1J2ZEhsd1pTNVRaWFIwWlhKQ2VVSnBibVJwYm1kVWVYQmxRVzVrVm1WeWMybHZibWx1WnlBOUlGc0tJQ0FnSUZzS0lDQWdJQ0FnSUNCTFpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMlJwY21WamRDd0tJQ0FnSUNBZ0lDQkxaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJScGNtVmpkRjl6WlhST1pXVmtjMVZ3WkdGMFpTd0tJQ0FnSUNBZ0lDQkxaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJScGNtVmpkRjl6WlhSTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxDaUFnSUNCZExBb2dJQ0FnV3dvZ0lDQWdJQ0FnSUV0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZZWEp5WVhrc0NpQWdJQ0FnSUNBZ1MyVXVjSEp2ZEc5MGVYQmxMbDl6WlhSV1lXeDFaVjloY25KaGVWOXpaWFJPWldWa2MxVndaR0YwWlN3S0lDQWdJQ0FnSUNCTFpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVS0lDQWdJRjBzQ2lBZ0lDQmJDaUFnSUNBZ0lDQWdTMlV1Y0hKdmRHOTBlWEJsTGw5elpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUXNDaUFnSUNBZ0lDQWdTMlV1Y0hKdmRHOTBlWEJsTGw5elpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUmZjMlYwVG1WbFpITlZjR1JoZEdVc0NpQWdJQ0FnSUNBZ1MyVXVjSEp2ZEc5MGVYQmxMbDl6WlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5SZmMyVjBUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlFvZ0lDQWdYU3dLSUNBZ0lGc0tJQ0FnSUNBZ0lDQkxaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJaeWIyMUJjbkpoZVN3S0lDQWdJQ0FnSUNCTFpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMlp5YjIxQmNuSmhlVjl6WlhST1pXVmtjMVZ3WkdGMFpTd0tJQ0FnSUNBZ0lDQkxaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJaeWIyMUJjbkpoZVY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsQ2lBZ0lDQmRDbDA3Q25aaGNpQlNkU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBjMEZ1YVcxaGRHbHZiazlpYW1WamRFZHliM1Z3SUQwZ0lUQXNJSFJvYVhNdWRYVnBaQ0E5SUd0MEtDa3NJSFJvYVhNdVgyOWlhbVZqZEhNZ1BTQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaGhjbWQxYldWdWRITXBMQ0IwYUdsekxtNURZV05vWldSUFltcGxZM1J6WHlBOUlEQTdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjdmVHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXBibVJwWTJWelFubFZWVWxFSUQwZ1pUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdZWEpuZFcxbGJuUnpMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1dWYllYSm5kVzFsYm5SelcyNWRMblYxYVdSZElEMGdianNLSUNBZ0lDQWdJQ0IwYUdsekxsOXdZWFJvY3lBOUlGdGRMQ0IwYUdsekxsOXdZWEp6WldSUVlYUm9jeUE5SUZ0ZExDQjBhR2x6TGw5aWFXNWthVzVuY3lBOUlGdGRMQ0IwYUdsekxsOWlhVzVrYVc1bmMwbHVaR2xqWlhOQ2VWQmhkR2dnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE03Q2lBZ0lDQWdJQ0FnZEdocGN5NXpkR0YwY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElIUnZkR0ZzSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVmYjJKcVpXTjBjeTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwSUdsdVZYTmxJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYjNSaGJDQXRJSFF1YmtOaFkyaGxaRTlpYW1WamRITmZPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JuWlhRZ1ltbHVaR2x1WjNOUVpYSlBZbXBsWTNRZ0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUXVYMkpwYm1ScGJtZHpMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDl2WW1wbFkzUnpMQ0IwSUQwZ2RHaHBjeTVmYVc1a2FXTmxjMEo1VlZWSlJDd2diaUE5SUhSb2FYTXVYM0JoZEdoekxDQnBJRDBnZEdocGN5NWZjR0Z5YzJWa1VHRjBhSE1zSUhJZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z1lTQTlJSEl1YkdWdVozUm9MQ0J2TENCaklEMGdaUzVzWlc1bmRHZ3NJR3dnUFNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHZ2dQU0F3TENCMUlEMGdZWEpuZFcxbGJuUnpMbXhsYm1kMGFEc2dhQ0FoUFQwZ2RUc2dLeXRvS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQmhjbWQxYldWdWRITmJhRjBzSUdZZ1BTQmtMblYxYVdRc0lHMGdQU0IwVzJaZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JTQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0SUQwZ1l5c3JMQ0IwVzJaZElEMGdiU3dnWlM1d2RYTm9LR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Dd2daeUE5SUdFN0lGOGdJVDA5SUdjN0lDc3JYeWx5VzE5ZExuQjFjMmdvYm1WM0lFdGxLR1FzSUc1YlgxMHNJR2xiWDEwcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNodElEd2diQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHVmJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJQzB0YkN3Z1p5QTlJR1ZiWDEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFcyY3VkWFZwWkYwZ1BTQnRMQ0JsVzIxZElEMGdaeXdnZEZ0bVhTQTlJRjhzSUdWYlgxMGdQU0JrT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Dd2dkaUE5SUdFN0lIQWdJVDA5SUhZN0lDc3JjQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCeVczQmRMQ0I1SUQwZ2VGdGZYU3dnWWlBOUlIaGJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VGdHRYU0E5SUhrc0lHSWdQVDA5SUhadmFXUWdNQ0FtSmlBb1lpQTlJRzVsZHlCTFpTaGtMQ0J1VzNCZExDQnBXM0JkS1Nrc0lIaGJYMTBnUFNCaU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdaVnR0WFNBaFBUMGdieUFtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUJibWx0WVhScGIyNVBZbXBsWTNSSGNtOTFjRG9nUkdsbVptVnlaVzUwSUc5aWFtVmpkSE1nZDJsMGFDQjBhR1VnYzJGdFpTQlZWVWxFSUdSbGRHVmpkR1ZrTGlCRGJHVmhiaUIwYUdVZ1kyRmphR1Z6SUc5eUlISmxZM0psWVhSbElIbHZkWElnYVc1bWNtRnpkSEoxWTNSMWNtVWdkMmhsYmlCeVpXeHZZV1JwYm1jZ2MyTmxibVZ6TGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG01RFlXTm9aV1JQWW1wbFkzUnpYeUE5SUd3N0NpQWdJQ0I5Q2lBZ0lDQnlaVzF2ZG1Vb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TGw5dlltcGxZM1J6TENCMElEMGdkR2hwY3k1ZmFXNWthV05sYzBKNVZWVkpSQ3dnYmlBOUlIUm9hWE11WDJKcGJtUnBibWR6TENCcElEMGdiaTVzWlc1bmRHZ3NJSElnUFNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3TENCdklEMGdZWEpuZFcxbGJuUnpMbXhsYm1kMGFEc2dZU0FoUFQwZ2J6c2dLeXRoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmhjbWQxYldWdWRITmJZVjBzSUd3Z1BTQmpMblYxYVdRc0lHZ2dQU0IwVzJ4ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FDQWhQVDBnZG05cFpDQXdJQ1ltSUdnZ1BqMGdjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0J5S3lzc0lHUWdQU0JsVzNWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGdGtMblYxYVdSZElEMGdhQ3dnWlZ0b1hTQTlJR1FzSUhSYmJGMGdQU0IxTENCbFczVmRJRDBnWXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQXNJRzBnUFNCcE95Qm1JQ0U5UFNCdE95QXJLMllwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2JsdG1YU3dnWnlBOUlGOWJkVjBzSUhBZ1BTQmZXMmhkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGOWJhRjBnUFNCbkxDQmZXM1ZkSUQwZ2NEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh5QTlJSEk3Q2lBZ0lDQjlDaUFnSUNCMWJtTmhZMmhsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmYjJKcVpXTjBjeXdnZENBOUlIUm9hWE11WDJsdVpHbGpaWE5DZVZWVlNVUXNJRzRnUFNCMGFHbHpMbDlpYVc1a2FXNW5jeXdnYVNBOUlHNHViR1Z1WjNSb0xDQnlJRDBnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4c0lHRWdQU0JsTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd0xDQmpJRDBnWVhKbmRXMWxiblJ6TG14bGJtZDBhRHNnYnlBaFBUMGdZenNnS3l0dktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JoY21kMWJXVnVkSE5iYjEwc0lHZ2dQU0JzTG5WMWFXUXNJSFVnUFNCMFcyaGRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kU0FoUFQwZ2RtOXBaQ0F3S1NCcFppQW9aR1ZzWlhSbElIUmJhRjBzSUhVZ1BDQnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJQzB0Y2l3Z1ppQTlJR1ZiWkYwc0lHMGdQU0F0TFdFc0lGOGdQU0JsVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGdG1MblYxYVdSZElEMGdkU3dnWlZ0MVhTQTlJR1lzSUhSYlh5NTFkV2xrWFNBOUlHUXNJR1ZiWkYwZ1BTQmZMQ0JsTG5CdmNDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5JRDBnTUN3Z2NDQTlJR2s3SUdjZ0lUMDlJSEE3SUNzclp5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0J1VzJkZExDQjRJRDBnZGx0a1hTd2dlU0E5SUhaYmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGx0MVhTQTlJSGdzSUhaYlpGMGdQU0I1TENCMkxuQnZjQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNBdExXRXNJR1lnUFNCbFcyUmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQ0ErSURBZ0ppWWdLSFJiWmk1MWRXbGtYU0E5SUhVcExDQmxXM1ZkSUQwZ1ppd2daUzV3YjNBb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJREFzSUY4Z1BTQnBPeUJ0SUNFOVBTQmZPeUFySzIwcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdibHR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5XM1ZkSUQwZ1oxdGtYU3dnWnk1d2IzQW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG01RFlXTm9aV1JQWW1wbFkzUnpYeUE5SUhJN0NpQWdJQ0I5Q2lBZ0lDQnpkV0p6WTNKcFltVmZLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJKcGJtUnBibWR6U1c1a2FXTmxjMEo1VUdGMGFDd2dhU0E5SUc1YlpWMHNJSElnUFNCMGFHbHpMbDlpYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjbHRwWFRzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVYM0JoZEdoekxDQnZJRDBnZEdocGN5NWZjR0Z5YzJWa1VHRjBhSE1zSUdNZ1BTQjBhR2x6TGw5dlltcGxZM1J6TENCc0lEMGdZeTVzWlc1bmRHZ3NJR2dnUFNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh5d2dkU0E5SUc1bGR5QkJjbkpoZVNoc0tUc0tJQ0FnSUNBZ0lDQnBJRDBnY2k1c1pXNW5kR2dzSUc1YlpWMGdQU0JwTENCaExuQjFjMmdvWlNrc0lHOHVjSFZ6YUNoMEtTd2djaTV3ZFhOb0tIVXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaQ0E5SUdnc0lHWWdQU0JqTG14bGJtZDBhRHNnWkNBaFBUMGdaanNnS3l0a0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JqVzJSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IxVzJSZElEMGdibVYzSUV0bEtHMHNJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RUc0tJQ0FnSUgwS0lDQWdJSFZ1YzNWaWMyTnlhV0psWHlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aWFXNWthVzVuYzBsdVpHbGpaWE5DZVZCaGRHZ3NJRzRnUFNCMFcyVmRPd29nSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbDl3WVhSb2N5d2djaUE5SUhSb2FYTXVYM0JoY25ObFpGQmhkR2h6TENCaElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHOGdQU0JoTG14bGJtZDBhQ0F0SURFc0lHTWdQU0JoVzI5ZExDQnNJRDBnWlZ0dlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZ0c1hTQTlJRzRzSUdGYmJsMGdQU0JqTENCaExuQnZjQ2dwTENCeVcyNWRJRDBnY2x0dlhTd2djaTV3YjNBb0tTd2dhVnR1WFNBOUlHbGJiMTBzSUdrdWNHOXdLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5TENCV1l5QTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQnVkV3hzTENCcElEMGdkQzVpYkdWdVpFMXZaR1VwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUdWeUlEMGdaU3dnZEdocGN5NWZZMnhwY0NBOUlIUXNJSFJvYVhNdVgyeHZZMkZzVW05dmRDQTlJRzRzSUhSb2FYTXVZbXhsYm1STmIyUmxJRDBnYVRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhRdWRISmhZMnR6TENCaElEMGdjaTVzWlc1bmRHZ3NJRzhnUFNCdVpYY2dRWEp5WVhrb1lTa3NJR01nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WkdsdVoxTjBZWEowT2lCNmFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1a2FXNW5SVzVrT2lCNmFRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTURzZ2JDQWhQVDBnWVRzZ0t5dHNLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCeVcyeGRMbU55WldGMFpVbHVkR1Z5Y0c5c1lXNTBLRzUxYkd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0J2VzJ4ZElEMGdhQ3dnYUM1elpYUjBhVzVuY3lBOUlHTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdVgybHVkR1Z5Y0c5c1lXNTBVMlYwZEdsdVozTWdQU0JqTENCMGFHbHpMbDlwYm5SbGNuQnZiR0Z1ZEhNZ1BTQnZMQ0IwYUdsekxsOXdjbTl3WlhKMGVVSnBibVJwYm1keklEMGdibVYzSUVGeWNtRjVLR0VwTENCMGFHbHpMbDlqWVdOb1pVbHVaR1Y0SUQwZ2JuVnNiQ3dnZEdocGN5NWZZbmxEYkdsd1EyRmphR1ZKYm1SbGVDQTlJRzUxYkd3c0lIUm9hWE11WDNScGJXVlRZMkZzWlVsdWRHVnljRzlzWVc1MElEMGdiblZzYkN3Z2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblFnUFNCdWRXeHNMQ0IwYUdsekxteHZiM0FnUFNCQlppd2dkR2hwY3k1ZmJHOXZjRU52ZFc1MElEMGdMVEVzSUhSb2FYTXVYM04wWVhKMFZHbHRaU0E5SUc1MWJHd3NJSFJvYVhNdWRHbHRaU0E5SURBc0lIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ01Td2dkR2hwY3k1ZlpXWm1aV04wYVhabFZHbHRaVk5qWVd4bElEMGdNU3dnZEdocGN5NTNaV2xuYUhRZ1BTQXhMQ0IwYUdsekxsOWxabVpsWTNScGRtVlhaV2xuYUhRZ1BTQXhMQ0IwYUdsekxuSmxjR1YwYVhScGIyNXpJRDBnTVNBdklEQXNJSFJvYVhNdWNHRjFjMlZrSUQwZ0lURXNJSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXdMQ0IwYUdsekxtTnNZVzF3VjJobGJrWnBibWx6YUdWa0lEMGdJVEVzSUhSb2FYTXVlbVZ5YjFOc2IzQmxRWFJUZEdGeWRDQTlJQ0V3TENCMGFHbHpMbnBsY205VGJHOXdaVUYwUlc1a0lEMGdJVEE3Q2lBZ0lDQjlDaUFnSUNCd2JHRjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXRhWGhsY2k1ZllXTjBhWFpoZEdWQlkzUnBiMjRvZEdocGN5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkRzl3S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl0YVhobGNpNWZaR1ZoWTNScGRtRjBaVUZqZEdsdmJpaDBhR2x6S1N3Z2RHaHBjeTV5WlhObGRDZ3BPd29nSUNBZ2ZRb2dJQ0FnY21WelpYUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRjFjMlZrSUQwZ0lURXNJSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXdMQ0IwYUdsekxuUnBiV1VnUFNBd0xDQjBhR2x6TGw5c2IyOXdRMjkxYm5RZ1BTQXRNU3dnZEdocGN5NWZjM1JoY25SVWFXMWxJRDBnYm5Wc2JDd2dkR2hwY3k1emRHOXdSbUZrYVc1bktDa3VjM1J2Y0ZkaGNuQnBibWNvS1RzS0lDQWdJSDBLSUNBZ0lHbHpVblZ1Ym1sdVp5Z3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bGJtRmliR1ZrSUNZbUlDRjBhR2x6TG5CaGRYTmxaQ0FtSmlCMGFHbHpMblJwYldWVFkyRnNaU0FoUFQwZ01DQW1KaUIwYUdsekxsOXpkR0Z5ZEZScGJXVWdQVDA5SUc1MWJHd2dKaVlnZEdocGN5NWZiV2w0WlhJdVgybHpRV04wYVhabFFXTjBhVzl1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYVhOVFkyaGxaSFZzWldRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDIxcGVHVnlMbDlwYzBGamRHbDJaVUZqZEdsdmJpaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lITjBZWEowUVhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5emRHRnlkRlJwYldVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViRzl2Y0NBOUlHVXNJSFJvYVhNdWNtVndaWFJwZEdsdmJuTWdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJXWm1aV04wYVhabFYyVnBaMmgwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUzWldsbmFIUWdQU0JsTENCMGFHbHpMbDlsWm1abFkzUnBkbVZYWldsbmFIUWdQU0IwYUdsekxtVnVZV0pzWldRZ1B5QmxJRG9nTUN3Z2RHaHBjeTV6ZEc5d1JtRmthVzVuS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJGWm1abFkzUnBkbVZYWldsbmFIUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyVm1abVZqZEdsMlpWZGxhV2RvZERzS0lDQWdJSDBLSUNBZ0lHWmhaR1ZKYmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNOamFHVmtkV3hsUm1Ga2FXNW5LR1VzSURBc0lERXBPd29nSUNBZ2ZRb2dJQ0FnWm1Ga1pVOTFkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM05qYUdWa2RXeGxSbUZrYVc1bktHVXNJREVzSURBcE93b2dJQ0FnZlFvZ0lDQWdZM0p2YzNOR1lXUmxSbkp2YlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1Wm1Ga1pVOTFkQ2gwS1N3Z2RHaHBjeTVtWVdSbFNXNG9kQ2tzSUc0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxsOWpiR2x3TG1SMWNtRjBhVzl1TENCeUlEMGdaUzVmWTJ4cGNDNWtkWEpoZEdsdmJpd2dZU0E5SUhJZ0x5QnBMQ0J2SUQwZ2FTQXZJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVkMkZ5Y0NneExDQmhMQ0IwS1N3Z2RHaHBjeTUzWVhKd0tHOHNJREVzSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOeWIzTnpSbUZrWlZSdktHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWpjbTl6YzBaaFpHVkdjbTl0S0hSb2FYTXNJSFFzSUc0cE93b2dJQ0FnZlFvZ0lDQWdjM1J2Y0VaaFpHbHVaeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDkzWldsbmFIUkpiblJsY25CdmJHRnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVgyMXBlR1Z5TGw5MFlXdGxRbUZqYTBOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENobEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJGWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJwYldWVFkyRnNaU0E5SUdVc0lIUm9hWE11WDJWbVptVmpkR2wyWlZScGJXVlRZMkZzWlNBOUlIUm9hWE11Y0dGMWMyVmtJRDhnTUNBNklHVXNJSFJvYVhNdWMzUnZjRmRoY25CcGJtY29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFVm1abVZqZEdsMlpWUnBiV1ZUWTJGc1pTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlpXWm1aV04wYVhabFZHbHRaVk5qWVd4bE93b2dJQ0FnZlFvZ0lDQWdjMlYwUkhWeVlYUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJwYldWVFkyRnNaU0E5SUhSb2FYTXVYMk5zYVhBdVpIVnlZWFJwYjI0Z0x5QmxMQ0IwYUdsekxuTjBiM0JYWVhKd2FXNW5LQ2s3Q2lBZ0lDQjlDaUFnSUNCemVXNWpWMmwwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEdsdFpTQTlJR1V1ZEdsdFpTd2dkR2hwY3k1MGFXMWxVMk5oYkdVZ1BTQmxMblJwYldWVFkyRnNaU3dnZEdocGN5NXpkRzl3VjJGeWNHbHVaeWdwT3dvZ0lDQWdmUW9nSUNBZ2FHRnNkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkMkZ5Y0NoMGFHbHpMbDlsWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VzSURBc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnZDJGeWNDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TGw5dGFYaGxjaXdnY2lBOUlHa3VkR2x0WlN3Z1lTQTlJSFJvYVhNdWRHbHRaVk5qWVd4bExDQnZJRDBnZEdocGN5NWZkR2x0WlZOallXeGxTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnYnlBOVBUMGdiblZzYkNBbUppQW9ieUE5SUdrdVgyeGxibVJEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblFvS1N3Z2RHaHBjeTVmZEdsdFpWTmpZV3hsU1c1MFpYSndiMnhoYm5RZ1BTQnZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzh1Y0dGeVlXMWxkR1Z5VUc5emFYUnBiMjV6TENCc0lEMGdieTV6WVcxd2JHVldZV3gxWlhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOYk1GMGdQU0J5TENCald6RmRJRDBnY2lBcklHNHNJR3hiTUYwZ1BTQmxJQzhnWVN3Z2JGc3hYU0E5SUhRZ0x5QmhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1J2Y0ZkaGNuQnBibWNvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDkwYVcxbFUyTmhiR1ZKYm5SbGNuQnZiR0Z1ZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmRHbHRaVk5qWVd4bFNXNTBaWEp3YjJ4aGJuUWdQU0J1ZFd4c0xDQjBhR2x6TGw5dGFYaGxjaTVmZEdGclpVSmhZMnREYjI1MGNtOXNTVzUwWlhKd2IyeGhiblFvWlNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBUV2w0WlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDIxcGVHVnlPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyeHBjQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZZMnhwY0RzS0lDQWdJSDBLSUNBZ0lHZGxkRkp2YjNRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJ4dlkyRnNVbTl2ZENCOGZDQjBhR2x6TGw5dGFYaGxjaTVmY205dmREc0tJQ0FnSUgwS0lDQWdJRjkxY0dSaGRHVW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1bGJtRmliR1ZrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzVndaR0YwWlZkbGFXZG9kQ2hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE11WDNOMFlYSjBWR2x0WlRzS0lDQWdJQ0FnSUNCcFppQW9jaUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlDaGxJQzBnY2lrZ0tpQnVPd29nSUNBZ0lDQWdJQ0FnSUNCaklEd2dNQ0I4ZkNCdUlEMDlQU0F3SUQ4Z2RDQTlJREFnT2lBb2RHaHBjeTVmYzNSaGNuUlVhVzFsSUQwZ2JuVnNiQ3dnZENBOUlHNGdLaUJqS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDQXFQU0IwYUdsekxsOTFjR1JoZEdWVWFXMWxVMk5oYkdVb1pTazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TGw5MWNHUmhkR1ZVYVcxbEtIUXBMQ0J2SUQwZ2RHaHBjeTVmZFhCa1lYUmxWMlZwWjJoMEtHVXBPd29nSUNBZ0lDQWdJR2xtSUNodklENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlIUm9hWE11WDJsdWRHVnljRzlzWVc1MGN5d2diQ0E5SUhSb2FYTXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwYUdsekxtSnNaVzVrVFc5a1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhoa09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBc0lIVWdQU0JqTG14bGJtZDBhRHNnYUNBaFBUMGdkVHNnS3l0b0tXTmJhRjB1WlhaaGJIVmhkR1VvWVNrc0lHeGJhRjB1WVdOamRXMTFiR0YwWlVGa1pHbDBhWFpsS0c4cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JZWXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb0lEMGdNQ3dnZFNBOUlHTXViR1Z1WjNSb095Qm9JQ0U5UFNCMU95QXJLMmdwWTF0b1hTNWxkbUZzZFdGMFpTaGhLU3dnYkZ0b1hTNWhZMk4xYlhWc1lYUmxLR2tzSUc4cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlZkbGFXZG9kQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBd093b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtVnVZV0pzWldRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIUm9hWE11ZDJWcFoyaDBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1TG1WMllXeDFZWFJsS0dVcFd6QmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0FxUFNCcExDQmxJRDRnYmk1d1lYSmhiV1YwWlhKUWIzTnBkR2x2Ym5OYk1WMGdKaVlnS0hSb2FYTXVjM1J2Y0VaaFpHbHVaeWdwTENCcElEMDlQU0F3SUNZbUlDaDBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlsWm1abFkzUnBkbVZYWldsbmFIUWdQU0IwTENCME93b2dJQ0FnZlFvZ0lDQWdYM1Z3WkdGMFpWUnBiV1ZUWTJGc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F3T3dvZ0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1d1lYVnpaV1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVkR2x0WlZOallXeGxPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYM1JwYldWVFkyRnNaVWx1ZEdWeWNHOXNZVzUwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUxtVjJZV3gxWVhSbEtHVXBXekJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBcVBTQnBMQ0JsSUQ0Z2JpNXdZWEpoYldWMFpYSlFiM05wZEdsdmJuTmJNVjBnSmlZZ0tIUm9hWE11YzNSdmNGZGhjbkJwYm1jb0tTd2dkQ0E5UFQwZ01DQS9JSFJvYVhNdWNHRjFjMlZrSUQwZ0lUQWdPaUIwYUdsekxuUnBiV1ZUWTJGc1pTQTlJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bFptWmxZM1JwZG1WVWFXMWxVMk5oYkdVZ1BTQjBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlZScGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZMnhwY0M1a2RYSmhkR2x2Yml3Z2JpQTlJSFJvYVhNdWJHOXZjQ3dnYVNBOUlIUm9hWE11ZEdsdFpTQXJJR1VzSUhJZ1BTQjBhR2x6TGw5c2IyOXdRMjkxYm5Rc0lHRWdQU0J1SUQwOVBTQlNaanNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlQVDBnTUNrZ2NtVjBkWEp1SUhJZ1BUMDlJQzB4SUQ4Z2FTQTZJR0VnSmlZZ0tISWdKaUF4S1NBOVBUMGdNU0EvSUhRZ0xTQnBJRG9nYVRzS0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2QyWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlQVDBnTFRFZ0ppWWdLSFJvYVhNdVgyeHZiM0JEYjNWdWRDQTlJREFzSUhSb2FYTXVYM05sZEVWdVpHbHVaM01vSVRBc0lDRXdMQ0FoTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0ErUFNCMEtTQnBJRDBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0drZ1BDQXdLU0JwSUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEdsdFpTQTlJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3NnWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMnhoYlhCWGFHVnVSbWx1YVhOb1pXUWdQeUIwYUdsekxuQmhkWE5sWkNBOUlDRXdJRG9nZEdocGN5NWxibUZpYkdWa0lEMGdJVEVzSUhSb2FYTXVkR2x0WlNBOUlHa3NJSFJvYVhNdVgyMXBlR1Z5TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0ptYVc1cGMyaGxaQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXTjBhVzl1T2lCMGFHbHpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ1pTQThJREFnUHlBdE1TQTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUMweElDWW1JQ2hsSUQ0OUlEQWdQeUFvY2lBOUlEQXNJSFJvYVhNdVgzTmxkRVZ1WkdsdVozTW9JVEFzSUhSb2FYTXVjbVZ3WlhScGRHbHZibk1nUFQwOUlEQXNJR0VwS1NBNklIUm9hWE11WDNObGRFVnVaR2x1WjNNb2RHaHBjeTV5WlhCbGRHbDBhVzl1Y3lBOVBUMGdNQ3dnSVRBc0lHRXBLU3dnYVNBK1BTQjBJSHg4SUdrZ1BDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRTFoZEdndVpteHZiM0lvYVNBdklIUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0F0UFNCMElDb2dieXdnY2lBclBTQk5ZWFJvTG1GaWN5aHZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdkR2hwY3k1eVpYQmxkR2wwYVc5dWN5QXRJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1l5QThQU0F3S1NCMGFHbHpMbU5zWVcxd1YyaGxia1pwYm1semFHVmtJRDhnZEdocGN5NXdZWFZ6WldRZ1BTQWhNQ0E2SUhSb2FYTXVaVzVoWW14bFpDQTlJQ0V4TENCcElEMGdaU0ErSURBZ1B5QjBJRG9nTUN3Z2RHaHBjeTUwYVcxbElEMGdhU3dnZEdocGN5NWZiV2w0WlhJdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1acGJtbHphR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhZM1JwYjI0NklIUm9hWE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQmxJRDRnTUNBL0lERWdPaUF0TVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUE5UFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVWdQQ0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJGYm1ScGJtZHpLR3dzSUNGc0xDQmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdocGN5NWZjMlYwUlc1a2FXNW5jeWdoTVN3Z0lURXNJR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4dmIzQkRiM1Z1ZENBOUlISXNJSFJvYVhNdWRHbHRaU0E5SUdrc0lIUm9hWE11WDIxcGVHVnlMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpYkc5dmNDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2YmpvZ2RHaHBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzl2Y0VSbGJIUmhPaUJ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUdsekxuUnBiV1VnUFNCcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lTQW1KaUFvY2lBbUlERXBJRDA5UFNBeEtTQnlaWFIxY200Z2RDQXRJR2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRVZ1WkdsdVozTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZmFXNTBaWEp3YjJ4aGJuUlRaWFIwYVc1bmN6c0tJQ0FnSUNBZ0lDQnVJRDhnS0drdVpXNWthVzVuVTNSaGNuUWdQU0JXYVN3Z2FTNWxibVJwYm1kRmJtUWdQU0JXYVNrZ09pQW9aU0EvSUdrdVpXNWthVzVuVTNSaGNuUWdQU0IwYUdsekxucGxjbTlUYkc5d1pVRjBVM1JoY25RZ1B5QldhU0E2SUhwcElEb2dhUzVsYm1ScGJtZFRkR0Z5ZENBOUlFSnlMQ0IwSUQ4Z2FTNWxibVJwYm1kRmJtUWdQU0IwYUdsekxucGxjbTlUYkc5d1pVRjBSVzVrSUQ4Z1Zta2dPaUI2YVNBNklHa3VaVzVrYVc1blJXNWtJRDBnUW5JcE93b2dJQ0FnZlFvZ0lDQWdYM05qYUdWa2RXeGxSbUZrYVc1bktHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDIxcGVHVnlMQ0J5SUQwZ2FTNTBhVzFsTENCaElEMGdkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ1lTQTlQVDBnYm5Wc2JDQW1KaUFvWVNBOUlHa3VYMnhsYm1SRGIyNTBjbTlzU1c1MFpYSndiMnhoYm5Rb0tTd2dkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RZ1BTQmhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR0V1Y0dGeVlXMWxkR1Z5VUc5emFYUnBiMjV6TENCaklEMGdZUzV6WVcxd2JHVldZV3gxWlhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc5Yk1GMGdQU0J5TENCald6QmRJRDBnZEN3Z2Ixc3hYU0E5SUhJZ0t5QmxMQ0JqV3pGZElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS2ZTd2dUM2dnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0RFcExDQkRkU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdjMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1N3Z2RHaHBjeTVmY205dmRDQTlJR1VzSUhSb2FYTXVYMmx1YVhSTlpXMXZjbmxOWVc1aFoyVnlLQ2tzSUhSb2FYTXVYMkZqWTNWSmJtUmxlQ0E5SURBc0lIUm9hWE11ZEdsdFpTQTlJREFzSUhSb2FYTXVkR2x0WlZOallXeGxJRDBnTVRzS0lDQWdJSDBLSUNBZ0lGOWlhVzVrUVdOMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVYMnh2WTJGc1VtOXZkQ0I4ZkNCMGFHbHpMbDl5YjI5MExDQnBJRDBnWlM1ZlkyeHBjQzUwY21GamEzTXNJSElnUFNCcExteGxibWQwYUN3Z1lTQTlJR1V1WDNCeWIzQmxjblI1UW1sdVpHbHVaM01zSUc4Z1BTQmxMbDlwYm5SbGNuQnZiR0Z1ZEhNc0lHTWdQU0J1TG5WMWFXUXNJR3dnUFNCMGFHbHpMbDlpYVc1a2FXNW5jMEo1VW05dmRFRnVaRTVoYldVc0lHZ2dQU0JzVzJOZE93b2dJQ0FnSUNBZ0lHZ2dQVDA5SUhadmFXUWdNQ0FtSmlBb2FDQTlJSHQ5TENCc1cyTmRJRDBnYUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMUlEMGdNRHNnZFNBaFBUMGdjanNnS3l0MUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JwVzNWZExDQm1JRDBnWkM1dVlXMWxMQ0J0SUQwZ2FGdG1YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzBnSVQwOUlIWnZhV1FnTUNrZ0t5dHRMbkpsWm1WeVpXNWpaVU52ZFc1MExDQmhXM1ZkSUQwZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlNBOUlHRmJkVjBzSUcwZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcwdVgyTmhZMmhsU1c1a1pYZ2dQVDA5SUc1MWJHd2dKaVlnS0NzcmJTNXlaV1psY21WdVkyVkRiM1Z1ZEN3Z2RHaHBjeTVmWVdSa1NXNWhZM1JwZG1WQ2FXNWthVzVuS0cwc0lHTXNJR1lwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2RDQW1KaUIwTGw5d2NtOXdaWEowZVVKcGJtUnBibWR6VzNWZExtSnBibVJwYm1jdWNHRnljMlZrVUdGMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMGdQU0J1WlhjZ1FtTW9TMlV1WTNKbFlYUmxLRzRzSUdZc0lGOHBMQ0JrTGxaaGJIVmxWSGx3WlU1aGJXVXNJR1F1WjJWMFZtRnNkV1ZUYVhwbEtDa3BMQ0FySzIwdWNtVm1aWEpsYm1ObFEyOTFiblFzSUhSb2FYTXVYMkZrWkVsdVlXTjBhWFpsUW1sdVpHbHVaeWh0TENCakxDQm1LU3dnWVZ0MVhTQTlJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYjF0MVhTNXlaWE4xYkhSQ2RXWm1aWElnUFNCdExtSjFabVpsY2pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmZZV04wYVhaaGRHVkJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmYVhOQlkzUnBkbVZCWTNScGIyNG9aU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dVdVgyTmhZMmhsU1c1a1pYZ2dQVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdLR1V1WDJ4dlkyRnNVbTl2ZENCOGZDQjBhR2x6TGw5eWIyOTBLUzUxZFdsa0xDQnBJRDBnWlM1ZlkyeHBjQzUxZFdsa0xDQnlJRDBnZEdocGN5NWZZV04wYVc5dWMwSjVRMnhwY0Z0cFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJKcGJtUkJZM1JwYjI0b1pTd2djaUFtSmlCeUxtdHViM2R1UVdOMGFXOXVjMXN3WFNrc0lIUm9hWE11WDJGa1pFbHVZV04wYVhabFFXTjBhVzl1S0dVc0lHa3NJRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1ZmNISnZjR1Z5ZEhsQ2FXNWthVzVuY3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFF1YkdWdVozUm9PeUJ1SUNFOVBTQnBPeUFySzI0cGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaTUxYzJWRGIzVnVkQ3NySUQwOVBTQXdJQ1ltSUNoMGFHbHpMbDlzWlc1a1FtbHVaR2x1WnloeUtTd2djaTV6WVhabFQzSnBaMmx1WVd4VGRHRjBaU2dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlzWlc1a1FXTjBhVzl1S0dVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlrWldGamRHbDJZWFJsUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmFYTkJZM1JwZG1WQlkzUnBiMjRvWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTGw5d2NtOXdaWEowZVVKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSYmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXRMWEl1ZFhObFEyOTFiblFnUFQwOUlEQWdKaVlnS0hJdWNtVnpkRzl5WlU5eWFXZHBibUZzVTNSaGRHVW9LU3dnZEdocGN5NWZkR0ZyWlVKaFkydENhVzVrYVc1bktISXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTBZV3RsUW1GamEwRmpkR2x2YmlobEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JmYVc1cGRFMWxiVzl5ZVUxaGJtRm5aWElvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWVdOMGFXOXVjeUE5SUZ0ZExDQjBhR2x6TGw5dVFXTjBhWFpsUVdOMGFXOXVjeUE5SURBc0lIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQWdQU0I3ZlN3Z2RHaHBjeTVmWW1sdVpHbHVaM01nUFNCYlhTd2dkR2hwY3k1ZmJrRmpkR2wyWlVKcGJtUnBibWR6SUQwZ01Dd2dkR2hwY3k1ZlltbHVaR2x1WjNOQ2VWSnZiM1JCYm1ST1lXMWxJRDBnZTMwc0lIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNZ1BTQmJYU3dnZEdocGN5NWZia0ZqZEdsMlpVTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRITWdQU0F3T3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN6c0tJQ0FnSUNBZ0lDQjBhR2x6TG5OMFlYUnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhZM1JwYjI1ek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5aWFFnZEc5MFlXd2dLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbExsOWhZM1JwYjI1ekxteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpYUWdhVzVWYzJVZ0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTGw5dVFXTjBhWFpsUVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWW1sdVpHbHVaM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQjBiM1JoYkNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDJKcGJtUnBibWR6TG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRZ2FXNVZjMlVnS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbDl1UVdOMGFYWmxRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SeWIyeEpiblJsY25CdmJHRnVkSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQjBiM1JoYkNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDI1QlkzUnBkbVZEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUY5cGMwRmpkR2wyWlVGamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExsOWpZV05vWlVsdVpHVjRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ0U5UFNCdWRXeHNJQ1ltSUhRZ1BDQjBhR2x6TGw5dVFXTjBhWFpsUVdOMGFXOXVjenNLSUNBZ0lIMEtJQ0FnSUY5aFpHUkpibUZqZEdsMlpVRmpkR2x2YmlobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbDloWTNScGIyNXpMQ0J5SUQwZ2RHaHBjeTVmWVdOMGFXOXVjMEo1UTJ4cGNDd2dZU0E5SUhKYmRGMDdDaUFnSUNBZ0lDQWdhV1lnS0dFZ1BUMDlJSFp2YVdRZ01Da2dZU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdhMjV2ZDI1QlkzUnBiMjV6T2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbENpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2YmtKNVVtOXZkRG9nZTMwS0lDQWdJQ0FnSUNCOUxDQmxMbDlpZVVOc2FYQkRZV05vWlVsdVpHVjRJRDBnTUN3Z2NsdDBYU0E5SUdFN0NpQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1lTNXJibTkzYmtGamRHbHZibk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0J2TG14bGJtZDBhQ3dnYnk1d2RYTm9LR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbExsOWpZV05vWlVsdVpHVjRJRDBnYVM1c1pXNW5kR2dzSUdrdWNIVnphQ2hsS1N3Z1lTNWhZM1JwYjI1Q2VWSnZiM1JiYmwwZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWDNKbGJXOTJaVWx1WVdOMGFYWmxRV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lHNGdQU0IwVzNRdWJHVnVaM1JvSUMwZ01WMHNJR2tnUFNCbExsOWpZV05vWlVsdVpHVjRPd29nSUNBZ0lDQWdJRzR1WDJOaFkyaGxTVzVrWlhnZ1BTQnBMQ0IwVzJsZElEMGdiaXdnZEM1d2IzQW9LU3dnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExsOWpiR2x3TG5WMWFXUXNJR0VnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd0xDQnZJRDBnWVZ0eVhTd2dZeUE5SUc4dWEyNXZkMjVCWTNScGIyNXpMQ0JzSUQwZ1kxdGpMbXhsYm1kMGFDQXRJREZkTENCb0lEMGdaUzVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlRHNLSUNBZ0lDQWdJQ0JzTGw5aWVVTnNhWEJEWVdOb1pVbHVaR1Y0SUQwZ2FDd2dZMXRvWFNBOUlHd3NJR011Y0c5d0tDa3NJR1V1WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdieTVoWTNScGIyNUNlVkp2YjNRc0lHUWdQU0FvWlM1ZmJHOWpZV3hTYjI5MElIeDhJSFJvYVhNdVgzSnZiM1FwTG5WMWFXUTdDaUFnSUNBZ0lDQWdaR1ZzWlhSbElIVmJaRjBzSUdNdWJHVnVaM1JvSUQwOVBTQXdJQ1ltSUdSbGJHVjBaU0JoVzNKZExDQjBhR2x6TGw5eVpXMXZkbVZKYm1GamRHbDJaVUpwYm1ScGJtZHpSbTl5UVdOMGFXOXVLR1VwT3dvZ0lDQWdmUW9nSUNBZ1gzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaM05HYjNKQlkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWZjSEp2Y0dWeWRIbENhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdkRnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdMUzF5TG5KbFptVnlaVzVqWlVOdmRXNTBJRDA5UFNBd0lDWW1JSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaeWh5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmZiR1Z1WkVGamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDloWTNScGIyNXpMQ0J1SUQwZ1pTNWZZMkZqYUdWSmJtUmxlQ3dnYVNBOUlIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpLeXNzSUhJZ1BTQjBXMmxkT3dvZ0lDQWdJQ0FnSUdVdVgyTmhZMmhsU1c1a1pYZ2dQU0JwTENCMFcybGRJRDBnWlN3Z2NpNWZZMkZqYUdWSmJtUmxlQ0E5SUc0c0lIUmJibDBnUFNCeU93b2dJQ0FnZlFvZ0lDQWdYM1JoYTJWQ1lXTnJRV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lHNGdQU0JsTGw5allXTm9aVWx1WkdWNExDQnBJRDBnTFMxMGFHbHpMbDl1UVdOMGFYWmxRV04wYVc5dWN5d2djaUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdaUzVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQmxMQ0J5TGw5allXTm9aVWx1WkdWNElEMGdiaXdnZEZ0dVhTQTlJSEk3Q2lBZ0lDQjlDaUFnSUNCZllXUmtTVzVoWTNScGRtVkNhVzVrYVc1bktHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJKcGJtUnBibWR6UW5sU2IyOTBRVzVrVG1GdFpTd2djaUE5SUhSb2FYTXVYMkpwYm1ScGJtZHpMQ0JoSUQwZ2FWdDBYVHNLSUNBZ0lDQWdJQ0JoSUQwOVBTQjJiMmxrSURBZ0ppWWdLR0VnUFNCN2ZTd2dhVnQwWFNBOUlHRXBMQ0JoVzI1ZElEMGdaU3dnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJSEl1YkdWdVozUm9MQ0J5TG5CMWMyZ29aU2s3Q2lBZ0lDQjlDaUFnSUNCZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMkpwYm1ScGJtZHpMQ0J1SUQwZ1pTNWlhVzVrYVc1bkxDQnBJRDBnYmk1eWIyOTBUbTlrWlM1MWRXbGtMQ0J5SUQwZ2JpNXdZWFJvTENCaElEMGdkR2hwY3k1ZlltbHVaR2x1WjNOQ2VWSnZiM1JCYm1ST1lXMWxMQ0J2SUQwZ1lWdHBYU3dnWXlBOUlIUmJkQzVzWlc1bmRHZ2dMU0F4WFN3Z2JDQTlJR1V1WDJOaFkyaGxTVzVrWlhnN0NpQWdJQ0FnSUNBZ1l5NWZZMkZqYUdWSmJtUmxlQ0E5SUd3c0lIUmJiRjBnUFNCakxDQjBMbkJ2Y0NncExDQmtaV3hsZEdVZ2IxdHlYU3dnVDJKcVpXTjBMbXRsZVhNb2J5a3ViR1Z1WjNSb0lEMDlQU0F3SUNZbUlHUmxiR1YwWlNCaFcybGRPd29nSUNBZ2ZRb2dJQ0FnWDJ4bGJtUkNhVzVrYVc1bktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgySnBibVJwYm1kekxDQnVJRDBnWlM1ZlkyRmphR1ZKYm1SbGVDd2dhU0E5SUhSb2FYTXVYMjVCWTNScGRtVkNhVzVrYVc1bmN5c3JMQ0J5SUQwZ2RGdHBYVHNLSUNBZ0lDQWdJQ0JsTGw5allXTm9aVWx1WkdWNElEMGdhU3dnZEZ0cFhTQTlJR1VzSUhJdVgyTmhZMmhsU1c1a1pYZ2dQU0J1TENCMFcyNWRJRDBnY2pzS0lDQWdJSDBLSUNBZ0lGOTBZV3RsUW1GamEwSnBibVJwYm1jb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHNGdQU0JsTGw5allXTm9aVWx1WkdWNExDQnBJRDBnTFMxMGFHbHpMbDl1UVdOMGFYWmxRbWx1WkdsdVozTXNJSElnUFNCMFcybGRPd29nSUNBZ0lDQWdJR1V1WDJOaFkyaGxTVzVrWlhnZ1BTQnBMQ0IwVzJsZElEMGdaU3dnY2k1ZlkyRmphR1ZKYm1SbGVDQTlJRzRzSUhSYmJsMGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ1gyeGxibVJEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDlqYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6TENCMElEMGdkR2hwY3k1ZmJrRmpkR2wyWlVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNckt5d2diaUE5SUdWYmRGMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdQVDA5SUhadmFXUWdNQ0FtSmlBb2JpQTlJRzVsZHlCbVlTaHVaWGNnUm14dllYUXpNa0Z5Y21GNUtESXBMQ0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRElwTENBeExDQlBlQ2tzSUc0dVgxOWpZV05vWlVsdVpHVjRJRDBnZEN3Z1pWdDBYU0E5SUc0cExDQnVPd29nSUNBZ2ZRb2dJQ0FnWDNSaGEyVkNZV05yUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNc0lHNGdQU0JsTGw5ZlkyRmphR1ZKYm1SbGVDd2dhU0E5SUMwdGRHaHBjeTVmYmtGamRHbDJaVU52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE1zSUhJZ1BTQjBXMmxkT3dvZ0lDQWdJQ0FnSUdVdVgxOWpZV05vWlVsdVpHVjRJRDBnYVN3Z2RGdHBYU0E5SUdVc0lISXVYMTlqWVdOb1pVbHVaR1Y0SUQwZ2Jpd2dkRnR1WFNBOUlISTdDaUFnSUNCOUNpQWdJQ0JqYkdsd1FXTjBhVzl1S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhRZ2ZId2dkR2hwY3k1ZmNtOXZkQ3dnY2lBOUlHa3VkWFZwWkN3Z1lTQTlJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpSUQ4Z2FYTXVabWx1WkVKNVRtRnRaU2hwTENCbEtTQTZJR1VzSUc4Z1BTQmhJQ0U5UFNCdWRXeHNJRDhnWVM1MWRXbGtJRG9nWlN3Z1l5QTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEJiYjEwc0lHd2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBZ0ppWWdLR0VnSVQwOUlHNTFiR3dnUHlCdUlEMGdZUzVpYkdWdVpFMXZaR1VnT2lCdUlEMGdXR01wTENCaklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCakxtRmpkR2x2YmtKNVVtOXZkRnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJSFp2YVdRZ01DQW1KaUIxTG1Kc1pXNWtUVzlrWlNBOVBUMGdiaWtnY21WMGRYSnVJSFU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHd2dQU0JqTG10dWIzZHVRV04wYVc5dWMxc3dYU3dnWVNBOVBUMGdiblZzYkNBbUppQW9ZU0E5SUd3dVgyTnNhWEFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ2JuVnNiQ2tnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCdVpYY2dWbU1vZEdocGN5d2dZU3dnZEN3Z2JpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJKcGJtUkJZM1JwYjI0b2FDd2diQ2tzSUhSb2FYTXVYMkZrWkVsdVlXTjBhWFpsUVdOMGFXOXVLR2dzSUc4c0lISXBMQ0JvT3dvZ0lDQWdmUW9nSUNBZ1pYaHBjM1JwYm1kQlkzUnBiMjRvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ0I4ZkNCMGFHbHpMbDl5YjI5MExDQnBJRDBnYmk1MWRXbGtMQ0J5SUQwZ2RIbHdaVzltSUdVZ1BUMGdJbk4wY21sdVp5SWdQeUJwY3k1bWFXNWtRbmxPWVcxbEtHNHNJR1VwSURvZ1pTd2dZU0E5SUhJZ1B5QnlMblYxYVdRZ09pQmxMQ0J2SUQwZ2RHaHBjeTVmWVdOMGFXOXVjMEo1UTJ4cGNGdGhYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieUFoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVZV04wYVc5dVFubFNiMjkwVzJsZElIeDhJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnpkRzl3UVd4c1FXTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmWVdOMGFXOXVjeXdnZENBOUlIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SUhRZ0xTQXhPeUJ1SUQ0OUlEQTdJQzB0YmlsbFcyNWRMbk4wYjNBb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ1pTQXFQU0IwYUdsekxuUnBiV1ZUWTJGc1pUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJGamRHbHZibk1zSUc0Z1BTQjBhR2x6TGw5dVFXTjBhWFpsUVdOMGFXOXVjeXdnYVNBOUlIUm9hWE11ZEdsdFpTQXJQU0JsTENCeUlEMGdUV0YwYUM1emFXZHVLR1VwTENCaElEMGdkR2hwY3k1ZllXTmpkVWx1WkdWNElGNDlJREU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Ec2diQ0FoUFQwZ2Jqc2dLeXRzS1hSYmJGMHVYM1Z3WkdGMFpTaHBMQ0JsTENCeUxDQmhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVgySnBibVJwYm1kekxDQmpJRDBnZEdocGN5NWZia0ZqZEdsMlpVSnBibVJwYm1kek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z0lUMDlJR003SUNzcmJDbHZXMnhkTG1Gd2NHeDVLR0VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVkdsdFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBhVzFsSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dkR2hwY3k1ZllXTjBhVzl1Y3k1c1pXNW5kR2c3SUhRckt5bDBhR2x6TGw5aFkzUnBiMjV6VzNSZExuUnBiV1VnUFNBd093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ3WkdGMFpTaGxLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGSnZiM1FvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM0p2YjNRN0NpQWdJQ0I5Q2lBZ0lDQjFibU5oWTJobFEyeHBjQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDloWTNScGIyNXpMQ0J1SUQwZ1pTNTFkV2xrTENCcElEMGdkR2hwY3k1ZllXTjBhVzl1YzBKNVEyeHBjQ3dnY2lBOUlHbGJibDA3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlISXVhMjV2ZDI1QlkzUnBiMjV6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaklEMGdZUzVzWlc1bmRHZzdJRzhnSVQwOUlHTTdJQ3NyYnlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdGYmIxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5a1pXRmpkR2wyWVhSbFFXTjBhVzl1S0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCc0xsOWpZV05vWlVsdVpHVjRMQ0IxSUQwZ2RGdDBMbXhsYm1kMGFDQXRJREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkM1ZlkyRmphR1ZKYm1SbGVDQTlJRzUxYkd3c0lHd3VYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0J1ZFd4c0xDQjFMbDlqWVdOb1pVbHVaR1Y0SUQwZ2FDd2dkRnRvWFNBOUlIVXNJSFF1Y0c5d0tDa3NJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaM05HYjNKQlkzUnBiMjRvYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUdsYmJsMDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFc1allXTm9aVkp2YjNRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzUxZFdsa0xDQnVJRDBnZEdocGN5NWZZV04wYVc5dWMwSjVRMnhwY0RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ2FXNGdiaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JsdGhYUzVoWTNScGIyNUNlVkp2YjNRc0lHTWdQU0J2VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JqSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdVgyUmxZV04wYVhaaGRHVkJZM1JwYjI0b1l5a3NJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUVdOMGFXOXVLR01wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbDlpYVc1a2FXNW5jMEo1VW05dmRFRnVaRTVoYldVc0lISWdQU0JwVzNSZE93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ1lTQnBiaUJ5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnlXMkZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZMbkpsYzNSdmNtVlBjbWxuYVc1aGJGTjBZWFJsS0Nrc0lIUm9hWE11WDNKbGJXOTJaVWx1WVdOMGFYWmxRbWx1WkdsdVp5aHZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMWJtTmhZMmhsUVdOMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WlhocGMzUnBibWRCWTNScGIyNG9aU3dnZENrN0NpQWdJQ0FnSUNBZ2JpQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZaR1ZoWTNScGRtRjBaVUZqZEdsdmJpaHVLU3dnZEdocGN5NWZjbVZ0YjNabFNXNWhZM1JwZG1WQlkzUnBiMjRvYmlrcE93b2dJQ0FnZlFwOUxDQlFkU0E5SUdOc1lYTnpJSE14SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZG1Gc2RXVWdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QnpNU2gwYUdsekxuWmhiSFZsTG1Oc2IyNWxJRDA5UFNCMmIybGtJREFnUHlCMGFHbHpMblpoYkhWbElEb2dkR2hwY3k1MllXeDFaUzVqYkc5dVpTZ3BLVHNLSUNBZ0lIMEtmU3dnUm5nZ1BTQXdMQ0JNZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYzI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncExDQjBhR2x6TG1selZXNXBabTl5YlhOSGNtOTFjQ0E5SUNFd0xDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdocGN5d2dJbWxrSWl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dSbmdyS3dvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTUxYzJGblpTQTlJRWh5TENCMGFHbHpMblZ1YVdadmNtMXpJRDBnVzEwN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ1YVdadmNtMXpMbkIxYzJnb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlaVzF2ZG1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1MWJtbG1iM0p0Y3k1cGJtUmxlRTltS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0F0TVNBbUppQjBhR2x6TG5WdWFXWnZjbTF6TG5Od2JHbGpaU2gwTENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRTVoYldVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01aGJXVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZYTmhaMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ6WVdkbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKa2FYTndiM05sSWdvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1WVcxbElEMGdaUzV1WVcxbExDQjBhR2x6TG5WellXZGxJRDBnWlM1MWMyRm5aVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1ZFc1cFptOXliWE03Q2lBZ0lDQWdJQ0FnZEdocGN5NTFibWxtYjNKdGN5NXNaVzVuZEdnZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMGFHbHpMblZ1YVdadmNtMXpMbkIxYzJnb2RGdHVYUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUVsMUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCSmN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZENrc0lIUm9hWE11YVhOSmJuTjBZVzVqWldSSmJuUmxjbXhsWVhabFpFSjFabVpsY2lBOUlDRXdMQ0IwYUdsekxtMWxjMmhRWlhKQmRIUnlhV0oxZEdVZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU0E5SUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMbU5zYjI1bEtHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVWdQU0IwYUdsekxtMWxjMmhRWlhKQmRIUnlhV0oxZEdVc0lIUTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbWx6U1c1emRHRnVZMlZrU1c1MFpYSnNaV0YyWldSQ2RXWm1aWElnUFNBaE1Dd2dkQzV0WlhOb1VHVnlRWFIwY21saWRYUmxJRDBnZEdocGN5NXRaWE5vVUdWeVFYUjBjbWxpZFhSbExDQjBPd29nSUNBZ2ZRcDlMQ0JWZFNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXBld29nSUNBZ0lDQWdJSFJvYVhNdWFYTkhURUoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3TENCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWlkV1ptWlhJZ1BTQmxMQ0IwYUdsekxuUjVjR1VnUFNCMExDQjBhR2x6TG1sMFpXMVRhWHBsSUQwZ2Jpd2dkR2hwY3k1bGJHVnRaVzUwVTJsNlpTQTlJR2tzSUhSb2FYTXVZMjkxYm5RZ1BTQnlMQ0IwYUdsekxuWmxjbk5wYjI0Z1BTQXdPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHNWxaV1J6VlhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCbElEMDlQU0FoTUNBbUppQjBhR2x6TG5abGNuTnBiMjRyS3pzS0lDQWdJSDBLSUNBZ0lITmxkRUoxWm1abGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVluVm1abVZ5SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRlI1Y0dVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUjVjR1VnUFNCbExDQjBhR2x6TG1Wc1pXMWxiblJUYVhwbElEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVsMFpXMVRhWHBsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwZEdWdFUybDZaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkRiM1Z1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5MWJuUWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JFZFNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNBd0xDQnBJRDBnTVNBdklEQXBld29nSUNBZ0lDQWdJSFJvYVhNdWNtRjVJRDBnYm1WM0lHaHBLR1VzSUhRcExDQjBhR2x6TG01bFlYSWdQU0J1TENCMGFHbHpMbVpoY2lBOUlHa3NJSFJvYVhNdVkyRnRaWEpoSUQwZ2JuVnNiQ3dnZEdocGN5NXNZWGxsY25NZ1BTQnVaWGNnVW5Nc0lIUm9hWE11Y0dGeVlXMXpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQk5aWE5vT2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnVEdsdVpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5WlhOb2IyeGtPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUV4UFJEb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnZhVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRk53Y21sMFpUb2dlMzBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KaGVTNXpaWFFvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ0WlhKaEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExtbHpVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRWdQeUFvZEdocGN5NXlZWGt1YjNKcFoybHVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NXlZWGt1WkdseVpXTjBhVzl1TG5ObGRDaGxMbmdzSUdVdWVTd2dMalVwTG5WdWNISnZhbVZqZENoMEtTNXpkV0lvZEdocGN5NXlZWGt1YjNKcFoybHVLUzV1YjNKdFlXeHBlbVVvS1N3Z2RHaHBjeTVqWVcxbGNtRWdQU0IwS1NBNklIUXVhWE5QY25Sb2IyZHlZWEJvYVdORFlXMWxjbUVnUHlBb2RHaHBjeTV5WVhrdWIzSnBaMmx1TG5ObGRDaGxMbmdzSUdVdWVTd2dLSFF1Ym1WaGNpQXJJSFF1Wm1GeUtTQXZJQ2gwTG01bFlYSWdMU0IwTG1aaGNpa3BMblZ1Y0hKdmFtVmpkQ2gwS1N3Z2RHaHBjeTV5WVhrdVpHbHlaV04wYVc5dUxuTmxkQ2d3TENBd0xDQXRNU2t1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0hRdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtTmhiV1Z5WVNBOUlIUXBJRG9nWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVtRjVZMkZ6ZEdWeU9pQlZibk4xY0hCdmNuUmxaQ0JqWVcxbGNtRWdkSGx3WlRvZ0lpQXJJSFF1ZEhsd1pTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1JQWW1wbFkzUW9aU3dnZENBOUlDRXdMQ0J1SUQwZ1cxMHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhMk1vWlN3Z2RHaHBjeXdnYml3Z2RDa3NJRzR1YzI5eWRDaE9kU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUlBZbXBsWTNSektHVXNJSFFnUFNBaE1Dd2diaUE5SUZ0ZEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJR1V1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1d0aktHVmJhVjBzSUhSb2FYTXNJRzRzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxuTnZjblFvVG5VcExDQnVPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJPZFNoek1Td2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXhMbVJwYzNSaGJtTmxJQzBnWlM1a2FYTjBZVzVqWlRzS2ZRcG1kVzVqZEdsdmJpQnJZeWh6TVN3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYVdZZ0tITXhMbXhoZVdWeWN5NTBaWE4wS0dVdWJHRjVaWEp6S1NBbUppQnpNUzV5WVhsallYTjBLR1VzSUhRcExDQnVJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdjekV1WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dZU0E5SUdrdWJHVnVaM1JvT3lCeUlEd2dZVHNnY2lzcktXdGpLR2xiY2wwc0lHVXNJSFFzSUNFd0tUc0tJQ0FnSUgwS2ZRcDJZWElnVDNVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlEQXNJRzRnUFNBd0tYc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JsTENCMGFHbHpMbkJvYVNBOUlIUXNJSFJvYVhNdWRHaGxkR0VnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCbExDQjBhR2x6TG5Cb2FTQTlJSFFzSUhSb2FYTXVkR2hsZEdFZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRDBnWlM1eVlXUnBkWE1zSUhSb2FYTXVjR2hwSUQwZ1pTNXdhR2tzSUhSb2FYTXVkR2hsZEdFZ1BTQmxMblJvWlhSaExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVk5oWm1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0docElEMGdUV0YwYUM1dFlYZ29NV1V0Tml3Z1RXRjBhQzV0YVc0b1RXRjBhQzVRU1NBdElERmxMVFlzSUhSb2FYTXVjR2hwS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0Vm1WamRHOXlNeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwUm5KdmJVTmhjblJsYzJsaGJrTnZiM0prY3lobExuZ3NJR1V1ZVN3Z1pTNTZLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFEWVhKMFpYTnBZVzVEYjI5eVpITW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUUxaGRHZ3VjM0Z5ZENobElDb2daU0FySUhRZ0tpQjBJQ3NnYmlBcUlHNHBMQ0IwYUdsekxuSmhaR2wxY3lBOVBUMGdNQ0EvSUNoMGFHbHpMblJvWlhSaElEMGdNQ3dnZEdocGN5NXdhR2tnUFNBd0tTQTZJQ2gwYUdsekxuUm9aWFJoSUQwZ1RXRjBhQzVoZEdGdU1paGxMQ0J1S1N3Z2RHaHBjeTV3YUdrZ1BTQk5ZWFJvTG1GamIzTW9ZM1FvZENBdklIUm9hWE11Y21Ga2FYVnpMQ0F0TVN3Z01Ta3BLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q24wc0lFWjFJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F3TENCdUlEMGdNQ2w3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTd2dkR2hwY3k1MGFHVjBZU0E5SUhRc0lIUm9hWE11ZVNBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXNJSFJvYVhNdWRHaGxkR0VnUFNCMExDQjBhR2x6TG5rZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRDBnWlM1eVlXUnBkWE1zSUhSb2FYTXVkR2hsZEdFZ1BTQmxMblJvWlhSaExDQjBhR2x6TG5rZ1BTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRWbVZqZEc5eU15aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBSbkp2YlVOaGNuUmxjMmxoYmtOdmIzSmtjeWhsTG5nc0lHVXVlU3dnWlM1NktUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMURZWEowWlhOcFlXNURiMjl5WkhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJRTFoZEdndWMzRnlkQ2hsSUNvZ1pTQXJJRzRnS2lCdUtTd2dkR2hwY3k1MGFHVjBZU0E5SUUxaGRHZ3VZWFJoYmpJb1pTd2diaWtzSUhSb2FYTXVlU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRcDlMQ0JDZFNBOUlHNWxkeUJhTENCNmRTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1dpZ3hJQzhnTUN3Z01TQXZJREFwTENCMElEMGdibVYzSUZvb0xURWdMeUF3TENBdE1TQXZJREFwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbWx6UW05NE1pQTlJQ0V3TENCMGFHbHpMbTFwYmlBOUlHVXNJSFJvYVhNdWJXRjRJRDBnZERzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtTnZjSGtvWlNrc0lIUm9hWE11YldGNExtTnZjSGtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VUc5cGJuUnpLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYTJWRmJYQjBlU2dwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDBhR2x6TG1WNGNHRnVaRUo1VUc5cGJuUW9aVnQwWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMlZ1ZEdWeVFXNWtVMmw2WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JDZFM1amIzQjVLSFFwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzQxS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1WTI5d2VTaGxLUzV6ZFdJb2Jpa3NJSFJvYVhNdWJXRjRMbU52Y0hrb1pTa3VZV1JrS0c0cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndVkyOXdlU2hsTG0xaGVDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsUlcxd2RIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbmdnUFNCMGFHbHpMbTFwYmk1NUlEMGdNU0F2SURBc0lIUm9hWE11YldGNExuZ2dQU0IwYUdsekxtMWhlQzU1SUQwZ0xURWdMeUF3TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYVhORmJYQjBlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRZWGd1ZUNBOElIUm9hWE11YldsdUxuZ2dmSHdnZEdocGN5NXRZWGd1ZVNBOElIUm9hWE11YldsdUxuazdDaUFnSUNCOUNpQWdJQ0JuWlhSRFpXNTBaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx6Ulcxd2RIa29LU0EvSUdVdWMyVjBLREFzSURBcElEb2daUzVoWkdSV1pXTjBiM0p6S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTGpVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVTJsNlpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdaUzV6WlhRb01Dd2dNQ2tnT2lCbExuTjFZbFpsWTNSdmNuTW9kR2hwY3k1dFlYZ3NJSFJvYVhNdWJXbHVLVHNLSUNBZ0lIMEtJQ0FnSUdWNGNHRnVaRUo1VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTV0YVc0b1pTa3NJSFJvYVhNdWJXRjRMbTFoZUNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVjRjR0Z1WkVKNVZtVmpkRzl5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWMzVmlLR1VwTENCMGFHbHpMbTFoZUM1aFpHUW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbUZrWkZOallXeGhjaWd0WlNrc0lIUm9hWE11YldGNExtRmtaRk5qWVd4aGNpaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhLR1V1ZUNBOElIUm9hWE11YldsdUxuZ2dmSHdnWlM1NElENGdkR2hwY3k1dFlYZ3VlQ0I4ZkNCbExua2dQQ0IwYUdsekxtMXBiaTU1SUh4OElHVXVlU0ErSUhSb2FYTXViV0Y0TG5rcE93b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1NElEdzlJR1V1YldsdUxuZ2dKaVlnWlM1dFlYZ3VlQ0E4UFNCMGFHbHpMbTFoZUM1NElDWW1JSFJvYVhNdWJXbHVMbmtnUEQwZ1pTNXRhVzR1ZVNBbUppQmxMbTFoZUM1NUlEdzlJSFJvYVhNdWJXRjRMbms3Q2lBZ0lDQjlDaUFnSUNCblpYUlFZWEpoYldWMFpYSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExuTmxkQ2dvWlM1NElDMGdkR2hwY3k1dGFXNHVlQ2tnTHlBb2RHaHBjeTV0WVhndWVDQXRJSFJvYVhNdWJXbHVMbmdwTENBb1pTNTVJQzBnZEdocGN5NXRhVzR1ZVNrZ0x5QW9kR2hwY3k1dFlYZ3VlU0F0SUhSb2FYTXViV2x1TG5rcEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhLR1V1YldGNExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElHVXViV2x1TG5nZ1BpQjBhR2x6TG0xaGVDNTRJSHg4SUdVdWJXRjRMbmtnUENCMGFHbHpMbTFwYmk1NUlIeDhJR1V1YldsdUxua2dQaUIwYUdsekxtMWhlQzU1S1RzS0lDQWdJSDBLSUNBZ0lHTnNZVzF3VUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtTnZjSGtvWlNrdVkyeGhiWEFvZEdocGN5NXRhVzRzSUhSb2FYTXViV0Y0S1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFZHOVFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4aGJYQlFiMmx1ZENobExDQkNkU2t1WkdsemRHRnVZMlZVYnlobEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG0xaGVDaGxMbTFwYmlrc0lIUm9hWE11YldGNExtMXBiaWhsTG0xaGVDa3NJSFJvYVhNdWFYTkZiWEIwZVNncElDWW1JSFJvYVhNdWJXRnJaVVZ0Y0hSNUtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjFibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtMXBiaWhsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbTFoZUNobExtMWhlQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1aFpHUW9aU2tzSUhSb2FYTXViV0Y0TG1Ga1pDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YldsdUxtVnhkV0ZzY3loMGFHbHpMbTFwYmlrZ0ppWWdaUzV0WVhndVpYRjFZV3h6S0hSb2FYTXViV0Y0S1RzS0lDQWdJSDBLZlN3Z1ZuVWdQU0J1WlhjZ1FTd2dWSElnUFNCdVpYY2dRU3dnYTNVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUVFc0lIUWdQU0J1WlhjZ1FTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1emRHRnlkQ0E5SUdVc0lIUm9hWE11Wlc1a0lEMGdkRHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVkyOXdlU2hsS1N3Z2RHaHBjeTVsYm1RdVkyOXdlU2gwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTjBZWEowTG1OdmNIa29aUzV6ZEdGeWRDa3NJSFJvYVhNdVpXNWtMbU52Y0hrb1pTNWxibVFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyVnVkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhaR1JXWldOMGIzSnpLSFJvYVhNdWMzUmhjblFzSUhSb2FYTXVaVzVrS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0I5Q2lBZ0lDQmtaV3gwWVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVjM1ZpVm1WamRHOXljeWgwYUdsekxtVnVaQ3dnZEdocGN5NXpkR0Z5ZENrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWTnhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTjBZWEowTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0hSb2FYTXVaVzVrS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5OMFlYSjBMbVJwYzNSaGJtTmxWRzhvZEdocGN5NWxibVFwT3dvZ0lDQWdmUW9nSUNBZ1lYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJsYkhSaEtIUXBMbTExYkhScGNHeDVVMk5oYkdGeUtHVXBMbUZrWkNoMGFHbHpMbk4wWVhKMEtUc0tJQ0FnSUgwS0lDQWdJR05zYjNObGMzUlFiMmx1ZEZSdlVHOXBiblJRWVhKaGJXVjBaWElvWlN3Z2RDa2dld29nSUNBZ0lDQWdJRloxTG5OMVlsWmxZM1J2Y25Nb1pTd2dkR2hwY3k1emRHRnlkQ2tzSUZSeUxuTjFZbFpsWTNSdmNuTW9kR2hwY3k1bGJtUXNJSFJvYVhNdWMzUmhjblFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnVkhJdVpHOTBLRlJ5S1N3Z2NpQTlJRlJ5TG1SdmRDaFdkU2tnTHlCdU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDWW1JQ2h5SUQwZ1kzUW9jaXdnTUN3Z01Ta3BMQ0J5T3dvZ0lDQWdmUW9nSUNBZ1kyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TG1Oc2IzTmxjM1JRYjJsdWRGUnZVRzlwYm5SUVlYSmhiV1YwWlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHVnNkR0VvYmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvYVNrdVlXUmtLSFJvYVhNdWMzUmhjblFwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpkR0Z5ZEM1aGNIQnNlVTFoZEhKcGVEUW9aU2tzSUhSb2FYTXVaVzVrTG1Gd2NHeDVUV0YwY21sNE5DaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YzNSaGNuUXVaWEYxWVd4ektIUm9hWE11YzNSaGNuUXBJQ1ltSUdVdVpXNWtMbVZ4ZFdGc2N5aDBhR2x6TG1WdVpDazdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOUxDQklkU0E5SUc1bGR5QkJMQ0JIZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nU21VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LU3dnZEdocGN5NXNhV2RvZENBOUlHVXNJSFJvYVhNdWJXRjBjbWw0SUQwZ1pTNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZMjlzYjNJZ1BTQjBMQ0IwYUdsekxuUjVjR1VnUFNBaVUzQnZkRXhwWjJoMFNHVnNjR1Z5SWpzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5QkhaU3dnYVNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd0xDQnZJRDBnTVN3Z1l5QTlJRE15T3lCaElEd2dZenNnWVNzckxDQnZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHRWdMeUJqSUNvZ1RXRjBhQzVRU1NBcUlESXNJR2dnUFNCdklDOGdZeUFxSUUxaGRHZ3VVRWtnS2lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0JwTG5CMWMyZ29UV0YwYUM1amIzTW9iQ2tzSUUxaGRHZ3VjMmx1S0d3cExDQXhMQ0JOWVhSb0xtTnZjeWhvS1N3Z1RXRjBhQzV6YVc0b2FDa3NJREVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCdUxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dkbVVvYVN3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUhkMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU52Ym1VZ1BTQnVaWGNnWlc0b2Jpd2djaWtzSUhSb2FYTXVZV1JrS0hSb2FYTXVZMjl1WlNrc0lIUm9hWE11ZFhCa1lYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WTI5dVpTNW5aVzl0WlhSeWVTNWthWE53YjNObEtDa3NJSFJvYVhNdVkyOXVaUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RDNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQjBhR2x6TG14cFoyaDBMblJoY21kbGRDNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVzYVdkb2RDNWthWE4wWVc1alpTQS9JSFJvYVhNdWJHbG5hSFF1WkdsemRHRnVZMlVnT2lBeFpUTXNJSFFnUFNCbElDb2dUV0YwYUM1MFlXNG9kR2hwY3k1c2FXZG9kQzVoYm1kc1pTazdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyNWxMbk5qWVd4bExuTmxkQ2gwTENCMExDQmxLU3dnU0hVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJHbG5hSFF1ZEdGeVoyVjBMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTVqYjI1bExteHZiMnRCZENoSWRTa3NJSFJvYVhNdVkyOXNiM0lnSVQwOUlIWnZhV1FnTUNBL0lIUm9hWE11WTI5dVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9kR2hwY3k1amIyeHZjaWtnT2lCMGFHbHpMbU52Ym1VdWJXRjBaWEpwWVd3dVkyOXNiM0l1WTI5d2VTaDBhR2x6TG14cFoyaDBMbU52Ykc5eUtUc0tJQ0FnSUgwS2ZTd2dVRzRnUFNCdVpYY2dRU3dnZDNJZ1BTQnVaWGNnZW1Vc0lHeHZJRDBnYm1WM0lIcGxMQ0JYZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWlc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQk9aQ2hsS1N3Z2JpQTlJRzVsZHlCSFpTd2dhU0E5SUZ0ZExDQnlJRDBnVzEwc0lHRWdQU0J1WlhjZ2NHVW9NQ3dnTUN3Z01Ta3NJRzhnUFNCdVpYY2djR1VvTUN3Z01Td2dNQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Ec2diQ0E4SUhRdWJHVnVaM1JvT3lCc0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUhSYmJGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdndWNHRnlaVzUwSUNZbUlHZ3VjR0Z5Wlc1MExtbHpRbTl1WlNBbUppQW9hUzV3ZFhOb0tEQXNJREFzSURBcExDQnBMbkIxYzJnb01Dd2dNQ3dnTUNrc0lISXVjSFZ6YUNoaExuSXNJR0V1Wnl3Z1lTNWlLU3dnY2k1d2RYTm9LRzh1Y2l3Z2J5NW5MQ0J2TG1JcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiaTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUhabEtHa3NJRE1wS1N3Z2JpNXpaWFJCZEhSeWFXSjFkR1VvSW1OdmJHOXlJaXdnYm1WM0lIWmxLSElzSURNcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHNWxkeUIzZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVFTnZiRzl5Y3pvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WR1Z6ZERvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WM0pwZEdVNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUTZJQ0V3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2MzVndaWElvYml3Z1l5a3NJSFJvYVhNdWFYTlRhMlZzWlhSdmJraGxiSEJsY2lBOUlDRXdMQ0IwYUdsekxuUjVjR1VnUFNBaVUydGxiR1YwYjI1SVpXeHdaWElpTENCMGFHbHpMbkp2YjNRZ1BTQmxMQ0IwYUdsekxtSnZibVZ6SUQwZ2RDd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW05dVpYTXNJRzRnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0JwSUQwZ2JpNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrN0NpQWdJQ0FnSUNBZ2JHOHVZMjl3ZVNoMGFHbHpMbkp2YjNRdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHRWdQU0F3T3lCeUlEd2dkQzVzWlc1bmRHZzdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdkRnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdieTV3WVhKbGJuUWdKaVlnYnk1d1lYSmxiblF1YVhOQ2IyNWxJQ1ltSUNoM2NpNXRkV3gwYVhCc2VVMWhkSEpwWTJWektHeHZMQ0J2TG0xaGRISnBlRmR2Y214a0tTd2dVRzR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIZHlLU3dnYVM1elpYUllXVm9vWVN3Z1VHNHVlQ3dnVUc0dWVTd2dVRzR1ZWlrc0lIZHlMbTExYkhScGNHeDVUV0YwY21salpYTW9iRzhzSUc4dWNHRnlaVzUwTG0xaGRISnBlRmR2Y214a0tTd2dVRzR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIZHlLU3dnYVM1elpYUllXVm9vWVNBcklERXNJRkJ1TG5nc0lGQnVMbmtzSUZCdUxub3BMQ0JoSUNzOUlESXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J1TG1kbGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlLUzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0J6ZFhCbGNpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXViV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJPWkNoek1Ta2dld29nSUNBZ2JHVjBJR1VnUFNCYlhUc0tJQ0FnSUhNeExtbHpRbTl1WlNBOVBUMGdJVEFnSmlZZ1pTNXdkWE5vS0hNeEtUc0tJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCek1TNWphR2xzWkhKbGJpNXNaVzVuZEdnN0lIUXJLeWxsTG5CMWMyZ3VZWEJ3Ykhrb1pTd2dUbVFvY3pFdVkyaHBiR1J5Wlc1YmRGMHBLVHNLSUNBZ0lISmxkSFZ5YmlCbE93cDlDblpoY2lCWWRTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnZFdFb2RDd2dOQ3dnTWlrc0lISWdQU0J1WlhjZ1UyNG9ld29nSUNBZ0lDQWdJQ0FnSUNCM2FYSmxabkpoYldVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0drc0lISXBMQ0IwYUdsekxteHBaMmgwSUQwZ1pTd2dkR2hwY3k1amIyeHZjaUE5SUc0c0lIUm9hWE11ZEhsd1pTQTlJQ0pRYjJsdWRFeHBaMmgwU0dWc2NHVnlJaXdnZEdocGN5NXRZWFJ5YVhnZ1BTQjBhR2x6TG14cFoyaDBMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTUxY0dSaGRHVW9LVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXViV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViR2xuYUhRdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1N3Z2RHaHBjeTVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9kR2hwY3k1amIyeHZjaWtnT2lCMGFHbHpMbTFoZEdWeWFXRnNMbU52Ykc5eUxtTnZjSGtvZEdocGN5NXNhV2RvZEM1amIyeHZjaWs3Q2lBZ0lDQjlDbjBzSUVKNElEMGdibVYzSUVFc0lIRjFJRDBnYm1WM0lIQmxMQ0JaZFNBOUlHNWxkeUJ3WlN3Z1duVWdQU0JqYkdGemN5QmxlSFJsYm1SeklFcGxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtDa3NJSFJvYVhNdWJHbG5hSFFnUFNCbExDQjBhR2x6TG0xaGRISnBlQ0E5SUdVdWJXRjBjbWw0VjI5eWJHUXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxtTnZiRzl5SUQwZ2Jpd2dkR2hwY3k1MGVYQmxJRDBnSWtobGJXbHpjR2hsY21WTWFXZG9kRWhsYkhCbGNpSTdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnYUdFb2RDazdDaUFnSUNBZ0lDQWdhUzV5YjNSaGRHVlpLRTFoZEdndVVFa2dLaUF1TlNrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCdVpYY2dVMjRvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjNhWEpsWm5KaGJXVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1iMmM2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxtTnZiRzl5SUQwOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWJXRjBaWEpwWVd3dWRtVnlkR1Y0UTI5c2IzSnpJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrc0lHRWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLSEl1WTI5MWJuUWdLaUF6S1RzS0lDQWdJQ0FnSUNCcExuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pYUW9ZU3dnTXlrcExDQjBhR2x6TG1Ga1pDaHVaWGNnVFhRb2FTd2dkR2hwY3k1dFlYUmxjbWxoYkNrcExDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1Ob2FXeGtjbVZ1V3pCZExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1amFHbHNaSEpsYmxzd1hTNXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtTm9hV3hrY21WdVd6QmRPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbU52Ykc5eUlDRTlQU0IyYjJsa0lEQXBJSFJvYVhNdWJXRjBaWEpwWVd3dVkyOXNiM0l1YzJWMEtIUm9hWE11WTI5c2IzSXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WjJWdmJXVjBjbmt1WjJWMFFYUjBjbWxpZFhSbEtDSmpiMnh2Y2lJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J4ZFM1amIzQjVLSFJvYVhNdWJHbG5hSFF1WTI5c2IzSXBMQ0JaZFM1amIzQjVLSFJvYVhNdWJHbG5hSFF1WjNKdmRXNWtRMjlzYjNJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1amIzVnVkRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc0Z1BDQnBJQzhnTWlBL0lIRjFJRG9nV1hVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExuTmxkRmhaV2lodUxDQnlMbklzSUhJdVp5d2djaTVpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YkdsbmFIUXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2daUzVzYjI5clFYUW9Rbmd1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUm9hWE11YkdsbmFIUXViV0YwY21sNFYyOXliR1FwTG01bFoyRjBaU2dwS1RzS0lDQWdJSDBLZlN3Z1NuVWdQU0JqYkdGemN5QmxlSFJsYm1SeklHVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeE1Dd2dkQ0E5SURFd0xDQnVJRDBnTkRRM016a3lOQ3dnYVNBOUlEZzVORGM0TkRncGV3b2dJQ0FnSUNBZ0lHNGdQU0J1WlhjZ2NHVW9iaWtzSUdrZ1BTQnVaWGNnY0dVb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBJQzhnTWl3Z1lTQTlJR1VnTHlCMExDQnZJRDBnWlNBdklESXNJR01nUFNCYlhTd2diQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pDQTlJREFzSUdZZ1BTQXdMQ0J0SUQwZ0xXODdJR1FnUEQwZ2REc2daQ3NyTENCdElDczlJR0VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpMbkIxYzJnb0xXOHNJREFzSUcwc0lHOHNJREFzSUcwcExDQmpMbkIxYzJnb2JTd2dNQ3dnTFc4c0lHMHNJREFzSUc4cE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJR1FnUFQwOUlISWdQeUJ1SURvZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnWHk1MGIwRnljbUY1S0d3c0lHWXBMQ0JtSUNzOUlETXNJRjh1ZEc5QmNuSmhlU2hzTENCbUtTd2daaUFyUFNBekxDQmZMblJ2UVhKeVlYa29iQ3dnWmlrc0lHWWdLejBnTXl3Z1h5NTBiMEZ5Y21GNUtHd3NJR1lwTENCbUlDczlJRE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYm1WM0lFZGxPd29nSUNBZ0lDQWdJR2d1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCMlpTaGpMQ0F6S1Nrc0lHZ3VjMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlzSUc1bGR5QjJaU2hzTENBektTazdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQnVaWGNnZDNRb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaERiMnh2Y25NNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR2dzSUhVcExDQjBhR2x6TG5SNWNHVWdQU0FpUjNKcFpFaGxiSEJsY2lJN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVoyVnZiV1YwY25rdVpHbHpjRzl6WlNncExDQjBhR2x6TG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLZlN3Z0pIVWdQU0JqYkdGemN5QmxlSFJsYm1SeklHVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeE1Dd2dkQ0E5SURFMkxDQnVJRDBnT0N3Z2FTQTlJRFkwTENCeUlEMGdORFEzTXpreU5Dd2dZU0E5SURnNU5EYzRORGdwZXdvZ0lDQWdJQ0FnSUhJZ1BTQnVaWGNnY0dVb2Npa3NJR0VnUFNCdVpYY2djR1VvWVNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCYlhTd2dZeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQ0Z01Ta2dabTl5S0d4bGRDQjFJRDBnTURzZ2RTQThJSFE3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZFNBdklIUWdLaUFvVFdGMGFDNVFTU0FxSURJcExDQm1JRDBnVFdGMGFDNXphVzRvWkNrZ0tpQmxMQ0J0SUQwZ1RXRjBhQzVqYjNNb1pDa2dLaUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZMbkIxYzJnb01Dd2dNQ3dnTUNrc0lHOHVjSFZ6YUNobUxDQXdMQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQjFJQ1lnTVNBL0lISWdPaUJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpMbkIxYzJnb1h5NXlMQ0JmTG1jc0lGOHVZaWtzSUdNdWNIVnphQ2hmTG5Jc0lGOHVaeXdnWHk1aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTURzZ2RTQThJRzQ3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZFNBbUlERWdQeUJ5SURvZ1lTd2daaUE5SUdVZ0xTQmxJQzhnYmlBcUlIVTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlEQTdJRzBnUENCcE95QnRLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0J0SUM4Z2FTQXFJQ2hOWVhSb0xsQkpJQ29nTWlrc0lHY2dQU0JOWVhSb0xuTnBiaWhmS1NBcUlHWXNJSEFnUFNCTllYUm9MbU52Y3loZktTQXFJR1k3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2TG5CMWMyZ29aeXdnTUN3Z2NDa3NJR011Y0hWemFDaGtMbklzSUdRdVp5d2daQzVpS1N3Z1h5QTlJQ2h0SUNzZ01Ta2dMeUJwSUNvZ0tFMWhkR2d1VUVrZ0tpQXlLU3dnWnlBOUlFMWhkR2d1YzJsdUtGOHBJQ29nWml3Z2NDQTlJRTFoZEdndVkyOXpLRjhwSUNvZ1ppd2dieTV3ZFhOb0tHY3NJREFzSUhBcExDQmpMbkIxYzJnb1pDNXlMQ0JrTG1jc0lHUXVZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVaWGNnUjJVN0NpQWdJQ0FnSUNBZ2JDNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJSFpsS0c4c0lETXBLU3dnYkM1elpYUkJkSFJ5YVdKMWRHVW9JbU52Ykc5eUlpd2dibVYzSUhabEtHTXNJRE1wS1RzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUc1bGR5QjNkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUVOdmJHOXljem9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JDd2dhQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlFiMnhoY2tkeWFXUklaV3h3WlhJaU93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q24wc0lFdDFJRDBnYm1WM0lFRXNJRUZ5SUQwZ2JtVjNJRUVzSUZGMUlEMGdibVYzSUVFc0lHcDFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QktaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxteHBaMmgwSUQwZ1pTd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWpiMnh2Y2lBOUlHNHNJSFJvYVhNdWRIbHdaU0E5SUNKRWFYSmxZM1JwYjI1aGJFeHBaMmgwU0dWc2NHVnlJaXdnZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwSUQwZ01TazdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnUjJVN0NpQWdJQ0FnSUNBZ2FTNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJSFpsS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdMWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdMWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdYU3dnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJSGQwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwVUd4aGJtVWdQU0J1WlhjZ1ltNG9hU3dnY2lrc0lIUm9hWE11WVdSa0tIUm9hWE11YkdsbmFIUlFiR0Z1WlNrc0lHa2dQU0J1WlhjZ1IyVXNJR2t1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCMlpTaGJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRMQ0F6S1Nrc0lIUm9hWE11ZEdGeVoyVjBUR2x1WlNBOUlHNWxkeUJpYmlocExDQnlLU3dnZEdocGN5NWhaR1FvZEdocGN5NTBZWEpuWlhSTWFXNWxLU3dnZEdocGN5NTFjR1JoZEdVb0tUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhV2RvZEZCc1lXNWxMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXNhV2RvZEZCc1lXNWxMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LU3dnZEdocGN5NTBZWEpuWlhSTWFXNWxMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NTBZWEpuWlhSTWFXNWxMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwWjJoMExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrc0lIUm9hWE11YkdsbmFIUXVkR0Z5WjJWMExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrc0lFdDFMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMGFHbHpMbXhwWjJoMExtMWhkSEpwZUZkdmNteGtLU3dnUVhJdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJHbG5hSFF1ZEdGeVoyVjBMbTFoZEhKcGVGZHZjbXhrS1N3Z1VYVXVjM1ZpVm1WamRHOXljeWhCY2l3Z1MzVXBMQ0IwYUdsekxteHBaMmgwVUd4aGJtVXViRzl2YTBGMEtFRnlLU3dnZEdocGN5NWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lEOGdLSFJvYVhNdWJHbG5hSFJRYkdGdVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9kR2hwY3k1amIyeHZjaWtzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNXpaWFFvZEdocGN5NWpiMnh2Y2lrcElEb2dLSFJvYVhNdWJHbG5hSFJRYkdGdVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1amIzQjVLSFJvYVhNdWJHbG5hSFF1WTI5c2IzSXBMQ0IwYUdsekxuUmhjbWRsZEV4cGJtVXViV0YwWlhKcFlXd3VZMjlzYjNJdVkyOXdlU2gwYUdsekxteHBaMmgwTG1OdmJHOXlLU2tzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzVzYjI5clFYUW9RWElwTENCMGFHbHpMblJoY21kbGRFeHBibVV1YzJOaGJHVXVlaUE5SUZGMUxteGxibWQwYUNncE93b2dJQ0FnZlFwOUxDQlNjaUE5SUc1bGR5QkJMQ0J2ZENBOUlHNWxkeUJEY3l3Z1pXUWdQU0JqYkdGemN5QmxlSFJsYm1SeklHVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lFZGxMQ0J1SUQwZ2JtVjNJSGQwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklERTJOemMzTWpFMUxBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaERiMnh2Y25NNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwTENCcElEMGdXMTBzSUhJZ1BTQmJYU3dnWVNBOUlIdDlPd29nSUNBZ0lDQWdJRzhvSW00eElpd2dJbTR5SWlrc0lHOG9JbTR5SWl3Z0ltNDBJaWtzSUc4b0ltNDBJaXdnSW00eklpa3NJRzhvSW00eklpd2dJbTR4SWlrc0lHOG9JbVl4SWl3Z0ltWXlJaWtzSUc4b0ltWXlJaXdnSW1ZMElpa3NJRzhvSW1ZMElpd2dJbVl6SWlrc0lHOG9JbVl6SWl3Z0ltWXhJaWtzSUc4b0ltNHhJaXdnSW1ZeElpa3NJRzhvSW00eUlpd2dJbVl5SWlrc0lHOG9JbTR6SWl3Z0ltWXpJaWtzSUc4b0ltNDBJaXdnSW1ZMElpa3NJRzhvSW5BaUxDQWliakVpS1N3Z2J5Z2ljQ0lzSUNKdU1pSXBMQ0J2S0NKd0lpd2dJbTR6SWlrc0lHOG9JbkFpTENBaWJqUWlLU3dnYnlnaWRURWlMQ0FpZFRJaUtTd2dieWdpZFRJaUxDQWlkVE1pS1N3Z2J5Z2lkVE1pTENBaWRURWlLU3dnYnlnaVl5SXNJQ0owSWlrc0lHOG9JbkFpTENBaVl5SXBMQ0J2S0NKamJqRWlMQ0FpWTI0eUlpa3NJRzhvSW1OdU15SXNJQ0pqYmpRaUtTd2dieWdpWTJZeElpd2dJbU5tTWlJcExDQnZLQ0pqWmpNaUxDQWlZMlkwSWlrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2J5aHRMQ0JmS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR01vYlNrc0lHTW9YeWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdNb2JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcExuQjFjMmdvTUN3Z01Dd2dNQ2tzSUhJdWNIVnphQ2d3TENBd0xDQXdLU3dnWVZ0dFhTQTlQVDBnZG05cFpDQXdJQ1ltSUNoaFcyMWRJRDBnVzEwcExDQmhXMjFkTG5CMWMyZ29hUzVzWlc1bmRHZ2dMeUF6SUMwZ01TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFF1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCMlpTaHBMQ0F6S1Nrc0lIUXVjMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlzSUc1bGR5QjJaU2h5TENBektTa3NJSE4xY0dWeUtIUXNJRzRwTENCMGFHbHpMblI1Y0dVZ1BTQWlRMkZ0WlhKaFNHVnNjR1Z5SWl3Z2RHaHBjeTVqWVcxbGNtRWdQU0JsTENCMGFHbHpMbU5oYldWeVlTNTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0SUNZbUlIUm9hWE11WTJGdFpYSmhMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tTd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NXdiMmx1ZEUxaGNDQTlJR0VzSUhSb2FYTXVkWEJrWVhSbEtDazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVaWGNnY0dVb01UWTNOVFV5TURBcExDQm9JRDBnYm1WM0lIQmxLREUyTnpFeE5qZ3dLU3dnZFNBOUlHNWxkeUJ3WlNnME16YzNOU2tzSUdRZ1BTQnVaWGNnY0dVb01UWTNOemN5TVRVcExDQm1JRDBnYm1WM0lIQmxLRE16TlRVME5ETXBPd29nSUNBZ0lDQWdJSFJvYVhNdWMyVjBRMjlzYjNKektHd3NJR2dzSUhVc0lHUXNJR1lwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjlzYjNKektHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVaMlZ2YldWMGNua3VaMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBXRmxhS0RBc0lHVXVjaXdnWlM1bkxDQmxMbUlwTENCdkxuTmxkRmhaV2lneExDQmxMbklzSUdVdVp5d2daUzVpS1N3Z2J5NXpaWFJZV1Zvb01pd2daUzV5TENCbExtY3NJR1V1WWlrc0lHOHVjMlYwV0ZsYUtETXNJR1V1Y2l3Z1pTNW5MQ0JsTG1JcExDQnZMbk5sZEZoWldpZzBMQ0JsTG5Jc0lHVXVaeXdnWlM1aUtTd2dieTV6WlhSWVdWb29OU3dnWlM1eUxDQmxMbWNzSUdVdVlpa3NJRzh1YzJWMFdGbGFLRFlzSUdVdWNpd2daUzVuTENCbExtSXBMQ0J2TG5ObGRGaFpXaWczTENCbExuSXNJR1V1Wnl3Z1pTNWlLU3dnYnk1elpYUllXVm9vT0N3Z1pTNXlMQ0JsTG1jc0lHVXVZaWtzSUc4dWMyVjBXRmxhS0Rrc0lHVXVjaXdnWlM1bkxDQmxMbUlwTENCdkxuTmxkRmhaV2lneE1Dd2daUzV5TENCbExtY3NJR1V1WWlrc0lHOHVjMlYwV0ZsYUtERXhMQ0JsTG5Jc0lHVXVaeXdnWlM1aUtTd2dieTV6WlhSWVdWb29NVElzSUdVdWNpd2daUzVuTENCbExtSXBMQ0J2TG5ObGRGaFpXaWd4TXl3Z1pTNXlMQ0JsTG1jc0lHVXVZaWtzSUc4dWMyVjBXRmxhS0RFMExDQmxMbklzSUdVdVp5d2daUzVpS1N3Z2J5NXpaWFJZV1Zvb01UVXNJR1V1Y2l3Z1pTNW5MQ0JsTG1JcExDQnZMbk5sZEZoWldpZ3hOaXdnWlM1eUxDQmxMbWNzSUdVdVlpa3NJRzh1YzJWMFdGbGFLREUzTENCbExuSXNJR1V1Wnl3Z1pTNWlLU3dnYnk1elpYUllXVm9vTVRnc0lHVXVjaXdnWlM1bkxDQmxMbUlwTENCdkxuTmxkRmhaV2lneE9Td2daUzV5TENCbExtY3NJR1V1WWlrc0lHOHVjMlYwV0ZsYUtESXdMQ0JsTG5Jc0lHVXVaeXdnWlM1aUtTd2dieTV6WlhSWVdWb29NakVzSUdVdWNpd2daUzVuTENCbExtSXBMQ0J2TG5ObGRGaFpXaWd5TWl3Z1pTNXlMQ0JsTG1jc0lHVXVZaWtzSUc4dWMyVjBXRmxhS0RJekxDQmxMbklzSUdVdVp5d2daUzVpS1N3Z2J5NXpaWFJZV1Zvb01qUXNJSFF1Y2l3Z2RDNW5MQ0IwTG1JcExDQnZMbk5sZEZoWldpZ3lOU3dnZEM1eUxDQjBMbWNzSUhRdVlpa3NJRzh1YzJWMFdGbGFLREkyTENCMExuSXNJSFF1Wnl3Z2RDNWlLU3dnYnk1elpYUllXVm9vTWpjc0lIUXVjaXdnZEM1bkxDQjBMbUlwTENCdkxuTmxkRmhaV2lneU9Dd2dkQzV5TENCMExtY3NJSFF1WWlrc0lHOHVjMlYwV0ZsYUtESTVMQ0IwTG5Jc0lIUXVaeXdnZEM1aUtTd2dieTV6WlhSWVdWb29NekFzSUhRdWNpd2dkQzVuTENCMExtSXBMQ0J2TG5ObGRGaFpXaWd6TVN3Z2RDNXlMQ0IwTG1jc0lIUXVZaWtzSUc4dWMyVjBXRmxhS0RNeUxDQnVMbklzSUc0dVp5d2diaTVpS1N3Z2J5NXpaWFJZV1Zvb016TXNJRzR1Y2l3Z2JpNW5MQ0J1TG1JcExDQnZMbk5sZEZoWldpZ3pOQ3dnYmk1eUxDQnVMbWNzSUc0dVlpa3NJRzh1YzJWMFdGbGFLRE0xTENCdUxuSXNJRzR1Wnl3Z2JpNWlLU3dnYnk1elpYUllXVm9vTXpZc0lHNHVjaXdnYmk1bkxDQnVMbUlwTENCdkxuTmxkRmhaV2lnek55d2diaTV5TENCdUxtY3NJRzR1WWlrc0lHOHVjMlYwV0ZsYUtETTRMQ0JwTG5Jc0lHa3VaeXdnYVM1aUtTd2dieTV6WlhSWVdWb29NemtzSUdrdWNpd2dhUzVuTENCcExtSXBMQ0J2TG5ObGRGaFpXaWcwTUN3Z2NpNXlMQ0J5TG1jc0lISXVZaWtzSUc4dWMyVjBXRmxhS0RReExDQnlMbklzSUhJdVp5d2djaTVpS1N3Z2J5NXpaWFJZV1Zvb05ESXNJSEl1Y2l3Z2NpNW5MQ0J5TG1JcExDQnZMbk5sZEZoWldpZzBNeXdnY2k1eUxDQnlMbWNzSUhJdVlpa3NJRzh1YzJWMFdGbGFLRFEwTENCeUxuSXNJSEl1Wnl3Z2NpNWlLU3dnYnk1elpYUllXVm9vTkRVc0lISXVjaXdnY2k1bkxDQnlMbUlwTENCdkxuTmxkRmhaV2lnME5pd2djaTV5TENCeUxtY3NJSEl1WWlrc0lHOHVjMlYwV0ZsYUtEUTNMQ0J5TG5Jc0lISXVaeXdnY2k1aUtTd2dieTV6WlhSWVdWb29ORGdzSUhJdWNpd2djaTVuTENCeUxtSXBMQ0J2TG5ObGRGaFpXaWcwT1N3Z2NpNXlMQ0J5TG1jc0lISXVZaWtzSUc4dWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWdmJXVjBjbmtzSUhRZ1BTQjBhR2x6TG5CdmFXNTBUV0Z3TENCdUlEMGdNU3dnYVNBOUlERTdDaUFnSUNBZ0lDQWdiM1F1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbU5oYldWeVlTNXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlNrc0lHaDBLQ0pqSWl3Z2RDd2daU3dnYjNRc0lEQXNJREFzSUMweEtTd2dhSFFvSW5RaUxDQjBMQ0JsTENCdmRDd2dNQ3dnTUN3Z01Ta3NJR2gwS0NKdU1TSXNJSFFzSUdVc0lHOTBMQ0F0Yml3Z0xXa3NJQzB4S1N3Z2FIUW9JbTR5SWl3Z2RDd2daU3dnYjNRc0lHNHNJQzFwTENBdE1Ta3NJR2gwS0NKdU15SXNJSFFzSUdVc0lHOTBMQ0F0Yml3Z2FTd2dMVEVwTENCb2RDZ2lialFpTENCMExDQmxMQ0J2ZEN3Z2Jpd2dhU3dnTFRFcExDQm9kQ2dpWmpFaUxDQjBMQ0JsTENCdmRDd2dMVzRzSUMxcExDQXhLU3dnYUhRb0ltWXlJaXdnZEN3Z1pTd2diM1FzSUc0c0lDMXBMQ0F4S1N3Z2FIUW9JbVl6SWl3Z2RDd2daU3dnYjNRc0lDMXVMQ0JwTENBeEtTd2dhSFFvSW1ZMElpd2dkQ3dnWlN3Z2IzUXNJRzRzSUdrc0lERXBMQ0JvZENnaWRURWlMQ0IwTENCbExDQnZkQ3dnYmlBcUlDNDNMQ0JwSUNvZ01TNHhMQ0F0TVNrc0lHaDBLQ0oxTWlJc0lIUXNJR1VzSUc5MExDQXRiaUFxSUM0M0xDQnBJQ29nTVM0eExDQXRNU2tzSUdoMEtDSjFNeUlzSUhRc0lHVXNJRzkwTENBd0xDQnBJQ29nTWl3Z0xURXBMQ0JvZENnaVkyWXhJaXdnZEN3Z1pTd2diM1FzSUMxdUxDQXdMQ0F4S1N3Z2FIUW9JbU5tTWlJc0lIUXNJR1VzSUc5MExDQnVMQ0F3TENBeEtTd2dhSFFvSW1ObU15SXNJSFFzSUdVc0lHOTBMQ0F3TENBdGFTd2dNU2tzSUdoMEtDSmpaalFpTENCMExDQmxMQ0J2ZEN3Z01Dd2dhU3dnTVNrc0lHaDBLQ0pqYmpFaUxDQjBMQ0JsTENCdmRDd2dMVzRzSURBc0lDMHhLU3dnYUhRb0ltTnVNaUlzSUhRc0lHVXNJRzkwTENCdUxDQXdMQ0F0TVNrc0lHaDBLQ0pqYmpNaUxDQjBMQ0JsTENCdmRDd2dNQ3dnTFdrc0lDMHhLU3dnYUhRb0ltTnVOQ0lzSUhRc0lHVXNJRzkwTENBd0xDQnBMQ0F0TVNrc0lHVXVaMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJcExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVoyVnZiV1YwY25rdVpHbHpjRzl6WlNncExDQjBhR2x6TG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z2FIUW9jekVzSUdVc0lIUXNJRzRzSUdrc0lISXNJR0VwSUhzS0lDQWdJRkp5TG5ObGRDaHBMQ0J5TENCaEtTNTFibkJ5YjJwbFkzUW9iaWs3Q2lBZ0lDQnNaWFFnYnlBOUlHVmJjekZkT3dvZ0lDQWdhV1lnS0c4Z0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCaklEMGdkQzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTUN3Z2FDQTlJRzh1YkdWdVozUm9PeUJzSUR3Z2FEc2diQ3NyS1dNdWMyVjBXRmxhS0c5YmJGMHNJRkp5TG5nc0lGSnlMbmtzSUZKeUxub3BPd29nSUNBZ2ZRcDlDblpoY2lCRGNpQTlJRzVsZHlCUmRDd2dkR1FnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1Z1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TmpjM05qazJNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ1ZXbHVkREUyUVhKeVlYa29Xd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNDaUFnSUNBZ0lDQWdYU2tzSUdrZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtEZ2dLaUF6S1N3Z2NpQTlJRzVsZHlCSFpUc0tJQ0FnSUNBZ0lDQnlMbk5sZEVsdVpHVjRLRzVsZHlCbGRDaHVMQ0F4S1Nrc0lISXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJsZENocExDQXpLU2tzSUhOMWNHVnlLSElzSUc1bGR5QjNkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnZEdocGN5NXZZbXBsWTNRZ1BTQmxMQ0IwYUdsekxuUjVjR1VnUFNBaVFtOTRTR1ZzY0dWeUlpd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdWRYQmtZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzaElaV3h3WlhJNklDNTFjR1JoZEdVb0tTQm9ZWE1nYm04Z2JHOXVaMlZ5SUdGeVozVnRaVzUwY3k0aUtTd2dkR2hwY3k1dlltcGxZM1FnSVQwOUlIWnZhV1FnTUNBbUppQkRjaTV6WlhSR2NtOXRUMkpxWldOMEtIUm9hWE11YjJKcVpXTjBLU3dnUTNJdWFYTkZiWEIwZVNncEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCRGNpNXRhVzRzSUc0Z1BTQkRjaTV0WVhnc0lHa2dQU0IwYUdsekxtZGxiMjFsZEhKNUxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJSElnUFNCcExtRnljbUY1T3dvZ0lDQWdJQ0FnSUhKYk1GMGdQU0J1TG5nc0lISmJNVjBnUFNCdUxua3NJSEpiTWwwZ1BTQnVMbm9zSUhKYk0xMGdQU0IwTG5nc0lISmJORjBnUFNCdUxua3NJSEpiTlYwZ1BTQnVMbm9zSUhKYk5sMGdQU0IwTG5nc0lISmJOMTBnUFNCMExua3NJSEpiT0YwZ1BTQnVMbm9zSUhKYk9WMGdQU0J1TG5nc0lISmJNVEJkSUQwZ2RDNTVMQ0J5V3pFeFhTQTlJRzR1ZWl3Z2Nsc3hNbDBnUFNCdUxuZ3NJSEpiTVROZElEMGdiaTU1TENCeVd6RTBYU0E5SUhRdWVpd2djbHN4TlYwZ1BTQjBMbmdzSUhKYk1UWmRJRDBnYmk1NUxDQnlXekUzWFNBOUlIUXVlaXdnY2xzeE9GMGdQU0IwTG5nc0lISmJNVGxkSUQwZ2RDNTVMQ0J5V3pJd1hTQTlJSFF1ZWl3Z2Nsc3lNVjBnUFNCdUxuZ3NJSEpiTWpKZElEMGdkQzU1TENCeVd6SXpYU0E5SUhRdWVpd2dhUzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtZGxiMjFsZEhKNUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlU5aWFtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViMkpxWldOMElEMGdaU3dnZEdocGN5NTFjR1JoZEdVb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUhRcExDQjBhR2x6TG05aWFtVmpkQ0E5SUdVdWIySnFaV04wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNuMHNJRzVrSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJsYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBJRDBnTVRZM056WTVOakFwZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lGVnBiblF4TmtGeWNtRjVLRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdOd29nSUNBZ0lDQWdJRjBwTENCcElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4Q2lBZ0lDQWdJQ0FnWFN3Z2NpQTlJRzVsZHlCSFpUc0tJQ0FnSUNBZ0lDQnlMbk5sZEVsdVpHVjRLRzVsZHlCbGRDaHVMQ0F4S1Nrc0lISXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUIyWlNocExDQXpLU2tzSUhOMWNHVnlLSElzSUc1bGR5QjNkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnZEdocGN5NWliM2dnUFNCbExDQjBhR2x6TG5SNWNHVWdQU0FpUW05NE0waGxiSEJsY2lJc0lIUm9hWE11WjJWdmJXVjBjbmt1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUp2ZURzS0lDQWdJQ0FnSUNCMExtbHpSVzF3ZEhrb0tTQjhmQ0FvZEM1blpYUkRaVzUwWlhJb2RHaHBjeTV3YjNOcGRHbHZiaWtzSUhRdVoyVjBVMmw2WlNoMGFHbHpMbk5qWVd4bEtTd2dkR2hwY3k1elkyRnNaUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VOU2tzSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lIUm9hWE11YldGMFpYSnBZV3d1WkdsemNHOXpaU2dwT3dvZ0lDQWdmUXA5TENCcFpDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ltNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENBOUlERXNJRzRnUFNBeE5qYzNOamsyTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUxDQnlJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkTENCaElEMGdibVYzSUVkbE93b2dJQ0FnSUNBZ0lHRXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUIyWlNoeUxDQXpLU2tzSUdFdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tzSUhOMWNHVnlLR0VzSUc1bGR5QjNkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnZEdocGN5NTBlWEJsSUQwZ0lsQnNZVzVsU0dWc2NHVnlJaXdnZEdocGN5NXdiR0Z1WlNBOUlHVXNJSFJvYVhNdWMybDZaU0E5SUhRN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkTENCaklEMGdibVYzSUVkbE93b2dJQ0FnSUNBZ0lHTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUIyWlNodkxDQXpLU2tzSUdNdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tzSUhSb2FYTXVZV1JrS0c1bGR5Qk5kQ2hqTENCdVpYY2dVMjRvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTGpJc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emNHRnlaVzUwT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2twS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnZjMmwwYVc5dUxuTmxkQ2d3TENBd0xDQXdLU3dnZEdocGN5NXpZMkZzWlM1elpYUW9MalVnS2lCMGFHbHpMbk5wZW1Vc0lDNDFJQ29nZEdocGN5NXphWHBsTENBeEtTd2dkR2hwY3k1c2IyOXJRWFFvZEdocGN5NXdiR0Z1WlM1dWIzSnRZV3dwTENCMGFHbHpMblJ5WVc1emJHRjBaVm9vTFhSb2FYTXVjR3hoYm1VdVkyOXVjM1JoYm5RcExDQnpkWEJsY2k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NW5aVzl0WlhSeWVTNWthWE53YjNObEtDa3NJSFJvYVhNdWJXRjBaWEpwWVd3dVpHbHpjRzl6WlNncExDQjBhR2x6TG1Ob2FXeGtjbVZ1V3pCZExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1amFHbHNaSEpsYmxzd1hTNXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNuMHNJSE5rSUQwZ2JtVjNJRUVzSUZCeUxDQm9ieXdnY21RZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVwbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1FTZ3dMQ0F3TENBeEtTd2dkQ0E5SUc1bGR5QkJLREFzSURBc0lEQXBMQ0J1SUQwZ01Td2dhU0E5SURFMk56YzJPVFl3TENCeUlEMGdiaUFxSUM0eUxDQmhJRDBnY2lBcUlDNHlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVFYSnliM2RJWld4d1pYSWlMQ0JRY2lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hRY2lBOUlHNWxkeUJIWlN3Z1VISXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUIyWlNoYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNCZExDQXpLU2tzSUdodklEMGdibVYzSUU1ektEQXNJQzQxTENBeExDQTFMQ0F4S1N3Z2FHOHVkSEpoYm5Oc1lYUmxLREFzSUMwdU5Td2dNQ2twTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb2RDa3NJSFJvYVhNdWJHbHVaU0E5SUc1bGR5QmliaWhRY2l3Z2JtVjNJSGQwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2twTENCMGFHbHpMbXhwYm1VdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxtRmtaQ2gwYUdsekxteHBibVVwTENCMGFHbHpMbU52Ym1VZ1BTQnVaWGNnVFhRb2FHOHNJRzVsZHlCVGJpaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTd2dkR2hwY3k1amIyNWxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVoWkdRb2RHaHBjeTVqYjI1bEtTd2dkR2hwY3k1elpYUkVhWEpsWTNScGIyNG9aU2tzSUhSb2FYTXVjMlYwVEdWdVozUm9LRzRzSUhJc0lHRXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJHbHlaV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNTVJRDRnTGprNU9UazVLU0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwS0RBc0lEQXNJREFzSURFcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHVXVlU0E4SUMwdU9UazVPVGtwSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV6WlhRb01Td2dNQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5rTG5ObGRDaGxMbm9zSURBc0lDMWxMbmdwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVlXTnZjeWhsTG5rcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwUm5KdmJVRjRhWE5CYm1kc1pTaHpaQ3dnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjMlYwVEdWdVozUm9LR1VzSUhRZ1BTQmxJQ29nTGpJc0lHNGdQU0IwSUNvZ0xqSXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBibVV1YzJOaGJHVXVjMlYwS0RFc0lFMWhkR2d1YldGNEtERmxMVFFzSUdVZ0xTQjBLU3dnTVNrc0lIUm9hWE11YkdsdVpTNTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTVqYjI1bExuTmpZV3hsTG5ObGRDaHVMQ0IwTENCdUtTd2dkR2hwY3k1amIyNWxMbkJ2YzJsMGFXOXVMbmtnUFNCbExDQjBhR2x6TG1OdmJtVXVkWEJrWVhSbFRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENobEtTd2dkR2hwY3k1amIyNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxuTmxkQ2hsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJQ0V4S1N3Z2RHaHBjeTVzYVc1bExtTnZjSGtvWlM1c2FXNWxLU3dnZEdocGN5NWpiMjVsTG1OdmNIa29aUzVqYjI1bEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXNWxMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXNhVzVsTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVqYjI1bExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1amIyNWxMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtmU3dnWVdRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4S1hzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWlFvZ0lDQWdJQ0FnSUYwc0lHNGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUM0MkxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXVOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xqWXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZExDQnBJRDBnYm1WM0lFZGxPd29nSUNBZ0lDQWdJR2t1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCMlpTaDBMQ0F6S1Nrc0lHa3VjMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlzSUc1bGR5QjJaU2h1TENBektTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnZDNRb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaERiMnh2Y25NNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR2tzSUhJcExDQjBhR2x6TG5SNWNHVWdQU0FpUVhobGMwaGxiSEJsY2lJN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUhCbExDQnlJRDBnZEdocGN5NW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUxtRnljbUY1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwTG5ObGRDaGxLU3dnYVM1MGIwRnljbUY1S0hJc0lEQXBMQ0JwTG5SdlFYSnlZWGtvY2l3Z015a3NJR2t1YzJWMEtIUXBMQ0JwTG5SdlFYSnlZWGtvY2l3Z05pa3NJR2t1ZEc5QmNuSmhlU2h5TENBNUtTd2dhUzV6WlhRb2Jpa3NJR2t1ZEc5QmNuSmhlU2h5TENBeE1pa3NJR2t1ZEc5QmNuSmhlU2h5TENBeE5Ta3NJSFJvYVhNdVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN5NWpiMnh2Y2k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNuMHNJRzlrSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMmhoY0dWUVlYUm9JaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJ3WlN3Z2RHaHBjeTV6ZFdKUVlYUm9jeUE5SUZ0ZExDQjBhR2x6TG1OMWNuSmxiblJRWVhSb0lEMGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHMXZkbVZVYnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnljbVZ1ZEZCaGRHZ2dQU0J1WlhjZ2Fta3NJSFJvYVhNdWMzVmlVR0YwYUhNdWNIVnphQ2gwYUdsekxtTjFjbkpsYm5SUVlYUm9LU3dnZEdocGN5NWpkWEp5Wlc1MFVHRjBhQzV0YjNabFZHOG9aU3dnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc2FXNWxWRzhvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuSmxiblJRWVhSb0xteHBibVZVYnlobExDQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEYxWVdSeVlYUnBZME4xY25abFZHOG9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUVlYUm9MbkYxWVdSeVlYUnBZME4xY25abFZHOG9aU3dnZEN3Z2Jpd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JpWlhwcFpYSkRkWEoyWlZSdktHVXNJSFFzSUc0c0lHa3NJSElzSUdFcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKeVpXNTBVR0YwYUM1aVpYcHBaWEpEZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2tzSUhJc0lHRXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM0JzYVc1bFZHaHlkU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2d1YzNCc2FXNWxWR2h5ZFNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZVMmhoY0dWektHVXBJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUIwS0hBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTUN3Z2VTQTlJSEF1YkdWdVozUm9PeUI0SUR3Z2VUc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnY0Z0NFhTd2dkeUE5SUc1bGR5QkdianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGN1WTNWeWRtVnpJRDBnWWk1amRYSjJaWE1zSUhZdWNIVnphQ2gzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZGpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JpaHdMQ0IyS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdkaTVzWlc1bmRHZ3NJSGtnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JpSUQwZ2VDQXRJREVzSUhjZ1BTQXdPeUIzSUR3Z2VEc2dZaUE5SUhjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVWlBOUlIWmJZbDBzSUVrZ1BTQjJXM2RkTENCTklEMGdTUzU0SUMwZ1VpNTRMQ0JVSUQwZ1NTNTVJQzBnVWk1NU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTFoZEdndVlXSnpLRlFwSUQ0Z1RuVnRZbVZ5TGtWUVUwbE1UMDRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVkNBOElEQWdKaVlnS0ZJZ1BTQjJXM2RkTENCTklEMGdMVTBzSUVrZ1BTQjJXMkpkTENCVUlEMGdMVlFwTENCd0xua2dQQ0JTTG5rZ2ZId2djQzU1SUQ0Z1NTNTVLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jQzU1SUQwOVBTQlNMbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQXVlQ0E5UFQwZ1VpNTRLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0JVSUNvZ0tIQXVlQ0F0SUZJdWVDa2dMU0JOSUNvZ0tIQXVlU0F0SUZJdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hQSUQwOVBTQXdLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoUElEd2dNQ2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtnUFNBaGVUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdMbmtnSVQwOUlGSXVlU2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRWt1ZUNBOFBTQndMbmdnSmlZZ2NDNTRJRHc5SUZJdWVDQjhmQ0JTTG5nZ1BEMGdjQzU0SUNZbUlIQXVlQ0E4UFNCSkxuZ3BJSEpsZEhWeWJpQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0I1Ymk1cGMwTnNiMk5yVjJselpTd2djaUE5SUhSb2FYTXVjM1ZpVUdGMGFITTdDaUFnSUNBZ0lDQWdhV1lnS0hJdWJHVnVaM1JvSUQwOVBTQXdLU0J5WlhSMWNtNGdXMTA3Q2lBZ0lDQWdJQ0FnYkdWMElHRXNJRzhzSUdNc0lHd2dQU0JiWFRzS0lDQWdJQ0FnSUNCcFppQW9jaTVzWlc1bmRHZ2dQVDA5SURFcElISmxkSFZ5YmlCdklEMGdjbHN3WFN3Z1l5QTlJRzVsZHlCR2Jpd2dZeTVqZFhKMlpYTWdQU0J2TG1OMWNuWmxjeXdnYkM1d2RYTm9LR01wTENCc093b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ0lXa29jbHN3WFM1blpYUlFiMmx1ZEhNb0tTazdDaUFnSUNBZ0lDQWdhQ0E5SUdVZ1B5QWhhQ0E2SUdnN0NpQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCYlhTd2daQ0E5SUZ0ZExDQm1JRDBnVzEwc0lHMGdQU0F3TENCZk93b2dJQ0FnSUNBZ0lHUmJiVjBnUFNCMmIybGtJREFzSUdaYmJWMGdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdMQ0IySUQwZ2NpNXNaVzVuZEdnN0lIQWdQQ0IyT3lCd0t5c3BieUE5SUhKYmNGMHNJRjhnUFNCdkxtZGxkRkJ2YVc1MGN5Z3BMQ0JoSUQwZ2FTaGZLU3dnWVNBOUlHVWdQeUFoWVNBNklHRXNJR0VnUHlBb0lXZ2dKaVlnWkZ0dFhTQW1KaUJ0S3lzc0lHUmJiVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE02SUc1bGR5QkdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NEb2dYd29nSUNBZ0lDQWdJSDBzSUdSYmJWMHVjeTVqZFhKMlpYTWdQU0J2TG1OMWNuWmxjeXdnYUNBbUppQnRLeXNzSUdaYmJWMGdQU0JiWFNrZ09pQm1XMjFkTG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCb09pQnZMQW9nSUNBZ0lDQWdJQ0FnSUNCd09pQmZXekJkQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2FXWWdLQ0ZrV3pCZEtTQnlaWFIxY200Z2RDaHlLVHNLSUNBZ0lDQWdJQ0JwWmlBb1pDNXNaVzVuZEdnZ1BpQXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ0lURXNJSFlnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGdnUFNBd0xDQjVJRDBnWkM1c1pXNW5kR2c3SUhnZ1BDQjVPeUI0S3lzcGRWdDRYU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGdnUFNBd0xDQjVJRDBnWkM1c1pXNW5kR2c3SUhnZ1BDQjVPeUI0S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCbVczaGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNJRDBnTURzZ2R5QThJR0l1YkdWdVozUm9PeUIzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCU0lEMGdZbHQzWFN3Z1NTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1RTQTlJREE3SUUwZ1BDQmtMbXhsYm1kMGFEc2dUU3NyS1c0b1VpNXdMQ0JrVzAxZExuQXBJQ1ltSUNoNElDRTlQU0JOSUNZbUlIWXJLeXdnU1NBL0lDaEpJRDBnSVRFc0lIVmJUVjB1Y0hWemFDaFNLU2tnT2lCd0lEMGdJVEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFa2dKaVlnZFZ0NFhTNXdkWE5vS0ZJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIWWdQaUF3SUNZbUlIQWdQVDA5SUNFeElDWW1JQ2htSUQwZ2RTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCbk93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREFzSUhZZ1BTQmtMbXhsYm1kMGFEc2djQ0E4SUhZN0lIQXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTWdQU0JrVzNCZExuTXNJR3d1Y0hWemFDaGpLU3dnWnlBOUlHWmJjRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREFzSUhrZ1BTQm5MbXhsYm1kMGFEc2dlQ0E4SUhrN0lIZ3JLeWxqTG1odmJHVnpMbkIxYzJnb1oxdDRYUzVvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3N0NpQWdJQ0I5Q24wN0NuUjVjR1Z2WmlCZlgxUklVa1ZGWDBSRlZsUlBUMHhUWDE4Z1BDQWlkU0lnSmlZZ1gxOVVTRkpGUlY5RVJWWlVUMDlNVTE5ZkxtUnBjM0JoZEdOb1JYWmxiblFvYm1WM0lFTjFjM1J2YlVWMlpXNTBLQ0p5WldkcGMzUmxjaUlzSUhzS0lDQWdJR1JsZEdGcGJEb2dld29nSUNBZ0lDQWdJSEpsZG1semFXOXVPaUJJWXdvZ0lDQWdmUXA5S1NrN0NuUjVjR1Z2WmlCM2FXNWtiM2NnUENBaWRTSWdKaVlnS0hkcGJtUnZkeTVmWDFSSVVrVkZYMThnUHlCamIyNXpiMnhsTG5kaGNtNG9JbGRCVWs1SlRrYzZJRTExYkhScGNHeGxJR2x1YzNSaGJtTmxjeUJ2WmlCVWFISmxaUzVxY3lCaVpXbHVaeUJwYlhCdmNuUmxaQzRpS1NBNklIZHBibVJ2ZHk1ZlgxUklVa1ZGWDE4Z1BTQklZeWs3Q21OdmJuTjBJRzF2WkNBOUlIc0tJQ0FnSUVGRFJWTkdhV3h0YVdOVWIyNWxUV0Z3Y0dsdVp6b2diV1lzQ2lBZ0lDQkJaR1JGY1hWaGRHbHZiam9nUW1rc0NpQWdJQ0JCWkdSUGNHVnlZWFJwYjI0NklIVm1MQW9nSUNBZ1FXUmthWFJwZG1WQmJtbHRZWFJwYjI1Q2JHVnVaRTF2WkdVNklIaGtMQW9nSUNBZ1FXUmthWFJwZG1WQ2JHVnVaR2x1WnpvZ1lXd3NDaUFnSUNCQmJIQm9ZVVp2Y20xaGREb2dkbVlzQ2lBZ0lDQkJiSGRoZVhORGIyMXdZWEpsT2lCV1ppd0tJQ0FnSUVGc2QyRjVjMFJsY0hSb09pQnpaaXdLSUNBZ0lFRnNkMkY1YzFOMFpXNWphV3hHZFc1ak9pQkpaaXdLSUNBZ0lFRnRZbWxsYm5STWFXZG9kRG9nUTJNc0NpQWdJQ0JCYm1sdFlYUnBiMjVCWTNScGIyNDZJRlpqTEFvZ0lDQWdRVzVwYldGMGFXOXVRMnhwY0RvZ2FYTXNDaUFnSUNCQmJtbHRZWFJwYjI1TWIyRmtaWEk2SUdGMUxBb2dJQ0FnUVc1cGJXRjBhVzl1VFdsNFpYSTZJRU4xTEFvZ0lDQWdRVzVwYldGMGFXOXVUMkpxWldOMFIzSnZkWEE2SUZKMUxBb2dJQ0FnUVc1cGJXRjBhVzl1VlhScGJITTZJRk4yTEFvZ0lDQWdRWEpqUTNWeWRtVTZJR3R2TEFvZ0lDQWdRWEp5WVhsRFlXMWxjbUU2SUZSdkxBb2dJQ0FnUVhKeWIzZElaV3h3WlhJNklISmtMQW9nSUNBZ1FYVmthVzg2SUVaakxBb2dJQ0FnUVhWa2FXOUJibUZzZVhObGNqb2dRWFVzQ2lBZ0lDQkJkV1JwYjBOdmJuUmxlSFE2SUY5aExBb2dJQ0FnUVhWa2FXOU1hWE4wWlc1bGNqb2dSWFVzQ2lBZ0lDQkJkV1JwYjB4dllXUmxjam9nZUhVc0NpQWdJQ0JCZUdWelNHVnNjR1Z5T2lCaFpDd0tJQ0FnSUVKaFkydFRhV1JsT2lCR2RDd0tJQ0FnSUVKaGMybGpSR1Z3ZEdoUVlXTnJhVzVuT2lCRFppd0tJQ0FnSUVKaGMybGpVMmhoWkc5M1RXRndPaUJJZUN3S0lDQWdJRUp2Ym1VNklIUmhMQW9nSUNBZ1FtOXZiR1ZoYmt0bGVXWnlZVzFsVkhKaFkyczZJRlp1TEFvZ0lDQWdRbTk0TWpvZ2VuVXNDaUFnSUNCQ2IzZ3pPaUJSZEN3S0lDQWdJRUp2ZUROSVpXeHdaWEk2SUc1a0xBb2dJQ0FnUW05NFIyVnZiV1YwY25rNklFcHBMQW9nSUNBZ1FtOTRTR1ZzY0dWeU9pQjBaQ3dLSUNBZ0lFSjFabVpsY2tGMGRISnBZblYwWlRvZ1pYUXNDaUFnSUNCQ2RXWm1aWEpIWlc5dFpYUnllVG9nUjJVc0NpQWdJQ0JDZFdabVpYSkhaVzl0WlhSeWVVeHZZV1JsY2pvZ1RtTXNDaUFnSUNCQ2VYUmxWSGx3WlRvZ1gyWXNDaUFnSUNCRFlXTm9aVG9nYzNNc0NpQWdJQ0JEWVcxbGNtRTZJRU56TEFvZ0lDQWdRMkZ0WlhKaFNHVnNjR1Z5T2lCbFpDd0tJQ0FnSUVOaGJuWmhjMVJsZUhSMWNtVTZJR3BvTEFvZ0lDQWdRMkZ3YzNWc1pVZGxiMjFsZEhKNU9pQnhieXdLSUNBZ0lFTmhkRzExYkd4U2IyMURkWEoyWlRNNklFaHZMQW9nSUNBZ1EybHVaVzl1Vkc5dVpVMWhjSEJwYm1jNklIQm1MQW9nSUNBZ1EybHlZMnhsUjJWdmJXVjBjbms2SUZsdkxBb2dJQ0FnUTJ4aGJYQlViMFZrWjJWWGNtRndjR2x1WnpvZ1NYUXNDaUFnSUNCRGJHOWphem9nVDJNc0NpQWdJQ0JEYjJ4dmNqb2djR1VzQ2lBZ0lDQkRiMnh2Y2t0bGVXWnlZVzFsVkhKaFkyczZJSEJoTEFvZ0lDQWdRMjlzYjNKTllXNWhaMlZ0Wlc1ME9pQlJaU3dLSUNBZ0lFTnZiWEJ5WlhOelpXUkJjbkpoZVZSbGVIUjFjbVU2SUV0b0xBb2dJQ0FnUTI5dGNISmxjM05sWkVOMVltVlVaWGgwZFhKbE9pQlJhQ3dLSUNBZ0lFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbE9pQlZjeXdLSUNBZ0lFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbFRHOWhaR1Z5T2lCdmRTd0tJQ0FnSUVOdmJtVkhaVzl0WlhSeWVUb2dXbThzQ2lBZ0lDQkRkV0psUTJGdFpYSmhPaUJmYnl3S0lDQWdJRU4xWW1WU1pXWnNaV04wYVc5dVRXRndjR2x1WnpvZ2VtNHNDaUFnSUNCRGRXSmxVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJR05wTEFvZ0lDQWdRM1ZpWlZSbGVIUjFjbVU2SUV0cExBb2dJQ0FnUTNWaVpWUmxlSFIxY21WTWIyRmtaWEk2SUdOMUxBb2dJQ0FnUTNWaVpWVldVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRlp6TEFvZ0lDQWdRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUb2dhV0VzQ2lBZ0lDQkRkV0pwWTBKbGVtbGxja04xY25abE16b2dSMjhzQ2lBZ0lDQkRkV0pwWTBsdWRHVnljRzlzWVc1ME9pQjRZeXdLSUNBZ0lFTjFiR3hHWVdObFFtRmphem9nY213c0NpQWdJQ0JEZFd4c1JtRmpaVVp5YjI1ME9pQklaQ3dLSUNBZ0lFTjFiR3hHWVdObFJuSnZiblJDWVdOck9pQnJlQ3dLSUNBZ0lFTjFiR3hHWVdObFRtOXVaVG9nYTJRc0NpQWdJQ0JEZFhKMlpUb2dXblFzQ2lBZ0lDQkRkWEoyWlZCaGRHZzZJRmh2TEFvZ0lDQWdRM1Z6ZEc5dFFteGxibVJwYm1jNklGZGtMQW9nSUNBZ1EzVnpkRzl0Vkc5dVpVMWhjSEJwYm1jNklHZG1MQW9nSUNBZ1EzbHNhVzVrWlhKSFpXOXRaWFJ5ZVRvZ1RuTXNDaUFnSUNCRGVXeHBibVJ5YVdOaGJEb2dSblVzQ2lBZ0lDQkVZWFJoTTBSVVpYaDBkWEpsT2lCeGNpd0tJQ0FnSUVSaGRHRkJjbkpoZVZSbGVIUjFjbVU2SUVGekxBb2dJQ0FnUkdGMFlWUmxlSFIxY21VNklHOXBMQW9nSUNBZ1JHRjBZVlJsZUhSMWNtVk1iMkZrWlhJNklHeDFMQW9nSUNBZ1JHRjBZVlYwYVd4ek9pQk5kaXdLSUNBZ0lFUmxZM0psYldWdWRGTjBaVzVqYVd4UGNEb2daWFlzQ2lBZ0lDQkVaV055WlcxbGJuUlhjbUZ3VTNSbGJtTnBiRTl3T2lCdWRpd0tJQ0FnSUVSbFptRjFiSFJNYjJGa2FXNW5UV0Z1WVdkbGNqb2dSWGdzQ2lBZ0lDQkVaWEIwYUVadmNtMWhkRG9nYzJrc0NpQWdJQ0JFWlhCMGFGTjBaVzVqYVd4R2IzSnRZWFE2SUZscExBb2dJQ0FnUkdWd2RHaFVaWGgwZFhKbE9pQjNieXdLSUNBZ0lFUnBjbVZqZEdsdmJtRnNUR2xuYUhRNklGSmpMQW9nSUNBZ1JHbHlaV04wYVc5dVlXeE1hV2RvZEVobGJIQmxjam9nYW5Vc0NpQWdJQ0JFYVhOamNtVjBaVWx1ZEdWeWNHOXNZVzUwT2lCMll5d0tJQ0FnSUVScGMzQnNZWGxRTTBOdmJHOXlVM0JoWTJVNklIRmpMQW9nSUNBZ1JHOWtaV05oYUdWa2NtOXVSMlZ2YldWMGNuazZJRXB2TEFvZ0lDQWdSRzkxWW14bFUybGtaVG9nWjI0c0NpQWdJQ0JFYzNSQmJIQm9ZVVpoWTNSdmNqb2dTMlFzQ2lBZ0lDQkVjM1JEYjJ4dmNrWmhZM1J2Y2pvZ2FtUXNDaUFnSUNCRWVXNWhiV2xqUTI5d2VWVnpZV2RsT2lCZmRpd0tJQ0FnSUVSNWJtRnRhV05FY21GM1ZYTmhaMlU2SUhWMkxBb2dJQ0FnUkhsdVlXMXBZMUpsWVdSVmMyRm5aVG9nY0hZc0NpQWdJQ0JGWkdkbGMwZGxiMjFsZEhKNU9pQWtieXdLSUNBZ0lFVnNiR2x3YzJWRGRYSjJaVG9nUkhNc0NpQWdJQ0JGY1hWaGJFTnZiWEJoY21VNklFNW1MQW9nSUNBZ1JYRjFZV3hFWlhCMGFEb2dZV1lzQ2lBZ0lDQkZjWFZoYkZOMFpXNWphV3hHZFc1ak9pQmhkaXdLSUNBZ0lFVnhkV2x5WldOMFlXNW5kV3hoY2xKbFpteGxZM1JwYjI1TllYQndhVzVuT2lCSmNpd0tJQ0FnSUVWeGRXbHlaV04wWVc1bmRXeGhjbEpsWm5KaFkzUnBiMjVOWVhCd2FXNW5PaUJWY2l3S0lDQWdJRVYxYkdWeU9pQlpjaXdLSUNBZ0lFVjJaVzUwUkdsemNHRjBZMmhsY2pvZ2MyNHNDaUFnSUNCRmVIUnlkV1JsUjJWdmJXVjBjbms2SUdwdkxBb2dJQ0FnUm1sc1pVeHZZV1JsY2pvZ2NtNHNDaUFnSUNCR2JHOWhkREUyUW5WbVptVnlRWFIwY21saWRYUmxPaUJwYUN3S0lDQWdJRVpzYjJGME16SkNkV1ptWlhKQmRIUnlhV0oxZEdVNklIWmxMQW9nSUNBZ1JteHZZWFEyTkVKMVptWmxja0YwZEhKcFluVjBaVG9nYzJnc0NpQWdJQ0JHYkc5aGRGUjVjR1U2SUhodUxBb2dJQ0FnUm05bk9pQk1ieXdLSUNBZ0lFWnZaMFY0Y0RJNklGQnZMQW9nSUNBZ1JuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE9pQWthQ3dLSUNBZ0lFWnliMjUwVTJsa1pUb2dRbTRzQ2lBZ0lDQkdjblZ6ZEhWdE9pQlFjeXdLSUNBZ0lFZE1RblZtWm1WeVFYUjBjbWxpZFhSbE9pQlZkU3dLSUNBZ0lFZE1VMHd4T2lCMmRpd0tJQ0FnSUVkTVUwd3pPaUJQYkN3S0lDQWdJRWR5WldGMFpYSkRiMjF3WVhKbE9pQkdaaXdLSUNBZ0lFZHlaV0YwWlhKRVpYQjBhRG9nWTJZc0NpQWdJQ0JIY21WaGRHVnlSWEYxWVd4RGIyMXdZWEpsT2lCNlppd0tJQ0FnSUVkeVpXRjBaWEpGY1hWaGJFUmxjSFJvT2lCdlppd0tJQ0FnSUVkeVpXRjBaWEpGY1hWaGJGTjBaVzVqYVd4R2RXNWpPaUJvZGl3S0lDQWdJRWR5WldGMFpYSlRkR1Z1WTJsc1JuVnVZem9nWTNZc0NpQWdJQ0JIY21sa1NHVnNjR1Z5T2lCS2RTd0tJQ0FnSUVkeWIzVndPaUIwYVN3S0lDQWdJRWhoYkdaR2JHOWhkRlI1Y0dVNklGUnpMQW9nSUNBZ1NHVnRhWE53YUdWeVpVeHBaMmgwT2lCVFl5d0tJQ0FnSUVobGJXbHpjR2hsY21WTWFXZG9kRWhsYkhCbGNqb2dXblVzQ2lBZ0lDQkpZMjl6WVdobFpISnZia2RsYjIxbGRISjVPaUJsWXl3S0lDQWdJRWx0WVdkbFFtbDBiV0Z3VEc5aFpHVnlPaUJmZFN3S0lDQWdJRWx0WVdkbFRHOWhaR1Z5T2lCeWN5d0tJQ0FnSUVsdFlXZGxWWFJwYkhNNklGaHlMQW9nSUNBZ1NXNWpjbVZ0Wlc1MFUzUmxibU5wYkU5d09pQnFlQ3dLSUNBZ0lFbHVZM0psYldWdWRGZHlZWEJUZEdWdVkybHNUM0E2SUhSMkxBb2dJQ0FnU1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxPaUIxYVN3S0lDQWdJRWx1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNU9pQkVZeXdLSUNBZ0lFbHVjM1JoYm1ObFpFbHVkR1Z5YkdWaGRtVmtRblZtWm1WeU9pQkpkU3dLSUNBZ0lFbHVjM1JoYm1ObFpFMWxjMmc2SUVadkxBb2dJQ0FnU1c1ME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVNklIUm9MQW9nSUNBZ1NXNTBNekpDZFdabVpYSkJkSFJ5YVdKMWRHVTZJRzVvTEFvZ0lDQWdTVzUwT0VKMVptWmxja0YwZEhKcFluVjBaVG9nVVd3c0NpQWdJQ0JKYm5SVWVYQmxPaUJrWkN3S0lDQWdJRWx1ZEdWeWJHVmhkbVZrUW5WbVptVnlPaUJKY3l3S0lDQWdJRWx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxPaUJSYVN3S0lDQWdJRWx1ZEdWeWNHOXNZVzUwT2lCbGN5d0tJQ0FnSUVsdWRHVnljRzlzWVhSbFJHbHpZM0psZEdVNklFOXlMQW9nSUNBZ1NXNTBaWEp3YjJ4aGRHVk1hVzVsWVhJNklFWnlMQW9nSUNBZ1NXNTBaWEp3YjJ4aGRHVlRiVzl2ZEdnNklFeGhMQW9nSUNBZ1NXNTJaWEowVTNSbGJtTnBiRTl3T2lCcGRpd0tJQ0FnSUV0bFpYQlRkR1Z1WTJsc1QzQTZJRWxoTEFvZ0lDQWdTMlY1Wm5KaGJXVlVjbUZqYXpvZ1NuUXNDaUFnSUNCTVQwUTZJRVJ2TEFvZ0lDQWdUR0YwYUdWSFpXOXRaWFJ5ZVRvZ2JHRXNDaUFnSUNCTVlYbGxjbk02SUZKekxBb2dJQ0FnVEdWemMwTnZiWEJoY21VNklFUm1MQW9nSUNBZ1RHVnpjMFJsY0hSb09pQnlaaXdLSUNBZ0lFeGxjM05GY1hWaGJFTnZiWEJoY21VNklFOW1MQW9nSUNBZ1RHVnpjMFZ4ZFdGc1JHVndkR2c2SUhWdkxBb2dJQ0FnVEdWemMwVnhkV0ZzVTNSbGJtTnBiRVoxYm1NNklHOTJMQW9nSUNBZ1RHVnpjMU4wWlc1amFXeEdkVzVqT2lCeWRpd0tJQ0FnSUV4cFoyaDBPaUJGYml3S0lDQWdJRXhwWjJoMFVISnZZbVU2SUVsakxBb2dJQ0FnVEdsdVpUb2dZbTRzQ2lBZ0lDQk1hVzVsTXpvZ2EzVXNDaUFnSUNCTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkRvZ2QzUXNDaUFnSUNCTWFXNWxRM1Z5ZG1VNklITmhMQW9nSUNBZ1RHbHVaVU4xY25abE16b2dWMjhzQ2lBZ0lDQk1hVzVsUkdGemFHVmtUV0YwWlhKcFlXdzZJR2RqTEFvZ0lDQWdUR2x1WlV4dmIzQTZJRUp2TEFvZ0lDQWdUR2x1WlZObFoyMWxiblJ6T2lCbGJpd0tJQ0FnSUV4cGJtVmhja1JwYzNCc1lYbFFNME52Ykc5eVUzQmhZMlU2SUhaaExBb2dJQ0FnVEdsdVpXRnlSVzVqYjJScGJtYzZJSFprTEFvZ0lDQWdUR2x1WldGeVJtbHNkR1Z5T2lCdGRDd0tJQ0FnSUV4cGJtVmhja2x1ZEdWeWNHOXNZVzUwT2lCbVlTd0tJQ0FnSUV4cGJtVmhjazFwY0UxaGNFeHBibVZoY2tacGJIUmxjam9nV1hnc0NpQWdJQ0JNYVc1bFlYSk5hWEJOWVhCT1pXRnlaWE4wUm1sc2RHVnlPaUJ4ZUN3S0lDQWdJRXhwYm1WaGNrMXBjRzFoY0V4cGJtVmhja1pwYkhSbGNqb2diR2tzQ2lBZ0lDQk1hVzVsWVhKTmFYQnRZWEJPWldGeVpYTjBSbWxzZEdWeU9pQjFaQ3dLSUNBZ0lFeHBibVZoY2xOU1IwSkRiMnh2Y2xOd1lXTmxPaUJOYml3S0lDQWdJRXhwYm1WaGNsUnZibVZOWVhCd2FXNW5PaUJrWml3S0lDQWdJRXhwYm1WaGNsUnlZVzV6Wm1WeU9pQjZjaXdLSUNBZ0lFeHZZV1JsY2pvZ1JIUXNDaUFnSUNCTWIyRmtaWEpWZEdsc2N6b2daMkVzQ2lBZ0lDQk1iMkZrYVc1blRXRnVZV2RsY2pvZ2JXRXNDaUFnSUNCTWIyOXdUMjVqWlRvZ2QyWXNDaUFnSUNCTWIyOXdVR2x1WjFCdmJtYzZJRkptTEFvZ0lDQWdURzl2Y0ZKbGNHVmhkRG9nUVdZc0NpQWdJQ0JNZFcxcGJtRnVZMlZCYkhCb1lVWnZjbTFoZERvZ1RXWXNDaUFnSUNCTWRXMXBibUZ1WTJWR2IzSnRZWFE2SUhsbUxBb2dJQ0FnVFU5VlUwVTZJSHA0TEFvZ0lDQWdUV0YwWlhKcFlXdzZJR0owTEFvZ0lDQWdUV0YwWlhKcFlXeE1iMkZrWlhJNklGVmpMQW9nSUNBZ1RXRjBhRlYwYVd4ek9pQjVkaXdLSUNBZ0lFMWhkSEpwZURNNklFaGxMQW9nSUNBZ1RXRjBjbWw0TkRvZ2VtVXNDaUFnSUNCTllYaEZjWFZoZEdsdmJqb2dhR3dzQ2lBZ0lDQk5aWE5vT2lCTmRDd0tJQ0FnSUUxbGMyaENZWE5wWTAxaGRHVnlhV0ZzT2lCVGJpd0tJQ0FnSUUxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzT2lCUmNpd0tJQ0FnSUUxbGMyaEVhWE4wWVc1alpVMWhkR1Z5YVdGc09pQnFjaXdLSUNBZ0lFMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXdzZJSEJqTEFvZ0lDQWdUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNPaUJ0WXl3S0lDQWdJRTFsYzJoT2IzSnRZV3hOWVhSbGNtbGhiRG9nWm1Nc0NpQWdJQ0JOWlhOb1VHaHZibWROWVhSbGNtbGhiRG9nZFdNc0NpQWdJQ0JOWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkRvZ2FHTXNDaUFnSUNCTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJEb2daR0VzQ2lBZ0lDQk5aWE5vVkc5dmJrMWhkR1Z5YVdGc09pQmtZeXdLSUNBZ0lFMXBia1Z4ZFdGMGFXOXVPaUJzYkN3S0lDQWdJRTFwY25KdmNtVmtVbVZ3WldGMFYzSmhjSEJwYm1jNklFNXlMQW9nSUNBZ1RXbDRUM0JsY21GMGFXOXVPaUJvWml3S0lDQWdJRTExYkhScGNHeDVRbXhsYm1ScGJtYzZJR05zTEFvZ0lDQWdUWFZzZEdsd2JIbFBjR1Z5WVhScGIyNDZJSGhoTEFvZ0lDQWdUbVZoY21WemRFWnBiSFJsY2pvZ2NIUXNDaUFnSUNCT1pXRnlaWE4wVFdsd1RXRndUR2x1WldGeVJtbHNkR1Z5T2lCWWVDd0tJQ0FnSUU1bFlYSmxjM1JOYVhCTllYQk9aV0Z5WlhOMFJtbHNkR1Z5T2lCWGVDd0tJQ0FnSUU1bFlYSmxjM1JOYVhCdFlYQk1hVzVsWVhKR2FXeDBaWEk2SUV4eUxBb2dJQ0FnVG1WaGNtVnpkRTFwY0cxaGNFNWxZWEpsYzNSR2FXeDBaWEk2SUdadkxBb2dJQ0FnVG1WMlpYSkRiMjF3WVhKbE9pQlZaaXdLSUNBZ0lFNWxkbVZ5UkdWd2RHZzZJRzVtTEFvZ0lDQWdUbVYyWlhKVGRHVnVZMmxzUm5WdVl6b2djM1lzQ2lBZ0lDQk9iMEpzWlc1a2FXNW5PaUJFYml3S0lDQWdJRTV2UTI5c2IzSlRjR0ZqWlRvZ1dIUXNDaUFnSUNCT2IxUnZibVZOWVhCd2FXNW5PaUJPYml3S0lDQWdJRTV2Y20xaGJFRnVhVzFoZEdsdmJrSnNaVzVrVFc5a1pUb2dXR01zQ2lBZ0lDQk9iM0p0WVd4Q2JHVnVaR2x1WnpvZ1Yya3NDaUFnSUNCT2IzUkZjWFZoYkVOdmJYQmhjbVU2SUVKbUxBb2dJQ0FnVG05MFJYRjFZV3hFWlhCMGFEb2diR1lzQ2lBZ0lDQk9iM1JGY1hWaGJGTjBaVzVqYVd4R2RXNWpPaUJzZGl3S0lDQWdJRTUxYldKbGNrdGxlV1p5WVcxbFZISmhZMnM2SUhSekxBb2dJQ0FnVDJKcVpXTjBNMFE2SUVwbExBb2dJQ0FnVDJKcVpXTjBURzloWkdWeU9pQndkU3dLSUNBZ0lFOWlhbVZqZEZOd1lXTmxUbTl5YldGc1RXRndPaUJNWml3S0lDQWdJRTlqZEdGb1pXUnliMjVIWlc5dFpYUnllVG9nYUdFc0NpQWdJQ0JQYm1WR1lXTjBiM0k2SUZwa0xBb2dJQ0FnVDI1bFRXbHVkWE5FYzNSQmJIQm9ZVVpoWTNSdmNqb2dVV1FzQ2lBZ0lDQlBibVZOYVc1MWMwUnpkRU52Ykc5eVJtRmpkRzl5T2lCbFppd0tJQ0FnSUU5dVpVMXBiblZ6VTNKalFXeHdhR0ZHWVdOMGIzSTZJR2hrTEFvZ0lDQWdUMjVsVFdsdWRYTlRjbU5EYjJ4dmNrWmhZM1J2Y2pvZ0pHUXNDaUFnSUNCUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FNklFeHpMQW9nSUNBZ1VETlFjbWx0WVhKcFpYTTZJR3R5TEFvZ0lDQWdVRU5HVTJoaFpHOTNUV0Z3T2lCalpDd0tJQ0FnSUZCRFJsTnZablJUYUdGa2IzZE5ZWEE2SUVka0xBb2dJQ0FnVUUxU1JVMUhaVzVsY21GMGIzSTZJRXR5TEFvZ0lDQWdVR0YwYURvZ2Fta3NDaUFnSUNCUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVRvZ2VYUXNDaUFnSUNCUWJHRnVaVG9nYlc0c0NpQWdJQ0JRYkdGdVpVZGxiMjFsZEhKNU9pQWtjaXdLSUNBZ0lGQnNZVzVsU0dWc2NHVnlPaUJwWkN3S0lDQWdJRkJ2YVc1MFRHbG5hSFE2SUhkakxBb2dJQ0FnVUc5cGJuUk1hV2RvZEVobGJIQmxjam9nV0hVc0NpQWdJQ0JRYjJsdWRITTZJRlp2TEFvZ0lDQWdVRzlwYm5SelRXRjBaWEpwWVd3NklHNWhMQW9nSUNBZ1VHOXNZWEpIY21sa1NHVnNjR1Z5T2lBa2RTd0tJQ0FnSUZCdmJIbG9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1pHa3NDaUFnSUNCUWIzTnBkR2x2Ym1Gc1FYVmthVzg2SUhkMUxBb2dJQ0FnVUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJMWlN3S0lDQWdJRkJ5YjNCbGNuUjVUV2w0WlhJNklFSmpMQW9nSUNBZ1VYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVTZJSEpoTEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVV6T2lCaFlTd0tJQ0FnSUZGMVlYUmxjbTVwYjI0NklGVjBMQW9nSUNBZ1VYVmhkR1Z5Ym1sdmJrdGxlV1p5WVcxbFZISmhZMnM2SUhCcExBb2dJQ0FnVVhWaGRHVnlibWx2Ymt4cGJtVmhja2x1ZEdWeWNHOXNZVzUwT2lCNVl5d0tJQ0FnSUZKRlJGOUhVa1ZGVGw5U1IxUkRNbDlHYjNKdFlYUTZJRVJzTEFvZ0lDQWdVa1ZFWDFKSFZFTXhYMFp2Y20xaGREb2dWR1lzQ2lBZ0lDQlNSVlpKVTBsUFRqb2dTR01zQ2lBZ0lDQlNSMEpCUkdWd2RHaFFZV05yYVc1bk9pQlFaaXdLSUNBZ0lGSkhRa0ZHYjNKdFlYUTZJRmQwTEFvZ0lDQWdVa2RDUVVsdWRHVm5aWEpHYjNKdFlYUTZJRjlrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV3ZURFd1gwWnZjbTFoZERvZ1Vtd3NDaUFnSUNCU1IwSkJYMEZUVkVOZk1UQjROVjlHYjNKdFlYUTZJRlJzTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV3ZURaZlJtOXliV0YwT2lCM2JDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1IZzRYMFp2Y20xaGREb2dRV3dzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZNVEo0TVRCZlJtOXliV0YwT2lCRGJDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1uZ3hNbDlHYjNKdFlYUTZJRkJzTEFvZ0lDQWdVa2RDUVY5QlUxUkRYelI0TkY5R2IzSnRZWFE2SUY5c0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpWNE5GOUdiM0p0WVhRNklIaHNMQW9nSUNBZ1VrZENRVjlCVTFSRFh6VjROVjlHYjNKdFlYUTZJSFpzTEFvZ0lDQWdVa2RDUVY5QlUxUkRYelo0TlY5R2IzSnRZWFE2SUhsc0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpaNE5sOUdiM0p0WVhRNklFMXNMQW9nSUNBZ1VrZENRVjlCVTFSRFh6aDROVjlHYjNKdFlYUTZJRk5zTEFvZ0lDQWdVa2RDUVY5QlUxUkRYemg0Tmw5R2IzSnRZWFE2SUdKc0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpoNE9GOUdiM0p0WVhRNklFVnNMQW9nSUNBZ1VrZENRVjlDVUZSRFgwWnZjbTFoZERvZ1VHRXNDaUFnSUNCU1IwSkJYMFZVUXpKZlJVRkRYMFp2Y20xaGREb2daMndzQ2lBZ0lDQlNSMEpCWDFCV1VsUkRYekpDVUZCV01WOUdiM0p0WVhRNklIQnNMQW9nSUNBZ1VrZENRVjlRVmxKVVExODBRbEJRVmpGZlJtOXliV0YwT2lCbWJDd0tJQ0FnSUZKSFFrRmZVek5VUTE5RVdGUXhYMFp2Y20xaGREb2dRV0VzQ2lBZ0lDQlNSMEpCWDFNelZFTmZSRmhVTTE5R2IzSnRZWFE2SUZKaExBb2dJQ0FnVWtkQ1FWOVRNMVJEWDBSWVZEVmZSbTl5YldGME9pQkRZU3dLSUNBZ0lGSkhRbDlDVUZSRFgxTkpSMDVGUkY5R2IzSnRZWFE2SUV4c0xBb2dJQ0FnVWtkQ1gwSlFWRU5mVlU1VFNVZE9SVVJmUm05eWJXRjBPaUJKYkN3S0lDQWdJRkpIUWw5RlZFTXhYMFp2Y20xaGREb2dSV1lzQ2lBZ0lDQlNSMEpmUlZSRE1sOUdiM0p0WVhRNklHMXNMQW9nSUNBZ1VrZENYMUJXVWxSRFh6SkNVRkJXTVY5R2IzSnRZWFE2SUdSc0xBb2dJQ0FnVWtkQ1gxQldVbFJEWHpSQ1VGQldNVjlHYjNKdFlYUTZJSFZzTEFvZ0lDQWdVa2RDWDFNelZFTmZSRmhVTVY5R2IzSnRZWFE2SUhkaExBb2dJQ0FnVWtkR2IzSnRZWFE2SUdKbUxBb2dJQ0FnVWtkSmJuUmxaMlZ5Um05eWJXRjBPaUJuWkN3S0lDQWdJRkpoZDFOb1lXUmxjazFoZEdWeWFXRnNPaUJzWXl3S0lDQWdJRkpoZVRvZ2FHa3NDaUFnSUNCU1lYbGpZWE4wWlhJNklFUjFMQW9nSUNBZ1VtVmpOekE1VUhKcGJXRnlhV1Z6T2lCV2Npd0tJQ0FnSUZKbFkzUkJjbVZoVEdsbmFIUTZJRkJqTEFvZ0lDQWdVbVZrUm05eWJXRjBPaUJUWml3S0lDQWdJRkpsWkVsdWRHVm5aWEpHYjNKdFlYUTZJRzFrTEFvZ0lDQWdVbVZwYm1oaGNtUlViMjVsVFdGd2NHbHVaem9nWm1Zc0NpQWdJQ0JTWlc1a1pYSlVZWEpuWlhRNklHZHZMQW9nSUNBZ1VtVndaV0YwVjNKaGNIQnBibWM2SUVSeUxBb2dJQ0FnVW1Wd2JHRmpaVk4wWlc1amFXeFBjRG9nVVhnc0NpQWdJQ0JTWlhabGNuTmxVM1ZpZEhKaFkzUkZjWFZoZEdsdmJqb2djV1FzQ2lBZ0lDQlNhVzVuUjJWdmJXVjBjbms2SUhSakxBb2dJQ0FnVTBsSFRrVkVYMUpGUkY5SFVrVkZUbDlTUjFSRE1sOUdiM0p0WVhRNklFNXNMQW9nSUNBZ1UwbEhUa1ZFWDFKRlJGOVNSMVJETVY5R2IzSnRZWFE2SUZWc0xBb2dJQ0FnVTFKSFFrTnZiRzl5VTNCaFkyVTZJSFowTEFvZ0lDQWdVMUpIUWxSeVlXNXpabVZ5T2lCdWRDd0tJQ0FnSUZOalpXNWxPaUJKYnl3S0lDQWdJRk5vWVdSbGNrTm9kVzVyT2lCclpTd0tJQ0FnSUZOb1lXUmxja3hwWWpvZ2JtNHNDaUFnSUNCVGFHRmtaWEpOWVhSbGNtbGhiRG9nYW5Rc0NpQWdJQ0JUYUdGa2IzZE5ZWFJsY21saGJEb2dZMk1zQ2lBZ0lDQlRhR0Z3WlRvZ1JtNHNDaUFnSUNCVGFHRndaVWRsYjIxbGRISjVPaUJ1WXl3S0lDQWdJRk5vWVhCbFVHRjBhRG9nYjJRc0NpQWdJQ0JUYUdGd1pWVjBhV3h6T2lCNWJpd0tJQ0FnSUZOb2IzSjBWSGx3WlRvZ2VHWXNDaUFnSUNCVGEyVnNaWFJ2YmpvZ1QyOHNDaUFnSUNCVGEyVnNaWFJ2YmtobGJIQmxjam9nVjNVc0NpQWdJQ0JUYTJsdWJtVmtUV1Z6YURvZ1RtOHNDaUFnSUNCVGIzVnlZMlU2SUVsdUxBb2dJQ0FnVTNCb1pYSmxPaUJaZEN3S0lDQWdJRk53YUdWeVpVZGxiMjFsZEhKNU9pQjFZU3dLSUNBZ0lGTndhR1Z5YVdOaGJEb2dUM1VzQ2lBZ0lDQlRjR2hsY21sallXeElZWEp0YjI1cFkzTXpPaUJNWXl3S0lDQWdJRk53YkdsdVpVTjFjblpsT2lCdllTd0tJQ0FnSUZOd2IzUk1hV2RvZERvZ1JXTXNDaUFnSUNCVGNHOTBUR2xuYUhSSVpXeHdaWEk2SUVkMUxBb2dJQ0FnVTNCeWFYUmxPaUJWYnl3S0lDQWdJRk53Y21sMFpVMWhkR1Z5YVdGc09pQmxZU3dLSUNBZ0lGTnlZMEZzY0doaFJtRmpkRzl5T2lCc1pDd0tJQ0FnSUZOeVkwRnNjR2hoVTJGMGRYSmhkR1ZHWVdOMGIzSTZJSFJtTEFvZ0lDQWdVM0pqUTI5c2IzSkdZV04wYjNJNklFcGtMQW9nSUNBZ1UzUmhkR2xqUTI5d2VWVnpZV2RsT2lCbmRpd0tJQ0FnSUZOMFlYUnBZMFJ5WVhkVmMyRm5aVG9nU0hJc0NpQWdJQ0JUZEdGMGFXTlNaV0ZrVlhOaFoyVTZJR1oyTEFvZ0lDQWdVM1JsY21WdlEyRnRaWEpoT2lCTmRTd0tJQ0FnSUZOMGNtVmhiVU52Y0hsVmMyRm5aVG9nZUhZc0NpQWdJQ0JUZEhKbFlXMUVjbUYzVlhOaFoyVTZJR1IyTEFvZ0lDQWdVM1J5WldGdFVtVmhaRlZ6WVdkbE9pQnRkaXdLSUNBZ0lGTjBjbWx1WjB0bGVXWnlZVzFsVkhKaFkyczZJR3R1TEFvZ0lDQWdVM1ZpZEhKaFkzUkZjWFZoZEdsdmJqb2dXR1FzQ2lBZ0lDQlRkV0owY21GamRHbDJaVUpzWlc1a2FXNW5PaUJ2YkN3S0lDQWdJRlJQVlVOSU9pQldlQ3dLSUNBZ0lGUmhibWRsYm5SVGNHRmpaVTV2Y20xaGJFMWhjRG9nYldrc0NpQWdJQ0JVWlhSeVlXaGxaSEp2YmtkbGIyMWxkSEo1T2lCcFl5d0tJQ0FnSUZSbGVIUjFjbVU2SUZOMExBb2dJQ0FnVkdWNGRIVnlaVXh2WVdSbGNqb2dhSFVzQ2lBZ0lDQlViM0oxYzBkbGIyMWxkSEo1T2lCell5d0tJQ0FnSUZSdmNuVnpTMjV2ZEVkbGIyMWxkSEo1T2lCeVl5d0tJQ0FnSUZSeWFXRnVaMnhsT2lCVmJpd0tJQ0FnSUZSeWFXRnVaMnhsUm1GdVJISmhkMDF2WkdVNklDUjRMQW9nSUNBZ1ZISnBZVzVuYkdWVGRISnBjRVJ5WVhkTmIyUmxPaUJLZUN3S0lDQWdJRlJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxPaUJhZUN3S0lDQWdJRlIxWW1WSFpXOXRaWFJ5ZVRvZ1lXTXNDaUFnSUNCVWQyOVFZWE56Ukc5MVlteGxVMmxrWlRvZ1IzZ3NDaUFnSUNCVlZrMWhjSEJwYm1jNklFZGpMQW9nSUNBZ1ZXbHVkREUyUW5WbVptVnlRWFIwY21saWRYUmxPaUJhY2l3S0lDQWdJRlZwYm5Rek1rSjFabVpsY2tGMGRISnBZblYwWlRvZ1NuSXNDaUFnSUNCVmFXNTBPRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dhbXdzQ2lBZ0lDQlZhVzUwT0VOc1lXMXdaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVTZJR1ZvTEFvZ0lDQWdWVzVwWm05eWJUb2dVSFVzQ2lBZ0lDQlZibWxtYjNKdGMwZHliM1Z3T2lCTWRTd0tJQ0FnSUZWdWFXWnZjbTF6VEdsaU9pQnNaU3dLSUNBZ0lGVnVhV1p2Y20xelZYUnBiSE02SUhod0xBb2dJQ0FnVlc1emFXZHVaV1JDZVhSbFZIbHdaVG9nVDI0c0NpQWdJQ0JWYm5OcFoyNWxaRWx1ZERJME9GUjVjR1U2SUdscExBb2dJQ0FnVlc1emFXZHVaV1JKYm5SVWVYQmxPaUJNYml3S0lDQWdJRlZ1YzJsbmJtVmtVMmh2Y25RME5EUTBWSGx3WlRvZ1ptUXNDaUFnSUNCVmJuTnBaMjVsWkZOb2IzSjBOVFUxTVZSNWNHVTZJSEJrTEFvZ0lDQWdWVzV6YVdkdVpXUlRhRzl5ZEZSNWNHVTZJRmRqTEFvZ0lDQWdWbE5OVTJoaFpHOTNUV0Z3T2lCd2Jpd0tJQ0FnSUZabFkzUnZjakk2SUZvc0NpQWdJQ0JXWldOMGIzSXpPaUJCTEFvZ0lDQWdWbVZqZEc5eU5Eb2dhbVVzQ2lBZ0lDQldaV04wYjNKTFpYbG1jbUZ0WlZSeVlXTnJPaUJ1Y3l3S0lDQWdJRlpwWkdWdlZHVjRkSFZ5WlRvZ1NtZ3NDaUFnSUNCWFpXSkhUREZTWlc1a1pYSmxjam9nUTI4c0NpQWdJQ0JYWldKSFRETkVVbVZ1WkdWeVZHRnlaMlYwT2lCSWJDd0tJQ0FnSUZkbFlrZE1RWEp5WVhsU1pXNWtaWEpVWVhKblpYUTZJR3RzTEFvZ0lDQWdWMlZpUjB4RGIyOXlaR2x1WVhSbFUzbHpkR1Z0T2lCMmJpd0tJQ0FnSUZkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGREb2dlRzhzQ2lBZ0lDQlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN6b2dSMndzQ2lBZ0lDQlhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2djWFFzQ2lBZ0lDQlhaV0pIVEZKbGJtUmxjbVZ5T2lCU2J5d0tJQ0FnSUZkbFlrZE1WWFJwYkhNNklGWXdMQW9nSUNBZ1YyVmlSMUJWUTI5dmNtUnBibUYwWlZONWMzUmxiVG9nUjNJc0NpQWdJQ0JYYVhKbFpuSmhiV1ZIWlc5dFpYUnllVG9nYjJNc0NpQWdJQ0JYY21Gd1FYSnZkVzVrUlc1a2FXNW5PaUJDY2l3S0lDQWdJRnBsY205RGRYSjJZWFIxY21WRmJtUnBibWM2SUhwcExBb2dJQ0FnV21WeWIwWmhZM1J2Y2pvZ1dXUXNDaUFnSUNCYVpYSnZVMnh2Y0dWRmJtUnBibWM2SUZacExBb2dJQ0FnV21WeWIxTjBaVzVqYVd4UGNEb2dTM2dzQ2lBZ0lDQmZVMUpIUWtGR2IzSnRZWFE2SUhCdkxBb2dJQ0FnWTNKbFlYUmxRMkZ1ZG1GelJXeGxiV1Z1ZERvZ2RIQXNDaUFnSUNCelVrZENSVzVqYjJScGJtYzZJSEpwQ24wN0NtWjFibU4wYVc5dUlHZGxkRmRsWWtkTVJYSnliM0pOWlhOellXZGxLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHZGxkRVZ5Y205eVRXVnpjMkZuWlNneEtUc0tmUXBtZFc1amRHbHZiaUJuWlhSRmNuSnZjazFsYzNOaFoyVW9kbVZ5YzJsdmJpa2dld29nSUNBZ2RtRnlJRzVoYldWeklEMGdld29nSUNBZ0lDQWdJREU2SUNKWFpXSkhUQ0lzQ2lBZ0lDQWdJQ0FnTWpvZ0lsZGxZa2RNSURJaUNpQWdJQ0I5T3dvZ0lDQWdkbUZ5SUdOdmJuUmxlSFJ6SUQwZ2V3b2dJQ0FnSUNBZ0lERTZJSGRwYm1SdmR5NVhaV0pIVEZKbGJtUmxjbWx1WjBOdmJuUmxlSFFzQ2lBZ0lDQWdJQ0FnTWpvZ2QybHVaRzkzTGxkbFlrZE1NbEpsYm1SbGNtbHVaME52Ym5SbGVIUUtJQ0FnSUgwN0NpQWdJQ0IyWVhJZ2JXVnpjMkZuWlNBOUlDZFpiM1Z5SUNRd0lHUnZaWE1nYm05MElITmxaVzBnZEc4Z2MzVndjRzl5ZENBOFlTQm9jbVZtUFNKb2RIUndPaTh2YTJoeWIyNXZjeTV2Y21jdmQyVmlaMnd2ZDJscmFTOUhaWFIwYVc1blgyRmZWMlZpUjB4ZlNXMXdiR1Z0Wlc1MFlYUnBiMjRpSUhOMGVXeGxQU0pqYjJ4dmNqb2pNREF3SWo0a01Ud3ZZVDRuT3dvZ0lDQWdkbUZ5SUdWc1pXMWxiblFnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ0prYVhZaUtUc0tJQ0FnSUdWc1pXMWxiblF1YVdRZ1BTQWlkMlZpWjJ4dFpYTnpZV2RsSWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdVptOXVkRVpoYldsc2VTQTlJQ0p0YjI1dmMzQmhZMlVpT3dvZ0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1bWIyNTBVMmw2WlNBOUlDSXhNM0I0SWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdVptOXVkRmRsYVdkb2RDQTlJQ0p1YjNKdFlXd2lPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzUwWlhoMFFXeHBaMjRnUFNBaVkyVnVkR1Z5SWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdVltRmphMmR5YjNWdVpDQTlJQ0lqWm1abUlqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVZMjlzYjNJZ1BTQWlJekF3TUNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExuQmhaR1JwYm1jZ1BTQWlNUzQxWlcwaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNTNhV1IwYUNBOUlDSTBNREJ3ZUNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtMWhjbWRwYmlBOUlDSTFaVzBnWVhWMGJ5QXdJanNLSUNBZ0lHbG1JQ2hqYjI1MFpYaDBjMXQyWlhKemFXOXVYU2tnZXdvZ0lDQWdJQ0FnSUcxbGMzTmhaMlVnUFNCdFpYTnpZV2RsTG5KbGNHeGhZMlVvSWlRd0lpd2dJbWR5WVhCb2FXTnpJR05oY21RaUtUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYldWemMyRm5aU0E5SUcxbGMzTmhaMlV1Y21Wd2JHRmpaU2dpSkRBaUxDQWlZbkp2ZDNObGNpSXBPd29nSUNBZ2ZRb2dJQ0FnYldWemMyRm5aU0E5SUcxbGMzTmhaMlV1Y21Wd2JHRmpaU2dpSkRFaUxDQnVZVzFsYzF0MlpYSnphVzl1WFNrN0NpQWdJQ0JsYkdWdFpXNTBMbWx1Ym1WeVNGUk5UQ0E5SUcxbGMzTmhaMlU3Q2lBZ0lDQnlaWFIxY200Z1pXeGxiV1Z1ZERzS2ZRcG1kVzVqZEdsdmJpQjBlWEJsWkdGeWNtRjVYM1J2WDNabFkzUjVjR1VvZEhsd1pXUkJjbkpoZVN3Z2JtUnBiU2tnZXdvZ0lDQWdhV1lnS0c1a2FXMGdQVDA5SURFcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0ltWnNiMkYwSWpzS0lDQWdJSDBnWld4elpTQnBaaUFvZEhsd1pXUkJjbkpoZVNCcGJuTjBZVzVqWlc5bUlFWnNiMkYwTXpKQmNuSmhlU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFpZG1WaklpQXJJRzVrYVcwN0NpQWdJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVmtRWEp5WVhrZ2FXNXpkR0Z1WTJWdlppQkpiblF6TWtGeWNtRjVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0pwZG1WaklpQXJJRzVrYVcwN0NpQWdJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVmtRWEp5WVhrZ2FXNXpkR0Z1WTJWdlppQlZhVzUwTXpKQmNuSmhlU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFpZFhabFl5SWdLeUJ1WkdsdE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdZWFIwY21saWRYUmxYM1I1Y0dVb1lYUjBjbWxpZFhSbEtTQjdDaUFnSUNCcFppQW9ZWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFI1Y0dWa1lYSnlZWGxmZEc5ZmRtVmpkSGx3WlNoaGRIUnlhV0oxZEdVdVlYSnlZWGtzSUdGMGRISnBZblYwWlM1cGRHVnRVMmw2WlNrN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQjFibWxtYjNKdFgzUjVjR1VvYjJKcUtTQjdDaUFnSUNCcFppQW9iMkpxSUdsdWMzUmhibU5sYjJZZ1ZFaFNSVVV1Vlc1cFptOXliU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIxYm1sbWIzSnRYM1I1Y0dVb2IySnFMblpoYkhWbEtUc0tJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RIbHdaVzltSUc5aWFpQTlQVDBnSW01MWJXSmxjaUlwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSW1ac2IyRjBJanNLSUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHOWlhaUE5UFQwZ0ltSnZiMnhsWVc0aUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDSmliMjlzSWpzS0lDQWdJSDBnWld4elpTQnBaaUFvYjJKcUlHbHVjM1JoYm1ObGIyWWdWRWhTUlVVdVZtVmpkRzl5TWlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaWRtVmpNaUk3Q2lBZ0lDQjlJR1ZzYzJVZ2FXWWdLRzlpYWlCcGJuTjBZVzVqWlc5bUlGUklVa1ZGTGxabFkzUnZjak1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSW5abFl6TWlPd29nSUNBZ2ZTQmxiSE5sSUdsbUlDaHZZbW9nYVc1emRHRnVZMlZ2WmlCVVNGSkZSUzVXWldOMGIzSTBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0oyWldNMElqc0tJQ0FnSUgwZ1pXeHpaU0JwWmlBb2IySnFJR2x1YzNSaGJtTmxiMllnVkVoU1JVVXVRMjlzYjNJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0luWmxZelFpT3dvZ0lDQWdmU0JsYkhObElHbG1JQ2h2WW1vZ2FXNXpkR0Z1WTJWdlppQlVTRkpGUlM1TllYUnlhWGd6S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNKdFlYUXpJanNLSUNBZ0lIMGdaV3h6WlNCcFppQW9iMkpxSUdsdWMzUmhibU5sYjJZZ1ZFaFNSVVV1VFdGMGNtbDROQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFpYldGME5DSTdDaUFnSUNCOUlHVnNjMlVnYVdZZ0tHOWlhaUJwYm5OMFlXNWpaVzltSUZSSVVrVkZMbFJsZUhSMWNtVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJbk5oYlhCc1pYSXlSQ0k3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCMWJtbG1iM0p0YzE5MGIxOTBlWEJsWDJSbFkyeGhjbUYwYVc5dUtIVnVhV1p2Y20xZlpHbGpkQ2tnZXdvZ0lDQWdiR1YwSUhKbGMzVnNkQ0E5SUNJaU93b2dJQ0FnWm05eUtHTnZibk4wSUc1aGJXVWdhVzRnZFc1cFptOXliVjlrYVdOMEtYc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMWJtbG1iM0p0SUQwZ2RXNXBabTl5YlY5a2FXTjBXMjVoYldWZE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhSNWNHVWdQU0IxYm1sbWIzSnRYM1I1Y0dVb2RXNXBabTl5YlNrN0NpQWdJQ0FnSUNBZ2NtVnpkV3gwSUNzOUlHQjFibWxtYjNKdElDUjdkSGx3WlgwZ0pIdHVZVzFsZlR0Y2JtQTdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdjbVZ6ZFd4ME93cDlDbVoxYm1OMGFXOXVJR0YwZEhKcFluVjBaWE5mZEc5ZmRIbHdaVjlrWldOc1lYSmhkR2x2YmloaGRIUnlhV0oxZEdWelgyUnBZM1FwSUhzS0lDQWdJR3hsZENCeVpYTjFiSFFnUFNBaUlqc0tJQ0FnSUdadmNpaGpiMjV6ZENCdVlXMWxJR2x1SUdGMGRISnBZblYwWlhOZlpHbGpkQ2w3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZWFIwY21saWRYUmxJRDBnWVhSMGNtbGlkWFJsYzE5a2FXTjBXMjVoYldWZE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhSNWNHVWdQU0JoZEhSeWFXSjFkR1ZmZEhsd1pTaGhkSFJ5YVdKMWRHVXBPd29nSUNBZ0lDQWdJSEpsYzNWc2RDQXJQU0JnYVc0Z0pIdDBlWEJsZlNBa2UyNWhiV1Y5TzF4dVlEc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQnlaWE4xYkhRN0NuMEtZMjl1YzNRZ1gyTm9ZVzVuWlVWMlpXNTBJRDBnZXdvZ0lDQWdkSGx3WlRvZ0ltTm9ZVzVuWlNJS2ZUc0tZMjl1YzNRZ1gzTjBZWEowUlhabGJuUWdQU0I3Q2lBZ0lDQjBlWEJsT2lBaWMzUmhjblFpQ24wN0NtTnZibk4wSUY5bGJtUkZkbVZ1ZENBOUlIc0tJQ0FnSUhSNWNHVTZJQ0psYm1RaUNuMDdDbU52Ym5OMElGOXlZWGtnUFNCdVpYY2dhR2tvS1RzS1kyOXVjM1FnWDNCc1lXNWxJRDBnYm1WM0lHMXVLQ2s3Q21OdmJuTjBJRlJKVEZSZlRFbE5TVlFnUFNCTllYUm9MbU52Y3lnM01DQXFJSGwyTGtSRlJ6SlNRVVFwT3dwamJHRnpjeUJQY21KcGRFTnZiblJ5YjJ4eklHVjRkR1Z1WkhNZ2MyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9iMkpxWldOMExDQmtiMjFGYkdWdFpXNTBMQ0JoYkd4dmQxOTFjR1JoZEdVc0lHbHpYMmx1WDNOalpXNWxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWIySnFaV04wSUQwZ2IySnFaV04wT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaRzl0Uld4bGJXVnVkQ0E5SUdSdmJVVnNaVzFsYm5RN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrYjIxRmJHVnRaVzUwTG5OMGVXeGxMblJ2ZFdOb1FXTjBhVzl1SUQwZ0ltNXZibVVpT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaVzVoWW14bFpDQTlJSFJ5ZFdVN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWVhKblpYUWdQU0J1WlhjZ1FTZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVkzVnljMjl5SUQwZ2JtVjNJRUVvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbTFwYmtScGMzUmhibU5sSUQwZ01Ec0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGVFUnBjM1JoYm1ObElEMGdTVzVtYVc1cGRIazdDaUFnSUNBZ0lDQWdkR2hwY3k1dGFXNWFiMjl0SUQwZ01Ec0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGVGcHZiMjBnUFNCSmJtWnBibWwwZVRzS0lDQWdJQ0FnSUNCMGFHbHpMbTFwYmxSaGNtZGxkRkpoWkdsMWN5QTlJREE3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWGhVWVhKblpYUlNZV1JwZFhNZ1BTQkpibVpwYm1sMGVUc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xcGJsQnZiR0Z5UVc1bmJHVWdQU0F3T3dvZ0lDQWdJQ0FnSUhSb2FYTXViV0Y0VUc5c1lYSkJibWRzWlNBOUlFMWhkR2d1VUVrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0YVc1QmVtbHRkWFJvUVc1bmJHVWdQU0F0U1c1bWFXNXBkSGs3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWGhCZW1sdGRYUm9RVzVuYkdVZ1BTQkpibVpwYm1sMGVUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1WdVlXSnNaVVJoYlhCcGJtY2dQU0JtWVd4elpUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1SaGJYQnBibWRHWVdOMGIzSWdQU0F3TGpBMU93b2dJQ0FnSUNBZ0lIUm9hWE11Wlc1aFlteGxXbTl2YlNBOUlIUnlkV1U3Q2lBZ0lDQWdJQ0FnZEdocGN5NTZiMjl0VTNCbFpXUWdQU0F4TGpBN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsYm1GaWJHVlNiM1JoZEdVZ1BTQjBjblZsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjbTkwWVhSbFUzQmxaV1FnUFNBeExqQTdDaUFnSUNBZ0lDQWdkR2hwY3k1bGJtRmliR1ZRWVc0Z1BTQjBjblZsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjR0Z1VTNCbFpXUWdQU0F4TGpBN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6WTNKbFpXNVRjR0ZqWlZCaGJtNXBibWNnUFNCMGNuVmxPd29nSUNBZ0lDQWdJSFJvYVhNdWEyVjVVR0Z1VTNCbFpXUWdQU0EzTGpBN0NpQWdJQ0FnSUNBZ2RHaHBjeTU2YjI5dFZHOURkWEp6YjNJZ1BTQm1ZV3h6WlRzS0lDQWdJQ0FnSUNCMGFHbHpMbUYxZEc5U2IzUmhkR1VnUFNCbVlXeHpaVHNLSUNBZ0lDQWdJQ0IwYUdsekxtRjFkRzlTYjNSaGRHVlRjR1ZsWkNBOUlESXVNRHNLSUNBZ0lDQWdJQ0IwYUdsekxtdGxlWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRXhGUmxRNklDSkJjbkp2ZDB4bFpuUWlMQW9nSUNBZ0lDQWdJQ0FnSUNCVlVEb2dJa0Z5Y205M1ZYQWlMQW9nSUNBZ0lDQWdJQ0FnSUNCU1NVZElWRG9nSWtGeWNtOTNVbWxuYUhRaUxBb2dJQ0FnSUNBZ0lDQWdJQ0JDVDFSVVQwMDZJQ0pCY25KdmQwUnZkMjRpQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCMGFHbHpMbTF2ZFhObFFuVjBkRzl1Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVEVWR1ZEb2dlbmd1VWs5VVFWUkZMQW9nSUNBZ0lDQWdJQ0FnSUNCTlNVUkVURVU2SUhwNExrUlBURXhaTEFvZ0lDQWdJQ0FnSUNBZ0lDQlNTVWRJVkRvZ2VuZ3VVRUZPQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCMGFHbHpMblJ2ZFdOb1pYTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFOU9SVG9nVm5ndVVrOVVRVlJGTEFvZ0lDQWdJQ0FnSUNBZ0lDQlVWMDg2SUZaNExrUlBURXhaWDFCQlRnb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFF3SUQwZ2RHaHBjeTUwWVhKblpYUXVZMnh2Ym1Vb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CdmMybDBhVzl1TUNBOUlIUm9hWE11YjJKcVpXTjBMbkJ2YzJsMGFXOXVMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1NmIyOXRNQ0E5SUhSb2FYTXViMkpxWldOMExucHZiMjA3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZaRzl0Uld4bGJXVnVkRXRsZVVWMlpXNTBjeUE5SUc1MWJHdzdDaUFnSUNBZ0lDQWdkR2hwY3k1blpYUlFiMnhoY2tGdVoyeGxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnpjR2hsY21sallXd3VjR2hwT3dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSQmVtbHRkWFJvWVd4QmJtZHNaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM0JvWlhKcFkyRnNMblJvWlhSaE93b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdkR2hwY3k1blpYUkVhWE4wWVc1alpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2WW1wbFkzUXVjRzl6YVhScGIyNHVaR2x6ZEdGdVkyVlVieWgwYUdsekxuUmhjbWRsZENrN0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cGMzUmxibFJ2UzJWNVJYWmxiblJ6SUQwZ1puVnVZM1JwYjI0b1pHOXRSV3hsYldWdWRDa2dld29nSUNBZ0lDQWdJQ0FnSUNCa2IyMUZiR1Z0Wlc1MExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltdGxlV1J2ZDI0aUxDQnZia3RsZVVSdmQyNHBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlrYjIxRmJHVnRaVzUwUzJWNVJYWmxiblJ6SUQwZ1pHOXRSV3hsYldWdWREc0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSFJvYVhNdWMzUnZjRXhwYzNSbGJsUnZTMlY1UlhabGJuUnpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyUnZiVVZzWlcxbGJuUkxaWGxGZG1WdWRITXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpYTJWNVpHOTNiaUlzSUc5dVMyVjVSRzkzYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyUnZiVVZzWlcxbGJuUkxaWGxGZG1WdWRITWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdkR2hwY3k1ellYWmxVM1JoZEdVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyTnZjR1V1ZEdGeVoyVjBNQzVqYjNCNUtITmpiM0JsTG5SaGNtZGxkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmpiM0JsTG5CdmMybDBhVzl1TUM1amIzQjVLSE5qYjNCbExtOWlhbVZqZEM1d2IzTnBkR2x2YmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExucHZiMjB3SUQwZ2MyTnZjR1V1YjJKcVpXTjBMbnB2YjIwN0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyVjBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExuUmhjbWRsZEM1amIzQjVLSE5qYjNCbExuUmhjbWRsZERBcE93b2dJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNXZZbXBsWTNRdWNHOXphWFJwYjI0dVkyOXdlU2h6WTI5d1pTNXdiM05wZEdsdmJqQXBPd29nSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzV2WW1wbFkzUXVlbTl2YlNBOUlITmpiM0JsTG5wdmIyMHdPd29nSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzV2WW1wbFkzUXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNWthWE53WVhSamFFVjJaVzUwS0Y5amFHRnVaMlZGZG1WdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCemRHRjBaU0E5SUZOVVFWUkZMazVQVGtVN0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Wd1pHRjBaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnZabVp6WlhRZ1BTQnVaWGNnUVNncE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnhkV0YwSUQwZ2JtVjNJRlYwS0NrdWMyVjBSbkp2YlZWdWFYUldaV04wYjNKektHOWlhbVZqZEM1MWNDd2dibVYzSUVFb01Dd2dNU3dnTUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnhkV0YwU1c1MlpYSnpaU0E5SUhGMVlYUXVZMnh2Ym1Vb0tTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdiR0Z6ZEZCdmMybDBhVzl1SUQwZ2JtVjNJRUVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JHRnpkRkYxWVhSbGNtNXBiMjRnUFNCdVpYY2dWWFFvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JHRnpkRlJoY21kbGRGQnZjMmwwYVc5dUlEMGdibVYzSUVFb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdkSGR2VUVrZ1BTQXlJQ29nVFdGMGFDNVFTVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUhWd1pHRjBaU2hrWld4MFlWUnBiV1VnUFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRnNiRzkzWDNWd1pHRjBaU2dwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY0c5emFYUnBiMjRnUFNCelkyOXdaUzV2WW1wbFkzUXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRdVkyOXdlU2h3YjNOcGRHbHZiaWt1YzNWaUtITmpiM0JsTG5SaGNtZGxkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUXVZWEJ3YkhsUmRXRjBaWEp1YVc5dUtIRjFZWFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNCb1pYSnBZMkZzTG5ObGRFWnliMjFXWldOMGIzSXpLRzltWm5ObGRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJOdmNHVXVZWFYwYjFKdmRHRjBaU0FtSmlCemRHRjBaU0E5UFQwZ1UxUkJWRVV1VGs5T1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKdmRHRjBaVXhsWm5Rb1oyVjBRWFYwYjFKdmRHRjBhVzl1UVc1bmJHVW9aR1ZzZEdGVWFXMWxLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyTnZjR1V1Wlc1aFlteGxSR0Z0Y0dsdVp5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOd2FHVnlhV05oYkM1MGFHVjBZU0FyUFNCemNHaGxjbWxqWVd4RVpXeDBZUzUwYUdWMFlTQXFJSE5qYjNCbExtUmhiWEJwYm1kR1lXTjBiM0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzQm9aWEpwWTJGc0xuQm9hU0FyUFNCemNHaGxjbWxqWVd4RVpXeDBZUzV3YUdrZ0tpQnpZMjl3WlM1a1lXMXdhVzVuUm1GamRHOXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Y0dobGNtbGpZV3d1ZEdobGRHRWdLejBnYzNCb1pYSnBZMkZzUkdWc2RHRXVkR2hsZEdFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM0JvWlhKcFkyRnNMbkJvYVNBclBTQnpjR2hsY21sallXeEVaV3gwWVM1d2FHazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYldsdUlEMGdjMk52Y0dVdWJXbHVRWHBwYlhWMGFFRnVaMnhsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMWhlQ0E5SUhOamIzQmxMbTFoZUVGNmFXMTFkR2hCYm1kc1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwYzBacGJtbDBaU2h0YVc0cElDWW1JR2x6Um1sdWFYUmxLRzFoZUNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JXbHVJRHdnTFUxaGRHZ3VVRWtwSUcxcGJpQXJQU0IwZDI5UVNUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2h0YVc0Z1BpQk5ZWFJvTGxCSktTQnRhVzRnTFQwZ2RIZHZVRWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzFoZUNBOElDMU5ZWFJvTGxCSktTQnRZWGdnS3owZ2RIZHZVRWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2JXRjRJRDRnVFdGMGFDNVFTU2tnYldGNElDMDlJSFIzYjFCSk93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodGFXNGdQRDBnYldGNEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITndhR1Z5YVdOaGJDNTBhR1YwWVNBOUlFMWhkR2d1YldGNEtHMXBiaXdnVFdGMGFDNXRhVzRvYldGNExDQnpjR2hsY21sallXd3VkR2hsZEdFcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpjR2hsY21sallXd3VkR2hsZEdFZ1BTQnpjR2hsY21sallXd3VkR2hsZEdFZ1BpQW9iV2x1SUNzZ2JXRjRLU0F2SURJZ1B5Qk5ZWFJvTG0xaGVDaHRhVzRzSUhOd2FHVnlhV05oYkM1MGFHVjBZU2tnT2lCTllYUm9MbTFwYmlodFlYZ3NJSE53YUdWeWFXTmhiQzUwYUdWMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNCb1pYSnBZMkZzTG5Cb2FTQTlJRTFoZEdndWJXRjRLSE5qYjNCbExtMXBibEJ2YkdGeVFXNW5iR1VzSUUxaGRHZ3ViV2x1S0hOamIzQmxMbTFoZUZCdmJHRnlRVzVuYkdVc0lITndhR1Z5YVdOaGJDNXdhR2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOd2FHVnlhV05oYkM1dFlXdGxVMkZtWlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5qYjNCbExtVnVZV0pzWlVSaGJYQnBibWNnUFQwOUlIUnlkV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlM1MFlYSm5aWFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLSEJoYms5bVpuTmxkQ3dnYzJOdmNHVXVaR0Z0Y0dsdVowWmhZM1J2Y2lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpiM0JsTG5SaGNtZGxkQzVoWkdRb2NHRnVUMlptYzJWMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpiM0JsTG5SaGNtZGxkQzV6ZFdJb2MyTnZjR1V1WTNWeWMyOXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExuUmhjbWRsZEM1amJHRnRjRXhsYm1kMGFDaHpZMjl3WlM1dGFXNVVZWEpuWlhSU1lXUnBkWE1zSUhOamIzQmxMbTFoZUZSaGNtZGxkRkpoWkdsMWN5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlM1MFlYSm5aWFF1WVdSa0tITmpiM0JsTG1OMWNuTnZjaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyTnZjR1V1ZW05dmJWUnZRM1Z5YzI5eUlDWW1JSEJsY21admNtMURkWEp6YjNKYWIyOXRJSHg4SUhOamIzQmxMbTlpYW1WamRDNXBjMDl5ZEdodlozSmhjR2hwWTBOaGJXVnlZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITndhR1Z5YVdOaGJDNXlZV1JwZFhNZ1BTQmpiR0Z0Y0VScGMzUmhibU5sS0hOd2FHVnlhV05oYkM1eVlXUnBkWE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemNHaGxjbWxqWVd3dWNtRmthWFZ6SUQwZ1kyeGhiWEJFYVhOMFlXNWpaU2h6Y0dobGNtbGpZV3d1Y21Ga2FYVnpJQ29nYzJOaGJHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMlptYzJWMExuTmxkRVp5YjIxVGNHaGxjbWxqWVd3b2MzQm9aWEpwWTJGc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEM1aGNIQnNlVkYxWVhSbGNtNXBiMjRvY1hWaGRFbHVkbVZ5YzJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0dVkyOXdlU2h6WTI5d1pTNTBZWEpuWlhRcExtRmtaQ2h2Wm1aelpYUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdWIySnFaV04wTG14dmIydEJkQ2h6WTI5d1pTNTBZWEpuWlhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5qYjNCbExtVnVZV0pzWlVSaGJYQnBibWNnUFQwOUlIUnlkV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpjR2hsY21sallXeEVaV3gwWVM1MGFHVjBZU0FxUFNBeElDMGdjMk52Y0dVdVpHRnRjR2x1WjBaaFkzUnZjanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemNHaGxjbWxqWVd4RVpXeDBZUzV3YUdrZ0tqMGdNU0F0SUhOamIzQmxMbVJoYlhCcGJtZEdZV04wYjNJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0Z1VDJabWMyVjBMbTExYkhScGNHeDVVMk5oYkdGeUtERWdMU0J6WTI5d1pTNWtZVzF3YVc1blJtRmpkRzl5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzQm9aWEpwWTJGc1JHVnNkR0V1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoYms5bVpuTmxkQzV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlbTl2YlVOb1lXNW5aV1FnUFNCbVlXeHpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelkyOXdaUzU2YjI5dFZHOURkWEp6YjNJZ0ppWWdjR1Z5Wm05eWJVTjFjbk52Y2xwdmIyMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdibVYzVW1Ga2FYVnpJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyTnZjR1V1YjJKcVpXTjBMbWx6VUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjSEpsZGxKaFpHbDFjeUE5SUc5bVpuTmxkQzVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVYzVW1Ga2FYVnpJRDBnWTJ4aGJYQkVhWE4wWVc1alpTaHdjbVYyVW1Ga2FYVnpJQ29nYzJOaGJHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeVlXUnBkWE5FWld4MFlTQTlJSEJ5WlhaU1lXUnBkWE1nTFNCdVpYZFNZV1JwZFhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMbTlpYW1WamRDNXdiM05wZEdsdmJpNWhaR1JUWTJGc1pXUldaV04wYjNJb1pHOXNiSGxFYVhKbFkzUnBiMjRzSUhKaFpHbDFjMFJsYkhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyTnZjR1V1YjJKcVpXTjBMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpZMjl3WlM1dlltcGxZM1F1YVhOUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYlc5MWMyVkNaV1p2Y21VZ1BTQnVaWGNnUVNodGIzVnpaUzU0TENCdGIzVnpaUzU1TENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXOTFjMlZDWldadmNtVXVkVzV3Y205cVpXTjBLSE5qYjNCbExtOWlhbVZqZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMbTlpYW1WamRDNTZiMjl0SUQwZ1RXRjBhQzV0WVhnb2MyTnZjR1V1YldsdVdtOXZiU3dnVFdGMGFDNXRhVzRvYzJOdmNHVXViV0Y0V205dmJTd2djMk52Y0dVdWIySnFaV04wTG5wdmIyMGdMeUJ6WTJGc1pTa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlM1dlltcGxZM1F1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjZiMjl0UTJoaGJtZGxaQ0E5SUhSeWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUcxdmRYTmxRV1owWlhJZ1BTQnVaWGNnUVNodGIzVnpaUzU0TENCdGIzVnpaUzU1TENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXOTFjMlZCWm5SbGNpNTFibkJ5YjJwbFkzUW9jMk52Y0dVdWIySnFaV04wS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJOdmNHVXViMkpxWldOMExuQnZjMmwwYVc5dUxuTjFZaWh0YjNWelpVRm1kR1Z5S1M1aFpHUW9iVzkxYzJWQ1pXWnZjbVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNXZZbXBsWTNRdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNVbUZrYVhWeklEMGdiMlptYzJWMExteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVjBGU1RrbE9Sem9nVDNKaWFYUkRiMjUwY205c2N5NXFjeUJsYm1OdmRXNTBaWEpsWkNCaGJpQjFibXR1YjNkdUlHTmhiV1Z5WVNCMGVYQmxJQzBnZW05dmJTQjBieUJqZFhKemIzSWdaR2x6WVdKc1pXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExucHZiMjFVYjBOMWNuTnZjaUE5SUdaaGJITmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYm1WM1VtRmthWFZ6SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5OamNtVmxibE53WVdObFVHRnVibWx1WnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdWRHRnlaMlYwTG5ObGRDZ3dMQ0F3TENBdE1Ta3VkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLSE5qYjNCbExtOWlhbVZqZEM1dFlYUnlhWGdwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRzVsZDFKaFpHbDFjeWt1WVdSa0tITmpiM0JsTG05aWFtVmpkQzV3YjNOcGRHbHZiaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmY21GNUxtOXlhV2RwYmk1amIzQjVLSE5qYjNCbExtOWlhbVZqZEM1d2IzTnBkR2x2YmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZjbUY1TG1ScGNtVmpkR2x2Ymk1elpYUW9NQ3dnTUN3Z0xURXBMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWh6WTI5d1pTNXZZbXBsWTNRdWJXRjBjbWw0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hOWVhSb0xtRmljeWh6WTI5d1pTNXZZbXBsWTNRdWRYQXVaRzkwS0Y5eVlYa3VaR2x5WldOMGFXOXVLU2tnUENCVVNVeFVYMHhKVFVsVUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wTG14dmIydEJkQ2h6WTI5d1pTNTBZWEpuWlhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZmNHeGhibVV1YzJWMFJuSnZiVTV2Y20xaGJFRnVaRU52Y0d4aGJtRnlVRzlwYm5Rb2MyTnZjR1V1YjJKcVpXTjBMblZ3TENCelkyOXdaUzUwWVhKblpYUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGOXlZWGt1YVc1MFpYSnpaV04wVUd4aGJtVW9YM0JzWVc1bExDQnpZMjl3WlM1MFlYSm5aWFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h6WTI5d1pTNXZZbXBsWTNRdWFYTlBjblJvYjJkeVlYQm9hV05EWVcxbGNtRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzV2WW1wbFkzUXVlbTl2YlNBOUlFMWhkR2d1YldGNEtITmpiM0JsTG0xcGJscHZiMjBzSUUxaGRHZ3ViV2x1S0hOamIzQmxMbTFoZUZwdmIyMHNJSE5qYjNCbExtOWlhbVZqZEM1NmIyOXRJQzhnYzJOaGJHVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzV2WW1wbFkzUXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHB2YjIxRGFHRnVaMlZrSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qWVd4bElEMGdNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJsY21admNtMURkWEp6YjNKYWIyOXRJRDBnWm1Gc2MyVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZW05dmJVTm9ZVzVuWldRZ2ZId2diR0Z6ZEZCdmMybDBhVzl1TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0hOamIzQmxMbTlpYW1WamRDNXdiM05wZEdsdmJpa2dQaUJGVUZNZ2ZId2dPQ0FxSUNneElDMGdiR0Z6ZEZGMVlYUmxjbTVwYjI0dVpHOTBLSE5qYjNCbExtOWlhbVZqZEM1eGRXRjBaWEp1YVc5dUtTa2dQaUJGVUZNZ2ZId2diR0Z6ZEZSaGNtZGxkRkJ2YzJsMGFXOXVMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLSE5qYjNCbExuUmhjbWRsZENrZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyTnZjR1V1WkdsemNHRjBZMmhGZG1WdWRDaGZZMmhoYm1kbFJYWmxiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhjM1JRYjNOcGRHbHZiaTVqYjNCNUtITmpiM0JsTG05aWFtVmpkQzV3YjNOcGRHbHZiaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHRnpkRkYxWVhSbGNtNXBiMjR1WTI5d2VTaHpZMjl3WlM1dlltcGxZM1F1Y1hWaGRHVnlibWx2YmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEZSaGNtZGxkRkJ2YzJsMGFXOXVMbU52Y0hrb2MyTnZjR1V1ZEdGeVoyVjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNmIyOXRRMmhoYm1kbFpDQTlJR1poYkhObE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE93b2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUgwb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQnZjMlVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJOdmNHVXVaRzl0Uld4bGJXVnVkQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKamIyNTBaWGgwYldWdWRTSXNJRzl1UTI5dWRHVjRkRTFsYm5VcE93b2dJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNWtiMjFGYkdWdFpXNTBMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW5CdmFXNTBaWEprYjNkdUlpd2diMjVRYjJsdWRHVnlSRzkzYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExtUnZiVVZzWlcxbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpY0c5cGJuUmxjbU5oYm1ObGJDSXNJRzl1VUc5cGJuUmxjbFZ3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHOXRSV3hsYldWdWRDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0ozYUdWbGJDSXNJRzl1VFc5MWMyVlhhR1ZsYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExtUnZiVVZzWlcxbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpY0c5cGJuUmxjbTF2ZG1VaUxDQnZibEJ2YVc1MFpYSk5iM1psS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHOXRSV3hsYldWdWRDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0p3YjJsdWRHVnlkWEFpTENCdmJsQnZhVzUwWlhKVmNDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpZMjl3WlM1ZlpHOXRSV3hsYldWdWRFdGxlVVYyWlc1MGN5QWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVgyUnZiVVZzWlcxbGJuUkxaWGxGZG1WdWRITXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpYTJWNVpHOTNiaUlzSUc5dVMyVjVSRzkzYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzVmWkc5dFJXeGxiV1Z1ZEV0bGVVVjJaVzUwY3lBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR052Ym5OMElITmpiM0JsSUQwZ2RHaHBjenNLSUNBZ0lDQWdJQ0JqYjI1emRDQlRWRUZVUlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVGs5T1JUb2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lGSlBWRUZVUlRvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnUkU5TVRGazZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQkJUam9nTWl3S0lDQWdJQ0FnSUNBZ0lDQWdWRTlWUTBoZlVrOVVRVlJGT2lBekxBb2dJQ0FnSUNBZ0lDQWdJQ0JVVDFWRFNGOVFRVTQ2SURRc0NpQWdJQ0FnSUNBZ0lDQWdJRlJQVlVOSVgwUlBURXhaWDFCQlRqb2dOU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ZFOVZRMGhmUkU5TVRGbGZVazlVUVZSRk9pQTJDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ2MzUmhkR1VnUFNCVFZFRlVSUzVPVDA1Rk93b2dJQ0FnSUNBZ0lHTnZibk4wSUVWUVV5QTlJREF1TURBd01EQXhPd29nSUNBZ0lDQWdJR052Ym5OMElITndhR1Z5YVdOaGJDQTlJRzVsZHlCUGRTZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElITndhR1Z5YVdOaGJFUmxiSFJoSUQwZ2JtVjNJRTkxS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJSE5qWVd4bElEMGdNVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndZVzVQWm1aelpYUWdQU0J1WlhjZ1FTZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElISnZkR0YwWlZOMFlYSjBJRDBnYm1WM0lGb29LVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnliM1JoZEdWRmJtUWdQU0J1WlhjZ1dpZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElISnZkR0YwWlVSbGJIUmhJRDBnYm1WM0lGb29LVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndZVzVUZEdGeWRDQTlJRzVsZHlCYUtDazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NHRnVSVzVrSUQwZ2JtVjNJRm9vS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3WVc1RVpXeDBZU0E5SUc1bGR5QmFLQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdaRzlzYkhsVGRHRnlkQ0E5SUc1bGR5QmFLQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdaRzlzYkhsRmJtUWdQU0J1WlhjZ1dpZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElHUnZiR3g1UkdWc2RHRWdQU0J1WlhjZ1dpZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElHUnZiR3g1UkdseVpXTjBhVzl1SUQwZ2JtVjNJRUVvS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J0YjNWelpTQTlJRzVsZHlCYUtDazdDaUFnSUNBZ0lDQWdiR1YwSUhCbGNtWnZjbTFEZFhKemIzSmFiMjl0SUQwZ1ptRnNjMlU3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjRzlwYm5SbGNuTWdQU0JiWFRzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3YjJsdWRHVnlVRzl6YVhScGIyNXpJRDBnZTMwN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1oyVjBRWFYwYjFKdmRHRjBhVzl1UVc1bmJHVW9aR1ZzZEdGVWFXMWxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrWld4MFlWUnBiV1VnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUF5SUNvZ1RXRjBhQzVRU1NBdklEWXdJQ29nYzJOdmNHVXVZWFYwYjFKdmRHRjBaVk53WldWa0lDb2daR1ZzZEdGVWFXMWxPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRElnS2lCTllYUm9MbEJKSUM4Z05qQWdMeUEyTUNBcUlITmpiM0JsTG1GMWRHOVNiM1JoZEdWVGNHVmxaRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm5aWFJhYjI5dFUyTmhiR1VvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5CdmR5Z3dMamsxTENCelkyOXdaUzU2YjI5dFUzQmxaV1FwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCeWIzUmhkR1ZNWldaMEtHRnVaMnhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSE53YUdWeWFXTmhiRVJsYkhSaExuUm9aWFJoSUMwOUlHRnVaMnhsT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCeWIzUmhkR1ZWY0NoaGJtZHNaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpjR2hsY21sallXeEVaV3gwWVM1d2FHa2dMVDBnWVc1bmJHVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR052Ym5OMElIQmhia3hsWm5RZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZGlBOUlHNWxkeUJCS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQndZVzVNWldaMEtHUnBjM1JoYm1ObExDQnZZbXBsWTNSTllYUnlhWGdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaHZZbXBsWTNSTllYUnlhWGdzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpNXRkV3gwYVhCc2VWTmpZV3hoY2lndFpHbHpkR0Z1WTJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRnVUMlptYzJWMExtRmtaQ2gyS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0I5S0NrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnY0dGdVZYQWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RpQTlJRzVsZHlCQktDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUJ3WVc1VmNDaGthWE4wWVc1alpTd2diMkpxWldOMFRXRjBjbWw0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdWMyTnlaV1Z1VTNCaFkyVlFZVzV1YVc1bklEMDlQU0IwY25WbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGk1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHOWlhbVZqZEUxaGRISnBlQ3dnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWh2WW1wbFkzUk5ZWFJ5YVhnc0lEQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZdVkzSnZjM05XWldOMGIzSnpLSE5qYjNCbExtOWlhbVZqZEM1MWNDd2dkaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1JwYzNSaGJtTmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoYms5bVpuTmxkQzVoWkdRb2RpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZTZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElIQmhiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnZabVp6WlhRZ1BTQnVaWGNnUVNncE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdjR0Z1S0dSbGJIUmhXQ3dnWkdWc2RHRlpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmxiR1Z0Wlc1MElEMGdjMk52Y0dVdVpHOXRSV3hsYldWdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNXZZbXBsWTNRdWFYTlFaWEp6Y0dWamRHbDJaVU5oYldWeVlTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEJ2YzJsMGFXOXVJRDBnYzJOdmNHVXViMkpxWldOMExuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGRDNWpiM0I1S0hCdmMybDBhVzl1S1M1emRXSW9jMk52Y0dVdWRHRnlaMlYwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEdGeVoyVjBSR2x6ZEdGdVkyVWdQU0J2Wm1aelpYUXViR1Z1WjNSb0tDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBSR2x6ZEdGdVkyVWdLajBnVFdGMGFDNTBZVzRvYzJOdmNHVXViMkpxWldOMExtWnZkaUF2SURJZ0tpQk5ZWFJvTGxCSklDOGdNVGd3TGpBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoYmt4bFpuUW9NaUFxSUdSbGJIUmhXQ0FxSUhSaGNtZGxkRVJwYzNSaGJtTmxJQzhnWld4bGJXVnVkQzVqYkdsbGJuUklaV2xuYUhRc0lITmpiM0JsTG05aWFtVmpkQzV0WVhSeWFYZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGJsVndLRElnS2lCa1pXeDBZVmtnS2lCMFlYSm5aWFJFYVhOMFlXNWpaU0F2SUdWc1pXMWxiblF1WTJ4cFpXNTBTR1ZwWjJoMExDQnpZMjl3WlM1dlltcGxZM1F1YldGMGNtbDRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzJOdmNHVXViMkpxWldOMExtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRnVUR1ZtZENoa1pXeDBZVmdnS2lBb2MyTnZjR1V1YjJKcVpXTjBMbkpwWjJoMElDMGdjMk52Y0dVdWIySnFaV04wTG14bFpuUXBJQzhnYzJOdmNHVXViMkpxWldOMExucHZiMjBnTHlCbGJHVnRaVzUwTG1Oc2FXVnVkRmRwWkhSb0xDQnpZMjl3WlM1dlltcGxZM1F1YldGMGNtbDRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXNVZjQ2hrWld4MFlWa2dLaUFvYzJOdmNHVXViMkpxWldOMExuUnZjQ0F0SUhOamIzQmxMbTlpYW1WamRDNWliM1IwYjIwcElDOGdjMk52Y0dVdWIySnFaV04wTG5wdmIyMGdMeUJsYkdWdFpXNTBMbU5zYVdWdWRFaGxhV2RvZEN3Z2MyTnZjR1V1YjJKcVpXTjBMbTFoZEhKcGVDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVYwRlNUa2xPUnpvZ1QzSmlhWFJEYjI1MGNtOXNjeTVxY3lCbGJtTnZkVzUwWlhKbFpDQmhiaUIxYm10dWIzZHVJR05oYldWeVlTQjBlWEJsSUMwZ2NHRnVJR1JwYzJGaWJHVmtMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpiM0JsTG1WdVlXSnNaVkJoYmlBOUlHWmhiSE5sT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSDBvS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCa2IyeHNlVTkxZENoa2IyeHNlVk5qWVd4bEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpZMjl3WlM1dlltcGxZM1F1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNCOGZDQnpZMjl3WlM1dlltcGxZM1F1YVhOUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsSUM4OUlHUnZiR3g1VTJOaGJHVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsZEJVazVKVGtjNklFOXlZbWwwUTI5dWRISnZiSE11YW5NZ1pXNWpiM1Z1ZEdWeVpXUWdZVzRnZFc1cmJtOTNiaUJqWVcxbGNtRWdkSGx3WlNBdElHUnZiR3g1TDNwdmIyMGdaR2x6WVdKc1pXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNWxibUZpYkdWYWIyOXRJRDBnWm1Gc2MyVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1pHOXNiSGxKYmloa2IyeHNlVk5qWVd4bEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpZMjl3WlM1dlltcGxZM1F1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNCOGZDQnpZMjl3WlM1dlltcGxZM1F1YVhOUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsSUNvOUlHUnZiR3g1VTJOaGJHVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsZEJVazVKVGtjNklFOXlZbWwwUTI5dWRISnZiSE11YW5NZ1pXNWpiM1Z1ZEdWeVpXUWdZVzRnZFc1cmJtOTNiaUJqWVcxbGNtRWdkSGx3WlNBdElHUnZiR3g1TDNwdmIyMGdaR2x6WVdKc1pXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNWxibUZpYkdWYWIyOXRJRDBnWm1Gc2MyVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RYQmtZWFJsVFc5MWMyVlFZWEpoYldWMFpYSnpLR1YyWlc1MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hjMk52Y0dVdWVtOXZiVlJ2UTNWeWMyOXlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjR1Z5Wm05eWJVTjFjbk52Y2xwdmIyMGdQU0IwY25WbE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnlaV04wSUQwZ2MyTnZjR1V1Wkc5dFJXeGxiV1Z1ZEM1blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZUNBOUlHVjJaVzUwTG1Oc2FXVnVkRmdnTFNCeVpXTjBMbXhsWm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIa2dQU0JsZG1WdWRDNWpiR2xsYm5SWklDMGdjbVZqZEM1MGIzQTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSGNnUFNCeVpXTjBMbmRwWkhSb093b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQm9JRDBnY21WamRDNW9aV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJRzF2ZFhObExuZ2dQU0I0SUM4Z2R5QXFJRElnTFNBeE93b2dJQ0FnSUNBZ0lDQWdJQ0J0YjNWelpTNTVJRDBnTFNoNUlDOGdhQ2tnS2lBeUlDc2dNVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHOXNiSGxFYVhKbFkzUnBiMjR1YzJWMEtHMXZkWE5sTG5nc0lHMXZkWE5sTG5rc0lERXBMblZ1Y0hKdmFtVmpkQ2h6WTI5d1pTNXZZbXBsWTNRcExuTjFZaWh6WTI5d1pTNXZZbXBsWTNRdWNHOXphWFJwYjI0cExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJqYkdGdGNFUnBjM1JoYm1ObEtHUnBjM1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YldGNEtITmpiM0JsTG0xcGJrUnBjM1JoYm1ObExDQk5ZWFJvTG0xcGJpaHpZMjl3WlM1dFlYaEVhWE4wWVc1alpTd2daR2x6ZENrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm9ZVzVrYkdWTmIzVnpaVVJ2ZDI1U2IzUmhkR1VvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJsVTNSaGNuUXVjMlYwS0dWMlpXNTBMbU5zYVdWdWRGZ3NJR1YyWlc1MExtTnNhV1Z1ZEZrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm9ZVzVrYkdWTmIzVnpaVVJ2ZDI1RWIyeHNlU2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMWNHUmhkR1ZOYjNWelpWQmhjbUZ0WlhSbGNuTW9aWFpsYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0JrYjJ4c2VWTjBZWEowTG5ObGRDaGxkbVZ1ZEM1amJHbGxiblJZTENCbGRtVnVkQzVqYkdsbGJuUlpLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxUVzkxYzJWRWIzZHVVR0Z1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQmhibE4wWVhKMExuTmxkQ2hsZG1WdWRDNWpiR2xsYm5SWUxDQmxkbVZ1ZEM1amJHbGxiblJaS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FHRnVaR3hsVFc5MWMyVk5iM1psVW05MFlYUmxLR1YyWlc1MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKdmRHRjBaVVZ1WkM1elpYUW9aWFpsYm5RdVkyeHBaVzUwV0N3Z1pYWmxiblF1WTJ4cFpXNTBXU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISnZkR0YwWlVSbGJIUmhMbk4xWWxabFkzUnZjbk1vY205MFlYUmxSVzVrTENCeWIzUmhkR1ZUZEdGeWRDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2MyTnZjR1V1Y205MFlYUmxVM0JsWldRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmxiR1Z0Wlc1MElEMGdjMk52Y0dVdVpHOXRSV3hsYldWdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnY205MFlYUmxUR1ZtZENneUlDb2dUV0YwYUM1UVNTQXFJSEp2ZEdGMFpVUmxiSFJoTG5nZ0x5QmxiR1Z0Wlc1MExtTnNhV1Z1ZEVobGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISnZkR0YwWlZWd0tESWdLaUJOWVhSb0xsQkpJQ29nY205MFlYUmxSR1ZzZEdFdWVTQXZJR1ZzWlcxbGJuUXVZMnhwWlc1MFNHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbTkwWVhSbFUzUmhjblF1WTI5d2VTaHliM1JoZEdWRmJtUXBPd29nSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzUxY0dSaGRHVW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxUVzkxYzJWTmIzWmxSRzlzYkhrb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaRzlzYkhsRmJtUXVjMlYwS0dWMlpXNTBMbU5zYVdWdWRGZ3NJR1YyWlc1MExtTnNhV1Z1ZEZrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JrYjJ4c2VVUmxiSFJoTG5OMVlsWmxZM1J2Y25Nb1pHOXNiSGxGYm1Rc0lHUnZiR3g1VTNSaGNuUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aRzlzYkhsRVpXeDBZUzU1SUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaRzlzYkhsUGRYUW9aMlYwV205dmJWTmpZV3hsS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dSdmJHeDVSR1ZzZEdFdWVTQThJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSdmJHeDVTVzRvWjJWMFdtOXZiVk5qWVd4bEtDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1J2Ykd4NVUzUmhjblF1WTI5d2VTaGtiMnhzZVVWdVpDazdDaUFnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJvWVc1a2JHVk5iM1Z6WlUxdmRtVlFZVzRvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHRnVSVzVrTG5ObGRDaGxkbVZ1ZEM1amJHbGxiblJZTENCbGRtVnVkQzVqYkdsbGJuUlpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHRnVSR1ZzZEdFdWMzVmlWbVZqZEc5eWN5aHdZVzVGYm1Rc0lIQmhibE4wWVhKMEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loelkyOXdaUzV3WVc1VGNHVmxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQmhiaWh3WVc1RVpXeDBZUzU0TENCd1lXNUVaV3gwWVM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dGdVUzUmhjblF1WTI5d2VTaHdZVzVGYm1RcE93b2dJQ0FnSUNBZ0lDQWdJQ0J6WTI5d1pTNTFjR1JoZEdVb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhR0Z1Wkd4bFRXOTFjMlZYYUdWbGJDaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxY0dSaGRHVk5iM1Z6WlZCaGNtRnRaWFJsY25Nb1pYWmxiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlhabGJuUXVaR1ZzZEdGWklEd2dNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkc5c2JIbEpiaWhuWlhSYWIyOXRVMk5oYkdVb0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pYWmxiblF1WkdWc2RHRlpJRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHOXNiSGxQZFhRb1oyVjBXbTl2YlZOallXeGxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJvWVc1a2JHVkxaWGxFYjNkdUtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdVpXVmtjMVZ3WkdGMFpTQTlJR1poYkhObE93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aWFpsYm5RdVkyOWtaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElITmpiM0JsTG10bGVYTXVWVkE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtTjBjbXhMWlhrZ2ZId2daWFpsYm5RdWJXVjBZVXRsZVNCOGZDQmxkbVZ1ZEM1emFHbG1kRXRsZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIzUmhkR1ZWY0NneUlDb2dUV0YwYUM1UVNTQXFJSE5qYjNCbExuSnZkR0YwWlZOd1pXVmtJQzhnYzJOdmNHVXVaRzl0Uld4bGJXVnVkQzVqYkdsbGJuUklaV2xuYUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhiaWd3TENCelkyOXdaUzVyWlhsUVlXNVRjR1ZsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bFpXUnpWWEJrWVhSbElEMGdkSEoxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdjMk52Y0dVdWEyVjVjeTVDVDFSVVQwMDZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHVjJaVzUwTG1OMGNteExaWGtnZkh3Z1pYWmxiblF1YldWMFlVdGxlU0I4ZkNCbGRtVnVkQzV6YUdsbWRFdGxlU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5YjNSaGRHVlZjQ2d0TWlBcUlFMWhkR2d1VUVrZ0tpQnpZMjl3WlM1eWIzUmhkR1ZUY0dWbFpDQXZJSE5qYjNCbExtUnZiVVZzWlcxbGJuUXVZMnhwWlc1MFNHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXNG9NQ3dnTFhOamIzQmxMbXRsZVZCaGJsTndaV1ZrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WbFpITlZjR1JoZEdVZ1BTQjBjblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQnpZMjl3WlM1clpYbHpMa3hGUmxRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWMlpXNTBMbU4wY214TFpYa2dmSHdnWlhabGJuUXViV1YwWVV0bGVTQjhmQ0JsZG1WdWRDNXphR2xtZEV0bGVTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnliM1JoZEdWTVpXWjBLRElnS2lCTllYUm9MbEJKSUNvZ2MyTnZjR1V1Y205MFlYUmxVM0JsWldRZ0x5QnpZMjl3WlM1a2IyMUZiR1Z0Wlc1MExtTnNhV1Z1ZEVobGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGdUtITmpiM0JsTG10bGVWQmhibE53WldWa0xDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVZsWkhOVmNHUmhkR1VnUFNCMGNuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCelkyOXdaUzVyWlhsekxsSkpSMGhVT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsZG1WdWRDNWpkSEpzUzJWNUlIeDhJR1YyWlc1MExtMWxkR0ZMWlhrZ2ZId2daWFpsYm5RdWMyaHBablJMWlhrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJsVEdWbWRDZ3RNaUFxSUUxaGRHZ3VVRWtnS2lCelkyOXdaUzV5YjNSaGRHVlRjR1ZsWkNBdklITmpiM0JsTG1SdmJVVnNaVzFsYm5RdVkyeHBaVzUwU0dWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVc0b0xYTmpiM0JsTG10bGVWQmhibE53WldWa0xDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVZsWkhOVmNHUmhkR1VnUFNCMGNuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodVpXVmtjMVZ3WkdGMFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHaGhibVJzWlZSdmRXTm9VM1JoY25SU2IzUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2IybHVkR1Z5Y3k1c1pXNW5kR2dnUFQwOUlERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEp2ZEdGMFpWTjBZWEowTG5ObGRDaHdiMmx1ZEdWeWMxc3dYUzV3WVdkbFdDd2djRzlwYm5SbGNuTmJNRjB1Y0dGblpWa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdlQ0E5SURBdU5TQXFJQ2h3YjJsdWRHVnljMXN3WFM1d1lXZGxXQ0FySUhCdmFXNTBaWEp6V3pGZExuQmhaMlZZS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSGtnUFNBd0xqVWdLaUFvY0c5cGJuUmxjbk5iTUYwdWNHRm5aVmtnS3lCd2IybHVkR1Z5YzFzeFhTNXdZV2RsV1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIzUmhkR1ZUZEdGeWRDNXpaWFFvZUN3Z2VTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FHRnVaR3hsVkc5MVkyaFRkR0Z5ZEZCaGJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJ2YVc1MFpYSnpMbXhsYm1kMGFDQTlQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRnVVM1JoY25RdWMyVjBLSEJ2YVc1MFpYSnpXekJkTG5CaFoyVllMQ0J3YjJsdWRHVnljMXN3WFM1d1lXZGxXU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0I0SUQwZ01DNDFJQ29nS0hCdmFXNTBaWEp6V3pCZExuQmhaMlZZSUNzZ2NHOXBiblJsY25OYk1WMHVjR0ZuWlZncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZVNBOUlEQXVOU0FxSUNod2IybHVkR1Z5YzFzd1hTNXdZV2RsV1NBcklIQnZhVzUwWlhKeld6RmRMbkJoWjJWWktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhibE4wWVhKMExuTmxkQ2g0TENCNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCb1lXNWtiR1ZVYjNWamFGTjBZWEowUkc5c2JIa29LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdSNElEMGdjRzlwYm5SbGNuTmJNRjB1Y0dGblpWZ2dMU0J3YjJsdWRHVnljMXN4WFM1d1lXZGxXRHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkhrZ1BTQndiMmx1ZEdWeWMxc3dYUzV3WVdkbFdTQXRJSEJ2YVc1MFpYSnpXekZkTG5CaFoyVlpPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrYVhOMFlXNWpaU0E5SUUxaGRHZ3VjM0Z5ZENoa2VDQXFJR1I0SUNzZ1pIa2dLaUJrZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1J2Ykd4NVUzUmhjblF1YzJWMEtEQXNJR1JwYzNSaGJtTmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxWRzkxWTJoVGRHRnlkRVJ2Ykd4NVVHRnVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJOdmNHVXVaVzVoWW14bFdtOXZiU2tnYUdGdVpHeGxWRzkxWTJoVGRHRnlkRVJ2Ykd4NUtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpZMjl3WlM1bGJtRmliR1ZRWVc0cElHaGhibVJzWlZSdmRXTm9VM1JoY25SUVlXNG9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxWRzkxWTJoVGRHRnlkRVJ2Ykd4NVVtOTBZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyTnZjR1V1Wlc1aFlteGxXbTl2YlNrZ2FHRnVaR3hsVkc5MVkyaFRkR0Z5ZEVSdmJHeDVLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNWxibUZpYkdWU2IzUmhkR1VwSUdoaGJtUnNaVlJ2ZFdOb1UzUmhjblJTYjNSaGRHVW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxWRzkxWTJoTmIzWmxVbTkwWVhSbEtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2IybHVkR1Z5Y3k1c1pXNW5kR2dnUFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbTkwWVhSbFJXNWtMbk5sZENobGRtVnVkQzV3WVdkbFdDd2daWFpsYm5RdWNHRm5aVmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY0c5emFYUnBiMjRnUFNCblpYUlRaV052Ym1SUWIybHVkR1Z5VUc5emFYUnBiMjRvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2VDQTlJREF1TlNBcUlDaGxkbVZ1ZEM1d1lXZGxXQ0FySUhCdmMybDBhVzl1TG5ncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZVNBOUlEQXVOU0FxSUNobGRtVnVkQzV3WVdkbFdTQXJJSEJ2YzJsMGFXOXVMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY205MFlYUmxSVzVrTG5ObGRDaDRMQ0I1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeWIzUmhkR1ZFWld4MFlTNXpkV0pXWldOMGIzSnpLSEp2ZEdGMFpVVnVaQ3dnY205MFlYUmxVM1JoY25RcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hOamIzQmxMbkp2ZEdGMFpWTndaV1ZrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1pXeGxiV1Z1ZENBOUlITmpiM0JsTG1SdmJVVnNaVzFsYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJSEp2ZEdGMFpVeGxablFvTWlBcUlFMWhkR2d1VUVrZ0tpQnliM1JoZEdWRVpXeDBZUzU0SUM4Z1pXeGxiV1Z1ZEM1amJHbGxiblJJWldsbmFIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCeWIzUmhkR1ZWY0NneUlDb2dUV0YwYUM1UVNTQXFJSEp2ZEdGMFpVUmxiSFJoTG5rZ0x5QmxiR1Z0Wlc1MExtTnNhV1Z1ZEVobGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISnZkR0YwWlZOMFlYSjBMbU52Y0hrb2NtOTBZWFJsUlc1a0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhR0Z1Wkd4bFZHOTFZMmhOYjNabFVHRnVLR1YyWlc1MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiMmx1ZEdWeWN5NXNaVzVuZEdnZ1BUMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGJrVnVaQzV6WlhRb1pYWmxiblF1Y0dGblpWZ3NJR1YyWlc1MExuQmhaMlZaS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCdmMybDBhVzl1SUQwZ1oyVjBVMlZqYjI1a1VHOXBiblJsY2xCdmMybDBhVzl1S0dWMlpXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIZ2dQU0F3TGpVZ0tpQW9aWFpsYm5RdWNHRm5aVmdnS3lCd2IzTnBkR2x2Ymk1NEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhrZ1BTQXdMalVnS2lBb1pYWmxiblF1Y0dGblpWa2dLeUJ3YjNOcGRHbHZiaTU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGJrVnVaQzV6WlhRb2VDd2dlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY0dGdVJHVnNkR0V1YzNWaVZtVmpkRzl5Y3lod1lXNUZibVFzSUhCaGJsTjBZWEowS1M1dGRXeDBhWEJzZVZOallXeGhjaWh6WTI5d1pTNXdZVzVUY0dWbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUhCaGJpaHdZVzVFWld4MFlTNTRMQ0J3WVc1RVpXeDBZUzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjR0Z1VTNSaGNuUXVZMjl3ZVNod1lXNUZibVFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCb1lXNWtiR1ZVYjNWamFFMXZkbVZFYjJ4c2VTaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQndiM05wZEdsdmJpQTlJR2RsZEZObFkyOXVaRkJ2YVc1MFpYSlFiM05wZEdsdmJpaGxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHUjRJRDBnWlhabGJuUXVjR0ZuWlZnZ0xTQndiM05wZEdsdmJpNTRPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrZVNBOUlHVjJaVzUwTG5CaFoyVlpJQzBnY0c5emFYUnBiMjR1ZVRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1pHbHpkR0Z1WTJVZ1BTQk5ZWFJvTG5OeGNuUW9aSGdnS2lCa2VDQXJJR1I1SUNvZ1pIa3BPd29nSUNBZ0lDQWdJQ0FnSUNCa2IyeHNlVVZ1WkM1elpYUW9NQ3dnWkdsemRHRnVZMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtiMnhzZVVSbGJIUmhMbk5sZENnd0xDQk5ZWFJvTG5CdmR5aGtiMnhzZVVWdVpDNTVJQzhnWkc5c2JIbFRkR0Z5ZEM1NUxDQnpZMjl3WlM1NmIyOXRVM0JsWldRcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWkc5c2JIbFBkWFFvWkc5c2JIbEVaV3gwWVM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWkc5c2JIbFRkR0Z5ZEM1amIzQjVLR1J2Ykd4NVJXNWtLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUdGdVpHeGxWRzkxWTJoTmIzWmxSRzlzYkhsUVlXNG9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmpiM0JsTG1WdVlXSnNaVnB2YjIwcElHaGhibVJzWlZSdmRXTm9UVzkyWlVSdmJHeDVLR1YyWlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmpiM0JsTG1WdVlXSnNaVkJoYmlrZ2FHRnVaR3hsVkc5MVkyaE5iM1psVUdGdUtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FHRnVaR3hsVkc5MVkyaE5iM1psUkc5c2JIbFNiM1JoZEdVb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOamIzQmxMbVZ1WVdKc1pWcHZiMjBwSUdoaGJtUnNaVlJ2ZFdOb1RXOTJaVVJ2Ykd4NUtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOamIzQmxMbVZ1WVdKc1pWSnZkR0YwWlNrZ2FHRnVaR3hsVkc5MVkyaE5iM1psVW05MFlYUmxLR1YyWlc1MEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiMjVRYjJsdWRHVnlSRzkzYmlobGRtVnVkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJOdmNHVXVaVzVoWW14bFpDQTlQVDBnWm1Gc2MyVXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQnZhVzUwWlhKekxteGxibWQwYUNBOVBUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJOdmNHVXVaRzl0Uld4bGJXVnVkQzV6WlhSUWIybHVkR1Z5UTJGd2RIVnlaU2hsZG1WdWRDNXdiMmx1ZEdWeVNXUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHOXRSV3hsYldWdWRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSndiMmx1ZEdWeWJXOTJaU0lzSUc5dVVHOXBiblJsY2sxdmRtVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHOXRSV3hsYldWdWRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSndiMmx1ZEdWeWRYQWlMQ0J2YmxCdmFXNTBaWEpWY0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1lXUmtVRzlwYm5SbGNpaGxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobGRtVnVkQzV3YjJsdWRHVnlWSGx3WlNBOVBUMGdJblJ2ZFdOb0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMjVVYjNWamFGTjBZWEowS0dWMlpXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVRXOTFjMlZFYjNkdUtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ2YmxCdmFXNTBaWEpOYjNabEtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelkyOXdaUzVsYm1GaWJHVmtJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV2x6WDJsdVgzTmpaVzVsS0dWMlpXNTBLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aWFpsYm5RdWNHOXBiblJsY2xSNWNHVWdQVDA5SUNKMGIzVmphQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVZHOTFZMmhOYjNabEtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVUVzkxYzJWTmIzWmxLR1YyWlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdmJsQnZhVzUwWlhKVmNDaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlcxdmRtVlFiMmx1ZEdWeUtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hCdmFXNTBaWEp6TG14bGJtZDBhQ0E5UFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHOXRSV3hsYldWdWRDNXlaV3hsWVhObFVHOXBiblJsY2tOaGNIUjFjbVVvWlhabGJuUXVjRzlwYm5SbGNrbGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbExtUnZiVVZzWlcxbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpY0c5cGJuUmxjbTF2ZG1VaUxDQnZibEJ2YVc1MFpYSk5iM1psS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMbVJ2YlVWc1pXMWxiblF1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWNHOXBiblJsY25Wd0lpd2diMjVRYjJsdWRHVnlWWEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMbVJwYzNCaGRHTm9SWFpsYm5Rb1gyVnVaRVYyWlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGRHVWdQU0JUVkVGVVJTNU9UMDVGT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdmJrMXZkWE5sUkc5M2JpaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JXOTFjMlZCWTNScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsZG1WdWRDNWlkWFIwYjI0cGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F3T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZkWE5sUVdOMGFXOXVJRDBnYzJOdmNHVXViVzkxYzJWQ2RYUjBiMjV6TGt4RlJsUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiVzkxYzJWQlkzUnBiMjRnUFNCelkyOXdaUzV0YjNWelpVSjFkSFJ2Ym5NdVRVbEVSRXhGT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxRV04wYVc5dUlEMGdjMk52Y0dVdWJXOTFjMlZDZFhSMGIyNXpMbEpKUjBoVU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRiM1Z6WlVGamRHbHZiaUE5SUMweE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNodGIzVnpaVUZqZEdsdmJpbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhwNExrUlBURXhaT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNWxibUZpYkdWYWIyOXRJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJtUnNaVTF2ZFhObFJHOTNia1J2Ykd4NUtHVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0YwWlNBOUlGTlVRVlJGTGtSUFRFeFpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCNmVDNVNUMVJCVkVVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWMlpXNTBMbU4wY214TFpYa2dmSHdnWlhabGJuUXViV1YwWVV0bGVTQjhmQ0JsZG1WdWRDNXphR2xtZEV0bGVTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJOdmNHVXVaVzVoWW14bFVHRnVJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZVzVrYkdWTmIzVnpaVVJ2ZDI1UVlXNG9aWFpsYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHRjBaU0E5SUZOVVFWUkZMbEJCVGpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdVpXNWhZbXhsVW05MFlYUmxJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZVzVrYkdWTmIzVnpaVVJ2ZDI1U2IzUmhkR1VvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0YwWlNBOUlGTlVRVlJGTGxKUFZFRlVSVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSHA0TGxCQlRqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblF1WTNSeWJFdGxlU0I4ZkNCbGRtVnVkQzV0WlhSaFMyVjVJSHg4SUdWMlpXNTBMbk5vYVdaMFMyVjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelkyOXdaUzVsYm1GaWJHVlNiM1JoZEdVZ1BUMDlJR1poYkhObEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJtUnNaVTF2ZFhObFJHOTNibEp2ZEdGMFpTaGxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYUmxJRDBnVTFSQlZFVXVVazlVUVZSRk93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNWxibUZpYkdWUVlXNGdQVDA5SUdaaGJITmxLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGhibVJzWlUxdmRYTmxSRzkzYmxCaGJpaGxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYUmxJRDBnVTFSQlZFVXVVRUZPT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1JoZEdVZ1BTQlRWRUZVUlM1T1QwNUZPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRHRjBaU0FoUFQwZ1UxUkJWRVV1VGs5T1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdVpHbHpjR0YwWTJoRmRtVnVkQ2hmYzNSaGNuUkZkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYjI1TmIzVnpaVTF2ZG1Vb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tITjBZWFJsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdVMVJCVkVVdVVrOVVRVlJGT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNWxibUZpYkdWU2IzUmhkR1VnUFQwOUlHWmhiSE5sS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnVaR3hsVFc5MWMyVk5iM1psVW05MFlYUmxLR1YyWlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVTFSQlZFVXVSRTlNVEZrNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOamIzQmxMbVZ1WVdKc1pWcHZiMjBnUFQwOUlHWmhiSE5sS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnVaR3hsVFc5MWMyVk5iM1psUkc5c2JIa29aWFpsYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JUVkVGVVJTNVFRVTQ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5qYjNCbExtVnVZV0pzWlZCaGJpQTlQVDBnWm1Gc2MyVXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVc1a2JHVk5iM1Z6WlUxdmRtVlFZVzRvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHOXVUVzkxYzJWWGFHVmxiQ2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdVpXNWhZbXhsWkNBOVBUMGdabUZzYzJVZ2ZId2djMk52Y0dVdVpXNWhZbXhsV205dmJTQTlQVDBnWm1Gc2MyVWdmSHdnYzNSaGRHVWdJVDA5SUZOVVFWUkZMazVQVGtVZ2ZId2dJV2x6WDJsdVgzTmpaVzVsS0dWMlpXNTBLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzVrYVhOd1lYUmphRVYyWlc1MEtGOXpkR0Z5ZEVWMlpXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FHRnVaR3hsVFc5MWMyVlhhR1ZsYkNobGRtVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmpiM0JsTG1ScGMzQmhkR05vUlhabGJuUW9YMlZ1WkVWMlpXNTBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYjI1TFpYbEViM2R1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTNWxibUZpYkdWa0lEMDlQU0JtWVd4elpTQjhmQ0J6WTI5d1pTNWxibUZpYkdWUVlXNGdQVDA5SUdaaGJITmxLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUdoaGJtUnNaVXRsZVVSdmQyNG9aWFpsYm5RcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnZibFJ2ZFdOb1UzUmhjblFvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhZMnRRYjJsdWRHVnlLR1YyWlc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LSEJ2YVc1MFpYSnpMbXhsYm1kMGFDbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tITmpiM0JsTG5SdmRXTm9aWE11VDA1RktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JXZUM1U1QxUkJWRVU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdVpXNWhZbXhsVW05MFlYUmxJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGdVpHeGxWRzkxWTJoVGRHRnlkRkp2ZEdGMFpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGRHVWdQU0JUVkVGVVJTNVVUMVZEU0Y5U1QxUkJWRVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCV2VDNVFRVTQ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdVpXNWhZbXhsVUdGdUlEMDlQU0JtWVd4elpTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR0Z1Wkd4bFZHOTFZMmhUZEdGeWRGQmhiaWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhkR1VnUFNCVFZFRlVSUzVVVDFWRFNGOVFRVTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhSbElEMGdVMVJCVkVVdVRrOU9SVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0hOamIzQmxMblJ2ZFdOb1pYTXVWRmRQS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQldlQzVFVDB4TVdWOVFRVTQ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMk52Y0dVdVpXNWhZbXhsV205dmJTQTlQVDBnWm1Gc2MyVWdKaVlnYzJOdmNHVXVaVzVoWW14bFVHRnVJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGdVpHeGxWRzkxWTJoVGRHRnlkRVJ2Ykd4NVVHRnVLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHRjBaU0E5SUZOVVFWUkZMbFJQVlVOSVgwUlBURXhaWDFCQlRqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRlo0TGtSUFRFeFpYMUpQVkVGVVJUb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelkyOXdaUzVsYm1GaWJHVmFiMjl0SUQwOVBTQm1ZV3h6WlNBbUppQnpZMjl3WlM1bGJtRmliR1ZTYjNSaGRHVWdQVDA5SUdaaGJITmxLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVc1a2JHVlViM1ZqYUZOMFlYSjBSRzlzYkhsU2IzUmhkR1VvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWFJsSUQwZ1UxUkJWRVV1VkU5VlEwaGZSRTlNVEZsZlVrOVVRVlJGT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGMFpTQTlJRk5VUVZSRkxrNVBUa1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0YwWlNBOUlGTlVRVlJGTGs1UFRrVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMFlYUmxJQ0U5UFNCVFZFRlVSUzVPVDA1RktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlM1a2FYTndZWFJqYUVWMlpXNTBLRjl6ZEdGeWRFVjJaVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ2YmxSdmRXTm9UVzkyWlNobGRtVnVkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZqYTFCdmFXNTBaWElvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvYzNSaGRHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCVFZFRlVSUzVVVDFWRFNGOVNUMVJCVkVVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOamIzQmxMbVZ1WVdKc1pWSnZkR0YwWlNBOVBUMGdabUZzYzJVcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZVzVrYkdWVWIzVmphRTF2ZG1WU2IzUmhkR1VvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCVFZFRlVSUzVVVDFWRFNGOVFRVTQ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5qYjNCbExtVnVZV0pzWlZCaGJpQTlQVDBnWm1Gc2MyVXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVc1a2JHVlViM1ZqYUUxdmRtVlFZVzRvWlhabGJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOamIzQmxMblZ3WkdGMFpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCVFZFRlVSUzVVVDFWRFNGOUVUMHhNV1Y5UVFVNDZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmpiM0JsTG1WdVlXSnNaVnB2YjIwZ1BUMDlJR1poYkhObElDWW1JSE5qYjNCbExtVnVZV0pzWlZCaGJpQTlQVDBnWm1Gc2MyVXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVc1a2JHVlViM1ZqYUUxdmRtVkViMnhzZVZCaGJpaGxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk52Y0dVdWRYQmtZWFJsS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRk5VUVZSRkxsUlBWVU5JWDBSUFRFeFpYMUpQVkVGVVJUb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyTnZjR1V1Wlc1aFlteGxXbTl2YlNBOVBUMGdabUZzYzJVZ0ppWWdjMk52Y0dVdVpXNWhZbXhsVW05MFlYUmxJRDA5UFNCbVlXeHpaU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJtUnNaVlJ2ZFdOb1RXOTJaVVJ2Ykd4NVVtOTBZWFJsS0dWMlpXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkyOXdaUzUxY0dSaGRHVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGRHVWdQU0JUVkVGVVJTNU9UMDVGT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzl1UTI5dWRHVjRkRTFsYm5Vb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOamIzQmxMbVZ1WVdKc1pXUWdQVDA5SUdaaGJITmxLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR0ZrWkZCdmFXNTBaWElvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblJsY25NdWNIVnphQ2hsZG1WdWRDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSEpsYlc5MlpWQnZhVzUwWlhJb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElIQnZhVzUwWlhKUWIzTnBkR2x2Ym5OYlpYWmxiblF1Y0c5cGJuUmxja2xrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJSEJ2YVc1MFpYSnpMbXhsYm1kMGFEc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiMmx1ZEdWeWMxdHBYUzV3YjJsdWRHVnlTV1FnUFQwZ1pYWmxiblF1Y0c5cGJuUmxja2xrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SbGNuTXVjM0JzYVdObEtHa3NJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUIwY21GamExQnZhVzUwWlhJb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhCdmMybDBhVzl1SUQwZ2NHOXBiblJsY2xCdmMybDBhVzl1YzF0bGRtVnVkQzV3YjJsdWRHVnlTV1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0c5emFYUnBiMjRnUFQwOUlIVnVaR1ZtYVc1bFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNGdQU0J1WlhjZ1dpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SbGNsQnZjMmwwYVc5dWMxdGxkbVZ1ZEM1d2IybHVkR1Z5U1dSZElEMGdjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNHVjMlYwS0dWMlpXNTBMbkJoWjJWWUxDQmxkbVZ1ZEM1d1lXZGxXU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdkbGRGTmxZMjl1WkZCdmFXNTBaWEpRYjNOcGRHbHZiaWhsZG1WdWRDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J3YjJsdWRHVnlJRDBnWlhabGJuUXVjRzlwYm5SbGNrbGtJRDA5UFNCd2IybHVkR1Z5YzFzd1hTNXdiMmx1ZEdWeVNXUWdQeUJ3YjJsdWRHVnljMXN4WFNBNklIQnZhVzUwWlhKeld6QmRPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0c5cGJuUmxjbEJ2YzJsMGFXOXVjMXR3YjJsdWRHVnlMbkJ2YVc1MFpYSkpaRjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhOamIzQmxMbVJ2YlVWc1pXMWxiblF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpWTI5dWRHVjRkRzFsYm5VaUxDQnZia052Ym5SbGVIUk5aVzUxS1RzS0lDQWdJQ0FnSUNCelkyOXdaUzVrYjIxRmJHVnRaVzUwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5CdmFXNTBaWEprYjNkdUlpd2diMjVRYjJsdWRHVnlSRzkzYmlrN0NpQWdJQ0FnSUNBZ2MyTnZjR1V1Wkc5dFJXeGxiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKd2IybHVkR1Z5WTJGdVkyVnNJaXdnYjI1UWIybHVkR1Z5VlhBcE93b2dJQ0FnSUNBZ0lITmpiM0JsTG1SdmJVVnNaVzFsYm5RdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyaGxaV3dpTENCdmJrMXZkWE5sVjJobFpXd3NJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHRnpjMmwyWlRvZ1ptRnNjMlVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJR1YyWlc1MGN6SjFibWwwYkdWemN5aHpZM0psWlc0c0lHVjJaVzUwS1NCN0NpQWdJQ0JqYjI1emRDQjdJR05oYm5aaGN5QXNJSGRwYm5OallXeGxJQ3dnY21WdVpHVnlaWElnSUgwZ1BTQnpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQnlaV04wSUQwZ1kyRnVkbUZ6TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BPd29nSUNBZ1kyOXVjM1FnZUNBOUlDaGxkbVZ1ZEM1amJHbGxiblJZSUMwZ2NtVmpkQzVzWldaMEtTQXZJSGRwYm5OallXeGxPd29nSUNBZ1kyOXVjM1FnZVNBOUlDaGxkbVZ1ZEM1amJHbGxiblJaSUMwZ2NtVmpkQzUwYjNBcElDOGdkMmx1YzJOaGJHVTdDaUFnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSUhnc0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdVgyaGxhV2RvZENBdElIa0tJQ0FnSUYwN0NuMEtablZ1WTNScGIyNGdTV1JsYm5ScGRIazBlRFFvS1NCN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUhwbEtDazdDbjBLWm5WdVkzUnBiMjRnYVc1ZmMyTmxibVVvYzJObGJtVXNJRzF2ZFhObFgyVjJaVzUwS1NCN0NpQWdJQ0JqYjI1emRDQmJlQ3dnZVYwZ1BTQmxkbVZ1ZEhNeWRXNXBkR3hsYzNNb2MyTmxibVV1YzJOeVpXVnVMQ0J0YjNWelpWOWxkbVZ1ZENrN0NpQWdJQ0JqYjI1emRDQmJjM2dzSUhONUxDQnpkeXdnYzJoZElEMGdjMk5sYm1VdWRtbGxkM0J2Y25RdWRtRnNkV1U3Q2lBZ0lDQnlaWFIxY200Z2VDQStQU0J6ZUNBbUppQjRJRHdnYzNnZ0t5QnpkeUFtSmlCNUlENDlJSE41SUNZbUlIa2dQQ0J6ZVNBcklITm9Pd3A5Q21aMWJtTjBhVzl1SUdGMGRHRmphRjh6WkY5allXMWxjbUVvWTJGdWRtRnpMQ0J0WVd0cFpWOWpZVzFsY21Fc0lHTmhiVE5rTENCc2FXZG9kRjlrYVhJc0lITmpaVzVsS1NCN0NpQWdJQ0JwWmlBb1kyRnRNMlFnUFQwOUlIVnVaR1ZtYVc1bFpDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElGdDNMQ0JvWFNBOUlHMWhhMmxsWDJOaGJXVnlZUzV5WlhOdmJIVjBhVzl1TG5aaGJIVmxPd29nSUNBZ1kyOXVjM1FnWTJGdFpYSmhJRDBnYm1WM0lIbDBLR05oYlROa0xtWnZkaTUyWVd4MVpTd2dkeUF2SUdnc0lEQXVNREVzSURFd01DNHdLVHNLSUNBZ0lHTnZibk4wSUdObGJuUmxjaUE5SUc1bGR5QkJLQzR1TG1OaGJUTmtMbXh2YjJ0aGRDNTJZV3gxWlNrN0NpQWdJQ0JqWVcxbGNtRXVkWEFnUFNCdVpYY2dRU2d1TGk1allXMHpaQzUxY0habFkzUnZjaTUyWVd4MVpTazdDaUFnSUNCallXMWxjbUV1Y0c5emFYUnBiMjR1YzJWMEtDNHVMbU5oYlROa0xtVjVaWEJ2YzJsMGFXOXVMblpoYkhWbEtUc0tJQ0FnSUdOaGJXVnlZUzVzYjI5clFYUW9ZMlZ1ZEdWeUtUc0tJQ0FnSUdOdmJuTjBJSFZ6WlY5dmNtSnBkRjlqWVcwZ1BTQW9LVDArSVNoS1UxTmxjblpsTG1OaGJsOXpaVzVrWDNSdlgycDFiR2xoSUNZbUlFcFRVMlZ5ZG1VdVkyRnVYM05sYm1SZmRHOWZhblZzYVdFb0tTazdDaUFnSUNCamIyNXpkQ0JqYjI1MGNtOXNjeUE5SUc1bGR5QlBjbUpwZEVOdmJuUnliMnh6S0dOaGJXVnlZU3dnWTJGdWRtRnpMQ0IxYzJWZmIzSmlhWFJmWTJGdExDQW9aU2s5UG1sdVgzTmpaVzVsS0hOalpXNWxMQ0JsS1NrN0NpQWdJQ0JqYjI1MGNtOXNjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pqYUdGdVoyVWlMQ0FvWlNrOVBuc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMmFXVjNJRDBnWTJGdFpYSmhMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndjbTlxWldOMGFXOXVJRDBnWTJGdFpYSmhMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZzdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1czZHBaSFJvTENCb1pXbG5hSFJkSUQwZ1kyRnRNMlF1Y21WemIyeDFkR2x2Ymk1MllXeDFaVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmJlQ3dnZVN3Z2VsMGdQU0JqWVcxbGNtRXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExtRnpjR1ZqZENBOUlIZHBaSFJvSUM4Z2FHVnBaMmgwT3dvZ0lDQWdJQ0FnSUdOaGJXVnlZUzUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDazdDaUFnSUNBZ0lDQWdiV0ZyYVdWZlkyRnRaWEpoTG5Wd1pHRjBaVjl0WVhSeWFXTmxjeWgyYVdWM0xtVnNaVzFsYm5SekxDQndjbTlxWldOMGFXOXVMbVZzWlcxbGJuUnpMQ0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRS0lDQWdJQ0FnSUNCZExDQmJDaUFnSUNBZ0lDQWdJQ0FnSUhnc0NpQWdJQ0FnSUNBZ0lDQWdJSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lIb0tJQ0FnSUNBZ0lDQmRLVHNLSUNBZ0lDQWdJQ0J0WVd0cFpWOWpZVzFsY21FdWRYQmtZWFJsWDJ4cFoyaDBYMlJwY2loc2FXZG9kRjlrYVhJdWRtRnNkV1VwT3dvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z2JYVnNLR0VzSUdJcElIc0tJQ0FnSUhKbGRIVnliaUJpTG1Oc2IyNWxLQ2t1YlhWc2RHbHdiSGtvWVNrN0NuMEtablZ1WTNScGIyNGdiM0owYUc5bmNtRndhR2xqY0hKdmFtVmpkR2x2Ymloc1pXWjBMQ0J5YVdkb2RDd2dZbTkwZEc5dExDQjBiM0FzSUhwdVpXRnlMQ0I2Wm1GeUtTQjdDaUFnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSURJZ0x5QW9jbWxuYUhRZ0xTQnNaV1owS1N3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURJZ0x5QW9kRzl3SUMwZ1ltOTBkRzl0S1N3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUMweUlDOGdLSHBtWVhJZ0xTQjZibVZoY2lrc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXRLSEpwWjJoMElDc2diR1ZtZENrZ0x5QW9jbWxuYUhRZ0xTQnNaV1owS1N3S0lDQWdJQ0FnSUNBdEtIUnZjQ0FySUdKdmRIUnZiU2tnTHlBb2RHOXdJQzBnWW05MGRHOXRLU3dLSUNBZ0lDQWdJQ0F0S0hwbVlYSWdLeUI2Ym1WaGNpa2dMeUFvZW1aaGNpQXRJSHB1WldGeUtTd0tJQ0FnSUNBZ0lDQXhDaUFnSUNCZE93cDlDbVoxYm1OMGFXOXVJSEJwZUdWc1gzTndZV05sWDJsdWRtVnljMlVvZHl3Z2FDd2dibVZoY2lrZ2V3b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0F3TGpVZ0tpQjNMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQzQxSUNvZ2FDd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lHNWxZWElzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xqVWdLaUIzTEFvZ0lDQWdJQ0FnSURBdU5TQXFJR2dzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBeENpQWdJQ0JkT3dwOUNtWjFibU4wYVc5dUlISmxiR0YwYVhabFgzTndZV05sS0NrZ2V3b2dJQ0FnWTI5dWMzUWdjbVZzWVhScGRtVWdQU0JKWkdWdWRHbDBlVFI0TkNncE93b2dJQ0FnY21Wc1lYUnBkbVV1Wm5KdmJVRnljbUY1S0ZzS0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREVLSUNBZ0lGMHBPd29nSUNBZ2NtVjBkWEp1SUhKbGJHRjBhWFpsT3dwOUNtTnNZWE56SUUxaGEybGxRMkZ0WlhKaElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNJRDBnYm1WM0lGQjFLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2YmlBOUlHNWxkeUJRZFNoSlpHVnVkR2wwZVRSNE5DZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzSUQwZ2JtVjNJRkIxS0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNHbDRaV3hmYzNCaFkyVWdQU0J1WlhjZ1VIVW9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sSUQwZ2JtVjNJRkIxS0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGRmYVc1MlpYSnpaU0E5SUc1bGR5QlFkU2hKWkdWdWRHbDBlVFI0TkNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJHRjBhWFpsWDNOd1lXTmxJRDBnYm1WM0lGQjFLSEpsYkdGMGFYWmxYM053WVdObEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNtVnNZWFJwZG1WZmFXNTJaWEp6WlNBOUlHNWxkeUJRZFNoeVpXeGhkR2wyWlY5emNHRmpaU2dwTG1sdWRtVnlkQ2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU5zYVhCZmMzQmhZMlVnUFNCdVpYY2dVSFVvU1dSbGJuUnBkSGswZURRb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFYwYVc5dUlEMGdibVYzSUZCMUtHNWxkeUJhS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11WlhsbGNHOXphWFJwYjI0Z1BTQnVaWGNnVUhVb2JtVjNJRUVvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y21Wd2NtOXFaV04wYVc5dWN5QTlJSHQ5T3dvZ0lDQWdJQ0FnSUhSb2FYTXViR2xuYUhSZlpHbHlaV04wYVc5dUlEMGdibVYzSUZCMUtHNWxkeUJCS0MweExDQXRNU3dnTFRFcExtNXZjbTFoYkdsNlpTZ3BLVHNLSUNBZ0lIMEtJQ0FnSUdOaGJHTjFiR0YwWlY5dFlYUnlhV05sY3lncElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCYmR5d2dhRjBnUFNCMGFHbHpMbkpsYzI5c2RYUnBiMjR1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2JtVmhjbU5zYVhBZ1BTQXRNVEJmTURBd093b2dJQ0FnSUNBZ0lIUm9hWE11Y0dsNFpXeGZjM0JoWTJVdWRtRnNkV1V1Wm5KdmJVRnljbUY1S0c5eWRHaHZaM0poY0docFkzQnliMnBsWTNScGIyNG9NQ3dnZHl3Z01Dd2dhQ3dnYm1WaGNtTnNhWEFzSURFd1h6QXdNQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjR2w0Wld4ZmMzQmhZMlZmYVc1MlpYSnpaUzUyWVd4MVpTNW1jbTl0UVhKeVlYa29jR2w0Wld4ZmMzQmhZMlZmYVc1MlpYSnpaU2gzTENCb0xDQnVaV0Z5WTJ4cGNDa3BPd29nSUNBZ0lDQWdJR052Ym5OMElIQnliMnBmZG1sbGR5QTlJRzExYkNoMGFHbHpMblpwWlhjdWRtRnNkV1VzSUhSb2FYTXVjSEp2YW1WamRHbHZiaTUyWVd4MVpTazdDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dWRtbGxkeTUyWVd4MVpTQTlJSEJ5YjJwZmRtbGxkenNLSUNBZ0lDQWdJQ0IwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzWDJsdWRtVnljMlV1ZG1Gc2RXVWdQU0J3Y205cVgzWnBaWGN1WTJ4dmJtVW9LUzVwYm5abGNuUW9LVHNLSUNBZ0lDQWdJQ0JQWW1wbFkzUXVhMlY1Y3loMGFHbHpMbkJ5WlhCeWIycGxZM1JwYjI1ektTNW1iM0pGWVdOb0tDaHJaWGtwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElGdHpjR0ZqWlN3Z2JXRnlhMlZ5YzNCaFkyVmRJRDBnYTJWNUxuTndiR2wwS0NJc0lpazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSEpsY0hKdmFtVmpkR2x2Ym5OYmEyVjVYUzUyWVd4MVpTQTlJSFJvYVhNdVkyRnNZM1ZzWVhSbFgzQnlaWEJ5YjJwbFkzUnBiMjVmYldGMGNtbDRLSE53WVdObExDQnRZWEpyWlhKemNHRmpaU2s3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWZmJXRjBjbWxqWlhNb2RtbGxkeXdnY0hKdmFtVmpkR2x2Yml3Z2NtVnpiMngxZEdsdmJpd2daWGxsY0c5ektTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNMblpoYkhWbExtWnliMjFCY25KaGVTaDJhV1YzS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkJ5YjJwbFkzUnBiMjR1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLSEJ5YjJwbFkzUnBiMjRwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjJ4MWRHbHZiaTUyWVd4MVpTNW1jbTl0UVhKeVlYa29jbVZ6YjJ4MWRHbHZiaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NWxlV1Z3YjNOcGRHbHZiaTUyWVd4MVpTNW1jbTl0UVhKeVlYa29aWGxsY0c5ektUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJHTjFiR0YwWlY5dFlYUnlhV05sY3lncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlY5c2FXZG9kRjlrYVhJb2JHbG5hSFJmWkdseUtTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1ZDQTlJRzVsZHlCSVpTZ3BMbk5sZEVaeWIyMU5ZWFJ5YVhnMEtIUm9hWE11ZG1sbGR5NTJZV3gxWlNrdWFXNTJaWEowS0NrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1gyUnBjaUE5SUc1bGR5QkJLQ2t1Wm5KdmJVRnljbUY1S0d4cFoyaDBYMlJwY2lrN0NpQWdJQ0FnSUNBZ2JtVjNYMlJwY2k1aGNIQnNlVTFoZEhKcGVETW9WQ2t1Ym05eWJXRnNhWHBsS0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RGOWthWEpsWTNScGIyNHVkbUZzZFdVZ1BTQnVaWGRmWkdseU93b2dJQ0FnZlFvZ0lDQWdZMnhwY0Y5MGIxOXpjR0ZqWlNoemNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbVJoZEdFaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzWDJsdWRtVnljMlV1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h6Y0dGalpTQTlQVDBnSW5CcGVHVnNJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzNCaFkyVWdQVDA5SUNKeVpXeGhkR2wyWlNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnNZWFJwZG1WZmFXNTJaWEp6WlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1lXTmxJRDA5UFNBaVkyeHBjQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4cGNGOXpjR0ZqWlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWUZOd1lXTmxJQ1I3YzNCaFkyVjlJRzV2ZENCeVpXTnZaMjVwZW1Wa1lDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNCaFkyVmZkRzlmWTJ4cGNDaHpjR0ZqWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h6Y0dGalpTQTlQVDBnSW1SaGRHRWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJ5YjJwbFkzUnBiMjUyYVdWM0xuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzQmhZMlVnUFQwOUlDSndhWGhsYkNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHbDRaV3hmYzNCaFkyVXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbkpsYkdGMGFYWmxJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5Wld4aGRHbDJaVjl6Y0dGalpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tITndZV05sSUQwOVBTQWlZMnhwY0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyeHBjRjl6Y0dGalpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1lGTndZV05sSUNSN2MzQmhZMlY5SUc1dmRDQnlaV052WjI1cGVtVmtZQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1kyRnNZM1ZzWVhSbFgzQnlaWEJ5YjJwbFkzUnBiMjVmYldGMGNtbDRLSE53WVdObExDQnRZWEpyWlhKemNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR053SUQwZ2RHaHBjeTVqYkdsd1gzUnZYM053WVdObEtHMWhjbXRsY25Od1lXTmxLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnpZeUE5SUhSb2FYTXVjM0JoWTJWZmRHOWZZMnhwY0NoemNHRmpaU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzExYkNoell5d2dZM0FwT3dvZ0lDQWdmUW9nSUNBZ2NISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdhMlY1SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J6Y0dGalpTd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGeWEyVnljM0JoWTJVS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHTnZibk4wSUcxaGRISnBlRjkxYm1sbWIzSnRJRDBnZEdocGN5NXdjbVZ3Y205cVpXTjBhVzl1YzF0clpYbGRPd29nSUNBZ0lDQWdJR2xtSUNodFlYUnlhWGhmZFc1cFptOXliU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXRjBjbWw0WDNWdWFXWnZjbTA3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYldGMGNtbDRJRDBnZEdocGN5NWpZV3hqZFd4aGRHVmZjSEpsY0hKdmFtVmpkR2x2Ymw5dFlYUnlhWGdvYzNCaFkyVXNJRzFoY210bGNuTndZV05sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RXNXBabTl5YlNBOUlHNWxkeUJRZFNodFlYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CeVpYQnliMnBsWTNScGIyNXpXMnRsZVYwZ1BTQjFibWxtYjNKdE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkVzVwWm05eWJUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMEtZMjl1YzNRZ2MyTmxibVZmWTJGamFHVWdQU0I3ZlRzS1puVnVZM1JwYjI0Z1ptbHNkR1Z5WDJKNVgydGxlU2hrYVdOMExDQnJaWGx6TENCa1pXWmhkV3gwWDNaaGJIVmxJRDBnWm1Gc2MyVXBJSHNLSUNBZ0lHTnZibk4wSUhKbGMzVnNkQ0E5SUh0OU93b2dJQ0FnYTJWNWN5NW1iM0pGWVdOb0tDaHJaWGtwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnZG1Gc0lEMGdaR2xqZEZ0clpYbGRPd29nSUNBZ0lDQWdJR2xtSUNoMllXd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwVzJ0bGVWMGdQU0IyWVd3N0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MFcydGxlVjBnUFNCa1pXWmhkV3gwWDNaaGJIVmxPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd29nSUNBZ2NtVjBkWEp1SUhKbGMzVnNkRHNLZlFwamIyNXpkQ0J3Ykc5MFgyTmhZMmhsSUQwZ2UzMDdDbU52Ym5OMElGUkZXRlJWVWtWZlFWUk1RVk1nUFNCYkNpQWdJQ0IxYm1SbFptbHVaV1FLWFRzS1puVnVZM1JwYjI0Z1lXUmtYM05qWlc1bEtITmpaVzVsWDJsa0xDQjBhSEpsWlY5elkyVnVaU2tnZXdvZ0lDQWdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVmZhV1JkSUQwZ2RHaHlaV1ZmYzJObGJtVTdDbjBLWm5WdVkzUnBiMjRnWm1sdVpGOXpZMlZ1WlNoelkyVnVaVjlwWkNrZ2V3b2dJQ0FnY21WMGRYSnVJSE5qWlc1bFgyTmhZMmhsVzNOalpXNWxYMmxrWFRzS2ZRcG1kVzVqZEdsdmJpQmtaV3hsZEdWZmMyTmxibVVvYzJObGJtVmZhV1FwSUhzS0lDQWdJR052Ym5OMElITmpaVzVsSUQwZ2MyTmxibVZmWTJGamFHVmJjMk5sYm1WZmFXUmRPd29nSUNBZ2FXWWdLQ0Z6WTJWdVpTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS0lDQWdJR1JsYkdWMFpWOTBhSEpsWlY5elkyVnVaU2h6WTJWdVpTazdDaUFnSUNCM2FHbHNaU2h6WTJWdVpTNWphR2xzWkhKbGJpNXNaVzVuZEdnZ1BpQXdLWHNLSUNBZ0lDQWdJQ0J6WTJWdVpTNXlaVzF2ZG1Vb2MyTmxibVV1WTJocGJHUnlaVzViTUYwcE93b2dJQ0FnZlFvZ0lDQWdaR1ZzWlhSbElITmpaVzVsWDJOaFkyaGxXM05qWlc1bFgybGtYVHNLZlFwbWRXNWpkR2x2YmlCbWFXNWtYM0JzYjNSektIQnNiM1JmZFhWcFpITXBJSHNLSUNBZ0lHTnZibk4wSUhCc2IzUnpJRDBnVzEwN0NpQWdJQ0J3Ykc5MFgzVjFhV1J6TG1admNrVmhZMmdvS0dsa0tUMCtld29nSUNBZ0lDQWdJR052Ym5OMElIQnNiM1FnUFNCd2JHOTBYMk5oWTJobFcybGtYVHNLSUNBZ0lDQWdJQ0JwWmlBb2NHeHZkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiRzkwY3k1d2RYTm9LSEJzYjNRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwcE93b2dJQ0FnY21WMGRYSnVJSEJzYjNSek93cDlDbVoxYm1OMGFXOXVJR1JsYkdWMFpWOXpZMlZ1WlhNb2MyTmxibVZmZFhWcFpITXNJSEJzYjNSZmRYVnBaSE1wSUhzS0lDQWdJSEJzYjNSZmRYVnBaSE11Wm05eVJXRmphQ2dvY0d4dmRGOXBaQ2s5UG5zS0lDQWdJQ0FnSUNCamIyNXpkQ0J3Ykc5MElEMGdjR3h2ZEY5allXTm9aVnR3Ykc5MFgybGtYVHNLSUNBZ0lDQWdJQ0JwWmlBb2NHeHZkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdWZmNHeHZkQ2h3Ykc5MEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUtUc0tJQ0FnSUhOalpXNWxYM1YxYVdSekxtWnZja1ZoWTJnb0tITmpaVzVsWDJsa0tUMCtld29nSUNBZ0lDQWdJR1JsYkdWMFpWOXpZMlZ1WlNoelkyVnVaVjlwWkNrN0NpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQnBibk5sY25SZmNHeHZkQ2h6WTJWdVpWOXBaQ3dnY0d4dmRGOWtZWFJoS1NCN0NpQWdJQ0JqYjI1emRDQnpZMlZ1WlNBOUlHWnBibVJmYzJObGJtVW9jMk5sYm1WZmFXUXBPd29nSUNBZ2NHeHZkRjlrWVhSaExtWnZja1ZoWTJnb0tIQnNiM1FwUFQ1N0NpQWdJQ0FnSUNBZ1lXUmtYM0JzYjNRb2MyTmxibVVzSUhCc2IzUXBPd29nSUNBZ2ZTazdDbjBLWm5WdVkzUnBiMjRnWkdWc1pYUmxYM0JzYjNSektIQnNiM1JmZFhWcFpITXBJSHNLSUNBZ0lHTnZibk4wSUhCc2IzUnpJRDBnWm1sdVpGOXdiRzkwY3lod2JHOTBYM1YxYVdSektUc0tJQ0FnSUhCc2IzUnpMbVp2Y2tWaFkyZ29aR1ZzWlhSbFgzQnNiM1FwT3dwOUNtWjFibU4wYVc5dUlHTnZiblpsY25SZmRHVjRkSFZ5WlNoa1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCMFpYZ2dQU0JqY21WaGRHVmZkR1Y0ZEhWeVpTaGtZWFJoS1RzS0lDQWdJSFJsZUM1dVpXVmtjMVZ3WkdGMFpTQTlJSFJ5ZFdVN0NpQWdJQ0IwWlhndWJXbHVSbWxzZEdWeUlEMGdiVzlrVzJSaGRHRXViV2x1Um1sc2RHVnlYVHNLSUNBZ0lIUmxlQzV0WVdkR2FXeDBaWElnUFNCdGIyUmJaR0YwWVM1dFlXZEdhV3gwWlhKZE93b2dJQ0FnZEdWNExtRnVhWE52ZEhKdmNIa2dQU0JrWVhSaExtRnVhWE52ZEhKdmNIazdDaUFnSUNCMFpYZ3VkM0poY0ZNZ1BTQnRiMlJiWkdGMFlTNTNjbUZ3VTEwN0NpQWdJQ0JwWmlBb1pHRjBZUzV6YVhwbExteGxibWQwYUNBK0lERXBJSHNLSUNBZ0lDQWdJQ0IwWlhndWQzSmhjRlFnUFNCdGIyUmJaR0YwWVM1M2NtRndWRjA3Q2lBZ0lDQjlDaUFnSUNCcFppQW9aR0YwWVM1emFYcGxMbXhsYm1kMGFDQStJRElwSUhzS0lDQWdJQ0FnSUNCMFpYZ3VkM0poY0ZJZ1BTQnRiMlJiWkdGMFlTNTNjbUZ3VWwwN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2RHVjRPd3A5Q21aMWJtTjBhVzl1SUdselgzUm9jbVZsWDJacGVHVmtYMkZ5Y21GNUtIWmhiSFZsS1NCN0NpQWdJQ0J5WlhSMWNtNGdkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQnRiMlF1Vm1WamRHOXlNaUI4ZkNCMllXeDFaU0JwYm5OMFlXNWpaVzltSUcxdlpDNVdaV04wYjNJeklIeDhJSFpoYkhWbElHbHVjM1JoYm1ObGIyWWdiVzlrTGxabFkzUnZjalFnZkh3Z2RtRnNkV1VnYVc1emRHRnVZMlZ2WmlCdGIyUXVUV0YwY21sNE5Ec0tmUXBtZFc1amRHbHZiaUIwYjE5MWJtbG1iM0p0S0dSaGRHRXBJSHNLSUNBZ0lHbG1JQ2hrWVhSaExuUjVjR1VnSVQwOUlIVnVaR1ZtYVc1bFpDa2dld29nSUNBZ0lDQWdJR2xtSUNoa1lYUmhMblI1Y0dVZ1BUMGdJbE5oYlhCc1pYSWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNTJaWEowWDNSbGVIUjFjbVVvWkdGMFlTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGdWSGx3WlNBa2UyUmhkR0V1ZEhsd1pYMGdibTkwSUd0dWIzZHVZQ2s3Q2lBZ0lDQjlDaUFnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoa1lYUmhLU0I4ZkNCQmNuSmhlVUoxWm1abGNpNXBjMVpwWlhjb1pHRjBZU2twSUhzS0lDQWdJQ0FnSUNCcFppQW9JV1JoZEdFdVpYWmxjbmtvS0hncFBUNTBlWEJsYjJZZ2VDQTlQVDBnSW01MWJXSmxjaUlwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmtZWFJoT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aR0YwWVM1c1pXNW5kR2dnUFQwZ01pa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHMXZaQzVXWldOMGIzSXlLQ2t1Wm5KdmJVRnljbUY1S0dSaGRHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZUzVzWlc1bmRHZ2dQVDBnTXlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUcxdlpDNVdaV04wYjNJektDa3Vabkp2YlVGeWNtRjVLR1JoZEdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWkdGMFlTNXNaVzVuZEdnZ1BUMGdOQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRzF2WkM1V1pXTjBiM0kwS0NrdVpuSnZiVUZ5Y21GNUtHUmhkR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aR0YwWVM1c1pXNW5kR2dnUFQwZ01UWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYldGMElEMGdibVYzSUcxdlpDNU5ZWFJ5YVhnMEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRDNW1jbTl0UVhKeVlYa29aR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnRZWFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdSaGRHRTdDbjBLWm5WdVkzUnBiMjRnWkdWelpYSnBZV3hwZW1WZmRXNXBabTl5YlhNb1pHRjBZU2tnZXdvZ0lDQWdZMjl1YzNRZ2NtVnpkV3gwSUQwZ2UzMDdDaUFnSUNCbWIzSW9ZMjl1YzNRZ2JtRnRaU0JwYmlCa1lYUmhLWHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlHUmhkR0ZiYm1GdFpWMDdDaUFnSUNBZ0lDQWdhV1lnS0haaGJIVmxJR2x1YzNSaGJtTmxiMllnYlc5a0xsVnVhV1p2Y20wcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WemRXeDBXMjVoYldWZElEMGdkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2MyVnlJRDBnZEc5ZmRXNXBabTl5YlNoMllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxjM1ZzZEZ0dVlXMWxYU0E5SUc1bGR5QnRiMlF1Vlc1cFptOXliU2h6WlhJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQnlaWE4xYkhRN0NuMEtablZ1WTNScGIyNGdiR2x1WlhObFoyMWxiblJ6WDNabGNuUmxlRjl6YUdGa1pYSW9kVzVwWm05eWJYTXNJR0YwZEhKcFluVjBaWE1wSUhzS0lDQWdJR052Ym5OMElHRjBkSEpwWW5WMFpWOWtaV05zSUQwZ1lYUjBjbWxpZFhSbGMxOTBiMTkwZVhCbFgyUmxZMnhoY21GMGFXOXVLR0YwZEhKcFluVjBaWE1wT3dvZ0lDQWdZMjl1YzNRZ2RXNXBabTl5YlY5a1pXTnNJRDBnZFc1cFptOXliWE5mZEc5ZmRIbHdaVjlrWldOc1lYSmhkR2x2YmloMWJtbG1iM0p0Y3lrN0NpQWdJQ0JqYjI1emRDQmpiMnh2Y2lBOUlHRjBkSEpwWW5WMFpWOTBlWEJsS0dGMGRISnBZblYwWlhNdVkyOXNiM0pmYzNSaGNuUXBJSHg4SUhWdWFXWnZjbTFmZEhsd1pTaDFibWxtYjNKdGN5NWpiMnh2Y2w5emRHRnlkQ2s3Q2lBZ0lDQnlaWFIxY200Z1lIQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lHbHVkRHNLSUNBZ0lDQWdJQ0J3Y21WamFYTnBiMjRnYUdsbmFIQWdabXh2WVhRN0Nnb2dJQ0FnSUNBZ0lDUjdZWFIwY21saWRYUmxYMlJsWTJ4OUNpQWdJQ0FnSUNBZ0pIdDFibWxtYjNKdFgyUmxZMng5Q2dvZ0lDQWdJQ0FnSUc5MWRDQjJaV015SUdaZmRYWTdDaUFnSUNBZ0lDQWdiM1YwSUNSN1kyOXNiM0o5SUdaZlkyOXNiM0k3Q2dvZ0lDQWdJQ0FnSUhabFl6SWdaMlYwWDNKbGMyOXNkWFJwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUM4dklESWdLaUJ3ZUY5d1pYSmZkVzVwZENCa2IyVnpiaWQwSUcxaGEyVWdZVzU1SUhObGJuTmxMQ0JpZFhRZ2QyOXlhM01LSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdWRTlFVHl3Z1ptbG5kWEpsSUc5MWRDQjNhR0YwSjNNZ1oyOXBibWNnYjI0aENpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWE52YkhWMGFXOXVJQzhnTWk0d0lDb2djSGhmY0dWeVgzVnVhWFE3Q2lBZ0lDQWdJQ0FnZlFvS0lDQWdJQ0FnSUNCMlpXTXpJSE5qY21WbGJsOXpjR0ZqWlNoMlpXTXpJSEJ2YVc1MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhabFl6UWdkbVZ5ZEdWNElEMGdjSEp2YW1WamRHbHZiblpwWlhjZ0tpQnRiMlJsYkNBcUlIWmxZelFvY0c5cGJuUXNJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RtVmpNeWgyWlhKMFpYZ3VlSGtnS2lCblpYUmZjbVZ6YjJ4MWRHbHZiaWdwTENCMlpYSjBaWGd1ZWlBcklIWmxjblJsZUM1M0lDb2daR1Z3ZEdoZmMyaHBablFwSUM4Z2RtVnlkR1Y0TG5jN0NpQWdJQ0FnSUNBZ2ZRb0tJQ0FnSUNBZ0lDQjJaV016SUhOamNtVmxibDl6Y0dGalpTaDJaV015SUhCdmFXNTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCelkzSmxaVzVmYzNCaFkyVW9kbVZqTXlod2IybHVkQ3dnTUNrcE93b2dJQ0FnSUNBZ0lIMEtDaUFnSUNBZ0lDQWdkbTlwWkNCdFlXbHVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJaV016SUhCZllTQTlJSE5qY21WbGJsOXpjR0ZqWlNoc2FXNWxjRzlwYm5SZmMzUmhjblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjJaV016SUhCZllpQTlJSE5qY21WbGJsOXpjR0ZqWlNoc2FXNWxjRzlwYm5SZlpXNWtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pteHZZWFFnZDJsa2RHZ2dQU0FvY0hoZmNHVnlYM1Z1YVhRZ0tpQW9jRzl6YVhScGIyNHVlQ0E5UFNBeExqQWdQeUJzYVc1bGQybGtkR2hmWlc1a0lEb2diR2x1WlhkcFpIUm9YM04wWVhKMEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUdaZlkyOXNiM0lnUFNCd2IzTnBkR2x2Ymk1NElEMDlJREV1TUNBL0lHTnZiRzl5WDJWdVpDQTZJR052Ykc5eVgzTjBZWEowT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1YM1YySUQwZ2RtVmpNaWh3YjNOcGRHbHZiaTU0TENCd2IzTnBkR2x2Ymk1NUlDc2dNQzQxS1RzS0NpQWdJQ0FnSUNBZ0lDQWdJSFpsWXpJZ2NHOXBiblJCSUQwZ2NGOWhMbmg1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjJaV015SUhCdmFXNTBRaUE5SUhCZllpNTRlVHNLQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxZeklnZUVKaGMybHpJRDBnY0c5cGJuUkNJQzBnY0c5cGJuUkJPd29nSUNBZ0lDQWdJQ0FnSUNCMlpXTXlJSGxDWVhOcGN5QTlJRzV2Y20xaGJHbDZaU2gyWldNeUtDMTRRbUZ6YVhNdWVTd2dlRUpoYzJsekxuZ3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVmpNaUJ3YjJsdWRDQTlJSEJ2YVc1MFFTQXJJSGhDWVhOcGN5QXFJSEJ2YzJsMGFXOXVMbmdnS3lCNVFtRnphWE1nS2lCM2FXUjBhQ0FxSUhCdmMybDBhVzl1TG5rN0Nnb2dJQ0FnSUNBZ0lDQWdJQ0JuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvY0c5cGJuUXVlSGtnTHlCblpYUmZjbVZ6YjJ4MWRHbHZiaWdwTENCd2IzTnBkR2x2Ymk1NElEMDlJREV1TUNBL0lIQmZZaTU2SURvZ2NGOWhMbm9zSURFdU1DazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR0E3Q24wS1puVnVZM1JwYjI0Z2JHbHVaWE5mWm5KaFoyMWxiblJmYzJoaFpHVnlLSFZ1YVdadmNtMXpMQ0JoZEhSeWFXSjFkR1Z6S1NCN0NpQWdJQ0JqYjI1emRDQmpiMnh2Y2lBOUlHRjBkSEpwWW5WMFpWOTBlWEJsS0dGMGRISnBZblYwWlhNdVkyOXNiM0pmYzNSaGNuUXBJSHg4SUhWdWFXWnZjbTFmZEhsd1pTaDFibWxtYjNKdGN5NWpiMnh2Y2w5emRHRnlkQ2s3Q2lBZ0lDQmpiMjV6ZENCamIyeHZjbDkxYm1sbWIzSnRjeUE5SUdacGJIUmxjbDlpZVY5clpYa29kVzVwWm05eWJYTXNJRnNLSUNBZ0lDQWdJQ0FpWTI5c2IzSnlZVzVuWlNJc0NpQWdJQ0FnSUNBZ0ltTnZiRzl5YldGd0lpd0tJQ0FnSUNBZ0lDQWlibUZ1WDJOdmJHOXlJaXdLSUNBZ0lDQWdJQ0FpYUdsbmFHTnNhWEFpTEFvZ0lDQWdJQ0FnSUNKc2IzZGpiR2x3SWdvZ0lDQWdYU2s3Q2lBZ0lDQmpiMjV6ZENCMWJtbG1iM0p0WDJSbFkyd2dQU0IxYm1sbWIzSnRjMTkwYjE5MGVYQmxYMlJsWTJ4aGNtRjBhVzl1S0dOdmJHOXlYM1Z1YVdadmNtMXpLVHNLSUNBZ0lISmxkSFZ5YmlCZ0kyVjRkR1Z1YzJsdmJpQkhURjlQUlZOZmMzUmhibVJoY21SZlpHVnlhWFpoZEdsMlpYTWdPaUJsYm1GaWJHVUtDaUFnSUNCd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCcGJuUTdDaUFnSUNCd2NtVmphWE5wYjI0Z2FHbG5hSEFnWm14dllYUTdDaUFnSUNCd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCellXMXdiR1Z5TWtRN0NpQWdJQ0J3Y21WamFYTnBiMjRnYldWa2FYVnRjQ0J6WVcxd2JHVnlNMFE3Q2dvZ0lDQWdhVzRnZG1Wak1pQm1YM1YyT3dvZ0lDQWdhVzRnSkh0amIyeHZjbjBnWmw5amIyeHZjanNLSUNBZ0lDUjdkVzVwWm05eWJWOWtaV05zZlFvS0lDQWdJRzkxZENCMlpXTTBJR1p5WVdkdFpXNTBYMk52Ykc5eU93b0tJQ0FnSUM4dklFaGhiR1lnZDJsa2RHZ2diMllnWVc1MGFXRnNhV0Z6YVc1bklITnRiMjkwYUhOMFpYQUtJQ0FnSUNOa1pXWnBibVVnUVU1VVNVRk1TVUZUWDFKQlJFbFZVeUF3TGpjd056RXdOamM0TVRFNE5qVTBOellLQ2lBZ0lDQjJaV00wSUdkbGRGOWpiMnh2Y2w5bWNtOXRYMk50WVhBb1pteHZZWFFnZG1Gc2RXVXNJSE5oYlhCc1pYSXlSQ0JqYjJ4dmNtMWhjQ3dnZG1Wak1pQmpiMnh2Y25KaGJtZGxLU0I3Q2lBZ0lDQWdJQ0FnWm14dllYUWdZMjFwYmlBOUlHTnZiRzl5Y21GdVoyVXVlRHNLSUNBZ0lDQWdJQ0JtYkc5aGRDQmpiV0Y0SUQwZ1kyOXNiM0p5WVc1blpTNTVPd29nSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0E4UFNCamJXRjRJQ1ltSUhaaGJIVmxJRDQ5SUdOdGFXNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdhVzRnZG1Gc2RXVWdjbUZ1WjJVc0lHTnZiblJwYm5WbElRb2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9kbUZzZFdVZ1BDQmpiV2x1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnNiM2RqYkdsd093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9kbUZzZFdVZ1BpQmpiV0Y0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm9hV2RvWTJ4cGNEc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0F2THlCcGMyNWhiaUJEUVU0Z1ltVWdZbkp2YTJWdUlDaHZaaUJqYjNWeWMyVXBJQzB1TFFvZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJ6YnlCcFppQnZkWFJ6YVdSbElIWmhiSFZsSUhKaGJtZGxJR0Z1WkNCdWIzUWdjMjFoYkd4bGNpOWlhV2RuWlhJZ2JXbHVMMjFoZUNCM1pTQmhjM04xYldVZ1RtRk9DaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WVc1ZlkyOXNiM0k3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdac2IyRjBJR2t3TVNBOUlHTnNZVzF3S0NoMllXeDFaU0F0SUdOdGFXNHBJQzhnS0dOdFlYZ2dMU0JqYldsdUtTd2dNQzR3TENBeExqQXBPd29nSUNBZ0lDQWdJQzh2SURFdk1DQmpiM0p5WlhOd2IyNWtjeUIwYnlCMGFHVWdZMjl5Ym1WeUlHOW1JSFJvWlNCamIyeHZjbTFoY0N3Z2MyOGdkRzhnY0hKdmNHVnliSGtnYVc1MFpYSndiMnhoZEdVS0lDQWdJQ0FnSUNBdkx5QmlaWFIzWldWdUlIUm9aU0JqYjJ4dmNuTXNJSGRsSUc1bFpXUWdkRzhnYzJOaGJHVWdhWFFzSUhOdklIUm9ZWFFnZEdobElHVnVaSE1nWVhKbElHRjBJREVnTFNBb2MzUmxjSE5wZW1Vdk1pa2dZVzVrSURBcktITjBaWEJ6YVhwbEx6SXBMZ29nSUNBZ0lDQWdJR1pzYjJGMElITjBaWEJ6YVhwbElEMGdNUzR3SUM4Z1pteHZZWFFvZEdWNGRIVnlaVk5wZW1Vb1kyOXNiM0p0WVhBc0lEQXBLVHNLSUNBZ0lDQWdJQ0JwTURFZ1BTQW9NUzR3SUMwZ2MzUmxjSE5wZW1VcElDb2dhVEF4SUNzZ01DNDFJQ29nYzNSbGNITnBlbVU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJsZUhSMWNtVW9ZMjlzYjNKdFlYQXNJSFpsWXpJb2FUQXhMQ0F3TGpBcEtUc0tJQ0FnSUgwS0NpQWdJQ0IyWldNMElHZGxkRjlqYjJ4dmNpaG1iRzloZENCamIyeHZjaXdnYzJGdGNHeGxjakpFSUdOdmJHOXliV0Z3TENCMlpXTXlJR052Ykc5eWNtRnVaMlVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWjJWMFgyTnZiRzl5WDJaeWIyMWZZMjFoY0NoamIyeHZjaXdnWTI5c2IzSnRZWEFzSUdOdmJHOXljbUZ1WjJVcE93b2dJQ0FnZlFvS0lDQWdJSFpsWXpRZ1oyVjBYMk52Ykc5eUtIWmxZelFnWTI5c2IzSXNJR0p2YjJ3Z1kyOXNiM0p0WVhBc0lHSnZiMndnWTI5c2IzSnlZVzVuWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyeHZjanNLSUNBZ0lIMEtJQ0FnSUhabFl6UWdaMlYwWDJOdmJHOXlLSFpsWXpNZ1kyOXNiM0lzSUdKdmIyd2dZMjlzYjNKdFlYQXNJR0p2YjJ3Z1kyOXNiM0p5WVc1blpTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjJaV00wS0dOdmJHOXlMQ0F4TGpBcE93b2dJQ0FnZlFvS0lDQWdJR1pzYjJGMElHRmhjM1JsY0NobWJHOWhkQ0IwYUhKbGMyaHZiR1FzSUdac2IyRjBJSFpoYkhWbEtTQjdDaUFnSUNBZ0lDQWdabXh2WVhRZ1lXWjNhV1IwYUNBOUlHeGxibWQwYUNoMlpXTXlLR1JHWkhnb2RtRnNkV1VwTENCa1JtUjVLSFpoYkhWbEtTa3BJQ29nUVU1VVNVRk1TVUZUWDFKQlJFbFZVenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMjF2YjNSb2MzUmxjQ2gwYUhKbGMyaHZiR1F0WVdaM2FXUjBhQ3dnZEdoeVpYTm9iMnhrSzJGbWQybGtkR2dzSUhaaGJIVmxLVHNLSUNBZ0lIMEtDaUFnSUNCbWJHOWhkQ0JoWVhOMFpYQW9abXh2WVhRZ2RHaHlaWE5vYjJ4a01Td2dabXh2WVhRZ2RHaHlaWE5vYjJ4a01pd2dabXh2WVhRZ1pHbHpkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoWVhOMFpYQW9kR2h5WlhOb2IyeGtNU3dnWkdsemRDa2dLaUJoWVhOMFpYQW9kR2h5WlhOb2IyeGtNaXdnTVM0d0lDMGdaR2x6ZENrN0NpQWdJQ0I5Q2dvZ0lDQWdkbTlwWkNCdFlXbHVLQ2w3Q2lBZ0lDQWdJQ0FnWm14dllYUWdlR0ZzY0doaElEMGdZV0Z6ZEdWd0tEQXVNQ3dnTUM0d0xDQm1YM1YyTG5ncE93b2dJQ0FnSUNBZ0lHWnNiMkYwSUhsaGJIQm9ZU0E5SUdGaGMzUmxjQ2d3TGpBc0lEQXVNQ3dnWmw5MWRpNTVLVHNLSUNBZ0lDQWdJQ0IyWldNMElHTnZiRzl5SUQwZ1oyVjBYMk52Ykc5eUtHWmZZMjlzYjNJc0lHTnZiRzl5YldGd0xDQmpiMnh2Y25KaGJtZGxLVHNLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRjlqYjJ4dmNpQTlJSFpsWXpRb1kyOXNiM0l1Y21kaUxDQmpiMnh2Y2k1aEtUc0tJQ0FnSUgwS0lDQWdJR0E3Q24wS1puVnVZM1JwYjI0Z1kzSmxZWFJsWDJ4cGJtVmZiV0YwWlhKcFlXd29kVzVwWm05eWJYTXNJR0YwZEhKcFluVjBaWE1wSUhzS0lDQWdJR052Ym5OMElIVnVhV1p2Y20xelgyUmxjeUE5SUdSbGMyVnlhV0ZzYVhwbFgzVnVhV1p2Y20xektIVnVhV1p2Y20xektUc0tJQ0FnSUhKbGRIVnliaUJ1WlhjZ1ZFaFNSVVV1VW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3dvZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCMWJtbG1iM0p0YzE5a1pYTXNDaUFnSUNBZ0lDQWdaMnh6YkZabGNuTnBiMjQ2SUZSSVVrVkZMa2RNVTB3ekxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYkdsdVpYTmxaMjFsYm5SelgzWmxjblJsZUY5emFHRmtaWElvZFc1cFptOXliWE5mWkdWekxDQmhkSFJ5YVdKMWRHVnpLU3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2diR2x1WlhOZlpuSmhaMjFsYm5SZmMyaGhaR1Z5S0hWdWFXWnZjbTF6WDJSbGN5d2dZWFIwY21saWRYUmxjeWtzQ2lBZ0lDQWdJQ0FnZEhKaGJuTndZWEpsYm5RNklIUnlkV1VLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdGMGRHRmphRjlwYm5SbGNteGxZWFpsWkY5c2FXNWxYMkoxWm1abGNpaGhkSFJ5WDI1aGJXVXNJR2RsYjIxbGRISjVMQ0J3YjJsdWRITXNJRzVrYVcwc0lHbHpYM05sWjIxbGJuUnpLU0I3Q2lBZ0lDQmpiMjV6ZENCemEybHdYMlZzWlcxeklEMGdhWE5mYzJWbmJXVnVkSE1nUHlBeUlDb2dibVJwYlNBNklHNWthVzA3Q2lBZ0lDQmpiMjV6ZENCaWRXWm1aWElnUFNCdVpYY2dWRWhTUlVVdVNXNXpkR0Z1WTJWa1NXNTBaWEpzWldGMlpXUkNkV1ptWlhJb2NHOXBiblJ6TENCemEybHdYMlZzWlcxekxDQXhLVHNLSUNBZ0lHZGxiMjFsZEhKNUxuTmxkRUYwZEhKcFluVjBaU2hoZEhSeVgyNWhiV1VnS3lBaVgzTjBZWEowSWl3Z2JtVjNJRlJJVWtWRkxrbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtHSjFabVpsY2l3Z2JtUnBiU3dnTUNrcE93b2dJQ0FnWjJWdmJXVjBjbmt1YzJWMFFYUjBjbWxpZFhSbEtHRjBkSEpmYm1GdFpTQXJJQ0pmWlc1a0lpd2dibVYzSUZSSVVrVkZMa2x1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxLR0oxWm1abGNpd2dibVJwYlN3Z2JtUnBiU2twT3dvZ0lDQWdjbVYwZFhKdUlHSjFabVpsY2pzS2ZRcG1kVzVqZEdsdmJpQmpjbVZoZEdWZmJHbHVaVjlwYm5OMFlXNWpaVjluWlc5dFpYUnllU2dwSUhzS0lDQWdJR052Ym5OMElHZGxiMjFsZEhKNUlEMGdibVYzSUZSSVVrVkZMa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUtDazdDaUFnSUNCamIyNXpkQ0JwYm5OMFlXNWpaVjl3YjNOcGRHbHZibk1nUFNCYkNpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXRNQzQxTEFvZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0xUQXVOU3dLSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSURBdU5Td0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQzB3TGpVc0NpQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQXdMalVzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xqVUtJQ0FnSUYwN0NpQWdJQ0JuWlc5dFpYUnllUzV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUZSSVVrVkZMa1pzYjJGME16SkNkV1ptWlhKQmRIUnlhV0oxZEdVb2FXNXpkR0Z1WTJWZmNHOXphWFJwYjI1ekxDQXlLU2s3Q2lBZ0lDQm5aVzl0WlhSeWVTNWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlHNWxkeUJVU0ZKRlJTNVRjR2hsY21Vb0tUc0tJQ0FnSUdkbGIyMWxkSEo1TG1KdmRXNWthVzVuVTNCb1pYSmxMbkpoWkdsMWN5QTlJREV3TURBd01EQXdNREF3TURBd093b2dJQ0FnWjJWdmJXVjBjbmt1Wm5KMWMzUjFiVU4xYkd4bFpDQTlJR1poYkhObE93b2dJQ0FnY21WMGRYSnVJR2RsYjIxbGRISjVPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjlzYVc1bFgySjFabVpsY2loblpXOXRaWFJ5ZVN3Z1luVm1abVZ5Y3l3Z2JtRnRaU3dnWVhSMGNpd2dhWE5mYzJWbmJXVnVkSE1wSUhzS0lDQWdJR052Ym5OMElHWnNZWFJmWW5WbVptVnlJRDBnWVhSMGNpNTJZV3gxWlM1bWJHRjBPd29nSUNBZ1kyOXVjM1FnYm1ScGJYTWdQU0JoZEhSeUxuWmhiSFZsTG5SNWNHVmZiR1Z1WjNSb093b2dJQ0FnWTI5dWMzUWdiR2x1WldKMVptWmxjaUE5SUdGMGRHRmphRjlwYm5SbGNteGxZWFpsWkY5c2FXNWxYMkoxWm1abGNpaHVZVzFsTENCblpXOXRaWFJ5ZVN3Z1pteGhkRjlpZFdabVpYSXNJRzVrYVcxekxDQnBjMTl6WldkdFpXNTBjeWs3Q2lBZ0lDQmlkV1ptWlhKelcyNWhiV1ZkSUQwZ2JHbHVaV0oxWm1abGNqc0tJQ0FnSUhKbGRIVnliaUJtYkdGMFgySjFabVpsY2pzS2ZRcG1kVzVqZEdsdmJpQmpjbVZoZEdWZmJHbHVaVjlpZFdabVpYSnpLR2RsYjIxbGRISjVMQ0JpZFdabVpYSnpMQ0JoZEhSeWFXSjFkR1Z6TENCcGMxOXpaV2R0Wlc1MGN5a2dld29nSUNBZ1ptOXlLR3hsZENCdVlXMWxJR2x1SUdGMGRISnBZblYwWlhNcGV3b2dJQ0FnSUNBZ0lHTnZibk4wSUdGMGRISWdQU0JoZEhSeWFXSjFkR1Z6VzI1aGJXVmRPd29nSUNBZ0lDQWdJR055WldGMFpWOXNhVzVsWDJKMVptWmxjaWhuWlc5dFpYUnllU3dnWW5WbVptVnljeXdnYm1GdFpTd2dZWFIwY2l3Z2FYTmZjMlZuYldWdWRITXBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJR0YwZEdGamFGOTFjR1JoZEdWektHMWxjMmdzSUdKMVptWmxjbk1zSUdGMGRISnBZblYwWlhNc0lHbHpYM05sWjIxbGJuUnpLU0I3Q2lBZ0lDQnNaWFFnWjJWdmJXVjBjbmtnUFNCdFpYTm9MbWRsYjIxbGRISjVPd29nSUNBZ1ptOXlLR3hsZENCdVlXMWxJR2x1SUdGMGRISnBZblYwWlhNcGV3b2dJQ0FnSUNBZ0lHTnZibk4wSUdGMGRISWdQU0JoZEhSeWFXSjFkR1Z6VzI1aGJXVmRPd29nSUNBZ0lDQWdJR0YwZEhJdWIyNG9LRzVsZDE5d2IybHVkSE1wUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaWRXWm1JRDBnWW5WbVptVnljMXR1WVcxbFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibVJwYlhNZ1BTQnVaWGRmY0c5cGJuUnpMblI1Y0dWZmJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdVpYZGZiR2x1WlY5d2IybHVkSE1nUFNCdVpYZGZjRzlwYm5SekxtWnNZWFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUc5c1pGOWpiM1Z1ZENBOUlHSjFabVl1WVhKeVlYa3ViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnVaWGRmWTI5MWJuUWdQU0J1WlhkZmJHbHVaVjl3YjJsdWRITXViR1Z1WjNSb0lDOGdibVJwYlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodmJHUmZZMjkxYm5RZ1BDQnVaWGRmYkdsdVpWOXdiMmx1ZEhNdWJHVnVaM1JvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpYTm9MbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYjIxbGRISjVJRDBnWTNKbFlYUmxYMnhwYm1WZmFXNXpkR0Z1WTJWZloyVnZiV1YwY25rb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSjFabVlnUFNCaGRIUmhZMmhmYVc1MFpYSnNaV0YyWldSZmJHbHVaVjlpZFdabVpYSW9ibUZ0WlN3Z1oyVnZiV1YwY25rc0lHNWxkMTlzYVc1bFgzQnZhVzUwY3l3Z2JtUnBiWE1zSUdselgzTmxaMjFsYm5SektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmtnUFNCblpXOXRaWFJ5ZVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjbk5iYm1GdFpWMGdQU0JpZFdabU93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZblZtWmk1elpYUW9ibVYzWDJ4cGJtVmZjRzlwYm5SektUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCc2MxOW1ZV04wYjNJZ1BTQnBjMTl6WldkdFpXNTBjeUEvSURJZ09pQXhPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J2Wm1aelpYUWdQU0JwYzE5elpXZHRaVzUwY3lBL0lEQWdPaUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQnRaWE5vTG1kbGIyMWxkSEo1TG1sdWMzUmhibU5sUTI5MWJuUWdQU0JOWVhSb0xtMWhlQ2d3TENCdVpYZGZZMjkxYm5RZ0x5QnNjMTltWVdOMGIzSWdMU0J2Wm1aelpYUXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1MbTVsWldSelZYQmtZWFJsSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXVnphQzV1WldWa2MxVndaR0YwWlNBOUlIUnlkV1U3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1gyTnlaV0YwWlY5c2FXNWxLR3hwYm1WZlpHRjBZU3dnYVhOZmMyVm5iV1Z1ZEhNcElIc0tJQ0FnSUdOdmJuTjBJR2RsYjIxbGRISjVJRDBnWTNKbFlYUmxYMnhwYm1WZmFXNXpkR0Z1WTJWZloyVnZiV1YwY25rb0tUc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNuTWdQU0I3ZlRzS0lDQWdJR055WldGMFpWOXNhVzVsWDJKMVptWmxjbk1vWjJWdmJXVjBjbmtzSUdKMVptWmxjbk1zSUd4cGJtVmZaR0YwWVM1aGRIUnlhV0oxZEdWekxDQnBjMTl6WldkdFpXNTBjeWs3Q2lBZ0lDQmpiMjV6ZENCdFlYUmxjbWxoYkNBOUlHTnlaV0YwWlY5c2FXNWxYMjFoZEdWeWFXRnNLR3hwYm1WZlpHRjBZUzUxYm1sbWIzSnRjeXdnWjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3lrN0NpQWdJQ0JqYjI1emRDQnRaWE5vSUQwZ2JtVjNJRlJJVWtWRkxrMWxjMmdvWjJWdmJXVjBjbmtzSUcxaGRHVnlhV0ZzS1RzS0lDQWdJR052Ym5OMElHOW1abk5sZENBOUlHbHpYM05sWjIxbGJuUnpJRDhnTUNBNklERTdDaUFnSUNCamIyNXpkQ0J1WlhkZlkyOTFiblFnUFNCblpXOXRaWFJ5ZVM1aGRIUnlhV0oxZEdWekxteHBibVZ3YjJsdWRGOXpkR0Z5ZEM1amIzVnVkRHNLSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1YVc1emRHRnVZMlZEYjNWdWRDQTlJRTFoZEdndWJXRjRLREFzSUc1bGQxOWpiM1Z1ZENBdElHOW1abk5sZENrN0NpQWdJQ0JoZEhSaFkyaGZkWEJrWVhSbGN5aHRaWE5vTENCaWRXWm1aWEp6TENCc2FXNWxYMlJoZEdFdVlYUjBjbWxpZFhSbGN5d2dhWE5mYzJWbmJXVnVkSE1wT3dvZ0lDQWdjbVYwZFhKdUlHMWxjMmc3Q24wS1puVnVZM1JwYjI0Z1kzSmxZWFJsWDJ4cGJtVW9iR2x1WlY5a1lYUmhLU0I3Q2lBZ0lDQnlaWFIxY200Z1gyTnlaV0YwWlY5c2FXNWxLR3hwYm1WZlpHRjBZU3dnWm1Gc2MyVXBPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjlzYVc1bGMyVm5iV1Z1ZEhNb2JHbHVaVjlrWVhSaEtTQjdDaUFnSUNCeVpYUjFjbTRnWDJOeVpXRjBaVjlzYVc1bEtHeHBibVZmWkdGMFlTd2dkSEoxWlNrN0NuMEtablZ1WTNScGIyNGdaR1Z6WlhKcFlXeHBlbVZmY0d4dmRDaGtZWFJoS1NCN0NpQWdJQ0JzWlhRZ2JXVnphRHNLSUNBZ0lHTnZibk4wSUhWd1pHRjBaVjkyYVhOcFlteGxJRDBnS0hZcFBUNTdDaUFnSUNBZ0lDQWdiV1Z6YUM1MmFYTnBZbXhsSUQwZ2Rqc0tJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0I5T3dvZ0lDQWdhV1lnS0dSaGRHRXVjR3h2ZEY5MGVYQmxJRDA5UFNBaWJHbHVaWE1pS1NCN0NpQWdJQ0FnSUNBZ2JXVnphQ0E5SUdOeVpXRjBaVjlzYVc1bEtHUmhkR0VwT3dvZ0lDQWdmU0JsYkhObElHbG1JQ2hrWVhSaExuQnNiM1JmZEhsd1pTQTlQVDBnSW14cGJtVnpaV2R0Wlc1MGN5SXBJSHNLSUNBZ0lDQWdJQ0J0WlhOb0lEMGdZM0psWVhSbFgyeHBibVZ6WldkdFpXNTBjeWhrWVhSaEtUc0tJQ0FnSUgwZ1pXeHpaU0JwWmlBb0ltbHVjM1JoYm1ObFgyRjBkSEpwWW5WMFpYTWlJR2x1SUdSaGRHRXBJSHNLSUNBZ0lDQWdJQ0J0WlhOb0lEMGdZM0psWVhSbFgybHVjM1JoYm1ObFpGOXRaWE5vS0dSaGRHRXBPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCdFpYTm9JRDBnWTNKbFlYUmxYMjFsYzJnb1pHRjBZU2s3Q2lBZ0lDQjlDaUFnSUNCdFpYTm9MbTVoYldVZ1BTQmtZWFJoTG01aGJXVTdDaUFnSUNCdFpYTm9MbVp5ZFhOMGRXMURkV3hzWldRZ1BTQm1ZV3h6WlRzS0lDQWdJRzFsYzJndWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlHWmhiSE5sT3dvZ0lDQWdiV1Z6YUM1d2JHOTBYM1YxYVdRZ1BTQmtZWFJoTG5WMWFXUTdDaUFnSUNCMWNHUmhkR1ZmZG1semFXSnNaU2hrWVhSaExuWnBjMmxpYkdVdWRtRnNkV1VwT3dvZ0lDQWdaR0YwWVM1MmFYTnBZbXhsTG05dUtIVndaR0YwWlY5MmFYTnBZbXhsS1RzS0lDQWdJR052Ym01bFkzUmZkVzVwWm05eWJYTW9iV1Z6YUN3Z1pHRjBZUzUxYm1sbWIzSnRYM1Z3WkdGMFpYSXBPd29nSUNBZ2FXWWdLQ0VvWkdGMFlTNXdiRzkwWDNSNWNHVWdQVDA5SUNKc2FXNWxjeUlnZkh3Z1pHRjBZUzV3Ykc5MFgzUjVjR1VnUFQwOUlDSnNhVzVsYzJWbmJXVnVkSE1pS1NrZ2V3b2dJQ0FnSUNBZ0lHTnZibTVsWTNSZllYUjBjbWxpZFhSbGN5aHRaWE5vTENCa1lYUmhMbUYwZEhKcFluVjBaVjkxY0dSaGRHVnlLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJ0WlhOb093cDlDbU52Ym5OMElFOU9YMDVGV0ZSZlNVNVRSVkpVSUQwZ2JtVjNJRk5sZENncE93cG1kVzVqZEdsdmJpQnZibDl1WlhoMFgybHVjMlZ5ZENobUtTQjdDaUFnSUNCUFRsOU9SVmhVWDBsT1UwVlNWQzVoWkdRb1ppazdDbjBLWm5WdVkzUnBiMjRnWVdSa1gzQnNiM1FvYzJObGJtVXNJSEJzYjNSZlpHRjBZU2tnZXdvZ0lDQWdZMjl1YzNRZ1kyRnRJRDBnYzJObGJtVXVkMmRzWDJOaGJXVnlZVHNLSUNBZ0lHTnZibk4wSUdsa1pXNTBhWFI1SUQwZ2JtVjNJRzF2WkM1VmJtbG1iM0p0S0c1bGR5QnRiMlF1VFdGMGNtbDROQ2dwS1RzS0lDQWdJR2xtSUNod2JHOTBYMlJoZEdFdVkyRnRYM053WVdObElEMDlJQ0prWVhSaElpa2dld29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTUyYVdWM0lEMGdZMkZ0TG5acFpYYzdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkJ5YjJwbFkzUnBiMjRnUFNCallXMHVjSEp2YW1WamRHbHZianNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2Ym5acFpYY2dQU0JqWVcwdWNISnZhbVZqZEdsdmJuWnBaWGM3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG1WNVpYQnZjMmwwYVc5dUlEMGdZMkZ0TG1WNVpYQnZjMmwwYVc5dU93b2dJQ0FnZlNCbGJITmxJR2xtSUNod2JHOTBYMlJoZEdFdVkyRnRYM053WVdObElEMDlJQ0p3YVhobGJDSXBJSHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11ZG1sbGR5QTlJR2xrWlc1MGFYUjVPd29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV3Y205cVpXTjBhVzl1SUQwZ1kyRnRMbkJwZUdWc1gzTndZV05sT3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdOaGJTNXdhWGhsYkY5emNHRmpaVHNLSUNBZ0lIMGdaV3h6WlNCcFppQW9jR3h2ZEY5a1lYUmhMbU5oYlY5emNHRmpaU0E5UFNBaWNtVnNZWFJwZG1VaUtTQjdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMblpwWlhjZ1BTQnBaR1Z1ZEdsMGVUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiaUE5SUdOaGJTNXlaV3hoZEdsMlpWOXpjR0ZqWlRzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISnZhbVZqZEdsdmJuWnBaWGNnUFNCallXMHVjbVZzWVhScGRtVmZjM0JoWTJVN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTUyYVdWM0lEMGdhV1JsYm5ScGRIazdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkJ5YjJwbFkzUnBiMjRnUFNCcFpHVnVkR2wwZVRzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISnZhbVZqZEdsdmJuWnBaWGNnUFNCcFpHVnVkR2wwZVRzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhzZ2NIaGZjR1Z5WDNWdWFYUWdJSDBnUFNCelkyVnVaUzV6WTNKbFpXNDdDaUFnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNtVnpiMngxZEdsdmJpQTlJR05oYlM1eVpYTnZiSFYwYVc5dU93b2dJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CNFgzQmxjbDkxYm1sMElEMGdibVYzSUcxdlpDNVZibWxtYjNKdEtIQjRYM0JsY2w5MWJtbDBLVHNLSUNBZ0lHbG1JQ2h3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKbGNISnZhbVZqZEdsdmJpa2dld29nSUNBZ0lDQWdJR052Ym5OMElIc2djM0JoWTJVZ0xDQnRZWEpyWlhKemNHRmpaU0FnZlNBOUlIQnNiM1JmWkdGMFlUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEpsY0hKdmFtVmpkR2x2YmlBOUlHTmhiUzV3Y21Wd2NtOXFaV04wYVc5dVgyMWhkSEpwZUNoemNHRmpaUzUyWVd4MVpTd2diV0Z5YTJWeWMzQmhZMlV1ZG1Gc2RXVXBPd29nSUNBZ2ZRb2dJQ0FnYVdZZ0tITmpaVzVsTG1OaGJXVnlZVjl5Wld4aGRHbDJaVjlzYVdkb2RDa2dld29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTVzYVdkb2RGOWthWEpsWTNScGIyNGdQU0JqWVcwdWJHbG5hSFJmWkdseVpXTjBhVzl1T3dvZ0lDQWdJQ0FnSUhOalpXNWxMbXhwWjJoMFgyUnBjbVZqZEdsdmJpNXZiaWdvZG1Gc2RXVXBQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhiUzUxY0dSaGRHVmZiR2xuYUhSZlpHbHlLSFpoYkhWbEtUc0tJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnYkdsbmFIUmZaR2x5SUQwZ2JtVjNJRzF2WkM1V1pXTjBiM0l6S0NrdVpuSnZiVUZ5Y21GNUtITmpaVzVsTG14cFoyaDBYMlJwY21WamRHbHZiaTUyWVd4MVpTazdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbXhwWjJoMFgyUnBjbVZqZEdsdmJpQTlJRzVsZHlCdGIyUXVWVzVwWm05eWJTaHNhV2RvZEY5a2FYSXBPd29nSUNBZ0lDQWdJSE5qWlc1bExteHBaMmgwWDJScGNtVmpkR2x2Ymk1dmJpZ29kbUZzZFdVcFBUNTdDaUFnSUNBZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1c2FXZG9kRjlrYVhKbFkzUnBiMjR1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLSFpoYkhWbEtUc0tJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEFnUFNCa1pYTmxjbWxoYkdsNlpWOXdiRzkwS0hCc2IzUmZaR0YwWVNrN0NpQWdJQ0J3Ykc5MFgyTmhZMmhsVzNBdWNHeHZkRjkxZFdsa1hTQTlJSEE3Q2lBZ0lDQnpZMlZ1WlM1aFpHUW9jQ2s3Q2lBZ0lDQmpiMjV6ZENCdVpYaDBYMmx1YzJWeWRDQTlJRzVsZHlCVFpYUW9UMDVmVGtWWVZGOUpUbE5GVWxRcE93b2dJQ0FnYm1WNGRGOXBibk5sY25RdVptOXlSV0ZqYUNnb1ppazlQbVlvS1NrN0NuMEtablZ1WTNScGIyNGdZMjl1Ym1WamRGOTFibWxtYjNKdGN5aHRaWE5vTENCMWNHUmhkR1Z5S1NCN0NpQWdJQ0IxY0dSaGRHVnlMbTl1S0NoYmJtRnRaU3dnWkdGMFlWMHBQVDU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNWhiV1VnUFQwOUlDSnViMjVsSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR052Ym5OMElIVnVhV1p2Y20wZ1BTQnRaWE5vTG0xaGRHVnlhV0ZzTG5WdWFXWnZjbTF6VzI1aGJXVmRPd29nSUNBZ0lDQWdJR2xtSUNoMWJtbG1iM0p0TG5aaGJIVmxMbWx6VkdWNGRIVnlaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJWOWtZWFJoSUQwZ2RXNXBabTl5YlM1MllXeDFaUzVwYldGblpUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdXM05wZW1Vc0lIUmxlRjlrWVhSaFhTQTlJR1JoZEdFN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMFpYaGZaR0YwWVM1c1pXNW5kR2dnUFQwZ2FXMWZaR0YwWVM1a1lYUmhMbXhsYm1kMGFDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzFmWkdGMFlTNWtZWFJoTG5ObGRDaDBaWGhmWkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnZiR1JmZEdWNGRIVnlaU0E5SUhWdWFXWnZjbTB1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdExuWmhiSFZsSUQwZ2NtVmZZM0psWVhSbFgzUmxlSFIxY21Vb2IyeGtYM1JsZUhSMWNtVXNJSFJsZUY5a1lYUmhMQ0J6YVhwbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXNaRjkwWlhoMGRYSmxMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRMblpoYkhWbExtNWxaV1J6VlhCa1lYUmxJRDBnZEhKMVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYTmZkR2h5WldWZlptbDRaV1JmWVhKeVlYa29kVzVwWm05eWJTNTJZV3gxWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20wdWRtRnNkV1V1Wm5KdmJVRnljbUY1S0dSaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliUzUyWVd4MVpTQTlJR1JoZEdFN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlLVHNLZlFwbWRXNWpkR2x2YmlCamIyNTJaWEowWDFKSFFsOTBiMTlTUjBKQktISm5Za0Z5Y21GNUtTQjdDaUFnSUNCamIyNXpkQ0JzWlc1bmRHZ2dQU0J5WjJKQmNuSmhlUzVzWlc1bmRHZzdDaUFnSUNCamIyNXpkQ0J5WjJKaFFYSnlZWGtnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0d4bGJtZDBhQ0F2SURNZ0tpQTBLVHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUdvZ1BTQXdPeUJwSUR3Z2JHVnVaM1JvT3lCcElDczlJRE1zSUdvZ0t6MGdOQ2w3Q2lBZ0lDQWdJQ0FnY21kaVlVRnljbUY1VzJwZElEMGdjbWRpUVhKeVlYbGJhVjA3Q2lBZ0lDQWdJQ0FnY21kaVlVRnljbUY1VzJvZ0t5QXhYU0E5SUhKbllrRnljbUY1VzJrZ0t5QXhYVHNLSUNBZ0lDQWdJQ0J5WjJKaFFYSnlZWGxiYWlBcklESmRJRDBnY21kaVFYSnlZWGxiYVNBcklESmRPd29nSUNBZ0lDQWdJSEpuWW1GQmNuSmhlVnRxSUNzZ00xMGdQU0F4TGpBN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2NtZGlZVUZ5Y21GNU93cDlDbVoxYm1OMGFXOXVJR055WldGMFpWOTBaWGgwZFhKbEtHUmhkR0VwSUhzS0lDQWdJR052Ym5OMElHSjFabVpsY2lBOUlHUmhkR0V1WkdGMFlUc0tJQ0FnSUdsbUlDaGtZWFJoTG5OcGVtVXViR1Z1WjNSb0lEMDlJRE1wSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0IwWlhnZ1BTQnVaWGNnYlc5a0xrUmhkR0V6UkZSbGVIUjFjbVVvWW5WbVptVnlMQ0JrWVhSaExuTnBlbVZiTUYwc0lHUmhkR0V1YzJsNlpWc3hYU3dnWkdGMFlTNXphWHBsV3pKZEtUc0tJQ0FnSUNBZ0lDQjBaWGd1Wm05eWJXRjBJRDBnYlc5a1cyUmhkR0V1ZEdoeVpXVmZabTl5YldGMFhUc0tJQ0FnSUNBZ0lDQjBaWGd1ZEhsd1pTQTlJRzF2WkZ0a1lYUmhMblJvY21WbFgzUjVjR1ZkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwWlhnN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJR3hsZENCMFpYaGZaR0YwWVRzS0lDQWdJQ0FnSUNCcFppQW9ZblZtWm1WeUlEMDlJQ0owWlhoMGRYSmxYMkYwYkdGeklpa2dld29nSUNBZ0lDQWdJQ0FnSUNCMFpYaGZaR0YwWVNBOUlGUkZXRlJWVWtWZlFWUk1RVk5iTUYwdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRYMlJoZEdFZ1BTQmlkV1ptWlhJN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JtYjNKdFlYUWdQU0J0YjJSYlpHRjBZUzUwYUhKbFpWOW1iM0p0WVhSZE93b2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExuUm9jbVZsWDJadmNtMWhkQ0E5UFNBaVVrZENSbTl5YldGMElpa2dld29nSUNBZ0lDQWdJQ0FnSUNCMFpYaGZaR0YwWVNBOUlHTnZiblpsY25SZlVrZENYM1J2WDFKSFFrRW9kR1Y0WDJSaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFFnUFNCdGIyUXVVa2RDUVVadmNtMWhkRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCdGIyUXVSR0YwWVZSbGVIUjFjbVVvZEdWNFgyUmhkR0VzSUdSaGRHRXVjMmw2WlZzd1hTd2daR0YwWVM1emFYcGxXekZkTENCbWIzSnRZWFFzSUcxdlpGdGtZWFJoTG5Sb2NtVmxYM1I1Y0dWZEtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQnlaVjlqY21WaGRHVmZkR1Y0ZEhWeVpTaHZiR1JmZEdWNGRIVnlaU3dnWW5WbVptVnlMQ0J6YVhwbEtTQjdDaUFnSUNCc1pYUWdkR1Y0T3dvZ0lDQWdhV1lnS0hOcGVtVXViR1Z1WjNSb0lEMDlJRE1wSUhzS0lDQWdJQ0FnSUNCMFpYZ2dQU0J1WlhjZ2JXOWtMa1JoZEdFelJGUmxlSFIxY21Vb1luVm1abVZ5TENCemFYcGxXekJkTENCemFYcGxXekZkTENCemFYcGxXekpkS1RzS0lDQWdJQ0FnSUNCMFpYZ3VabTl5YldGMElEMGdiMnhrWDNSbGVIUjFjbVV1Wm05eWJXRjBPd29nSUNBZ0lDQWdJSFJsZUM1MGVYQmxJRDBnYjJ4a1gzUmxlSFIxY21VdWRIbHdaVHNLSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ2RHVjRJRDBnYm1WM0lHMXZaQzVFWVhSaFZHVjRkSFZ5WlNoaWRXWm1aWElzSUhOcGVtVmJNRjBzSUhOcGVtVmJNVjBnUHlCemFYcGxXekZkSURvZ01Td2diMnhrWDNSbGVIUjFjbVV1Wm05eWJXRjBMQ0J2YkdSZmRHVjRkSFZ5WlM1MGVYQmxLVHNLSUNBZ0lIMEtJQ0FnSUhSbGVDNXRhVzVHYVd4MFpYSWdQU0J2YkdSZmRHVjRkSFZ5WlM1dGFXNUdhV3gwWlhJN0NpQWdJQ0IwWlhndWJXRm5SbWxzZEdWeUlEMGdiMnhrWDNSbGVIUjFjbVV1YldGblJtbHNkR1Z5T3dvZ0lDQWdkR1Y0TG1GdWFYTnZkSEp2Y0hrZ1BTQnZiR1JmZEdWNGRIVnlaUzVoYm1semIzUnliM0I1T3dvZ0lDQWdkR1Y0TG5keVlYQlRJRDBnYjJ4a1gzUmxlSFIxY21VdWQzSmhjRk03Q2lBZ0lDQnBaaUFvYzJsNlpTNXNaVzVuZEdnZ1BpQXhLU0I3Q2lBZ0lDQWdJQ0FnZEdWNExuZHlZWEJVSUQwZ2IyeGtYM1JsZUhSMWNtVXVkM0poY0ZRN0NpQWdJQ0I5Q2lBZ0lDQnBaaUFvYzJsNlpTNXNaVzVuZEdnZ1BpQXlLU0I3Q2lBZ0lDQWdJQ0FnZEdWNExuZHlZWEJTSUQwZ2IyeGtYM1JsZUhSMWNtVXVkM0poY0ZJN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2RHVjRPd3A5Q21aMWJtTjBhVzl1SUVKMVptWmxja0YwZEhKcFluVjBaU2hpZFdabVpYSXBJSHNLSUNBZ0lHTnZibk4wSUdwelluVm1aaUE5SUc1bGR5QnRiMlF1UW5WbVptVnlRWFIwY21saWRYUmxLR0oxWm1abGNpNW1iR0YwTENCaWRXWm1aWEl1ZEhsd1pWOXNaVzVuZEdncE93b2dJQ0FnYW5OaWRXWm1Mbk5sZEZWellXZGxLRzF2WkM1RWVXNWhiV2xqUkhKaGQxVnpZV2RsS1RzS0lDQWdJSEpsZEhWeWJpQnFjMkoxWm1ZN0NuMEtablZ1WTNScGIyNGdTVzV6ZEdGdVkyVkNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1abVZ5S1NCN0NpQWdJQ0JqYjI1emRDQnFjMkoxWm1ZZ1BTQnVaWGNnYlc5a0xrbHVjM1JoYm1ObFpFSjFabVpsY2tGMGRISnBZblYwWlNoaWRXWm1aWEl1Wm14aGRDd2dZblZtWm1WeUxuUjVjR1ZmYkdWdVozUm9LVHNLSUNBZ0lHcHpZblZtWmk1elpYUlZjMkZuWlNodGIyUXVSSGx1WVcxcFkwUnlZWGRWYzJGblpTazdDaUFnSUNCeVpYUjFjbTRnYW5OaWRXWm1Pd3A5Q21aMWJtTjBhVzl1SUdGMGRHRmphRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJSFpsY25SbGVHRnljbUY1Y3l3Z1ptRmpaWE1wSUhzS0lDQWdJR1p2Y2loamIyNXpkQ0J1WVcxbElHbHVJSFpsY25SbGVHRnljbUY1Y3lsN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVppQTlJSFpsY25SbGVHRnljbUY1YzF0dVlXMWxYVHNLSUNBZ0lDQWdJQ0JzWlhRZ1luVm1abVZ5T3dvZ0lDQWdJQ0FnSUdsbUlDaGlkV1ptTG5SdlgzVndaR0YwWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSWdQU0J1WlhjZ2JXOWtMa0oxWm1abGNrRjBkSEpwWW5WMFpTaGlkV1ptTG5SdlgzVndaR0YwWlN3Z1luVm1aaTVwZEdWdFUybDZaU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1luVm1abVZ5SUQwZ1FuVm1abVZ5UVhSMGNtbGlkWFJsS0dKMVptWXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VjMlYwUVhSMGNtbGlkWFJsS0c1aGJXVXNJR0oxWm1abGNpazdDaUFnSUNCOUNpQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VjMlYwU1c1a1pYZ29abUZqWlhNcE93b2dJQ0FnWW5WbVptVnlYMmRsYjIxbGRISjVMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdibVYzSUcxdlpDNVRjR2hsY21Vb0tUc0tJQ0FnSUdKMVptWmxjbDluWlc5dFpYUnllUzVpYjNWdVpHbHVaMU53YUdWeVpTNXlZV1JwZFhNZ1BTQXhNREF3TURBd01EQXdNREF3TURzS0lDQWdJR0oxWm1abGNsOW5aVzl0WlhSeWVTNW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ1ptRnNjMlU3Q2lBZ0lDQnlaWFIxY200Z1luVm1abVZ5WDJkbGIyMWxkSEo1T3dwOUNtWjFibU4wYVc5dUlHRjBkR0ZqYUY5cGJuTjBZVzVqWldSZloyVnZiV1YwY25rb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCcGJuTjBZVzVqWlY5aGRIUnlhV0oxZEdWektTQjdDaUFnSUNCbWIzSW9ZMjl1YzNRZ2JtRnRaU0JwYmlCcGJuTjBZVzVqWlY5aGRIUnlhV0oxZEdWektYc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCaWRXWm1aWElnUFNCSmJuTjBZVzVqWlVKMVptWmxja0YwZEhKcFluVjBaU2hwYm5OMFlXNWpaVjloZEhSeWFXSjFkR1Z6VzI1aGJXVmRLVHNLSUNBZ0lDQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VjMlYwUVhSMGNtbGlkWFJsS0c1aGJXVXNJR0oxWm1abGNpazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdjbVZqY21WaGRHVmZaMlZ2YldWMGNua29iV1Z6YUN3Z2RtVnlkR1Y0WVhKeVlYbHpMQ0JtWVdObGN5a2dld29nSUNBZ1kyOXVjM1FnWW5WbVptVnlYMmRsYjIxbGRISjVJRDBnYm1WM0lHMXZaQzVDZFdabVpYSkhaVzl0WlhSeWVTZ3BPd29nSUNBZ1lYUjBZV05vWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnZG1WeWRHVjRZWEp5WVhsekxDQm1ZV05sY3lrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tUc0tJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua2dQU0JpZFdabVpYSmZaMlZ2YldWMGNuazdDaUFnSUNCdFpYTm9MbTVsWldSelZYQmtZWFJsSUQwZ2RISjFaVHNLZlFwbWRXNWpkR2x2YmlCeVpXTnlaV0YwWlY5cGJuTjBZVzVqWldSZloyVnZiV1YwY25rb2JXVnphQ2tnZXdvZ0lDQWdZMjl1YzNRZ1luVm1abVZ5WDJkbGIyMWxkSEo1SUQwZ2JtVjNJRzF2WkM1SmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU2dwT3dvZ0lDQWdZMjl1YzNRZ2RtVnlkR1Y0WVhKeVlYbHpJRDBnZTMwN0NpQWdJQ0JqYjI1emRDQnBibk4wWVc1alpWOWhkSFJ5YVdKMWRHVnpJRDBnZTMwN0NpQWdJQ0JqYjI1emRDQm1ZV05sY3lBOUlGc0tJQ0FnSUNBZ0lDQXVMaTV0WlhOb0xtZGxiMjFsZEhKNUxtbHVaR1Y0TG1GeWNtRjVDaUFnSUNCZE93b2dJQ0FnVDJKcVpXTjBMbXRsZVhNb2JXVnphQzVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0NodVlXMWxLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJRzFsYzJndVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGMxdHVZVzFsWFRzS0lDQWdJQ0FnSUNCamIyNXpkQ0JqYjNCNUlEMGdZblZtWm1WeUxuUnZYM1Z3WkdGMFpTQS9JR0oxWm1abGNpNTBiMTkxY0dSaGRHVWdPaUJpZFdabVpYSXVZWEp5WVhrdWJXRndLQ2g0S1QwK2VDazdDaUFnSUNBZ0lDQWdhV1lnS0dKMVptWmxjaTVwYzBsdWMzUmhibU5sWkVKMVptWmxja0YwZEhKcFluVjBaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBibk4wWVc1alpWOWhkSFJ5YVdKMWRHVnpXMjVoYldWZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabXhoZERvZ1kyOXdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dWZmJHVnVaM1JvT2lCaWRXWm1aWEl1YVhSbGJWTnBlbVVLSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaGhjbkpoZVhOYmJtRnRaVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJHRjBPaUJqYjNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVjlzWlc1bmRHZzZJR0oxWm1abGNpNXBkR1Z0VTJsNlpRb2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBwT3dvZ0lDQWdZWFIwWVdOb1gyZGxiMjFsZEhKNUtHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2RtVnlkR1Y0WVhKeVlYbHpMQ0JtWVdObGN5azdDaUFnSUNCaGRIUmhZMmhmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tUc0tJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua2dQU0JpZFdabVpYSmZaMlZ2YldWMGNuazdDaUFnSUNCdFpYTm9MbTVsWldSelZYQmtZWFJsSUQwZ2RISjFaVHNLZlFwbWRXNWpkR2x2YmlCamNtVmhkR1ZmYldGMFpYSnBZV3dvY0hKdlozSmhiU2tnZXdvZ0lDQWdZMjl1YzNRZ2FYTmZkbTlzZFcxbElEMGdJblp2YkhWdFpXUmhkR0VpSUdsdUlIQnliMmR5WVcwdWRXNXBabTl5YlhNN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUcxdlpDNVNZWGRUYUdGa1pYSk5ZWFJsY21saGJDaDdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJR1JsYzJWeWFXRnNhWHBsWDNWdWFXWnZjbTF6S0hCeWIyZHlZVzB1ZFc1cFptOXliWE1wTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2djSEp2WjNKaGJTNTJaWEowWlhoZmMyOTFjbU5sTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJ3Y205bmNtRnRMbVp5WVdkdFpXNTBYM052ZFhKalpTd0tJQ0FnSUNBZ0lDQnphV1JsT2lCcGMxOTJiMngxYldVZ1B5QnRiMlF1UW1GamExTnBaR1VnT2lCdGIyUXVSRzkxWW14bFUybGtaU3dLSUNBZ0lDQWdJQ0IwY21GdWMzQmhjbVZ1ZERvZ2RISjFaU3dLSUNBZ0lDQWdJQ0JuYkhOc1ZtVnljMmx2YmpvZ2JXOWtMa2RNVTB3ekxBb2dJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJWEJ5YjJkeVlXMHViM1psY21SeVlYY3VkbUZzZFdVc0NpQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJWEJ5YjJkeVlXMHVkSEpoYm5Od1lYSmxibU41TG5aaGJIVmxDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJqY21WaGRHVmZiV1Z6YUNod2NtOW5jbUZ0S1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhKZloyVnZiV1YwY25rZ1BTQnVaWGNnYlc5a0xrSjFabVpsY2tkbGIyMWxkSEo1S0NrN0NpQWdJQ0JqYjI1emRDQm1ZV05sY3lBOUlHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0hCeWIyZHlZVzB1Wm1GalpYTXVkbUZzZFdVc0lERXBPd29nSUNBZ1lYUjBZV05vWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnY0hKdlozSmhiUzUyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1RzS0lDQWdJR052Ym5OMElHMWhkR1Z5YVdGc0lEMGdZM0psWVhSbFgyMWhkR1Z5YVdGc0tIQnliMmR5WVcwcE93b2dJQ0FnWTI5dWMzUWdiV1Z6YUNBOUlHNWxkeUJ0YjJRdVRXVnphQ2hpZFdabVpYSmZaMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNLVHNLSUNBZ0lIQnliMmR5WVcwdVptRmpaWE11YjI0b0tIZ3BQVDU3Q2lBZ0lDQWdJQ0FnYldWemFDNW5aVzl0WlhSeWVTNXpaWFJKYm1SbGVDaHVaWGNnYlc5a0xrSjFabVpsY2tGMGRISnBZblYwWlNoNExDQXhLU2s3Q2lBZ0lDQjlLVHNLSUNBZ0lISmxkSFZ5YmlCdFpYTm9Pd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjlwYm5OMFlXNWpaV1JmYldWemFDaHdjbTluY21GdEtTQjdDaUFnSUNCamIyNXpkQ0JpZFdabVpYSmZaMlZ2YldWMGNua2dQU0J1WlhjZ2JXOWtMa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUtDazdDaUFnSUNCamIyNXpkQ0JtWVdObGN5QTlJRzVsZHlCdGIyUXVRblZtWm1WeVFYUjBjbWxpZFhSbEtIQnliMmR5WVcwdVptRmpaWE11ZG1Gc2RXVXNJREVwT3dvZ0lDQWdZWFIwWVdOb1gyZGxiMjFsZEhKNUtHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2NISnZaM0poYlM1MlpYSjBaWGhoY25KaGVYTXNJR1poWTJWektUc0tJQ0FnSUdGMGRHRmphRjlwYm5OMFlXNWpaV1JmWjJWdmJXVjBjbmtvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0J3Y205bmNtRnRMbWx1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wT3dvZ0lDQWdZMjl1YzNRZ2JXRjBaWEpwWVd3Z1BTQmpjbVZoZEdWZmJXRjBaWEpwWVd3b2NISnZaM0poYlNrN0NpQWdJQ0JqYjI1emRDQnRaWE5vSUQwZ2JtVjNJRzF2WkM1TlpYTm9LR0oxWm1abGNsOW5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3BPd29nSUNBZ2NISnZaM0poYlM1bVlXTmxjeTV2Ymlnb2VDazlQbnNLSUNBZ0lDQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUxuTmxkRWx1WkdWNEtHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0hnc0lERXBLVHNLSUNBZ0lIMHBPd29nSUNBZ2NtVjBkWEp1SUcxbGMyZzdDbjBLWm5WdVkzUnBiMjRnWm1seWMzUW9lQ2tnZXdvZ0lDQWdjbVYwZFhKdUlIaGJUMkpxWldOMExtdGxlWE1vZUNsYk1GMWRPd3A5Q21aMWJtTjBhVzl1SUdOdmJtNWxZM1JmWVhSMGNtbGlkWFJsY3lodFpYTm9MQ0IxY0dSaGRHVnlLU0I3Q2lBZ0lDQmpiMjV6ZENCcGJuTjBZVzVqWlY5aWRXWm1aWEp6SUQwZ2UzMDdDaUFnSUNCamIyNXpkQ0JuWlc5dFpYUnllVjlpZFdabVpYSnpJRDBnZTMwN0NpQWdJQ0JzWlhRZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlPd29nSUNBZ1kyOXVjM1FnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdnZ1BTQmJDaUFnSUNBZ0lDQWdNQW9nSUNBZ1hUc0tJQ0FnSUd4bGRDQm1hWEp6ZEY5blpXOXRaWFJ5ZVY5aWRXWm1aWEk3Q2lBZ0lDQmpiMjV6ZENCeVpXRnNYMmRsYjIxbGRISjVYMnhsYm1kMGFDQTlJRnNLSUNBZ0lDQWdJQ0F3Q2lBZ0lDQmRPd29nSUNBZ1puVnVZM1JwYjI0Z2NtVmZZWE56YVdkdVgySjFabVpsY25Nb0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1lYUjBjbWxpZFhSbGN5QTlJRzFsYzJndVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWhoZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0NodVlXMWxLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCaWRXWm1aWElnUFNCaGRIUnlhV0oxZEdWelcyNWhiV1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWW5WbVptVnlMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5OMFlXNWpaVjlpZFdabVpYSnpXMjVoYldWZElEMGdZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ2YldWMGNubGZZblZtWm1WeWMxdHVZVzFsWFNBOUlHSjFabVpsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUdacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpQTlJR1pwY25OMEtHbHVjM1JoYm1ObFgySjFabVpsY25NcE93b2dJQ0FnSUNBZ0lHbG1JQ2htYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdoYk1GMGdQU0JtYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJdVkyOTFiblE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdacGNuTjBYMmRsYjIxbGRISjVYMkoxWm1abGNpQTlJR1pwY25OMEtHZGxiMjFsZEhKNVgySjFabVpsY25NcE93b2dJQ0FnSUNBZ0lISmxZV3hmWjJWdmJXVjBjbmxmYkdWdVozUm9XekJkSUQwZ1ptbHljM1JmWjJWdmJXVjBjbmxmWW5WbVptVnlMbU52ZFc1ME93b2dJQ0FnZlFvZ0lDQWdjbVZmWVhOemFXZHVYMkoxWm1abGNuTW9LVHNLSUNBZ0lIVndaR0YwWlhJdWIyNG9LRnR1WVcxbExDQnVaWGRmZG1Gc2RXVnpMQ0JzWlc1bmRHaGRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJRzFsYzJndVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGMxdHVZVzFsWFRzS0lDQWdJQ0FnSUNCc1pYUWdZblZtWm1WeWN6c0tJQ0FnSUNBZ0lDQnNaWFFnY21WaGJGOXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ2JHVjBJR2x6WDJsdWMzUmhibU5sSUQwZ1ptRnNjMlU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNWhiV1VnYVc0Z2FXNXpkR0Z1WTJWZlluVm1abVZ5Y3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSnpJRDBnYVc1emRHRnVZMlZmWW5WbVptVnljenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlPd29nSUNBZ0lDQWdJQ0FnSUNCeVpXRnNYMnhsYm1kMGFDQTlJSEpsWVd4ZmFXNXpkR0Z1WTJWZmJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBjMTlwYm5OMFlXNWpaU0E5SUhSeWRXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5WbVptVnljeUE5SUdkbGIyMWxkSEo1WDJKMVptWmxjbk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnBjbk4wWDJkbGIyMWxkSEo1WDJKMVptWmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVmhiRjlzWlc1bmRHZ2dQU0J5WldGc1gyZGxiMjFsZEhKNVgyeGxibWQwYURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR3hsYm1kMGFDQThQU0J5WldGc1gyeGxibWQwYUZzd1hTa2dld29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEl1YzJWMEtHNWxkMTkyWVd4MVpYTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEl1Ym1WbFpITlZjR1JoZEdVZ1BTQjBjblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhOZmFXNXpkR0Z1WTJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1YVc1emRHRnVZMlZEYjNWdWRDQTlJR3hsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1MGIxOTFjR1JoZEdVZ1BTQnVaWGRmZG1Gc2RXVnpPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoYkd4ZmFHRjJaVjl6WVcxbFgyeGxibWQwYUNBOUlFOWlhbVZqZEM1MllXeDFaWE1vWW5WbVptVnljeWt1WlhabGNua29LSGdwUFQ1NExuUnZYM1Z3WkdGMFpTQW1KaUI0TG5SdlgzVndaR0YwWlM1c1pXNW5kR2dnTHlCNExtbDBaVzFUYVhwbElEMDlJR3hsYm1kMGFDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhiR3hmYUdGMlpWOXpZVzFsWDJ4bGJtZDBhQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHpYMmx1YzNSaGJtTmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVmpjbVZoZEdWZmFXNXpkR0Z1WTJWa1gyZGxiMjFsZEhKNUtHMWxjMmdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxYMkZ6YzJsbmJsOWlkV1ptWlhKektDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWemFDNW5aVzl0WlhSeWVTNXBibk4wWVc1alpVTnZkVzUwSUQwZ2JtVjNYM1poYkhWbGN5NXNaVzVuZEdnZ0x5QmlkV1ptWlhJdWFYUmxiVk5wZW1VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxZM0psWVhSbFgyZGxiMjFsZEhKNUtHMWxjMmdzSUdKMVptWmxjbk1zSUcxbGMyZ3VaMlZ2YldWMGNua3VhVzVrWlhncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsWDJGemMybG5ibDlpZFdabVpYSnpLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJrWlhObGNtbGhiR2w2WlY5elkyVnVaU2hrWVhSaExDQnpZM0psWlc0cElIc0tJQ0FnSUdOdmJuTjBJSE5qWlc1bElEMGdibVYzSUcxdlpDNVRZMlZ1WlNncE93b2dJQ0FnYzJObGJtVXVjMk55WldWdUlEMGdjMk55WldWdU93b2dJQ0FnWTI5dWMzUWdleUJqWVc1MllYTWdJSDBnUFNCelkzSmxaVzQ3Q2lBZ0lDQmhaR1JmYzJObGJtVW9aR0YwWVM1MWRXbGtMQ0J6WTJWdVpTazdDaUFnSUNCelkyVnVaUzV6WTJWdVpWOTFkV2xrSUQwZ1pHRjBZUzUxZFdsa093b2dJQ0FnYzJObGJtVXVabkoxYzNSMWJVTjFiR3hsWkNBOUlHWmhiSE5sT3dvZ0lDQWdjMk5sYm1VdWRtbGxkM0J2Y25RZ1BTQmtZWFJoTG5acFpYZHdiM0owT3dvZ0lDQWdjMk5sYm1VdVltRmphMmR5YjNWdVpHTnZiRzl5SUQwZ1pHRjBZUzVpWVdOclozSnZkVzVrWTI5c2IzSTdDaUFnSUNCelkyVnVaUzVpWVdOclozSnZkVzVrWTI5c2IzSmZZV3h3YUdFZ1BTQmtZWFJoTG1KaFkydG5jbTkxYm1SamIyeHZjbDloYkhCb1lUc0tJQ0FnSUhOalpXNWxMbU5zWldGeWMyTmxibVVnUFNCa1lYUmhMbU5zWldGeWMyTmxibVU3Q2lBZ0lDQnpZMlZ1WlM1MmFYTnBZbXhsSUQwZ1pHRjBZUzUyYVhOcFlteGxPd29nSUNBZ2MyTmxibVV1WTJGdFpYSmhYM0psYkdGMGFYWmxYMnhwWjJoMElEMGdaR0YwWVM1allXMWxjbUZmY21Wc1lYUnBkbVZmYkdsbmFIUTdDaUFnSUNCelkyVnVaUzVzYVdkb2RGOWthWEpsWTNScGIyNGdQU0JrWVhSaExteHBaMmgwWDJScGNtVmpkR2x2YmpzS0lDQWdJR052Ym5OMElHTmhiV1Z5WVNBOUlHNWxkeUJOWVd0cFpVTmhiV1Z5WVNncE93b2dJQ0FnYzJObGJtVXVkMmRzWDJOaGJXVnlZU0E5SUdOaGJXVnlZVHNLSUNBZ0lHWjFibU4wYVc5dUlIVndaR0YwWlY5allXMG9ZMkZ0WlhKaFgyMWhkSEpwWTJWekxDQm1iM0pqWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2doWm05eVkyVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0VvU2xOVFpYSjJaUzVqWVc1ZmMyVnVaRjkwYjE5cWRXeHBZU0FtSmlCS1UxTmxjblpsTG1OaGJsOXpaVzVrWDNSdlgycDFiR2xoS0NrcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM1pwWlhjc0lIQnliMnBsWTNScGIyNHNJSEpsYzI5c2RYUnBiMjRzSUdWNVpYQnZjMTBnUFNCallXMWxjbUZmYldGMGNtbGpaWE03Q2lBZ0lDQWdJQ0FnWTJGdFpYSmhMblZ3WkdGMFpWOXRZWFJ5YVdObGN5aDJhV1YzTENCd2NtOXFaV04wYVc5dUxDQnlaWE52YkhWMGFXOXVMQ0JsZVdWd2IzTXBPd29nSUNBZ2ZRb2dJQ0FnYVdZZ0tHUmhkR0V1WTJGdE0yUmZjM1JoZEdVcElIc0tJQ0FnSUNBZ0lDQmhkSFJoWTJoZk0yUmZZMkZ0WlhKaEtHTmhiblpoY3l3Z1kyRnRaWEpoTENCa1lYUmhMbU5oYlROa1gzTjBZWFJsTENCa1lYUmhMbXhwWjJoMFgyUnBjbVZqZEdsdmJpd2djMk5sYm1VcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFgyTmhiU2hrWVhSaExtTmhiV1Z5WVM1MllXeDFaU3dnZEhKMVpTazdDaUFnSUNCallXMWxjbUV1ZFhCa1lYUmxYMnhwWjJoMFgyUnBjaWhrWVhSaExteHBaMmgwWDJScGNtVmpkR2x2Ymk1MllXeDFaU2s3Q2lBZ0lDQmtZWFJoTG1OaGJXVnlZUzV2YmloMWNHUmhkR1ZmWTJGdEtUc0tJQ0FnSUdSaGRHRXVjR3h2ZEhNdVptOXlSV0ZqYUNnb2NHeHZkRjlrWVhSaEtUMCtld29nSUNBZ0lDQWdJR0ZrWkY5d2JHOTBLSE5qWlc1bExDQndiRzkwWDJSaGRHRXBPd29nSUNBZ2ZTazdDaUFnSUNCelkyVnVaUzV6WTJWdVpWOWphR2xzWkhKbGJpQTlJR1JoZEdFdVkyaHBiR1J5Wlc0dWJXRndLQ2hqYUdsc1pDazlQbnNLSUNBZ0lDQWdJQ0JqYjI1emRDQmphR2xzWkhOalpXNWxJRDBnWkdWelpYSnBZV3hwZW1WZmMyTmxibVVvWTJocGJHUXNJSE5qY21WbGJpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTm9hV3hrYzJObGJtVTdDaUFnSUNCOUtUc0tJQ0FnSUhKbGRIVnliaUJ6WTJWdVpUc0tmUXBtZFc1amRHbHZiaUJrWld4bGRHVmZjR3h2ZENod2JHOTBLU0I3Q2lBZ0lDQmtaV3hsZEdVZ2NHeHZkRjlqWVdOb1pWdHdiRzkwTG5Cc2IzUmZkWFZwWkYwN0NpQWdJQ0JqYjI1emRDQjdJSEJoY21WdWRDQWdmU0E5SUhCc2IzUTdDaUFnSUNCcFppQW9jR0Z5Wlc1MEtTQjdDaUFnSUNBZ0lDQWdjR0Z5Wlc1MExuSmxiVzkyWlNod2JHOTBLVHNLSUNBZ0lIMEtJQ0FnSUhCc2IzUXVaMlZ2YldWMGNua3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2NHeHZkQzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q24wS1puVnVZM1JwYjI0Z1pHVnNaWFJsWDNSb2NtVmxYM05qWlc1bEtITmpaVzVsS1NCN0NpQWdJQ0JrWld4bGRHVWdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVXVjMk5sYm1WZmRYVnBaRjA3Q2lBZ0lDQnpZMlZ1WlM1elkyVnVaVjlqYUdsc1pISmxiaTVtYjNKRllXTm9LR1JsYkdWMFpWOTBhSEpsWlY5elkyVnVaU2s3Q2lBZ0lDQjNhR2xzWlNoelkyVnVaUzVqYUdsc1pISmxiaTVzWlc1bmRHZ2dQaUF3S1hzS0lDQWdJQ0FnSUNCa1pXeGxkR1ZmY0d4dmRDaHpZMlZ1WlM1amFHbHNaSEpsYmxzd1hTazdDaUFnSUNCOUNuMEtkMmx1Wkc5M0xsUklVa1ZGSUQwZ2JXOWtPd3BtZFc1amRHbHZiaUJ5Wlc1a1pYSmZjMk5sYm1Vb2MyTmxibVVzSUhCcFkydHBibWNnUFNCbVlXeHpaU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QmpZVzFsY21FZ0xDQnlaVzVrWlhKbGNpQXNJSEI0WDNCbGNsOTFibWwwSUNCOUlEMGdjMk5sYm1VdWMyTnlaV1Z1T3dvZ0lDQWdZMjl1YzNRZ1kyRnVkbUZ6SUQwZ2NtVnVaR1Z5WlhJdVpHOXRSV3hsYldWdWREc0tJQ0FnSUdsbUlDZ2haRzlqZFcxbGJuUXVZbTlrZVM1amIyNTBZV2x1Y3loallXNTJZWE1wS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29Ja1ZZU1ZSSlRrY2dWMGRNSWlrN0NpQWdJQ0FnSUNBZ1pHVnNaWFJsWDNSb2NtVmxYM05qWlc1bEtITmpaVzVsS1RzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1emRHRjBaUzV5WlhObGRDZ3BPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQnBaaUFvSVhOalpXNWxMblpwYzJsaWJHVXVkbUZzZFdVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHNLSUNBZ0lIMEtJQ0FnSUhKbGJtUmxjbVZ5TG1GMWRHOURiR1ZoY2lBOUlITmpaVzVsTG1Oc1pXRnljMk5sYm1VdWRtRnNkV1U3Q2lBZ0lDQmpiMjV6ZENCaGNtVmhJRDBnYzJObGJtVXVkbWxsZDNCdmNuUXVkbUZzZFdVN0NpQWdJQ0JwWmlBb1lYSmxZU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNUxDQjNMQ0JvWFNBOUlHRnlaV0V1YldGd0tDaDRLVDArZUNBcUlIQjRYM0JsY2w5MWJtbDBLVHNLSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSV2FXVjNjRzl5ZENoNExDQjVMQ0IzTENCb0tUc0tJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpNXpaWFJUWTJsemMyOXlLSGdzSUhrc0lIY3NJR2dwT3dvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGTmphWE56YjNKVVpYTjBLSFJ5ZFdVcE93b2dJQ0FnSUNBZ0lHbG1JQ2h3YVdOcmFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRU5zWldGeVFXeHdhR0VvTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEVOc1pXRnlRMjlzYjNJb2JtVjNJRzF2WkM1RGIyeHZjaWd3S1N3Z01DNHdLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoYkhCb1lTQTlJSE5qWlc1bExtSmhZMnRuY205MWJtUmpiMnh2Y2w5aGJIQm9ZUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1YzJWMFEyeGxZWEpEYjJ4dmNpaHpZMlZ1WlM1aVlXTnJaM0p2ZFc1a1kyOXNiM0l1ZG1Gc2RXVXNJR0ZzY0doaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVjbVZ1WkdWeUtITmpaVzVsTENCallXMWxjbUVwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhOalpXNWxMbk5qWlc1bFgyTm9hV3hrY21WdUxtVjJaWEo1S0NoNEtUMCtjbVZ1WkdWeVgzTmpaVzVsS0hnc0lIQnBZMnRwYm1jcEtUc0tmUXBtZFc1amRHbHZiaUJ6ZEdGeWRGOXlaVzVrWlhKc2IyOXdLSFJvY21WbFgzTmpaVzVsS1NCN0NpQWdJQ0JqYjI1emRDQjdJR1p3Y3lBZ2ZTQTlJSFJvY21WbFgzTmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTnZibk4wSUhScGJXVmZjR1Z5WDJaeVlXMWxJRDBnTVNBdklHWndjeUFxSURFd01EQTdDaUFnSUNCc1pYUWdiR0Z6ZEY5MGFXMWxYM04wWVcxd0lEMGdjR1Z5Wm05eWJXRnVZMlV1Ym05M0tDazdDaUFnSUNCbWRXNWpkR2x2YmlCeVpXNWtaWEpzYjI5d0tIUnBiV1Z6ZEdGdGNDa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFXMWxjM1JoYlhBZ0xTQnNZWE4wWDNScGJXVmZjM1JoYlhBZ1BpQjBhVzFsWDNCbGNsOW1jbUZ0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmhiR3hmY21WdVpHVnlaV1FnUFNCeVpXNWtaWEpmYzJObGJtVW9kR2h5WldWZmMyTmxibVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdGc2JGOXlaVzVrWlhKbFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGhjM1JmZEdsdFpWOXpkR0Z0Y0NBOUlIQmxjbVp2Y20xaGJtTmxMbTV2ZHlncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjNhVzVrYjNjdWNtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxLSEpsYm1SbGNteHZiM0FwT3dvZ0lDQWdmUW9nSUNBZ2NtVnVaR1Z5WDNOalpXNWxLSFJvY21WbFgzTmpaVzVsS1RzS0lDQWdJSEpsYm1SbGNteHZiM0FvS1RzS2ZRcG1kVzVqZEdsdmJpQjBhSEp2ZEhSc1pWOW1kVzVqZEdsdmJpaG1kVzVqTENCa1pXeGhlU2tnZXdvZ0lDQWdiR1YwSUhCeVpYWWdQU0F3T3dvZ0lDQWdiR1YwSUdaMWRIVnlaVjlwWkNBOUlIVnVaR1ZtYVc1bFpEc0tJQ0FnSUdaMWJtTjBhVzl1SUdsdWJtVnlYM1JvY205MGRHeGxLQzR1TG1GeVozTXBJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnViM2NnUFNCdVpYY2dSR0YwWlNncExtZGxkRlJwYldVb0tUc0tJQ0FnSUNBZ0lDQnBaaUFvWm5WMGRYSmxYMmxrSUNFOVBTQjFibVJsWm1sdVpXUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpVYVcxbGIzVjBLR1oxZEhWeVpWOXBaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFkSFZ5WlY5cFpDQTlJSFZ1WkdWbWFXNWxaRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHNXZkeUF0SUhCeVpYWWdQaUJrWld4aGVTa2dld29nSUNBZ0lDQWdJQ0FnSUNCd2NtVjJJRDBnYm05M093b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdablZ1WXlndUxpNWhjbWR6S1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1kWFIxY21WZmFXUWdQU0J6WlhSVWFXMWxiM1YwS0NncFBUNXBibTVsY2w5MGFISnZkSFJzWlNndUxpNWhjbWR6S1N3Z2JtOTNJQzBnY0hKbGRpQXJJREVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCcGJtNWxjbDkwYUhKdmRIUnNaVHNLZlFwbWRXNWpkR2x2YmlCblpYUmZZbTlrZVY5emFYcGxLQ2tnZXdvZ0lDQWdZMjl1YzNRZ1ltOWtlVk4wZVd4bElEMGdkMmx1Wkc5M0xtZGxkRU52YlhCMWRHVmtVM1I1YkdVb1pHOWpkVzFsYm5RdVltOWtlU2s3Q2lBZ0lDQmpiMjV6ZENCM2FXUjBhRjl3WVdSa2FXNW5JRDBnY0dGeWMyVkpiblFvWW05a2VWTjBlV3hsTG5CaFpHUnBibWRNWldaMExDQXhNQ2tnS3lCd1lYSnpaVWx1ZENoaWIyUjVVM1I1YkdVdWNHRmtaR2x1WjFKcFoyaDBMQ0F4TUNrZ0t5QndZWEp6WlVsdWRDaGliMlI1VTNSNWJHVXViV0Z5WjJsdVRHVm1kQ3dnTVRBcElDc2djR0Z5YzJWSmJuUW9ZbTlrZVZOMGVXeGxMbTFoY21kcGJsSnBaMmgwTENBeE1DazdDaUFnSUNCamIyNXpkQ0JvWldsbmFIUmZjR0ZrWkdsdVp5QTlJSEJoY25ObFNXNTBLR0p2WkhsVGRIbHNaUzV3WVdSa2FXNW5WRzl3TENBeE1Da2dLeUJ3WVhKelpVbHVkQ2hpYjJSNVUzUjViR1V1Y0dGa1pHbHVaMEp2ZEhSdmJTd2dNVEFwSUNzZ2NHRnljMlZKYm5Rb1ltOWtlVk4wZVd4bExtMWhjbWRwYmxSdmNDd2dNVEFwSUNzZ2NHRnljMlZKYm5Rb1ltOWtlVk4wZVd4bExtMWhjbWRwYmtKdmRIUnZiU3dnTVRBcE93b2dJQ0FnWTI5dWMzUWdkMmxrZEdnZ1BTQjNhVzVrYjNjdWFXNXVaWEpYYVdSMGFDQXRJSGRwWkhSb1gzQmhaR1JwYm1jN0NpQWdJQ0JqYjI1emRDQm9aV2xuYUhRZ1BTQjNhVzVrYjNjdWFXNXVaWEpJWldsbmFIUWdMU0JvWldsbmFIUmZjR0ZrWkdsdVp6c0tJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnZDJsa2RHZ3NDaUFnSUNBZ0lDQWdhR1ZwWjJoMENpQWdJQ0JkT3dwOUNtWjFibU4wYVc5dUlHZGxkRjl3WVhKbGJuUmZjMmw2WlNoallXNTJZWE1wSUhzS0lDQWdJR052Ym5OMElISmxZM1FnUFNCallXNTJZWE11Y0dGeVpXNTBSV3hsYldWdWRDNW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvS1RzS0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdjbVZqZEM1M2FXUjBhQ3dLSUNBZ0lDQWdJQ0J5WldOMExtaGxhV2RvZEFvZ0lDQWdYVHNLZlFwbWRXNWpkR2x2YmlCM1oyeGxjbkp2Y2lobmJDd2daWEp5YjNJcElIc0tJQ0FnSUhOM2FYUmphQ2hsY25KdmNpbDdDaUFnSUNBZ0lDQWdZMkZ6WlNCbmJDNU9UMTlGVWxKUFVqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ0pPYnlCbGNuSnZjaUk3Q2lBZ0lDQWdJQ0FnWTJGelpTQm5iQzVKVGxaQlRFbEVYMFZPVlUwNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQWlTVzUyWVd4cFpDQmxiblZ0SWpzS0lDQWdJQ0FnSUNCallYTmxJR2RzTGtsT1ZrRk1TVVJmVmtGTVZVVTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFpU1c1MllXeHBaQ0IyWVd4MVpTSTdDaUFnSUNBZ0lDQWdZMkZ6WlNCbmJDNUpUbFpCVEVsRVgwOVFSVkpCVkVsUFRqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ0pKYm5aaGJHbGtJRzl3WlhKaGRHbHZiaUk3Q2lBZ0lDQWdJQ0FnWTJGelpTQm5iQzVQVlZSZlQwWmZUVVZOVDFKWk9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJazkxZENCdlppQnRaVzF2Y25raU93b2dJQ0FnSUNBZ0lHTmhjMlVnWjJ3dVEwOU9WRVZZVkY5TVQxTlVYMWRGUWtkTU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJa052Ym5SbGVIUWdiRzl6ZENJN0NpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDSlZibXR1YjNkdUlHVnljbTl5SWpzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCb1lXNWtiR1ZUYjNWeVkyVW9jM1J5YVc1bkxDQmxjbkp2Y2t4cGJtVXBJSHNLSUNBZ0lHTnZibk4wSUd4cGJtVnpJRDBnYzNSeWFXNW5Mbk53YkdsMEtDSmNiaUlwT3dvZ0lDQWdZMjl1YzNRZ2JHbHVaWE15SUQwZ1cxMDdDaUFnSUNCamIyNXpkQ0JtY205dElEMGdUV0YwYUM1dFlYZ29aWEp5YjNKTWFXNWxJQzBnTml3Z01DazdDaUFnSUNCamIyNXpkQ0IwYnlBOUlFMWhkR2d1YldsdUtHVnljbTl5VEdsdVpTQXJJRFlzSUd4cGJtVnpMbXhsYm1kMGFDazdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQm1jbTl0T3lCcElEd2dkRzg3SUdrckt5bDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2JHbHVaU0E5SUdrZ0t5QXhPd29nSUNBZ0lDQWdJR3hwYm1Wek1pNXdkWE5vS0dBa2UyeHBibVVnUFQwOUlHVnljbTl5VEdsdVpTQS9JQ0krSWlBNklDSWdJbjBnSkh0c2FXNWxmVG9nSkh0c2FXNWxjMXRwWFgxZ0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQnNhVzVsY3pJdWFtOXBiaWdpWEc0aUtUc0tmUXBtZFc1amRHbHZiaUJuWlhSVGFHRmtaWEpGY25KdmNuTW9aMndzSUhOb1lXUmxjaXdnZEhsd1pTa2dld29nSUNBZ1kyOXVjM1FnYzNSaGRIVnpJRDBnWjJ3dVoyVjBVMmhoWkdWeVVHRnlZVzFsZEdWeUtITm9ZV1JsY2l3Z1oyd3VRMDlOVUVsTVJWOVRWRUZVVlZNcE93b2dJQ0FnWTI5dWMzUWdaWEp5YjNKeklEMGdaMnd1WjJWMFUyaGhaR1Z5U1c1bWIweHZaeWh6YUdGa1pYSXBMblJ5YVcwb0tUc0tJQ0FnSUdsbUlDaHpkR0YwZFhNZ0ppWWdaWEp5YjNKeklEMDlQU0FpSWlrZ2NtVjBkWEp1SUNJaU93b2dJQ0FnWTI5dWMzUWdaWEp5YjNKTllYUmphR1Z6SUQwZ0wwVlNVazlTT2lBd09paGNaQ3NwTHk1bGVHVmpLR1Z5Y205eWN5azdDaUFnSUNCcFppQW9aWEp5YjNKTllYUmphR1Z6S1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWlhKeWIzSk1hVzVsSUQwZ2NHRnljMlZKYm5Rb1pYSnliM0pOWVhSamFHVnpXekZkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhsd1pTNTBiMVZ3Y0dWeVEyRnpaU2dwSUNzZ0lseHVYRzRpSUNzZ1pYSnliM0p6SUNzZ0lseHVYRzRpSUNzZ2FHRnVaR3hsVTI5MWNtTmxLR2RzTG1kbGRGTm9ZV1JsY2xOdmRYSmpaU2h6YUdGa1pYSXBMQ0JsY25KdmNreHBibVVwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pYSnliM0p6T3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUc5dVgzTm9ZV1JsY2w5bGNuSnZjaWhuYkN3Z2NISnZaM0poYlN3Z1oyeFdaWEowWlhoVGFHRmtaWElzSUdkc1JuSmhaMjFsYm5SVGFHRmtaWElwSUhzS0lDQWdJR052Ym5OMElIQnliMmR5WVcxTWIyY2dQU0JuYkM1blpYUlFjbTluY21GdFNXNW1iMHh2Wnlod2NtOW5jbUZ0S1M1MGNtbHRLQ2s3Q2lBZ0lDQmpiMjV6ZENCMlpYSjBaWGhGY25KdmNuTWdQU0JuWlhSVGFHRmtaWEpGY25KdmNuTW9aMndzSUdkc1ZtVnlkR1Y0VTJoaFpHVnlMQ0FpZG1WeWRHVjRJaWs3Q2lBZ0lDQmpiMjV6ZENCbWNtRm5iV1Z1ZEVWeWNtOXljeUE5SUdkbGRGTm9ZV1JsY2tWeWNtOXljeWhuYkN3Z1oyeEdjbUZuYldWdWRGTm9ZV1JsY2l3Z0ltWnlZV2R0Wlc1MElpazdDaUFnSUNCamIyNXpkQ0IyWlhKMFpYaE1iMmNnUFNCbmJDNW5aWFJUYUdGa1pYSkpibVp2VEc5bktHZHNWbVZ5ZEdWNFUyaGhaR1Z5S1M1MGNtbHRLQ2s3Q2lBZ0lDQmpiMjV6ZENCbWNtRm5iV1Z1ZEV4dlp5QTlJR2RzTG1kbGRGTm9ZV1JsY2tsdVptOU1iMmNvWjJ4R2NtRm5iV1Z1ZEZOb1lXUmxjaWt1ZEhKcGJTZ3BPd29nSUNBZ1kyOXVjM1FnWlhKeUlEMGdJbFJJVWtWRkxsZGxZa2RNVUhKdlozSmhiVG9nVTJoaFpHVnlJRVZ5Y205eUlDSWdLeUIzWjJ4bGNuSnZjaWhuYkN3Z1oyd3VaMlYwUlhKeWIzSW9LU2tnS3lBaUlDMGdJaUFySUNKV1FVeEpSRUZVUlY5VFZFRlVWVk1nSWlBcklHZHNMbWRsZEZCeWIyZHlZVzFRWVhKaGJXVjBaWElvY0hKdlozSmhiU3dnWjJ3dVZrRk1TVVJCVkVWZlUxUkJWRlZUS1NBcklDSmNibHh1SWlBcklDSlFjbTluY21GdElFbHVabThnVEc5bk9seHVJaUFySUhCeWIyZHlZVzFNYjJjZ0t5QWlYRzRpSUNzZ2RtVnlkR1Y0UlhKeWIzSnpJQ3NnSWx4dUlpQXJJR1p5WVdkdFpXNTBSWEp5YjNKeklDc2dJbHh1SWlBcklDSkdjbUZuYldWdWRDQnNiMmM2WEc0aUlDc2dabkpoWjIxbGJuUk1iMmNnS3lBaVZtVnlkR1Y0SUd4dlp6cGNiaUlnS3lCMlpYSjBaWGhNYjJjN0NpQWdJQ0JLVTFObGNuWmxMa052Ym01bFkzUnBiMjR1YzJWdVpGOTNZWEp1YVc1bktHVnljaWs3Q24wS1puVnVZM1JwYjI0Z1lXUmtYMk5oYm5aaGMxOWxkbVZ1ZEhNb2MyTnlaV1Z1TENCamIyMXRMQ0J5WlhOcGVtVmZkRzhwSUhzS0lDQWdJR052Ym5OMElIc2dZMkZ1ZG1GeklDd2dkMmx1YzJOaGJHVWdJSDBnUFNCelkzSmxaVzQ3Q2lBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WlY5allXeHNZbUZqYXlobGRtVnVkQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNVhTQTlJR1YyWlc1MGN6SjFibWwwYkdWemN5aHpZM0psWlc0c0lHVjJaVzUwS1RzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxjRzl6YVhScGIyNDZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1Q2lBZ0lDQWdJQ0FnSUNBZ0lGMEtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJRzV2ZEdsbWVWOXRiM1Z6WlY5MGFISnZkSFJzWldRZ1BTQjBhSEp2ZEhSc1pWOW1kVzVqZEdsdmJpaHRiM1Z6WlY5allXeHNZbUZqYXl3Z05EQXBPd29nSUNBZ1puVnVZM1JwYjI0Z2JXOTFjMlZ0YjNabEtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ2JtOTBhV1o1WDIxdmRYTmxYM1JvY205MGRHeGxaQ2hsZG1WdWRDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW0xdmRYTmxiVzkyWlNJc0lHMXZkWE5sYlc5MlpTazdDaUFnSUNCbWRXNWpkR2x2YmlCdGIzVnpaV1J2ZDI0b1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxaRzkzYmpvZ1pYWmxiblF1WW5WMGRHOXVjd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WldSdmQyNGlMQ0J0YjNWelpXUnZkMjRwT3dvZ0lDQWdablZ1WTNScGIyNGdiVzkxYzJWMWNDaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lHTnZiVzB1Ym05MGFXWjVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXOTFjMlYxY0RvZ1pYWmxiblF1WW5WMGRHOXVjd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WlhWd0lpd2diVzkxYzJWMWNDazdDaUFnSUNCbWRXNWpkR2x2YmlCM2FHVmxiQ2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJR052YlcwdWJtOTBhV1o1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdjMk55YjJ4c09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEM1a1pXeDBZVmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F0WlhabGJuUXVaR1ZzZEdGWkNpQWdJQ0FnSUNBZ0lDQWdJRjBLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlRzS0lDQWdJSDBLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKM2FHVmxiQ0lzSUhkb1pXVnNLVHNLSUNBZ0lHWjFibU4wYVc5dUlHdGxlV1J2ZDI0b1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVXUnZkMjQ2SUdWMlpXNTBMbU52WkdVS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3Q2lBZ0lDQjlDaUFnSUNCallXNTJZWE11WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYTJWNVpHOTNiaUlzSUd0bGVXUnZkMjRwT3dvZ0lDQWdablZ1WTNScGIyNGdhMlY1ZFhBb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVYVndPaUJsZG1WdWRDNWpiMlJsQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbXRsZVhWd0lpd2dhMlY1ZFhBcE93b2dJQ0FnWm5WdVkzUnBiMjRnWTI5dWRHVjRkRzFsYm5Vb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVYVndPaUFpWkdWc1pYUmxYMnRsZVhNaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1OdmJuUmxlSFJ0Wlc1MUlpd2dLR1VwUFQ1bExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrcE93b2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVp2WTNWemIzVjBJaXdnWTI5dWRHVjRkRzFsYm5VcE93b2dJQ0FnWm5WdVkzUnBiMjRnY21WemFYcGxYMk5oYkd4aVlXTnJLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjNhV1IwYUN3Z2FHVnBaMmgwT3dvZ0lDQWdJQ0FnSUdsbUlDaHlaWE5wZW1WZmRHOGdQVDBnSW1KdlpIa2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGdDNhV1IwYUN3Z2FHVnBaMmgwWFNBOUlHZGxkRjlpYjJSNVgzTnBlbVVvS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tISmxjMmw2WlY5MGJ5QTlQU0FpY0dGeVpXNTBJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmJkMmxrZEdnc0lHaGxhV2RvZEYwZ1BTQm5aWFJmY0dGeVpXNTBYM05wZW1Vb1kyRnVkbUZ6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCeVpYTnBlbVU2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9JQzhnZDJsdWMyTmhiR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUWdMeUIzYVc1elkyRnNaUW9nSUNBZ0lDQWdJQ0FnSUNCZENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0JwWmlBb2NtVnphWHBsWDNSdktTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NtVnphWHBsWDJOaGJHeGlZV05yWDNSb2NtOTBkR3hsWkNBOUlIUm9jbTkwZEd4bFgyWjFibU4wYVc5dUtISmxjMmw2WlY5allXeHNZbUZqYXl3Z01UQXdLVHNLSUNBZ0lDQWdJQ0IzYVc1a2IzY3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljbVZ6YVhwbElpd2dLR1YyWlc1MEtUMCtjbVZ6YVhwbFgyTmhiR3hpWVdOclgzUm9jbTkwZEd4bFpDZ3BLVHNLSUNBZ0lDQWdJQ0J5WlhOcGVtVmZZMkZzYkdKaFkydGZkR2h5YjNSMGJHVmtLQ2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnZEdoeVpXVnFjMTl0YjJSMWJHVW9ZMkZ1ZG1GektTQjdDaUFnSUNCc1pYUWdZMjl1ZEdWNGRDQTlJR05oYm5aaGN5NW5aWFJEYjI1MFpYaDBLQ0ozWldKbmJESWlMQ0I3Q2lBZ0lDQWdJQ0FnY0hKbGMyVnlkbVZFY21GM2FXNW5RblZtWm1WeU9pQjBjblZsQ2lBZ0lDQjlLVHNLSUNBZ0lHbG1JQ2doWTI5dWRHVjRkQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWMlZpUjB3Z01pNHdJRzV2ZENCemRYQndiM0owWldRZ1lua2dZbkp2ZDNObGNpd2dabUZzYkdsdVp5QmlZV05ySUhSdklGZGxZa2RNSURFdU1DQW9WbTlzZFcxbElIQnNiM1J6SUhkcGJHd2dibTkwSUhkdmNtc3BJaWs3Q2lBZ0lDQWdJQ0FnWTI5dWRHVjRkQ0E5SUdOaGJuWmhjeTVuWlhSRGIyNTBaWGgwS0NKM1pXSm5iQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjSEpsYzJWeWRtVkVjbUYzYVc1blFuVm1abVZ5T2lCMGNuVmxDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCcFppQW9JV052Ym5SbGVIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQnlaVzVrWlhKbGNpQTlJRzVsZHlCdGIyUXVWMlZpUjB4U1pXNWtaWEpsY2loN0NpQWdJQ0FnSUNBZ1lXNTBhV0ZzYVdGek9pQjBjblZsTEFvZ0lDQWdJQ0FnSUdOaGJuWmhjem9nWTJGdWRtRnpMQW9nSUNBZ0lDQWdJR052Ym5SbGVIUTZJR052Ym5SbGVIUXNDaUFnSUNBZ0lDQWdjRzkzWlhKUWNtVm1aWEpsYm1ObE9pQWlhR2xuYUMxd1pYSm1iM0p0WVc1alpTSUtJQ0FnSUgwcE93b2dJQ0FnY21WdVpHVnlaWEl1WkdWaWRXY3ViMjVUYUdGa1pYSkZjbkp2Y2lBOUlHOXVYM05vWVdSbGNsOWxjbkp2Y2pzS0lDQWdJSEpsYm1SbGNtVnlMbk5sZEVOc1pXRnlRMjlzYjNJb0lpTm1abVptWm1ZaUtUc0tJQ0FnSUhKbGRIVnliaUJ5Wlc1a1pYSmxjanNLZlFwbWRXNWpkR2x2YmlCelpYUmZjbVZ1WkdWeVgzTnBlbVVvYzJOeVpXVnVMQ0IzYVdSMGFDd2dhR1ZwWjJoMEtTQjdDaUFnSUNCamIyNXpkQ0I3SUhKbGJtUmxjbVZ5SUN3Z1kyRnVkbUZ6SUN3Z2MyTmhiR1ZtWVdOMGIzSWdMQ0IzYVc1elkyRnNaU0FzSUhCNFgzQmxjbDkxYm1sMElDQjlJRDBnYzJOeVpXVnVPd29nSUNBZ1kyOXVjM1FnVzNOM2FXUjBhQ3dnYzJobGFXZG9kRjBnUFNCYkNpQWdJQ0FnSUNBZ2QybHVjMk5oYkdVZ0tpQjNhV1IwYUN3S0lDQWdJQ0FnSUNCM2FXNXpZMkZzWlNBcUlHaGxhV2RvZEFvZ0lDQWdYVHNLSUNBZ0lHTnZibk4wSUhKbFlXeGZjR2w0Wld4ZmQybGtkR2dnUFNCTllYUm9MbU5sYVd3b2QybGtkR2dnS2lCd2VGOXdaWEpmZFc1cGRDazdDaUFnSUNCamIyNXpkQ0J5WldGc1gzQnBlR1ZzWDJobGFXZG9kQ0E5SUUxaGRHZ3VZMlZwYkNob1pXbG5hSFFnS2lCd2VGOXdaWEpmZFc1cGRDazdDaUFnSUNCeVpXNWtaWEpsY2k1ZmQybGtkR2dnUFNCM2FXUjBhRHNLSUNBZ0lISmxibVJsY21WeUxsOW9aV2xuYUhRZ1BTQm9aV2xuYUhRN0NpQWdJQ0JqWVc1MllYTXVkMmxrZEdnZ1BTQnlaV0ZzWDNCcGVHVnNYM2RwWkhSb093b2dJQ0FnWTJGdWRtRnpMbWhsYVdkb2RDQTlJSEpsWVd4ZmNHbDRaV3hmYUdWcFoyaDBPd29nSUNBZ1kyRnVkbUZ6TG5OMGVXeGxMbmRwWkhSb0lEMGdjM2RwWkhSb0lDc2dJbkI0SWpzS0lDQWdJR05oYm5aaGN5NXpkSGxzWlM1b1pXbG5hSFFnUFNCemFHVnBaMmgwSUNzZ0luQjRJanNLSUNBZ0lISmxibVJsY21WeUxuTmxkRlpwWlhkd2IzSjBLREFzSURBc0lISmxZV3hmY0dsNFpXeGZkMmxrZEdnc0lISmxZV3hmY0dsNFpXeGZhR1ZwWjJoMEtUc0tJQ0FnSUdGa1pGOXdhV05yYVc1blgzUmhjbWRsZENoelkzSmxaVzRwT3dvZ0lDQWdjbVYwZFhKdU93cDlDbVoxYm1OMGFXOXVJR0ZrWkY5d2FXTnJhVzVuWDNSaGNtZGxkQ2h6WTNKbFpXNHBJSHNLSUNBZ0lHTnZibk4wSUhzZ2NHbGphMmx1WjE5MFlYSm5aWFFnTENCallXNTJZWE1nSUgwZ1BTQnpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQmJkeXdnYUYwZ1BTQmJDaUFnSUNBZ0lDQWdZMkZ1ZG1GekxuZHBaSFJvTEFvZ0lDQWdJQ0FnSUdOaGJuWmhjeTVvWldsbmFIUUtJQ0FnSUYwN0NpQWdJQ0JwWmlBb2NHbGphMmx1WjE5MFlYSm5aWFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9jR2xqYTJsdVoxOTBZWEpuWlhRdWQybGtkR2dnUFQwZ2R5QW1KaUJ3YVdOcmFXNW5YM1JoY21kbGRDNW9aV2xuYUhRZ1BUMGdhQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjR2xqYTJsdVoxOTBZWEpuWlhRdVpHbHpjRzl6WlNncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE5qY21WbGJpNXdhV05yYVc1blgzUmhjbWRsZENBOUlHNWxkeUJ0YjJRdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRb2R5d2dhQ2s3Q2lBZ0lDQnlaWFIxY200N0NuMEtablZ1WTNScGIyNGdZM0psWVhSbFgzTmpaVzVsS0hkeVlYQndaWElzSUdOaGJuWmhjeXdnWTJGdWRtRnpYM2RwWkhSb0xDQnpZMlZ1WlhNc0lHTnZiVzBzSUhkcFpIUm9MQ0JvWldsbmFIUXNJSFJsZUhSMWNtVmZZWFJzWVhOZmIySnpMQ0JtY0hNc0lISmxjMmw2WlY5MGJ5d2djSGhmY0dWeVgzVnVhWFFzSUhOallXeGxabUZqZEc5eUtTQjdDaUFnSUNCcFppQW9JWE5qWVd4bFptRmpkRzl5S1NCN0NpQWdJQ0FnSUNBZ2MyTmhiR1ZtWVdOMGIzSWdQU0IzYVc1a2IzY3VaR1YyYVdObFVHbDRaV3hTWVhScGJ5QjhmQ0F4TGpBN0NpQWdJQ0I5Q2lBZ0lDQnBaaUFvSVhCNFgzQmxjbDkxYm1sMEtTQjdDaUFnSUNBZ0lDQWdjSGhmY0dWeVgzVnVhWFFnUFNCelkyRnNaV1poWTNSdmNqc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElISmxibVJsY21WeUlEMGdkR2h5WldWcWMxOXRiMlIxYkdVb1kyRnVkbUZ6S1RzS0lDQWdJRlJGV0ZSVlVrVmZRVlJNUVZOYk1GMGdQU0IwWlhoMGRYSmxYMkYwYkdGelgyOWljenNLSUNBZ0lHbG1JQ2doY21WdVpHVnlaWElwSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0IzWVhKdWFXNW5JRDBnWjJWMFYyVmlSMHhGY25KdmNrMWxjM05oWjJVb0tUc0tJQ0FnSUNBZ0lDQjNjbUZ3Y0dWeUxtRndjR1Z1WkVOb2FXeGtLSGRoY201cGJtY3BPd29nSUNBZ2ZRb2dJQ0FnWTI5dWMzUWdZMkZ0WlhKaElEMGdibVYzSUcxdlpDNVFaWEp6Y0dWamRHbDJaVU5oYldWeVlTZzBOU3dnTVN3Z01Dd2dNVEF3S1RzS0lDQWdJR05oYldWeVlTNTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0JqYjI1emRDQndhWGhsYkY5eVlYUnBieUE5SUhkcGJtUnZkeTVrWlhacFkyVlFhWGhsYkZKaGRHbHZJSHg4SURFdU1Ec0tJQ0FnSUdOdmJuTjBJSGRwYm5OallXeGxJRDBnYzJOaGJHVm1ZV04wYjNJZ0x5QndhWGhsYkY5eVlYUnBienNLSUNBZ0lHTnZibk4wSUhOamNtVmxiaUE5SUhzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2l3S0lDQWdJQ0FnSUNCallXMWxjbUVzQ2lBZ0lDQWdJQ0FnWm5CekxBb2dJQ0FnSUNBZ0lHTmhiblpoY3l3S0lDQWdJQ0FnSUNCd2VGOXdaWEpmZFc1cGRDd0tJQ0FnSUNBZ0lDQnpZMkZzWldaaFkzUnZjaXdLSUNBZ0lDQWdJQ0IzYVc1elkyRnNaUW9nSUNBZ2ZUc0tJQ0FnSUdGa1pGOWpZVzUyWVhOZlpYWmxiblJ6S0hOamNtVmxiaXdnWTI5dGJTd2djbVZ6YVhwbFgzUnZLVHNLSUNBZ0lITmxkRjl5Wlc1a1pYSmZjMmw2WlNoelkzSmxaVzRzSUhkcFpIUm9MQ0JvWldsbmFIUXBPd29nSUNBZ1kyOXVjM1FnZEdoeVpXVmZjMk5sYm1VZ1BTQmtaWE5sY21saGJHbDZaVjl6WTJWdVpTaHpZMlZ1WlhNc0lITmpjbVZsYmlrN0NpQWdJQ0J6ZEdGeWRGOXlaVzVrWlhKc2IyOXdLSFJvY21WbFgzTmpaVzVsS1RzS0lDQWdJR05oYm5aaGMxOTNhV1IwYUM1dmJpZ29kMTlvS1QwK2V3b2dJQ0FnSUNBZ0lITmxkRjl5Wlc1a1pYSmZjMmw2WlNoelkzSmxaVzRzSUM0dUxuZGZhQ2s3Q2lBZ0lDQjlLVHNLSUNBZ0lISmxkSFZ5YmlCeVpXNWtaWEpsY2pzS2ZRcG1kVzVqZEdsdmJpQnpaWFJmY0dsamEybHVaMTkxYm1sbWIzSnRjeWh6WTJWdVpTd2diR0Z6ZEY5cFpDd2djR2xqYTJsdVp5d2djR2xqYTJWa1gzQnNiM1J6TENCd2JHOTBjeXdnYVdSZmRHOWZjR3h2ZENrZ2V3b2dJQ0FnYzJObGJtVXVZMmhwYkdSeVpXNHVabTl5UldGamFDZ29jR3h2ZEN3Z2FXNWtaWGdwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnZXlCdFlYUmxjbWxoYkNBZ2ZTQTlJSEJzYjNRN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnZXlCMWJtbG1iM0p0Y3lBZ2ZTQTlJRzFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJR2xtSUNod2FXTnJhVzVuS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMXpMbTlpYW1WamRGOXBaQzUyWVd4MVpTQTlJR3hoYzNSZmFXUWdLeUJwYm1SbGVEc0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE11Y0dsamEybHVaeTUyWVd4MVpTQTlJSFJ5ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNMbUpzWlc1a2FXNW5JRDBnYlc5a0xrNXZRbXhsYm1ScGJtYzdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE11Y0dsamEybHVaeTUyWVd4MVpTQTlJR1poYkhObE93b2dJQ0FnSUNBZ0lDQWdJQ0J0WVhSbGNtbGhiQzVpYkdWdVpHbHVaeUE5SUcxdlpDNU9iM0p0WVd4Q2JHVnVaR2x1WnpzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FXUWdQU0IxYm1sbWIzSnRjeTV2WW1wbFkzUmZhV1F1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBaQ0JwYmlCd2FXTnJaV1JmY0d4dmRITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJzYjNSekxuQjFjMmdvV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHbGphMlZrWDNCc2IzUnpXMmxrWFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFpGOTBiMTl3Ykc5MFcybGtYU0E5SUhCc2IzUTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5S1RzS0lDQWdJR3hsZENCdVpYaDBYMmxrSUQwZ2JHRnpkRjlwWkNBcklITmpaVzVsTG1Ob2FXeGtjbVZ1TG14bGJtZDBhRHNLSUNBZ0lITmpaVzVsTG5OalpXNWxYMk5vYVd4a2NtVnVMbVp2Y2tWaFkyZ29LSE5qWlc1bEtUMCtld29nSUNBZ0lDQWdJRzVsZUhSZmFXUWdQU0J6WlhSZmNHbGphMmx1WjE5MWJtbG1iM0p0Y3loelkyVnVaU3dnYm1WNGRGOXBaQ3dnY0dsamEybHVaeXdnY0dsamEyVmtYM0JzYjNSekxDQndiRzkwY3l3Z2FXUmZkRzlmY0d4dmRDazdDaUFnSUNCOUtUc0tJQ0FnSUhKbGRIVnliaUJ1WlhoMFgybGtPd3A5Q21aMWJtTjBhVzl1SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCZmVDd2dYM2tzSUY5M0xDQmZhQ2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QnlaVzVrWlhKbGNpQXNJSEJwWTJ0cGJtZGZkR0Z5WjJWMElDd2djSGhmY0dWeVgzVnVhWFFnSUgwZ1BTQnpZMlZ1WlM1elkzSmxaVzQ3Q2lBZ0lDQmJYM2dzSUY5NUxDQmZkeXdnWDJoZElEMGdXd29nSUNBZ0lDQWdJRjk0TEFvZ0lDQWdJQ0FnSUY5NUxBb2dJQ0FnSUNBZ0lGOTNMQW9nSUNBZ0lDQWdJRjlvQ2lBZ0lDQmRMbTFoY0Nnb2VDazlQazFoZEdndVkyVnBiQ2g0SUNvZ2NIaGZjR1Z5WDNWdWFYUXBLVHNLSUNBZ0lHTnZibk4wSUZ0NExDQjVMQ0IzTENCb1hTQTlJRnNLSUNBZ0lDQWdJQ0JmZUN3S0lDQWdJQ0FnSUNCZmVTd0tJQ0FnSUNBZ0lDQmZkeXdLSUNBZ0lDQWdJQ0JmYUFvZ0lDQWdYVHNLSUNBZ0lISmxibVJsY21WeUxuTmxkRkpsYm1SbGNsUmhjbWRsZENod2FXTnJhVzVuWDNSaGNtZGxkQ2s3Q2lBZ0lDQnpaWFJmY0dsamEybHVaMTkxYm1sbWIzSnRjeWh6WTJWdVpTd2dNU3dnZEhKMVpTazdDaUFnSUNCeVpXNWtaWEpmYzJObGJtVW9jMk5sYm1Vc0lIUnlkV1VwT3dvZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHNTFiR3dwT3dvZ0lDQWdZMjl1YzNRZ2JtSjVkR1Z6SUQwZ2R5QXFJR2dnS2lBME93b2dJQ0FnWTI5dWMzUWdjR2w0Wld4ZllubDBaWE1nUFNCdVpYY2dWV2x1ZERoQmNuSmhlU2h1WW5sMFpYTXBPd29nSUNBZ2NtVnVaR1Z5WlhJdWNtVmhaRkpsYm1SbGNsUmhjbWRsZEZCcGVHVnNjeWh3YVdOcmFXNW5YM1JoY21kbGRDd2dlQ3dnZVN3Z2R5d2dhQ3dnY0dsNFpXeGZZbmwwWlhNcE93b2dJQ0FnWTI5dWMzUWdjR2xqYTJWa1gzQnNiM1J6SUQwZ2UzMDdDaUFnSUNCamIyNXpkQ0J3YVdOclpXUmZjR3h2ZEhOZllYSnlZWGtnUFNCYlhUc0tJQ0FnSUdOdmJuTjBJSEpsYVc1MFpYSndjbVYwWDNacFpYY2dQU0J1WlhjZ1JHRjBZVlpwWlhjb2NHbDRaV3hmWW5sMFpYTXVZblZtWm1WeUtUc0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQTdJR2tnUENCd2FYaGxiRjlpZVhSbGN5NXNaVzVuZEdnZ0x5QTBPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHTnZibk4wSUdsa0lEMGdjbVZwYm5SbGNuQnlaWFJmZG1sbGR5NW5aWFJWYVc1ME1UWW9hU0FxSURRcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUdsdVpHVjRJRDBnY21WcGJuUmxjbkJ5WlhSZmRtbGxkeTVuWlhSVmFXNTBNVFlvYVNBcUlEUWdLeUF5S1RzS0lDQWdJQ0FnSUNCd2FXTnJaV1JmY0d4dmRITmZZWEp5WVhrdWNIVnphQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGtMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQW9nSUNBZ0lDQWdJRjBwT3dvZ0lDQWdJQ0FnSUhCcFkydGxaRjl3Ykc5MGMxdHBaRjBnUFNCcGJtUmxlRHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEJzYjNSeklEMGdXMTA3Q2lBZ0lDQmpiMjV6ZENCcFpGOTBiMTl3Ykc5MElEMGdlMzA3Q2lBZ0lDQnpaWFJmY0dsamEybHVaMTkxYm1sbWIzSnRjeWh6WTJWdVpTd2dNQ3dnWm1Gc2MyVXNJSEJwWTJ0bFpGOXdiRzkwY3l3Z2NHeHZkSE1zSUdsa1gzUnZYM0JzYjNRcE93b2dJQ0FnWTI5dWMzUWdjR2xqYTJWa1gzQnNiM1J6WDIxaGRISnBlQ0E5SUhCcFkydGxaRjl3Ykc5MGMxOWhjbkpoZVM1dFlYQW9LRnRwWkN3Z2FXNWtaWGhkS1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhBZ1BTQnBaRjkwYjE5d2JHOTBXMmxrWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSUNBZ0lDQndJRDhnY0M1d2JHOTBYM1YxYVdRZ09pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5S1RzS0lDQWdJR052Ym5OMElIQnNiM1JmYldGMGNtbDRJRDBnZXdvZ0lDQWdJQ0FnSUdSaGRHRTZJSEJwWTJ0bFpGOXdiRzkwYzE5dFlYUnlhWGdzQ2lBZ0lDQWdJQ0FnYzJsNlpUb2dXd29nSUNBZ0lDQWdJQ0FnSUNCM0xBb2dJQ0FnSUNBZ0lDQWdJQ0JvQ2lBZ0lDQWdJQ0FnWFFvZ0lDQWdmVHNLSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ2NHeHZkRjl0WVhSeWFYZ3NDaUFnSUNBZ0lDQWdjR3h2ZEhNS0lDQWdJRjA3Q24wS1puVnVZM1JwYjI0Z2NHbGphMTlqYkc5elpYTjBLSE5qWlc1bExDQjRlU3dnY21GdVoyVXBJSHNLSUNBZ0lHTnZibk4wSUhzZ2NtVnVaR1Z5WlhJZ0lIMGdQU0J6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQmJkMmxrZEdnc0lHaGxhV2RvZEYwZ1BTQmJDaUFnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVYM2RwWkhSb0xBb2dJQ0FnSUNBZ0lISmxibVJsY21WeUxsOW9aV2xuYUhRS0lDQWdJRjA3Q2lBZ0lDQnBaaUFvSVNneExqQWdQRDBnZUhsYk1GMGdQRDBnZDJsa2RHZ2dKaVlnTVM0d0lEdzlJSGg1V3pGZElEdzlJR2hsYVdkb2RDa3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElIZ3dJRDBnVFdGMGFDNXRZWGdvTVN3Z2VIbGJNRjBnTFNCeVlXNW5aU2s3Q2lBZ0lDQmpiMjV6ZENCNU1DQTlJRTFoZEdndWJXRjRLREVzSUhoNVd6RmRJQzBnY21GdVoyVXBPd29nSUNBZ1kyOXVjM1FnZURFZ1BTQk5ZWFJvTG0xcGJpaDNhV1IwYUN3Z1RXRjBhQzVtYkc5dmNpaDRlVnN3WFNBcklISmhibWRsS1NrN0NpQWdJQ0JqYjI1emRDQjVNU0E5SUUxaGRHZ3ViV2x1S0dobGFXZG9kQ3dnVFdGMGFDNW1iRzl2Y2loNGVWc3hYU0FySUhKaGJtZGxLU2s3Q2lBZ0lDQmpiMjV6ZENCa2VDQTlJSGd4SUMwZ2VEQTdDaUFnSUNCamIyNXpkQ0JrZVNBOUlIa3hJQzBnZVRBN0NpQWdJQ0JqYjI1emRDQmJjR3h2ZEY5a1lYUmhMQ0JmWFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRNQ3dnZVRBc0lHUjRMQ0JrZVNrN0NpQWdJQ0JqYjI1emRDQndiRzkwWDIxaGRISnBlQ0E5SUhCc2IzUmZaR0YwWVM1a1lYUmhPd29nSUNBZ2JHVjBJRzFwYmw5a2FYTjBJRDBnY21GdVoyVWdYaUF5T3dvZ0lDQWdiR1YwSUhObGJHVmpkR2x2YmlBOUlGc0tJQ0FnSUNBZ0lDQnVkV3hzTEFvZ0lDQWdJQ0FnSURBS0lDQWdJRjA3Q2lBZ0lDQmpiMjV6ZENCNElEMGdlSGxiTUYwZ0t5QXhJQzBnZURBN0NpQWdJQ0JqYjI1emRDQjVJRDBnZUhsYk1WMGdLeUF4SUMwZ2VUQTdDaUFnSUNCc1pYUWdjR2x1WkdWNElEMGdNRHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREU3SUdrZ1BEMGdaSGc3SUdrckt5bDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnFJRDBnTVRzZ2FpQThQU0JrZURzZ2Fpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkNBOUlIZ2dMU0JwSUY0Z01pQXJJQ2g1SUMwZ2Fpa2dYaUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCYmNHeHZkRjkxZFdsa0xDQnBibVJsZUYwZ1BTQndiRzkwWDIxaGRISnBlRnR3YVc1a1pYaGRPd29nSUNBZ0lDQWdJQ0FnSUNCd2FXNWtaWGdnUFNCd2FXNWtaWGdnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pDQThJRzFwYmw5a2FYTjBJQ1ltSUhCc2IzUmZkWFZwWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVYMlJwYzNRZ1BTQmtPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZzWldOMGFXOXVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1JmZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCelpXeGxZM1JwYjI0N0NuMEtablZ1WTNScGIyNGdjR2xqYTE5emIzSjBaV1FvYzJObGJtVXNJSGg1TENCeVlXNW5aU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QnlaVzVrWlhKbGNpQWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJRnQzYVdSMGFDd2dhR1ZwWjJoMFhTQTlJRnNLSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxjaTVmZDJsa2RHZ3NDaUFnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVYMmhsYVdkb2RBb2dJQ0FnWFRzS0lDQWdJR2xtSUNnaEtERXVNQ0E4UFNCNGVWc3dYU0E4UFNCM2FXUjBhQ0FtSmlBeExqQWdQRDBnZUhsYk1WMGdQRDBnYUdWcFoyaDBLU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2VEQWdQU0JOWVhSb0xtMWhlQ2d4TENCNGVWc3dYU0F0SUhKaGJtZGxLVHNLSUNBZ0lHTnZibk4wSUhrd0lEMGdUV0YwYUM1dFlYZ29NU3dnZUhsYk1WMGdMU0J5WVc1blpTazdDaUFnSUNCamIyNXpkQ0I0TVNBOUlFMWhkR2d1YldsdUtIZHBaSFJvTENCTllYUm9MbVpzYjI5eUtIaDVXekJkSUNzZ2NtRnVaMlVwS1RzS0lDQWdJR052Ym5OMElIa3hJRDBnVFdGMGFDNXRhVzRvYUdWcFoyaDBMQ0JOWVhSb0xtWnNiMjl5S0hoNVd6RmRJQ3NnY21GdVoyVXBLVHNLSUNBZ0lHTnZibk4wSUdSNElEMGdlREVnTFNCNE1Ec0tJQ0FnSUdOdmJuTjBJR1I1SUQwZ2VURWdMU0I1TURzS0lDQWdJR052Ym5OMElGdHdiRzkwWDJSaGRHRXNJSE5sYkdWamRHVmtYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNE1Dd2dlVEFzSUdSNExDQmtlU2s3Q2lBZ0lDQnBaaUFvYzJWc1pXTjBaV1F1YkdWdVozUm9JRDA5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEJzYjNSZmJXRjBjbWw0SUQwZ2NHeHZkRjlrWVhSaExtUmhkR0U3Q2lBZ0lDQmpiMjV6ZENCa2FYTjBZVzVqWlhNZ1BTQnpaV3hsWTNSbFpDNXRZWEFvS0hncFBUNXlZVzVuWlNCZUlESXBPd29nSUNBZ1kyOXVjM1FnZUNBOUlIaDVXekJkSUNzZ01TQXRJSGd3T3dvZ0lDQWdZMjl1YzNRZ2VTQTlJSGg1V3pGZElDc2dNU0F0SUhrd093b2dJQ0FnYkdWMElIQnBibVJsZUNBOUlEQTdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXhPeUJwSUR3OUlHUjRPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FpQTlJREU3SUdvZ1BEMGdaSGc3SUdvckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1FnUFNCNElDMGdhU0JlSURJZ0t5QW9lU0F0SUdvcElGNGdNanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJzYjNSZmJXRjBjbWw0TG14bGJtZDBhQ0E4UFNCd2FXNWtaWGdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MFgzVjFhV1FzSUdsdVpHVjRYU0E5SUhCc2IzUmZiV0YwY21sNFczQnBibVJsZUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSEJwYm1SbGVDQTlJSEJwYm1SbGVDQXJJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCc2IzUmZhVzVrWlhnZ1BTQnpaV3hsWTNSbFpDNW1hVzVrU1c1a1pYZ29LSGdwUFQ1NFd6QmRMbkJzYjNSZmRYVnBaQ0E5UFNCd2JHOTBYM1YxYVdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NHeHZkRjlwYm1SbGVDQStQU0F3SUNZbUlHUWdQQ0JrYVhOMFlXNWpaWE5iY0d4dmRGOXBibVJsZUYwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObGMxdHdiRzkwWDJsdVpHVjRYU0E5SUdRN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamIyNXpkQ0J6YjNKMFpXUmZhVzVrYVdObGN5QTlJRUZ5Y21GNUxtWnliMjBvUVhKeVlYa29aR2x6ZEdGdVkyVnpMbXhsYm1kMGFDa3VhMlY1Y3lncEtTNXpiM0owS0NoaExDQmlLVDArWkdsemRHRnVZMlZ6VzJGZElEd2daR2x6ZEdGdVkyVnpXMkpkSUQ4Z0xURWdPaUJrYVhOMFlXNWpaWE5iWWwwZ1BDQmthWE4wWVc1alpYTmJZVjBnZkNBd0tUc0tJQ0FnSUhKbGRIVnliaUJ6YjNKMFpXUmZhVzVrYVdObGN5NXRZWEFvS0dsa2VDazlQbnNLSUNBZ0lDQWdJQ0JqYjI1emRDQmJjR3h2ZEN3Z2FXNWtaWGhkSUQwZ2MyVnNaV04wWldSYmFXUjRYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNCd2JHOTBMbkJzYjNSZmRYVnBaQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGdLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z2NHbGphMTl1WVhScGRtVmZkWFZwWkNoelkyVnVaU3dnZUN3Z2VTd2dkeXdnYUNrZ2V3b2dJQ0FnWTI5dWMzUWdXMThzSUhCcFkydGxaRjl3Ykc5MGMxMGdQU0J3YVdOclgyNWhkR2wyWlNoelkyVnVaU3dnZUN3Z2VTd2dkeXdnYUNrN0NpQWdJQ0J5WlhSMWNtNGdjR2xqYTJWa1gzQnNiM1J6TG0xaGNDZ29XM0FzSUdsdVpHVjRYU2s5UGxzS0lDQWdJQ0FnSUNBZ0lDQWdjQzV3Ykc5MFgzVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0Q2lBZ0lDQWdJQ0FnWFNrN0NuMEtablZ1WTNScGIyNGdjR2xqYTE5dVlYUnBkbVZmYldGMGNtbDRLSE5qWlc1bExDQjRMQ0I1TENCM0xDQm9LU0I3Q2lBZ0lDQmpiMjV6ZENCYmJXRjBjbWw0TENCZlhTQTlJSEJwWTJ0ZmJtRjBhWFpsS0hOalpXNWxMQ0I0TENCNUxDQjNMQ0JvS1RzS0lDQWdJSEpsZEhWeWJpQnRZWFJ5YVhnN0NuMEtablZ1WTNScGIyNGdjbVZuYVhOMFpYSmZjRzl3ZFhBb2NHOXdkWEFzSUhOalpXNWxMQ0J3Ykc5MGMxOTBiMTl3YVdOckxDQmpZV3hzWW1GamF5a2dld29nSUNBZ2FXWWdLQ0Z6WTJWdVpTQjhmQ0FoYzJObGJtVXVjMk55WldWdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2V5QmpZVzUyWVhNZ0lIMGdQU0J6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqWVc1MllYTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2liVzkxYzJWa2IzZHVJaXdnS0dWMlpXNTBLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNVhTQTlJR1YyWlc1MGN6SjFibWwwYkdWemN5aHpZMlZ1WlM1elkzSmxaVzRzSUdWMlpXNTBLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmJYeXdnY0dsamEzTmRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnc0lIa3NJREVzSURFcE93b2dJQ0FnSUNBZ0lHbG1JQ2h3YVdOcmN5NXNaVzVuZEdnZ1BUMGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCYmNHeHZkQ3dnYVc1a1pYaGRJRDBnY0dsamEzTmJNRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Ykc5MGMxOTBiMTl3YVdOckxtaGhjeWh3Ykc5MExuQnNiM1JmZFhWcFpDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElISmxjM1ZzZENBOUlHTmhiR3hpWVdOcktIQnNiM1FzSUdsdVpHVjRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGNHOXdkWEF1WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0NKemFHOTNJaWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdVlXUmtLQ0p6YUc5M0lpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1emRIbHNaUzVzWldaMElEMGdaWFpsYm5RdWNHRm5aVmdnS3lBaWNIZ2lPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl3ZFhBdWMzUjViR1V1ZEc5d0lEMGdaWFpsYm5RdWNHRm5aVmtnS3lBaWNIZ2lPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ5WlhOMWJIUWdQVDA5SUNKemRISnBibWNpSUh4OElISmxjM1ZzZENCcGJuTjBZVzVqWlc5bUlGTjBjbWx1WnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2Y0hWd0xtbHVibVZ5VkdWNGRDQTlJSEpsYzNWc2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl3ZFhBdWFXNXVaWEpJVkUxTUlEMGdjbVZ6ZFd4ME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkWEF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2dpYzJodmR5SXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd29nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW10bGVYVndJaXdnS0dWMlpXNTBLVDArZXdvZ0lDQWdJQ0FnSUdsbUlDaGxkbVZ1ZEM1clpYa2dQVDA5SUNKRmMyTmhjR1VpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJ2Y0hWd0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0luTm9iM2NpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5S1RzS2ZRcDNhVzVrYjNjdVYwZE1JRDBnZXdvZ0lDQWdaR1Z6WlhKcFlXeHBlbVZmYzJObGJtVXNDaUFnSUNCMGFISmxaV3B6WDIxdlpIVnNaU3dLSUNBZ0lITjBZWEowWDNKbGJtUmxjbXh2YjNBc0NpQWdJQ0JrWld4bGRHVmZjR3h2ZEhNc0NpQWdJQ0JwYm5ObGNuUmZjR3h2ZEN3S0lDQWdJR1pwYm1SZmNHeHZkSE1zQ2lBZ0lDQmtaV3hsZEdWZmMyTmxibVVzQ2lBZ0lDQm1hVzVrWDNOalpXNWxMQW9nSUNBZ2MyTmxibVZmWTJGamFHVXNDaUFnSUNCd2JHOTBYMk5oWTJobExBb2dJQ0FnWkdWc1pYUmxYM05qWlc1bGN5d0tJQ0FnSUdOeVpXRjBaVjl6WTJWdVpTd0tJQ0FnSUdWMlpXNTBjekoxYm1sMGJHVnpjeXdLSUNBZ0lHOXVYMjVsZUhSZmFXNXpaWEowTEFvZ0lDQWdjbVZuYVhOMFpYSmZjRzl3ZFhBc0NpQWdJQ0J5Wlc1a1pYSmZjMk5sYm1VS2ZUc0taWGh3YjNKMElIc2daR1Z6WlhKcFlXeHBlbVZmYzJObGJtVWdZWE1nWkdWelpYSnBZV3hwZW1WZmMyTmxibVVzSUhSb2NtVmxhbk5mYlc5a2RXeGxJR0Z6SUhSb2NtVmxhbk5mYlc5a2RXeGxMQ0J6ZEdGeWRGOXlaVzVrWlhKc2IyOXdJR0Z6SUhOMFlYSjBYM0psYm1SbGNteHZiM0FzSUdSbGJHVjBaVjl3Ykc5MGN5QmhjeUJrWld4bGRHVmZjR3h2ZEhNc0lHbHVjMlZ5ZEY5d2JHOTBJR0Z6SUdsdWMyVnlkRjl3Ykc5MExDQm1hVzVrWDNCc2IzUnpJR0Z6SUdacGJtUmZjR3h2ZEhNc0lHUmxiR1YwWlY5elkyVnVaU0JoY3lCa1pXeGxkR1ZmYzJObGJtVXNJR1pwYm1SZmMyTmxibVVnWVhNZ1ptbHVaRjl6WTJWdVpTd2djMk5sYm1WZlkyRmphR1VnWVhNZ2MyTmxibVZmWTJGamFHVXNJSEJzYjNSZlkyRmphR1VnWVhNZ2NHeHZkRjlqWVdOb1pTd2daR1ZzWlhSbFgzTmpaVzVsY3lCaGN5QmtaV3hsZEdWZmMyTmxibVZ6TENCamNtVmhkR1ZmYzJObGJtVWdZWE1nWTNKbFlYUmxYM05qWlc1bExDQmxkbVZ1ZEhNeWRXNXBkR3hsYzNNZ1lYTWdaWFpsYm5Sek1uVnVhWFJzWlhOekxDQnZibDl1WlhoMFgybHVjMlZ5ZENCaGN5QnZibDl1WlhoMFgybHVjMlZ5ZENCOU93cGxlSEJ2Y25RZ2V5QnlaVzVrWlhKZmMyTmxibVVnWVhNZ2NtVnVaR1Z5WDNOalpXNWxJSDA3Q21WNGNHOXlkQ0I3SUhkbmJHVnljbTl5SUdGeklIZG5iR1Z5Y205eUlIMDdDbVY0Y0c5eWRDQjdJSEJwWTJ0ZmJtRjBhWFpsSUdGeklIQnBZMnRmYm1GMGFYWmxJSDA3Q21WNGNHOXlkQ0I3SUhCcFkydGZZMnh2YzJWemRDQmhjeUJ3YVdOclgyTnNiM05sYzNRZ2ZUc0taWGh3YjNKMElIc2djR2xqYTE5emIzSjBaV1FnWVhNZ2NHbGphMTl6YjNKMFpXUWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXVZWFJwZG1WZmRYVnBaQ0JoY3lCd2FXTnJYMjVoZEdsMlpWOTFkV2xrSUgwN0NtVjRjRzl5ZENCN0lIQnBZMnRmYm1GMGFYWmxYMjFoZEhKcGVDQmhjeUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdnZlRzS1pYaHdiM0owSUhzZ2NtVm5hWE4wWlhKZmNHOXdkWEFnWVhNZ2NtVm5hWE4wWlhKZmNHOXdkWEFnZlRzS0NnPT1gOwogICAgICAgICAgICByZXR1cm4gaW1wb3J0KEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddKTsKICAgICAgICB9KSgpLnRoZW4oV0dMID0+IHsKICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVuZGVyZXIgPSBXR0wuY3JlYXRlX3NjZW5lKAogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjMiXScpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjQiXScpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzE3MDgyNTc1MDM1MzU3Mzc3NzA3JyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnNzAzNDg1MTU0NDg2MTI5OTkyOCcpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzg2ODE3MjU3ODAzNTYyNzcxMDcnKSwgNjAwLCA0NTAsCiAgICAgICAgICAgIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMTA0ODUwMTgwNzA3MzQwMzA5OTcnKSwgMzAuMCwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc3MjE0NTc3MTg0OTI3MDg3MzEyJyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnNzIxNDU3NzE4NDkyNzA4NzMxMicpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzcyMTQ1NzcxODQ5MjcwODczMTInKQogICAgICAgICkKICAgICAgICBjb25zdCBnbCA9IHJlbmRlcmVyLmdldENvbnRleHQoKQogICAgICAgIGNvbnN0IGVyciA9IGdsLmdldEVycm9yKCkKICAgICAgICBpZiAoZXJyICE9IGdsLk5PX0VSUk9SKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiV2ViR0wgZXJyb3I6ICIgKyBXR0wud2dsZXJyb3IoZ2wsIGVycikpCiAgICAgICAgfQogICAgICAgIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMTYxOTczOTEzMTYyOTgwMDk5MjknKS5ub3RpZnkodHJ1ZSkKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBKU1NlcnZlLkNvbm5lY3Rpb24uc2VuZF9lcnJvcigiZXJyb3IgaW5pdGlhbGl6aW5nIHNjZW5lIiwgZSkKICAgICAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzE2MTk3MzkxMzE2Mjk4MDA5OTI5Jykubm90aWZ5KGZhbHNlKQogICAgICAgIHJldHVybgogICAgfQp9KQrZQS9ob21lL3J1bm5lci93b3JrL01ha2llLmpsL01ha2llLmpsL1dHTE1ha2llL3NyYy90aHJlZV9wbG90LmpsOjQyqG1zZ190eXBloTKobXNnX3R5cGWhOQ==').then(msgs=> JSServe.init_session('6943b043-3013-460c-a18d-0686053a4271', msgs, 'sub'));
    })
" type="module"></script>
    <canvas style="display: block" data-jscall-id="4" tabindex="0"></canvas>
  </div>
</div>~~~
